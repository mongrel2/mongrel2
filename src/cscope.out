cscope 15 $HOME/gh/mongrel2/src               0003809105
	@adt/darray.c

35 
	~"adt/d¨øy.h
"

36 
	~"mem/hÆloc.h
"

37 
	~<as£π.h
>

40 
d¨øy_t
 *
	$d¨øy_¸óã
(
size_t
 
ñemít_size
, size_à
öôül_max
)

42 
d¨øy_t
 *
¨øy
 = 
	`h_mÆloc
((darray_t));

43 
	`check_mem
(
¨øy
);

44 
¨øy
->
max
 = 
öôül_max
;

45 
	`check
(
¨øy
->
max
 > 0, "You must setán initial_max > 0.");

47 
¨øy
->
c⁄ã¡s
 = 
	`h_ˇŒoc
((*), 
öôül_max
);

48 
	`check_mem
(
¨øy
->
c⁄ã¡s
);

49 
	`h©èch
(
¨øy
->
c⁄ã¡s
,árray);

51 
¨øy
->
íd
 = 0;

52 
¨øy
->
ñemít_size
 =Élement_size;

53 
¨øy
->
ex∑nd_øã
 = 
DEFAULT_EXPAND_RATE
;

55  
¨øy
;

57 
îr‹
:

58 if(
¨øy
Ë
	`h_‰ì
(array);

59  
NULL
;

60 
	}
}

62 
	$d¨øy_˛ór
(
d¨øy_t
 *
¨øy
)

64 
i
 = 0;

65 if(
¨øy
->
ñemít_size
 > 0) {

66 
i
 = 0; i < 
¨øy
->
max
; i++) {

67 if(
¨øy
->
c⁄ã¡s
[
i
] !
NULL
) {

68 
	`‰ì
(
¨øy
->
c⁄ã¡s
[
i
]);

72 
	}
}

74 
ölöe
 
	$d¨øy_ªsize
(
d¨øy_t
 *
¨øy
, 
size_t
 
√wsize
)

76 
¨øy
->
max
 = 
√wsize
;

77 
	`check
(
¨øy
->
max
 > 0, "TheÇewsize must be > 0.");

78 
¨øy
->
c⁄ã¡s
 = 
	`h_ªÆloc
◊ºay->c⁄ã¡s,áºay->
max
 * (*));

79 
	`check_mem
(
¨øy
->
c⁄ã¡s
);

81 
îr‹
:

83 
	}
}

85 
	$d¨øy_ex∑nd
(
d¨øy_t
 *
¨øy
)

87 
size_t
 
ﬁd_max
 = 
¨øy
->
max
;

88 
	`check
(
	`d¨øy_ªsize
(
¨øy
,áºay->
max
 +áºay->
ex∑nd_øã
) == 0,

90 
¨øy
->
max
 + (Ôºay->
ex∑nd_øã
);

92 
	`mem£t
(
¨øy
->
c⁄ã¡s
 + 
ﬁd_max
, 0,áºay->
ex∑nd_øã
 + 1);

95 
îr‹
:

97 
	}
}

99 
	$d¨øy_c⁄åa˘
(
d¨øy_t
 *
¨øy
)

101 
√w_size
 = 
¨øy
->
íd
 < (Ôºay->
ex∑nd_øã
 ? ()array->expand_rate :árray->end;

103  
	`d¨øy_ªsize
(
¨øy
, 
√w_size
 + 1);

104 
	}
}

107 
	$d¨øy_de°roy
(
d¨øy_t
 *
¨øy
)

109 
	`h_‰ì
(
¨øy
);

110 
	}
}

112 
	$d¨øy_˛ór_de°roy
(
d¨øy_t
 *
¨øy
)

114 
	`d¨øy_˛ór
(
¨øy
);

115 
	`d¨øy_de°roy
(
¨øy
);

116 
	}
}

118 
	$d¨øy_push
(
d¨øy_t
 *
¨øy
, *
ñ
)

120 
¨øy
->
c⁄ã¡s
[¨øy->
íd
] = 
ñ
;

121 
¨øy
->
íd
++;

123 if(
	`d¨øy_íd
(
¨øy
Ë>
	`d¨øy_max
(array)) {

124  
	`d¨øy_ex∑nd
(
¨øy
);

128 
	}
}

130 *
	$d¨øy_p›
(
d¨øy_t
 *
¨øy
)

132 
	`check
(
¨øy
->
íd
 - 1 >= 0, "AttemptÅoÖop fromÉmptyárray.");

134 *
ñ
 = 
	`d¨øy_ªmove
(
¨øy
,áºay->
íd
 - 1);

135 
¨øy
->
íd
--;

137 if(
	`d¨øy_íd
(
¨øy
Ë> (Ôºay->
ex∑nd_øã
 && darray_end(array) %árray->expand_rate) {

138 
	`d¨øy_c⁄åa˘
(
¨øy
);

141  
ñ
;

142 
îr‹
:

143  
NULL
;

144 
	}
}

146 
	$d¨øy_ö£π
(
d¨øy_t
 *
¨øy
, 
i
, *
ñ
)

148 
¨øy
->
íd
++;

150 if(
	`d¨øy_íd
(
¨øy
Ë>
	`d¨øy_max
(array)) {

151 if(
	`d¨øy_ex∑nd
(
¨øy
) != 0) {

156 
n
;

157 
n
 = 
¨øy
->
íd
 - 1;Ç > 
i
;Ç--) {

158 
¨øy
->
c⁄ã¡s
[
n
] =árray->contents[n - 1];

161 
¨øy
->
c⁄ã¡s
[
i
] = 
ñ
;

162 
	}
}

	@adt/darray.h

1 #i‚de‡
_d¨øy_h


2 
	#_d¨øy_h


	)

3 
	~"dbg.h
"

4 
	~<°dlib.h
>

5 
	~<as£π.h
>

6 
	~"mem/hÆloc.h
"

8 
	sd¨øy_t
 {

9 
	míd
;

10 
	mmax
;

11 
size_t
 
	mñemít_size
;

12 
size_t
 
	mex∑nd_øã
;

13 **
	mc⁄ã¡s
;

14 } 
	td¨øy_t
;

16 
d¨øy_t
 *
d¨øy_¸óã
(
size_t
 
ñemít_size
, size_à
öôül_max
);

18 
d¨øy_de°roy
(
d¨øy_t
 *
¨øy
);

20 
d¨øy_˛ór
(
d¨øy_t
 *
¨øy
);

22 
d¨øy_ex∑nd
(
d¨øy_t
 *
¨øy
);

24 
d¨øy_c⁄åa˘
(
d¨øy_t
 *
¨øy
);

26 
d¨øy_push
(
d¨øy_t
 *
¨øy
, *
ñ
);

28 *
d¨øy_p›
(
d¨øy_t
 *
¨øy
);

30 
d¨øy_ö£π
(
d¨øy_t
 *
¨øy
, 
i
, *
ñ
);

32 
d¨øy_˛ór_de°roy
(
d¨øy_t
 *
¨øy
);

34 
	#d¨øy_œ°
(
A
Ë((A)->
c⁄ã¡s
[(A)->
íd
 - 1])

	)

35 
	#d¨øy_fú°
(
A
Ë((A)->
c⁄ã¡s
[0])

	)

36 
	#d¨øy_íd
(
A
Ë((A)->
íd
)

	)

37 
	#d¨øy_max
(
A
Ë((A)->
max
)

	)

39 
	#DEFAULT_EXPAND_RATE
 300

	)

42 
ölöe
 
	$d¨øy_£t
(
d¨øy_t
 *
¨øy
, 
i
, *
ñ
)

44 
	`check
(
i
 < 
¨øy
->
max
, "darrayáttemptÅo setÖast max");

45 
¨øy
->
c⁄ã¡s
[
i
] = 
ñ
;

46 
îr‹
:

48 
	}
}

50 
ölöe
 *
	$d¨øy_gë
(
d¨øy_t
 *
¨øy
, 
i
)

52 
	`check
(
i
 < 
¨øy
->
max
, "darrayáttemptÅo getÖast max");

53  
¨øy
->
c⁄ã¡s
[
i
];

54 
îr‹
:

55  
NULL
;

56 
	}
}

58 
ölöe
 *
	$d¨øy_ªmove
(
d¨øy_t
 *
¨øy
, 
i
)

60 *
ñ
 = 
¨øy
->
c⁄ã¡s
[
i
];

62 
¨øy
->
c⁄ã¡s
[
i
] = 
NULL
;

64  
ñ
;

65 
	}
}

67 
ölöe
 *
	$d¨øy_√w
(
d¨øy_t
 *
¨øy
)

69 
	`check
(
¨øy
->
ñemít_size
 > 0, "Can't use darray_new on 0 size darrays.");

71  
	`h_ˇŒoc
(1, 
¨øy
->
ñemít_size
);

73 
îr‹
:

74  
NULL
;

75 
	}
}

77 
	#d¨øy_‰ì
(
E
Ë
	`h_‰ì
((E))

	)

78 
	#d¨øy_©èch
(
A
, 
E
Ë
	`h©èch
((E), (A))

	)

	@adt/dict.c

21 
	~<°dlib.h
>

22 
	~<°ddef.h
>

23 
	~<as£π.h
>

24 
	#DICT_IMPLEMENTATION


	)

25 
	~"di˘.h
"

27 #ifde‡
KAZLIB_RCSID


28 c⁄° 
	grcsid
[] = "$Id: dict.c,v 1.40.2.7 2000/11/13 01:36:44 kaz Exp $";

43 
	#À·
 
di˘_À·


	)

44 
	#right
 
di˘_right


	)

45 
	#∑ª¡
 
di˘_∑ª¡


	)

46 
	#cﬁ‹
 
di˘_cﬁ‹


	)

47 
	#key
 
di˘_key


	)

48 
	#d©a
 
di˘_d©a


	)

50 
	#nûnode
 
di˘_nûnode


	)

51 
	#nodecou¡
 
di˘_nodecou¡


	)

52 
	#maxcou¡
 
di˘_maxcou¡


	)

53 
	#com∑ª
 
di˘_com∑ª


	)

54 
	#Ælo˙ode
 
di˘_Ælo˙ode


	)

55 
	#‰ìnode
 
di˘_‰ìnode


	)

56 
	#c⁄ãxt
 
di˘_c⁄ãxt


	)

57 
	#du≥s
 
di˘_du≥s


	)

59 
	#di˘±r
 
di˘_di˘±r


	)

61 
	#di˘_roŸ
(
D
Ë((D)->
nûnode
.
À·
)

	)

62 
	#di˘_nû
(
D
Ë(&(D)->
nûnode
)

	)

63 
	#DICT_DEPTH_MAX
 64

	)

65 
dnode_t
 *
dnode_Æloc
(*
c⁄ãxt
);

66 
dnode_‰ì
(
dnode_t
 *
node
, *
c⁄ãxt
);

75 
	$rŸ©e_À·
(
dnode_t
 *
uµî
)

77 
dnode_t
 *
lowî
, *
lowÀ·
, *
uµ¨ít
;

79 
lowî
 = 
uµî
->
right
;

80 
uµî
->
right
 = 
lowÀ·
 = 
lowî
->
À·
;

81 
lowÀ·
->
∑ª¡
 = 
uµî
;

83 
lowî
->
∑ª¡
 = 
uµ¨ít
 = 
uµî
->parent;

88 i‡(
uµî
 =
uµ¨ít
->
À·
) {

89 
uµ¨ít
->
À·
 = 
lowî
;

91 
	`as£π
 (
uµî
 =
uµ¨ít
->
right
);

92 
uµ¨ít
->
right
 = 
lowî
;

95 
lowî
->
À·
 = 
uµî
;

96 
uµî
->
∑ª¡
 = 
lowî
;

97 
	}
}

104 
	$rŸ©e_right
(
dnode_t
 *
uµî
)

106 
dnode_t
 *
lowî
, *
lowright
, *
uµ¨ít
;

108 
lowî
 = 
uµî
->
À·
;

109 
uµî
->
À·
 = 
lowright
 = 
lowî
->
right
;

110 
lowright
->
∑ª¡
 = 
uµî
;

112 
lowî
->
∑ª¡
 = 
uµ¨ít
 = 
uµî
->parent;

114 i‡(
uµî
 =
uµ¨ít
->
right
) {

115 
uµ¨ít
->
right
 = 
lowî
;

117 
	`as£π
 (
uµî
 =
uµ¨ít
->
À·
);

118 
uµ¨ít
->
À·
 = 
lowî
;

121 
lowî
->
right
 = 
uµî
;

122 
uµî
->
∑ª¡
 = 
lowî
;

123 
	}
}

130 
	$‰ì_nodes
(
di˘_t
 *
di˘
, 
dnode_t
 *
node
, dnode_à*
nû
)

132 i‡(
node
 =
nû
)

134 
	`‰ì_nodes
(
di˘
, 
node
->
À·
, 
nû
);

135 
	`‰ì_nodes
(
di˘
, 
node
->
right
, 
nû
);

136 
di˘
->
	`‰ìnode
(
node
, di˘->
c⁄ãxt
);

137 
	}
}

148 
	$vîify_böåì
(
di˘_t
 *
di˘
)

150 
dnode_t
 *
fú°
, *
√xt
;

152 
fú°
 = 
	`di˘_fú°
(
di˘
);

154 i‡(
di˘
->
du≥s
) {

155 
fú°
 && (
√xt
 = 
	`di˘_√xt
(
di˘
, first))) {

156 i‡(
di˘
->
	`com∑ª
(
fú°
->
key
, 
√xt
->key) > 0)

158 
fú°
 = 
√xt
;

161 
fú°
 && (
√xt
 = 
	`di˘_√xt
(
di˘
, first))) {

162 i‡(
di˘
->
	`com∑ª
(
fú°
->
key
, 
√xt
->key) >= 0)

164 
fú°
 = 
√xt
;

168 
	}
}

184 
	$vîify_ªdbœck
(
dnode_t
 *
nû
, dnode_à*
roŸ
)

186 
height_À·
, 
height_right
;

188 i‡(
roŸ
 !
nû
) {

189 
height_À·
 = 
	`vîify_ªdbœck
(
nû
, 
roŸ
->
À·
);

190 
height_right
 = 
	`vîify_ªdbœck
(
nû
, 
roŸ
->
right
);

191 i‡(
height_À·
 =0 || 
height_right
 == 0)

193 i‡(
height_À·
 !
height_right
)

195 i‡(
roŸ
->
cﬁ‹
 =
dnode_ªd
) {

196 i‡(
roŸ
->
À·
->
cﬁ‹
 !
dnode_bœck
)

198 i‡(
roŸ
->
right
->
cﬁ‹
 !
dnode_bœck
)

200  
height_À·
;

202 i‡(
roŸ
->
cﬁ‹
 !
dnode_bœck
)

204  
height_À·
 + 1;

207 
	}
}

215 
di˘cou¡_t
 
	$vîify_node_cou¡
(
dnode_t
 *
nû
, dnode_à*
roŸ
)

217 i‡(
roŸ
 =
nû
)

220  1 + 
	`vîify_node_cou¡
(
nû
, 
roŸ
->
À·
)

221 + 
	`vîify_node_cou¡
(
nû
, 
roŸ
->
right
);

222 
	}
}

231 
	$vîify_di˘_has_node
(
dnode_t
 *
nû
, dnode_à*
roŸ
, dnode_à*
node
)

233 i‡(
roŸ
 !
nû
) {

234  
roŸ
 =
node


235 || 
	`vîify_di˘_has_node
(
nû
, 
roŸ
->
À·
, 
node
)

236 || 
	`vîify_di˘_has_node
(
nû
, 
roŸ
->
right
, 
node
);

239 
	}
}

246 
di˘_t
 *
	$di˘_¸óã
(
di˘cou¡_t
 
maxcou¡
, 
di˘_comp_t
 
comp
)

248 
di˘_t
 *
√w
 = 
	`mÆloc
( *new);

250 i‡(
√w
) {

251 
√w
->
com∑ª
 = 
comp
;

252 
√w
->
Ælo˙ode
 = 
dnode_Æloc
;

253 
√w
->
‰ìnode
 = 
dnode_‰ì
;

254 
√w
->
c⁄ãxt
 = 
NULL
;

255 
√w
->
nodecou¡
 = 0;

256 
√w
->
maxcou¡
 = maxcount;

257 
√w
->
nûnode
.
À·
 = &new->nilnode;

258 
√w
->
nûnode
.
right
 = &new->nilnode;

259 
√w
->
nûnode
.
∑ª¡
 = &new->nilnode;

260 
√w
->
nûnode
.
cﬁ‹
 = 
dnode_bœck
;

261 
√w
->
du≥s
 = 0;

263  
√w
;

264 
	}
}

270 
	$di˘_£t_Æloˇt‹
(
di˘_t
 *
di˘
, 
dnode_Æloc_t
 
Æ
,

271 
dnode_‰ì_t
 
‰
, *
c⁄ãxt
)

273 
	`as£π
 (
	`di˘_cou¡
(
di˘
) == 0);

274 
	`as£π
 ((
Æ
 =
NULL
 && 
‰
 == NULL) || (al != NULL && fr != NULL));

276 
di˘
->
Ælo˙ode
 = 
Æ
 ?á»: 
dnode_Æloc
;

277 
di˘
->
‰ìnode
 = 
‰
 ? f∏: 
dnode_‰ì
;

278 
di˘
->
c⁄ãxt
 = context;

279 
	}
}

286 
	$di˘_de°roy
(
di˘_t
 *
di˘
)

288 
	`as£π
 (
	`di˘_i£m±y
(
di˘
));

289 
	`‰ì
(
di˘
);

290 
	}
}

297 
	$di˘_‰ì_nodes
(
di˘_t
 *
di˘
)

299 
dnode_t
 *
nû
 = 
	`di˘_nû
(
di˘
), *
roŸ
 = 
	`di˘_roŸ
(dict);

300 
	`‰ì_nodes
(
di˘
, 
roŸ
, 
nû
);

301 
di˘
->
nodecou¡
 = 0;

302 
di˘
->
nûnode
.
À·
 = &dict->nilnode;

303 
di˘
->
nûnode
.
right
 = &dict->nilnode;

304 
	}
}

310 
	$di˘_‰ì
(
di˘_t
 *
di˘
)

312 #ifde‡
KAZLIB_OBSOLESCENT_DEBUG


313 
	`as£π
 ("callÅo obsolescent function dict_free()" && 0);

315 
	`di˘_‰ì_nodes
(
di˘
);

316 
	}
}

322 
di˘_t
 *
	$di˘_öô
(
di˘_t
 *
di˘
, 
di˘cou¡_t
 
maxcou¡
, 
di˘_comp_t
 
comp
)

324 
di˘
->
com∑ª
 = 
comp
;

325 
di˘
->
Ælo˙ode
 = 
dnode_Æloc
;

326 
di˘
->
‰ìnode
 = 
dnode_‰ì
;

327 
di˘
->
c⁄ãxt
 = 
NULL
;

328 
di˘
->
nodecou¡
 = 0;

329 
di˘
->
maxcou¡
 = maxcount;

330 
di˘
->
nûnode
.
À·
 = &dict->nilnode;

331 
di˘
->
nûnode
.
right
 = &dict->nilnode;

332 
di˘
->
nûnode
.
∑ª¡
 = &dict->nilnode;

333 
di˘
->
nûnode
.
cﬁ‹
 = 
dnode_bœck
;

334 
di˘
->
du≥s
 = 0;

335  
di˘
;

336 
	}
}

342 
	$di˘_öô_like
(
di˘_t
 *
di˘
, c⁄° di˘_à*
ãm∂©e
)

344 
di˘
->
com∑ª
 = 
ãm∂©e
->compare;

345 
di˘
->
Ælo˙ode
 = 
ãm∂©e
->allocnode;

346 
di˘
->
‰ìnode
 = 
ãm∂©e
->freenode;

347 
di˘
->
c⁄ãxt
 = 
ãm∂©e
->context;

348 
di˘
->
nodecou¡
 = 0;

349 
di˘
->
maxcou¡
 = 
ãm∂©e
->maxcount;

350 
di˘
->
nûnode
.
À·
 = &dict->nilnode;

351 
di˘
->
nûnode
.
right
 = &dict->nilnode;

352 
di˘
->
nûnode
.
∑ª¡
 = &dict->nilnode;

353 
di˘
->
nûnode
.
cﬁ‹
 = 
dnode_bœck
;

354 
di˘
->
du≥s
 = 
ãm∂©e
->dupes;

356 
	`as£π
 (
	`di˘_simû¨
(
di˘
, 
ãm∂©e
));

357 
	}
}

363 
	$di˘_˛ór
(
di˘_t
 *
di˘
)

365 
di˘
->
nodecou¡
 = 0;

366 
di˘
->
nûnode
.
À·
 = &dict->nilnode;

367 
di˘
->
nûnode
.
right
 = &dict->nilnode;

368 
di˘
->
nûnode
.
∑ª¡
 = &dict->nilnode;

369 
	`as£π
 (
di˘
->
nûnode
.
cﬁ‹
 =
dnode_bœck
);

370 
	}
}

380 
	$di˘_vîify
(
di˘_t
 *
di˘
)

382 
dnode_t
 *
nû
 = 
	`di˘_nû
(
di˘
), *
roŸ
 = 
	`di˘_roŸ
(dict);

385 i‡(
roŸ
->
cﬁ‹
 !
dnode_bœck
)

387 i‡(
nû
->
cﬁ‹
 !
dnode_bœck
)

389 i‡(
nû
->
right
 !=Çil)

392 i‡(
nû
->
À·
->
∑ª¡
 !=Çil)

395 i‡(!
	`vîify_böåì
(
di˘
))

398 i‡(!
	`vîify_ªdbœck
(
nû
, 
roŸ
))

400 i‡(
	`vîify_node_cou¡
(
nû
, 
roŸ
Ë!
	`di˘_cou¡
(
di˘
))

403 
	}
}

410 
	$di˘_simû¨
(c⁄° 
di˘_t
 *
À·
, c⁄° di˘_à*
right
)

412 i‡(
À·
->
com∑ª
 !
right
->compare)

415 i‡(
À·
->
Ælo˙ode
 !
right
->allocnode)

418 i‡(
À·
->
‰ìnode
 !
right
->freenode)

421 i‡(
À·
->
c⁄ãxt
 !
right
->context)

424 i‡(
À·
->
du≥s
 !
right
->dupes)

428 
	}
}

437 
dnode_t
 *
	$di˘_lookup
(
di˘_t
 *
di˘
, c⁄° *
key
)

439 
dnode_t
 *
roŸ
 = 
	`di˘_roŸ
(
di˘
);

440 
dnode_t
 *
nû
 = 
	`di˘_nû
(
di˘
);

441 
dnode_t
 *
ßved
;

442 
ªsu…
;

446 
roŸ
 !
nû
) {

447 
ªsu…
 = 
di˘
->
	`com∑ª
(
key
, 
roŸ
->key);

448 i‡(
ªsu…
 < 0)

449 
roŸ
 =ÑoŸ->
À·
;

450 i‡(
ªsu…
 > 0)

451 
roŸ
 =ÑoŸ->
right
;

453 i‡(!
di˘
->
du≥s
) {

454  
roŸ
;

457 
ßved
 = 
roŸ
;

458 
roŸ
 =ÑoŸ->
À·
;

459 
roŸ
 !
nû
 && 
di˘
->
	`com∑ª
(
key
,Ñoot->key))

460 
roŸ
 =ÑoŸ->
right
;

461 } 
roŸ
 !
nû
);

462  
ßved
;

467  
NULL
;

468 
	}
}

475 
dnode_t
 *
	$di˘_lowî_bound
(
di˘_t
 *
di˘
, c⁄° *
key
)

477 
dnode_t
 *
roŸ
 = 
	`di˘_roŸ
(
di˘
);

478 
dnode_t
 *
nû
 = 
	`di˘_nû
(
di˘
);

479 
dnode_t
 *
ã¡©ive
 = 0;

481 
roŸ
 !
nû
) {

482 
ªsu…
 = 
di˘
->
	`com∑ª
(
key
, 
roŸ
->key);

484 i‡(
ªsu…
 > 0) {

485 
roŸ
 =ÑoŸ->
right
;

486 } i‡(
ªsu…
 < 0) {

487 
ã¡©ive
 = 
roŸ
;

488 
roŸ
 =ÑoŸ->
À·
;

490 i‡(!
di˘
->
du≥s
) {

491  
roŸ
;

493 
ã¡©ive
 = 
roŸ
;

494 
roŸ
 =ÑoŸ->
À·
;

499  
ã¡©ive
;

500 
	}
}

507 
dnode_t
 *
	$di˘_uµî_bound
(
di˘_t
 *
di˘
, c⁄° *
key
)

509 
dnode_t
 *
roŸ
 = 
	`di˘_roŸ
(
di˘
);

510 
dnode_t
 *
nû
 = 
	`di˘_nû
(
di˘
);

511 
dnode_t
 *
ã¡©ive
 = 0;

513 
roŸ
 !
nû
) {

514 
ªsu…
 = 
di˘
->
	`com∑ª
(
key
, 
roŸ
->key);

516 i‡(
ªsu…
 < 0) {

517 
roŸ
 =ÑoŸ->
À·
;

518 } i‡(
ªsu…
 > 0) {

519 
ã¡©ive
 = 
roŸ
;

520 
roŸ
 =ÑoŸ->
right
;

522 i‡(!
di˘
->
du≥s
) {

523  
roŸ
;

525 
ã¡©ive
 = 
roŸ
;

526 
roŸ
 =ÑoŸ->
right
;

531  
ã¡©ive
;

532 
	}
}

542 
	$di˘_ö£π
(
di˘_t
 *
di˘
, 
dnode_t
 *
node
, c⁄° *
key
)

544 
dnode_t
 *
whîe
 = 
	`di˘_roŸ
(
di˘
), *
nû
 = 
	`di˘_nû
(dict);

545 
dnode_t
 *
∑ª¡
 = 
nû
, *
un˛e
, *
gønd∑
;

546 
ªsu…
 = -1;

548 
node
->
key
 = key;

550 
	`as£π
 (!
	`di˘_isfuŒ
(
di˘
));

551 
	`as£π
 (!
	`di˘_c⁄èös
(
di˘
, 
node
));

552 
	`as£π
 (!
	`dnode_is_ö_a_di˘
(
node
));

556 
whîe
 !
nû
) {

557 
∑ª¡
 = 
whîe
;

558 
ªsu…
 = 
di˘
->
	`com∑ª
(
key
, 
whîe
->key);

560 
	`as£π
 (
di˘
->
du≥s
 || 
ªsu…
 != 0);

561 i‡(
ªsu…
 < 0)

562 
whîe
 = whîe->
À·
;

564 
whîe
 = whîe->
right
;

567 
	`as£π
 (
whîe
 =
nû
);

569 i‡(
ªsu…
 < 0)

570 
∑ª¡
->
À·
 = 
node
;

572 
∑ª¡
->
right
 = 
node
;

574 
node
->
∑ª¡
 =Öarent;

575 
node
->
À·
 = 
nû
;

576 
node
->
right
 = 
nû
;

578 
di˘
->
nodecou¡
++;

582 
node
->
cﬁ‹
 = 
dnode_ªd
;

584 
∑ª¡
->
cﬁ‹
 =
dnode_ªd
) {

585 
gønd∑
 = 
∑ª¡
->parent;

586 i‡(
∑ª¡
 =
gønd∑
->
À·
) {

587 
un˛e
 = 
gønd∑
->
right
;

588 i‡(
un˛e
->
cﬁ‹
 =
dnode_ªd
) {

589 
∑ª¡
->
cﬁ‹
 = 
dnode_bœck
;

590 
un˛e
->
cﬁ‹
 = 
dnode_bœck
;

591 
gønd∑
->
cﬁ‹
 = 
dnode_ªd
;

592 
node
 = 
gønd∑
;

593 
∑ª¡
 = 
gønd∑
->parent;

595 i‡(
node
 =
∑ª¡
->
right
) {

596 
	`rŸ©e_À·
(
∑ª¡
);

597 
∑ª¡
 = 
node
;

598 
	`as£π
 (
gønd∑
 =
∑ª¡
->parent);

601 
∑ª¡
->
cﬁ‹
 = 
dnode_bœck
;

602 
gønd∑
->
cﬁ‹
 = 
dnode_ªd
;

603 
	`rŸ©e_right
(
gønd∑
);

607 
un˛e
 = 
gønd∑
->
À·
;

608 i‡(
un˛e
->
cﬁ‹
 =
dnode_ªd
) {

609 
∑ª¡
->
cﬁ‹
 = 
dnode_bœck
;

610 
un˛e
->
cﬁ‹
 = 
dnode_bœck
;

611 
gønd∑
->
cﬁ‹
 = 
dnode_ªd
;

612 
node
 = 
gønd∑
;

613 
∑ª¡
 = 
gønd∑
->parent;

615 i‡(
node
 =
∑ª¡
->
À·
) {

616 
	`rŸ©e_right
(
∑ª¡
);

617 
∑ª¡
 = 
node
;

618 
	`as£π
 (
gønd∑
 =
∑ª¡
->parent);

620 
∑ª¡
->
cﬁ‹
 = 
dnode_bœck
;

621 
gønd∑
->
cﬁ‹
 = 
dnode_ªd
;

622 
	`rŸ©e_À·
(
gønd∑
);

628 
	`di˘_roŸ
(
di˘
)->
cﬁ‹
 = 
dnode_bœck
;

630 
	`as£π
 (
	`di˘_vîify
(
di˘
));

631 
	}
}

639 
dnode_t
 *
	$di˘_dñëe
(
di˘_t
 *
di˘
, 
dnode_t
 *
dñëe
)

641 
dnode_t
 *
nû
 = 
	`di˘_nû
(
di˘
), *
chûd
, *
dñ∑ª¡
 = 
dñëe
->
∑ª¡
;

645 
	`as£π
 (!
	`di˘_i£m±y
(
di˘
));

646 
	`as£π
 (
	`di˘_c⁄èös
(
di˘
, 
dñëe
));

660 i‡(
dñëe
->
À·
 !
nû
 && dñëe->
right
 !=Çil) {

661 
dnode_t
 *
√xt
 = 
	`di˘_√xt
(
di˘
, 
dñëe
);

662 
dnode_t
 *
√xç¨ít
 = 
√xt
->
∑ª¡
;

663 
dnode_cﬁ‹_t
 
√xtcﬁ‹
 = 
√xt
->
cﬁ‹
;

665 
	`as£π
 (
√xt
 !
nû
);

666 
	`as£π
 (
√xt
->
∑ª¡
 !
nû
);

667 
	`as£π
 (
√xt
->
À·
 =
nû
);

674 
chûd
 = 
√xt
->
right
;

675 
chûd
->
∑ª¡
 = 
√xç¨ít
;

677 i‡(
√xç¨ít
->
À·
 =
√xt
) {

678 
√xç¨ít
->
À·
 = 
chûd
;

680 
	`as£π
 (
√xç¨ít
->
right
 =
√xt
);

681 
√xç¨ít
->
right
 = 
chûd
;

689 
√xt
->
∑ª¡
 = 
dñ∑ª¡
;

690 
√xt
->
À·
 = 
dñëe
->left;

691 
√xt
->
right
 = 
dñëe
->right;

692 
√xt
->
À·
->
∑ª¡
 =Çext;

693 
√xt
->
right
->
∑ª¡
 =Çext;

694 
√xt
->
cﬁ‹
 = 
dñëe
->color;

695 
dñëe
->
cﬁ‹
 = 
√xtcﬁ‹
;

697 i‡(
dñ∑ª¡
->
À·
 =
dñëe
) {

698 
dñ∑ª¡
->
À·
 = 
√xt
;

700 
	`as£π
 (
dñ∑ª¡
->
right
 =
dñëe
);

701 
dñ∑ª¡
->
right
 = 
√xt
;

705 
	`as£π
 (
dñëe
 !
nû
);

706 
	`as£π
 (
dñëe
->
À·
 =
nû
 || dñëe->
right
 ==Çil);

708 
chûd
 = (
dñëe
->
À·
 !
nû
Ë? dñëe->À· : dñëe->
right
;

710 
chûd
->
∑ª¡
 = 
dñ∑ª¡
 = 
dñëe
->parent;

712 i‡(
dñëe
 =
dñ∑ª¡
->
À·
) {

713 
dñ∑ª¡
->
À·
 = 
chûd
;

715 
	`as£π
 (
dñëe
 =
dñ∑ª¡
->
right
);

716 
dñ∑ª¡
->
right
 = 
chûd
;

720 
dñëe
->
∑ª¡
 = 
NULL
;

721 
dñëe
->
right
 = 
NULL
;

722 
dñëe
->
À·
 = 
NULL
;

724 
di˘
->
nodecou¡
--;

726 
	`as£π
 (
	`vîify_böåì
(
di˘
));

730 i‡(
dñëe
->
cﬁ‹
 =
dnode_bœck
) {

731 
dnode_t
 *
∑ª¡
, *
si°î
;

733 
	`di˘_roŸ
(
di˘
)->
cﬁ‹
 = 
dnode_ªd
;

735 
chûd
->
cﬁ‹
 =
dnode_bœck
) {

736 
∑ª¡
 = 
chûd
->parent;

737 i‡(
chûd
 =
∑ª¡
->
À·
) {

738 
si°î
 = 
∑ª¡
->
right
;

739 
	`as£π
 (
si°î
 !
nû
);

740 i‡(
si°î
->
cﬁ‹
 =
dnode_ªd
) {

741 
si°î
->
cﬁ‹
 = 
dnode_bœck
;

742 
∑ª¡
->
cﬁ‹
 = 
dnode_ªd
;

743 
	`rŸ©e_À·
(
∑ª¡
);

744 
si°î
 = 
∑ª¡
->
right
;

745 
	`as£π
 (
si°î
 !
nû
);

747 i‡(
si°î
->
À·
->
cﬁ‹
 =
dnode_bœck


748 && 
si°î
->
right
->
cﬁ‹
 =
dnode_bœck
) {

749 
si°î
->
cﬁ‹
 = 
dnode_ªd
;

750 
chûd
 = 
∑ª¡
;

752 i‡(
si°î
->
right
->
cﬁ‹
 =
dnode_bœck
) {

753 
	`as£π
 (
si°î
->
À·
->
cﬁ‹
 =
dnode_ªd
);

754 
si°î
->
À·
->
cﬁ‹
 = 
dnode_bœck
;

755 
si°î
->
cﬁ‹
 = 
dnode_ªd
;

756 
	`rŸ©e_right
(
si°î
);

757 
si°î
 = 
∑ª¡
->
right
;

758 
	`as£π
 (
si°î
 !
nû
);

760 
si°î
->
cﬁ‹
 = 
∑ª¡
->color;

761 
si°î
->
right
->
cﬁ‹
 = 
dnode_bœck
;

762 
∑ª¡
->
cﬁ‹
 = 
dnode_bœck
;

763 
	`rŸ©e_À·
(
∑ª¡
);

767 
	`as£π
 (
chûd
 =
∑ª¡
->
right
);

768 
si°î
 = 
∑ª¡
->
À·
;

769 
	`as£π
 (
si°î
 !
nû
);

770 i‡(
si°î
->
cﬁ‹
 =
dnode_ªd
) {

771 
si°î
->
cﬁ‹
 = 
dnode_bœck
;

772 
∑ª¡
->
cﬁ‹
 = 
dnode_ªd
;

773 
	`rŸ©e_right
(
∑ª¡
);

774 
si°î
 = 
∑ª¡
->
À·
;

775 
	`as£π
 (
si°î
 !
nû
);

777 i‡(
si°î
->
right
->
cﬁ‹
 =
dnode_bœck


778 && 
si°î
->
À·
->
cﬁ‹
 =
dnode_bœck
) {

779 
si°î
->
cﬁ‹
 = 
dnode_ªd
;

780 
chûd
 = 
∑ª¡
;

782 i‡(
si°î
->
À·
->
cﬁ‹
 =
dnode_bœck
) {

783 
	`as£π
 (
si°î
->
right
->
cﬁ‹
 =
dnode_ªd
);

784 
si°î
->
right
->
cﬁ‹
 = 
dnode_bœck
;

785 
si°î
->
cﬁ‹
 = 
dnode_ªd
;

786 
	`rŸ©e_À·
(
si°î
);

787 
si°î
 = 
∑ª¡
->
À·
;

788 
	`as£π
 (
si°î
 !
nû
);

790 
si°î
->
cﬁ‹
 = 
∑ª¡
->color;

791 
si°î
->
À·
->
cﬁ‹
 = 
dnode_bœck
;

792 
∑ª¡
->
cﬁ‹
 = 
dnode_bœck
;

793 
	`rŸ©e_right
(
∑ª¡
);

799 
chûd
->
cﬁ‹
 = 
dnode_bœck
;

800 
	`di˘_roŸ
(
di˘
)->
cﬁ‹
 = 
dnode_bœck
;

803 
	`as£π
 (
	`di˘_vîify
(
di˘
));

805  
dñëe
;

806 
	}
}

813 
	$di˘_Æloc_ö£π
(
di˘_t
 *
di˘
, c⁄° *
key
, *
d©a
)

815 
dnode_t
 *
node
 = 
di˘
->
	`Ælo˙ode
(di˘->
c⁄ãxt
);

817 i‡(
node
) {

818 
	`dnode_öô
(
node
, 
d©a
);

819 
	`di˘_ö£π
(
di˘
, 
node
, 
key
);

823 
	}
}

825 
	$di˘_dñëe_‰ì
(
di˘_t
 *
di˘
, 
dnode_t
 *
node
)

827 
	`di˘_dñëe
(
di˘
, 
node
);

828 
di˘
->
	`‰ìnode
(
node
, di˘->
c⁄ãxt
);

829 
	}
}

836 
dnode_t
 *
	$di˘_fú°
(
di˘_t
 *
di˘
)

838 
dnode_t
 *
nû
 = 
	`di˘_nû
(
di˘
), *
roŸ
 = 
	`di˘_roŸ
(di˘), *
À·
;

840 i‡(
roŸ
 !
nû
)

841 (
À·
 = 
roŸ
->À·Ë!
nû
)

842 
roŸ
 = 
À·
;

844  (
roŸ
 =
nû
Ë? 
NULL
 :Ñoot;

845 
	}
}

852 
dnode_t
 *
	$di˘_œ°
(
di˘_t
 *
di˘
)

854 
dnode_t
 *
nû
 = 
	`di˘_nû
(
di˘
), *
roŸ
 = 
	`di˘_roŸ
(di˘), *
right
;

856 i‡(
roŸ
 !
nû
)

857 (
right
 = 
roŸ
->rightË!
nû
)

858 
roŸ
 = 
right
;

860  (
roŸ
 =
nû
Ë? 
NULL
 :Ñoot;

861 
	}
}

870 
dnode_t
 *
	$di˘_√xt
(
di˘_t
 *
di˘
, 
dnode_t
 *
cuº
)

872 
dnode_t
 *
nû
 = 
	`di˘_nû
(
di˘
), *
∑ª¡
, *
À·
;

874 i‡(
cuº
->
right
 !
nû
) {

875 
cuº
 = cuº->
right
;

876 (
À·
 = 
cuº
->À·Ë!
nû
)

877 
cuº
 = 
À·
;

878  
cuº
;

881 
∑ª¡
 = 
cuº
->parent;

883 
∑ª¡
 !
nû
 && 
cuº
 =∑ª¡->
right
) {

884 
cuº
 = 
∑ª¡
;

885 
∑ª¡
 = 
cuº
->parent;

888  (
∑ª¡
 =
nû
Ë? 
NULL
 :Öarent;

889 
	}
}

896 
dnode_t
 *
	$di˘_¥ev
(
di˘_t
 *
di˘
, 
dnode_t
 *
cuº
)

898 
dnode_t
 *
nû
 = 
	`di˘_nû
(
di˘
), *
∑ª¡
, *
right
;

900 i‡(
cuº
->
À·
 !
nû
) {

901 
cuº
 = cuº->
À·
;

902 (
right
 = 
cuº
->rightË!
nû
)

903 
cuº
 = 
right
;

904  
cuº
;

907 
∑ª¡
 = 
cuº
->parent;

909 
∑ª¡
 !
nû
 && 
cuº
 =∑ª¡->
À·
) {

910 
cuº
 = 
∑ª¡
;

911 
∑ª¡
 = 
cuº
->parent;

914  (
∑ª¡
 =
nû
Ë? 
NULL
 :Öarent;

915 
	}
}

917 
	$di˘_Ælow_du≥s
(
di˘_t
 *
di˘
)

919 
di˘
->
du≥s
 = 1;

920 
	}
}

922 #unde‡
di˘_cou¡


923 #unde‡
di˘_i£m±y


924 #unde‡
di˘_isfuŒ


925 #unde‡
dnode_gë


926 #unde‡
dnode_put


927 #unde‡
dnode_gëkey


929 
di˘cou¡_t
 
	$di˘_cou¡
(
di˘_t
 *
di˘
)

931  
di˘
->
nodecou¡
;

932 
	}
}

934 
	$di˘_i£m±y
(
di˘_t
 *
di˘
)

936  
di˘
->
nodecou¡
 == 0;

937 
	}
}

939 
	$di˘_isfuŒ
(
di˘_t
 *
di˘
)

941  
di˘
->
nodecou¡
 =di˘->
maxcou¡
;

942 
	}
}

944 
	$di˘_c⁄èös
(
di˘_t
 *
di˘
, 
dnode_t
 *
node
)

946  
	`vîify_di˘_has_node
(
	`di˘_nû
(
di˘
), 
	`di˘_roŸ
(di˘), 
node
);

947 
	}
}

949 
dnode_t
 *
	$dnode_Æloc
(*
c⁄ãxt
)

951 ()(
c⁄ãxt
);

952  
	`mÆloc
( *
	`dnode_Æloc
(
NULL
));

953 
	}
}

955 
	$dnode_‰ì
(
dnode_t
 *
node
, *
c⁄ãxt
)

957 ()(
c⁄ãxt
);

958 
	`‰ì
(
node
);

959 
	}
}

961 
dnode_t
 *
	$dnode_¸óã
(*
d©a
)

963 
dnode_t
 *
√w
 = 
	`mÆloc
( *new);

964 i‡(
√w
) {

965 
√w
->
d©a
 = data;

966 
√w
->
∑ª¡
 = 
NULL
;

967 
√w
->
À·
 = 
NULL
;

968 
√w
->
right
 = 
NULL
;

970  
√w
;

971 
	}
}

973 
dnode_t
 *
	$dnode_öô
(
dnode_t
 *
dnode
, *
d©a
)

975 
dnode
->
d©a
 = data;

976 
dnode
->
∑ª¡
 = 
NULL
;

977 
dnode
->
À·
 = 
NULL
;

978 
dnode
->
right
 = 
NULL
;

979  
dnode
;

980 
	}
}

982 
	$dnode_de°roy
(
dnode_t
 *
dnode
)

984 
	`as£π
 (!
	`dnode_is_ö_a_di˘
(
dnode
));

985 
	`‰ì
(
dnode
);

986 
	}
}

988 *
	$dnode_gë
(
dnode_t
 *
dnode
)

990  
dnode
->
d©a
;

991 
	}
}

993 c⁄° *
	$dnode_gëkey
(
dnode_t
 *
dnode
)

995  
dnode
->
key
;

996 
	}
}

998 
	$dnode_put
(
dnode_t
 *
dnode
, *
d©a
)

1000 
dnode
->
d©a
 = data;

1001 
	}
}

1003 
	$dnode_is_ö_a_di˘
(
dnode_t
 *
dnode
)

1005  (
dnode
->
∑ª¡
 && dnode->
À·
 && dnode->
right
);

1006 
	}
}

1008 
	$di˘_¥o˚ss
(
di˘_t
 *
di˘
, *
c⁄ãxt
, 
dnode_¥o˚ss_t
 
fun˘i⁄
)

1010 
dnode_t
 *
node
 = 
	`di˘_fú°
(
di˘
), *
√xt
;

1012 
node
 !
NULL
) {

1015 
	`as£π
 (
	`di˘_c⁄èös
(
di˘
, 
node
));

1016 
√xt
 = 
	`di˘_√xt
(
di˘
, 
node
);

1017 
	`fun˘i⁄
(
di˘
, 
node
, 
c⁄ãxt
);

1018 
node
 = 
√xt
;

1020 
	}
}

1022 
	$lﬂd_begö_öã∫Æ
(
di˘_lﬂd_t
 *
lﬂd
, 
di˘_t
 *
di˘
)

1024 
lﬂd
->
di˘±r
 = 
di˘
;

1025 
lﬂd
->
nûnode
.
À·
 = &load->nilnode;

1026 
lﬂd
->
nûnode
.
right
 = &load->nilnode;

1027 
	}
}

1029 
	$di˘_lﬂd_begö
(
di˘_lﬂd_t
 *
lﬂd
, 
di˘_t
 *
di˘
)

1031 
	`as£π
 (
	`di˘_i£m±y
(
di˘
));

1032 
	`lﬂd_begö_öã∫Æ
(
lﬂd
, 
di˘
);

1033 
	}
}

1035 
	$di˘_lﬂd_√xt
(
di˘_lﬂd_t
 *
lﬂd
, 
dnode_t
 *
√wnode
, c⁄° *
key
)

1037 
di˘_t
 *
di˘
 = 
lﬂd
->
di˘±r
;

1038 
dnode_t
 *
nû
 = &
lﬂd
->
nûnode
;

1040 
	`as£π
 (!
	`dnode_is_ö_a_di˘
(
√wnode
));

1041 
	`as£π
 (
di˘
->
nodecou¡
 < di˘->
maxcou¡
);

1043 #i‚de‡
NDEBUG


1044 i‡(
di˘
->
nodecou¡
 > 0) {

1045 i‡(
di˘
->
du≥s
)

1046 
	`as£π
 (
di˘
->
	`com∑ª
(
nû
->
À·
->
key
, key) <= 0);

1048 
	`as£π
 (
di˘
->
	`com∑ª
(
nû
->
À·
->
key
, key) < 0);

1052 
√wnode
->
key
 = key;

1053 
nû
->
right
->
À·
 = 
√wnode
;

1054 
nû
->
right
 = 
√wnode
;

1055 
√wnode
->
À·
 = 
nû
;

1056 
di˘
->
nodecou¡
++;

1057 
	}
}

1059 
	$di˘_lﬂd_íd
(
di˘_lﬂd_t
 *
lﬂd
)

1061 
di˘_t
 *
di˘
 = 
lﬂd
->
di˘±r
;

1062 
dnode_t
 *
åì
[
DICT_DEPTH_MAX
] = { 0 };

1063 
dnode_t
 *
cuº
, *
di˘nû
 = 
	`di˘_nû
(
di˘
), *
lﬂdnû
 = &
lﬂd
->
nûnode
, *
√xt
;

1064 
dnode_t
 *
com∂ëe
 = 0;

1065 
di˘cou¡_t
 
fuŒcou¡
 = 
DICTCOUNT_T_MAX
, 
nodecou¡
 = 
di˘
->nodecount;

1066 
di˘cou¡_t
 
bŸrowcou¡
;

1067 
ba£Àvñ
 = 0, 
Àvñ
 = 0, 
i
;

1069 
	`as£π
 (
dnode_ªd
 =0 && 
dnode_bœck
 == 1);

1071 
fuŒcou¡
 >
nodecou¡
 && fullcount)

1072 
fuŒcou¡
 >>= 1;

1074 
bŸrowcou¡
 = 
nodecou¡
 - 
fuŒcou¡
;

1076 
cuº
 = 
lﬂdnû
->
À·
; cuº !lﬂdnû; cuº = 
√xt
) {

1077 
√xt
 = 
cuº
->
À·
;

1079 i‡(
com∂ëe
 =
NULL
 && 
bŸrowcou¡
-- == 0) {

1080 
	`as£π
 (
ba£Àvñ
 == 0);

1081 
	`as£π
 (
Àvñ
 == 0);

1082 
ba£Àvñ
 = 
Àvñ
 = 1;

1083 
com∂ëe
 = 
åì
[0];

1085 i‡(
com∂ëe
 != 0) {

1086 
åì
[0] = 0;

1087 
com∂ëe
->
right
 = 
di˘nû
;

1088 
åì
[
Àvñ
] != 0) {

1089 
åì
[
Àvñ
]->
right
 = 
com∂ëe
;

1090 
com∂ëe
->
∑ª¡
 = 
åì
[
Àvñ
];

1091 
com∂ëe
 = 
åì
[
Àvñ
];

1092 
åì
[
Àvñ
++] = 0;

1097 i‡(
com∂ëe
 =
NULL
) {

1098 
cuº
->
À·
 = 
di˘nû
;

1099 
cuº
->
right
 = 
di˘nû
;

1100 
cuº
->
cﬁ‹
 = 
Àvñ
 % 2;

1101 
com∂ëe
 = 
cuº
;

1103 
	`as£π
 (
Àvñ
 =
ba£Àvñ
);

1104 
åì
[
Àvñ
] != 0) {

1105 
åì
[
Àvñ
]->
right
 = 
com∂ëe
;

1106 
com∂ëe
->
∑ª¡
 = 
åì
[
Àvñ
];

1107 
com∂ëe
 = 
åì
[
Àvñ
];

1108 
åì
[
Àvñ
++] = 0;

1111 
cuº
->
À·
 = 
com∂ëe
;

1112 
cuº
->
cﬁ‹
 = (
Àvñ
 + 1) % 2;

1113 
com∂ëe
->
∑ª¡
 = 
cuº
;

1114 
åì
[
Àvñ
] = 
cuº
;

1115 
com∂ëe
 = 0;

1116 
Àvñ
 = 
ba£Àvñ
;

1120 i‡(
com∂ëe
 =
NULL
)

1121 
com∂ëe
 = 
di˘nû
;

1123 
i
 = 0; i < 
DICT_DEPTH_MAX
; i++) {

1124 i‡(
åì
[
i
] != 0) {

1125 
åì
[
i
]->
right
 = 
com∂ëe
;

1126 
com∂ëe
->
∑ª¡
 = 
åì
[
i
];

1127 
com∂ëe
 = 
åì
[
i
];

1131 
di˘nû
->
cﬁ‹
 = 
dnode_bœck
;

1132 
di˘nû
->
right
 = dictnil;

1133 
com∂ëe
->
∑ª¡
 = 
di˘nû
;

1134 
com∂ëe
->
cﬁ‹
 = 
dnode_bœck
;

1135 
	`di˘_roŸ
(
di˘
Ë
com∂ëe
;

1137 
	`as£π
 (
	`di˘_vîify
(
di˘
));

1138 
	}
}

1140 
	$di˘_mîge
(
di˘_t
 *
de°
, di˘_à*
sour˚
)

1142 
di˘_lﬂd_t
 
lﬂd
;

1143 
dnode_t
 *
À·node
 = 
	`di˘_fú°
(
de°
), *
righäode
 = di˘_fú°(
sour˚
);

1145 
	`as£π
 (
	`di˘_simû¨
(
de°
, 
sour˚
));

1147 i‡(
sour˚
 =
de°
)

1150 
de°
->
nodecou¡
 = 0;

1151 
	`lﬂd_begö_öã∫Æ
(&
lﬂd
, 
de°
);

1154 i‡(
À·node
 !
NULL
 && 
righäode
 != NULL) {

1155 i‡(
de°
->
	`com∑ª
(
À·node
->
key
, 
righäode
->key) < 0)

1156 
c›yÀ·
;

1158 
c›yright
;

1159 } i‡(
À·node
 !
NULL
) {

1160 
c›yÀ·
;

1161 } i‡(
righäode
 !
NULL
) {

1162 
c›yright
;

1164 
	`as£π
 (
À·node
 =
NULL
 && 
righäode
 == NULL);

1168 
c›yÀ·
:

1170 
dnode_t
 *
√xt
 = 
	`di˘_√xt
(
de°
, 
À·node
);

1171 #i‚de‡
NDEBUG


1172 
À·node
->
À·
 = 
NULL
;

1174 
	`di˘_lﬂd_√xt
(&
lﬂd
, 
À·node
,Üe·node->
key
);

1175 
À·node
 = 
√xt
;

1179 
c›yright
:

1181 
dnode_t
 *
√xt
 = 
	`di˘_√xt
(
sour˚
, 
righäode
);

1182 #i‚de‡
NDEBUG


1183 
righäode
->
À·
 = 
NULL
;

1185 
	`di˘_lﬂd_√xt
(&
lﬂd
, 
righäode
,Ñighäode->
key
);

1186 
righäode
 = 
√xt
;

1191 
	`di˘_˛ór
(
sour˚
);

1192 
	`di˘_lﬂd_íd
(&
lﬂd
);

1193 
	}
}

	@adt/dict.h

1 #unde‡
KAZLIB_OPAQUE_DEBUG


23 #i‚de‡
DICT_H


24 
	#DICT_H


	)

26 
	~<limôs.h
>

27 #ifde‡
KAZLIB_SIDEEFFECT_DEBUG


28 
	~"sfx.h
"

35 #ifde‡
__˝lu•lus


39 
	tdi˘cou¡_t
;

40 
	#DICTCOUNT_T_MAX
 
ULONG_MAX


	)

46 íum { 
dnode_ªd
, 
dnode_bœck
 } 
	tdnode_cﬁ‹_t
;

48 
	sdnode_t
 {

49 #i‡
deföed
(
DICT_IMPLEMENTATION
Ë|| !deföed(
KAZLIB_OPAQUE_DEBUG
)

50 
dnode_t
 *
di˘_À·
;

51 
dnode_t
 *
di˘_right
;

52 
dnode_t
 *
di˘_∑ª¡
;

53 
dnode_cﬁ‹_t
 
di˘_cﬁ‹
;

54 c⁄° *
di˘_key
;

55 *
di˘_d©a
;

57 
di˘_dummy
;

59 } 
	tdnode_t
;

61 (*
di˘_comp_t
)(const *, const *);

62 
dnode_t
 *(*
	tdnode_Æloc_t
)(*);

63 (*
dnode_‰ì_t
)(
	tdnode_t
 *, *);

65 
	sdi˘_t
 {

66 #i‡
deföed
(
DICT_IMPLEMENTATION
Ë|| !deföed(
KAZLIB_OPAQUE_DEBUG
)

67 
dnode_t
 
di˘_nûnode
;

68 
di˘cou¡_t
 
di˘_nodecou¡
;

69 
di˘cou¡_t
 
di˘_maxcou¡
;

70 
di˘_comp_t
 
di˘_com∑ª
;

71 
dnode_Æloc_t
 
di˘_Ælo˙ode
;

72 
dnode_‰ì_t
 
di˘_‰ìnode
;

73 *
di˘_c⁄ãxt
;

74 
di˘_du≥s
;

76 
di˘_dummmy
;

78 } 
	tdi˘_t
;

80 (*
dnode_¥o˚ss_t
)(
	tdi˘_t
 *, 
	tdnode_t
 *, *);

82 
	sdi˘_lﬂd_t
 {

83 #i‡
deföed
(
DICT_IMPLEMENTATION
Ë|| !deföed(
KAZLIB_OPAQUE_DEBUG
)

84 
di˘_t
 *
di˘_di˘±r
;

85 
dnode_t
 
di˘_nûnode
;

87 
di˘_dummmy
;

89 } 
	tdi˘_lﬂd_t
;

91 
di˘_t
 *
di˘_¸óã
(
di˘cou¡_t
, 
di˘_comp_t
);

92 
di˘_£t_Æloˇt‹
(
di˘_t
 *, 
dnode_Æloc_t
, 
dnode_‰ì_t
, *);

93 
di˘_de°roy
(
di˘_t
 *);

94 
di˘_‰ì_nodes
(
di˘_t
 *);

95 
di˘_‰ì
(
di˘_t
 *);

96 
di˘_t
 *
di˘_öô
(di˘_à*, 
di˘cou¡_t
, 
di˘_comp_t
);

97 
di˘_öô_like
(
di˘_t
 *, const dict_t *);

98 
di˘_vîify
(
di˘_t
 *);

99 
di˘_simû¨
(c⁄° 
di˘_t
 *, const dict_t *);

100 
dnode_t
 *
di˘_lookup
(
di˘_t
 *, const *);

101 
dnode_t
 *
di˘_lowî_bound
(
di˘_t
 *, const *);

102 
dnode_t
 *
di˘_uµî_bound
(
di˘_t
 *, const *);

103 
di˘_ö£π
(
di˘_t
 *, 
dnode_t
 *, const *);

104 
dnode_t
 *
di˘_dñëe
(
di˘_t
 *, dnode_t *);

105 
di˘_Æloc_ö£π
(
di˘_t
 *, const *, *);

106 
di˘_dñëe_‰ì
(
di˘_t
 *, 
dnode_t
 *);

107 
dnode_t
 *
di˘_fú°
(
di˘_t
 *);

108 
dnode_t
 *
di˘_œ°
(
di˘_t
 *);

109 
dnode_t
 *
di˘_√xt
(
di˘_t
 *, dnode_t *);

110 
dnode_t
 *
di˘_¥ev
(
di˘_t
 *, dnode_t *);

111 
di˘cou¡_t
 
di˘_cou¡
(
di˘_t
 *);

112 
di˘_i£m±y
(
di˘_t
 *);

113 
di˘_isfuŒ
(
di˘_t
 *);

114 
di˘_c⁄èös
(
di˘_t
 *, 
dnode_t
 *);

115 
di˘_Ælow_du≥s
(
di˘_t
 *);

116 
dnode_is_ö_a_di˘
(
dnode_t
 *);

117 
dnode_t
 *
dnode_¸óã
(*);

118 
dnode_t
 *
dnode_öô
(dnode_t *, *);

119 
dnode_de°roy
(
dnode_t
 *);

120 *
dnode_gë
(
dnode_t
 *);

121 c⁄° *
dnode_gëkey
(
dnode_t
 *);

122 
dnode_put
(
dnode_t
 *, *);

123 
di˘_¥o˚ss
(
di˘_t
 *, *, 
dnode_¥o˚ss_t
);

124 
di˘_lﬂd_begö
(
di˘_lﬂd_t
 *, 
di˘_t
 *);

125 
di˘_lﬂd_√xt
(
di˘_lﬂd_t
 *, 
dnode_t
 *, const *);

126 
di˘_lﬂd_íd
(
di˘_lﬂd_t
 *);

127 
di˘_mîge
(
di˘_t
 *, dict_t *);

129 #i‡
deföed
(
DICT_IMPLEMENTATION
Ë|| !deföed(
KAZLIB_OPAQUE_DEBUG
)

130 #ifde‡
KAZLIB_SIDEEFFECT_DEBUG


131 
	#di˘_isfuŒ
(
D
Ë(
	`SFX_CHECK
(D)->
di˘_nodecou¡
 =(D)->
di˘_maxcou¡
)

	)

133 
	#di˘_isfuŒ
(
D
Ë((D)->
di˘_nodecou¡
 =(D)->
di˘_maxcou¡
)

	)

135 
	#di˘_cou¡
(
D
Ë((D)->
di˘_nodecou¡
)

	)

136 
	#di˘_i£m±y
(
D
Ë((D)->
di˘_nodecou¡
 =0)

	)

137 
	#dnode_gë
(
N
Ë((N)->
di˘_d©a
)

	)

138 
	#dnode_gëkey
(
N
Ë((N)->
di˘_key
)

	)

139 
	#dnode_put
(
N
, 
X
Ë((N)->
di˘_d©a
 = (X))

	)

142 #ifde‡
__˝lu•lus


	@adt/hash.c

21 
	~<°dlib.h
>

22 
	~<°ddef.h
>

23 
	~<as£π.h
>

24 
	~<°rög.h
>

25 
	#HASH_IMPLEMENTATION


	)

26 
	~"hash.h
"

28 #ifde‡
KAZLIB_RCSID


29 c⁄° 
	grcsid
[] = "$Id: hash.c,v 1.36.2.11 2000/11/13 01:36:45 kaz Exp $";

32 
	#INIT_BITS
 6

	)

33 
	#INIT_SIZE
 (1UL << (
INIT_BITS
)Ë

	)

34 
	#INIT_MASK
 ((
INIT_SIZE
Ë- 1)

	)

36 
	#√xt
 
hash_√xt


	)

37 
	#key
 
hash_key


	)

38 
	#d©a
 
hash_d©a


	)

39 
	#hkey
 
hash_hkey


	)

41 
	#èbÀ
 
hash_èbÀ


	)

42 
	#nchaös
 
hash_nchaös


	)

43 
	#nodecou¡
 
hash_nodecou¡


	)

44 
	#maxcou¡
 
hash_maxcou¡


	)

45 
	#highm¨k
 
hash_highm¨k


	)

46 
	#lowm¨k
 
hash_lowm¨k


	)

47 
	#com∑ª
 
hash_com∑ª


	)

48 
	#fun˘i⁄
 
hash_fun˘i⁄


	)

49 
	#Ælo˙ode
 
hash_Ælo˙ode


	)

50 
	#‰ìnode
 
hash_‰ìnode


	)

51 
	#c⁄ãxt
 
hash_c⁄ãxt


	)

52 
	#mask
 
hash_mask


	)

53 
	#dy«mic
 
hash_dy«mic


	)

55 
	#èbÀ
 
hash_èbÀ


	)

56 
	#chaö
 
hash_chaö


	)

58 
hnode_t
 *
hnode_Æloc
(*
c⁄ãxt
);

59 
hnode_‰ì
(
hnode_t
 *
node
, *
c⁄ãxt
);

60 
hash_vÆ_t
 
hash_fun_deÁu…
(c⁄° *
key
);

61 
hash_comp_deÁu…
(c⁄° *
key1
, c⁄° *
key2
);

80 
Fixed
 
our
 
	gußge
 -
josh


81 
	$compuã_bôs
()

83 
hash_vÆ_t
 
vÆ
 = 
HASH_VAL_T_MAX
;

84 
bôs
 = 0;

86 
vÆ
) {

87 
bôs
++;

88 
vÆ
 >>= 1;

91 
hash_vÆ_t_bô
 = 
bôs
;

92 
	}
}

99 
	$is_powî_of_two
(
hash_vÆ_t
 
¨g
)

101 i‡(
¨g
 == 0)

103 (
¨g
 & 1) == 0)

104 
¨g
 >>= 1;

105  (
¨g
 == 1);

106 
	}
}

112 
hash_vÆ_t
 
	$compuã_mask
(
hashcou¡_t
 
size
)

114 
	`as£π
 (
	`is_powî_of_two
(
size
));

115 
	`as£π
 (
size
 >= 2);

117  
size
 - 1;

118 
	}
}

124 
	$˛ór_èbÀ
(
hash_t
 *
hash
)

126 
hash_vÆ_t
 
i
;

128 
i
 = 0; i < 
hash
->
nchaös
; i++)

129 
hash
->
èbÀ
[
i
] = 
NULL
;

130 
	}
}

160 
	$grow_èbÀ
(
hash_t
 *
hash
)

162 
hnode_t
 **
√wèbÀ
;

164 
	`as£π
 (2 * 
hash
->
nchaös
 > hash->nchains);

166 
√wèbÀ
 = 
	`ªÆloc
(
hash
->
èbÀ
,

167  *
√wèbÀ
 * 
hash
->
nchaös
 * 2);

169 i‡(
√wèbÀ
) {

170 
hash_vÆ_t
 
mask
 = (
hash
->mask << 1) | 1;

171 
hash_vÆ_t
 
expo£d_bô
 = 
mask
 ^ 
hash
->mask;

172 
hash_vÆ_t
 
chaö
;

174 
	`as£π
 (
mask
 !
hash
->mask);

176 
chaö
 = 0; chaö < 
hash
->
nchaös
; chain++) {

177 
hnode_t
 *
low_chaö
 = 0, *
high_chaö
 = 0, *
h±r
, *
√xt
;

179 
h±r
 = 
√wèbÀ
[
chaö
]; h±∏!0; h±∏
√xt
) {

180 
√xt
 = 
h±r
->next;

182 i‡(
h±r
->
hkey
 & 
expo£d_bô
) {

183 
h±r
->
√xt
 = 
high_chaö
;

184 
high_chaö
 = 
h±r
;

186 
h±r
->
√xt
 = 
low_chaö
;

187 
low_chaö
 = 
h±r
;

191 
√wèbÀ
[
chaö
] = 
low_chaö
;

192 
√wèbÀ
[
chaö
 + 
hash
->
nchaös
] = 
high_chaö
;

195 
hash
->
èbÀ
 = 
√wèbÀ
;

196 
hash
->
mask
 = mask;

197 
hash
->
nchaös
 *= 2;

198 
hash
->
lowm¨k
 *= 2;

199 
hash
->
highm¨k
 *= 2;

201 
	`as£π
 (
	`hash_vîify
(
hash
));

202 
	}
}

234 
	$shrök_èbÀ
(
hash_t
 *
hash
)

236 
hash_vÆ_t
 
chaö
, 
nchaös
;

237 
hnode_t
 **
√wèbÀ
, *
low_èû
, *
low_chaö
, *
high_chaö
;

239 if(
hash
->
nchaös
 < 4) {

243 
nchaös
 = 
hash
->nchains / 2;

245 
chaö
 = 0; chaö < 
nchaös
; chain++) {

246 
low_chaö
 = 
hash
->
èbÀ
[
chaö
];

247 
high_chaö
 = 
hash
->
èbÀ
[
chaö
 + 
nchaös
];

248 
low_èû
 = 
low_chaö
;Üow_èû &&Üow_èû->
√xt
;Üow_tail =Üow_tail->next)

250 i‡(
low_chaö
 != 0)

251 
low_èû
->
√xt
 = 
high_chaö
;

252 i‡(
high_chaö
 != 0)

253 
hash
->
èbÀ
[
chaö
] = 
high_chaö
;

255 
	`as£π
 (
hash
->
èbÀ
[
chaö
] =
NULL
);

257 
√wèbÀ
 = 
	`ªÆloc
(
hash
->
èbÀ
,

258  *
√wèbÀ
 * 
nchaös
);

259 i‡(
√wèbÀ
)

260 
hash
->
èbÀ
 = 
√wèbÀ
;

261 
hash
->
mask
 >>= 1;

262 
hash
->
nchaös
 =Çchains;

263 
hash
->
lowm¨k
 /= 2;

264 
hash
->
highm¨k
 /= 2;

265 
	`as£π
 (
	`hash_vîify
(
hash
));

266 
	}
}

298 
hash_t
 *
	$hash_¸óã
(
hashcou¡_t
 
maxcou¡
, 
hash_comp_t
 
compfun
,

299 
hash_fun_t
 
hashfun
)

301 
hash_t
 *
hash
;

307 
hash
 = 
	`mÆloc
( *hash);

309 i‡(
hash
) {

310 
hash
->
èbÀ
 = 
	`mÆloc
( *hash->èbÀ * 
INIT_SIZE
);

311 i‡(
hash
->
èbÀ
) {

312 
hash
->
nchaös
 = 
INIT_SIZE
;

313 
hash
->
highm¨k
 = 
INIT_SIZE
 * 2;

314 
hash
->
lowm¨k
 = 
INIT_SIZE
 / 2;

315 
hash
->
nodecou¡
 = 0;

316 
hash
->
maxcou¡
 = maxcount;

317 
hash
->
com∑ª
 = 
compfun
 ? compfu¿: 
hash_comp_deÁu…
;

318 
hash
->
fun˘i⁄
 = 
hashfun
 ? hashfu¿: 
hash_fun_deÁu…
;

319 
hash
->
Ælo˙ode
 = 
hnode_Æloc
;

320 
hash
->
‰ìnode
 = 
hnode_‰ì
;

321 
hash
->
c⁄ãxt
 = 
NULL
;

322 
hash
->
mask
 = 
INIT_MASK
;

323 
hash
->
dy«mic
 = 1;

324 
	`˛ór_èbÀ
(
hash
);

325 
	`as£π
 (
	`hash_vîify
(
hash
));

326  
hash
;

328 
	`‰ì
(
hash
);

331  
NULL
;

332 
	}
}

338 
	$hash_£t_Æloˇt‹
(
hash_t
 *
hash
, 
hnode_Æloc_t
 
Æ
,

339 
hnode_‰ì_t
 
‰
, *
c⁄ãxt
)

341 
	`as£π
 (
	`hash_cou¡
(
hash
) == 0);

342 
	`as£π
 ((
Æ
 =0 && 
‰
 == 0) || (al != 0 && fr != 0));

344 
hash
->
Ælo˙ode
 = 
Æ
 ?á»: 
hnode_Æloc
;

345 
hash
->
‰ìnode
 = 
‰
 ? f∏: 
hnode_‰ì
;

346 
hash
->
c⁄ãxt
 = context;

347 
	}
}

354 
	$hash_‰ì_nodes
(
hash_t
 *
hash
)

356 
hsˇn_t
 
hs
;

357 
hnode_t
 *
node
;

358 
	`hash_sˇn_begö
(&
hs
, 
hash
);

359 (
node
 = 
	`hash_sˇn_√xt
(&
hs
))) {

360 
	`hash_sˇn_dñëe
(
hash
, 
node
);

361 
hash
->
	`‰ìnode
(
node
, hash->
c⁄ãxt
);

363 
hash
->
nodecou¡
 = 0;

364 
	`˛ór_èbÀ
(
hash
);

365 
	}
}

372 
	$hash_‰ì
(
hash_t
 *
hash
)

374 #ifde‡
KAZLIB_OBSOLESCENT_DEBUG


375 
	`as£π
 ("callÅo obsolescent function hash_free()" && 0);

377 
	`hash_‰ì_nodes
(
hash
);

378 
	`hash_de°roy
(
hash
);

379 
	}
}

385 
	$hash_de°roy
(
hash_t
 *
hash
)

387 
	`as£π
 (
hash_vÆ_t_bô
 != 0);

388 
	`as£π
 (
	`hash_i£m±y
(
hash
));

389 
	`‰ì
(
hash
->
èbÀ
);

390 
	`‰ì
(
hash
);

391 
	}
}

406 
hash_t
 *
	$hash_öô
(
hash_t
 *
hash
, 
hashcou¡_t
 
maxcou¡
,

407 
hash_comp_t
 
compfun
, 
hash_fun_t
 
hashfun
, 
hnode_t
 **
èbÀ
,

408 
hashcou¡_t
 
nchaös
)

414 
	`as£π
 (
	`is_powî_of_two
(
nchaös
));

416 
hash
->
èbÀ
 =Åable;

417 
hash
->
nchaös
 =Çchains;

418 
hash
->
nodecou¡
 = 0;

419 
hash
->
maxcou¡
 = maxcount;

420 
hash
->
com∑ª
 = 
compfun
 ? compfu¿: 
hash_comp_deÁu…
;

421 
hash
->
fun˘i⁄
 = 
hashfun
 ? hashfu¿: 
hash_fun_deÁu…
;

422 
hash
->
dy«mic
 = 0;

423 
hash
->
mask
 = 
	`compuã_mask
(
nchaös
);

424 
	`˛ór_èbÀ
(
hash
);

426 
	`as£π
 (
	`hash_vîify
(
hash
));

428  
hash
;

429 
	}
}

442 
	$hash_sˇn_begö
(
hsˇn_t
 *
sˇn
, 
hash_t
 *
hash
)

444 
hash_vÆ_t
 
nchaös
 = 
hash
->nchains;

445 
hash_vÆ_t
 
chaö
;

447 
sˇn
->
èbÀ
 = 
hash
;

451 
chaö
 = 0; chaö < 
nchaös
 && 
hash
->
èbÀ
[chain] == 0; chain++)

454 i‡(
chaö
 < 
nchaös
) {

455 
sˇn
->
chaö
 = chain;

456 
sˇn
->
√xt
 = 
hash
->
èbÀ
[
chaö
];

458 
sˇn
->
√xt
 = 
NULL
;

460 
	}
}

488 
hnode_t
 *
	$hash_sˇn_√xt
(
hsˇn_t
 *
sˇn
)

490 
hnode_t
 *
√xt
 = 
sˇn
->next;

492 
	`as£π
 (
hash_vÆ_t_bô
 != 0);

494 i‡(
√xt
) {

495 
hash_t
 *
hash
 = 
sˇn
->
èbÀ
;

496 
hash_vÆ_t
 
chaö
 = 
sˇn
->chain + 1;

497 
hash_vÆ_t
 
nchaös
 = 
hash
->nchains;

498 i‡(
√xt
->next) {

499 
sˇn
->
√xt
 =Çext->next;

501 
chaö
 < 
nchaös
 && 
hash
->
èbÀ
[chain] == 0)

502 
chaö
++;

503 i‡(
chaö
 < 
nchaös
) {

504 
sˇn
->
chaö
 = chain;

505 
sˇn
->
√xt
 = 
hash
->
èbÀ
[
chaö
];

507 
sˇn
->
√xt
 = 
NULL
;

511  
√xt
;

512 
	}
}

527 
	$hash_ö£π
(
hash_t
 *
hash
, 
hnode_t
 *
node
, c⁄° *
key
)

529 
hash_vÆ_t
 
hkey
, 
chaö
;

531 
	`as£π
 (
hash_vÆ_t_bô
 != 0);

532 
	`as£π
 (
node
->
√xt
 =
NULL
);

533 
	`as£π
 (
hash
->
nodecou¡
 < hash->
maxcou¡
);

534 
	`as£π
 (
	`hash_lookup
(
hash
, 
key
Ë=
NULL
);

536 i‡(
hash
->
dy«mic
 && hash->
nodecou¡
 >hash->
highm¨k
)

537 
	`grow_èbÀ
(
hash
);

539 
hkey
 = 
hash
->
	`fun˘i⁄
(
key
);

540 
chaö
 = 
hkey
 & 
hash
->
mask
;

542 
node
->
key
 = key;

543 
node
->
hkey
 = hkey;

544 
node
->
√xt
 = 
hash
->
èbÀ
[
chaö
];

545 
hash
->
èbÀ
[
chaö
] = 
node
;

546 
hash
->
nodecou¡
++;

548 
	`as£π
 (
	`hash_vîify
(
hash
));

549 
	}
}

565 
hnode_t
 *
	$hash_lookup
(
hash_t
 *
hash
, c⁄° *
key
)

567 
hash_vÆ_t
 
hkey
, 
chaö
;

568 
hnode_t
 *
≈å
;

570 
hkey
 = 
hash
->
	`fun˘i⁄
(
key
);

571 
chaö
 = 
hkey
 & 
hash
->
mask
;

573 
≈å
 = 
hash
->
èbÀ
[
chaö
];Ç±r;Ç±∏≈å->
√xt
) {

574 i‡(
≈å
->
hkey
 =hkey && 
hash
->
	`com∑ª
“±r->
key
, key) == 0)

575  
≈å
;

578  
NULL
;

579 
	}
}

599 
hnode_t
 *
	$hash_dñëe
(
hash_t
 *
hash
, 
hnode_t
 *
node
)

601 
hash_vÆ_t
 
chaö
;

602 
hnode_t
 *
h±r
;

604 
	`as£π
 (
	`hash_lookup
(
hash
, 
node
->
key
) ==Çode);

605 
	`as£π
 (
hash_vÆ_t_bô
 != 0);

607 i‡(
hash
->
dy«mic
 && hash->
nodecou¡
 <hash->
lowm¨k


608 && 
hash
->
nodecou¡
 > 
INIT_SIZE
)

609 
	`shrök_èbÀ
(
hash
);

611 
chaö
 = 
node
->
hkey
 & 
hash
->
mask
;

612 
h±r
 = 
hash
->
èbÀ
[
chaö
];

614 i‡(
h±r
 =
node
) {

615 
hash
->
èbÀ
[
chaö
] = 
node
->
√xt
;

617 
h±r
->
√xt
 !
node
) {

618 
	`as£π
 (
h±r
 != 0);

619 
h±r
 = h±r->
√xt
;

621 
	`as£π
 (
h±r
->
√xt
 =
node
);

622 
h±r
->
√xt
 = 
node
->next;

625 
hash
->
nodecou¡
--;

626 
	`as£π
 (
	`hash_vîify
(
hash
));

628 
node
->
√xt
 = 
NULL
;

629  
node
;

630 
	}
}

632 
	$hash_Æloc_ö£π
(
hash_t
 *
hash
, c⁄° *
key
, *
d©a
)

634 
hnode_t
 *
node
 = 
hash
->
	`Ælo˙ode
(hash->
c⁄ãxt
);

636 i‡(
node
) {

637 
	`hnode_öô
(
node
, 
d©a
);

638 
	`hash_ö£π
(
hash
, 
node
, 
key
);

642 
	}
}

644 
	$hash_dñëe_‰ì
(
hash_t
 *
hash
, 
hnode_t
 *
node
)

646 
	`hash_dñëe
(
hash
, 
node
);

647 
hash
->
	`‰ìnode
(
node
, hash->
c⁄ãxt
);

648 
	}
}

655 
hnode_t
 *
	$hash_sˇn_dñëe
(
hash_t
 *
hash
, 
hnode_t
 *
node
)

657 
hash_vÆ_t
 
chaö
;

658 
hnode_t
 *
h±r
;

660 
	`as£π
 (
	`hash_lookup
(
hash
, 
node
->
key
) ==Çode);

661 
	`as£π
 (
hash_vÆ_t_bô
 != 0);

663 
chaö
 = 
node
->
hkey
 & 
hash
->
mask
;

664 
h±r
 = 
hash
->
èbÀ
[
chaö
];

666 i‡(
h±r
 =
node
) {

667 
hash
->
èbÀ
[
chaö
] = 
node
->
√xt
;

669 
h±r
->
√xt
 !
node
)

670 
h±r
 = h±r->
√xt
;

671 
h±r
->
√xt
 = 
node
->next;

674 
hash
->
nodecou¡
--;

675 
	`as£π
 (
	`hash_vîify
(
hash
));

676 
node
->
√xt
 = 
NULL
;

678  
node
;

679 
	}
}

685 
	$hash_sˇn_dñ‰ì
(
hash_t
 *
hash
, 
hnode_t
 *
node
)

687 
	`hash_sˇn_dñëe
(
hash
, 
node
);

688 
hash
->
	`‰ìnode
(
node
, hash->
c⁄ãxt
);

689 
	}
}

700 
	$hash_vîify
(
hash_t
 *
hash
)

702 
hashcou¡_t
 
cou¡
 = 0;

703 
hash_vÆ_t
 
chaö
;

704 
hnode_t
 *
h±r
;

706 i‡(
hash
->
dy«mic
) {

707 i‡(
hash
->
lowm¨k
 >hash->
highm¨k
)

709 i‡(!
	`is_powî_of_two
(
hash
->
highm¨k
))

711 i‡(!
	`is_powî_of_two
(
hash
->
lowm¨k
))

715 
chaö
 = 0; chaö < 
hash
->
nchaös
; chain++) {

716 
h±r
 = 
hash
->
èbÀ
[
chaö
]; h±∏!0; h±∏h±r->
√xt
) {

717 i‡((
h±r
->
hkey
 & 
hash
->
mask
Ë!
chaö
)

719 
cou¡
++;

723 i‡(
cou¡
 !
hash
->
nodecou¡
)

727 
	}
}

734 #unde‡
hash_isfuŒ


735 
	$hash_isfuŒ
(
hash_t
 *
hash
)

737  
hash
->
nodecou¡
 =hash->
maxcou¡
;

738 
	}
}

745 #unde‡
hash_i£m±y


746 
	$hash_i£m±y
(
hash_t
 *
hash
)

748  
hash
->
nodecou¡
 == 0;

749 
	}
}

751 
hnode_t
 *
	$hnode_Æloc
(*
c⁄ãxt
)

753 ()(
c⁄ãxt
);

754  
	`mÆloc
( *
	`hnode_Æloc
(
NULL
));

755 
	}
}

757 
	$hnode_‰ì
(
hnode_t
 *
node
, *
c⁄ãxt
)

759 ()(
c⁄ãxt
);

760 
	`‰ì
(
node
);

761 
	}
}

768 
hnode_t
 *
	$hnode_¸óã
(*
d©a
)

770 
hnode_t
 *
node
 = 
	`mÆloc
( *node);

771 i‡(
node
) {

772 
node
->
d©a
 = data;

773 
node
->
√xt
 = 
NULL
;

775  
node
;

776 
	}
}

782 
hnode_t
 *
	$hnode_öô
(
hnode_t
 *
hnode
, *
d©a
)

784 
hnode
->
d©a
 = data;

785 
hnode
->
√xt
 = 
NULL
;

786  
hnode
;

787 
	}
}

793 
	$hnode_de°roy
(
hnode_t
 *
hnode
)

795 
	`‰ì
(
hnode
);

796 
	}
}

798 #unde‡
hnode_put


799 
	$hnode_put
(
hnode_t
 *
node
, *
d©a
)

801 
node
->
d©a
 = data;

802 
	}
}

804 #unde‡
hnode_gë


805 *
	$hnode_gë
(
hnode_t
 *
node
)

807  
node
->
d©a
;

808 
	}
}

810 #unde‡
hnode_gëkey


811 c⁄° *
	$hnode_gëkey
(
hnode_t
 *
node
)

813  
node
->
key
;

814 
	}
}

816 #unde‡
hash_cou¡


817 
hashcou¡_t
 
	$hash_cou¡
(
hash_t
 *
hash
)

819  
hash
->
nodecou¡
;

820 
	}
}

822 #unde‡
hash_size


823 
hashcou¡_t
 
	$hash_size
(
hash_t
 *
hash
)

825  
hash
->
nchaös
;

826 
	}
}

828 
hash_vÆ_t
 
	$hash_fun_deÁu…
(c⁄° *
key
)

830 
øndbox
[] = {

837 c⁄° *
°r
 = 
key
;

838 
hash_vÆ_t
 
acc
 = 0;

840 *
°r
) {

841 
acc
 ^
øndbox
[(*
°r
 +ácc) & 0xf];

842 
acc
 = (acc << 1) | (acc >> 31);

843 
acc
 &= 0xffffffffU;

844 
acc
 ^
øndbox
[((*
°r
++ >> 4) +ácc) & 0xf];

845 
acc
 = (acc << 2) | (acc >> 30);

846 
acc
 &= 0xffffffffU;

848  
acc
;

849 
	}
}

851 
	$hash_comp_deÁu…
(c⁄° *
key1
, c⁄° *
key2
)

853  
	`°rcmp
(
key1
, 
key2
);

854 
	}
}

	@adt/hash.h

1 #unde‡
KAZLIB_OPAQUE_DEBUG


23 #i‚de‡
HASH_H


24 
	#HASH_H


	)

26 
	~<limôs.h
>

27 
	~<°döt.h
>

29 #ifde‡
KAZLIB_SIDEEFFECT_DEBUG


30 
	~"sfx.h
"

37 #ifde‡
__˝lu•lus


41 
	thashcou¡_t
;

42 
	#HASHCOUNT_T_MAX
 
ULONG_MAX


	)

44 
uöt32_t
 
	thash_vÆ_t
;

45 
	#HASH_VAL_T_MAX
 
UINT32_MAX


	)

47 c⁄° 
hash_vÆ_t_bô
 = 32;

49 #i‚de‡
HASH_VAL_T_BIT


50 
	#HASH_VAL_T_BIT
 ((Ë
hash_vÆ_t_bô
)

	)

77 
	shnode_t
 {

78 #i‡
deföed
(
HASH_IMPLEMENTATION
Ë|| !deföed(
KAZLIB_OPAQUE_DEBUG
)

79 
hnode_t
 *
hash_√xt
;

80 c⁄° *
hash_key
;

81 *
hash_d©a
;

82 
hash_vÆ_t
 
hash_hkey
;

84 
hash_dummy
;

86 } 
	thnode_t
;

95 (*
hash_comp_t
)(const *, const *);

109 
hash_vÆ_t
 (*
	thash_fun_t
)(const *);

115 
hnode_t
 *(*
	thnode_Æloc_t
)(*);

116 (*
hnode_‰ì_t
)(
	thnode_t
 *, *);

153 
	shash_t
 {

154 #i‡
deföed
(
HASH_IMPLEMENTATION
Ë|| !deföed(
KAZLIB_OPAQUE_DEBUG
)

155 
hnode_t
 **
hash_èbÀ
;

156 
hashcou¡_t
 
hash_nchaös
;

157 
hashcou¡_t
 
hash_nodecou¡
;

158 
hashcou¡_t
 
hash_maxcou¡
;

159 
hashcou¡_t
 
hash_highm¨k
;

160 
hashcou¡_t
 
hash_lowm¨k
;

161 
hash_comp_t
 
hash_com∑ª
;

162 
hash_fun_t
 
hash_fun˘i⁄
;

163 
hnode_Æloc_t
 
hash_Ælo˙ode
;

164 
hnode_‰ì_t
 
hash_‰ìnode
;

165 *
hash_c⁄ãxt
;

166 
hash_vÆ_t
 
hash_mask
;

167 
hash_dy«mic
;

169 
hash_dummy
;

171 } 
	thash_t
;

183 
	shsˇn_t
 {

184 #i‡
deföed
(
HASH_IMPLEMENTATION
Ë|| !deföed(
KAZLIB_OPAQUE_DEBUG
)

185 
hash_t
 *
hash_èbÀ
;

186 
hash_vÆ_t
 
hash_chaö
;

187 
hnode_t
 *
hash_√xt
;

189 
hash_dummy
;

191 } 
	thsˇn_t
;

193 
hash_t
 *
hash_¸óã
(
hashcou¡_t
, 
hash_comp_t
, 
hash_fun_t
);

194 
hash_£t_Æloˇt‹
(
hash_t
 *, 
hnode_Æloc_t
, 
hnode_‰ì_t
, *);

195 
hash_de°roy
(
hash_t
 *);

196 
hash_‰ì_nodes
(
hash_t
 *);

197 
hash_‰ì
(
hash_t
 *);

198 
hash_t
 *
hash_öô
(hash_à*, 
hashcou¡_t
, 
hash_comp_t
,

199 
hash_fun_t
, 
hnode_t
 **, 
hashcou¡_t
);

200 
hash_ö£π
(
hash_t
 *, 
hnode_t
 *, const *);

201 
hnode_t
 *
hash_lookup
(
hash_t
 *, const *);

202 
hnode_t
 *
hash_dñëe
(
hash_t
 *, hnode_t *);

203 
hash_Æloc_ö£π
(
hash_t
 *, const *, *);

204 
hash_dñëe_‰ì
(
hash_t
 *, 
hnode_t
 *);

206 
hnode_put
(
hnode_t
 *, *);

207 *
hnode_gë
(
hnode_t
 *);

208 c⁄° *
hnode_gëkey
(
hnode_t
 *);

209 
hashcou¡_t
 
hash_cou¡
(
hash_t
 *);

210 
hashcou¡_t
 
hash_size
(
hash_t
 *);

212 
hash_isfuŒ
(
hash_t
 *);

213 
hash_i£m±y
(
hash_t
 *);

215 
hash_sˇn_begö
(
hsˇn_t
 *, 
hash_t
 *);

216 
hnode_t
 *
hash_sˇn_√xt
(
hsˇn_t
 *);

217 
hnode_t
 *
hash_sˇn_dñëe
(
hash_t
 *, hnode_t *);

218 
hash_sˇn_dñ‰ì
(
hash_t
 *, 
hnode_t
 *);

220 
hash_vîify
(
hash_t
 *);

222 
hnode_t
 *
hnode_¸óã
(*);

223 
hnode_t
 *
hnode_öô
(hnode_t *, *);

224 
hnode_de°roy
(
hnode_t
 *);

226 #i‡
deföed
(
HASH_IMPLEMENTATION
Ë|| !deföed(
KAZLIB_OPAQUE_DEBUG
)

227 #ifde‡
KAZLIB_SIDEEFFECT_DEBUG


228 
	#hash_isfuŒ
(
H
Ë(
	`SFX_CHECK
(H)->
hash_nodecou¡
 =(H)->
hash_maxcou¡
)

	)

230 
	#hash_isfuŒ
(
H
Ë((H)->
hash_nodecou¡
 =(H)->
hash_maxcou¡
)

	)

232 
	#hash_i£m±y
(
H
Ë((H)->
hash_nodecou¡
 =0)

	)

233 
	#hash_cou¡
(
H
Ë((H)->
hash_nodecou¡
)

	)

234 
	#hash_size
(
H
Ë((H)->
hash_nchaös
)

	)

235 
	#hnode_gë
(
N
Ë((N)->
hash_d©a
)

	)

236 
	#hnode_gëkey
(
N
Ë((N)->
hash_key
)

	)

237 
	#hnode_put
(
N
, 
V
Ë((N)->
hash_d©a
 = (V))

	)

240 #ifde‡
__˝lu•lus


	@adt/list.c

22 
	~<°dlib.h
>

23 
	~<°ddef.h
>

24 
	~<as£π.h
>

25 
	#LIST_IMPLEMENTATION


	)

26 
	~"li°.h
"

28 
	#√xt
 
li°_√xt


	)

29 
	#¥ev
 
li°_¥ev


	)

30 
	#d©a
 
li°_d©a


	)

32 
	#poﬁ
 
li°_poﬁ


	)

33 
	#‰e
 
li°_‰ì


	)

34 
	#size
 
li°_size


	)

36 
	#nûnode
 
li°_nûnode


	)

37 
	#nodecou¡
 
li°_nodecou¡


	)

38 
	#maxcou¡
 
li°_maxcou¡


	)

40 
	#li°_nû
(
L
Ë(&(L)->
nûnode
)

	)

41 
	#li°_fú°_¥iv
(
L
Ë((L)->
nûnode
.
√xt
)

	)

42 
	#li°_œ°_¥iv
(
L
Ë((L)->
nûnode
.
¥ev
)

	)

43 
	# ode_√xt
(
N
Ë((N)->
√xt
)

	)

44 
	# ode_¥ev
(
N
Ë((N)->
¥ev
)

	)

46 #ifde‡
KAZLIB_RCSID


47 c⁄° 
	grcsid
[] = "$Id:Üist.c,v 1.19.2.1 2000/04/17 01:07:21 kaz Exp $";

57 
li°_t
 *
	$li°_öô
(
li°_t
 *
li°
, 
li°cou¡_t
 
maxcou¡
)

59 
	`as£π
 (
maxcou¡
 != 0);

60 
li°
->
nûnode
.
√xt
 = &list->nilnode;

61 
li°
->
nûnode
.
¥ev
 = &list->nilnode;

62 
li°
->
nodecou¡
 = 0;

63 
li°
->
maxcou¡
 = maxcount;

64  
li°
;

65 
	}
}

73 
li°_t
 *
	$li°_¸óã
(
li°cou¡_t
 
maxcou¡
)

75 
li°_t
 *
√w
 = 
	`mÆloc
( *new);

76 i‡(
√w
) {

77 
	`as£π
 (
maxcou¡
 != 0);

78 
√w
->
nûnode
.
√xt
 = &new->nilnode;

79 
√w
->
nûnode
.
¥ev
 = &new->nilnode;

80 
√w
->
nodecou¡
 = 0;

81 
√w
->
maxcou¡
 = maxcount;

83  
√w
;

84 
	}
}

91 
	$li°_de°roy
(
li°_t
 *
li°
)

93 
	`as£π
 (
	`li°_i£m±y
(
li°
));

94 
	`‰ì
(
li°
);

95 
	}
}

103 
	$li°_de°roy_nodes
(
li°_t
 *
li°
)

105 
 ode_t
 *
 ode
 = 
	`li°_fú°_¥iv
(
li°
), *
nû
 = 
	`li°_nû
÷i°), *
tmp
;

107 
 ode
 !
nû
) {

108 
tmp
 = 
 ode
->
√xt
;

109 
 ode
->
√xt
 = 
NULL
;

110 
 ode
->
¥ev
 = 
NULL
;

111 
	` ode_de°roy
(
 ode
);

112 
 ode
 = 
tmp
;

115 
	`li°_öô
(
li°
,Üi°->
maxcou¡
);

116 
	}
}

123 
	$li°_ªtu∫_nodes
(
li°_t
 *
li°
, 
 odïoﬁ_t
 *
poﬁ
)

125 
 ode_t
 *
 ode
 = 
	`li°_fú°_¥iv
(
li°
), *
tmp
, *
nû
 = 
	`li°_nû
(list);

127 
 ode
 !
nû
) {

128 
tmp
 = 
 ode
->
√xt
;

129 
 ode
->
√xt
 = 
NULL
;

130 
 ode
->
¥ev
 = 
NULL
;

131 
	` ode_ªtu∫
(
poﬁ
, 
 ode
);

132 
 ode
 = 
tmp
;

135 
	`li°_öô
(
li°
,Üi°->
maxcou¡
);

136 
	}
}

142 
	$li°_ös_a·î
(
li°_t
 *
li°
, 
 ode_t
 *
√w
,Ünode_à*
this
)

144 
 ode_t
 *
th©
 = 
this
->
√xt
;

146 
	`as£π
 (
√w
 !
NULL
);

147 
	`as£π
 (!
	`li°_c⁄èös
(
li°
, 
√w
));

148 
	`as£π
 (!
	` ode_is_ö_a_li°
(
√w
));

149 
	`as£π
 (
this
 =
	`li°_nû
(
li°
Ë|| 
	`li°_c⁄èös
(list,Åhis));

150 
	`as£π
 (
li°
->
nodecou¡
 + 1 >Üist->nodecount);

152 
√w
->
¥ev
 = 
this
;

153 
√w
->
√xt
 = 
th©
;

154 
th©
->
¥ev
 = 
√w
;

155 
this
->
√xt
 = 
√w
;

156 
li°
->
nodecou¡
++;

158 
	`as£π
 (
li°
->
nodecou¡
 <li°->
maxcou¡
);

159 
	}
}

165 
	$li°_ös_bef‹e
(
li°_t
 *
li°
, 
 ode_t
 *
√w
,Ünode_à*
this
)

167 
 ode_t
 *
th©
 = 
this
->
¥ev
;

169 
	`as£π
 (
√w
 !
NULL
);

170 
	`as£π
 (!
	`li°_c⁄èös
(
li°
, 
√w
));

171 
	`as£π
 (!
	` ode_is_ö_a_li°
(
√w
));

172 
	`as£π
 (
this
 =
	`li°_nû
(
li°
Ë|| 
	`li°_c⁄èös
(list,Åhis));

173 
	`as£π
 (
li°
->
nodecou¡
 + 1 >Üist->nodecount);

175 
√w
->
√xt
 = 
this
;

176 
√w
->
¥ev
 = 
th©
;

177 
th©
->
√xt
 = 
√w
;

178 
this
->
¥ev
 = 
√w
;

179 
li°
->
nodecou¡
++;

181 
	`as£π
 (
li°
->
nodecou¡
 <li°->
maxcou¡
);

182 
	}
}

188 
 ode_t
 *
	$li°_dñëe
(
li°_t
 *
li°
, 
 ode_t
 *
dñ
)

190 
 ode_t
 *
√xt
 = 
dñ
->next;

191 
 ode_t
 *
¥ev
 = 
dñ
->prev;

193 
	`as£π
 (
	`li°_c⁄èös
(
li°
, 
dñ
));

195 
¥ev
->
√xt
 =Çext;

196 
√xt
->
¥ev
 =Örev;

197 
li°
->
nodecou¡
--;

199 
dñ
->
√xt
 = dñ->
¥ev
 = 
NULL
;

201  
dñ
;

202 
	}
}

210 
li°_¥o˚ss
(
li°_t
 *
li°
, *
c⁄ãxt
,

211 (* 
fun˘i⁄
)(
li°_t
 *
li°
, 
 ode_t
 *
 ode
, *
c⁄ãxt
))

213 
 ode_t
 *
node
 = 
	`li°_fú°_¥iv
(
li°
), *
√xt
, *
nû
 = 
	`li°_nû
(list);

215 
node
 !
nû
) {

218 
	`as£π
 (
	`li°_c⁄èös
(
li°
, 
node
));

219 
√xt
 = 
node
->next;

220 
	`fun˘i⁄
(
li°
, 
node
, 
c⁄ãxt
);

221 
node
 = 
√xt
;

223 
	}
}

229 
 ode_t
 *
	$ ode_¸óã
(*
d©a
)

231 
 ode_t
 *
√w
 = 
	`mÆloc
( *new);

232 i‡(
√w
) {

233 
√w
->
d©a
 = data;

234 
√w
->
√xt
 = 
NULL
;

235 
√w
->
¥ev
 = 
NULL
;

237  
√w
;

238 
	}
}

244 
 ode_t
 *
	$ ode_öô
(
 ode_t
 *
 ode
, *
d©a
)

246 
 ode
->
d©a
 = data;

247 
 ode
->
√xt
 = 
NULL
;

248 
 ode
->
¥ev
 = 
NULL
;

249  
 ode
;

250 
	}
}

256 
	$ ode_de°roy
(
 ode_t
 *
 ode
)

258 
	`as£π
 (!
	` ode_is_ö_a_li°
(
 ode
));

259 
	`‰ì
(
 ode
);

260 
	}
}

268 
 odïoﬁ_t
 *
	$ ode_poﬁ_öô
(
 odïoﬁ_t
 *
poﬁ
, 
 ode_t
 *
nodes
, 
li°cou¡_t
 
n
)

270 
li°cou¡_t
 
i
;

272 
	`as£π
 (
n
 != 0);

274 
poﬁ
->poﬁ = 
nodes
;

275 
poﬁ
->
‰e
 = 
nodes
;

276 
poﬁ
->
size
 = 
n
;

277 
i
 = 0; i < 
n
 - 1; i++) {

278 
nodes
[
i
].
√xt
 =Çodes + i + 1;

280 
nodes
[
i
].
√xt
 = 
NULL
;

281 
nodes
[
i
].
¥ev
 =Çodes;

282  
poﬁ
;

283 
	}
}

289 
 odïoﬁ_t
 *
	$ ode_poﬁ_¸óã
(
li°cou¡_t
 
n
)

291 
 odïoﬁ_t
 *
poﬁ
;

292 
 ode_t
 *
nodes
;

294 
	`as£π
 (
n
 != 0);

296 
poﬁ
 = 
	`mÆloc
( *pool);

297 i‡(!
poﬁ
)

298  
NULL
;

299 
nodes
 = 
	`mÆloc
(
n
 *  *nodes);

300 i‡(!
nodes
) {

301 
	`‰ì
(
poﬁ
);

302  
NULL
;

304 
	` ode_poﬁ_öô
(
poﬁ
, 
nodes
, 
n
);

305  
poﬁ
;

306 
	}
}

312 
	$ ode_poﬁ_is‰om
(
 odïoﬁ_t
 *
poﬁ
, 
 ode_t
 *
node
)

314 
li°cou¡_t
 
i
;

320 
i
 = 0; i < 
poﬁ
->
size
; i++) {

321 i‡(
poﬁ
->poﬁ + 
i
 =
node
)

325 
	}
}

331 
	$ ode_poﬁ_de°roy
(
 odïoﬁ_t
 *
p
)

333 
	`‰ì
(
p
->
poﬁ
);

334 
	`‰ì
(
p
);

335 
	}
}

342 
 ode_t
 *
	$ ode_b‹row
(
 odïoﬁ_t
 *
poﬁ
, *
d©a
)

344 
 ode_t
 *
√w
 = 
poﬁ
->
‰e
;

345 i‡(
√w
) {

346 
poﬁ
->
‰e
 = 
√w
->
√xt
;

347 
√w
->
d©a
 = data;

348 
√w
->
√xt
 = 
NULL
;

349 
√w
->
¥ev
 = 
NULL
;

351  
√w
;

352 
	}
}

359 
	$ ode_ªtu∫
(
 odïoﬁ_t
 *
poﬁ
, 
 ode_t
 *
node
)

361 
	`as£π
 (
	` ode_poﬁ_is‰om
(
poﬁ
, 
node
));

362 
	`as£π
 (!
	` ode_is_ö_a_li°
(
node
));

364 
node
->
√xt
 = 
poﬁ
->
‰e
;

365 
node
->
¥ev
 =Çode;

366 
poﬁ
->
‰e
 = 
node
;

367 
	}
}

374 
	$li°_c⁄èös
(
li°_t
 *
li°
, 
 ode_t
 *
node
)

376 
 ode_t
 *
n
, *
nû
 = 
	`li°_nû
(
li°
);

378 
n
 = 
	`li°_fú°_¥iv
(
li°
);Ç !
nû
;Ç = 
	` ode_√xt
(n)) {

379 i‡(
node
 =
n
)

384 
	}
}

392 
	$li°_exåa˘
(
li°_t
 *
de°
,Üi°_à*
sour˚
, 
 ode_t
 *
fú°
,Ünode_à*
œ°
)

394 
li°cou¡_t
 
moved
 = 1;

396 
	`as£π
 (
fú°
 =
NULL
 || 
	`li°_c⁄èös
(
sour˚
, first));

397 
	`as£π
 (
œ°
 =
NULL
 || 
	`li°_c⁄èös
(
sour˚
,Üast));

399 i‡(
fú°
 =
NULL
 || 
œ°
 == NULL)

404 
fú°
->
¥ev
->
√xt
 = 
œ°
->next;

405 
œ°
->
√xt
->
¥ev
 = 
fú°
->prev;

409 
œ°
->
√xt
 = &
de°
->
nûnode
;

410 
fú°
->
¥ev
 = 
de°
->
nûnode
.prev;

411 
de°
->
nûnode
.
¥ev
->
√xt
 = 
fú°
;

412 
de°
->
nûnode
.
¥ev
 = 
œ°
;

414 
fú°
 !
œ°
) {

415 
fú°
 = fú°->
√xt
;

416 
	`as£π
 (
fú°
 !
	`li°_nû
(
sour˚
));

417 
moved
++;

421 
	`as£π
 (
sour˚
->
nodecou¡
 - 
moved
 <= source->nodecount);

422 
	`as£π
 (
de°
->
nodecou¡
 + 
moved
 >= dest->nodecount);

425 
	`as£π
 (
moved
 <
sour˚
->
nodecou¡
);

427 
sour˚
->
nodecou¡
 -
moved
;

428 
de°
->
nodecou¡
 +
moved
;

431 
	`as£π
 (
	`li°_vîify
(
sour˚
));

432 
	`as£π
 (
	`li°_vîify
(
de°
));

433 
	}
}

444 
	$li°_å™s„r
(
li°_t
 *
de°
,Üi°_à*
sour˚
, 
 ode_t
 *
fú°
)

446 
li°cou¡_t
 
moved
 = 1;

447 
 ode_t
 *
œ°
;

449 
	`as£π
 (
fú°
 =
NULL
 || 
	`li°_c⁄èös
(
sour˚
, first));

451 i‡(
fú°
 =
NULL
)

454 
œ°
 = 
sour˚
->
nûnode
.
¥ev
;

456 
sour˚
->
nûnode
.
¥ev
 = 
fú°
->prev;

457 
fú°
->
¥ev
->
√xt
 = &
sour˚
->
nûnode
;

459 
œ°
->
√xt
 = &
de°
->
nûnode
;

460 
fú°
->
¥ev
 = 
de°
->
nûnode
.prev;

461 
de°
->
nûnode
.
¥ev
->
√xt
 = 
fú°
;

462 
de°
->
nûnode
.
¥ev
 = 
œ°
;

464 
fú°
 !
œ°
) {

465 
fú°
 = fú°->
√xt
;

466 
moved
++;

470 
	`as£π
 (
sour˚
->
nodecou¡
 - 
moved
 <= source->nodecount);

471 
	`as£π
 (
de°
->
nodecou¡
 + 
moved
 >= dest->nodecount);

474 
	`as£π
 (
moved
 <
sour˚
->
nodecou¡
);

476 
sour˚
->
nodecou¡
 -
moved
;

477 
de°
->
nodecou¡
 +
moved
;

480 
	`as£π
 (
	`li°_vîify
(
sour˚
));

481 
	`as£π
 (
	`li°_vîify
(
de°
));

482 
	}
}

484 
li°_mîge
(
li°_t
 *
de°
,Üi°_à*
sour
,

485 
	$com∑ª
 (const *, const *))

487 
 ode_t
 *
dn
, *
¢
, *
ä
;

488 
 ode_t
 *
d_nû
 = 
	`li°_nû
(
de°
), *
s_nû
 =Üi°_nû(
sour
);

491 i‡(
de°
 =
sour
)

495 
	`as£π
 (
	`li°_cou¡
(
sour
Ë+Üi°_cou¡(
de°
) >=Üist_count(sour));

498 
	`as£π
 (
	`li°_is_s‹ãd
(
sour
, 
com∑ª
));

499 
	`as£π
 (
	`li°_is_s‹ãd
(
de°
, 
com∑ª
));

501 
dn
 = 
	`li°_fú°_¥iv
(
de°
);

502 
¢
 = 
	`li°_fú°_¥iv
(
sour
);

504 
dn
 !
d_nû
 && 
¢
 !
s_nû
) {

505 i‡(
	`com∑ª
(
	` ode_gë
(
dn
),Ünode_gë(
¢
)) >= 0) {

506 
ä
 = 
	` ode_√xt
(
¢
);

507 
	`li°_dñëe
(
sour
, 
¢
);

508 
	`li°_ös_bef‹e
(
de°
, 
¢
, 
dn
);

509 
¢
 = 
ä
;

511 
dn
 = 
	` ode_√xt
(dn);

515 i‡(
dn
 !
d_nû
)

518 i‡(
¢
 !
s_nû
)

519 
	`li°_å™s„r
(
de°
, 
sour
, 
¢
);

520 
	}
}

522 
li°_s‹t
(
li°_t
 *
li°
, 
	$com∑ª
(const *, const *))

524 
li°_t
 
exåa
;

525 
li°cou¡_t
 
middÀ
;

526 
 ode_t
 *
node
;

528 i‡(
	`li°_cou¡
(
li°
) > 1) {

529 
middÀ
 = 
	`li°_cou¡
(
li°
) / 2;

530 
node
 = 
	`li°_fú°_¥iv
(
li°
);

532 
	`li°_öô
(&
exåa
, 
	`li°_cou¡
(
li°
Ë- 
middÀ
);

534 
middÀ
--)

535 
node
 = 
	` ode_√xt
(node);

537 
	`li°_å™s„r
(&
exåa
, 
li°
, 
node
);

538 
	`li°_s‹t
(
li°
, 
com∑ª
);

539 
	`li°_s‹t
(&
exåa
, 
com∑ª
);

540 
	`li°_mîge
(
li°
, &
exåa
, 
com∑ª
);

542 
	`as£π
 (
	`li°_is_s‹ãd
(
li°
, 
com∑ª
));

543 
	}
}

545 
 ode_t
 *
li°_föd
(
li°_t
 *
li°
, c⁄° *
key
, 
	$com∑ª
(const *, const *))

547 
 ode_t
 *
node
;

549 
node
 = 
	`li°_fú°_¥iv
(
li°
);Çodê!
	`li°_nû
÷i°);Çodênode->
√xt
) {

550 i‡(
	`com∑ª
(
	` ode_gë
(
node
), 
key
) == 0)

551  
node
;

555 
	}
}

562 
li°_is_s‹ãd
(
li°_t
 *
li°
, 
	$com∑ª
(const *, const *))

564 
 ode_t
 *
node
, *
√xt
, *
nû
;

566 
√xt
 = 
nû
 = 
	`li°_nû
(
li°
);

567 
node
 = 
	`li°_fú°_¥iv
(
li°
);

569 i‡(
node
 !
nû
)

570 
√xt
 = 
	` ode_√xt
(
node
);

572 ; 
√xt
 !
nû
; 
node
 =Çext,Çexà
	` ode_√xt
(next)) {

573 i‡(
	`com∑ª
(
	` ode_gë
(
node
),Ünode_gë(
√xt
)) > 0)

578 
	}
}

585 #unde‡
li°_i£m±y


586 #unde‡
li°_isfuŒ


587 #unde‡
 ode_poﬁ_i£m±y


588 #unde‡
li°_≠≥nd


589 #unde‡
li°_¥ïíd


590 #unde‡
li°_fú°


591 #unde‡
li°_œ°


592 #unde‡
li°_√xt


593 #unde‡
li°_¥ev


594 #unde‡
li°_cou¡


595 #unde‡
li°_dñ_fú°


596 #unde‡
li°_dñ_œ°


597 #unde‡
 ode_put


598 #unde‡
 ode_gë


604 
	$li°_i£m±y
(
li°_t
 *
li°
)

606  
li°
->
nodecou¡
 == 0;

607 
	}
}

614 
	$li°_isfuŒ
(
li°_t
 *
li°
)

616  
li°
->
nodecou¡
 =li°->
maxcou¡
;

617 
	}
}

623 
	$ ode_poﬁ_i£m±y
(
 odïoﬁ_t
 *
poﬁ
)

625  (
poﬁ
->
‰e
 =
NULL
);

626 
	}
}

632 
	$li°_≠≥nd
(
li°_t
 *
li°
, 
 ode_t
 *
node
)

634 
	`li°_ös_bef‹e
(
li°
, 
node
, &li°->
nûnode
);

635 
	}
}

641 
	$li°_¥ïíd
(
li°_t
 *
li°
, 
 ode_t
 *
node
)

643 
	`li°_ös_a·î
(
li°
, 
node
, &li°->
nûnode
);

644 
	}
}

650 
 ode_t
 *
	$li°_fú°
(
li°_t
 *
li°
)

652 i‡(
li°
->
nûnode
.
√xt
 == &list->nilnode)

653  
NULL
;

654  
li°
->
nûnode
.
√xt
;

655 
	}
}

661 
 ode_t
 *
	$li°_œ°
(
li°_t
 *
li°
)

663 i‡(
li°
->
nûnode
.
¥ev
 == &list->nilnode)

664  
NULL
;

665  
li°
->
nûnode
.
¥ev
;

666 
	}
}

672 
li°cou¡_t
 
	$li°_cou¡
(
li°_t
 *
li°
)

674  
li°
->
nodecou¡
;

675 
	}
}

681 
 ode_t
 *
	$li°_dñ_fú°
(
li°_t
 *
li°
)

683  
	`li°_dñëe
(
li°
,Üi°->
nûnode
.
√xt
);

684 
	}
}

690 
 ode_t
 *
	$li°_dñ_œ°
(
li°_t
 *
li°
)

692  
	`li°_dñëe
(
li°
,Üi°->
nûnode
.
¥ev
);

693 
	}
}

700 
	$ ode_put
(
 ode_t
 *
 ode
, *
d©a
)

702 
 ode
->
d©a
 = data;

703 
	}
}

709 *
	$ ode_gë
(
 ode_t
 *
 ode
)

711  
 ode
->
d©a
;

712 
	}
}

719 
 ode_t
 *
	$li°_√xt
(
li°_t
 *
li°
, 
 ode_t
 *
 ode
)

721 
	`as£π
 (
	`li°_c⁄èös
(
li°
, 
 ode
));

723 i‡(
 ode
->
√xt
 =
	`li°_nû
(
li°
))

724  
NULL
;

725  
 ode
->
√xt
;

726 
	}
}

732 
 ode_t
 *
	$li°_¥ev
(
li°_t
 *
li°
, 
 ode_t
 *
 ode
)

734 
	`as£π
 (
	`li°_c⁄èös
(
li°
, 
 ode
));

736 i‡(
 ode
->
¥ev
 =
	`li°_nû
(
li°
))

737  
NULL
;

738  
 ode
->
¥ev
;

739 
	}
}

745 
	$ ode_is_ö_a_li°
(
 ode_t
 *
 ode
)

747  (
 ode
->
√xt
 !
NULL
 ||Ünode->
¥ev
 != NULL);

748 
	}
}

751 
	$li°_vîify
(
li°_t
 *
li°
)

753 
 ode_t
 *
node
 = 
	`li°_fú°_¥iv
(
li°
), *
nû
 = 
	`li°_nû
(list);

754 
li°cou¡_t
 
cou¡
 = 
	`li°_cou¡
(
li°
);

756 i‡(
node
->
¥ev
 !
nû
)

759 i‡(
cou¡
 > 
li°
->
maxcou¡
)

762 
node
 !
nû
 && 
cou¡
--) {

763 i‡(
node
->
√xt
->
¥ev
 !=Çode)

765 
node
 =Çode->
√xt
;

768 i‡(
cou¡
 !0 || 
node
 !
nû
)

772 
	}
}

	@adt/list.h

1 #unde‡
KAZLIB_OPAQUE_DEBUG


23 #i‚de‡
LIST_H


24 
	#LIST_H


	)

26 
	~<limôs.h
>

28 #ifde‡
KAZLIB_SIDEEFFECT_DEBUG


29 
	~"sfx.h
"

30 
	#LIST_SFX_CHECK
(
E
Ë
	`SFX_CHECK
(E)

	)

32 
	#LIST_SFX_CHECK
(
E
Ë(E)

	)

39 #ifde‡
__˝lu•lus


43 
	tli°cou¡_t
;

44 
	#LISTCOUNT_T_MAX
 
ULONG_MAX


	)

46 
	s ode_t
 {

47 #i‡
deföed
(
LIST_IMPLEMENTATION
Ë|| !deföed(
KAZLIB_OPAQUE_DEBUG
)

48 
 ode_t
 *
li°_√xt
;

49 
 ode_t
 *
li°_¥ev
;

50 *
li°_d©a
;

52 
li°_dummy
;

54 } 
	t ode_t
;

56 
	s odïoﬁ_t
 {

57 #i‡
deföed
(
LIST_IMPLEMENTATION
Ë|| !deföed(
KAZLIB_OPAQUE_DEBUG
)

58 
 ode_t
 *
li°_poﬁ
;

59 
 ode_t
 *
li°_‰ì
;

60 
li°cou¡_t
 
li°_size
;

62 
li°_dummy
;

64 } 
	t odïoﬁ_t
;

66 
	sli°_t
 {

67 #i‡
deföed
(
LIST_IMPLEMENTATION
Ë|| !deföed(
KAZLIB_OPAQUE_DEBUG
)

68 
 ode_t
 
li°_nûnode
;

69 
li°cou¡_t
 
li°_nodecou¡
;

70 
li°cou¡_t
 
li°_maxcou¡
;

72 
li°_dummy
;

74 } 
	tli°_t
;

76 
 ode_t
 *
 ode_¸óã
(*);

77 
 ode_t
 *
 ode_öô
(lnode_t *, *);

78 
 ode_de°roy
(
 ode_t
 *);

79 
 ode_put
(
 ode_t
 *, *);

80 *
 ode_gë
(
 ode_t
 *);

81 
 ode_is_ö_a_li°
(
 ode_t
 *);

83 #i‡
deföed
(
LIST_IMPLEMENTATION
Ë|| !deföed(
KAZLIB_OPAQUE_DEBUG
)

84 
	# ode_put
(
N
, 
D
Ë((N)->
li°_d©a
 = (D))

	)

85 
	# ode_gë
(
N
Ë((N)->
li°_d©a
)

	)

88 
 odïoﬁ_t
 *
 ode_poﬁ_öô
÷nodïoﬁ_à*, 
 ode_t
 *, 
li°cou¡_t
);

89 
 odïoﬁ_t
 *
 ode_poﬁ_¸óã
(
li°cou¡_t
);

90 
 ode_poﬁ_de°roy
(
 odïoﬁ_t
 *);

91 
 ode_t
 *
 ode_b‹row
(
 odïoﬁ_t
 *, *);

92 
 ode_ªtu∫
(
 odïoﬁ_t
 *, 
 ode_t
 *);

93 
 ode_poﬁ_i£m±y
(
 odïoﬁ_t
 *);

94 
 ode_poﬁ_is‰om
(
 odïoﬁ_t
 *, 
 ode_t
 *);

96 
li°_t
 *
li°_öô
÷i°_à*, 
li°cou¡_t
);

97 
li°_t
 *
li°_¸óã
(
li°cou¡_t
);

98 
li°_de°roy
(
li°_t
 *);

99 
li°_de°roy_nodes
(
li°_t
 *);

100 
li°_ªtu∫_nodes
(
li°_t
 *, 
 odïoﬁ_t
 *);

102 
li°cou¡_t
 
li°_cou¡
(
li°_t
 *);

103 
li°_i£m±y
(
li°_t
 *);

104 
li°_isfuŒ
(
li°_t
 *);

105 
li°_c⁄èös
(
li°_t
 *, 
 ode_t
 *);

107 
li°_≠≥nd
(
li°_t
 *, 
 ode_t
 *);

108 
li°_¥ïíd
(
li°_t
 *, 
 ode_t
 *);

109 
li°_ös_bef‹e
(
li°_t
 *, 
 ode_t
 *,Ünode_t *);

110 
li°_ös_a·î
(
li°_t
 *, 
 ode_t
 *,Ünode_t *);

112 
 ode_t
 *
li°_fú°
(
li°_t
 *);

113 
 ode_t
 *
li°_œ°
(
li°_t
 *);

114 
 ode_t
 *
li°_√xt
(
li°_t
 *,Ünode_t *);

115 
 ode_t
 *
li°_¥ev
(
li°_t
 *,Ünode_t *);

117 
 ode_t
 *
li°_dñ_fú°
(
li°_t
 *);

118 
 ode_t
 *
li°_dñ_œ°
(
li°_t
 *);

119 
 ode_t
 *
li°_dñëe
(
li°_t
 *,Ünode_t *);

121 
li°_¥o˚ss
(
li°_t
 *, *, (*)÷i°_à*, 
 ode_t
 *, *));

123 
li°_vîify
(
li°_t
 *);

125 #i‡
deföed
(
LIST_IMPLEMENTATION
Ë|| !deföed(
KAZLIB_OPAQUE_DEBUG
)

126 
	# ode_poﬁ_i£m±y
(
P
Ë((P)->
li°_‰ì
 =0)

	)

127 
	#li°_cou¡
(
L
Ë((L)->
li°_nodecou¡
)

	)

128 
	#li°_i£m±y
(
L
Ë((L)->
li°_nodecou¡
 =0)

	)

129 
	#li°_isfuŒ
(
L
Ë(
	`LIST_SFX_CHECK
(L)->
li°_nodecou¡
 =(L)->
li°_maxcou¡
)

	)

130 
	#li°_√xt
(
L
, 
N
Ë(
	`LIST_SFX_CHECK
(N)->
li°_√xt
 =&(L)->
li°_nûnode
 ? 
NULL
 : (N)->li°_√xt)

	)

131 
	#li°_¥ev
(
L
, 
N
Ë(
	`LIST_SFX_CHECK
(N)->
li°_¥ev
 =&(L)->
li°_nûnode
 ? 
NULL
 : (N)->li°_¥ev)

	)

132 
	#li°_fú°
(
L
Ë
	`li°_√xt
(
	`LIST_SFX_CHECK
(L), &(L)->
li°_nûnode
)

	)

133 
	#li°_œ°
(
L
Ë
	`li°_¥ev
(
	`LIST_SFX_CHECK
(L), &(L)->
li°_nûnode
)

	)

136 #i‡
deföed
(
LIST_IMPLEMENTATION
Ë|| !deföed(
KAZLIB_OPAQUE_DEBUG
)

137 
	#li°_≠≥nd
(
L
, 
N
Ë
	`li°_ös_bef‹e
(
	`LIST_SFX_CHECK
(L), N, &(L)->
li°_nûnode
)

	)

138 
	#li°_¥ïíd
(
L
, 
N
Ë
	`li°_ös_a·î
(
	`LIST_SFX_CHECK
(L), N, &(L)->
li°_nûnode
)

	)

139 
	#li°_dñ_fú°
(
L
Ë
	`li°_dñëe
(
	`LIST_SFX_CHECK
(L), 
	`li°_fú°
(L))

	)

140 
	#li°_dñ_œ°
(
L
Ë
	`li°_dñëe
(
	`LIST_SFX_CHECK
(L), 
	`li°_œ°
(L))

	)

145 
li°_exåa˘
(
li°_t
 *,Üi°_à*, 
 ode_t
 *,Ünode_t *);

146 
li°_å™s„r
(
li°_t
 *,Üi°_à*, 
 ode_t
 *
fú°
);

147 
li°_mîge
(
li°_t
 *,Üist_t *, (const *, const *));

148 
li°_s‹t
(
li°_t
 *, (const *, const *));

149 
 ode_t
 *
li°_föd
(
li°_t
 *, const *, (const *, const *));

150 
li°_is_s‹ãd
(
li°_t
 *, (const *, const *));

152 #ifde‡
__˝lu•lus


	@adt/radixmap.c

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<as£π.h
>

8 
	~<mem/hÆloc.h
>

9 
	~"adt/ødixm≠.h
"

10 
	~"dbg.h
"

13 
	#FAST_OPS


	)

15 
	#ByãOf
(
x
,
y
Ë(((
uöt8_t
 *)x)[(y)])

	)

17 
ölöe
 
	$ødix_s‹t
(
off£t
, 
uöt64_t
 
N
, uöt64_à*
sour˚
, uöt64_à*
de°
)

19 
uöt64_t
 
cou¡
[256] = {0};

20 
uöt64_t
 *
˝
 = 
NULL
;

21 
uöt64_t
 *
•
 = 
NULL
;

22 
uöt64_t
 *
íd
 = 
NULL
;

23 
uöt64_t
 
s
 = 0;

24 
uöt64_t
 
c
 = 0;

27 
•
 = 
sour˚
, 
íd
 = sour˚ + 
N
; sp <Énd; sp++) {

28 
cou¡
[
	`ByãOf
(
•
, 
off£t
)]++;

32 
s
 = 0, 
˝
 = 
cou¡
, 
íd
 = count + 256; cp <Énd; cp++) {

33 
c
 = *
˝
;

34 *
˝
 = 
s
;

35 
s
 +
c
;

39 
•
 = 
sour˚
, 
íd
 = sour˚ + 
N
; sp <Énd; sp++) {

40 
˝
 = 
cou¡
 + 
	`ByãOf
(
•
, 
off£t
);

41 
de°
[*
˝
] = *
•
;

42 ++(*
˝
);

44 
	}
}

46 
	$RadixM≠_s‹t
(
RadixM≠
 *
m≠
)

48 
uöt64_t
 *
sour˚
 = &
m≠
->
c⁄ã¡s
[0].
øw
;

49 
uöt64_t
 *
ãmp
 = &
m≠
->ãmp[0].
øw
;

51 
	`ødix_s‹t
(0, 
m≠
->
íd
, 
sour˚
, 
ãmp
);

52 
	`ødix_s‹t
(1, 
m≠
->
íd
, 
ãmp
, 
sour˚
);

53 
	`ødix_s‹t
(2, 
m≠
->
íd
, 
sour˚
, 
ãmp
);

54 
	`ødix_s‹t
(3, 
m≠
->
íd
, 
ãmp
, 
sour˚
);

55 
	}
}

63 
RMEÀmít
 *
	$RadixM≠_föd_lowe°
(
RadixM≠
 *
m≠
, 
uöt32_t
 
to_föd
)

65 
low
 = 0;

66 
high
 = 
m≠
->
íd
 - 1;

67 
RMEÀmít
 *
d©a
 = 
m≠
->
c⁄ã¡s
;

69 
low
 <
high
) {

70 
middÀ
 = 
low
 + (
high
 -Üow)/2;

71 
uöt32_t
 
key
 = 
d©a
[
middÀ
].data.key;

73 i‡(
to_föd
 < 
key
) {

74 
high
 = 
middÀ
 - 1;

75 } i‡(
to_föd
 > 
key
) {

76 
low
 = 
middÀ
 + 1;

78  &
d©a
[
middÀ
];

82  &
d©a
[
low
];

83 
	}
}

90 
ölöe
 
	$RadixM≠_s‹t_èû
(
RadixM≠
 *
m≠
, 
RMEÀmít
 *
höt
)

92 
uöt64_t
 *
sour˚
 = &
m≠
->
c⁄ã¡s
[0].
øw
;

93 
uöt64_t
 *
ãmp
 = &
m≠
->ãmp[0].
øw
;

94 
size_t
 
cou¡
 = 
m≠
->
íd
;

95 
uöt32_t
 
max
 = 0;

98 if(
cou¡
 > 2) {

99 if(
höt
->
d©a
.
key
 =
UINT32_MAX
) {

102 
sour˚
 = &
höt
->
øw
;

104 *
höt
 = 
m≠
->
c⁄ã¡s
[m≠->
íd
 - 1];

105 
cou¡
 = 
m≠
->
c⁄ã¡s
 + m≠->
íd
 - 
höt
 - 1;

108 
max
 = 
höt
->
d©a
.
key
;

112 
RMEÀmít
 *
middÀ
 = 
	`RadixM≠_föd_lowe°
(
m≠
, 
höt
->
d©a
.
key
);

115 
cou¡
 = 
m≠
->
c⁄ã¡s
 + m≠->
íd
 - 
middÀ
;

116 
sour˚
 = &
middÀ
->
øw
;

118 
max
 = 
m≠
->
c⁄ã¡s
[m≠->
íd
 - 1].
d©a
.
key
;

122 
	`ødix_s‹t
(0, 
cou¡
, 
sour˚
, 
ãmp
);

123 
	`ødix_s‹t
(1, 
cou¡
, 
ãmp
, 
sour˚
);

125 if(
max
 > 
UINT16_MAX
) {

127 
	`ødix_s‹t
(2, 
cou¡
, 
sour˚
, 
ãmp
);

128 
	`ødix_s‹t
(3, 
cou¡
, 
ãmp
, 
sour˚
);

133 if(
m≠
->
c⁄ã¡s
[0].
d©a
.
key
 > map->contents[1].data.key) {

134 
m≠
->
ãmp
[0] = m≠->
c⁄ã¡s
[0];

135 
m≠
->
c⁄ã¡s
[0] = map->contents[1];

136 
m≠
->
c⁄ã¡s
[1] = m≠->
ãmp
[0];

141 
	}
}

144 
RMEÀmít
 *
	$RadixM≠_föd
(
RadixM≠
 *
m≠
, 
uöt32_t
 
to_föd
)

146 
low
 = 0;

147 
high
 = 
m≠
->
íd
 - 1;

148 
RMEÀmít
 *
d©a
 = 
m≠
->
c⁄ã¡s
;

150 
low
 <
high
) {

151 
middÀ
 = 
low
 + (
high
 -Üow)/2;

152 
uöt32_t
 
key
 = 
d©a
[
middÀ
].data.key;

154 i‡(
to_föd
 < 
key
) {

155 
high
 = 
middÀ
 - 1;

156 } i‡(
to_föd
 > 
key
) {

157 
low
 = 
middÀ
 + 1;

159  &
d©a
[
middÀ
];

163  
NULL
;

164 
	}
}

167 
RadixM≠
 *
	$RadixM≠_¸óã
(
size_t
 
max
)

169 
RadixM≠
 *
m≠
 = 
NULL
;

170 
m≠
 = 
	`ˇŒoc
((
RadixM≠
), 1);

172 
	`check_mem
(
m≠
);

174 
m≠
->
c⁄ã¡s
 = 
	`ˇŒoc
((
RMEÀmít
), 
max
 + 1);

175 
	`check_mem
(
m≠
->
c⁄ã¡s
);

177 
m≠
->
ãmp
 = 
	`ˇŒoc
((
RMEÀmít
), 
max
 + 1);

178 
	`check_mem
(
m≠
->
ãmp
);

180 
m≠
->
max
 = max;

181 
m≠
->
íd
 = 0;

183  
m≠
;

184 
îr‹
:

185 if(
m≠
) {

186 if(
m≠
->
c⁄ã¡s
) {

187 
	`‰ì
(
m≠
->
c⁄ã¡s
);

189 if(
m≠
->
ãmp
) {

190 
	`‰ì
(
m≠
->
ãmp
);

192 
	`‰ì
(
m≠
);

194  
NULL
;

195 
	}
}

197 
	$RadixM≠_de°roy
(
RadixM≠
 *
m≠
)

199 if(
m≠
) {

200 
	`‰ì
(
m≠
->
c⁄ã¡s
);

201 
	`‰ì
(
m≠
->
ãmp
);

202 
	`‰ì
(
m≠
);

204 
	}
}

207 
	$RadixM≠_add
(
RadixM≠
 *
m≠
, 
uöt32_t
 
key
, uöt32_à
vÆue
)

209 
	`check
(
key
 < 
UINT32_MAX
, "Key can't beÉqualÅo UINT32_MAX.");

211 
RMEÀmít
 
ñemít
 = {.
d©a
 = {.
key
 = key, .
vÆue
 = value}};

212 
	`check
(
m≠
->
íd
 + 1 < m≠->
max
, "RadixMap is full.");

214 
m≠
->
c⁄ã¡s
[m≠->
íd
++] = 
ñemít
;

216 #ifde‡
FAST_OPS


217 
	`RadixM≠_s‹t_èû
(
m≠
, m≠->
c⁄ã¡s
 + m≠->
íd
 - 1);

219 
	`RadixM≠_s‹t
(
m≠
);

224 
îr‹
:

226 
	}
}

228 
	$RadixM≠_dñëe
(
RadixM≠
 *
m≠
, 
RMEÀmít
 *
ñ
)

230 
	`check
(
m≠
->
íd
 > 0, "There isÇothingÅo delete.");

231 
	`check
(
ñ
 !
NULL
, "Can't deleteá NULLÉlement.");

233 
ñ
->
d©a
.
key
 = 
UINT32_MAX
;

235 if(
m≠
->
íd
 > 1) {

237 #ifde‡
FAST_OPS


238 
	`RadixM≠_s‹t_èû
(
m≠
, 
ñ
);

240 
	`RadixM≠_s‹t
(
m≠
);

244 
m≠
->
íd
--;

247 
îr‹
:

249 
	}
}

252 
uöt32_t
 
	$RadixM≠_push
(
RadixM≠
 *
m≠
, 
uöt32_t
 
vÆue
)

254 
RMEÀmít
 *
found
 = 
NULL
;

256 
	`check
(
m≠
->
íd
 + 1 < m≠->
max
, "RadixMap is full.");

259 
m≠
->
cou¡î
++;

261 if(
m≠
->
cou¡î
 =
UINT32_MAX
) {

263 
m≠
->
cou¡î
 = 0;

266 
found
 = 
	`RadixM≠_föd
(
m≠
, m≠->
cou¡î
);

267 } 
found
);

269 if(
m≠
->
íd
 =0 || m≠->
c⁄ã¡s
[m≠->íd-1].
d©a
.
key
 < m≠->
cou¡î
) {

271 
RMEÀmít
 
ñemít
 = {.
d©a
 = {.
key
 = 
m≠
->
cou¡î
, .
vÆue
 = value}};

272 
m≠
->
c⁄ã¡s
[m≠->
íd
++] = 
ñemít
;

275 
	`check
(
	`RadixM≠_add
(
m≠
, m≠->
cou¡î
, 
vÆue
) == 0, "FailedÅoádd onÖush.");

278  
m≠
->
cou¡î
;

280 
îr‹
:

281  
UINT32_MAX
;

282 
	}
}

	@adt/radixmap.h

1 #i‚de‡
_ødixm≠_h


2 
	~<°döt.h
>

4 
	uRMEÀmít
 {

5 
uöt64_t
 
	møw
;

7 
uöt32_t
 
	mkey
;

8 
uöt32_t
 
	mvÆue
;

9 } 
	md©a
;

10 } 
	tRMEÀmít
;

12 
	sRadixM≠
 {

13 
size_t
 
	mmax
;

14 
size_t
 
	míd
;

15 
uöt32_t
 
	mcou¡î
;

16 
RMEÀmít
 *
	mc⁄ã¡s
;

17 
RMEÀmít
 *
	mãmp
;

18 } 
	tRadixM≠
;

21 
RadixM≠
 *
RadixM≠_¸óã
(
size_t
 
max
);

23 
RadixM≠_de°roy
(
RadixM≠
 *
m≠
);

25 
RadixM≠_s‹t
(
RadixM≠
 *
m≠
);

27 
RMEÀmít
 *
RadixM≠_föd
(
RadixM≠
 *
m≠
, 
uöt32_t
 
key
);

29 
RadixM≠_add
(
RadixM≠
 *
m≠
, 
uöt32_t
 
key
, uöt32_à
vÆue
);

31 
RadixM≠_dñëe
(
RadixM≠
 *
m≠
, 
RMEÀmít
 *
ñ
);

33 
uöt32_t
 
RadixM≠_push
(
RadixM≠
 *
m≠
, uöt32_à
vÆue
);

	@adt/tst.c

35 
	~<°dlib.h
>

36 
	~"t°.h
"

37 
	~<°dio.h
>

38 
	~<as£π.h
>

39 
	~<dbg.h
>

40 
	~<mem/hÆloc.h
>

42 
	st°_cﬁÀ˘_t
 {

43 
li°_t
 *
	mvÆues
;

44 
t°_cﬁÀ˘_ã°_cb
 
	mã°î
;

45 c⁄° *
	mkey
;

46 
size_t
 
	mÀn
;

47 } 
	tt°_cﬁÀ˘_t
;

50 
	mMAX_TRAVERSE_SIZE
 = 128

53 
	$t°_cﬁÀ˘_buûd
(*
vÆue
, 
t°_cﬁÀ˘_t
 *
ªsu…s
)

55 if(!
ªsu…s
->
ã°î
 ||Ñesu…s->
	`ã°î
(
vÆue
,Ñesu…s->
key
,Ñesu…s->
Àn
)) {

56 
 ode_t
 *
node
 = 
	` ode_¸óã
(
vÆue
);

57 
	`li°_≠≥nd
(
ªsu…s
->
vÆues
, 
node
);

59 
	}
}

61 
li°_t
 *
	$t°_cﬁÀ˘
(
t°_t
 *
roŸ
, c⁄° *
s
, 
size_t
 
Àn
, 
t°_cﬁÀ˘_ã°_cb
 
ã°î
)

63 
t°_cﬁÀ˘_t
 
ªsu…s
 = {.
vÆues
 = 
NULL
, .
ã°î
 =Åe°î, .
key
 = 
s
, .
Àn
 =Üen};

64 
t°_t
 *
p
 = 
roŸ
;

65 
t°_t
 *
œ°
 = 
p
;

66 
size_t
 
i
 = 0;

67 
ªsu…s
.
vÆues
 = 
	`li°_¸óã
(
LISTCOUNT_T_MAX
);

70 
i
 < 
Àn
 && 
p
) {

71 i‡(
s
[
i
] < 
p
->
•lôch¨
) {

72 
p
 =Ö->
low
;

73 } i‡(
s
[
i
] =
p
->
•lôch¨
) {

74 
i
++;

75 if(
i
 < 
Àn
) {

76 if(
p
->
vÆue
Ë
œ°
 =Ö;

77 
p
 =Ö->
equÆ
;

80 
p
 =Ö->
high
;

84 if((
œ°
 && 
ªsu…s
.
ã°î
Ë|| 
p
) {

86 
	`t°_åavî£
(
p
 =
NULL
 ? 
œ°
 :Ö, (
t°_åavî£_cb
)
t°_cﬁÀ˘_buûd
, &
ªsu…s
);

89  
ªsu…s
.
vÆues
;

90 
	}
}

92 *
	$t°_£¨ch_suffix
(
t°_t
 *
roŸ
, c⁄° *
s
, 
size_t
 
Àn
)

94 if(
Àn
 =0Ë 
NULL
;

96 
t°_t
 *
p
 = 
roŸ
;

97 
t°_t
 *
œ°
 = 
NULL
;

98 
i
 = 
Àn
-1;

100 
i
 >0 && 
p
) {

101 i‡(
s
[
i
] < 
p
->
•lôch¨
) {

102 
p
 =Ö->
low
;

103 } i‡(
s
[
i
] =
p
->
•lôch¨
) {

104 
i
--;

105 if(
i
 >= 0) {

106 if(
p
->
vÆue
Ë
œ°
 =Ö;

107 
p
 =Ö->
equÆ
;

110 
p
 =Ö->
high
;

114 
p
 =Ö ?Ö : 
œ°
;

116 
p
 && !p->
vÆue
) {

117 
p
 =Ö->
equÆ
;

120  
p
 ?Ö->
vÆue
 : 
NULL
;

121 
	}
}

123 *
	$t°_£¨ch_¥efix
(
t°_t
 *
roŸ
, c⁄° *
s
, 
size_t
 
Àn
)

125 if(
Àn
 =0Ë 
NULL
;

127 
t°_t
 *
p
 = 
roŸ
;

128 
t°_t
 *
œ°
 = 
NULL
;

129 
size_t
 
i
 = 0;

131 
i
 < 
Àn
 && 
p
) {

132 i‡(
s
[
i
] < 
p
->
•lôch¨
) {

133 
p
 =Ö->
low
;

134 } i‡(
s
[
i
] =
p
->
•lôch¨
) {

135 
i
++;

136 if(
i
 < 
Àn
) {

137 if(
p
->
vÆue
Ë
œ°
 =Ö;

138 
p
 =Ö->
equÆ
;

141 
p
 =Ö->
high
;

145 
p
 =Ö ?Ö : 
œ°
;

148 
p
 && !p->
vÆue
) {

149 
p
 =Ö->
equÆ
;

152  
p
 ?Ö->
vÆue
 : 
NULL
;

153 
	}
}

155 *
	$t°_£¨ch
(
t°_t
 *
roŸ
, c⁄° *
s
, 
size_t
 
Àn
)

157 
t°_t
 *
p
 = 
roŸ
;

158 
size_t
 
i
 = 0;

160 
i
 < 
Àn
 && 
p
) {

162 i‡(
s
[
i
] < 
p
->
•lôch¨
) {

163 
p
 =Ö->
low
;

164 } i‡(
s
[
i
] =
p
->
•lôch¨
) {

165 
i
++;

166 if(
i
 < 
Àn
Ë
p
 =Ö->
equÆ
;

168 
p
 =Ö->
high
;

172 if(
p
) {

173  
p
->
vÆue
;

175  
NULL
;

177 
	}
}

180 
ölöe
 
t°_t
 *
	$t°_ö£π_ba£
(
t°_t
 *
roŸ
,Å°_à*
p
, c⁄° *
s
, 
size_t
 
Àn
, *
vÆue
)

182 i‡(
p
 =
NULL
) {

183 
p
 = (
t°_t
 *Ë
	`h_ˇŒoc
((tst_t), 1);

185 if(
roŸ
 =
NULL
) {

186 
roŸ
 = 
p
;

188 
	`h©èch
(
p
, 
roŸ
);

191 
p
->
•lôch¨
 = *
s
;

194 i‡(*
s
 < 
p
->
•lôch¨
) {

195 
p
->
low
 = 
	`t°_ö£π_ba£
(
roŸ
,Ö->low, 
s
, 
Àn
, 
vÆue
);

196 } i‡(*
s
 =
p
->
•lôch¨
) {

197 i‡(
Àn
 > 1) {

199 
p
->
equÆ
 = 
	`t°_ö£π_ba£
(
roŸ
,Ö->equÆ, 
s
+1, 
Àn
 - 1, 
vÆue
);

201 
	`as£π
(
p
->
vÆue
 =
NULL
 && "Duplicate insert intoÅst.");

202 
p
->
vÆue
 = value;

205 
p
->
high
 = 
	`t°_ö£π_ba£
(
roŸ
,Ö->high, 
s
, 
Àn
, 
vÆue
);

208  
p
;

209 
	}
}

211 
t°_t
 *
	$t°_ö£π
(
t°_t
 *
p
, c⁄° *
s
, 
size_t
 
Àn
, *
vÆue
)

213  
	`t°_ö£π_ba£
(
p
,Ö, 
s
, 
Àn
, 
vÆue
);

214 
	}
}

217 
t°_t
 **
	$t°_ªsize_queue
(
t°_t
 **
queue
, 
q_°¨t
, 
q_size
, 
q_max
, 
√w_size
)

219 
i
 = 0;

220 
t°_t
 ** 
√w_queue
 = 
	`ˇŒoc
(—°_à*), 
√w_size
);

221 
	`check
(
√w_queue
, "FailedÅoÑeallocate queue forÅraverse");

223 
i
 = 0; i < 
q_size
; i++) {

224 
√w_queue
[
i
] = 
queue
[(ò+ 
q_°¨t
Ë% 
q_max
];

227 
	`‰ì
(
queue
);

228  
√w_queue
;

230 
îr‹
:

231 
	`‰ì
(
queue
);

232  
NULL
;

233 
	}
}

237 
	$t°_åavî£
(
t°_t
 *
p
, 
t°_åavî£_cb
 
cb
, *
d©a
)

239 i‡(!
p
) ;

241 
q_°¨t
 = 0;

242 
q_size
 = 0;

243 
q_max
 = 
MAX_TRAVERSE_SIZE
;

244 
t°_t
 **
queue
 = 
	`ˇŒoc
(—°_à*), 
MAX_TRAVERSE_SIZE
);

245 
	`check
(
queue
, "FailedÅo malloc queue forÅraverse");

247 
queue
[
q_°¨t
] = 
p
;

248 
q_size
++;

250 
q_size
 > 0) {

251 
t°_t
 *
cur
 = 
queue
[
q_°¨t
];

252 
q_°¨t
 = (q_°¨à+ 1Ë% 
q_max
;

253 
q_size
--;

256 if(
q_size
 + 3 > 
q_max
) {

257 
queue
 = 
	`t°_ªsize_queue
(queue, 
q_°¨t
, 
q_size
, 
q_max
, q_max * 2);

258 
q_°¨t
 = 0;

259 
q_max
 = q_max * 2;

262 if(
cur
->
vÆue
Ë
	`cb
(cur->vÆue, 
d©a
);

264 if(
cur
->
low
Ë
queue
[(
q_°¨t
 + (
q_size
++)Ë% 
q_max
] = cur->low;

265 if(
cur
->
equÆ
Ë
queue
[(
q_°¨t
 + (
q_size
++)Ë% 
q_max
] = cur->equal;

266 if(
cur
->
high
Ë
queue
[(
q_°¨t
 + (
q_size
++)Ë% 
q_max
] = cur->high;

269 
	`‰ì
(
queue
);

272 
îr‹
:

273 if(
queue
Ë
	`‰ì
(queue);

274 
	}
}

277 
	$t°_de°roy
(
t°_t
 *
roŸ
)

279 if(
roŸ
) {

280 
	`h_‰ì
(
roŸ
);

282 
	}
}

	@adt/tst.h

35 #i‚de‡
t°_h


36 
	#t°_h


	)

38 
	~<°dlib.h
>

39 
	~<adt/li°.h
>

41 
	st°_t
 {

42 
	m•lôch¨
;

43 
t°_t
 *
	mlow
;

44 
t°_t
 *
	mequÆ
;

45 
t°_t
 *
	mhigh
;

46 *
	mvÆue
;

47 } 
	tt°_t
;

50 (*
	tt°_åavî£_cb
)(*
	tvÆue
, *
	td©a
);

51 (*
	tt°_cﬁÀ˘_ã°_cb
)(*
	tvÆue
, c⁄° *
	t∑th
, 
	tsize_t
 
	tÀn
);

56 *
	`t°_£¨ch_suffix
(
t°_t
 *
roŸ
, c⁄° *
s
, 
size_t
 
Àn
);

58 *
	`t°_£¨ch
(
t°_t
 *
roŸ
, c⁄° *
s
, 
size_t
 
Àn
);

60 *
	`t°_£¨ch_¥efix
(
t°_t
 *
roŸ
, c⁄° *
s
, 
size_t
 
Àn
);

62 
t°_t
 *
	`t°_ö£π
—°_à*
p
, c⁄° *
s
, 
size_t
 
Àn
, *
vÆue
);

64 
	`t°_åavî£
(
t°_t
 *
p
, 
t°_åavî£_cb
 
cb
, *
d©a
);

66 
li°_t
 *
	`t°_cﬁÀ˘
(
t°_t
 *
roŸ
, c⁄° *
s
, 
size_t
 
Àn
, 
t°_cﬁÀ˘_ã°_cb
 
ã°î
);

68 
	`t°_de°roy
(
t°_t
 *
roŸ
);

	@bsd_specific.c

35 
	~<°ddef.h
>

36 
	~<sys/ty≥s.h
>

37 
	~<sys/sockë.h
>

38 
	~<sys/uio.h
>

39 
	~<èsk/èsk.h
>

40 
	~<dbg.h
>

43 #i‡
deföed
(
__APPLE__
Ë|| deföed(
__FªeBSD__
)

48 
	$bsd_£ndfûe
(
out_fd
, 
ö_fd
, 
off_t
 *
off£t
, 
size_t
 
cou¡
) {

49 
off_t
 
my_cou¡
 = 
cou¡
;

50 
rc
;

55 
	`fdwaô
(
out_fd
, 'w');

56 #i‡
	`deföed
(
__APPLE__
)

57 
rc
 = 
	`£ndfûe
(
ö_fd
, 
out_fd
, *
off£t
, &
my_cou¡
, 
NULL
, 0);

58 #ñi‡
	`deföed
(
__FªeBSD__
)

59 
rc
 = 
	`£ndfûe
(
ö_fd
, 
out_fd
, *
off£t
, 
cou¡
, 
NULL
, &
my_cou¡
, 0);

61 *
off£t
 +
my_cou¡
;

62 } 
rc
 !0 && 
î∫o
 == 35);

64 
	`check
(
rc
 == 0, "OS X sendfile wrapper failed");

66  
my_cou¡
;

68 
îr‹
:

70 
	}
}

74 
fdªcv
(
fd
, *
buf
, 
n
);

75 
fd£nd
(
fd
, *
buf
, 
n
);

77 
	#BSD_SENDFILE_BUF_SIZE
 16384

	)

78 
	~<uni°d.h
>

82 
	$bsd_£ndfûe
(
out_fd
, 
ö_fd
, 
off_t
 *
off£t
, 
size_t
 
cou¡
) {

83 
buf
[
BSD_SENDFILE_BUF_SIZE
];

84 
ªt
 = -1;

85 
off_t
 
‹ig_off£t
 = 0;

86 
cur
 = 0;

87 
ªm
 = 
cou¡
;

88 
£¡
 = 0;

89 
size_t
 
tŸ
 = 0;

91 
	`check
(
ªm
 > 0, "Possible integer overflow in count.");

93 i‡(
off£t
 !
NULL
) {

94 
‹ig_off£t
 = 
	`l£ek
(
ö_fd
, 0, 
SEEK_CUR
);

95 
	`check
(
‹ig_off£t
 >= 0, "lseek failure when determining currentÖosition");

96 
	`check
(
	`l£ek
(
ö_fd
, *
off£t
, 
SEEK_SET
) >= 0, "lseek failure when settingÇewÖosition");

99 
tŸ
 = 0, 
ªm
 = 
cou¡
, 
cur
 =Ñem; cur != 0 &&Åot < count;Åot += cur,Ñem -= cur) {

100 i‡(
ªm
 >
BSD_SENDFILE_BUF_SIZE
) {

101 
cur
 = 
BSD_SENDFILE_BUF_SIZE
;

103 
cur
 = 
ªm
;

106 
cur
 = 
	`fdªad
(
ö_fd
, 
buf
, cur);

107 
	`check
(
cur
 >= 0, "Internal sendfileÉmulation failed: fdread: %i", cur);

109 i‡(
cur
 != 0) {

110 
£¡
 = 
	`fdwrôe
(
out_fd
, 
buf
, 
cur
);

111 
	`check
(
£¡
 =
cur
, "Internal sendfileÉmulation failed: fdread: %i, fdwrite: %i", cur, sent);

115 
ªt
 = 
tŸ
;

117 
îr‹
:

118 i‡(
off£t
 !
NULL
) {

119 i‡(
ªt
 != -1) {

120 *
off£t
 +
tŸ
;

122 
	`l£ek
(
ö_fd
, 
‹ig_off£t
, 
SEEK_SET
);

124  
ªt
;

125 
	}
}

	@bsd_specific.h

35 #i‚de‡
_MAC_SPECIFIC_H


36 
	#_MAC_SPECIFIC_H


	)

37 
	~<sys/ty≥s.h
>

39 
bsd_£ndfûe
(
out_fd
, 
ö_fd
, 
off_t
 *
off£t
, 
size_t
 
cou¡
);

	@bstr/bsafe.c

17 
	~<°dio.h
>

18 
	~<°dlib.h
>

19 
	~"bß„.h
"

21 
	gbß„ShouldExô
 = 1;

23 * 
°r˝y
 (*
d°
, c⁄° *
§c
);

24 * 
°rˇt
 (*
d°
, c⁄° *
§c
);

26 * 
	$°r˝y
 (*
d°
, c⁄° *
§c
) {

27 ()(
d°
);

28 ()(
§c
);

29 
	`Ârötf
 (
°dîr
, "bsafeÉrror: strcpy() isÇot safe, use bstrcpy instead.\n");

30 i‡(
bß„ShouldExô
Ë
	`exô
 (-1);

31  
NULL
;

32 
	}
}

34 * 
	$°rˇt
 (*
d°
, c⁄° *
§c
) {

35 ()(
d°
);

36 ()(
§c
);

37 
	`Ârötf
 (
°dîr
, "bsafeÉrror: strcat() isÇot safe, use bconcat instead.\n");

38 i‡(
bß„ShouldExô
Ë
	`exô
 (-1);

39  
NULL
;

40 
	}
}

42 #i‡!
deföed
 (
__GNUC__
Ë&& (!deföed(
_MSC_VER
) || (_MSC_VER <= 1310))

43 * (
	ggës
Ë(* 
	gbuf
) {

44 ()(
	gbuf
);

45 
Ârötf
 (
°dîr
, "bsafeÉrror: gets() isÇot safe, use bgets.\n");

46 i‡(
	gbß„ShouldExô
Ë
exô
 (-1);

47  
	gNULL
;

60 * (
	g°∫ˇt
Ë(*
	gd°
, c⁄° *
	g§c
, 
size_t
 
	gn
) {

61 ()(
	gd°
);

62 ()(
	g§c
);

63 ()(
	gn
);

64 
Ârötf
 (
°dîr
, "bsafeÉrror: strncat() isÇot safe, use bconcatÅhen btrunc\n\tor cstr2tbstr, btruncÅhen bconcat instead.\n");

65 i‡(
	gbß„ShouldExô
Ë
exô
 (-1);

66  
	gNULL
;

69 * (
	g°πok
Ë(*
	gs1
, c⁄° *
	gs2
) {

70 ()(
	gs1
);

71 ()(
	gs2
);

72 
Ârötf
 (
°dîr
, "bsafeÉrror: strtok() isÇot safe, use bsplit or bsplits instead.\n");

73 i‡(
	gbß„ShouldExô
Ë
exô
 (-1);

74  
	gNULL
;

	@bstr/bsafe.h

17 #i‚de‡
BSTRLIB_BSAFE_INCLUDE


18 
	#BSTRLIB_BSAFE_INCLUDE


	)

20 #ifde‡
__˝lu•lus


24 #i‡!
deföed
 (
__GNUC__
Ë&& (!deföed(
_MSC_VER
) || (_MSC_VER <= 1310))

26 * (
gës
Ë(* 
buf
);

30 * (
°∫ˇt
Ë(*
d°
, c⁄° *
§c
, 
size_t
 
n
);

31 * (
°πok
Ë(*
s1
, c⁄° *
s2
);

34 #unde‡
°r˝y


35 #unde‡
°rˇt


36 
	#°r˝y
(
a
,
b
Ë
	`bß„_°r˝y
◊,b)

	)

37 
	#°rˇt
(
a
,
b
Ë
	`bß„_°rˇt
◊,b)

	)

39 #ifde‡
__˝lu•lus


	@bstr/bstraux.c

1 #ifde‡
_MSC_VER


2 
	#_CRT_SECURE_NO_WARNINGS


	)

20 
	~<°dio.h
>

21 
	~<°dlib.h
>

22 
	~<°rög.h
>

23 
	~<limôs.h
>

24 
	~<˘y≥.h
>

25 
	~<°döt.h
>

26 
	~"b°æib.h
"

27 
	~"b°øux.h
"

33 
b°rög
 
	$bTaû
 (
b°rög
 
b
, 
n
) {

34 i‡(
b
 =
NULL
 || 
n
 < 0 || (b->
mÀn
 < b->
¶í
 && b->mlen > 0))  NULL;

35 i‡(
n
 >
b
->
¶í
Ë 
	`b°r˝y
 (b);

36  
	`bmid°r
 (
b
, b->
¶í
 - 
n
,Ç);

37 
	}
}

43 
b°rög
 
	$bHód
 (
b°rög
 
b
, 
n
) {

44 i‡(
b
 =
NULL
 || 
n
 < 0 || (b->
mÀn
 < b->
¶í
 && b->mlen > 0))  NULL;

45 i‡(
n
 >
b
->
¶í
Ë 
	`b°r˝y
 (b);

46  
	`bmid°r
 (
b
, 0, 
n
);

47 
	}
}

53 
	$bFûl
 (
b°rög
 
b
, 
c
, 
Àn
) {

54 i‡(
b
 =
NULL
 || 
Àn
 < 0 || (b->
mÀn
 < b->
¶í
 && b->mÀ¿> 0)Ë -
__LINE__
;

55 
b
->
¶í
 = 0;

56  
	`b£t°r
 (
b
, 
Àn
, 
NULL
, 
c
);

57 
	}
}

63 
	$bRïliˇã
 (
b°rög
 
b
, 
n
) {

64  
	`b∑âîn
 (
b
, 
n
 * b->
¶í
);

65 
	}
}

71 
	$bRevî£
 (
b°rög
 
b
) {

72 
i
, 
n
, 
m
;

73 
t
;

75 i‡(
b
 =
NULL
 || b->
¶í
 < 0 || b->
mÀn
 < b->¶íË -
__LINE__
;

76 
n
 = 
b
->
¶í
;

77 i‡(2 <
n
) {

78 
m
 = (()
n
) >> 1;

79 
n
--;

80 
i
=0; i < 
m
; i++) {

81 
t
 = 
b
->
d©a
[
n
 - 
i
];

82 
b
->
d©a
[
n
 - 
i
] = b->data[i];

83 
b
->
d©a
[
i
] = 
t
;

87 
	}
}

94 
	$bIn£πChrs
 (
b°rög
 
b
, 
pos
, 
Àn
, 
c
, 
fûl
) {

95 i‡(
b
 =
NULL
 || b->
¶í
 < 0 || b->
mÀn
 < b->¶í || 
pos
 < 0 || 
Àn
 <0Ë -
__LINE__
;

97 i‡(
pos
 > 
b
->
¶í


98 && 0 > 
	`b£t°r
 (
b
, 
pos
, 
NULL
, 
fûl
)Ë -
__LINE__
;

100 i‡(0 > 
	`bÆloc
 (
b
, b->
¶í
 + 
Àn
)Ë -
__LINE__
;

101 i‡(
pos
 < 
b
->
¶í
Ë
	`memmove
 (b->
d©a
 +Öo†+ 
Àn
, b->data +Öos, b->slen -Öos);

102 
	`mem£t
 (
b
->
d©a
 + 
pos
, 
c
, 
Àn
);

103 
b
->
¶í
 +
Àn
;

104 
b
->
d©a
[b->
¶í
] = () '\0';

105  
BSTR_OK
;

106 
	}
}

112 
	$bJu°ifyLe·
 (
b°rög
 
b
, 
•a˚
) {

113 
j
, 
i
, 
s
, 
t
;

114 
c
 = (Ë
•a˚
;

116 i‡(
b
 =
NULL
 || b->
¶í
 < 0 || b->
mÀn
 < b->¶íË -
__LINE__
;

117 i‡(
•a˚
 !(Ë
c
Ë 
BSTR_OK
;

119 
s
=
j
=
i
=0; i < 
b
->
¶í
; i++) {

120 
t
 = 
s
;

121 
s
 = 
c
 !(
b
->
d©a
[
j
] = b->d©a[
i
]);

122 
j
 +(
t
|
s
);

124 i‡(
j
 > 0 && 
b
->
d©a
[j-1] =
c
) j--;

126 
b
->
d©a
[
j
] = () '\0';

127 
b
->
¶í
 = 
j
;

128  
BSTR_OK
;

129 
	}
}

135 
	$bJu°ifyRight
 (
b°rög
 
b
, 
width
, 
•a˚
) {

136 
ªt
;

137 i‡(
width
 <0Ë -
__LINE__
;

138 i‡(0 > (
ªt
 = 
	`bJu°ifyLe·
 (
b
, 
•a˚
))) Ñet;

139 i‡(
b
->
¶í
 <
width
)

140  
	`bIn£πChrs
 (
b
, 0, 
width
 - b->
¶í
, (Ë
•a˚
, () space);

141  
BSTR_OK
;

142 
	}
}

149 
	$bJu°ifyCíãr
 (
b°rög
 
b
, 
width
, 
•a˚
) {

150 
ªt
;

151 i‡(
width
 <0Ë -
__LINE__
;

152 i‡(0 > (
ªt
 = 
	`bJu°ifyLe·
 (
b
, 
•a˚
))) Ñet;

153 i‡(
b
->
¶í
 <
width
)

154  
	`bIn£πChrs
 (
b
, 0, (
width
 - b->
¶í
 + 1Ë>> 1, (Ë
•a˚
, () space);

155  
BSTR_OK
;

156 
	}
}

164 
	$bJu°ifyM¨gö
 (
b°rög
 
b
, 
width
, 
•a˚
) {

165 
b°rLi°
 * 
¶
;

166 
i
, 
l
, 
c
;

168 i‡(
b
 =
NULL
 || b->
¶í
 < 0 || b->
mÀn
 =0 || b->mÀ¿< b->¶íË -
__LINE__
;

169 i‡(
NULL
 =(
¶
 = 
	`b•lô
 (
b
, (Ë
•a˚
))Ë -
__LINE__
;

170 
l
=
c
=
i
=0; i < 
¶
->
qty
; i++) {

171 i‡(
¶
->
íåy
[
i
]->
¶í
 > 0) {

172 
c
 ++;

173 
l
 +
¶
->
íåy
[
i
]->
¶í
;

177 i‡(
l
 + 
c
 >
width
 || c < 2) {

178 
	`b°rLi°De°roy
 (
¶
);

179  
	`bJu°ifyLe·
 (
b
, 
•a˚
);

182 
b
->
¶í
 = 0;

183 
i
=0; i < 
¶
->
qty
; i++) {

184 i‡(
¶
->
íåy
[
i
]->
¶í
 > 0) {

185 i‡(
b
->
¶í
 > 0) {

186 
s
 = (
width
 - 
l
 + (
c
 / 2)) / c;

187 
	`bIn£πChrs
 (
b
, b->
¶í
, 
s
, (Ë
•a˚
, () space);

188 
l
 +
s
;

190 
	`bc⁄ˇt
 (
b
, 
¶
->
íåy
[
i
]);

191 
c
--;

192 i‡(
c
 <= 0) ;

196 
	`b°rLi°De°roy
 (
¶
);

197  
BSTR_OK
;

198 
	}
}

200 
size_t
 
	$ªadNŸhög
 (*
buff
, 
size_t
 
ñsize
, size_à
√Àm
, *
∑rm
) {

201 ()(
buff
);

202 ()(
ñsize
);

203 ()(
√Àm
);

204 ()(
∑rm
);

206 
	}
}

213 
bSåóm
 * 
	$bsFromB°r
 (
c⁄°_b°rög
 
b
) {

214 
bSåóm
 * 
s
 = 
	`bs›í
 ((
bNªad
Ë
ªadNŸhög
, 
NULL
);

215 
	`bsuƒód
 (
s
, 
b
);

216  
s
;

217 
	}
}

219 
size_t
 
	$ªadRef
 (*
buff
, 
size_t
 
ñsize
, size_à
√Àm
, *
∑rm
) {

220 
ègb°rög
 * 
t
 = (ègb°rög *Ë
∑rm
;

221 
size_t
 
tsz
 = 
ñsize
 * 
√Àm
;

223 i‡(
tsz
 > (
size_t
Ë
t
->
¶í
)Åsz = (size_t)Å->slen;

224 i‡(
tsz
 > 0) {

225 
	`mem˝y
 (
buff
, 
t
->
d©a
, 
tsz
);

226 
t
->
¶í
 -(Ë
tsz
;

227 
t
->
d©a
 +
tsz
;

228  
tsz
 / 
ñsize
;

231 
	}
}

239 
bSåóm
 * 
	$bsFromB°rRef
 (
ègb°rög
 * 
t
) {

240 i‡(!
t
Ë 
NULL
;

241  
	`bs›í
 ((
bNªad
Ë
ªadRef
, 
t
);

242 
	}
}

254 * 
	$bSå2NëSå
 (
c⁄°_b°rög
 
b
) {

255 
size_t
 
numÀn
 =  (
b
->
¶í
) * 3 + 1;

256 
°∫um
[
numÀn
+1];

257 
b°rög
 
s
;

258 * 
buff
;

260 i‡(
b
 =
NULL
 || b->
d©a
 =NULL || b->
¶í
 < 0)  NULL;

261 
	`¢¥ötf
(
°∫um
, 
numÀn
+1, "%d:", 
b
->
¶í
);

262 i‡(
NULL
 =(
s
 = 
	`b‰omc°r
 (
°∫um
))

263 || 
	`bc⁄ˇt
 (
s
, 
b
Ë=
BSTR_ERR
 || 
	`bc⁄ch¨
 (s, () ',') == BSTR_ERR) {

264 
	`bde°roy
 (
s
);

265  
NULL
;

267 
buff
 = 
s
->
d©a
;

268 
	`bc°r‰ì
 ((*Ë
s
);

269  (*Ë
buff
;

270 
	}
}

279 
b°rög
 
	$bNëSå2B°r
 (c⁄° * 
buff
) {

280 
i
, 
x
;

281 
b°rög
 
b
;

282 i‡(
buff
 =
NULL
)  NULL;

283 
x
 = 0;

284 
i
=0; 
buff
[i] != ':'; i++) {

285 
v
 = 
buff
[
i
] - '0';

286 i‡(
v
 > 9 || 
x
 > ((
INT_MAX
 - (sig√d )vË/ 10)Ë 
NULL
;

287 
x
 = (x * 10Ë+ 
v
;

291 i‡(
buff
[
i
 + 1 + 
x
] !','Ë 
NULL
;

293 i‡(
NULL
 =(
b
 = 
	`b‰omc°r
 ("")))  NULL;

294 i‡(
	`bÆloc
 (
b
, 
x
 + 1Ë!
BSTR_OK
) {

295 
	`bde°roy
 (
b
);

296  
NULL
;

298 
	`mem˝y
 (
b
->
d©a
, 
buff
 + 
i
 + 1, 
x
);

299 
b
->
d©a
[
x
] = () '\0';

300 
b
->
¶í
 = 
x
;

301  
b
;

302 
	}
}

304 
	gb64ETabÀ
[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

310 
b°rög
 
	$bBa£64Encode
 (
c⁄°_b°rög
 
b
) {

311 
i
, 
c0
, 
c1
, 
c2
, 
c3
;

312 
b°rög
 
out
;

314 i‡(
b
 =
NULL
 || b->
¶í
 < 0 || b->
d©a
 == NULL)  NULL;

316 
out
 = 
	`b‰omc°r
 ("");

317 
i
=0; i + 2 < 
b
->
¶í
; i += 3) {

318 
c0
 = 
b
->
d©a
[
i
] >> 2;

319 
c1
 = ((
b
->
d©a
[
i
] << 4) |

320 (
b
->
d©a
[
i
+1] >> 4)) & 0x3F;

321 
c2
 = ((
b
->
d©a
[
i
+1] << 2) |

322 (
b
->
d©a
[
i
+2] >> 6)) & 0x3F;

323 
c3
 = 
b
->
d©a
[
i
+2] & 0x3F;

324 i‡(
	`bc⁄ch¨
 (
out
, 
b64ETabÀ
[
c0
]) < 0 ||

325 
	`bc⁄ch¨
 (
out
, 
b64ETabÀ
[
c1
]) < 0 ||

326 
	`bc⁄ch¨
 (
out
, 
b64ETabÀ
[
c2
]) < 0 ||

327 
	`bc⁄ch¨
 (
out
, 
b64ETabÀ
[
c3
]) < 0) {

328 
	`bde°roy
 (
out
);

329  
NULL
;

333 
i
 + 2 - 
b
->
¶í
) {

334 0: 
c0
 = 
b
->
d©a
[
i
] >> 2;

335 
c1
 = ((
b
->
d©a
[
i
] << 4) |

336 (
b
->
d©a
[
i
+1] >> 4)) & 0x3F;

337 
c2
 = (
b
->
d©a
[
i
+1] << 2) & 0x3F;

338 i‡(
	`bc⁄ch¨
 (
out
, 
b64ETabÀ
[
c0
]) < 0 ||

339 
	`bc⁄ch¨
 (
out
, 
b64ETabÀ
[
c1
]) < 0 ||

340 
	`bc⁄ch¨
 (
out
, 
b64ETabÀ
[
c2
]) < 0 ||

341 
	`bc⁄ch¨
 (
out
, () '=') < 0) {

342 
	`bde°roy
 (
out
);

343  
NULL
;

346 1: 
c0
 = 
b
->
d©a
[
i
] >> 2;

347 
c1
 = (
b
->
d©a
[
i
] << 4) & 0x3F;

348 i‡(
	`bc⁄ch¨
 (
out
, 
b64ETabÀ
[
c0
]) < 0 ||

349 
	`bc⁄ch¨
 (
out
, 
b64ETabÀ
[
c1
]) < 0 ||

350 
	`bc⁄ch¨
 (
out
, () '=') < 0 ||

351 
	`bc⁄ch¨
 (
out
, () '=') < 0) {

352 
	`bde°roy
 (
out
);

353  
NULL
;

359  
out
;

360 
	}
}

362 
	#B64_PAD
 (-2)

	)

363 
	#B64_ERR
 (-1)

	)

365 
	$ba£64DecodeSymbﬁ
 (
Æpha
) {

366 i‡((
Æpha
 >= 'A') && (alpha <= 'Z'))  ()(alpha - 'A');

367 i‡((
Æpha
 >= 'a') && (alpha <= 'z'))

368  26 + ()(
Æpha
 - 'a');

369 i‡((
Æpha
 >= '0') && (alpha <= '9'))

370  52 + ()(
Æpha
 - '0');

371 i‡(
Æpha
 == '+')  62;

372 i‡(
Æpha
 == '/')  63;

373 i‡(
Æpha
 ='='Ë 
B64_PAD
;

374  
B64_ERR
;

375 
	}
}

382 
b°rög
 
	$bBa£64DecodeEx
 (
c⁄°_b°rög
 
b
, * 
boﬁTruncEº‹
) {

383 
i
, 
v
;

384 
c0
, 
c1
, 
c2
;

385 
b°rög
 
out
;

387 i‡(
b
 =
NULL
 || b->
¶í
 < 0 || b->
d©a
 == NULL)  NULL;

388 i‡(
boﬁTruncEº‹
) *boolTruncError = 0;

389 
out
 = 
	`b‰omc°r
 ("");

390 
i
 = 0;

393 i‡(
i
 >
b
->
¶í
Ë 
out
;

394 i‡(
b
->
d©a
[
i
] == '=') {

395 i‡(
boﬁTruncEº‹
) {

396 *
boﬁTruncEº‹
 = 1;

397  
out
;

399 
	`bde°roy
 (
out
);

400  
NULL
;

402 
v
 = 
	`ba£64DecodeSymbﬁ
 (
b
->
d©a
[
i
]);

403 
i
++;

404 } 
v
 < 0);

405 
c0
 = (Ë(
v
 << 2);

407 i‡(
i
 >
b
->
¶í
 || b->
d©a
[i] == '=') {

408 i‡(
boﬁTruncEº‹
) {

409 *
boﬁTruncEº‹
 = 1;

410  
out
;

412 
	`bde°roy
 (
out
);

413  
NULL
;

415 
v
 = 
	`ba£64DecodeSymbﬁ
 (
b
->
d©a
[
i
]);

416 
i
++;

417 } 
v
 < 0);

418 
c0
 |(Ë(
v
 >> 4);

419 
c1
 = (Ë(
v
 << 4);

421 i‡(
i
 >
b
->
¶í
) {

422 i‡(
boﬁTruncEº‹
) {

423 *
boﬁTruncEº‹
 = 1;

424  
out
;

426 
	`bde°roy
 (
out
);

427  
NULL
;

429 i‡(
b
->
d©a
[
i
] == '=') {

430 
i
++;

431 i‡(
i
 >
b
->
¶í
 || b->
d©a
[i] !'=' || 
	`bc⁄ch¨
 (
out
, 
c0
) < 0) {

432 i‡(
boﬁTruncEº‹
) {

433 *
boﬁTruncEº‹
 = 1;

434  
out
;

436 
	`bde°roy
 (
out
);

437  
NULL
;

439  
out
;

441 
v
 = 
	`ba£64DecodeSymbﬁ
 (
b
->
d©a
[
i
]);

442 
i
++;

443 } 
v
 < 0);

444 
c1
 |(Ë(
v
 >> 2);

445 
c2
 = (Ë(
v
 << 6);

447 i‡(
i
 >
b
->
¶í
) {

448 i‡(
boﬁTruncEº‹
) {

449 *
boﬁTruncEº‹
 = 1;

450  
out
;

452 
	`bde°roy
 (
out
);

453  
NULL
;

455 i‡(
b
->
d©a
[
i
] == '=') {

456 i‡(
	`bc⁄ch¨
 (
out
, 
c0
Ë< 0 || bc⁄ch¨ (out, 
c1
) < 0) {

457 i‡(
boﬁTruncEº‹
) {

458 *
boﬁTruncEº‹
 = 1;

459  
out
;

461 
	`bde°roy
 (
out
);

462  
NULL
;

464 i‡(
boﬁTruncEº‹
) *boolTruncError = 0;

465  
out
;

467 
v
 = 
	`ba£64DecodeSymbﬁ
 (
b
->
d©a
[
i
]);

468 
i
++;

469 } 
v
 < 0);

470 
c2
 |(Ë(
v
);

471 i‡(
	`bc⁄ch¨
 (
out
, 
c0
) < 0 ||

472 
	`bc⁄ch¨
 (
out
, 
c1
) < 0 ||

473 
	`bc⁄ch¨
 (
out
, 
c2
) < 0) {

474 i‡(
boﬁTruncEº‹
) {

475 *
boﬁTruncEº‹
 = -1;

476  
out
;

478 
	`bde°roy
 (
out
);

479  
NULL
;

482 
	}
}

484 
	#UU_DECODE_BYTE
(
b
Ë(((bË=(sig√d )'`'Ë? 0 : (bË- (sig√d )' ')

	)

486 
	sbUuInOut
 {

487 
b°rög
 
	m§c
, 
	md°
;

488 * 
	mbadlöes
;

491 
	#UU_MAX_LINELEN
 45

	)

493 
	$bUuDecLöe
 (* 
∑rm
, 
ofs
, 
Àn
) {

494 
bUuInOut
 * 
io
 = (bUuInOuà*Ë
∑rm
;

495 
b°rög
 
s
 = 
io
->
§c
;

496 
b°rög
 
t
 = 
io
->
d°
;

497 
i
, 
Œí
, 
ŸÀn
, 
ªt
, 
c0
, 
c1
, 
c2
, 
c3
, 
d0
, 
d1
, 
d2
, 
d3
;

499 i‡(
Àn
 == 0)  0;

500 
Œí
 = 
	`UU_DECODE_BYTE
 (
s
->
d©a
[
ofs
]);

501 
ªt
 = 0;

503 
ŸÀn
 = 
t
->
¶í
;

505 i‡(((Ë
Œí
Ë> 
UU_MAX_LINELEN
Ë{ 
ªt
 = -
__LINE__
;

506 
bl
;

509 
Œí
 +
t
->
¶í
;

511 
i
=1; i < 
s
->
¶í
 && 
t
->¶í < 
Œí
;i += 4) {

512 
outo˘ë
[3];

513 
c0
 = 
	`UU_DECODE_BYTE
 (
d0
 = (Ë
	`bch¨e
 (
s
, 
i
+
ofs
+0, ' ' - 1));

514 
c1
 = 
	`UU_DECODE_BYTE
 (
d1
 = (Ë
	`bch¨e
 (
s
, 
i
+
ofs
+1, ' ' - 1));

515 
c2
 = 
	`UU_DECODE_BYTE
 (
d2
 = (Ë
	`bch¨e
 (
s
, 
i
+
ofs
+2, ' ' - 1));

516 
c3
 = 
	`UU_DECODE_BYTE
 (
d3
 = (Ë
	`bch¨e
 (
s
, 
i
+
ofs
+3, ' ' - 1));

518 i‡(((Ë(
c0
|
c1
Ë>0x40)Ë{ i‡(!
ªt
Ëªà-
__LINE__
;

519 i‡(
d0
 > 0x60 || (d0 < (' ' - 1Ë&& !
	`is•a˚
 (d0)) ||

520 
d1
 > 0x60 || (d1 < (' ' - 1Ë&& !
	`is•a˚
 (d1))) {

521 
t
->
¶í
 = 
ŸÀn
;

522 
bl
;

524 
c0
 = 
c1
 = 0;

526 
outo˘ë
[0] = (Ë((
c0
 << 2Ë| ((Ë
c1
 >> 4));

527 i‡(
t
->
¶í
+1 >
Œí
) {

528 i‡(0 > 
	`bc⁄ch¨
 (
t
, (Ë
outo˘ë
[0])Ë -
__LINE__
;

531 i‡((Ë
c2
 >0x40Ë{ i‡(!
ªt
Ëªà-
__LINE__
;

532 i‡(
d2
 > 0x60 || (d2 < (' ' - 1Ë&& !
	`is•a˚
 (d2))) {

533 
t
->
¶í
 = 
ŸÀn
;

534 
bl
;

536 
c2
 = 0;

538 
outo˘ë
[1] = (Ë((
c1
 << 4Ë| ((Ë
c2
 >> 2));

539 i‡(
t
->
¶í
+2 >
Œí
) {

540 i‡(0 > 
	`bˇtblk
 (
t
, 
outo˘ë
, 2)Ë -
__LINE__
;

543 i‡((Ë
c3
 >0x40Ë{ i‡(!
ªt
Ëªà-
__LINE__
;

544 i‡(
d3
 > 0x60 || (d3 < (' ' - 1Ë&& !
	`is•a˚
 (d3))) {

545 
t
->
¶í
 = 
ŸÀn
;

546 
bl
;

548 
c3
 = 0;

550 
outo˘ë
[2] = (Ë((
c2
 << 6Ë| ((Ë
c3
));

551 i‡(0 > 
	`bˇtblk
 (
t
, 
outo˘ë
, 3)Ë -
__LINE__
;

553 i‡(
t
->
¶í
 < 
Œí
Ë{ i‡(0 =
ªt
Ëªà-
__LINE__
;

554 
t
->
¶í
 = 
ŸÀn
;

556 
bl
:;

557 i‡(
ªt
 && 
io
->
badlöes
) {

558 (*
io
->
badlöes
)++;

561  
ªt
;

562 
	}
}

574 #ifde‡
_MSC_VER


575 #¥agm®
w¨nög
(
dißbÀ
:4204)

578 
b°rög
 
	$bUuDecodeEx
 (
c⁄°_b°rög
 
§c
, * 
badlöes
) {

579 
ègb°rög
 
t
;

580 
bSåóm
 * 
s
;

581 
bSåóm
 * 
d
;

582 
b°rög
 
b
;

584 i‡(!
§c
Ë 
NULL
;

585 
t
 = *
§c
;

586 
s
 = 
	`bsFromB°rRef
 (&
t
);

587 i‡(!
s
Ë 
NULL
;

588 
d
 = 
	`bsUuDecode
 (
s
, 
badlöes
);

589 
b
 = 
	`b‰omc°øŒoc
 (256, "");

590 i‡(
NULL
 =
b
 || 0 > 
	`b§ód
 (b, 
d
, 
INT_MAX
)) {

591 
	`bde°roy
 (
b
);

592 
b
 = 
NULL
;

595 
	`bs˛o£
(
d
);

596 
	`bs˛o£
(
s
);

597  
b
;

598 
	}
}

600 
	sbsUuCtx
 {

601 
bUuInOut
 
	mio
;

602 
bSåóm
 * 
	msI≈
;

605 
size_t
 
	$bsUuDecodeP¨t
 (*
buff
, 
size_t
 
ñsize
, size_à
√Àm
, *
∑rm
) {

606 
ègb°rög
 
eﬁ
 = 
	`bsSètic
 ("\r\n");

607 
bsUuCtx
 * 
luuCtx
 = (bsUuCtx *Ë
∑rm
;

608 
size_t
 
tsz
;

609 
l
, 
Ãë
;

611 i‡(
NULL
 =
buff
 || NULL =
∑rm
)  0;

612 
tsz
 = 
ñsize
 * 
√Àm
;

614 
CheckI¡î«lBuf„r
:;

616 i‡(((
size_t
Ë
luuCtx
->
io
.
d°
->
¶í
Ë> 
tsz
) {

617 
	`mem˝y
 (
buff
, 
luuCtx
->
io
.
d°
->
d©a
, 
tsz
);

618 
	`bdñëe
 (
luuCtx
->
io
.
d°
, 0, (Ë
tsz
);

619  
√Àm
;

622 
DecodeM‹e
:;

623 i‡(0 <(
l
 = 
	`böchr
 (
luuCtx
->
io
.
§c
, 0, &
eﬁ
))) {

624 
ﬁ
 = 0;

625 
ègb°rög
 
t
;

626 
b°rög
 
s
 = 
luuCtx
->
io
.
§c
;

627 
luuCtx
->
io
.
§c
 = &
t
;

630 i‡(
l
 > 
ﬁ
) {

631 
	`bmid2tb°r
 (
t
, 
s
, 
ﬁ
, 
l
 - ol);

632 
Ãë
 = 
	`bUuDecLöe
 (&
luuCtx
->
io
, 0, 
t
.
¶í
);

633 i‡(0 > 
Ãë
) {

634 
luuCtx
->
io
.
§c
 = 
s
;

635 
D⁄e
;

638 
ﬁ
 = 
l
 + 1;

639 i‡(((
size_t
Ë
luuCtx
->
io
.
d°
->
¶í
Ë> 
tsz
) ;

640 
l
 = 
	`böchr
 (
s
, 
ﬁ
, &
eﬁ
);

641 } 
BSTR_ERR
 !
l
);

642 
	`bdñëe
 (
s
, 0, 
ﬁ
);

643 
luuCtx
->
io
.
§c
 = 
s
;

644 
CheckI¡î«lBuf„r
;

647 i‡(
BSTR_ERR
 !
	`b§óda
 (
luuCtx
->
io
.
§c
,ÜuuCtx->
sI≈
, 
	`bsbufÊígth
 (luuCtx->sI≈, 
BSTR_BS_BUFF_LENGTH_GET
))) {

648 
DecodeM‹e
;

651 
	`bUuDecLöe
 (&
luuCtx
->
io
, 0,ÜuuCtx->io.
§c
->
¶í
);

653 
D⁄e
:;

655 i‡(((
size_t
Ë
luuCtx
->
io
.
d°
->
¶í
) > 0) {

656 i‡(((
size_t
Ë
luuCtx
->
io
.
d°
->
¶í
Ë> 
tsz
Ë
CheckI¡î«lBuf„r
;

657 
	`mem˝y
 (
buff
, 
luuCtx
->
io
.
d°
->
d©a
,ÜuuCtx->io.d°->
¶í
);

658 
tsz
 = 
luuCtx
->
io
.
d°
->
¶í
 / 
ñsize
;

659 
luuCtx
->
io
.
d°
->
¶í
 = 0;

660 i‡(
tsz
 > 0) Åsz;

664 
	`bde°roy
 (
luuCtx
->
io
.
d°
);

665 
	`bde°roy
 (
luuCtx
->
io
.
§c
);

666 
	`‰ì
 (
luuCtx
);

668 
	}
}

680 
bSåóm
 * 
	$bsUuDecode
 (
bSåóm
 * 
sI≈
, * 
badlöes
) {

681 
bsUuCtx
 * 
luuCtx
 = (bsUuCtx *Ë
	`mÆloc
 ( (bsUuCtx));

682 
bSåóm
 * 
sOut
;

684 i‡(
NULL
 =
luuCtx
)  NULL;

686 
luuCtx
->
io
.
§c
 = 
	`b‰omc°r
 ("");

687 
luuCtx
->
io
.
d°
 = 
	`b‰omc°r
 ("");

688 i‡(
NULL
 =
luuCtx
->
io
.
d°
 || NULL =luuCtx->io.
§c
) {

689 
CÀ™UpFaûuªToAŒoˇã
:;

690 
	`bde°roy
 (
luuCtx
->
io
.
d°
);

691 
	`bde°roy
 (
luuCtx
->
io
.
§c
);

692 
	`‰ì
 (
luuCtx
);

693  
NULL
;

695 
luuCtx
->
io
.
badlöes
 = badlines;

696 i‡(
badlöes
) *badlines = 0;

698 
luuCtx
->
sI≈
 = sInp;

700 
sOut
 = 
	`bs›í
 ((
bNªad
Ë
bsUuDecodeP¨t
, 
luuCtx
);

701 i‡(
NULL
 =
sOut
Ë
CÀ™UpFaûuªToAŒoˇã
;

702  
sOut
;

703 
	}
}

705 
	#UU_ENCODE_BYTE
(
b
Ë(Ë(((bË=0Ë? '`' : ((bË+ ' '))

	)

712 
b°rög
 
	$bUuEncode
 (
c⁄°_b°rög
 
§c
) {

713 
b°rög
 
out
;

714 
i
, 
j
, 
jm
;

715 
c0
, 
c1
, 
c2
;

716 i‡(
§c
 =
NULL
 || src->
¶í
 < 0 || src->
d©a
 == NULL)  NULL;

717 i‡((
out
 = 
	`b‰omc°r
 ("")Ë=
NULL
)  NULL;

718 
i
=0; i < 
§c
->
¶í
; i +
UU_MAX_LINELEN
) {

719 i‡((
jm
 = 
i
 + 
UU_MAX_LINELEN
Ë> 
§c
->
¶í
) jm = src->slen;

720 i‡(
	`bc⁄ch¨
 (
out
, 
	`UU_ENCODE_BYTE
 (
jm
 - 
i
)) < 0) {

721 
	`b°rFªe
 (
out
);

724 
j
 = 
i
; j < 
jm
; j += 3) {

725 
c0
 = (Ë
	`bch¨
 (
§c
, 
j
 );

726 
c1
 = (Ë
	`bch¨
 (
§c
, 
j
 + 1);

727 
c2
 = (Ë
	`bch¨
 (
§c
, 
j
 + 2);

728 i‡(
	`bc⁄ch¨
 (
out
, 
	`UU_ENCODE_BYTE
 ( (
c0
 & 0xFC) >> 2)) < 0 ||

729 
	`bc⁄ch¨
 (
out
, 
	`UU_ENCODE_BYTE
 (((
c0
 & 0x03Ë<< 4Ë| ((
c1
 & 0xF0) >> 4))) < 0 ||

730 
	`bc⁄ch¨
 (
out
, 
	`UU_ENCODE_BYTE
 (((
c1
 & 0x0FË<< 2Ë| ((
c2
 & 0xC0) >> 6))) < 0 ||

731 
	`bc⁄ch¨
 (
out
, 
	`UU_ENCODE_BYTE
 ( (
c2
 & 0x3F))) < 0) {

732 
	`b°rFªe
 (
out
);

733 
End
;

736 i‡(
	`bc⁄ch¨
 (
out
, () '\r') < 0 || bconchar (out, () '\n') < 0) {

737 
	`b°rFªe
 (
out
);

741 
End
:;

742  
out
;

743 
	}
}

751 
b°rög
 
	$bYEncode
 (
c⁄°_b°rög
 
§c
) {

752 
i
;

753 
b°rög
 
out
;

754 
c
;

756 i‡(
§c
 =
NULL
 || src->
¶í
 < 0 || src->
d©a
 == NULL)  NULL;

757 i‡((
out
 = 
	`b‰omc°r
 ("")Ë=
NULL
)  NULL;

758 
i
=0; i < 
§c
->
¶í
; i++) {

759 
c
 = ()(
§c
->
d©a
[
i
] + 42);

760 i‡(
c
 == '=' || c == '\0' || c == '\r' || c == '\n') {

761 i‡(0 > 
	`bc⁄ch¨
 (
out
, () '=')) {

762 
	`bde°roy
 (
out
);

763  
NULL
;

765 
c
 += () 64;

767 i‡(0 > 
	`bc⁄ch¨
 (
out
, 
c
)) {

768 
	`bde°roy
 (
out
);

769  
NULL
;

772  
out
;

773 
	}
}

780 
	#MAX_OB_LEN
 (64)

	)

782 
b°rög
 
	$bYDecode
 (
c⁄°_b°rög
 
§c
) {

783 
i
;

784 
b°rög
 
out
;

785 
c
;

786 
o˘ëbuff
[
MAX_OB_LEN
];

787 
obl
;

789 i‡(
§c
 =
NULL
 || src->
¶í
 < 0 || src->
d©a
 == NULL)  NULL;

790 i‡((
out
 = 
	`b‰omc°r
 ("")Ë=
NULL
)  NULL;

792 
obl
 = 0;

794 
i
=0; i < 
§c
->
¶í
; i++) {

795 i‡('=' =(
c
 = 
§c
->
d©a
[
i
])) {

796 
i
++;

797 i‡(
i
 >
§c
->
¶í
) {

798 
	`bde°roy
 (
out
);

799  
NULL
;

801 
c
 = (Ë(
§c
->
d©a
[
i
] - 64);

803 i‡('\0' =
c
) {

804 
	`bde°roy
 (
out
);

805  
NULL
;

809 i‡(
c
 == '\r' || c == '\n') ;

812 
o˘ëbuff
[
obl
] = (Ë((Ë
c
 - 42);

813 
obl
++;

815 i‡(
obl
 >
MAX_OB_LEN
) {

816 i‡(0 > 
	`bˇtblk
 (
out
, 
o˘ëbuff
, 
obl
)) {

817 
	`bde°roy
 (
out
);

818  
NULL
;

820 
obl
 = 0;

824 i‡(0 > 
	`bˇtblk
 (
out
, 
o˘ëbuff
, 
obl
)) {

825 
	`bde°roy
 (
out
);

826 
out
 = 
NULL
;

828  
out
;

829 
	}
}

838 
b°rög
 
	$bSåfTime
 (c⁄° * 
fmt
, c⁄° 
tm
 * 
timïå
) {

839 #i‡
	`deföed
 (
__TURBOC__
Ë&& !deföed (
__BORLANDC__
)

840 
ègb°rög
 
ns
 = 
	`bsSètic
 ("bStrfTime Not supported");

841 
fmt
 = fmt;

842 
timïå
 =Åimeptr;

843  &
ns
;

845 
b°rög
 
buff
;

846 
n
;

847 
size_t
 
r
;

849 i‡(
fmt
 =
NULL
)  NULL;

855 i‡((
n
 = (Ë(2*
	`°æí
 (
fmt
))) < 16)Ç = 16;

856 
buff
 = 
	`b‰omc°øŒoc
 (
n
+2, "");

859 i‡(
BSTR_OK
 !
	`bÆloc
 (
buff
, 
n
 + 2)) {

860 
	`bde°roy
 (
buff
);

861  
NULL
;

864 
r
 = 
	`°r·ime
 ((*Ë
buff
->
d©a
, 
n
 + 1, 
fmt
, 
timïå
);

866 i‡(
r
 > 0) {

867 
buff
->
¶í
 = (Ë
r
;

871 
n
 +=Ç;

874  
buff
;

876 
	}
}

886 
	$bSëC°rCh¨
 (
b°rög
 
b
, 
pos
, 
c
) {

887 i‡(
NULL
 =
b
 || b->
mÀn
 <0 || b->
¶í
 < 0 || b->mlen < b->slen)

888  
BSTR_ERR
;

889 i‡(
pos
 < 0 ||Öo†> 
b
->
¶í
Ë 
BSTR_ERR
;

891 i‡(
pos
 =
b
->
¶í
) {

892 i‡('\0' !
c
Ë 
	`bc⁄ch¨
 (
b
, c);

896 
b
->
d©a
[
pos
] = (Ë
c
;

897 i‡('\0' =
c
Ë
b
->
¶í
 = 
pos
;

900 
	}
}

909 
	$bSëCh¨
 (
b°rög
 
b
, 
pos
, 
c
) {

910 i‡(
NULL
 =
b
 || b->
mÀn
 <0 || b->
¶í
 < 0 || b->mlen < b->slen)

911  
BSTR_ERR
;

912 i‡(
pos
 < 0 ||Öo†> 
b
->
¶í
Ë 
BSTR_ERR
;

914 i‡(
pos
 =
b
->
¶í
) {

915  
	`bc⁄ch¨
 (
b
, 
c
);

918 
b
->
d©a
[
pos
] = (Ë
c
;

920 
	}
}

922 
	#INIT_SECURE_INPUT_LENGTH
 (256)

	)

925 
	#BWS_BUFF_SZ
 (1024)

	)

927 
	sbwrôeSåóm
 {

928 
b°rög
 
	mbuff
;

929 * 
	m∑rm
;

930 
bNwrôe
 
	mwrôeFn
;

931 
	misEOF
;

932 
	mmöBuffSz
;

941 
bwrôeSåóm
 * 
	$bwsO≥n
 (
bNwrôe
 
wrôeFn
, * 
∑rm
) {

942 
bwrôeSåóm
 * 
ws
;

944 i‡(
NULL
 =
wrôeFn
)  NULL;

945 
ws
 = (
bwrôeSåóm
 *Ë
	`mÆloc
 ( (bwriteStream));

946 i‡(
ws
) {

947 i‡(
NULL
 =(
ws
->
buff
 = 
	`b‰omc°r
 (""))) {

948 
	`‰ì
 (
ws
);

949 
ws
 = 
NULL
;

951 
ws
->
∑rm
 =Öarm;

952 
ws
->
wrôeFn
 = writeFn;

953 
ws
->
isEOF
 = 0;

954 
ws
->
möBuffSz
 = 
BWS_BUFF_SZ
;

957  
ws
;

958 
	}
}

960 
	#öã∫Æ_bwswrôeout
(
ws
,
b
Ë{ \

	)

961 i‡((
	gb
)->
	g¶í
 > 0) { \

962 i‡(1 !(
ws
->
wrôeFn
 ((
b
)->
d©a
, (b)->
¶í
, 1, ws->
∑rm
))) { \

963 
	gws
->
	gisEOF
 = 1; \

964  
	gBSTR_ERR
; \

973 
	$bwsWrôeFlush
 (
bwrôeSåóm
 * 
ws
) {

974 i‡(
NULL
 =
ws
 || ws->
isEOF
 || 0 >ws->
möBuffSz
 ||

975 
NULL
 =
ws
->
wrôeFn
 || NULL =ws->
buff
Ë 
BSTR_ERR
;

976 
	`öã∫Æ_bwswrôeout
 (
ws
, ws->
buff
);

977 
ws
->
buff
->
¶í
 = 0;

979 
	}
}

987 
	$bwsWrôeB°r
 (
bwrôeSåóm
 * 
ws
, 
c⁄°_b°rög
 
b
) {

988 
ègb°rög
 
t
;

989 
l
;

991 i‡(
NULL
 =
ws
 || NULL =
b
 || NULL =ws->
buff
 ||

992 
ws
->
isEOF
 || 0 >ws->
möBuffSz
 || 
NULL
 =ws->
wrôeFn
)

993  
BSTR_ERR
;

996 i‡(
b
->
¶í
 > 0 && 
ws
->
buff
->
mÀn
 - ws->buff->slen > b->slen) {

997 
ègb°rög
 
em±y
 = 
	`bsSètic
 ("");

998 i‡(0 > 
	`bc⁄ˇt
 (
ws
->
buff
, 
b
)Ë 
BSTR_ERR
;

999  
	`bwsWrôeB°r
 (
ws
, &
em±y
);

1002 i‡(0 > (
l
 = 
ws
->
möBuffSz
 - ws->
buff
->
¶í
)) {

1003 
	`öã∫Æ_bwswrôeout
 (
ws
, ws->
buff
);

1004 
ws
->
buff
->
¶í
 = 0;

1005 
l
 = 
ws
->
möBuffSz
;

1008 i‡(
b
->
¶í
 < 
l
Ë 
	`bc⁄ˇt
 (
ws
->
buff
, b);

1010 i‡(0 > 
	`bˇtblk
 (
ws
->
buff
, 
b
->
d©a
, 
l
)Ë 
BSTR_ERR
;

1011 
	`öã∫Æ_bwswrôeout
 (
ws
, ws->
buff
);

1012 
ws
->
buff
->
¶í
 = 0;

1014 
	`bmid2tb°r
 (
t
, (
b°rög
Ë
b
, 
l
, b->
¶í
);

1016 i‡(
t
.
¶í
 >
ws
->
möBuffSz
) {

1017 
	`öã∫Æ_bwswrôeout
 (
ws
, &
t
);

1021  
	`bassign
 (
ws
->
buff
, &
t
);

1022 
	}
}

1029 
	$bwsWrôeBlk
 (
bwrôeSåóm
 * 
ws
, * 
blk
, 
Àn
) {

1030 
ègb°rög
 
t
;

1031 i‡(
NULL
 =
blk
 || 
Àn
 < 0Ë 
BSTR_ERR
;

1032 
	`blk2tb°r
 (
t
, 
blk
, 
Àn
);

1033  
	`bwsWrôeB°r
 (
ws
, &
t
);

1034 
	}
}

1041 
	$bwsIsEOF
 (c⁄° 
bwrôeSåóm
 * 
ws
) {

1042 i‡(
NULL
 =
ws
 || NULL =ws->
buff
 || 0 > ws->
möBuffSz
 ||

1043 
NULL
 =
ws
->
wrôeFn
Ë 
BSTR_ERR
;

1044  
ws
->
isEOF
;

1045 
	}
}

1052 
	$bwsBuffLígth
 (
bwrôeSåóm
 * 
ws
, 
sz
) {

1053 
ﬁdSz
;

1054 i‡(
ws
 =
NULL
 || 
sz
 < 0Ë 
BSTR_ERR
;

1055 
ﬁdSz
 = 
ws
->
möBuffSz
;

1056 i‡(
sz
 > 0Ë
ws
->
möBuffSz
 = sz;

1057  
ﬁdSz
;

1058 
	}
}

1066 * 
	$bwsClo£
 (
bwrôeSåóm
 * 
ws
) {

1067 * 
∑rm
;

1068 i‡(
NULL
 =
ws
 || NULL =ws->
buff
 || 0 >ws->
möBuffSz
 ||

1069 
NULL
 =
ws
->
wrôeFn
)  NULL;

1070 
	`bwsWrôeFlush
 (
ws
);

1071 
∑rm
 = 
ws
->parm;

1072 
ws
->
∑rm
 = 
NULL
;

1073 
ws
->
möBuffSz
 = -1;

1074 
ws
->
wrôeFn
 = 
NULL
;

1075 
	`b°rFªe
 (
ws
->
buff
);

1076 
	`‰ì
 (
ws
);

1077  
∑rm
;

1078 
	}
}

1082 c⁄° 
	gFNV_PRIME
 = 16777619;

1083 c⁄° 
	gFNV_OFFSET_BASIS
 = 2166136261;

1086 
uöt32_t
 
	$b°r_hash_fun
(c⁄° *
kv
)

1088 
b°rög
 
key
 = (b°rög)
kv
;

1089 c⁄° *
°r
 = (c⁄° *)
	`bd©a
(
key
);

1091 
uöt32_t
 
acc
 = 
FNV_OFFSET_BASIS
;

1093 *
°r
) {

1094 
acc
 ^*
°r
;

1095 
acc
 *
FNV_PRIME
;

1096 
°r
++;

1099  
acc
;

1100 
	}
}

	@bstr/bstraux.h

16 #i‚de‡
BSTRAUX_INCLUDE


17 
	#BSTRAUX_INCLUDE


	)

19 
	~<°döt.h
>

20 
	~<time.h
>

21 
	~"b°æib.h
"

23 #ifde‡
__˝lu•lus


28 
	#b°rDe˛¨e
(
b
Ë
	`b°rög
 (bË
NULL
;

	)

29 
	#b°rFªe
(
b
Ë{i‡((bË!
NULL
 && (b)->
¶í
 >0 && (b)->
mÀn
 >(b)->¶íË{ 
	`bde°roy
 (b); (bËNULL; }}

	)

32 
	#bAssign
(
a
,
b
Ë((
bassign
)(◊), (b)))

	)

33 
	#bSubs
(
b
,
pos
,
Àn
,
a
,
c
Ë((
bª∂a˚
)((b),’os),÷í),◊),()(c)))

	)

34 
	#bSåchr
(
b
,
c
Ë((
b°rchr
)((b), (c)))

	)

35 
	#bSåchrFa°
(
b
,
c
Ë((
b°rchr
)((b), (c)))

	)

36 
	#bC©C°r
(
b
,
s
Ë((
bˇtc°r
)((b), (s)))

	)

37 
	#bC©Blk
(
b
,
s
,
Àn
Ë((
bˇtblk
)((b),(s),÷í)))

	)

38 
	#bC©Sètic
(
b
,
s
Ë
	`bC©Blk
 ((b), ("" s ""),  (sË- 1)

	)

39 
	#bTrunc
(
b
,
n
Ë((
båunc
)((b), (n)))

	)

40 
	#bRïœ˚AŒ
(
b
,
föd
,
ª∂
,
pos
Ë((
bfödª∂a˚
)((b),(föd),‘ïl),’os)))

	)

41 
	#bUµîˇ£
(
b
Ë((
btouµî
)(b))

	)

42 
	#bLowîˇ£
(
b
Ë((
btﬁowî
)(b))

	)

43 
	#bCa£ÀssCmp
(
a
,
b
Ë((
b°ricmp
)(◊), (b)))

	)

44 
	#bCa£ÀssNCmp
(
a
,
b
,
n
Ë((
b°∫icmp
)(◊), (b), (n)))

	)

45 
	#bBa£64Decode
(
b
Ë(
	`bBa£64DecodeEx
 ((b), 
NULL
))

	)

46 
	#bUuDecode
(
b
Ë(
	`bUuDecodeEx
 ((b), 
NULL
))

	)

49 
bSåóm
 * 
bsFromB°r
 (
c⁄°_b°rög
 
b
);

50 
b°rög
 
bTaû
 (b°rög 
b
, 
n
);

51 
b°rög
 
bHód
 (b°rög 
b
, 
n
);

52 
bSëC°rCh¨
 (
b°rög
 
a
, 
pos
, 
c
);

53 
bSëCh¨
 (
b°rög
 
b
, 
pos
, 
c
);

54 
bFûl
 (
b°rög
 
a
, 
c
, 
Àn
);

55 
bRïliˇã
 (
b°rög
 
b
, 
n
);

56 
bRevî£
 (
b°rög
 
b
);

57 
bIn£πChrs
 (
b°rög
 
b
, 
pos
, 
Àn
, 
c
, 
fûl
);

58 
b°rög
 
bSåfTime
 (c⁄° * 
fmt
, c⁄° 
tm
 * 
timïå
);

59 
	#bAscTime
(
t
Ë(
	`bSåfTime
 ("%c\n", (t)))

	)

60 
	#bCTime
(
t
Ë(—Ë? 
	`bAscTime
 (
	`loˇ…ime
 (t)Ë: 
NULL
)

	)

63 
bJu°ifyLe·
 (
b°rög
 
b
, 
•a˚
);

64 
bJu°ifyRight
 (
b°rög
 
b
, 
width
, 
•a˚
);

65 
bJu°ifyM¨gö
 (
b°rög
 
b
, 
width
, 
•a˚
);

66 
bJu°ifyCíãr
 (
b°rög
 
b
, 
width
, 
•a˚
);

69 
uöt32_t
 
b°r_hash_fun
(c⁄° *
kv
);

72 * 
bSå2NëSå
 (
c⁄°_b°rög
 
b
);

73 
b°rög
 
bNëSå2B°r
 (c⁄° * 
buf
);

74 
b°rög
 
bBa£64Encode
 (
c⁄°_b°rög
 
b
);

75 
b°rög
 
bBa£64DecodeEx
 (
c⁄°_b°rög
 
b
, * 
boﬁTruncEº‹
);

76 
bSåóm
 * 
bsUuDecode
 (bSåóm * 
sI≈
, * 
badlöes
);

77 
b°rög
 
bUuDecodeEx
 (
c⁄°_b°rög
 
§c
, * 
badlöes
);

78 
b°rög
 
bUuEncode
 (
c⁄°_b°rög
 
§c
);

79 
b°rög
 
bYEncode
 (
c⁄°_b°rög
 
§c
);

80 
b°rög
 
bYDecode
 (
c⁄°_b°rög
 
§c
);

83 (* 
	gbNwrôe
Ë(c⁄° * 
	tbuf
, 
	tsize_t
 
	tñsize
, size_à
	t√Àm
, * 
	t∑rm
);

85 
bwrôeSåóm
 * 
bwsO≥n
 (
bNwrôe
 
wrôeFn
, * 
∑rm
);

86 
bwsWrôeB°r
 (
bwrôeSåóm
 * 
°ªam
, 
c⁄°_b°rög
 
b
);

87 
bwsWrôeBlk
 (
bwrôeSåóm
 * 
°ªam
, * 
blk
, 
Àn
);

88 
bwsWrôeFlush
 (
bwrôeSåóm
 * 
°ªam
);

89 
bwsIsEOF
 (c⁄° 
bwrôeSåóm
 * 
°ªam
);

90 
bwsBuffLígth
 (
bwrôeSåóm
 * 
°ªam
, 
sz
);

91 * 
bwsClo£
 (
bwrôeSåóm
 * 
°ªam
);

94 
	#bSecuªDe°roy
(
b
Ë{ \

	)

95 
b°rög
 
	gb°r__tmp
 = (
b
); \

96 i‡(
	gb°r__tmp
 && b°r__tmp->
	gmÀn
 > 0 && b°r__tmp->
	gd©a
) { \

97 (Ë
mem£t
 (
b°r__tmp
->
d©a
, 0, (
size_t
Ëb°r__tmp->
mÀn
); \

98 
bde°roy
 (
b°r__tmp
); \

101 
	#bSecuªWrôePrŸe˘
(
t
Ë{ \

	)

102 i‡((
	gt
).
	gmÀn
 >= 0) { \

103 i‡((
t
).
mÀn
 > (t).
¶í
)) { \

104 (Ë
mem£t
 ((
t
).
d©a
 + (t).
¶í
, 0, (
size_t
Ë—).
mÀn
 - (t).slen); \

106 (
	gt
).
	gmÀn
 = -1; \

110 #ifde‡
__˝lu•lus


	@bstr/bstrlib.c

14 #i‡
deföed
 (
_MSC_VER
)

16 
	#_CRT_SECURE_NO_WARNINGS


	)

19 
	~<°dio.h
>

20 
	~<°ddef.h
>

21 
	~<°d¨g.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~<˘y≥.h
>

25 
	~"b°æib.h
"

29 #i‡
deföed
(
MEMORY_DEBUG
Ë|| deföed(
BSTRLIB_MEMORY_DEBUG
)

30 
	~"memdbg.h
"

33 #i‚de‡
b°r__Æloc


34 
	#b°r__Æloc
(
x
Ë
	`mÆloc
 (x)

	)

37 #i‚de‡
b°r__‰ì


38 
	#b°r__‰ì
(
p
Ë
	`‰ì
 (p)

	)

41 #i‚de‡
b°r__ªÆloc


42 
	#b°r__ªÆloc
(
p
,
x
Ë
	`ªÆloc
 (’), (x))

	)

45 #i‚de‡
b°r__mem˝y


46 
	#b°r__mem˝y
(
d
,
s
,
l
Ë
	`mem˝y
 ((d), (s), (l))

	)

49 #i‚de‡
b°r__memmove


50 
	#b°r__memmove
(
d
,
s
,
l
Ë
	`memmove
 ((d), (s), (l))

	)

53 #i‚de‡
b°r__mem£t


54 
	#b°r__mem£t
(
d
,
c
,
l
Ë
	`mem£t
 ((d), (c), (l))

	)

57 #i‚de‡
b°r__memcmp


58 
	#b°r__memcmp
(
d
,
c
,
l
Ë
	`memcmp
 ((d), (c), (l))

	)

61 #i‚de‡
b°r__memchr


62 
	#b°r__memchr
(
s
,
c
,
l
Ë
	`memchr
 ((s), (c), (l))

	)

67 
	#bBlockC›y
(
D
,
S
,
L
Ë{ i‡((LË> 0Ë
	`b°r__memmove
 ((D),(S),(L)); }

	)

71 
	$¢≠UpSize
 (
i
) {

72 i‡(
i
 < 8) {

73 
i
 = 8;

75 
j
;

76 
j
 = (Ë
i
;

78 
j
 |= (j >> 1);

79 
j
 |= (j >> 2);

80 
j
 |= (j >> 4);

81 
j
 |= (j >> 8);

82 #i‡(
UINT_MAX
 != 0xffff)

83 
j
 |= (j >> 16);

84 #i‡(
UINT_MAX
 > 0xffffffffUL)

85 
j
 |= (j >> 32);

89 
j
++;

90 i‡((Ë
j
 >
i
) i = () j;

92  
i
;

93 
	}
}

99 
	$bÆloc
 (
b°rög
 
b
, 
ﬁí
) {

100 
Àn
;

101 i‡(
b
 =
NULL
 || b->
d©a
 =NULL || b->
¶í
 < 0 || b->
mÀn
 <= 0 ||

102 
b
->
mÀn
 < b->
¶í
 || 
ﬁí
 <= 0) {

103  
BSTR_ERR
;

106 i‡(
ﬁí
 >
b
->
mÀn
) {

107 * 
x
;

109 i‡((
Àn
 = 
	`¢≠UpSize
 (
ﬁí
)Ë<
b
->
mÀn
Ë 
BSTR_OK
;

112 i‡(7 * 
b
->
mÀn
 < 8 * b->
¶í
) {

117 
ªÆlocSå©egy
:;

119 
x
 = (*Ë
	`b°r__ªÆloc
 (
b
->
d©a
, (
size_t
Ë
Àn
);

120 i‡(
x
 =
NULL
) {

125 i‡(
NULL
 =(
x
 = (*Ë
	`b°r__ªÆloc
 (
b
->
d©a
, (
size_t
Ë(
Àn
 = 
ﬁí
)))) {

126  
BSTR_ERR
;

135 i‡(
NULL
 =(
x
 = (*Ë
	`b°r__Æloc
 ((
size_t
Ë
Àn
))) {

140 
ªÆlocSå©egy
;

143 i‡(
b
->
¶í
Ë
	`b°r__mem˝y
 ((*Ë
x
, (*Ëb->
d©a
, (
size_t
) b->slen);

144 
	`b°r__‰ì
 (
b
->
d©a
);

147 
b
->
d©a
 = 
x
;

148 
b
->
mÀn
 = 
Àn
;

149 
b
->
d©a
[b->
¶í
] = () '\0';

152  
BSTR_OK
;

153 
	}
}

161 
	$bÆlocmö
 (
b°rög
 
b
, 
Àn
) {

162 * 
s
;

164 i‡(
b
 =
NULL
 || b->
d©a
 =NULL || (b->
¶í
+1Ë< 0 || b->
mÀn
 <= 0 ||

165 
b
->
mÀn
 < b->
¶í
 || 
Àn
 <= 0) {

166  
BSTR_ERR
;

169 i‡(
Àn
 < 
b
->
¶í
 + 1)Üen = b->slen + 1;

171 i‡(
Àn
 !
b
->
mÀn
) {

172 
s
 = (*Ë
	`b°r__ªÆloc
 (
b
->
d©a
, (
size_t
Ë
Àn
);

173 i‡(
NULL
 =
s
Ë 
BSTR_ERR
;

174 
s
[
b
->
¶í
] = () '\0';

175 
b
->
d©a
 = 
s
;

176 
b
->
mÀn
 = 
Àn
;

179  
BSTR_OK
;

180 
	}
}

187 
b°rög
 
	$b‰omc°r
 (c⁄° * 
°r
) {

188 
b°rög
 
b
;

189 
i
;

190 
size_t
 
j
;

192 i‡(
°r
 =
NULL
)  NULL;

193 
j
 = (
°æí
Ë(
°r
);

194 
i
 = 
	`¢≠UpSize
 ((Ë(
j
 + (2 - (j != 0))));

195 i‡(
i
 <(Ë
j
Ë 
NULL
;

197 
b
 = (
b°rög
Ë
	`b°r__Æloc
 ( (
ègb°rög
));

198 i‡(
NULL
 =
b
)  NULL;

199 
b
->
¶í
 = (Ë
j
;

200 i‡(
NULL
 =(
b
->
d©a
 = (*Ë
	`b°r__Æloc
 (b->
mÀn
 = 
i
))) {

201 
	`b°r__‰ì
 (
b
);

202  
NULL
;

205 
	`b°r__mem˝y
 (
b
->
d©a
, 
°r
, 
j
+1);

206  
b
;

207 
	}
}

215 
b°rög
 
	$b‰omc°øŒoc
 (
mÀn
, c⁄° * 
°r
) {

216 
b°rög
 
b
;

217 
i
;

218 
size_t
 
j
;

220 i‡(
°r
 =
NULL
)  NULL;

221 
j
 = (
°æí
Ë(
°r
);

222 
i
 = 
	`¢≠UpSize
 ((Ë(
j
 + (2 - (j != 0))));

223 i‡(
i
 <(Ë
j
Ë 
NULL
;

225 
b
 = (
b°rög
Ë
	`b°r__Æloc
 ( (
ègb°rög
));

226 i‡(
b
 =
NULL
)  NULL;

227 
b
->
¶í
 = (Ë
j
;

228 i‡(
i
 < 
mÀn
) i = mlen;

230 i‡(
NULL
 =(
b
->
d©a
 = (*Ë
	`b°r__Æloc
 (b->
mÀn
 = 
i
))) {

231 
	`b°r__‰ì
 (
b
);

232  
NULL
;

235 
	`b°r__mem˝y
 (
b
->
d©a
, 
°r
, 
j
+1);

236  
b
;

237 
	}
}

244 
b°rög
 
	$blk2b°r
 (c⁄° * 
blk
, 
Àn
) {

245 
b°rög
 
b
;

246 
i
;

248 i‡(
blk
 =
NULL
 || 
Àn
 < 0)  NULL;

249 
b
 = (
b°rög
Ë
	`b°r__Æloc
 ( (
ègb°rög
));

250 i‡(
b
 =
NULL
)  NULL;

251 
b
->
¶í
 = 
Àn
;

253 
i
 = 
Àn
 + (2 - (len != 0));

254 
i
 = 
	`¢≠UpSize
 (i);

256 
b
->
mÀn
 = 
i
;

258 
b
->
d©a
 = (*Ë
	`b°r__Æloc
 ((
size_t
Ëb->
mÀn
);

259 i‡(
b
->
d©a
 =
NULL
) {

260 
	`b°r__‰ì
 (
b
);

261  
NULL
;

264 i‡(
Àn
 > 0Ë
	`b°r__mem˝y
 (
b
->
d©a
, 
blk
, (
size_t
)Üen);

265 
b
->
d©a
[
Àn
] = () '\0';

267  
b
;

268 
	}
}

277 * 
	$b°r2c°r
 (
c⁄°_b°rög
 
b
, 
z
) {

278 
i
, 
l
;

279 * 
r
;

281 i‡(
b
 =
NULL
 || b->
¶í
 < 0 || b->
d©a
 == NULL)  NULL;

282 
l
 = 
b
->
¶í
;

283 
r
 = (*Ë
	`b°r__Æloc
 ((
size_t
Ë(
l
 + 1));

284 i‡(
r
 =
NULL
) Ñ;

286 
i
=0; i < 
l
; i ++) {

287 
r
[
i
] = (Ë((
b
->
d©a
[i] ='\0'Ë? 
z
 : () (b->data[i]));

290 
r
[
l
] = () '\0';

292  
r
;

293 
	}
}

306 
	$bc°r‰ì
 (* 
s
) {

307 i‡(
s
) {

308 
	`b°r__‰ì
 (
s
);

309  
BSTR_OK
;

311  
BSTR_ERR
;

312 
	}
}

318 
	$bc⁄ˇt
 (
b°rög
 
b0
, 
c⁄°_b°rög
 
b1
) {

319 
Àn
, 
d
;

320 
b°rög
 
aux
 = (b°rögË
b1
;

322 i‡(
b0
 =
NULL
 || 
b1
 =NULL || b0->
d©a
 =NULL || b1->d©®=NULLË 
BSTR_ERR
;

324 
d
 = 
b0
->
¶í
;

325 
Àn
 = 
b1
->
¶í
;

326 i‡((
d
 | (
b0
->
mÀn
 - dË| 
Àn
 | (d +Üí)Ë< 0Ë 
BSTR_ERR
;

328 i‡(
b0
->
mÀn
 <
d
 + 
Àn
 + 1) {

329 
±rdiff_t
 
pd
 = 
b1
->
d©a
 - 
b0
->data;

330 i‡(0 <
pd
 &&Öd < 
b0
->
mÀn
) {

331 i‡(
NULL
 =(
aux
 = 
	`b°r˝y
 (
b1
))Ë 
BSTR_ERR
;

333 i‡(
	`bÆloc
 (
b0
, 
d
 + 
Àn
 + 1Ë!
BSTR_OK
) {

334 i‡(
aux
 !
b1
Ë
	`bde°roy
 (aux);

335  
BSTR_ERR
;

339 
	`bBlockC›y
 (&
b0
->
d©a
[
d
], &
aux
->d©a[0], (
size_t
Ë
Àn
);

340 
b0
->
d©a
[
d
 + 
Àn
] = () '\0';

341 
b0
->
¶í
 = 
d
 + 
Àn
;

342 i‡(
aux
 !
b1
Ë
	`bde°roy
 (aux);

343  
BSTR_OK
;

344 
	}
}

350 
	$bc⁄ch¨
 (
b°rög
 
b
, 
c
) {

351 
d
;

353 i‡(
b
 =
NULL
Ë 
BSTR_ERR
;

354 
d
 = 
b
->
¶í
;

355 i‡((
d
 | (
b
->
mÀn
 - d)Ë< 0 || 
	`bÆloc
 (b, d + 2Ë!
BSTR_OK
Ë 
BSTR_ERR
;

356 
b
->
d©a
[
d
] = (Ë
c
;

357 
b
->
d©a
[
d
 + 1] = () '\0';

358 
b
->
¶í
++;

359  
BSTR_OK
;

360 
	}
}

366 
	$bˇtc°r
 (
b°rög
 
b
, c⁄° * 
s
) {

367 * 
d
;

368 
i
, 
l
;

370 i‡(
b
 =
NULL
 || b->
d©a
 =NULL || b->
¶í
 < 0 || b->
mÀn
 < b->slen

371 || 
b
->
mÀn
 <0 || 
s
 =
NULL
Ë 
BSTR_ERR
;

374 
l
 = 
b
->
mÀn
 - b->
¶í
;

375 
d
 = (*Ë&
b
->
d©a
[b->
¶í
];

376 
i
=0; i < 
l
; i++) {

377 i‡((*
d
++ = *
s
++) == '\0') {

378 
b
->
¶í
 +
i
;

379  
BSTR_OK
;

382 
b
->
¶í
 +
i
;

385  
	`bˇtblk
 (
b
, (c⁄° *Ë
s
, (Ë
	`°æí
 (s));

386 
	}
}

392 
	$bˇtblk
 (
b°rög
 
b
, c⁄° * 
s
, 
Àn
) {

393 
∆
;

395 i‡(
b
 =
NULL
 || b->
d©a
 =NULL || b->
¶í
 < 0 || b->
mÀn
 < b->slen

396 || 
b
->
mÀn
 <0 || 
s
 =
NULL
 || 
Àn
 < 0Ë 
BSTR_ERR
;

398 i‡(0 > (
∆
 = 
b
->
¶í
 + 
Àn
)Ë 
BSTR_ERR
;

399 i‡(
b
->
mÀn
 <
∆
 && 0 > 
	`bÆloc
 (b,Ç»+ 1)Ë 
BSTR_ERR
;

401 
	`bBlockC›y
 (&
b
->
d©a
[b->
¶í
], 
s
, (
size_t
Ë
Àn
);

402 
b
->
¶í
 = 
∆
;

403 
b
->
d©a
[
∆
] = () '\0';

404  
BSTR_OK
;

405 
	}
}

411 
b°rög
 
	$b°r˝y
 (
c⁄°_b°rög
 
b
) {

412 
b°rög
 
b0
;

413 
i
,
j
;

416 i‡(
b
 =
NULL
 || b->
¶í
 < 0 || b->
d©a
 == NULL)  NULL;

418 
b0
 = (
b°rög
Ë
	`b°r__Æloc
 ( (
ègb°rög
));

419 i‡(
b0
 =
NULL
) {

421  
NULL
;

424 
i
 = 
b
->
¶í
;

425 
j
 = 
	`¢≠UpSize
 (
i
 + 1);

427 
b0
->
d©a
 = (*Ë
	`b°r__Æloc
 (
j
);

428 i‡(
b0
->
d©a
 =
NULL
) {

429 
j
 = 
i
 + 1;

430 
b0
->
d©a
 = (*Ë
	`b°r__Æloc
 (
j
);

431 i‡(
b0
->
d©a
 =
NULL
) {

433 
	`b°r__‰ì
 (
b0
);

434  
NULL
;

438 
b0
->
mÀn
 = 
j
;

439 
b0
->
¶í
 = 
i
;

441 i‡(
i
Ë
	`b°r__mem˝y
 ((*Ë
b0
->
d©a
, (*Ë
b
->data, i);

442 
b0
->
d©a
[b0->
¶í
] = () '\0';

444  
b0
;

445 
	}
}

451 
	$bassign
 (
b°rög
 
a
, 
c⁄°_b°rög
 
b
) {

452 i‡(
b
 =
NULL
 || b->
d©a
 =NULL || b->
¶í
 < 0)

453  
BSTR_ERR
;

454 i‡(
b
->
¶í
 != 0) {

455 i‡(
	`bÆloc
 (
a
, 
b
->
¶í
Ë!
BSTR_OK
Ë 
BSTR_ERR
;

456 
	`b°r__memmove
 (
a
->
d©a
, 
b
->d©a, b->
¶í
);

458 i‡(
a
 =
NULL
 ||á->
d©a
 =NULL ||á->
mÀn
 <á->
¶í
 ||

459 
a
->
¶í
 < 0 ||á->
mÀn
 == 0)

460  
BSTR_ERR
;

462 
a
->
d©a
[
b
->
¶í
] = () '\0';

463 
a
->
¶í
 = 
b
->slen;

464  
BSTR_OK
;

465 
	}
}

473 
	$bassignmid°r
 (
b°rög
 
a
, 
c⁄°_b°rög
 
b
, 
À·
, 
Àn
) {

474 i‡(
b
 =
NULL
 || b->
d©a
 =NULL || b->
¶í
 < 0)

475  
BSTR_ERR
;

477 i‡(
À·
 < 0) {

478 
Àn
 +
À·
;

479 
À·
 = 0;

482 i‡(
Àn
 > 
b
->
¶í
 - 
À·
)Üen = b->slen -Üeft;

484 i‡(
a
 =
NULL
 ||á->
d©a
 =NULL ||á->
mÀn
 <á->
¶í
 ||

485 
a
->
¶í
 < 0 ||á->
mÀn
 == 0)

486  
BSTR_ERR
;

488 i‡(
Àn
 > 0) {

489 i‡(
	`bÆloc
 (
a
, 
Àn
Ë!
BSTR_OK
Ë 
BSTR_ERR
;

490 
	`b°r__memmove
 (
a
->
d©a
, 
b
->d©®+ 
À·
, 
Àn
);

491 
a
->
¶í
 = 
Àn
;

493 
a
->
¶í
 = 0;

495 
a
->
d©a
[a->
¶í
] = () '\0';

496  
BSTR_OK
;

497 
	}
}

505 
	$bassignc°r
 (
b°rög
 
a
, c⁄° * 
°r
) {

506 
i
;

507 
size_t
 
Àn
;

508 i‡(
a
 =
NULL
 ||á->
d©a
 =NULL ||á->
mÀn
 <á->
¶í
 ||

509 
a
->
¶í
 < 0 ||á->
mÀn
 =0 || 
NULL
 =
°r
)

510  
BSTR_ERR
;

512 
i
=0; i < 
a
->
mÀn
; i++) {

513 i‡('\0' =(
a
->
d©a
[
i
] = 
°r
[i])) {

514 
a
->
¶í
 = 
i
;

515  
BSTR_OK
;

519 
a
->
¶í
 = 
i
;

520 
Àn
 = 
	`°æí
 (
°r
 + 
i
);

521 i‡(
Àn
 > 
INT_MAX
 || 
i
 +Üen + 1 > INT_MAX ||

522 0 > 
	`bÆloc
 (
a
, (Ë(
i
 + 
Àn
 + 1))Ë 
BSTR_ERR
;

523 
	`bBlockC›y
 (
a
->
d©a
 + 
i
, 
°r
 + i, (
size_t
Ë
Àn
 + 1);

524 
a
->
¶í
 +(Ë
Àn
;

525  
BSTR_OK
;

526 
	}
}

534 
	$bassignblk
 (
b°rög
 
a
, c⁄° * 
s
, 
Àn
) {

535 i‡(
a
 =
NULL
 ||á->
d©a
 =NULL ||á->
mÀn
 <á->
¶í
 ||

536 
a
->
¶í
 < 0 ||á->
mÀn
 =0 || 
NULL
 =
s
 || 
Àn
 + 1 < 1)

537  
BSTR_ERR
;

538 i‡(
Àn
 + 1 > 
a
->
mÀn
 && 0 > 
	`bÆloc
 (a,Üí + 1)Ë 
BSTR_ERR
;

539 
	`bBlockC›y
 (
a
->
d©a
, 
s
, (
size_t
Ë
Àn
);

540 
a
->
d©a
[
Àn
] = () '\0';

541 
a
->
¶í
 = 
Àn
;

542  
BSTR_OK
;

543 
	}
}

549 
	$båunc
 (
b°rög
 
b
, 
n
) {

550 i‡(
n
 < 0 || 
b
 =
NULL
 || b->
d©a
 =NULL || b->
mÀn
 < b->
¶í
 ||

551 
b
->
¶í
 < 0 || b->
mÀn
 <0Ë 
BSTR_ERR
;

552 i‡(
b
->
¶í
 > 
n
) {

553 
b
->
¶í
 = 
n
;

554 
b
->
d©a
[
n
] = () '\0';

556  
BSTR_OK
;

557 
	}
}

559 
	#upˇ£
(
c
Ë(
	`touµî
 ((Ëc))

	)

560 
	#downˇ£
(
c
Ë(
	`tﬁowî
 ((Ëc))

	)

561 
	#w•a˚
(
c
Ë(
	`is•a˚
 ((Ëc))

	)

567 
	$btouµî
 (
b°rög
 
b
) {

568 
i
, 
Àn
;

569 i‡(
b
 =
NULL
 || b->
d©a
 =NULL || b->
mÀn
 < b->
¶í
 ||

570 
b
->
¶í
 < 0 || b->
mÀn
 <0Ë 
BSTR_ERR
;

571 
i
=0, 
Àn
 = 
b
->
¶í
; i <Üen; i++) {

572 
b
->
d©a
[
i
] = (Ë
	`upˇ£
 (b->data[i]);

574  
BSTR_OK
;

575 
	}
}

581 
	$btﬁowî
 (
b°rög
 
b
) {

582 
i
, 
Àn
;

583 i‡(
b
 =
NULL
 || b->
d©a
 =NULL || b->
mÀn
 < b->
¶í
 ||

584 
b
->
¶í
 < 0 || b->
mÀn
 <0Ë 
BSTR_ERR
;

585 
i
=0, 
Àn
 = 
b
->
¶í
; i <Üen; i++) {

586 
b
->
d©a
[
i
] = (Ë
	`downˇ£
 (b->data[i]);

588  
BSTR_OK
;

589 
	}
}

600 
	$b°ricmp
 (
c⁄°_b°rög
 
b0
, c⁄°_b°rög 
b1
) {

601 
i
, 
v
, 
n
;

603 i‡(
	`bd©a
 (
b0
Ë=
NULL
 || b0->
¶í
 < 0 ||

604 
	`bd©a
 (
b1
Ë=
NULL
 || b1->
¶í
 < 0Ë 
SHRT_MIN
;

605 i‡((
n
 = 
b0
->
¶í
Ë> 
b1
->slen)Ç = b1->slen;

606 i‡(
b0
->
¶í
 =
b1
->¶í && b0->
d©a
 =b1->d©aË 
BSTR_OK
;

608 
i
 = 0; i < 
n
; i ++) {

609 
v
 = (Ë
	`downˇ£
 (
b0
->
d©a
[
i
])

610 - (Ë
	`downˇ£
 (
b1
->
d©a
[
i
]);

611 i‡(0 !
v
)  v;

614 i‡(
b0
->
¶í
 > 
n
) {

615 
v
 = (Ë
	`downˇ£
 (
b0
->
d©a
[
n
]);

616 i‡(
v
)  v;

617  
UCHAR_MAX
 + 1;

619 i‡(
b1
->
¶í
 > 
n
) {

620 
v
 = - (Ë
	`downˇ£
 (
b1
->
d©a
[
n
]);

621 i‡(
v
)  v;

622  - (Ë(
UCHAR_MAX
 + 1);

624  
BSTR_OK
;

625 
	}
}

637 
	$b°∫icmp
 (
c⁄°_b°rög
 
b0
, c⁄°_b°rög 
b1
, 
n
) {

638 
i
, 
v
, 
m
;

640 i‡(
	`bd©a
 (
b0
Ë=
NULL
 || b0->
¶í
 < 0 ||

641 
	`bd©a
 (
b1
Ë=
NULL
 || b1->
¶í
 < 0 || 
n
 < 0Ë 
SHRT_MIN
;

642 
m
 = 
n
;

643 i‡(
m
 > 
b0
->
¶í
) m = b0->slen;

644 i‡(
m
 > 
b1
->
¶í
) m = b1->slen;

646 i‡(
b0
->
d©a
 !
b1
->data) {

647 
i
 = 0; i < 
m
; i ++) {

648 
v
 = (Ë
	`downˇ£
 (
b0
->
d©a
[
i
]);

649 
v
 -(Ë
	`downˇ£
 (
b1
->
d©a
[
i
]);

650 i‡(
v
 !0Ë 
b0
->
d©a
[
i
] - 
b1
->data[i];

654 i‡(
n
 =
m
 || 
b0
->
¶í
 =
b1
->¶íË 
BSTR_OK
;

656 i‡(
b0
->
¶í
 > 
m
) {

657 
v
 = (Ë
	`downˇ£
 (
b0
->
d©a
[
m
]);

658 i‡(
v
)  v;

659  
UCHAR_MAX
 + 1;

662 
v
 = - (Ë
	`downˇ£
 (
b1
->
d©a
[
m
]);

663 i‡(
v
)  v;

664  - (Ë(
UCHAR_MAX
 + 1);

665 
	}
}

675 
	$bi£qˇ£Àss
 (
c⁄°_b°rög
 
b0
, c⁄°_b°rög 
b1
) {

676 
i
, 
n
;

678 i‡(
	`bd©a
 (
b0
Ë=
NULL
 || b0->
¶í
 < 0 ||

679 
	`bd©a
 (
b1
Ë=
NULL
 || b1->
¶í
 < 0Ë 
BSTR_ERR
;

680 i‡(
b0
->
¶í
 !
b1
->¶íË 
BSTR_OK
;

681 i‡(
b0
->
d©a
 =
b1
->d©®|| b0->
¶í
 == 0)  1;

682 
i
=0, 
n
=
b0
->
¶í
; i <Ç; i++) {

683 i‡(
b0
->
d©a
[
i
] !
b1
->data[i]) {

684 
c
 = (Ë
	`downˇ£
 (
b0
->
d©a
[
i
]);

685 i‡(
c
 !(Ë
	`downˇ£
 (
b1
->
d©a
[
i
]))  0;

689 
	}
}

700 
	$bis°emeqˇ£Àssblk
 (
c⁄°_b°rög
 
b0
, c⁄° * 
blk
, 
Àn
) {

701 
i
;

703 i‡(
	`bd©a
 (
b0
Ë=
NULL
 || b0->
¶í
 < 0 || NULL =
blk
 || 
Àn
 < 0)

704  
BSTR_ERR
;

705 i‡(
b0
->
¶í
 < 
Àn
Ë 
BSTR_OK
;

706 i‡(
b0
->
d©a
 =(c⁄° *Ë
blk
 || 
Àn
 == 0)  1;

708 
i
 = 0; i < 
Àn
; i ++) {

709 i‡(
b0
->
d©a
[
i
] !((c⁄° *Ë
blk
)[i]) {

710 i‡(
	`downˇ£
 (
b0
->
d©a
[
i
]) !=

711 
	`downˇ£
 (((c⁄° *Ë
blk
)[
i
]))  0;

715 
	}
}

722 
	$b…rimws
 (
b°rög
 
b
) {

723 
i
, 
Àn
;

725 i‡(
b
 =
NULL
 || b->
d©a
 =NULL || b->
mÀn
 < b->
¶í
 ||

726 
b
->
¶í
 < 0 || b->
mÀn
 <0Ë 
BSTR_ERR
;

728 
Àn
 = 
b
->
¶í
, 
i
 = 0; i <Üen; i++) {

729 i‡(!
	`w•a˚
 (
b
->
d©a
[
i
])) {

730  
	`bdñëe
 (
b
, 0, 
i
);

734 
b
->
d©a
[0] = () '\0';

735 
b
->
¶í
 = 0;

736  
BSTR_OK
;

737 
	}
}

744 
	$bπrimws
 (
b°rög
 
b
) {

745 
i
;

747 i‡(
b
 =
NULL
 || b->
d©a
 =NULL || b->
mÀn
 < b->
¶í
 ||

748 
b
->
¶í
 < 0 || b->
mÀn
 <0Ë 
BSTR_ERR
;

750 
i
 = 
b
->
¶í
 - 1; i >= 0; i--) {

751 i‡(!
	`w•a˚
 (
b
->
d©a
[
i
])) {

752 i‡(
b
->
mÀn
 > 
i
Ëb->
d©a
[i+1] = () '\0';

753 
b
->
¶í
 = 
i
 + 1;

754  
BSTR_OK
;

758 
b
->
d©a
[0] = () '\0';

759 
b
->
¶í
 = 0;

760  
BSTR_OK
;

761 
	}
}

768 
	$båimws
 (
b°rög
 
b
) {

769 
i
, 
j
;

771 i‡(
b
 =
NULL
 || b->
d©a
 =NULL || b->
mÀn
 < b->
¶í
 ||

772 
b
->
¶í
 < 0 || b->
mÀn
 <0Ë 
BSTR_ERR
;

774 
i
 = 
b
->
¶í
 - 1; i >= 0; i--) {

775 i‡(!
	`w•a˚
 (
b
->
d©a
[
i
])) {

776 i‡(
b
->
mÀn
 > 
i
Ëb->
d©a
[i+1] = () '\0';

777 
b
->
¶í
 = 
i
 + 1;

778 
j
 = 0; 
	`w•a˚
 (
b
->
d©a
[j]); j++) {}

779  
	`bdñëe
 (
b
, 0, 
j
);

783 
b
->
d©a
[0] = () '\0';

784 
b
->
¶í
 = 0;

785  
BSTR_OK
;

786 
	}
}

795 
	$bi£q
 (
c⁄°_b°rög
 
b0
, c⁄°_b°rög 
b1
) {

796 i‡(
b0
 =
NULL
 || 
b1
 =NULL || b0->
d©a
 == NULL || b1->data == NULL ||

797 
b0
->
¶í
 < 0 || 
b1
->¶í < 0Ë 
BSTR_ERR
;

798 i‡(
b0
->
¶í
 !
b1
->¶íË 
BSTR_OK
;

799 i‡(
b0
->
d©a
 =
b1
->d©®|| b0->
¶í
 == 0)  1;

800  !
	`b°r__memcmp
 (
b0
->
d©a
, 
b1
->d©a, b0->
¶í
);

801 
	}
}

811 
	$bis°emeqblk
 (
c⁄°_b°rög
 
b0
, c⁄° * 
blk
, 
Àn
) {

812 
i
;

814 i‡(
	`bd©a
 (
b0
Ë=
NULL
 || b0->
¶í
 < 0 || NULL =
blk
 || 
Àn
 < 0)

815  
BSTR_ERR
;

816 i‡(
b0
->
¶í
 < 
Àn
Ë 
BSTR_OK
;

817 i‡(
b0
->
d©a
 =(c⁄° *Ë
blk
 || 
Àn
 == 0)  1;

819 
i
 = 0; i < 
Àn
; i ++) {

820 i‡(
b0
->
d©a
[
i
] !((c⁄° *Ë
blk
)[i]Ë 
BSTR_OK
;

823 
	}
}

836 
	$bi£qc°r
 (
c⁄°_b°rög
 
b
, c⁄° * 
s
) {

837 
i
;

838 i‡(
b
 =
NULL
 || 
s
 =NULL || b->
d©a
 =NULL || b->
¶í
 < 0Ë 
BSTR_ERR
;

839 
i
=0; i < 
b
->
¶í
; i++) {

840 i‡(
s
[
i
] ='\0' || 
b
->
d©a
[i] !(Ës[i]Ë 
BSTR_OK
;

842  
s
[
i
] == '\0';

843 
	}
}

857 
	$bi£qc°rˇ£Àss
 (
c⁄°_b°rög
 
b
, c⁄° * 
s
) {

858 
i
;

859 i‡(
b
 =
NULL
 || 
s
 =NULL || b->
d©a
 =NULL || b->
¶í
 < 0Ë 
BSTR_ERR
;

860 
i
=0; i < 
b
->
¶í
; i++) {

861 i‡(
s
[
i
] == '\0' ||

862 (
b
->
d©a
[
i
] !(Ë
s
[i] &&

863 
	`downˇ£
 (
b
->
d©a
[
i
]Ë!(Ëdownˇ£ (
s
[i])))

864  
BSTR_OK
;

866  
s
[
i
] == '\0';

867 
	}
}

883 
	$b°rcmp
 (
c⁄°_b°rög
 
b0
, c⁄°_b°rög 
b1
) {

884 
i
, 
v
, 
n
;

886 i‡(
b0
 =
NULL
 || 
b1
 =NULL || b0->
d©a
 == NULL || b1->data == NULL ||

887 
b0
->
¶í
 < 0 || 
b1
->¶í < 0Ë 
SHRT_MIN
;

888 
n
 = 
b0
->
¶í
; i‡“ > 
b1
->slen)Ç = b1->slen;

889 i‡(
b0
->
¶í
 =
b1
->¶í && (b0->
d©a
 == b1->data || b0->slen == 0))

890  
BSTR_OK
;

892 
i
 = 0; i < 
n
; i ++) {

893 
v
 = ((Ë
b0
->
d©a
[
i
]Ë- ((Ë
b1
->data[i]);

894 i‡(
v
 != 0)  v;

895 i‡(
b0
->
d©a
[
i
] =(Ë'\0'Ë 
BSTR_OK
;

898 i‡(
b0
->
¶í
 > 
n
)  1;

899 i‡(
b1
->
¶í
 > 
n
)  -1;

900  
BSTR_OK
;

901 
	}
}

913 
	$b°∫cmp
 (
c⁄°_b°rög
 
b0
, c⁄°_b°rög 
b1
, 
n
) {

914 
i
, 
v
, 
m
;

916 i‡(
b0
 =
NULL
 || 
b1
 =NULL || b0->
d©a
 == NULL || b1->data == NULL ||

917 
b0
->
¶í
 < 0 || 
b1
->¶í < 0Ë 
SHRT_MIN
;

918 
m
 = 
n
;

919 i‡(
m
 > 
b0
->
¶í
) m = b0->slen;

920 i‡(
m
 > 
b1
->
¶í
) m = b1->slen;

922 i‡(
b0
->
d©a
 !
b1
->data) {

923 
i
 = 0; i < 
m
; i ++) {

924 
v
 = ((Ë
b0
->
d©a
[
i
]Ë- ((Ë
b1
->data[i]);

925 i‡(
v
 != 0)  v;

926 i‡(
b0
->
d©a
[
i
] =(Ë'\0'Ë 
BSTR_OK
;

930 i‡(
n
 =
m
 || 
b0
->
¶í
 =
b1
->¶íË 
BSTR_OK
;

932 i‡(
b0
->
¶í
 > 
m
)  1;

934 
	}
}

943 
b°rög
 
	$bmid°r
 (
c⁄°_b°rög
 
b
, 
À·
, 
Àn
) {

945 i‡(
b
 =
NULL
 || b->
¶í
 < 0 || b->
d©a
 == NULL)  NULL;

947 i‡(
À·
 < 0) {

948 
Àn
 +
À·
;

949 
À·
 = 0;

952 i‡(
Àn
 > 
b
->
¶í
 - 
À·
)Üen = b->slen -Üeft;

954 i‡(
Àn
 <0Ë 
	`b‰omc°r
 ("");

955  
	`blk2b°r
 (
b
->
d©a
 + 
À·
, 
Àn
);

956 
	}
}

965 
	$bdñëe
 (
b°rög
 
b
, 
pos
, 
Àn
) {

967 i‡(
pos
 < 0) {

968 
Àn
 +
pos
;

969 
pos
 = 0;

972 i‡(
Àn
 < 0 || 
b
 =
NULL
 || b->
d©a
 =NULL || b->
¶í
 < 0 ||

973 
b
->
mÀn
 < b->
¶í
 || b->mlen <= 0)

974  
BSTR_ERR
;

975 i‡(
Àn
 > 0 && 
pos
 < 
b
->
¶í
) {

976 i‡(
pos
 + 
Àn
 >
b
->
¶í
) {

977 
b
->
¶í
 = 
pos
;

979 
	`bBlockC›y
 ((*Ë(
b
->
d©a
 + 
pos
),

980 (*Ë(
b
->
d©a
 + 
pos
 + 
Àn
),

981 
b
->
¶í
 - (
pos
+
Àn
));

982 
b
->
¶í
 -
Àn
;

984 
b
->
d©a
[b->
¶í
] = () '\0';

986  
BSTR_OK
;

987 
	}
}

996 
	$bde°roy
 (
b°rög
 
b
) {

997 i‡(
b
 =
NULL
 || b->
¶í
 < 0 || b->
mÀn
 <= 0 || b->mlen < b->slen ||

998 
b
->
d©a
 =
NULL
)

999  
BSTR_ERR
;

1001 
	`b°r__‰ì
 (
b
->
d©a
);

1006 
b
->
¶í
 = -1;

1007 
b
->
mÀn
 = -
__LINE__
;

1008 
b
->
d©a
 = 
NULL
;

1010 
	`b°r__‰ì
 (
b
);

1011  
BSTR_OK
;

1012 
	}
}

1023 
	$bö°r
 (
c⁄°_b°rög
 
b1
, 
pos
, c⁄°_b°rög 
b2
) {

1024 
j
, 
ii
, 
Œ
, 
lf
;

1025 * 
d0
;

1026 
c0
;

1027 * 
d1
;

1028 
c1
;

1029 
i
;

1031 i‡(
b1
 =
NULL
 || b1->
d©a
 =NULL || b1->
¶í
 < 0 ||

1032 
b2
 =
NULL
 || b2->
d©a
 =NULL || b2->
¶í
 < 0Ë 
BSTR_ERR
;

1033 i‡(
b1
->
¶í
 =
pos
Ë (
b2
->¶í =0)?pos:
BSTR_ERR
;

1034 i‡(
b1
->
¶í
 < 
pos
 ||Öo†< 0Ë 
BSTR_ERR
;

1035 i‡(
b2
->
¶í
 =0Ë 
pos
;

1038 i‡((
lf
 = 
b1
->
¶í
 - 
b2
->¶í + 1Ë<
pos
Ë 
BSTR_ERR
;

1041 i‡(
b1
->
d©a
 =
b2
->d©®&& 
pos
 == 0)  0;

1043 
i
 = 
pos
;

1045 
d0
 = 
b2
->
d©a
;

1046 
d1
 = 
b1
->
d©a
;

1047 
Œ
 = 
b2
->
¶í
;

1050 
c0
 = 
d0
[0];

1051 i‡(1 =
Œ
) {

1052 ;
i
 < 
lf
; i++Ëi‡(
c0
 =
d1
[i])  i;

1053  
BSTR_ERR
;

1056 
c1
 = 
c0
;

1057 
j
 = 0;

1058 
lf
 = 
b1
->
¶í
 - 1;

1060 
ii
 = -1;

1061 i‡(
i
 < 
lf
) do {

1063 i‡(
c1
 !
d1
[
i
]) {

1064 i‡(
c1
 !
d1
[1+
i
]) {

1065 
i
 += 2;

1068 
i
++;

1072 i‡(0 =
j
Ë
ii
 = 
i
;

1075 
j
++;

1076 
i
++;

1079 i‡(
j
 < 
Œ
) {

1080 
c1
 = 
d0
[
j
];

1084 
N0
:;

1087 i‡(
i
 =
ii
+
j
)  ii;

1090 
i
 -
j
;

1091 
j
 = 0;

1092 
c1
 = 
c0
;

1093 } 
i
 < 
lf
);

1096 i‡(
i
 =
lf
 && 
Œ
 =
j
+1 && 
c1
 =
d1
[i]Ë
N0
;

1098  
BSTR_ERR
;

1099 
	}
}

1110 
	$bö°º
 (
c⁄°_b°rög
 
b1
, 
pos
, c⁄°_b°rög 
b2
) {

1111 
j
, 
i
, 
l
;

1112 * 
d0
, * 
d1
;

1114 i‡(
b1
 =
NULL
 || b1->
d©a
 =NULL || b1->
¶í
 < 0 ||

1115 
b2
 =
NULL
 || b2->
d©a
 =NULL || b2->
¶í
 < 0Ë 
BSTR_ERR
;

1116 i‡(
b1
->
¶í
 =
pos
 && 
b2
->slen == 0) Öos;

1117 i‡(
b1
->
¶í
 < 
pos
 ||Öo†< 0Ë 
BSTR_ERR
;

1118 i‡(
b2
->
¶í
 =0Ë 
pos
;

1121 i‡(
b1
->
d©a
 =
b2
->d©®&& 
pos
 =0 && b2->
¶í
 <= b1->slen)  0;

1123 
i
 = 
pos
;

1124 i‡((
l
 = 
b1
->
¶í
 - 
b2
->¶íË< 0Ë 
BSTR_ERR
;

1127 i‡(
l
 + 1 <
i
) i =Ü;

1128 
j
 = 0;

1130 
d0
 = 
b2
->
d©a
;

1131 
d1
 = 
b1
->
d©a
;

1132 
l
 = 
b2
->
¶í
;

1135 i‡(
d0
[
j
] =
d1
[
i
 + j]) {

1136 
j
 ++;

1137 i‡(
j
 >
l
Ë 
i
;

1139 
i
 --;

1140 i‡(
i
 < 0) ;

1141 
j
=0;

1145  
BSTR_ERR
;

1146 
	}
}

1157 
	$bö°rˇ£Àss
 (
c⁄°_b°rög
 
b1
, 
pos
, c⁄°_b°rög 
b2
) {

1158 
j
, 
i
, 
l
, 
Œ
;

1159 * 
d0
, * 
d1
;

1161 i‡(
b1
 =
NULL
 || b1->
d©a
 =NULL || b1->
¶í
 < 0 ||

1162 
b2
 =
NULL
 || b2->
d©a
 =NULL || b2->
¶í
 < 0Ë 
BSTR_ERR
;

1163 i‡(
b1
->
¶í
 =
pos
Ë (
b2
->¶í =0)?pos:
BSTR_ERR
;

1164 i‡(
b1
->
¶í
 < 
pos
 ||Öo†< 0Ë 
BSTR_ERR
;

1165 i‡(
b2
->
¶í
 =0Ë 
pos
;

1167 
l
 = 
b1
->
¶í
 - 
b2
->slen + 1;

1170 i‡(
l
 <
pos
Ë 
BSTR_ERR
;

1173 i‡(
b1
->
d©a
 =
b2
->d©®&& 
pos
 =0Ë 
BSTR_OK
;

1175 
i
 = 
pos
;

1176 
j
 = 0;

1178 
d0
 = 
b2
->
d©a
;

1179 
d1
 = 
b1
->
d©a
;

1180 
Œ
 = 
b2
->
¶í
;

1183 i‡(
d0
[
j
] =
d1
[
i
 + j] || 
	`downˇ£
 (d0[j]) == downcase (d1[i + j])) {

1184 
j
 ++;

1185 i‡(
j
 >
Œ
Ë 
i
;

1187 
i
 ++;

1188 i‡(
i
 >
l
) ;

1189 
j
=0;

1193  
BSTR_ERR
;

1194 
	}
}

1205 
	$bö°ºˇ£Àss
 (
c⁄°_b°rög
 
b1
, 
pos
, c⁄°_b°rög 
b2
) {

1206 
j
, 
i
, 
l
;

1207 * 
d0
, * 
d1
;

1209 i‡(
b1
 =
NULL
 || b1->
d©a
 =NULL || b1->
¶í
 < 0 ||

1210 
b2
 =
NULL
 || b2->
d©a
 =NULL || b2->
¶í
 < 0Ë 
BSTR_ERR
;

1211 i‡(
b1
->
¶í
 =
pos
 && 
b2
->slen == 0) Öos;

1212 i‡(
b1
->
¶í
 < 
pos
 ||Öo†< 0Ë 
BSTR_ERR
;

1213 i‡(
b2
->
¶í
 =0Ë 
pos
;

1216 i‡(
b1
->
d©a
 =
b2
->d©®&& 
pos
 =0 && b2->
¶í
 <b1->¶íË 
BSTR_OK
;

1218 
i
 = 
pos
;

1219 i‡((
l
 = 
b1
->
¶í
 - 
b2
->¶íË< 0Ë 
BSTR_ERR
;

1222 i‡(
l
 + 1 <
i
) i =Ü;

1223 
j
 = 0;

1225 
d0
 = 
b2
->
d©a
;

1226 
d1
 = 
b1
->
d©a
;

1227 
l
 = 
b2
->
¶í
;

1230 i‡(
d0
[
j
] =
d1
[
i
 + j] || 
	`downˇ£
 (d0[j]) == downcase (d1[i + j])) {

1231 
j
 ++;

1232 i‡(
j
 >
l
Ë 
i
;

1234 
i
 --;

1235 i‡(
i
 < 0) ;

1236 
j
=0;

1240  
BSTR_ERR
;

1241 
	}
}

1249 
	$b°rchΩ
 (
c⁄°_b°rög
 
b
, 
c
, 
pos
) {

1250 * 
p
;

1252 i‡(
b
 =
NULL
 || b->
d©a
 =NULL || b->
¶í
 <
pos
 ||Öo†< 0Ë 
BSTR_ERR
;

1253 
p
 = (*Ë
	`b°r__memchr
 ((
b
->
d©a
 + 
pos
), (Ë
c
, (b->
¶í
 -Öos));

1254 i‡(
p
Ë (Ë’ - 
b
->
d©a
);

1255  
BSTR_ERR
;

1256 
	}
}

1263 
	$b°ºchΩ
 (
c⁄°_b°rög
 
b
, 
c
, 
pos
) {

1264 
i
;

1266 i‡(
b
 =
NULL
 || b->
d©a
 =NULL || b->
¶í
 <
pos
 ||Öo†< 0Ë 
BSTR_ERR
;

1267 
i
=
pos
; i >= 0; i--) {

1268 i‡(
b
->
d©a
[
i
] =(Ë
c
)  i;

1270  
BSTR_ERR
;

1271 
	}
}

1273 #i‡!
deföed
 (
BSTRLIB_AGGRESSIVE_MEMORY_FOR_SPEED_TRADEOFF
)

1274 
	#LONG_LOG_BITS_QTY
 (3)

	)

1275 
	#LONG_BITS_QTY
 (1 << 
LONG_LOG_BITS_QTY
)

	)

1276 
	#LONG_TYPE
 

	)

1278 
	#CFCLEN
 ((1 << 
CHAR_BIT
Ë/ 
LONG_BITS_QTY
)

	)

1279 
	sch¨Fõld
 { 
LONG_TYPE
 
	mc⁄ã¡
[
CFCLEN
]; };

1280 
	#ã°InCh¨Fõld
(
cf
,
c
Ë((cf)->
c⁄ã¡
[(cË>> 
LONG_LOG_BITS_QTY
] & ((()1Ë<< ((cË& (
LONG_BITS_QTY
-1))))

	)

1281 
	#£tInCh¨Fõld
(
cf
,
idx
Ë{ \

	)

1282 
	gc
 = (Ë(
idx
); \

1283 (
	gcf
)->
	gc⁄ã¡
[
c
 >> 
LONG_LOG_BITS_QTY
] |(
LONG_TYPE
Ë(1u»<< (¯& (
LONG_BITS_QTY
-1))); \

1288 
	#CFCLEN
 (1 << 
CHAR_BIT
)

	)

1289 
	sch¨Fõld
 { 
	mc⁄ã¡
[
CFCLEN
]; };

1290 
	#ã°InCh¨Fõld
(
cf
,
c
Ë((cf)->
c⁄ã¡
[(Ë(c)])

	)

1291 
	#£tInCh¨Fõld
(
cf
,
idx
Ë(cf)->
c⁄ã¡
[(Ë(idx)] = ~0

	)

1296 
	$buûdCh¨Fõld
 (
ch¨Fõld
 * 
cf
, 
c⁄°_b°rög
 
b
) {

1297 
i
;

1298 i‡(
b
 =
NULL
 || b->
d©a
 =NULL || b->
¶í
 <0Ë 
BSTR_ERR
;

1299 
	`mem£t
 ((*Ë
cf
->
c⁄ã¡
, 0,  (
ch¨Fõld
));

1300 
i
=0; i < 
b
->
¶í
; i++) {

1301 
	`£tInCh¨Fõld
 (
cf
, 
b
->
d©a
[
i
]);

1303  
BSTR_OK
;

1304 
	}
}

1306 
	$övîtCh¨Fõld
 (
ch¨Fõld
 * 
cf
) {

1307 
i
;

1308 
i
=0; i < 
CFCLEN
; i++Ë
cf
->
c⁄ã¡
[i] = ~cf->content[i];

1309 
	}
}

1312 
	$böchrCF
 (c⁄° * 
d©a
, 
Àn
, 
pos
, c⁄° 
ch¨Fõld
 * 
cf
) {

1313 
i
;

1314 
i
=
pos
; i < 
Àn
; i++) {

1315 
c
 = (Ë
d©a
[
i
];

1316 i‡(
	`ã°InCh¨Fõld
 (
cf
, 
c
)Ë 
i
;

1318  
BSTR_ERR
;

1319 
	}
}

1327 
	$böchr
 (
c⁄°_b°rög
 
b0
, 
pos
, c⁄°_b°rög 
b1
) {

1328 
ch¨Fõld
 
chrs
;

1329 i‡(
pos
 < 0 || 
b0
 =
NULL
 || b0->
d©a
 == NULL ||

1330 
b0
->
¶í
 <
pos
Ë 
BSTR_ERR
;

1331 i‡(1 =
b1
->
¶í
Ë 
	`b°rchΩ
 (
b0
, b1->
d©a
[0], 
pos
);

1332 i‡(0 > 
	`buûdCh¨Fõld
 (&
chrs
, 
b1
)Ë 
BSTR_ERR
;

1333  
	`böchrCF
 (
b0
->
d©a
, b0->
¶í
, 
pos
, &
chrs
);

1334 
	}
}

1337 
	$böchºCF
 (c⁄° * 
d©a
, 
pos
, c⁄° 
ch¨Fõld
 * 
cf
) {

1338 
i
;

1339 
i
=
pos
; i >= 0; i--) {

1340 
c
 = (Ë
d©a
[
i
];

1341 i‡(
	`ã°InCh¨Fõld
 (
cf
, 
c
)Ë 
i
;

1343  
BSTR_ERR
;

1344 
	}
}

1352 
	$böchº
 (
c⁄°_b°rög
 
b0
, 
pos
, c⁄°_b°rög 
b1
) {

1353 
ch¨Fõld
 
chrs
;

1354 i‡(
pos
 < 0 || 
b0
 =
NULL
 || b0->
d©a
 =NULL || 
b1
 == NULL ||

1355 
b0
->
¶í
 < 
pos
Ë 
BSTR_ERR
;

1356 i‡(
pos
 =
b0
->
¶í
)Öos--;

1357 i‡(1 =
b1
->
¶í
Ë 
	`b°ºchΩ
 (
b0
, b1->
d©a
[0], 
pos
);

1358 i‡(0 > 
	`buûdCh¨Fõld
 (&
chrs
, 
b1
)Ë 
BSTR_ERR
;

1359  
	`böchºCF
 (
b0
->
d©a
, 
pos
, &
chrs
);

1360 
	}
}

1368 
	$bnöchr
 (
c⁄°_b°rög
 
b0
, 
pos
, c⁄°_b°rög 
b1
) {

1369 
ch¨Fõld
 
chrs
;

1370 i‡(
pos
 < 0 || 
b0
 =
NULL
 || b0->
d©a
 == NULL ||

1371 
b0
->
¶í
 <
pos
Ë 
BSTR_ERR
;

1372 i‡(
	`buûdCh¨Fõld
 (&
chrs
, 
b1
Ë< 0Ë 
BSTR_ERR
;

1373 
	`övîtCh¨Fõld
 (&
chrs
);

1374  
	`böchrCF
 (
b0
->
d©a
, b0->
¶í
, 
pos
, &
chrs
);

1375 
	}
}

1383 
	$bnöchº
 (
c⁄°_b°rög
 
b0
, 
pos
, c⁄°_b°rög 
b1
) {

1384 
ch¨Fõld
 
chrs
;

1385 i‡(
pos
 < 0 || 
b0
 =
NULL
 || b0->
d©a
 == NULL ||

1386 
b0
->
¶í
 < 
pos
Ë 
BSTR_ERR
;

1387 i‡(
pos
 =
b0
->
¶í
)Öos--;

1388 i‡(
	`buûdCh¨Fõld
 (&
chrs
, 
b1
Ë< 0Ë 
BSTR_ERR
;

1389 
	`övîtCh¨Fõld
 (&
chrs
);

1390  
	`böchºCF
 (
b0
->
d©a
, 
pos
, &
chrs
);

1391 
	}
}

1400 
	$b£t°r
 (
b°rög
 
b0
, 
pos
, 
c⁄°_b°rög
 
b1
, 
fûl
) {

1401 
d
, 
√wÀn
;

1402 
±rdiff_t
 
pd
;

1403 
b°rög
 
aux
 = (b°rögË
b1
;

1405 i‡(
pos
 < 0 || 
b0
 =
NULL
 || b0->
¶í
 < 0 || NULL =b0->
d©a
 ||

1406 
b0
->
mÀn
 < b0->
¶í
 || b0->mÀ¿<0Ë 
BSTR_ERR
;

1407 i‡(
b1
 !
NULL
 && (b1->
¶í
 < 0 || b1->
d©a
 =NULL)Ë 
BSTR_ERR
;

1409 
d
 = 
pos
;

1412 i‡(
NULL
 !
aux
) {

1413 i‡((
pd
 = (
±rdiff_t
Ë(
b1
->
d©a
 - 
b0
->d©a)Ë>0 &&Öd < (±rdiff_tËb0->
mÀn
) {

1414 i‡(
NULL
 =(
aux
 = 
	`b°r˝y
 (
b1
))Ë 
BSTR_ERR
;

1416 
d
 +
aux
->
¶í
;

1420 i‡(
	`bÆloc
 (
b0
, 
d
 + 1Ë!
BSTR_OK
) {

1421 i‡(
aux
 !
b1
Ë
	`bde°roy
 (aux);

1422  
BSTR_ERR
;

1425 
√wÀn
 = 
b0
->
¶í
;

1428 i‡(
pos
 > 
√wÀn
) {

1429 
	`b°r__mem£t
 (
b0
->
d©a
 + b0->
¶í
, (Ë
fûl
, (
size_t
Ë(
pos
 - b0->slen));

1430 
√wÀn
 = 
pos
;

1434 i‡(
aux
 !
NULL
) {

1435 
	`bBlockC›y
 ((*Ë(
b0
->
d©a
 + 
pos
), (*Ë
aux
->d©a,áux->
¶í
);

1436 i‡(
aux
 !
b1
Ë
	`bde°roy
 (aux);

1440 i‡(
d
 > 
√wÀn
)Çewlen = d;

1442 
b0
->
¶í
 = 
√wÀn
;

1443 
b0
->
d©a
[
√wÀn
] = () '\0';

1445  
BSTR_OK
;

1446 
	}
}

1455 
	$bö£π
 (
b°rög
 
b1
, 
pos
, 
c⁄°_b°rög
 
b2
, 
fûl
) {

1456 
d
, 
l
;

1457 
±rdiff_t
 
pd
;

1458 
b°rög
 
aux
 = (b°rögË
b2
;

1460 i‡(
pos
 < 0 || 
b1
 =
NULL
 || 
b2
 =NULL || b1->
¶í
 < 0 ||

1461 
b2
->
¶í
 < 0 || 
b1
->
mÀn
 < b1->¶í || b1->mÀ¿<0Ë 
BSTR_ERR
;

1464 i‡((
pd
 = (
±rdiff_t
Ë(
b2
->
d©a
 - 
b1
->d©a)Ë>0 &&Öd < (±rdiff_tËb1->
mÀn
) {

1465 i‡(
NULL
 =(
aux
 = 
	`b°r˝y
 (
b2
))Ë 
BSTR_ERR
;

1469 
d
 = 
b1
->
¶í
 + 
aux
->slen;

1470 
l
 = 
pos
 + 
aux
->
¶í
;

1471 i‡((
d
|
l
Ë< 0Ë 
BSTR_ERR
;

1473 i‡(
l
 > 
d
) {

1475 i‡(
	`bÆloc
 (
b1
, 
l
 + 1Ë!
BSTR_OK
) {

1476 i‡(
aux
 !
b2
Ë
	`bde°roy
 (aux);

1477  
BSTR_ERR
;

1479 
	`b°r__mem£t
 (
b1
->
d©a
 + b1->
¶í
, (Ë
fûl
, (
size_t
Ë(
pos
 - b1->slen));

1480 
b1
->
¶í
 = 
l
;

1483 i‡(
	`bÆloc
 (
b1
, 
d
 + 1Ë!
BSTR_OK
) {

1484 i‡(
aux
 !
b2
Ë
	`bde°roy
 (aux);

1485  
BSTR_ERR
;

1487 
	`bBlockC›y
 (
b1
->
d©a
 + 
l
, b1->d©®+ 
pos
, 
d
 -Ü);

1488 
b1
->
¶í
 = 
d
;

1490 
	`bBlockC›y
 (
b1
->
d©a
 + 
pos
, 
aux
->d©a,áux->
¶í
);

1491 
b1
->
d©a
[b1->
¶í
] = () '\0';

1492 i‡(
aux
 !
b2
Ë
	`bde°roy
 (aux);

1493  
BSTR_OK
;

1494 
	}
}

1502 
	$bª∂a˚
 (
b°rög
 
b1
, 
pos
, 
Àn
, 
c⁄°_b°rög
 
b2
,

1503 
fûl
) {

1504 
∂
, 
ªt
;

1505 
±rdiff_t
 
pd
;

1506 
b°rög
 
aux
 = (b°rögË
b2
;

1508 i‡(
pos
 < 0 || 
Àn
 < 0 || (
∂
 =Öo†+ÜíË< 0 || 
b1
 =
NULL
 ||

1509 
b2
 =
NULL
 || 
b1
->
d©a
 == NULL || b2->data == NULL ||

1510 
b1
->
¶í
 < 0 || 
b2
->¶í < 0 || b1->
mÀn
 < b1->slen ||

1511 
b1
->
mÀn
 <0Ë 
BSTR_ERR
;

1514 i‡(
∂
 >
b1
->
¶í
) {

1515 i‡((
ªt
 = 
	`b£t°r
 (
b1
, 
pos
, 
b2
, 
fûl
)) < 0) Ñet;

1516 i‡(
pos
 + 
b2
->
¶í
 < 
b1
->slen) {

1517 
b1
->
¶í
 = 
pos
 + 
b2
->slen;

1518 
b1
->
d©a
[b1->
¶í
] = () '\0';

1520  
ªt
;

1524 i‡((
pd
 = (
±rdiff_t
Ë(
b2
->
d©a
 - 
b1
->d©a)Ë>0 &&Öd < (±rdiff_tËb1->
¶í
) {

1525 i‡(
NULL
 =(
aux
 = 
	`b°r˝y
 (
b2
))Ë 
BSTR_ERR
;

1528 i‡(
aux
->
¶í
 > 
Àn
) {

1529 i‡(
	`bÆloc
 (
b1
, b1->
¶í
 + 
aux
->¶í - 
Àn
Ë!
BSTR_OK
) {

1530 i‡(
aux
 !
b2
Ë
	`bde°roy
 (aux);

1531  
BSTR_ERR
;

1535 i‡(
aux
->
¶í
 !
Àn
Ë
	`b°r__memmove
 (
b1
->
d©a
 + 
pos
 +áux->slen, b1->data +Öos +Üen, b1->slen - (pos +Üen));

1536 
	`b°r__mem˝y
 (
b1
->
d©a
 + 
pos
, 
aux
->d©a,áux->
¶í
);

1537 
b1
->
¶í
 +
aux
->¶í - 
Àn
;

1538 
b1
->
d©a
[b1->
¶í
] = () '\0';

1539 i‡(
aux
 !
b2
Ë
	`bde°roy
 (aux);

1540  
BSTR_OK
;

1541 
	}
}

1550 (*
	tö°r_‚±r
Ë(
	tc⁄°_b°rög
 
	ts1
, 
	tpos
, c⁄°_b°rög 
	ts2
);

1552 
	#INITIAL_STATIC_FIND_INDEX_COUNT
 32

	)

1554 
	$födª∂a˚ígöe
 (
b°rög
 
b
, 
c⁄°_b°rög
 
föd
, c⁄°_b°rög 
ª∂
, 
pos
, 
ö°r_‚±r
 
ö°r
) {

1555 
i
, 
ªt
, 
¶í
, 
mÀn
, 
dñè
, 
acc
;

1556 * 
d
;

1557 
°©ic_d
[
INITIAL_STATIC_FIND_INDEX_COUNT
+1];

1558 
±rdiff_t
 
pd
;

1559 
b°rög
 
auxf
 = (b°rögË
föd
;

1560 
b°rög
 
auxr
 = (b°rögË
ª∂
;

1562 i‡(
b
 =
NULL
 || b->
d©a
 =NULL || 
föd
 == NULL ||

1563 
föd
->
d©a
 =
NULL
 || 
ª∂
 == NULL ||Ñepl->data == NULL ||

1564 
pos
 < 0 || 
föd
->
¶í
 <0 || 
b
->
mÀn
 < 0 || b->slen > b->mlen ||

1565 
b
->
mÀn
 <0 || b->
¶í
 < 0 || 
ª∂
->¶í < 0Ë 
BSTR_ERR
;

1566 i‡(
pos
 > 
b
->
¶í
 - 
föd
->¶íË 
BSTR_OK
;

1569 
pd
 = (
±rdiff_t
Ë(
föd
->
d©a
 - 
b
->data);

1570 i‡((
±rdiff_t
Ë(
pos
 - 
föd
->
¶í
Ë< 
pd
 &&Öd < (±rdiff_tË
b
->slen) {

1571 i‡(
NULL
 =(
auxf
 = 
	`b°r˝y
 (
föd
))Ë 
BSTR_ERR
;

1575 
pd
 = (
±rdiff_t
Ë(
ª∂
->
d©a
 - 
b
->data);

1576 i‡((
±rdiff_t
Ë(
pos
 - 
ª∂
->
¶í
Ë< 
pd
 &&Öd < (±rdiff_tË
b
->slen) {

1577 i‡(
NULL
 =(
auxr
 = 
	`b°r˝y
 (
ª∂
))) {

1578 i‡(
auxf
 !
föd
Ë
	`bde°roy
 (auxf);

1579  
BSTR_ERR
;

1583 
dñè
 = 
auxf
->
¶í
 - 
auxr
->slen;

1587 i‡(
dñè
 == 0) {

1588 (
pos
 = 
	`ö°r
 (
b
,Öos, 
auxf
)) >= 0) {

1589 
	`b°r__mem˝y
 (
b
->
d©a
 + 
pos
, 
auxr
->d©a,áuxr->
¶í
);

1590 
pos
 +
auxf
->
¶í
;

1592 i‡(
auxf
 !
föd
Ë
	`bde°roy
 (auxf);

1593 i‡(
auxr
 !
ª∂
Ë
	`bde°roy
 (auxr);

1594  
BSTR_OK
;

1598 i‡(
dñè
 > 0) {

1599 
acc
 = 0;

1601 (
i
 = 
	`ö°r
 (
b
, 
pos
, 
auxf
)) >= 0) {

1602 i‡(
acc
 && 
i
 > 
pos
)

1603 
	`b°r__memmove
 (
b
->
d©a
 + 
pos
 - 
acc
, b->d©®+Öos, 
i
 -Öos);

1604 i‡(
auxr
->
¶í
)

1605 
	`b°r__mem˝y
 (
b
->
d©a
 + 
i
 - 
acc
, 
auxr
->d©a,áuxr->
¶í
);

1606 
acc
 +
dñè
;

1607 
pos
 = 
i
 + 
auxf
->
¶í
;

1610 i‡(
acc
) {

1611 
i
 = 
b
->
¶í
;

1612 i‡(
i
 > 
pos
)

1613 
	`b°r__memmove
 (
b
->
d©a
 + 
pos
 - 
acc
, b->d©®+Öos, 
i
 -Öos);

1614 
b
->
¶í
 -
acc
;

1615 
b
->
d©a
[b->
¶í
] = () '\0';

1618 i‡(
auxf
 !
föd
Ë
	`bde°roy
 (auxf);

1619 i‡(
auxr
 !
ª∂
Ë
	`bde°roy
 (auxr);

1620  
BSTR_OK
;

1637 
mÀn
 = 
INITIAL_STATIC_FIND_INDEX_COUNT
;

1638 
d
 = (*Ë
°©ic_d
;

1639 
acc
 = 
¶í
 = 0;

1641 (
pos
 = 
	`ö°r
 (
b
,Öos, 
auxf
)) >= 0) {

1642 i‡(
¶í
 >
mÀn
 - 1) {

1643 
¶
, *
t
;

1645 
mÀn
 += mlen;

1646 
¶
 =  (*Ë* 
mÀn
;

1647 i‡(
°©ic_d
 =
d
Ëd = 
NULL
;

1648 i‡(
mÀn
 <0 || 
¶
 < mÀ¿|| 
NULL
 =(
t
 = (*Ë
	`b°r__ªÆloc
 (
d
, sl))) {

1649 
ªt
 = 
BSTR_ERR
;

1650 
d⁄e
;

1652 i‡(
NULL
 =
d
Ë
	`b°r__mem˝y
 (
t
, 
°©ic_d
,  (static_d));

1653 
d
 = 
t
;

1655 
d
[
¶í
] = 
pos
;

1656 
¶í
++;

1657 
acc
 -
dñè
;

1658 
pos
 +
auxf
->
¶í
;

1659 i‡(
pos
 < 0 || 
acc
 < 0) {

1660 
ªt
 = 
BSTR_ERR
;

1661 
d⁄e
;

1666 
d
[
¶í
] = 
b
->slen;

1668 i‡(
BSTR_OK
 =(
ªt
 = 
	`bÆloc
 (
b
, b->
¶í
 + 
acc
 + 1))) {

1669 
b
->
¶í
 +
acc
;

1670 
i
 = 
¶í
-1; i >= 0; i--) {

1671 
s
, 
l
;

1672 
s
 = 
d
[
i
] + 
auxf
->
¶í
;

1673 
l
 = 
d
[
i
+1] - 
s
;

1674 i‡(
l
) {

1675 
	`b°r__memmove
 (
b
->
d©a
 + 
s
 + 
acc
, b->d©®+ s, 
l
);

1677 i‡(
auxr
->
¶í
) {

1678 
	`b°r__memmove
 (
b
->
d©a
 + 
s
 + 
acc
 - 
auxr
->
¶í
,

1679 
auxr
->
d©a
,áuxr->
¶í
);

1681 
acc
 +
dñè
;

1683 
b
->
d©a
[b->
¶í
] = () '\0';

1686 
d⁄e
:;

1687 i‡(
°©ic_d
 =
d
Ëd = 
NULL
;

1688 
	`b°r__‰ì
 (
d
);

1689 i‡(
auxf
 !
föd
Ë
	`bde°roy
 (auxf);

1690 i‡(
auxr
 !
ª∂
Ë
	`bde°roy
 (auxr);

1691  
ªt
;

1692 
	}
}

1700 
	$bfödª∂a˚
 (
b°rög
 
b
, 
c⁄°_b°rög
 
föd
, c⁄°_b°rög 
ª∂
, 
pos
) {

1701  
	`födª∂a˚ígöe
 (
b
, 
föd
, 
ª∂
, 
pos
, 
bö°r
);

1702 
	}
}

1710 
	$bfödª∂a˚ˇ£Àss
 (
b°rög
 
b
, 
c⁄°_b°rög
 
föd
, c⁄°_b°rög 
ª∂
, 
pos
) {

1711  
	`födª∂a˚ígöe
 (
b
, 
föd
, 
ª∂
, 
pos
, 
bö°rˇ£Àss
);

1712 
	}
}

1721 
	$bö£πch
 (
b°rög
 
b
, 
pos
, 
Àn
, 
fûl
) {

1722 
d
, 
l
, 
i
;

1724 i‡(
pos
 < 0 || 
b
 =
NULL
 || b->
¶í
 < 0 || b->
mÀn
 < b->slen ||

1725 
b
->
mÀn
 <0 || 
Àn
 < 0Ë 
BSTR_ERR
;

1728 
d
 = 
b
->
¶í
 + 
Àn
;

1729 
l
 = 
pos
 + 
Àn
;

1730 i‡((
d
|
l
Ë< 0Ë 
BSTR_ERR
;

1732 i‡(
l
 > 
d
) {

1734 i‡(
	`bÆloc
 (
b
, 
l
 + 1Ë!
BSTR_OK
Ë 
BSTR_ERR
;

1735 
pos
 = 
b
->
¶í
;

1736 
b
->
¶í
 = 
l
;

1739 i‡(
	`bÆloc
 (
b
, 
d
 + 1Ë!
BSTR_OK
Ë 
BSTR_ERR
;

1740 
i
 = 
d
 - 1; i >
l
; i--) {

1741 
b
->
d©a
[
i
] = b->d©a[ò- 
Àn
];

1743 
b
->
¶í
 = 
d
;

1746 
i
=
pos
; i < 
l
; i++Ë
b
->
d©a
[i] = 
fûl
;

1747 
b
->
d©a
[b->
¶í
] = () '\0';

1748  
BSTR_OK
;

1749 
	}
}

1758 
	$b∑âîn
 (
b°rög
 
b
, 
Àn
) {

1759 
i
, 
d
;

1761 
d
 = 
	`bÀngth
 (
b
);

1762 i‡(
d
 <0 || 
Àn
 < 0 || 
	`bÆloc
 (
b
,Üí + 1Ë!
BSTR_OK
Ë 
BSTR_ERR
;

1763 i‡(
Àn
 > 0) {

1764 i‡(
d
 =1Ë 
	`b£t°r
 (
b
, 
Àn
, 
NULL
, b->
d©a
[0]);

1765 
i
 = 
d
; i < 
Àn
; i++Ë
b
->
d©a
[i] = b->data[i - d];

1767 
b
->
d©a
[
Àn
] = () '\0';

1768 
b
->
¶í
 = 
Àn
;

1769  
BSTR_OK
;

1770 
	}
}

1772 
	#BS_BUFF_SZ
 (1024)

	)

1780 
	$bªada
 (
b°rög
 
b
, 
bNªad
 
ªadPå
, * 
∑rm
) {

1781 
i
, 
l
, 
n
;

1783 i‡(
b
 =
NULL
 || b->
mÀn
 <0 || b->
¶í
 < 0 || b->mlen < b->slen ||

1784 
b
->
mÀn
 <0 || 
ªadPå
 =
NULL
Ë 
BSTR_ERR
;

1786 
i
 = 
b
->
¶í
;

1787 
n
=
i
+16; ;Ç +(“ < 
BS_BUFF_SZ
) ?Ç : BS_BUFF_SZ)) {

1788 i‡(
BSTR_OK
 !
	`bÆloc
 (
b
, 
n
 + 1)Ë 
BSTR_ERR
;

1789 
l
 = (Ë
	`ªadPå
 ((*Ë(
b
->
d©a
 + 
i
), 1, 
n
 - i, 
∑rm
);

1790 
i
 +
l
;

1791 
b
->
¶í
 = 
i
;

1792 i‡(
i
 < 
n
) ;

1795 
b
->
d©a
[
i
] = () '\0';

1796  
BSTR_OK
;

1797 
	}
}

1805 
b°rög
 
	$bªad
 (
bNªad
 
ªadPå
, * 
∑rm
) {

1806 
b°rög
 
buff
;

1808 i‡(0 > 
	`bªada
 (
buff
 = 
	`b‰omc°r
 (""), 
ªadPå
, 
∑rm
)) {

1809 
	`bde°roy
 (
buff
);

1810  
NULL
;

1812  
buff
;

1813 
	}
}

1828 
	$bassigngës
 (
b°rög
 
b
, 
bNgëc
 
gëcPå
, * 
∑rm
, 
ãrmö©‹
) {

1829 
c
, 
d
, 
e
;

1831 i‡(
b
 =
NULL
 || b->
mÀn
 <0 || b->
¶í
 < 0 || b->mlen < b->slen ||

1832 
b
->
mÀn
 <0 || 
gëcPå
 =
NULL
Ë 
BSTR_ERR
;

1833 
d
 = 0;

1834 
e
 = 
b
->
mÀn
 - 2;

1836 (
c
 = 
	`gëcPå
 (
∑rm
)) >= 0) {

1837 i‡(
d
 > 
e
) {

1838 
b
->
¶í
 = 
d
;

1839 i‡(
	`bÆloc
 (
b
, 
d
 + 2Ë!
BSTR_OK
Ë 
BSTR_ERR
;

1840 
e
 = 
b
->
mÀn
 - 2;

1842 
b
->
d©a
[
d
] = (Ë
c
;

1843 
d
++;

1844 i‡(
c
 =
ãrmö©‹
) ;

1847 
b
->
d©a
[
d
] = () '\0';

1848 
b
->
¶í
 = 
d
;

1850  
d
 =0 && 
c
 < 0;

1851 
	}
}

1866 
	$bgëß
 (
b°rög
 
b
, 
bNgëc
 
gëcPå
, * 
∑rm
, 
ãrmö©‹
) {

1867 
c
, 
d
, 
e
;

1869 i‡(
b
 =
NULL
 || b->
mÀn
 <0 || b->
¶í
 < 0 || b->mlen < b->slen ||

1870 
b
->
mÀn
 <0 || 
gëcPå
 =
NULL
Ë 
BSTR_ERR
;

1871 
d
 = 
b
->
¶í
;

1872 
e
 = 
b
->
mÀn
 - 2;

1874 (
c
 = 
	`gëcPå
 (
∑rm
)) >= 0) {

1875 i‡(
d
 > 
e
) {

1876 
b
->
¶í
 = 
d
;

1877 i‡(
	`bÆloc
 (
b
, 
d
 + 2Ë!
BSTR_OK
Ë 
BSTR_ERR
;

1878 
e
 = 
b
->
mÀn
 - 2;

1880 
b
->
d©a
[
d
] = (Ë
c
;

1881 
d
++;

1882 i‡(
c
 =
ãrmö©‹
) ;

1885 
b
->
d©a
[
d
] = () '\0';

1886 
b
->
¶í
 = 
d
;

1888  
d
 =0 && 
c
 < 0;

1889 
	}
}

1902 
b°rög
 
	$bgës
 (
bNgëc
 
gëcPå
, * 
∑rm
, 
ãrmö©‹
) {

1903 
b°rög
 
buff
;

1905 i‡(0 > 
	`bgëß
 (
buff
 = 
	`b‰omc°r
 (""), 
gëcPå
, 
∑rm
, 
ãrmö©‹
Ë|| 0 >buff->
¶í
) {

1906 
	`bde°roy
 (
buff
);

1907 
buff
 = 
NULL
;

1909  
buff
;

1910 
	}
}

1912 
	sbSåóm
 {

1913 
b°rög
 
	mbuff
;

1914 * 
	m∑rm
;

1915 
bNªad
 
	mªadFnPå
;

1916 
	misEOF
;

1917 
	mmaxBuffSz
;

1926 
bSåóm
 * 
	$bs›í
 (
bNªad
 
ªadPå
, * 
∑rm
) {

1927 
bSåóm
 * 
s
;

1929 i‡(
ªadPå
 =
NULL
)  NULL;

1930 
s
 = (
bSåóm
 *Ë
	`b°r__Æloc
 ( (bStream));

1931 i‡(
s
 =
NULL
)  NULL;

1932 
s
->
∑rm
 =Öarm;

1933 
s
->
buff
 = 
	`b‰omc°r
 ("");

1934 
s
->
ªadFnPå
 = 
ªadPå
;

1935 
s
->
maxBuffSz
 = 
BS_BUFF_SZ
;

1936 
s
->
isEOF
 = 0;

1937  
s
;

1938 
	}
}

1945 
	$bsbufÊígth
 (
bSåóm
 * 
s
, 
sz
) {

1946 
ﬁdSz
;

1947 i‡(
s
 =
NULL
 || 
sz
 < 0Ë 
BSTR_ERR
;

1948 
ﬁdSz
 = 
s
->
maxBuffSz
;

1949 i‡(
sz
 > 0Ë
s
->
maxBuffSz
 = sz;

1950  
ﬁdSz
;

1951 
	}
}

1953 
	$b£of
 (c⁄° 
bSåóm
 * 
s
) {

1954 i‡(
s
 =
NULL
 || s->
ªadFnPå
 =NULLË 
BSTR_ERR
;

1955  
s
->
isEOF
 && (s->
buff
->
¶í
 == 0);

1956 
	}
}

1963 * 
	$bs˛o£
 (
bSåóm
 * 
s
) {

1964 * 
∑rm
;

1965 i‡(
s
 =
NULL
)  NULL;

1966 
s
->
ªadFnPå
 = 
NULL
;

1967 i‡(
s
->
buff
Ë
	`bde°roy
 (s->buff);

1968 
s
->
buff
 = 
NULL
;

1969 
∑rm
 = 
s
->parm;

1970 
s
->
∑rm
 = 
NULL
;

1971 
s
->
isEOF
 = 1;

1972 
	`b°r__‰ì
 (
s
);

1973  
∑rm
;

1974 
	}
}

1983 
	$b§ód a
 (
b°rög
 
r
, 
bSåóm
 * 
s
, 
ãrmö©‹
) {

1984 
i
, 
l
, 
ªt
, 
æo
;

1985 * 
b
;

1986 
ègb°rög
 
x
;

1988 i‡(
s
 =
NULL
 || s->
buff
 =NULL || 
r
 =NULL ||Ñ->
mÀn
 <= 0 ||

1989 
r
->
¶í
 < 0 ||Ñ->
mÀn
 <Ñ->¶íË 
BSTR_ERR
;

1990 
l
 = 
s
->
buff
->
¶í
;

1991 i‡(
BSTR_OK
 !
	`bÆloc
 (
s
->
buff
, s->
maxBuffSz
 + 1)Ë 
BSTR_ERR
;

1992 
b
 = (*Ë
s
->
buff
->
d©a
;

1993 
x
.
d©a
 = (*Ë
b
;

1996 
b
[
l
] = 
ãrmö©‹
;

1997 
i
=0; 
b
[i] !
ãrmö©‹
; i++) ;

1998 i‡(
i
 < 
l
) {

1999 
x
.
¶í
 = 
i
 + 1;

2000 
ªt
 = 
	`bc⁄ˇt
 (
r
, &
x
);

2001 
s
->
buff
->
¶í
 = 
l
;

2002 i‡(
BSTR_OK
 =
ªt
Ë
	`bdñëe
 (
s
->
buff
, 0, 
i
 + 1);

2003  
BSTR_OK
;

2006 
æo
 = 
r
->
¶í
;

2009 
x
.
¶í
 = 
l
;

2010 i‡(
BSTR_OK
 !
	`bc⁄ˇt
 (
r
, &
x
)Ë 
BSTR_ERR
;

2015 i‡(
BSTR_OK
 !
	`bÆloc
 (
r
,Ñ->
¶í
 + 
s
->
maxBuffSz
 + 1)Ë 
BSTR_ERR
;

2016 
b
 = (*Ë(
r
->
d©a
 +Ñ->
¶í
);

2017 
l
 = (Ë
s
->
	`ªadFnPå
 (
b
, 1, s->
maxBuffSz
, s->
∑rm
);

2018 i‡(
l
 <= 0) {

2019 
r
->
d©a
[r->
¶í
] = () '\0';

2020 
s
->
buff
->
¶í
 = 0;

2021 
s
->
isEOF
 = 1;

2023  
BSTR_ERR
 & -(
r
->
¶í
 =
æo
);

2025 
b
[
l
] = 
ãrmö©‹
;

2026 
i
=0; 
b
[i] !
ãrmö©‹
; i++) ;

2027 i‡(
i
 < 
l
) ;

2028 
r
->
¶í
 +
l
;

2032 
i
++;

2033 
r
->
¶í
 +
i
;

2034 
s
->
buff
->
¶í
 = 
l
 - 
i
;

2035 
	`b°r__mem˝y
 (
s
->
buff
->
d©a
, 
b
 + 
i
, 
l
 - i);

2036 
r
->
d©a
[r->
¶í
] = () '\0';

2037  
BSTR_OK
;

2038 
	}
}

2047 
	$b§ód ß
 (
b°rög
 
r
, 
bSåóm
 * 
s
, 
c⁄°_b°rög
 
ãrm
) {

2048 
i
, 
l
, 
ªt
, 
æo
;

2049 * 
b
;

2050 
ègb°rög
 
x
;

2051 
ch¨Fõld
 
cf
;

2053 i‡(
s
 =
NULL
 || s->
buff
 =NULL || 
r
 =NULL || 
ãrm
 == NULL ||

2054 
ãrm
->
d©a
 =
NULL
 || 
r
->
mÀn
 <0 ||Ñ->
¶í
 < 0 ||

2055 
r
->
mÀn
 <Ñ->
¶í
Ë 
BSTR_ERR
;

2056 i‡(
ãrm
->
¶í
 =1Ë 
	`b§ód a
 (
r
, 
s
,Åîm->
d©a
[0]);

2057 i‡(
ãrm
->
¶í
 < 1 || 
	`buûdCh¨Fõld
 (&
cf
,Åîm)Ë 
BSTR_ERR
;

2059 
l
 = 
s
->
buff
->
¶í
;

2060 i‡(
BSTR_OK
 !
	`bÆloc
 (
s
->
buff
, s->
maxBuffSz
 + 1)Ë 
BSTR_ERR
;

2061 
b
 = (*Ë
s
->
buff
->
d©a
;

2062 
x
.
d©a
 = 
b
;

2065 
b
[
l
] = 
ãrm
->
d©a
[0];

2066 
i
=0; !
	`ã°InCh¨Fõld
 (&
cf
, 
b
[i]); i++) ;

2067 i‡(
i
 < 
l
) {

2068 
x
.
¶í
 = 
i
 + 1;

2069 
ªt
 = 
	`bc⁄ˇt
 (
r
, &
x
);

2070 
s
->
buff
->
¶í
 = 
l
;

2071 i‡(
BSTR_OK
 =
ªt
Ë
	`bdñëe
 (
s
->
buff
, 0, 
i
 + 1);

2072  
BSTR_OK
;

2075 
æo
 = 
r
->
¶í
;

2078 
x
.
¶í
 = 
l
;

2079 i‡(
BSTR_OK
 !
	`bc⁄ˇt
 (
r
, &
x
)Ë 
BSTR_ERR
;

2084 i‡(
BSTR_OK
 !
	`bÆloc
 (
r
,Ñ->
¶í
 + 
s
->
maxBuffSz
 + 1)Ë 
BSTR_ERR
;

2085 
b
 = (*Ë(
r
->
d©a
 +Ñ->
¶í
);

2086 
l
 = (Ë
s
->
	`ªadFnPå
 (
b
, 1, s->
maxBuffSz
, s->
∑rm
);

2087 i‡(
l
 <= 0) {

2088 
r
->
d©a
[r->
¶í
] = () '\0';

2089 
s
->
buff
->
¶í
 = 0;

2090 
s
->
isEOF
 = 1;

2092  
BSTR_ERR
 & -(
r
->
¶í
 =
æo
);

2095 
b
[
l
] = 
ãrm
->
d©a
[0];

2096 
i
=0; !
	`ã°InCh¨Fõld
 (&
cf
, 
b
[i]); i++) ;

2097 i‡(
i
 < 
l
) ;

2098 
r
->
¶í
 +
l
;

2102 
i
++;

2103 
r
->
¶í
 +
i
;

2104 
s
->
buff
->
¶í
 = 
l
 - 
i
;

2105 
	`b°r__mem˝y
 (
s
->
buff
->
d©a
, 
b
 + 
i
, 
l
 - i);

2106 
r
->
d©a
[r->
¶í
] = () '\0';

2107  
BSTR_OK
;

2108 
	}
}

2118 
	$b§óda
 (
b°rög
 
r
, 
bSåóm
 * 
s
, 
n
) {

2119 
l
, 
ªt
, 
‹¶í
;

2120 * 
b
;

2121 
ègb°rög
 
x
;

2123 i‡(
s
 =
NULL
 || s->
buff
 =NULL || 
r
 =NULL ||Ñ->
mÀn
 <= 0

2124 || 
r
->
¶í
 < 0 ||Ñ->
mÀn
 <Ñ->¶í || 
n
 <0Ë 
BSTR_ERR
;

2126 
n
 +
r
->
¶í
;

2127 i‡(
n
 <0Ë 
BSTR_ERR
;

2129 
l
 = 
s
->
buff
->
¶í
;

2131 
‹¶í
 = 
r
->
¶í
;

2133 i‡(0 =
l
) {

2134 i‡(
s
->
isEOF
Ë 
BSTR_ERR
;

2135 i‡(
r
->
mÀn
 > 
n
) {

2136 
l
 = (Ë
s
->
	`ªadFnPå
 (
r
->
d©a
 +Ñ->
¶í
, 1, 
n
 -Ñ->¶í, s->
∑rm
);

2137 i‡(0 >
l
 ||Ü > 
n
 - 
r
->
¶í
) {

2138 
s
->
isEOF
 = 1;

2139  
BSTR_ERR
;

2141 
r
->
¶í
 +
l
;

2142 
r
->
d©a
[r->
¶í
] = () '\0';

2147 i‡(
BSTR_OK
 !
	`bÆloc
 (
s
->
buff
, s->
maxBuffSz
 + 1)Ë 
BSTR_ERR
;

2148 
b
 = (*Ë
s
->
buff
->
d©a
;

2149 
x
.
d©a
 = (*Ë
b
;

2152 i‡(
l
 + 
r
->
¶í
 >
n
) {

2153 
x
.
¶í
 = 
n
 - 
r
->slen;

2154 
ªt
 = 
	`bc⁄ˇt
 (
r
, &
x
);

2155 
s
->
buff
->
¶í
 = 
l
;

2156 i‡(
BSTR_OK
 =
ªt
Ë
	`bdñëe
 (
s
->
buff
, 0, 
x
.
¶í
);

2157  
BSTR_ERR
 & -(
r
->
¶í
 =
‹¶í
);

2160 
x
.
¶í
 = 
l
;

2161 i‡(
BSTR_OK
 !
	`bc⁄ˇt
 (
r
, &
x
)) ;

2163 
l
 = 
n
 - 
r
->
¶í
;

2164 i‡(
l
 > 
s
->
maxBuffSz
)Ü = s->maxBuffSz;

2166 
l
 = (Ë
s
->
	`ªadFnPå
 (
b
, 1,Ü, s->
∑rm
);

2168 } 
l
 > 0);

2169 i‡(
l
 < 0)Ü = 0;

2170 i‡(
l
 =0Ë
s
->
isEOF
 = 1;

2171 
s
->
buff
->
¶í
 = 
l
;

2172  
BSTR_ERR
 & -(
r
->
¶í
 =
‹¶í
);

2173 
	}
}

2182 
	$b§ód 
 (
b°rög
 
r
, 
bSåóm
 * 
s
, 
ãrmö©‹
) {

2183 i‡(
s
 =
NULL
 || s->
buff
 =NULL || 
r
 =NULL ||Ñ->
mÀn
 <= 0)

2184  
BSTR_ERR
;

2185 i‡(
BSTR_OK
 !
	`bÆloc
 (
s
->
buff
, s->
maxBuffSz
 + 1)Ë 
BSTR_ERR
;

2186 
r
->
¶í
 = 0;

2187  
	`b§ód a
 (
r
, 
s
, 
ãrmö©‹
);

2188 
	}
}

2197 
	$b§ód s
 (
b°rög
 
r
, 
bSåóm
 * 
s
, 
c⁄°_b°rög
 
ãrm
) {

2198 i‡(
s
 =
NULL
 || s->
buff
 =NULL || 
r
 =NULL || 
ãrm
 == NULL

2199 || 
ãrm
->
d©a
 =
NULL
 || 
r
->
mÀn
 <0Ë 
BSTR_ERR
;

2200 i‡(
ãrm
->
¶í
 =1Ë 
	`b§ód 
 (
r
, 
s
,Åîm->
d©a
[0]);

2201 i‡(
ãrm
->
¶í
 < 1Ë 
BSTR_ERR
;

2202 i‡(
BSTR_OK
 !
	`bÆloc
 (
s
->
buff
, s->
maxBuffSz
 + 1)Ë 
BSTR_ERR
;

2203 
r
->
¶í
 = 0;

2204  
	`b§ód ß
 (
r
, 
s
, 
ãrm
);

2205 
	}
}

2215 
	$b§ód
 (
b°rög
 
r
, 
bSåóm
 * 
s
, 
n
) {

2216 i‡(
s
 =
NULL
 || s->
buff
 =NULL || 
r
 =NULL ||Ñ->
mÀn
 <= 0

2217 || 
n
 <0Ë 
BSTR_ERR
;

2218 i‡(
BSTR_OK
 !
	`bÆloc
 (
s
->
buff
, s->
maxBuffSz
 + 1)Ë 
BSTR_ERR
;

2219 
r
->
¶í
 = 0;

2220  
	`b§óda
 (
r
, 
s
, 
n
);

2221 
	}
}

2229 
	$bsuƒód
 (
bSåóm
 * 
s
, 
c⁄°_b°rög
 
b
) {

2230 i‡(
s
 =
NULL
 || s->
buff
 =NULLË 
BSTR_ERR
;

2231  
	`bö£π
 (
s
->
buff
, 0, 
b
, () '?');

2232 
	}
}

2239 
	$b•ìk
 (
b°rög
 
r
, c⁄° 
bSåóm
 * 
s
) {

2240 i‡(
s
 =
NULL
 || s->
buff
 =NULLË 
BSTR_ERR
;

2241  
	`bassign
 (
r
, 
s
->
buff
);

2242 
	}
}

2250 
b°rög
 
	$bjoö
 (c⁄° 
b°rLi°
 * 
bl
, 
c⁄°_b°rög
 
£p
) {

2251 
b°rög
 
b
;

2252 
i
, 
c
, 
v
;

2254 i‡(
bl
 =
NULL
 || bl->
qty
 < 0)  NULL;

2255 i‡(
£p
 !
NULL
 && (£p->
¶í
 < 0 || sï->
d©a
 == NULL))  NULL;

2257 
i
 = 0, 
c
 = 1; i < 
bl
->
qty
; i++) {

2258 
v
 = 
bl
->
íåy
[
i
]->
¶í
;

2259 i‡(
v
 < 0Ë 
NULL
;

2260 
c
 +
v
;

2261 i‡(
c
 < 0Ë 
NULL
;

2264 i‡(
£p
 !
NULL
Ë
c
 +(
bl
->
qty
 - 1Ë* sï->
¶í
;

2266 
b
 = (
b°rög
Ë
	`b°r__Æloc
 ( (
ègb°rög
));

2267 i‡(
NULL
 =
b
)  NULL;

2268 
b
->
d©a
 = (*Ë
	`b°r__Æloc
 (
c
);

2269 i‡(
b
->
d©a
 =
NULL
) {

2270 
	`b°r__‰ì
 (
b
);

2271  
NULL
;

2274 
b
->
mÀn
 = 
c
;

2275 
b
->
¶í
 = 
c
-1;

2277 
i
 = 0, 
c
 = 0; i < 
bl
->
qty
; i++) {

2278 i‡(
i
 > 0 && 
£p
 !
NULL
) {

2279 
	`b°r__mem˝y
 (
b
->
d©a
 + 
c
, 
£p
->d©a, sï->
¶í
);

2280 
c
 +
£p
->
¶í
;

2282 
v
 = 
bl
->
íåy
[
i
]->
¶í
;

2283 
	`b°r__mem˝y
 (
b
->
d©a
 + 
c
, 
bl
->
íåy
[
i
]->d©a, 
v
);

2284 
c
 +
v
;

2286 
b
->
d©a
[
c
] = () '\0';

2287  
b
;

2288 
	}
}

2290 
	#BSSSC_BUFF_LEN
 (256)

	)

2309 
bs•lôscb
 (
bSåóm
 * 
s
, 
c⁄°_b°rög
 
•lôSå
,

2310 (* 
cb
Ë(* 
∑rm
, 
ofs
, 
c⁄°_b°rög
 
íåy
), *Öarm) {

2311 
ch¨Fõld
 
chrs
;

2312 
b°rög
 
buff
;

2313 
i
, 
p
, 
ªt
;

2315 i‡(
cb
 =
NULL
 || 
s
 =NULL || s->
ªadFnPå
 == NULL

2316 || 
•lôSå
 =
NULL
 || s∂ôSå->
¶í
 < 0Ë 
BSTR_ERR
;

2318 i‡(
NULL
 =(
buff
 = 
	`b‰omc°r
 (""))Ë 
BSTR_ERR
;

2320 i‡(
•lôSå
->
¶í
 == 0) {

2321 
	`b§óda
 (
buff
, 
s
, 
BSSSC_BUFF_LEN
) >= 0) ;

2322 i‡((
ªt
 = 
	`cb
 (
∑rm
, 0, 
buff
)) > 0)

2323 
ªt
 = 0;

2325 
	`buûdCh¨Fõld
 (&
chrs
, 
•lôSå
);

2326 
ªt
 = 
p
 = 
i
 = 0;

2328 i‡(
i
 >
buff
->
¶í
) {

2329 
	`b§óda
 (
buff
, 
s
, 
BSSSC_BUFF_LEN
);

2330 i‡(
i
 >
buff
->
¶í
) {

2331 i‡(0 < (
ªt
 = 
	`cb
 (
∑rm
, 
p
, 
buff
)))Ñet = 0;

2335 i‡(
	`ã°InCh¨Fõld
 (&
chrs
, 
buff
->
d©a
[
i
])) {

2336 
ègb°rög
 
t
;

2337 
c
;

2339 
	`blk2tb°r
 (
t
, 
buff
->
d©a
 + 
i
 + 1, buff->
¶í
 - (i + 1));

2340 i‡((
ªt
 = 
	`bsuƒód
 (
s
, &
t
)) < 0) ;

2341 
buff
->
¶í
 = 
i
;

2342 
c
 = 
buff
->
d©a
[
i
];

2343 
buff
->
d©a
[
i
] = () '\0';

2344 i‡((
ªt
 = 
	`cb
 (
∑rm
, 
p
, 
buff
)) < 0) ;

2345 
buff
->
d©a
[
i
] = 
c
;

2346 
buff
->
¶í
 = 0;

2347 
p
 +
i
 + 1;

2348 
i
 = -1;

2350 
i
++;

2354 
	`bde°roy
 (
buff
);

2355  
ªt
;

2356 
	}
}

2375 
bs•lô°rcb
 (
bSåóm
 * 
s
, 
c⁄°_b°rög
 
•lôSå
,

2376 (* 
cb
Ë(* 
∑rm
, 
ofs
, 
c⁄°_b°rög
 
íåy
), *Öarm) {

2377 
b°rög
 
buff
;

2378 
i
, 
p
, 
ªt
;

2380 i‡(
cb
 =
NULL
 || 
s
 =NULL || s->
ªadFnPå
 == NULL

2381 || 
•lôSå
 =
NULL
 || s∂ôSå->
¶í
 < 0Ë 
BSTR_ERR
;

2383 i‡(
•lôSå
->
¶í
 =1Ë 
	`bs•lôscb
 (
s
, s∂ôSå, 
cb
, 
∑rm
);

2385 i‡(
NULL
 =(
buff
 = 
	`b‰omc°r
 (""))Ë 
BSTR_ERR
;

2387 i‡(
•lôSå
->
¶í
 == 0) {

2388 
i
=0; 
	`b§óda
 (
buff
, 
s
, 
BSSSC_BUFF_LEN
) >= 0; i++) {

2389 i‡((
ªt
 = 
	`cb
 (
∑rm
, 0, 
buff
)) < 0) {

2390 
	`bde°roy
 (
buff
);

2391  
ªt
;

2393 
buff
->
¶í
 = 0;

2395  
BSTR_OK
;

2397 
ªt
 = 
p
 = 
i
 = 0;

2398 
i
=
p
=0;;) {

2399 i‡((
ªt
 = 
	`bö°r
 (
buff
, 0, 
•lôSå
)) >= 0) {

2400 
ègb°rög
 
t
;

2401 
	`blk2tb°r
 (
t
, 
buff
->
d©a
, 
ªt
);

2402 
i
 = 
ªt
 + 
•lôSå
->
¶í
;

2403 i‡((
ªt
 = 
	`cb
 (
∑rm
, 
p
, &
t
)) < 0) ;

2404 
p
 +
i
;

2405 
	`bdñëe
 (
buff
, 0, 
i
);

2407 
	`b§óda
 (
buff
, 
s
, 
BSSSC_BUFF_LEN
);

2408 i‡(
	`b£of
 (
s
)) {

2409 i‡((
ªt
 = 
	`cb
 (
∑rm
, 
p
, 
buff
)) > 0)Ñet = 0;

2416 
	`bde°roy
 (
buff
);

2417  
ªt
;

2418 
	}
}

2424 
b°rLi°
 * 
	$b°rLi°Cª©e
 () {

2425 
b°rLi°
 * 
¶
 = (b°rLi° *Ë
	`b°r__Æloc
 ( (bstrList));

2426 i‡(
¶
) {

2427 
¶
->
íåy
 = (
b°rög
 *Ë
	`b°r__Æloc
 (1* (bstring));

2428 i‡(!
¶
->
íåy
) {

2429 
	`b°r__‰ì
 (
¶
);

2430 
¶
 = 
NULL
;

2432 
¶
->
qty
 = 0;

2433 
¶
->
mÀn
 = 1;

2436  
¶
;

2437 
	}
}

2443 
	$b°rLi°De°roy
 (
b°rLi°
 * 
¶
) {

2444 
i
;

2445 i‡(
¶
 =
NULL
 || sl->
qty
 < 0Ë 
BSTR_ERR
;

2446 
i
=0; i < 
¶
->
qty
; i++) {

2447 i‡(
¶
->
íåy
[
i
]) {

2448 
	`bde°roy
 (
¶
->
íåy
[
i
]);

2449 
¶
->
íåy
[
i
] = 
NULL
;

2452 
¶
->
qty
 = -1;

2453 
¶
->
mÀn
 = -1;

2454 
	`b°r__‰ì
 (
¶
->
íåy
);

2455 
¶
->
íåy
 = 
NULL
;

2456 
	`b°r__‰ì
 (
¶
);

2457  
BSTR_OK
;

2458 
	}
}

2465 
	$b°rLi°AŒoc
 (
b°rLi°
 * 
¶
, 
msz
) {

2466 
b°rög
 * 
l
;

2467 
smsz
;

2468 
size_t
 
nsz
;

2469 i‡(!
¶
 || 
msz
 <0 || !¶->
íåy
 || sl->
qty
 < 0 || sl->
mÀn
 <0 || sl->qty > sl->mÀnË 
BSTR_ERR
;

2470 i‡(
¶
->
mÀn
 >
msz
Ë 
BSTR_OK
;

2471 
smsz
 = 
	`¢≠UpSize
 (
msz
);

2472 
nsz
 = ((
size_t
Ë
smsz
Ë*  (
b°rög
);

2473 i‡(
nsz
 < (
size_t
Ë
smsz
Ë 
BSTR_ERR
;

2474 
l
 = (
b°rög
 *Ë
	`b°r__ªÆloc
 (
¶
->
íåy
, 
nsz
);

2475 i‡(!
l
) {

2476 
smsz
 = 
msz
;

2477 
nsz
 = ((
size_t
Ë
smsz
Ë*  (
b°rög
);

2478 
l
 = (
b°rög
 *Ë
	`b°r__ªÆloc
 (
¶
->
íåy
, 
nsz
);

2479 i‡(!
l
Ë 
BSTR_ERR
;

2481 
¶
->
mÀn
 = 
smsz
;

2482 
¶
->
íåy
 = 
l
;

2483  
BSTR_OK
;

2484 
	}
}

2491 
	$b°rLi°AŒocMö
 (
b°rLi°
 * 
¶
, 
msz
) {

2492 
b°rög
 * 
l
;

2493 
size_t
 
nsz
;

2494 i‡(!
¶
 || 
msz
 <0 || !¶->
íåy
 || sl->
qty
 < 0 || sl->
mÀn
 <0 || sl->qty > sl->mÀnË 
BSTR_ERR
;

2495 i‡(
msz
 < 
¶
->
qty
) msz = sl->qty;

2496 i‡(
¶
->
mÀn
 =
msz
Ë 
BSTR_OK
;

2497 
nsz
 = ((
size_t
Ë
msz
Ë*  (
b°rög
);

2498 i‡(
nsz
 < (
size_t
Ë
msz
Ë 
BSTR_ERR
;

2499 
l
 = (
b°rög
 *Ë
	`b°r__ªÆloc
 (
¶
->
íåy
, 
nsz
);

2500 i‡(!
l
Ë 
BSTR_ERR
;

2501 
¶
->
mÀn
 = 
msz
;

2502 
¶
->
íåy
 = 
l
;

2503  
BSTR_OK
;

2504 
	}
}

2521 
b•lôcb
 (
c⁄°_b°rög
 
°r
, 
•lôCh¨
, 
pos
,

2522 (* 
cb
Ë(* 
∑rm
, 
ofs
, 
Àn
), *Öarm) {

2523 
i
, 
p
, 
ªt
;

2525 i‡(
cb
 =
NULL
 || 
°r
 =NULL || 
pos
 < 0 ||Öo†> så->
¶í
)

2526  
BSTR_ERR
;

2528 
p
 = 
pos
;

2530 
i
=
p
; i < 
°r
->
¶í
; i++) {

2531 i‡(
°r
->
d©a
[
i
] =
•lôCh¨
) ;

2533 i‡((
ªt
 = 
	`cb
 (
∑rm
, 
p
, 
i
 -Ö)) < 0) Ñet;

2534 
p
 = 
i
 + 1;

2535 } 
p
 <
°r
->
¶í
);

2536  
BSTR_OK
;

2537 
	}
}

2555 
b•lôscb
 (
c⁄°_b°rög
 
°r
, c⁄°_b°rög 
•lôSå
, 
pos
,

2556 (* 
cb
Ë(* 
∑rm
, 
ofs
, 
Àn
), *Öarm) {

2557 
ch¨Fõld
 
chrs
;

2558 
i
, 
p
, 
ªt
;

2560 i‡(
cb
 =
NULL
 || 
°r
 =NULL || 
pos
 < 0 ||Öo†> så->
¶í


2561 || 
•lôSå
 =
NULL
 || s∂ôSå->
¶í
 < 0Ë 
BSTR_ERR
;

2562 i‡(
•lôSå
->
¶í
 == 0) {

2563 i‡((
ªt
 = 
	`cb
 (
∑rm
, 0, 
°r
->
¶í
)) > 0)Ñet = 0;

2564  
ªt
;

2567 i‡(
•lôSå
->
¶í
 == 1)

2568  
	`b•lôcb
 (
°r
, 
•lôSå
->
d©a
[0], 
pos
, 
cb
, 
∑rm
);

2570 
	`buûdCh¨Fõld
 (&
chrs
, 
•lôSå
);

2572 
p
 = 
pos
;

2574 
i
=
p
; i < 
°r
->
¶í
; i++) {

2575 i‡(
	`ã°InCh¨Fõld
 (&
chrs
, 
°r
->
d©a
[
i
])) ;

2577 i‡((
ªt
 = 
	`cb
 (
∑rm
, 
p
, 
i
 -Ö)) < 0) Ñet;

2578 
p
 = 
i
 + 1;

2579 } 
p
 <
°r
->
¶í
);

2580  
BSTR_OK
;

2581 
	}
}

2599 
b•lô°rcb
 (
c⁄°_b°rög
 
°r
, c⁄°_b°rög 
•lôSå
, 
pos
,

2600 (* 
cb
Ë(* 
∑rm
, 
ofs
, 
Àn
), *Öarm) {

2601 
i
, 
p
, 
ªt
;

2603 i‡(
cb
 =
NULL
 || 
°r
 =NULL || 
pos
 < 0 ||Öo†> så->
¶í


2604 || 
•lôSå
 =
NULL
 || s∂ôSå->
¶í
 < 0Ë 
BSTR_ERR
;

2606 i‡(0 =
•lôSå
->
¶í
) {

2607 
i
=
pos
; i < 
°r
->
¶í
; i++) {

2608 i‡((
ªt
 = 
	`cb
 (
∑rm
, 
i
, 1)) < 0) Ñet;

2610  
BSTR_OK
;

2613 i‡(
•lôSå
->
¶í
 == 1)

2614  
	`b•lôcb
 (
°r
, 
•lôSå
->
d©a
[0], 
pos
, 
cb
, 
∑rm
);

2616 
i
=
p
=
pos
; i <
°r
->
¶í
 - 
•lôSå
->slen; i++) {

2617 i‡(0 =
	`b°r__memcmp
 (
•lôSå
->
d©a
, 
°r
->d©®+ 
i
, s∂ôSå->
¶í
)) {

2618 i‡((
ªt
 = 
	`cb
 (
∑rm
, 
p
, 
i
 -Ö)) < 0) Ñet;

2619 
i
 +
•lôSå
->
¶í
;

2620 
p
 = 
i
;

2623 i‡((
ªt
 = 
	`cb
 (
∑rm
, 
p
, 
°r
->
¶í
 -Ö)) < 0) Ñet;

2624  
BSTR_OK
;

2625 
	}
}

2627 
	sgíB°rLi°
 {

2628 
b°rög
 
	mb
;

2629 
b°rLi°
 * 
	mbl
;

2632 
	$bscb
 (* 
∑rm
, 
ofs
, 
Àn
) {

2633 
gíB°rLi°
 * 
g
 = (gíB°rLi° *Ë
∑rm
;

2634 i‡(
g
->
bl
->
qty
 >g->bl->
mÀn
) {

2635 
mÀn
 = 
g
->
bl
->mlen * 2;

2636 
b°rög
 * 
tbl
;

2638 
g
->
bl
->
qty
 >
mÀn
) {

2639 i‡(
mÀn
 < 
g
->
bl
->mÀnË 
BSTR_ERR
;

2640 
mÀn
 += mlen;

2643 
tbl
 = (
b°rög
 *Ë
	`b°r__ªÆloc
 (
g
->
bl
->
íåy
,  (b°rögË* 
mÀn
);

2644 i‡(
tbl
 =
NULL
Ë 
BSTR_ERR
;

2646 
g
->
bl
->
íåy
 = 
tbl
;

2647 
g
->
bl
->
mÀn
 = mlen;

2650 
g
->
bl
->
íåy
[g->bl->
qty
] = 
	`bmid°r
 (g->
b
, 
ofs
, 
Àn
);

2651 
g
->
bl
->
qty
++;

2652  
BSTR_OK
;

2653 
	}
}

2660 
b°rLi°
 * 
	$b•lô
 (
c⁄°_b°rög
 
°r
, 
•lôCh¨
) {

2661 
gíB°rLi°
 
g
;

2663 i‡(
°r
 =
NULL
 || så->
d©a
 =NULL || så->
¶í
 < 0)  NULL;

2665 
g
.
bl
 = (
b°rLi°
 *Ë
	`b°r__Æloc
 ( (bstrList));

2666 i‡(
g
.
bl
 =
NULL
)  NULL;

2667 
g
.
bl
->
mÀn
 = 4;

2668 
g
.
bl
->
íåy
 = (
b°rög
 *Ë
	`b°r__Æloc
 (g.bl->
mÀn
 *  (bstring));

2669 i‡(
NULL
 =
g
.
bl
->
íåy
) {

2670 
	`b°r__‰ì
 (
g
.
bl
);

2671  
NULL
;

2674 
g
.
b
 = (
b°rög
Ë
°r
;

2675 
g
.
bl
->
qty
 = 0;

2676 i‡(
	`b•lôcb
 (
°r
, 
•lôCh¨
, 0, 
bscb
, &
g
) < 0) {

2677 
	`b°rLi°De°roy
 (
g
.
bl
);

2678  
NULL
;

2680  
g
.
bl
;

2681 
	}
}

2688 
b°rLi°
 * 
	$b•lô°r
 (
c⁄°_b°rög
 
°r
, c⁄°_b°rög 
•lôSå
) {

2689 
gíB°rLi°
 
g
;

2691 i‡(
°r
 =
NULL
 || så->
d©a
 =NULL || så->
¶í
 < 0)  NULL;

2693 
g
.
bl
 = (
b°rLi°
 *Ë
	`b°r__Æloc
 ( (bstrList));

2694 i‡(
g
.
bl
 =
NULL
)  NULL;

2695 
g
.
bl
->
mÀn
 = 4;

2696 
g
.
bl
->
íåy
 = (
b°rög
 *Ë
	`b°r__Æloc
 (g.bl->
mÀn
 *  (bstring));

2697 i‡(
NULL
 =
g
.
bl
->
íåy
) {

2698 
	`b°r__‰ì
 (
g
.
bl
);

2699  
NULL
;

2702 
g
.
b
 = (
b°rög
Ë
°r
;

2703 
g
.
bl
->
qty
 = 0;

2704 i‡(
	`b•lô°rcb
 (
°r
, 
•lôSå
, 0, 
bscb
, &
g
) < 0) {

2705 
	`b°rLi°De°roy
 (
g
.
bl
);

2706  
NULL
;

2708  
g
.
bl
;

2709 
	}
}

2717 
b°rLi°
 * 
	$b•lôs
 (
c⁄°_b°rög
 
°r
, c⁄°_b°rög 
•lôSå
) {

2718 
gíB°rLi°
 
g
;

2720 i‡–
°r
 =
NULL
 || så->
¶í
 < 0 || så->
d©a
 == NULL ||

2721 
•lôSå
 =
NULL
 || s∂ôSå->
¶í
 < 0 || s∂ôSå->
d©a
 == NULL)

2722  
NULL
;

2724 
g
.
bl
 = (
b°rLi°
 *Ë
	`b°r__Æloc
 ( (bstrList));

2725 i‡(
g
.
bl
 =
NULL
)  NULL;

2726 
g
.
bl
->
mÀn
 = 4;

2727 
g
.
bl
->
íåy
 = (
b°rög
 *Ë
	`b°r__Æloc
 (g.bl->
mÀn
 *  (bstring));

2728 i‡(
NULL
 =
g
.
bl
->
íåy
) {

2729 
	`b°r__‰ì
 (
g
.
bl
);

2730  
NULL
;

2732 
g
.
b
 = (
b°rög
Ë
°r
;

2733 
g
.
bl
->
qty
 = 0;

2735 i‡(
	`b•lôscb
 (
°r
, 
•lôSå
, 0, 
bscb
, &
g
) < 0) {

2736 
	`b°rLi°De°roy
 (
g
.
bl
);

2737  
NULL
;

2739  
g
.
bl
;

2740 
	}
}

2742 #i‡
deföed
 (
__TURBOC__
Ë&& !deföed (
__BORLANDC__
)

2743 #i‚de‡
BSTRLIB_NOVSNP


2744 
	#BSTRLIB_NOVSNP


	)

2749 #i‡
deföed
(
__WATCOMC__
Ë|| deföed(
_MSC_VER
)

2750 
	#exv¢¥ötf
(
r
,
b
,
n
,
f
,
a
Ë{∏
	`_v¢¥ötf
 (b,n,f,a);}

	)

2752 #ifde‡
BSTRLIB_NOVSNP


2755 
	#exv¢¥ötf
(
r
,
b
,
n
,
f
,
a
Ë{
	`v•rötf
 (b,f,a);Ñ = -1;}

	)

2756 
	#START_VSNBUFF
 (256)

	)

2759 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__APPLE__
)

2762 
v¢¥ötf
 (*
buf
, 
size_t
 
cou¡
, c⁄° *
f‹m©
, 
va_li°
 
¨g
);

2765 
	#exv¢¥ötf
(
r
,
b
,
n
,
f
,
a
Ë{∏
	`v¢¥ötf
 (b,n,f,a);}

	)

2769 #i‡!
deföed
 (
BSTRLIB_NOVSNP
)

2771 #i‚de‡
START_VSNBUFF


2772 
	#START_VSNBUFF
 (16)

	)

2790 
	$bf‹m©a
 (
b°rög
 
b
, c⁄° * 
fmt
, ...) {

2791 
va_li°
 
¨gli°
;

2792 
b°rög
 
buff
;

2793 
n
, 
r
;

2795 i‡(
b
 =
NULL
 || 
fmt
 =NULL || b->
d©a
 =NULL || b->
mÀn
 <= 0

2796 || 
b
->
¶í
 < 0 || b->¶í > b->
mÀn
Ë 
BSTR_ERR
;

2802 i‡((
n
 = (Ë(2*
	`°æí
 (
fmt
))Ë< 
START_VSNBUFF
)Ç = START_VSNBUFF;

2803 i‡(
NULL
 =(
buff
 = 
	`b‰omc°øŒoc
 (
n
 + 2, ""))) {

2804 
n
 = 1;

2805 i‡(
NULL
 =(
buff
 = 
	`b‰omc°øŒoc
 (
n
 + 2, ""))Ë 
BSTR_ERR
;

2809 
	`va_°¨t
 (
¨gli°
, 
fmt
);

2810 
	`exv¢¥ötf
 (
r
, (*Ë
buff
->
d©a
, 
n
 + 1, 
fmt
, 
¨gli°
);

2811 
	`va_íd
 (
¨gli°
);

2813 
buff
->
d©a
[
n
] = () '\0';

2814 
buff
->
¶í
 = (Ë(
°æí
Ë((*Ëbuff->
d©a
);

2816 i‡(
buff
->
¶í
 < 
n
) ;

2818 i‡(
r
 > 
n
)Ç =Ñ; n +=Ç;

2820 i‡(
BSTR_OK
 !
	`bÆloc
 (
buff
, 
n
 + 2)) {

2821 
	`bde°roy
 (
buff
);

2822  
BSTR_ERR
;

2826 
r
 = 
	`bc⁄ˇt
 (
b
, 
buff
);

2827 
	`bde°roy
 (
buff
);

2828  
r
;

2829 
	}
}

2838 
	$bassignf‹m©
 (
b°rög
 
b
, c⁄° * 
fmt
, ...) {

2839 
va_li°
 
¨gli°
;

2840 
b°rög
 
buff
;

2841 
n
, 
r
;

2843 i‡(
b
 =
NULL
 || 
fmt
 =NULL || b->
d©a
 =NULL || b->
mÀn
 <= 0

2844 || 
b
->
¶í
 < 0 || b->¶í > b->
mÀn
Ë 
BSTR_ERR
;

2850 i‡((
n
 = (Ë(2*
	`°æí
 (
fmt
))Ë< 
START_VSNBUFF
)Ç = START_VSNBUFF;

2851 i‡(
NULL
 =(
buff
 = 
	`b‰omc°øŒoc
 (
n
 + 2, ""))) {

2852 
n
 = 1;

2853 i‡(
NULL
 =(
buff
 = 
	`b‰omc°øŒoc
 (
n
 + 2, ""))Ë 
BSTR_ERR
;

2857 
	`va_°¨t
 (
¨gli°
, 
fmt
);

2858 
	`exv¢¥ötf
 (
r
, (*Ë
buff
->
d©a
, 
n
 + 1, 
fmt
, 
¨gli°
);

2859 
	`va_íd
 (
¨gli°
);

2861 
buff
->
d©a
[
n
] = () '\0';

2862 
buff
->
¶í
 = (Ë(
°æí
Ë((*Ëbuff->
d©a
);

2864 i‡(
buff
->
¶í
 < 
n
) ;

2866 i‡(
r
 > 
n
)Ç =Ñ; n +=Ç;

2868 i‡(
BSTR_OK
 !
	`bÆloc
 (
buff
, 
n
 + 2)) {

2869 
	`bde°roy
 (
buff
);

2870  
BSTR_ERR
;

2874 
r
 = 
	`bassign
 (
b
, 
buff
);

2875 
	`bde°roy
 (
buff
);

2876  
r
;

2877 
	}
}

2886 
b°rög
 
	$bf‹m©
 (c⁄° * 
fmt
, ...) {

2887 
va_li°
 
¨gli°
;

2888 
b°rög
 
buff
;

2889 
n
, 
r
;

2891 i‡(
fmt
 =
NULL
)  NULL;

2897 i‡((
n
 = (Ë(2*
	`°æí
 (
fmt
))Ë< 
START_VSNBUFF
)Ç = START_VSNBUFF;

2898 i‡(
NULL
 =(
buff
 = 
	`b‰omc°øŒoc
 (
n
 + 2, ""))) {

2899 
n
 = 1;

2900 i‡(
NULL
 =(
buff
 = 
	`b‰omc°øŒoc
 (
n
 + 2, "")))  NULL;

2904 
	`va_°¨t
 (
¨gli°
, 
fmt
);

2905 
	`exv¢¥ötf
 (
r
, (*Ë
buff
->
d©a
, 
n
 + 1, 
fmt
, 
¨gli°
);

2906 
	`va_íd
 (
¨gli°
);

2908 
buff
->
d©a
[
n
] = () '\0';

2909 
buff
->
¶í
 = (Ë(
°æí
Ë((*Ëbuff->
d©a
);

2911 i‡(
buff
->
¶í
 < 
n
) ;

2913 i‡(
r
 > 
n
)Ç =Ñ; n +=Ç;

2915 i‡(
BSTR_OK
 !
	`bÆloc
 (
buff
, 
n
 + 2)) {

2916 
	`bde°roy
 (
buff
);

2917  
NULL
;

2921  
buff
;

2922 
	}
}

2944 
	$bvcf‹m©a
 (
b°rög
 
b
, 
cou¡
, c⁄° * 
fmt
, 
va_li°
 
¨g
) {

2945 
n
, 
r
, 
l
;

2947 i‡(
b
 =
NULL
 || 
fmt
 =NULL || 
cou¡
 <0 || b->
d©a
 == NULL

2948 || 
b
->
mÀn
 <0 || b->
¶í
 < 0 || b->¶í > b->mÀnË 
BSTR_ERR
;

2950 i‡(
cou¡
 > (
n
 = 
b
->
¶í
 + cou¡Ë+ 2Ë 
BSTR_ERR
;

2951 i‡(
BSTR_OK
 !
	`bÆloc
 (
b
, 
n
 + 2)Ë 
BSTR_ERR
;

2953 
	`exv¢¥ötf
 (
r
, (*Ë
b
->
d©a
 + b->
¶í
, 
cou¡
 + 2, 
fmt
, 
¨g
);

2956 
l
 = 
b
->
¶í
;Ü <
n
;Ü++) {

2957 i‡('\0' =
b
->
d©a
[
l
]) {

2958 
b
->
¶í
 = 
l
;

2959  
BSTR_OK
;

2966 
b
->
d©a
[b->
¶í
] = '\0';

2967 i‡(
r
 > 
cou¡
 + 1) {

2968 
n
 = 
r
;

2970 
n
 = 
cou¡
 + count;

2971 i‡(
cou¡
 > 
n
Ë¿
INT_MAX
;

2973 
n
 = -n;

2975 i‡(
n
 > 
BSTR_ERR
-1)Ç = BSTR_ERR-1;

2976  
n
;

2977 
	}
}

	@bstr/bstrlib.h

15 #i‚de‡
BSTRLIB_INCLUDE


16 
	#BSTRLIB_INCLUDE


	)

18 #ifde‡
__˝lu•lus


22 
	~<°d¨g.h
>

23 
	~<°rög.h
>

24 
	~<limôs.h
>

25 
	~<˘y≥.h
>

27 #i‡!
deföed
 (
BSTRLIB_VSNP_OK
Ë&& !deföed (
BSTRLIB_NOVSNP
)

28 #i‡
deföed
 (
__TURBOC__
Ë&& !deföed (
__BORLANDC__
)

29 
	#BSTRLIB_NOVSNP


	)

33 
	#BSTR_ERR
 (-1)

	)

34 
	#BSTR_OK
 (0)

	)

35 
	#BSTR_BS_BUFF_LENGTH_GET
 (0)

	)

37 
ègb°rög
 * 
	tb°rög
;

38 c⁄° 
	tègb°rög
 * 
	tc⁄°_b°rög
;

41 
	#c°r2b°r
 
b‰omc°r


	)

42 
b°rög
 
b‰omc°r
 (c⁄° * 
°r
);

43 
b°rög
 
b‰omc°øŒoc
 (
mÀn
, c⁄° * 
°r
);

44 
b°rög
 
blk2b°r
 (c⁄° * 
blk
, 
Àn
);

45 * 
b°r2c°r
 (
c⁄°_b°rög
 
s
, 
z
);

46 
bc°r‰ì
 (* 
s
);

47 
b°rög
 
b°r˝y
 (
c⁄°_b°rög
 
b1
);

48 
bassign
 (
b°rög
 
a
, 
c⁄°_b°rög
 
b
);

49 
bassignmid°r
 (
b°rög
 
a
, 
c⁄°_b°rög
 
b
, 
À·
, 
Àn
);

50 
bassignc°r
 (
b°rög
 
a
, c⁄° * 
°r
);

51 
bassignblk
 (
b°rög
 
a
, c⁄° * 
s
, 
Àn
);

54 
bde°roy
 (
b°rög
 
b
);

57 
bÆloc
 (
b°rög
 
s
, 
Àn
);

58 
bÆlocmö
 (
b°rög
 
b
, 
Àn
);

61 
b°rög
 
bmid°r
 (
c⁄°_b°rög
 
b
, 
À·
, 
Àn
);

64 
bc⁄ˇt
 (
b°rög
 
b0
, 
c⁄°_b°rög
 
b1
);

65 
bc⁄ch¨
 (
b°rög
 
b0
, 
c
);

66 
bˇtc°r
 (
b°rög
 
b
, c⁄° * 
s
);

67 
bˇtblk
 (
b°rög
 
b
, c⁄° * 
s
, 
Àn
);

68 
bö£π
 (
b°rög
 
s1
, 
pos
, 
c⁄°_b°rög
 
s2
, 
fûl
);

69 
bö£πch
 (
b°rög
 
s1
, 
pos
, 
Àn
, 
fûl
);

70 
bª∂a˚
 (
b°rög
 
b1
, 
pos
, 
Àn
, 
c⁄°_b°rög
 
b2
, 
fûl
);

71 
bdñëe
 (
b°rög
 
s1
, 
pos
, 
Àn
);

72 
b£t°r
 (
b°rög
 
b0
, 
pos
, 
c⁄°_b°rög
 
b1
, 
fûl
);

73 
båunc
 (
b°rög
 
b
, 
n
);

76 
b°ricmp
 (
c⁄°_b°rög
 
b0
, c⁄°_b°rög 
b1
);

77 
b°∫icmp
 (
c⁄°_b°rög
 
b0
, c⁄°_b°rög 
b1
, 
n
);

78 
bi£qˇ£Àss
 (
c⁄°_b°rög
 
b0
, c⁄°_b°rög 
b1
);

79 
bis°emeqˇ£Àssblk
 (
c⁄°_b°rög
 
b0
, c⁄° * 
blk
, 
Àn
);

80 
bi£q
 (
c⁄°_b°rög
 
b0
, c⁄°_b°rög 
b1
);

81 
bis°emeqblk
 (
c⁄°_b°rög
 
b0
, c⁄° * 
blk
, 
Àn
);

82 
bi£qc°r
 (
c⁄°_b°rög
 
b
, c⁄° * 
s
);

83 
bi£qc°rˇ£Àss
 (
c⁄°_b°rög
 
b
, c⁄° * 
s
);

84 
b°rcmp
 (
c⁄°_b°rög
 
b0
, c⁄°_b°rög 
b1
);

85 
b°∫cmp
 (
c⁄°_b°rög
 
b0
, c⁄°_b°rög 
b1
, 
n
);

86 
bö°r
 (
c⁄°_b°rög
 
s1
, 
pos
, c⁄°_b°rög 
s2
);

87 
bö°º
 (
c⁄°_b°rög
 
s1
, 
pos
, c⁄°_b°rög 
s2
);

88 
bö°rˇ£Àss
 (
c⁄°_b°rög
 
s1
, 
pos
, c⁄°_b°rög 
s2
);

89 
bö°ºˇ£Àss
 (
c⁄°_b°rög
 
s1
, 
pos
, c⁄°_b°rög 
s2
);

90 
b°rchΩ
 (
c⁄°_b°rög
 
b
, 
c
, 
pos
);

91 
b°ºchΩ
 (
c⁄°_b°rög
 
b
, 
c
, 
pos
);

92 
	#b°rchr
(
b
,
c
Ë
	`b°rchΩ
 ((b), (c), 0)

	)

93 
	#b°ºchr
(
b
,
c
Ë
	`b°ºchΩ
 ((b), (c), 
	`bÀngth
(b)-1)

	)

94 
böchr
 (
c⁄°_b°rög
 
b0
, 
pos
, c⁄°_b°rög 
b1
);

95 
böchº
 (
c⁄°_b°rög
 
b0
, 
pos
, c⁄°_b°rög 
b1
);

96 
bnöchr
 (
c⁄°_b°rög
 
b0
, 
pos
, c⁄°_b°rög 
b1
);

97 
bnöchº
 (
c⁄°_b°rög
 
b0
, 
pos
, c⁄°_b°rög 
b1
);

98 
bfödª∂a˚
 (
b°rög
 
b
, 
c⁄°_b°rög
 
föd
, c⁄°_b°rög 
ª∂
, 
pos
);

99 
bfödª∂a˚ˇ£Àss
 (
b°rög
 
b
, 
c⁄°_b°rög
 
föd
, c⁄°_b°rög 
ª∂
, 
pos
);

102 
	sb°rLi°
 {

103 
	gqty
, 
	gmÀn
;

104 
b°rög
 * 
	gíåy
;

106 
b°rLi°
 * 
b°rLi°Cª©e
 ();

107 
b°rLi°De°roy
 (
b°rLi°
 * 
¶
);

108 
b°rLi°AŒoc
 (
b°rLi°
 * 
¶
, 
msz
);

109 
b°rLi°AŒocMö
 (
b°rLi°
 * 
¶
, 
msz
);

112 
b°rLi°
 * 
b•lô
 (
c⁄°_b°rög
 
°r
, 
•lôCh¨
);

113 
b°rLi°
 * 
b•lôs
 (
c⁄°_b°rög
 
°r
, c⁄°_b°rög 
•lôSå
);

114 
b°rLi°
 * 
b•lô°r
 (
c⁄°_b°rög
 
°r
, c⁄°_b°rög 
•lôSå
);

115 
b°rög
 
bjoö
 (c⁄° 
b°rLi°
 * 
bl
, 
c⁄°_b°rög
 
£p
);

116 
b•lôcb
 (
c⁄°_b°rög
 
°r
, 
•lôCh¨
, 
pos
,

117 (* 
cb
Ë(* 
∑rm
, 
ofs
, 
Àn
), *Öarm);

118 
b•lôscb
 (
c⁄°_b°rög
 
°r
, c⁄°_b°rög 
•lôSå
, 
pos
,

119 (* 
cb
Ë(* 
∑rm
, 
ofs
, 
Àn
), *Öarm);

120 
b•lô°rcb
 (
c⁄°_b°rög
 
°r
, c⁄°_b°rög 
•lôSå
, 
pos
,

121 (* 
cb
Ë(* 
∑rm
, 
ofs
, 
Àn
), *Öarm);

124 
b∑âîn
 (
b°rög
 
b
, 
Àn
);

125 
btouµî
 (
b°rög
 
b
);

126 
btﬁowî
 (
b°rög
 
b
);

127 
b…rimws
 (
b°rög
 
b
);

128 
bπrimws
 (
b°rög
 
b
);

129 
båimws
 (
b°rög
 
b
);

132 #i‡!
deföed
 (
BSTRLIB_NOVSNP
)

133 
b°rög
 
bf‹m©
 (c⁄° * 
fmt
, ...);

134 
bf‹m©a
 (
b°rög
 
b
, c⁄° * 
fmt
, ...);

135 
bassignf‹m©
 (
b°rög
 
b
, c⁄° * 
fmt
, ...);

136 
bvcf‹m©a
 (
b°rög
 
b
, 
cou¡
, c⁄° * 
fmt
, 
va_li°
 
¨gli°
);

138 
	#bvf‹m©a
(
ªt
, 
b
, 
fmt
, 
œ°¨g
Ë{ \

	)

139 
b°rög
 
	gb°πmp_b
 = (
b
); \

140 c⁄° * 
	gb°πmp_fmt
 = (
fmt
); \

141 
	gb°πmp_r
 = 
BSTR_ERR
, 
	gb°πmp_sz
 = 16; \

143 
va_li°
 
	gb°πmp_¨gli°
; \

144 
va_°¨t
 (
b°πmp_¨gli°
, 
œ°¨g
); \

145 
	gb°πmp_r
 = 
bvcf‹m©a
 (
b°πmp_b
, 
b°πmp_sz
, 
b°πmp_fmt
, 
b°πmp_¨gli°
); \

146 
va_íd
 (
b°πmp_¨gli°
); \

147 i‡(
	gb°πmp_r
 >= 0) { \

148 
b°πmp_r
 = 
BSTR_OK
; \

150 } i‡(-
	gb°πmp_r
 <
b°πmp_sz
) { \

151 
b°πmp_r
 = 
BSTR_ERR
; \

154 
	gb°πmp_sz
 = -
b°πmp_r
; \

156 
	gªt
 = 
b°πmp_r
; \

161 (*
	gbNgëc
Ë(*
	t∑rm
);

162 
size_t
 (* 
	tbNªad
Ë(*
	tbuff
, 
	tsize_t
 
	tñsize
, size_à
	t√Àm
, *
	t∑rm
);

165 
b°rög
 
bgës
 (
bNgëc
 
gëcPå
, * 
∑rm
, 
ãrmö©‹
);

166 
b°rög
 
bªad
 (
bNªad
 
ªadPå
, * 
∑rm
);

167 
bgëß
 (
b°rög
 
b
, 
bNgëc
 
gëcPå
, * 
∑rm
, 
ãrmö©‹
);

168 
bassigngës
 (
b°rög
 
b
, 
bNgëc
 
gëcPå
, * 
∑rm
, 
ãrmö©‹
);

169 
bªada
 (
b°rög
 
b
, 
bNªad
 
ªadPå
, * 
∑rm
);

172 
bSåóm
 * 
bs›í
 (
bNªad
 
ªadPå
, * 
∑rm
);

173 * 
bs˛o£
 (
bSåóm
 * 
s
);

174 
bsbufÊígth
 (
bSåóm
 * 
s
, 
sz
);

175 
b§ód 
 (
b°rög
 
b
, 
bSåóm
 * 
s
, 
ãrmö©‹
);

176 
b§ód s
 (
b°rög
 
r
, 
bSåóm
 * 
s
, 
c⁄°_b°rög
 
ãrm
);

177 
b§ód
 (
b°rög
 
b
, 
bSåóm
 * 
s
, 
n
);

178 
b§ód a
 (
b°rög
 
b
, 
bSåóm
 * 
s
, 
ãrmö©‹
);

179 
b§ód ß
 (
b°rög
 
r
, 
bSåóm
 * 
s
, 
c⁄°_b°rög
 
ãrm
);

180 
b§óda
 (
b°rög
 
b
, 
bSåóm
 * 
s
, 
n
);

181 
bsuƒód
 (
bSåóm
 * 
s
, 
c⁄°_b°rög
 
b
);

182 
b•ìk
 (
b°rög
 
r
, c⁄° 
bSåóm
 * 
s
);

183 
bs•lôscb
 (
bSåóm
 * 
s
, 
c⁄°_b°rög
 
•lôSå
,

184 (* 
cb
Ë(* 
∑rm
, 
ofs
, 
c⁄°_b°rög
 
íåy
), *Öarm);

185 
bs•lô°rcb
 (
bSåóm
 * 
s
, 
c⁄°_b°rög
 
•lôSå
,

186 (* 
cb
Ë(* 
∑rm
, 
ofs
, 
c⁄°_b°rög
 
íåy
), *Öarm);

187 
b£of
 (c⁄° 
bSåóm
 * 
s
);

189 
	sègb°rög
 {

190 
	gmÀn
;

191 
	g¶í
;

192 * 
	gd©a
;

196 
	#bÀngthe
(
b
, 
e
Ë(((bË=(*)0 || (b)->
¶í
 < 0Ë? ()”Ë: ((b)->¶í))

	)

197 
	#bÀngth
(
b
Ë(
	`bÀngthe
 ((b), 0))

	)

198 
	#bd©aof£
(
b
, 
o
, 
e
Ë(((bË=(*)0 || (b)->
d©a
 =(*)0Ë? (*)”Ë: ((*)(b)->d©aË+ (o))

	)

199 
	#bd©aofs
(
b
, 
o
Ë(
	`bd©aof£
 ((b), (o), (*)0))

	)

200 
	#bd©´
(
b
, 
e
Ë(
	`bd©aof£
 (b, 0,É))

	)

201 
	#bd©a
(
b
Ë(
	`bd©aofs
 (b, 0))

	)

202 
	#bch¨e
(
b
, 
p
, 
e
Ë(((()’)Ë< ()
	`bÀngth
(b)Ë? ((b)->
d©a
[’)]Ë: (e))

	)

203 
	#bch¨
(
b
, 
p
Ë
	`bch¨e
 ((b), (p), '\0')

	)

206 
	#bsSèticMÀn
(
q
,
m
Ë{(m), (Ë(q)-1, (*Ë("" q "")}

	)

207 #i‡
deföed
(
_MSC_VER
)

209 
	#bsSètic
(
q
Ë
	`bsSèticMÀn
(q,-32)

	)

211 #i‚de‡
bsSètic


212 
	#bsSètic
(
q
Ë
	`bsSèticMÀn
(q,-
__LINE__
)

	)

216 
	#bsSèticBlkP¨ms
(
q
Ë((*)("" q "")), ((Ë(q)-1)

	)

219 
	#c°r2tb°r
 
bt‰omc°r


	)

220 
	#bt‰omc°r
(
t
,
s
Ë{ \

	)

221 (
	gt
).
	gd©a
 = (*Ë(
s
); \

222 (
	gt
).
	g¶í
 = ((
t
).
d©a
Ë? ((Ë(
°æí
) ((*)(t).data)) : 0; \

223 (
	gt
).
	gmÀn
 = -1; \

225 
	#blk2tb°r
(
t
,
s
,
l
Ë{ \

	)

226 (
	gt
).
	gd©a
 = (*Ë(
s
); \

227 (
	gt
).
	g¶í
 = 
l
; \

228 (
	gt
).
	gmÀn
 = -1; \

230 
	#bt‰omblk
(
t
,
s
,
l
Ë
	`blk2tb°r
—,s,l)

	)

231 
	#bmid2tb°r
(
t
,
b
,
p
,
l
Ë{ \

	)

232 
c⁄°_b°rög
 
	gb°πmp_s
 = (
b
); \

233 i‡(
	gb°πmp_s
 && b°πmp_s->
	gd©a
 && b°πmp_s->
	g¶í
 >= 0) { \

234 
b°πmp_À·
 = (
p
); \

235 
	gb°πmp_Àn
 = (
l
); \

236 i‡(
	gb°πmp_À·
 < 0) { \

237 
	gb°πmp_Àn
 +
b°πmp_À·
; \

238 
	gb°πmp_À·
 = 0; \

240 i‡(
	gb°πmp_Àn
 > 
	gb°πmp_s
->
	g¶í
 - 
	gb°πmp_À·
) \

241 
	gb°πmp_Àn
 = 
b°πmp_s
->
¶í
 - 
b°πmp_À·
; \

242 i‡(
	gb°πmp_Àn
 <= 0) { \

243 (
t
).
d©a
 = (*)""; \

244 (
	gt
).
	g¶í
 = 0; \

246 (
	gt
).
	gd©a
 = 
b°πmp_s
->
d©a
 + 
b°πmp_À·
; \

247 (
	gt
).
	g¶í
 = 
b°πmp_Àn
; \

250 (
	gt
).
	gd©a
 = (*)""; \

251 (
	gt
).
	g¶í
 = 0; \

253 (
	gt
).
	gmÀn
 = -
__LINE__
; \

255 
	#bt‰omblk…rimws
(
t
,
s
,
l
Ë{ \

	)

256 
	gb°πmp_idx
 = 0, 
	gb°πmp_Àn
 = (
l
); \

257 * 
	gb°πmp_s
 = (
s
); \

258 i‡(
	gb°πmp_s
 && 
	gb°πmp_Àn
 >= 0) { \

259 ; 
	gb°πmp_idx
 < 
	gb°πmp_Àn
; bstrtmp_idx++) { \

260 i‡(!
is•a˚
 (
b°πmp_s
[
b°πmp_idx
])) ; \

263 (
	gt
).
	gd©a
 = 
b°πmp_s
 + 
b°πmp_idx
; \

264 (
	gt
).
	g¶í
 = 
b°πmp_Àn
 - 
b°πmp_idx
; \

265 (
	gt
).
	gmÀn
 = -
__LINE__
; \

267 
	#bt‰omblkπrimws
(
t
,
s
,
l
Ë{ \

	)

268 
	gb°πmp_Àn
 = (
l
) - 1; \

269 * 
	gb°πmp_s
 = (
s
); \

270 i‡(
	gb°πmp_s
 && 
	gb°πmp_Àn
 >= 0) { \

271 ; 
	gb°πmp_Àn
 >= 0; bstrtmp_len--) { \

272 i‡(!
is•a˚
 (
b°πmp_s
[
b°πmp_Àn
])) ; \

275 (
	gt
).
	gd©a
 = 
b°πmp_s
; \

276 (
	gt
).
	g¶í
 = 
b°πmp_Àn
 + 1; \

277 (
	gt
).
	gmÀn
 = -
__LINE__
; \

279 
	#bt‰omblkåimws
(
t
,
s
,
l
Ë{ \

	)

280 
	gb°πmp_idx
 = 0, 
	gb°πmp_Àn
 = (
l
) - 1; \

281 * 
	gb°πmp_s
 = (
s
); \

282 i‡(
	gb°πmp_s
 && 
	gb°πmp_Àn
 >= 0) { \

283 ; 
	gb°πmp_idx
 <
b°πmp_Àn
; bstrtmp_idx++) { \

284 i‡(!
is•a˚
 (
b°πmp_s
[
b°πmp_idx
])) ; \

286 ; 
	gb°πmp_Àn
 >
b°πmp_idx
; bstrtmp_len--) { \

287 i‡(!
is•a˚
 (
b°πmp_s
[
b°πmp_Àn
])) ; \

290 (
	gt
).
	gd©a
 = 
b°πmp_s
 + 
b°πmp_idx
; \

291 (
	gt
).
	g¶í
 = 
b°πmp_Àn
 + 1 - 
b°πmp_idx
; \

292 (
	gt
).
	gmÀn
 = -
__LINE__
; \

296 
	#bwrôïrŸe˘
(
t
Ë{ i‡(—).
mÀn
 >0Ë—).mÀ¿-1; }

	)

297 
	#bwrôóŒow
(
t
Ë{ i‡(—).
mÀn
 =-1Ë—).mÀ¿—).
¶í
 + (—).¶í =0); }

	)

298 
	#biswrôïrŸe˘ed
(
t
Ë(—).
mÀn
 <0)

	)

300 #ifde‡
__˝lu•lus


	@bstring.h

35 #i‚de‡
_b°rög_h


36 
	#_b°rög_h


	)

38 
	~<b°r/b°æib.h
>

39 
	~<b°r/b°øux.h
>

	@cache.c

35 
	~"ˇche.h
"

37 
	~<°dio.h
>

38 
	~<°dlib.h
>

39 
	~<limôs.h
>

41 
	~"dbg.h
"

43 
Cache
 *
	$Cache_¸óã
(
size
, 
ˇche_lookup_cb
 
lookup
, 
ˇche_evi˘_cb
 
evi˘
)

45 
Cache
 *
ˇche
 = 
NULL
;

46 
size_t
 
exåa_size
 = 0;

47 
i
 = 0;

49 
	`check
(
lookup
, "lookupÖassedÅo cache_create is NULL");

51 if(
size
 > 
MIN_CACHE_SIZE
) {

52 
exåa_size
 = (
size
 - 
MIN_CACHE_SIZE
Ë* (
ˇche_íåy
);

55 
ˇche
 = 
	`ˇŒoc
((
Cache
Ë+ 
exåa_size
, 1);

56 
	`check_mem
(
ˇche
);

58 
ˇche
->
size
 = size;

59 
ˇche
->
lookup
 =Üookup;

60 
ˇche
->
evi˘
 =Évict;

62 
i
 = 0; i < 
size
; i++) {

63 
ˇche
->
¨r
[
i
].
èg
 = 
INT_MAX
;

66  
ˇche
;

68 
îr‹
:

69  
NULL
;

70 
	}
}

72 
	$Cache_de°roy
(
Cache
 *
ˇche
)

74 
i
 = 0;

75 
	`check
(
ˇche
, "NULL cacheárgumentÅo Cache_destroy");

77 if(
ˇche
->
evi˘
) {

78 
i
 = 0; i < 
ˇche
->
size
; i++) {

79 if(
ˇche
->
¨r
[
i
].
d©a
) {

80 
ˇche
->
	`evi˘
(ˇche->
¨r
[
i
].
d©a
);

85 
	`‰ì
(
ˇche
);

87 
îr‹
:

89 
	}
}

91 *
	$Cache_lookup
(
Cache
 *
ˇche
, *
key
)

93 
	`check
(
ˇche
, "NULL cacheárgumentÅo Cache_lookup");

95 *
rd©a
 = 
NULL
;

96 
i
 = 0;

98 
i
 = 0; i < 
ˇche
->
size
; i++) {

99 if(
ˇche
->
¨r
[
i
].
èg
 > 0) {

100 
ˇche
->
¨r
[
i
].
èg
--;

103 
rd©a
 = 
ˇche
->
¨r
[
i
].
d©a
;

105 if(
rd©a
 && 
ˇche
->
	`lookup
‘d©a, 
key
)) {

106 
ˇche
->
¨r
[
i
].
èg
 = 
INT_MAX
;

109 
rd©a
 = 
NULL
;

112 
i
 = i + 1; i < 
ˇche
->
size
; i++) {

113 if(
ˇche
->
¨r
[
i
].
èg
 > 0) {

114 
ˇche
->
¨r
[
i
].
èg
--;

118  
rd©a
;

120 
îr‹
:

121  
NULL
;

122 
	}
}

124 
	$Cache_add
(
Cache
 *
ˇche
, *
d©a
)

126 
	`check
(
ˇche
, "NULL cacheárgumentÅo Cache_add");

127 
	`check
(
d©a
, "Cannotádd NULLás dataÅo cache");

129 
i
 = 0;

130 
mö_idx
 = 0;

131 
mö_èg
 = 
ˇche
->
¨r
[
mö_idx
].
èg
;

133 if(
ˇche
->
¨r
[0].
èg
 > 0) {

134 
ˇche
->
¨r
[0].
èg
--;

137 
i
 = 1; i < 
ˇche
->
size
; i++) {

138 if(
ˇche
->
¨r
[
i
].
èg
 < 
mö_èg
) {

139 
mö_èg
 = 
ˇche
->
¨r
[
i
].
èg
;

140 
mö_idx
 = 
i
;

143 if(
ˇche
->
¨r
[
i
].
èg
 > 0) {

144 
ˇche
->
¨r
[
i
].
èg
--;

148 if(
ˇche
->
¨r
[
mö_idx
].
d©a
 && cache->
evi˘
) {

149 
ˇche
->
	`evi˘
(ˇche->
¨r
[
mö_idx
].
d©a
);

152 
ˇche
->
¨r
[
mö_idx
].
d©a
 = data;

153 
ˇche
->
¨r
[
mö_idx
].
èg
 = 
INT_MAX
;

155 
îr‹
:

157 
	}
}

159 
	$Cache_evi˘_obje˘
(
Cache
 *
ˇche
, *
obj
)

161 
i
 = 0;

163 
	`check
(
ˇche
, "NULL cacheárgumentÅo Cache_evict_object");

164 
	`check
(
obj
, "NULL objárgumentÅo Cache_evict_object");

166 
i
 = 0; i < 
ˇche
->
size
; i++) {

167 if(
ˇche
->
¨r
[
i
].
d©a
 =
obj
) {

168 if(
ˇche
->
evi˘
) {

169 
ˇche
->
	`evi˘
(ˇche->
¨r
[
i
].
d©a
);

172 
ˇche
->
¨r
[
i
].
d©a
 = 
NULL
;

173 
ˇche
->
¨r
[
i
].
èg
 = 0;

177 
îr‹
:

179 
	}
}

	@cache.h

1 #i‚de‡
_CACHE_H


2 
	#_CACHE_H


	)

4 
	#MIN_CACHE_SIZE
 16

	)

7 (*
	tˇche_lookup_cb
)(*
	td©a
, *
	tkey
);

8 (*
	tˇche_evi˘_cb
)(*
	td©a
);

10 
	sˇche_íåy
 {

11 
èg
;

12 *
d©a
;

15 
	sCache
 {

16 
ˇche_lookup_cb
 
lookup
;

17 
ˇche_evi˘_cb
 
evi˘
;

18 
size
;

21 
ˇche_íåy
 
¨r
[
MIN_CACHE_SIZE
];

22 } 
	tCache
;

24 
Cache
 *
	`Cache_¸óã
(
size
, 
ˇche_lookup_cb
 
lookup
, 
ˇche_evi˘_cb
 
evi˘
);

25 
	`Cache_de°roy
(
Cache
 *
ˇche
);

26 *
	`Cache_lookup
(
Cache
 *
ˇche
, *
key
);

27 
	`Cache_add
(
Cache
 *
ˇche
, *
d©a
);

28 
	`Cache_evi˘_obje˘
(
Cache
 *
ˇche
, *
obj
);

	@config/config.c

34 
	~"c⁄fig/c⁄fig.h
"

36 
	~<as£π.h
>

37 
	~<°d¨g.h
>

38 
	~<°dlib.h
>

39 
	~<°rög.h
>

40 
	~<sig«l.h
>

42 
	~<sqlôe3.h
>

44 
	~"adt/t°.h
"

45 
	~"dú.h
"

46 
	~"dbg.h
"

47 
	~"mime.h
"

48 
	~"¥oxy.h
"

49 
	~"£rvî.h
"

50 
	~"£âög.h
"

51 
	~"c⁄fig/moduÀ.h
"

52 
	~"c⁄fig/db.h
"

53 
	~"fûãr.h
"

54 
	~<dlf˙.h
>

56 
	~"xªque°.h
"

58 
H™dÀr
 *
	$C⁄fig_lﬂd_h™dÀr
(
h™dÀr_id
)

60 
äs_vÆue_t
 *
ªs
 = 
CONFIG_MODULE
.
	`lﬂd_h™dÀr
(
h™dÀr_id
);

62 
	`DB_check
(
ªs
, 0, 7,

63 
äs_èg_numbî
, 
äs_èg_°rög
,Åns_tag_string,Åns_tag_string,

64 
äs_èg_°rög
, 
äs_èg_numbî
,Åns_tag_string);

66 
H™dÀr
 *
h™dÀr
 = 
	`H™dÀr_¸óã
(

67 
	`DB_gë_as
(
ªs
, 0, 1, 
°rög
),

68 
	`DB_gë_as
(
ªs
, 0, 2, 
°rög
),

69 
	`DB_gë_as
(
ªs
, 0, 3, 
°rög
),

70 
	`DB_gë_as
(
ªs
, 0, 4, 
°rög
)

72 
	`check
(
h™dÀr
 !
NULL
, "FaûedÅÿ¸óã h™dÀ∏id %d.", 
h™dÀr_id
);

74 if(
	`DB_gë_as
(
ªs
, 0, 5, 
numbî
) == 1) {

75 
h™dÀr
->
øw
 = 1;

78 if(
	`bi£qc°r
(
	`DB_gë_as
(
ªs
, 0, 6, 
°rög
), "tnetstring")) {

79 
h™dÀr
->
¥Ÿocﬁ
 = 
HANDLER_PROTO_TNET
;

82 
	`log_öfo
("Loaded handler %d:%s:%s:%s:%s",

83 
h™dÀr_id
, 
	`bd©a
(
h™dÀr
->
£nd_•ec
),

84 
	`bd©a
(
h™dÀr
->
£nd_idít
),

85 
	`bd©a
(
h™dÀr
->
ªcv_•ec
),

86 
	`bd©a
(
h™dÀr
->
ªcv_idít
));

88 
	`äs_vÆue_de°roy
(
ªs
);

89  
h™dÀr
;

90 
îr‹
:

91 if(
ªs
Ë
	`äs_vÆue_de°roy
(res);

92  
NULL
;

93 
	}
}

96 
Proxy
 *
	$C⁄fig_lﬂd_¥oxy
(
¥oxy_id
)

98 
äs_vÆue_t
 *
ªs
 = 
CONFIG_MODULE
.
	`lﬂd_¥oxy
(
¥oxy_id
);

100 
	`DB_check
(
ªs
, 0, 3,

101 
äs_èg_numbî
, 
äs_èg_°rög
,Åns_tag_number);

103 
Proxy
 *
¥oxy
 = 
	`Proxy_¸óã
(

104 
	`DB_gë_as
(
ªs
, 0, 1, 
°rög
),

105 
	`DB_gë_as
(
ªs
, 0, 2, 
numbî
)

107 
	`check
(
¥oxy
 !
NULL
, "FaûedÅÿ¸óãÖroxy wôh id %d.", 
¥oxy_id
);

109 
	`log_öfo
("LoadedÖroxy %d:%s:%d",

110 
¥oxy_id
, 
	`bd©a
(
¥oxy
->
£rvî
),Öroxy->
p‹t
);

112 
	`äs_vÆue_de°roy
(
ªs
);

113  
¥oxy
;

114 
îr‹
:

115 if(
ªs
Ë
	`äs_vÆue_de°roy
(res);

116  
NULL
;

117 
	}
}

120 
Dú
 *
	$C⁄fig_lﬂd_dú
(
dú_id
)

122 
äs_vÆue_t
 *
ªs
 = 
CONFIG_MODULE
.
	`lﬂd_dú
(
dú_id
);

124 
	`DB_check
(
ªs
, 0, 6,

125 
äs_èg_numbî
, 
äs_èg_°rög
,Åns_tag_string,

126 
äs_èg_°rög
, 
äs_èg_numbî
,Åns_tag_string);

128 
Dú
 *
dú
 = 
	`Dú_¸óã
(

129 
	`DB_gë_as
(
ªs
, 0, 1, 
°rög
),

130 
	`DB_gë_as
(
ªs
, 0, 2, 
°rög
),

131 
	`DB_gë_as
(
ªs
, 0, 3, 
°rög
),

132 
	`DB_gë_as
(
ªs
, 0, 4, 
numbî
),

133 
	`DB_gë_as
(
ªs
, 0, 5, 
li°
)

135 
	`check
(
dú
 !
NULL
, "FaûedÅÿ¸óã dúe˘‹y id %d.", 
dú_id
);

137 
	`log_öfo
("Loaded directory %d:%s:%s",

138 
dú_id
, 
	`bd©a
(
dú
->
ba£
), bd©a(dú->
ödex_fûe
));

140 
	`äs_vÆue_de°roy
(
ªs
);

141  
dú
;

142 
îr‹
:

143 if(
ªs
Ë
	`äs_vÆue_de°roy
(res);

144  
NULL
;

145 
	}
}

147 
ölöe
 
H™dÀr
 *
	$C⁄fig_push_unique_h™dÀr
(
Sîvî
 *
§v
, 
H™dÀr
 *
h™dÀr
)

149 
i
 = 0;

154 
i
 = 0; i < 
	`d¨øy_íd
(
§v
->
h™dÀrs
); i++) {

155 
H™dÀr
 *
ã°
 = 
	`d¨øy_gë
(
§v
->
h™dÀrs
, 
i
);

156 
ßme_£nd
 = 
	`bi£q
(
ã°
->
£nd_•ec
, 
h™dÀr
->send_spec);

157 
ßme_ªcv
 = 
	`bi£q
(
ã°
->
ªcv_•ec
, 
h™dÀr
->recv_spec);

159 if(
ßme_£nd
 && 
ßme_ªcv
) {

160 
	`H™dÀr_de°roy
(
h™dÀr
);

162  
ã°
;

163 } if(
ßme_£nd
) {

164 
	`log_w¨n
("You haveÅwo handlers withÅhe same send_spec: %s",

165 
	`bd©a
(
h™dÀr
->
£nd_•ec
));

166 } if(
ßme_ªcv
) {

167 
	`log_w¨n
("You haveÅwo handlers withÅhe sameÑecv_spec: %s",

168 
	`bd©a
(
h™dÀr
->
ªcv_•ec
));

174 
	`d¨øy_push
(
§v
->
h™dÀrs
, 
h™dÀr
);

175  
h™dÀr
;

176 
	}
}

178 
	$C⁄fig_lﬂd_rouãs
(
Sîvî
 *
§v
, 
Ho°
 *
ho°
, 
ho°_id
, 
£rvî_id
)

180 
äs_vÆue_t
 *
ªs
 = 
CONFIG_MODULE
.
	`lﬂd_rouãs
(
ho°_id
, 
£rvî_id
);

181 
cﬁs
 = 0;

182 
rows
 = 
	`DB_cou¡s
(
ªs
, &
cﬁs
);

183 
row_i
 = 0;

184 
rc
 = 0;

186 if(
rows
 == 0) {

187 
	`log_w¨n
("Server hasÇoÑoutes, it won't doánything withoutátÜeast one.");

188 
	`äs_vÆue_de°roy
(
ªs
);

192 
row_i
 = 0;Ñow_ò< 
rows
;Ñow_i++) {

193 
	`DB_check
(
ªs
, 
row_i
, 4,

194 
äs_èg_numbî
, 
äs_èg_°rög
,Åns_tag_number,Åns_tag_string);

196 
rouã_id
 = 
	`DB_gë_as
(
ªs
, 
row_i
, 0, 
numbî
);

197 
b°rög
 
∑th
 = 
	`DB_gë_as
(
ªs
, 
row_i
, 1, 
°rög
);

198 
id
 = 
	`DB_gë_as
(
ªs
, 
row_i
, 2, 
numbî
);

199 
b°rög
 
ty≥
 = 
	`DB_gë_as
(
ªs
, 
row_i
, 3, 
°rög
);

200 *
èrgë
 = 
NULL
;

201 
BackídTy≥
 
backíd_ty≥
 = 0;

203 if(
	`bi£qc°r
(
ty≥
, "dir")) {

204 
èrgë
 = 
	`C⁄fig_lﬂd_dú
(
id
);

205 
backíd_ty≥
 = 
BACKEND_DIR
;

206 } if(
	`bi£qc°r
(
ty≥
, "proxy")) {

207 
èrgë
 = 
	`C⁄fig_lﬂd_¥oxy
(
id
);

208 
backíd_ty≥
 = 
BACKEND_PROXY
;

209 } if(
	`bi£qc°r
(
ty≥
, "handler")) {

210 
H™dÀr
 *
ãmp
 = 
	`C⁄fig_lﬂd_h™dÀr
(
id
);

211 
èrgë
 = 
	`C⁄fig_push_unique_h™dÀr
(
§v
, 
ãmp
);

212 
	`check
(
èrgë
 !
NULL
, "FaûuªÖushög h™dÀ∏%d:%s.", 
id
, 
	`bd©a
(
∑th
));

213 
backíd_ty≥
 = 
BACKEND_HANDLER
;

215 
	`£¡öñ
("Invalid backendÅype: %s forÑoute %d:%s.",

216 
	`bd©a
(
ty≥
), 
rouã_id
, bd©a(
∑th
));

219 
	`check
(
èrgë
 !
NULL
, "FailedÅoÜoad backendÅype: %s forÑoute %d:%s.",

220 
	`bd©a
(
ty≥
), 
rouã_id
, bd©a(
∑th
));

223 
rc
 = 
	`Ho°_add_backíd
(
ho°
, 
∑th
, 
backíd_ty≥
, 
èrgë
);

224 
	`check
(
rc
 == 0, "FailedÅoáddÑoute %sÅo host %s.",

225 
	`bd©a
(
∑th
), bd©a(
ho°
->
«me
));

227 
	`log_öfo
("LoadedÑoute %d:%s:%s for host %d:%s",

228 
rouã_id
, 
	`bd©a
(
∑th
), bd©a(
ty≥
),

229 
ho°_id
, 
	`bd©a
(
ho°
->
«me
));

232 
	`äs_vÆue_de°roy
(
ªs
);

233  
row_i
;

235 
îr‹
:

236 if(
ªs
Ë
	`äs_vÆue_de°roy
(res);

238 
	}
}

241 
C⁄fig_lﬂd_∂ugös
(
Sîvî
 *
§v
, 
äs_vÆue_t
 *
ªs
, (*
lﬂd_func
)(Sîvî *, 
b°rög
,Åns_value_t *))

243 
cﬁs
 = 0;

244 
rows
 = 
	`DB_cou¡s
(
ªs
, &
cﬁs
);

245 
row_i
 = 0;

246 
rc
 = 0;

248 
row_i
 = 0;Ñow_ò< 
rows
;Ñow_i++) {

249 
	`DB_check
(
ªs
, 
row_i
, 3,

250 
äs_èg_numbî
, 
äs_èg_°rög
,Åns_tag_string);

252 
id
 = 
	`DB_gë_as
(
ªs
, 
row_i
, 0, 
numbî
);

253 
b°rög
 
fûãr_«me
 = 
	`DB_gë_as
(
ªs
, 
row_i
, 1, 
°rög
);

254 
b°rög
 
øw_£âögs
 = 
	`DB_gë_as
(
ªs
, 
row_i
, 2, 
°rög
);

256 *
ªmaö
 = 
NULL
;

257 
äs_vÆue_t
 *
c⁄fig
 = 
	`äs_∑r£
(
	`bd©a
(
øw_£âögs
), 
	`bÀngth
‘aw_£âögs), &
ªmaö
);

259 
	`check
(
c⁄fig
 !
NULL
, "FailedÅoÖarseÅhe settings for Filter '%s' id='%d'",

260 
	`bd©a
(
fûãr_«me
), 
id
);

261 
	`check
(
	`äs_gë_ty≥
(
c⁄fig
Ë=
äs_èg_di˘
,

264 
rc
 = 
	`lﬂd_func
(
§v
, 
fûãr_«me
, 
c⁄fig
);

265 
	`check
(
rc
 =0, "FaûedÅÿlﬂdÖlugö '%s' id='%d'", 
	`bd©a
(
fûãr_«me
), 
id
);

268 
	`äs_vÆue_de°roy
(
ªs
);

271 
îr‹
:

272 if(
ªs
Ë
	`äs_vÆue_de°roy
(res);

274 
	}
}

276 
	$C⁄fig_lﬂd_fûãrs
(
Sîvî
 *
§v
, 
£rvî_id
)

278 
äs_vÆue_t
 *
ªs
 = 
CONFIG_MODULE
.
	`lﬂd_fûãrs
(
£rvî_id
);

279  
	`C⁄fig_lﬂd_∂ugös
(
§v
,
ªs
,
Fûãr_lﬂd
);

280 
	}
}

282 
	$C⁄fig_lﬂd_xªque°s
(
Sîvî
 *
§v
, 
£rvî_id
)

284 
äs_vÆue_t
 *
ªs
 = 
CONFIG_MODULE
.
	`lﬂd_xªque°s
(
£rvî_id
);

285  
	`C⁄fig_lﬂd_∂ugös
(
§v
,
ªs
,
Xªque°_lﬂd
);

286 
	}
}

288 
	$C⁄fig_lﬂd_ho°s
(
Sîvî
 *
§v
, 
£rvî_id
)

290 
äs_vÆue_t
 *
ªs
 = 
CONFIG_MODULE
.
	`lﬂd_ho°s
(
£rvî_id
);

291 
cﬁs
 = 0;

292 
rows
 = 
	`DB_cou¡s
(
ªs
, &
cﬁs
);

293 
row_i
 = 0;

294 
rc
 = 0;

296 if(
rows
 == 0) {

297 
	`log_w¨n
("No hosts configured for server, I hope you know what you're doing.");

298 
	`äs_vÆue_de°roy
(
ªs
);

302 
row_i
 = 0;Ñow_ò< 
rows
;Ñow_i++) {

303 
	`DB_check
(
ªs
, 
row_i
, 4,

304 
äs_èg_numbî
, 
äs_èg_°rög
,Åns_tag_string,Åns_tag_number);

306 
Ho°
 *
ho°
 = 
	`Ho°_¸óã
(

307 
	`DB_gë_as
(
ªs
, 
row_i
, 1, 
°rög
),

308 
	`DB_gë_as
(
ªs
, 
row_i
, 2, 
°rög
)

310 
	`check_mem
(
ho°
);

312 
ho°_id
 = 
	`DB_gë_as
(
ªs
, 
row_i
, 0, 
numbî
);

313 
rc
 = 
	`C⁄fig_lﬂd_rouãs
(
§v
, 
ho°
, 
ho°_id
, 
£rvî_id
);

314 
	`check
(
rc
 !-1, "FaûedÅÿlﬂdÑouã†f‹ ho° %s.", 
	`bd©a
(
ho°
->
«me
));

316 
rc
 = 
	`Sîvî_add_ho°
(
§v
, 
ho°
);

317 
	`check
(
rc
 == 0, "FailedÅoádd host %s:%sÅo server.",

318 
	`bd©a
(
ho°
->
«me
), bd©a(ho°->
m©chög
));

320 if(
	`bi£q
(
§v
->
deÁu…_ho°«me
, 
ho°
->
«me
)) {

321 
§v
->
deÁu…_ho°
 = 
ho°
;

325 
	`log_öfo
("Lﬂded %d ho°†f‹ sîvî %d:%s", 
row_i
, 
£rvî_id
, 
	`bd©a
(
§v
->
uuid
));

327 
	`äs_vÆue_de°roy
(
ªs
);

330 
îr‹
:

331 if(
ªs
Ë
	`äs_vÆue_de°roy
(res);

334 
	}
}

336 
Sîvî
 *
	$C⁄fig_lﬂd_£rvî
(c⁄° *
uuid
)

338 
äs_vÆue_t
 *
ªs
 = 
CONFIG_MODULE
.
	`lﬂd_£rvî
(
uuid
);

339 
rc
 = 0;

341 
	`DB_check
(
ªs
, 0, 11,

342 
äs_èg_numbî
, 
äs_èg_°rög
,Åns_tag_string,Åns_tag_string,Åns_tag_number,

343 
äs_èg_°rög
,Åns_tag_string,Åns_tag_string,Åns_tag_string,Åns_tag_string,

344 
äs_èg_numbî
);

346 
£rvî_id
 = 
	`DB_gë_as
(
ªs
, 0, 0, 
numbî
);

348 
Sîvî
 *
§v
 = 
	`Sîvî_¸óã
(

349 
	`DB_gë_as
(
ªs
, 0, 1, 
°rög
),

350 
	`DB_gë_as
(
ªs
, 0, 2, 
°rög
),

351 
	`DB_gë_as
(
ªs
, 0, 3, 
°rög
),

352 
	`DB_gë_as
(
ªs
, 0, 4, 
numbî
),

353 
	`DB_gë_as
(
ªs
, 0, 5, 
°rög
),

354 
	`DB_gë_as
(
ªs
, 0, 6, 
°rög
),

355 
	`DB_gë_as
(
ªs
, 0, 7, 
°rög
),

356 
	`DB_gë_as
(
ªs
, 0, 8, 
°rög
),

357 
	`DB_gë_as
(
ªs
, 0, 9, 
°rög
),

358 
	`DB_gë_as
(
ªs
, 0, 10, 
numbî
)

360 
	`check
(
§v
 !
NULL
, "FaûedÅÿ¸óã sîvî %s", 
uuid
);

363 
rc
 = 
	`C⁄fig_lﬂd_ho°s
(
§v
, 
£rvî_id
);

364 
	`check
(
rc
 =0, "FaûedÅÿlﬂdÅhêho°†f‹ sîvî: %s", 
	`bd©a
(
§v
->
uuid
));

366 
rc
 = 
	`C⁄fig_lﬂd_fûãrs
(
§v
, 
£rvî_id
);

367 
	`check
(
rc
 =0, "FaûedÅÿlﬂdÅhêfûãr†f‹ sîvî: %s", 
	`bd©a
(
§v
->
uuid
));

369 
rc
 = 
	`C⁄fig_lﬂd_xªque°s
(
§v
, 
£rvî_id
);

370 
	`check
(
rc
 =0, "FaûedÅÿlﬂdÅhêfûãr†f‹ sîvî: %s", 
	`bd©a
(
§v
->
uuid
));

372 
	`äs_vÆue_de°roy
(
ªs
);

373  
§v
;

375 
îr‹
:

376 if(
ªs
Ë
	`äs_vÆue_de°roy
(res);

377  
NULL
;

378 
	}
}

381 
sim∂e_quîy_run
(
äs_vÆue_t
 *
ªs
,

382 (*
ˇŒback
)(c⁄° *
key
, c⁄° *
vÆue
))

384 
row_i
 = 0;

385 
cﬁs
 = 0;

386 
rows
 = 
	`DB_cou¡s
(
ªs
, &
cﬁs
);

387 
	`check
(
rows
 != -1, "ResultsáreÇotáÅable.");

389 if(
rows
 > 0) {

390 
row_i
 = 0;Ñow_ò< 
rows
;Ñow_i++) {

391 
	`DB_check
(
ªs
, 
row_i
, 3,

392 
äs_èg_numbî
, 
äs_èg_°rög
,Åns_tag_string);

394 
b°rög
 
key
 = 
	`DB_gë_as
(
ªs
, 
row_i
, 1, 
°rög
);

395 
b°rög
 
vÆue
 = 
	`DB_gë_as
(
ªs
, 
row_i
, 2, 
°rög
);

397 
rc
 = 
	`ˇŒback
(
	`bd©a
(
key
), bd©a(
vÆue
));

398 
	`check_debug
(
rc
 == 0, "Load callback failed.");

402  
row_i
;

403 
îr‹
:

405 
	}
}

407 
	$C⁄fig_lﬂd_mimëy≥s
()

409 
rc
 = -1;

410 
äs_vÆue_t
 *
ªs
 = 
CONFIG_MODULE
.
	`lﬂd_mimëy≥s
();

411 
	`check
(
	`äs_gë_ty≥
(
ªs
Ë=
äs_èg_li°
, "WrongÅype,Éxpected validÑows.");

413 
rc
 = 
	`sim∂e_quîy_run
(
ªs
, 
MIME_add_ty≥
);

414 
	`check
(
rc
 != -1, "Failedádding your settings,ÜookátÖreviousÉrrors for clues.");

416 
îr‹
:

417 if(
ªs
Ë
	`äs_vÆue_de°roy
(res);

418  
rc
;

419 
	}
}

422 
	$C⁄fig_lﬂd_£âögs
()

424 
äs_vÆue_t
 *
ªs
 = 
CONFIG_MODULE
.
	`lﬂd_£âögs
();

425 
rc
 = -1;

426 
	`check
(
	`äs_gë_ty≥
(
ªs
Ë=
äs_èg_li°
, "WrongÅype,Éxpected validÑows.");

427 
rc
 = 
	`sim∂e_quîy_run
(
ªs
, 
Sëtög_add
);

428 
	`check
(
rc
 != -1, "Failedádding your settings,ÜookátÖreviousÉrrors for clues.");

430 
îr‹
:

431 if(
ªs
Ë
	`äs_vÆue_de°roy
(res);

432  
rc
;

433 
	}
}

435 
	$C⁄fig_öô_db
(c⁄° *
∑th
)

437  
CONFIG_MODULE
.
	`öô
(
∑th
);

438 
	}
}

440 
	$C⁄fig_˛o£_db
()

442 
CONFIG_MODULE
.
	`˛o£
();

443 
	}
}

445 
	#SET_MODULE_FUNC
(
N
Ë
CONFIG_MODULE
.N = 
	`dlsym
(
lib
, "config_" #N);\

446 
	`check
(
CONFIG_MODULE
.
N
 !
NULL
, "C⁄fig moduÀ %†d€¢'àhavê™ " #N " fun˘i⁄.", 
lﬂd_∑th
);

	)

449 
	$C⁄fig_moduÀ_lﬂd
(c⁄° *
lﬂd_∑th
)

451 *
lib
 = 
	`dl›í
(
lﬂd_∑th
, 
RTLD_LAZY
 | 
RTLD_LOCAL
);

452 
	`check
(
lib
 !
NULL
, "FaûedÅÿlﬂd c⁄fig moduÀ %s: %s.", 
lﬂd_∑th
, 
	`dÀº‹
());

454 
	`SET_MODULE_FUNC
(
öô
);

455 
	`SET_MODULE_FUNC
(
˛o£
);

456 
	`SET_MODULE_FUNC
(
lﬂd_h™dÀr
);

457 
	`SET_MODULE_FUNC
(
lﬂd_¥oxy
);

458 
	`SET_MODULE_FUNC
(
lﬂd_dú
);

459 
	`SET_MODULE_FUNC
(
lﬂd_rouãs
);

460 
	`SET_MODULE_FUNC
(
lﬂd_ho°s
);

461 
	`SET_MODULE_FUNC
(
lﬂd_£rvî
);

462 
	`SET_MODULE_FUNC
(
lﬂd_mimëy≥s
);

463 
	`SET_MODULE_FUNC
(
lﬂd_£âögs
);

464 
	`SET_MODULE_FUNC
(
lﬂd_fûãrs
);

467 
îr‹
:

469 
	}
}

	@config/config.h

35 #i‚de‡
__c⁄fig_h__


36 
	#__c⁄fig_h__


	)

38 
	~"£rvî.h
"

40 
C⁄fig_öô_db
(c⁄° *
∑th
);

42 
Sîvî
 *
C⁄fig_lﬂd_£rvî
(c⁄° *
uuid
);

44 
C⁄fig_lﬂd_mimëy≥s
();

46 
C⁄fig_lﬂd_£âögs
();

48 
C⁄fig_˛o£_db
();

50 
C⁄fig_moduÀ_lﬂd
(c⁄° *
lﬂd_∑th
);

	@config/db.c

35 
	~<°dio.h
>

36 
	~<°dlib.h
>

37 
	~<sqlôe3.h
>

38 
	~"dbg.h
"

39 
	~"c⁄fig/db.h
"

40 
	~"as£π.h
"

41 
	~<°d¨g.h
>

42 
	~"äë°rögs_im∂.h
"

44 
sqlôe3
 *
	gCONFIG_DB
 = 
NULL
;

46 
	$DB_öô
(c⁄° *
∑th
)

48 
	`check
(
CONFIG_DB
 =
NULL
, "Must closeÅhe config db first,Åell Zed.");

49  
	`sqlôe3_›í
(
∑th
, &
CONFIG_DB
);

50 
îr‹
:

52 
	}
}

55 
	$DB_˛o£
()

57 if(
CONFIG_DB
) {

58 
	`sqlôe3_˛o£
(
CONFIG_DB
);

59 
CONFIG_DB
 = 
NULL
;

61 
	}
}

64 
ölöe
 
äs_vÆue_t
 *
	$DB_c⁄vît_cﬁumn
(
sqlôe3_°mt
 *
°mt
)

66 
cﬁ
 = 0;

67 
äs_vÆue_t
 *
ñ
 = 
NULL
;

68 
äs_vÆue_t
 *
row
 = 
	`äs_√w_li°
();

69 
	`check_mem
(
row
);

71 
cﬁ
 = 0; cﬁ < 
	`sqlôe3_cﬁumn_cou¡
(
°mt
); col++) {

72 
	`sqlôe3_cﬁumn_ty≥
(
°mt
, 
cﬁ
)) {

73 
SQLITE_INTEGER
:

74 
ñ
 = 
	`äs_√w_öãgî
(
	`sqlôe3_cﬁumn_öt
(
°mt
, 
cﬁ
));

76 
SQLITE_FLOAT
:

77 
ñ
 = 
	`äs_√w_Êﬂt
(
	`sqlôe3_cﬁumn_doubÀ
(
°mt
, 
cﬁ
));

79 
SQLITE_TEXT
:

80 
ñ
 = 
	`äs_∑r£_°rög
(

81 (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
°mt
, 
cﬁ
),

82 
	`sqlôe3_cﬁumn_byãs
(
°mt
, 
cﬁ
));

84 
SQLITE_BLOB
:

85 
ñ
 = 
	`äs_∑r£_°rög
(

86 
	`sqlôe3_cﬁumn_blob
(
°mt
, 
cﬁ
),

87 
	`sqlôe3_cﬁumn_byãs
(
°mt
, 
cﬁ
));

89 
SQLITE_NULL
:

90 
ñ
 = 
	`äs_gë_nuŒ
();

96 
	`check
(
ñ
 !
NULL
, "Gotá NULL forá column");

97 
	`äs_add_to_li°
(
row
, 
ñ
);

100  
row
;

102 
îr‹
:

103 if(
row
Ë
	`äs_vÆue_de°roy
(row);

104 if(
ñ
Ë
	`äs_vÆue_de°roy
(el);

105  
NULL
;

106 
	}
}

108 
	$DB_vÆid_schema
(
äs_vÆue_t
 *
ªs
, 
row
, 
ncﬁs
, ...)

110 
va_li°
 
¨gp
;

111 
	`va_°¨t
(
¨gp
, 
ncﬁs
);

112 
i
 = 0;

114 
	`check
(
	`äs_gë_ty≥
(
ªs
Ë=
äs_èg_li°
, "InvalidÑesult set, must beáÜist.");

115 
rows
 = 
	`d¨øy_íd
(
ªs
->
vÆue
.
li°
);

116 
	`check
(
rows
 != -1, "Result isn't ináÅable format.");

117 
	`check
(
row
 < 
rows
, "Row isÖastÉnd ofÑesult set: %d > %d",Ñow,Ñows);

120 
äs_vÆue_t
 *
row_d©a
 = 
	`d¨øy_gë
(
ªs
->
vÆue
.
li°
, 
row
);

123 
	`check
(
	`äs_gë_ty≥
(
row_d©a
Ë=
äs_èg_li°
, "InvÆidÑow %d, mu° bê®li°.", 
row
);

124 
cﬁs
 = 
	`d¨øy_íd
(
row_d©a
->
vÆue
.
li°
);

125 
	`check
(
cﬁs
 =
ncﬁs
, "Expected %d columns, butÑesult set has %d.", cols,Çcols);

127 
i
 = 0; i < 
ncﬁs
; i++) {

128 
äs_ty≥_èg
 
ex≥˘ög
 = 
	`va_¨g
(
¨gp
,Åns_type_tag);

129 
äs_vÆue_t
 *
˚Œ
 = 
	`DB_gë
(
ªs
, 
row
, 
i
);

130 
	`check
(
	`äs_gë_ty≥
(
˚Œ
Ë=
ex≥˘ög
,

131 "Row %d, Cﬁum¿%d ha†wr⁄gÅy≥.", 
row
, 
i
);

134 
	`va_íd
(
¨gp
);

136 
îr‹
:

138 
	`va_íd
(
¨gp
);

140 
	}
}

155 
äs_vÆue_t
 *
	$DB_exec
(c⁄° *
quîy
, ...)

157 
va_li°
 
¨gp
;

158 
	`va_°¨t
(
¨gp
, 
quîy
);

159 *
zEºMsg
 = 
NULL
;

160 
äs_vÆue_t
 *
ªs
 = 
NULL
;

161 
rc
 = 0;

162 
sqlôe3_°mt
 *
°mt
 = 
NULL
;

163 c⁄° *
sql_èû
 = 
NULL
;

164 *
sql
 = 
NULL
;

166 
	`check
(
CONFIG_DB
 !
NULL
, "The config database isÇot open.");

168 
sql
 = 
	`sqlôe3_vm¥ötf
(
quîy
, 
¨gp
);

169 
	`check_mem
(
sql
);

171 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
CONFIG_DB
, 
sql
, -1, &
°mt
, &
sql_èû
);

172 
	`check
(
rc
 =
SQLITE_OK
, "SQLÉº‹ \"%s\"át: '%s'", 
	`sqlôe3_îrmsg
(
CONFIG_DB
), 
sql_èû
);

176 
rc
 = 
	`sqlôe3_°ï
(
°mt
);

178 if(
rc
 =
SQLITE_DONE
) {

179 if(
	`sqlôe3_cﬁumn_cou¡
(
°mt
) == 0) {

181 
ªs
 = 
	`äs_gë_nuŒ
();

184 
ªs
 = 
	`äs_√w_li°
();

186 } if(
rc
 =
SQLITE_ROW
) {

188 
ªs
 = 
	`äs_√w_li°
();

191 
äs_vÆue_t
 *
row
 = 
	`DB_c⁄vît_cﬁumn
(
°mt
);

192 
	`check
(
row
 !
NULL
, "FaûedÅÿc⁄vîàDB cﬁum¿f‹ sql: '%s'", 
sql
);

193 
	`äs_add_to_li°
(
ªs
, 
row
);

194 } (
rc
 = 
	`sqlôe3_°ï
(
°mt
)Ë=
SQLITE_ROW
);

197 
	`check
(
rc
 !
SQLITE_ERROR
, "FaûuªÉxecutög sql: %s", 
	`sqlôe3_îrmsg
(
CONFIG_DB
));

199 
	`sqlôe3_‰ì
(
sql
);

200 
	`sqlôe3_föÆize
(
°mt
);

201 
	`va_íd
(
¨gp
);

202  
ªs
;

204 
îr‹
:

205 
	`va_íd
(
¨gp
);

206 if(
°mt
Ë
	`sqlôe3_föÆize
(stmt);

207 if(
zEºMsg
Ë
	`sqlôe3_‰ì
(zErrMsg);

208 if(
sql
Ë
	`sqlôe3_‰ì
(sql);

209 if(
ªs
Ë
	`äs_vÆue_de°roy
(res);

210  
NULL
;

211 
	}
}

218 
äs_vÆue_t
 *
	$DB_gë
(
äs_vÆue_t
 *
ªs
, 
row
, 
cﬁ
)

220 
	`check
(
	`äs_gë_ty≥
(
ªs
Ë=
äs_èg_li°
, "Result should beáÜist.");

221 
	`check
(
row
 < 
	`d¨øy_íd
(
ªs
->
vÆue
.
li°
),

222 "Row %dÖa°Énd o‡ªsu… sëÜígth: %d", 
row
,

223 
	`d¨øy_íd
(
ªs
->
vÆue
.
li°
));

225 
äs_vÆue_t
 *
r
 = 
	`d¨øy_gë
(
ªs
->
vÆue
.
li°
, 
row
);

226 
	`check
(
	`äs_gë_ty≥
(
r
Ë=
äs_èg_li°
, "Row %d should bê®li°.", 
row
);

227 
	`check
(
cﬁ
 < 
	`d¨øy_íd
(
r
->
vÆue
.
li°
),

228 "Cﬁum¿%dÖa°Énd o‡ªsu… sëÜígth: %d", 
cﬁ
,

229 
	`d¨øy_íd
(
r
->
vÆue
.
li°
));

231  
	`d¨øy_gë
(
r
->
vÆue
.
li°
, 
cﬁ
);

232 
îr‹
:

233  
NULL
;

234 
	}
}

242 
	$DB_cou¡s
(
äs_vÆue_t
 *
ªs
, *
cﬁs
)

244 
rows
 = 0;

246 if(
	`äs_gë_ty≥
(
ªs
Ë=
äs_èg_nuŒ
) {

247 *
cﬁs
 = 0;

249 
	`check
(
	`äs_gë_ty≥
(
ªs
Ë=
äs_èg_li°
, "Result should getáÜist.");

250 
rows
 = 
	`d¨øy_íd
(
ªs
->
vÆue
.
li°
);

252 if(
rows
) {

253 
äs_vÆue_t
 *
fú°_row
 = 
	`d¨øy_gë
(
ªs
->
vÆue
.
li°
, 0);

254 
	`check
(
	`äs_gë_ty≥
(
fú°_row
Ë=
äs_èg_li°
,

256 *
cﬁs
 = 
	`d¨øy_íd
(
fú°_row
->
vÆue
.
li°
);

258 *
cﬁs
 = 0;

262  
rows
;

263 
îr‹
:

265 
	}
}

268 
	$DB_œ°id
()

270  ()
	`sqlôe3_œ°_ö£π_rowid
(
CONFIG_DB
);

271 
	}
}

	@config/db.h

35 #i‚de‡
_db_h


36 
	#_db_h


	)

38 
	~<sqlôe3.h
>

39 
	~"äë°rögs.h
"

41 
DB_öô
(c⁄° *
∑th
);

43 
DB_˛o£
();

45 
äs_vÆue_t
 *
DB_exec
(c⁄° *
quîy
, ...);

47 
äs_vÆue_t
 *
DB_gë
—ns_vÆue_à*
ªs
, 
row
, 
cﬁ
);

49 
DB_cou¡s
(
äs_vÆue_t
 *
ªs
, *
cﬁs
);

51 
DB_vÆid_schema
(
äs_vÆue_t
 *
ªs
, 
row
, 
ncﬁs
, ...);

53 
DB_œ°id
();

55 
	#DB_gë_as
(
RES
, 
ROW
, 
COL
, 
TYPE
Ë(
	`DB_gë
((RES), (ROW), (COL))->
vÆue
.TYPE)

	)

57 
sqlôe3
 *
CONFIG_DB
;

59 
	#DB_check
(
RES
, 
ROW
, 
COLS
, ...Ë
	`check
(
	`DB_vÆid_schema
((RES), (ROW), (COLS), ##
__VA_ARGS__
), "InvÆid schem®f‹Ñow, should be: " #__VA_ARGS__)

	)

	@config/module.c

35 
	~"c⁄fig/moduÀ.h
"

36 
	~"c⁄fig/db.h
"

37 
	~"äë°rögs_im∂.h
"

39 
	$deÁu…_öô
(c⁄° *
∑th
)

41  
	`DB_öô
(
∑th
);

42 
	}
}

44 
	$deÁu…_˛o£
()

46 
	`DB_˛o£
();

47 
	}
}

49 
äs_vÆue_t
 *
	$deÁu…_lﬂd_h™dÀr
(
h™dÀr_id
)

51 c⁄° *
HANDLER_QUERY
 = "SELECT id, send_spec, send_ident,Ñecv_spec,Ñecv_ident,Ñaw_payload,Örotocol FROM handler WHERE id=%d";

52  
	`DB_exec
(
HANDLER_QUERY
, 
h™dÀr_id
);

53 
	}
}

55 
äs_vÆue_t
 *
	$deÁu…_lﬂd_¥oxy
(
¥oxy_id
)

57 c⁄° *
PROXY_QUERY
 = "SELECT id,áddr,Öort FROMÖroxy WHERE id=%d";

58  
	`DB_exec
(
PROXY_QUERY
, 
¥oxy_id
);

59 
	}
}

61 
äs_vÆue_t
 *
	$deÁu…_lﬂd_dú
(
dú_id
)

63 c⁄° *
DIR_QUERY
 = "SELECT id, base, index_file, default_ctype, cache_ttl, whitelist FROM directory WHERE id=%d";

64  
	`DB_exec
(
DIR_QUERY
, 
dú_id
);

65 
	}
}

67 
äs_vÆue_t
 *
	$deÁu…_lﬂd_rouãs
(
ho°_id
, 
£rvî_id
)

69 c⁄° *
ROUTE_QUERY
 = "SELECTÑoute.id,Ñoute.path,Ñoute.target_id,Ñoute.target_type "

73  
	`DB_exec
(
ROUTE_QUERY
, 
ho°_id
, 
£rvî_id
);

74 
	}
}

76 
äs_vÆue_t
 *
	$deÁu…_lﬂd_ho°s
(
£rvî_id
)

78 c⁄° *
HOST_QUERY
 = "SELECT id,Çame, matching, server_id FROM host WHERE server_id = %d";

79  
	`DB_exec
(
HOST_QUERY
, 
£rvî_id
);

80 
	}
}

82 
äs_vÆue_t
 *
	$deÁu…_lﬂd_£rvî
(c⁄° *
uuid
)

84 c⁄° *
SERVER_QUERY
 = "SELECT id, uuid, default_host, bind_addr,Öort, chroot,áccess_log,Érror_log,Öid_file, use_ssl FROM server WHERE uuid=%Q";

86 
äs_vÆue_t
 *
ªt
 = 
	`DB_exec
(
SERVER_QUERY
, 
uuid
);

87 if(
ªt
 =
NULL
 || 
	`äs_gë_ty≥
‘ëË!
äs_èg_li°
 ||Ñë->
vÆue
.
li°
->
íd
 < 1)

88  
ªt
;

90 
äs_vÆue_t
 *
c⁄åﬁ_p‹t
;

91 
äs_vÆue_t
 *
ªt2
 = 
	`DB_exec
("SELECT c⁄åﬁ_p‹àFROM sîvî WHERE uuid=%Q", 
uuid
);

92 if(
ªt2
 !
NULL
 && 
	`äs_gë_ty≥
‘ë2Ë=
äs_èg_li°
 &&Ñë2->
vÆue
.
li°
->
íd
 > 0) {

93 
äs_vÆue_t
 *
row
 = (äs_vÆue_à*)
	`d¨øy_fú°
(
ªt2
->
vÆue
.
li°
);

94 
c⁄åﬁ_p‹t
 = (
äs_vÆue_t
 *)
	`d¨øy_fú°
(
row
->
vÆue
.
li°
);

95 
	`d¨øy_ªmove
(
row
->
vÆue
.
li°
, 0);

96 
	`äs_vÆue_de°roy
(
ªt2
);

98 
c⁄åﬁ_p‹t
 = 
	`äs_∑r£_°rög
("", 0);

101 
	`äs_ö£π_to_li°
((
äs_vÆue_t
 *)
	`d¨øy_fú°
(
ªt
->
vÆue
.
li°
), 9, 
c⁄åﬁ_p‹t
);

103  
ªt
;

104 
	}
}

107 
äs_vÆue_t
 *
	$deÁu…_lﬂd_mimëy≥s
()

109 c⁄° *
MIME_QUERY
 = "SELECT id,Éxtension, mimetype FROM mimetype";

110  
	`DB_exec
(
MIME_QUERY
);

111 
	}
}

113 
äs_vÆue_t
 *
	$deÁu…_lﬂd_£âögs
()

115 c⁄° *
SETTINGS_QUERY
 = "SELECT id, key, value FROM setting";

116  
	`DB_exec
(
SETTINGS_QUERY
);

117 
	}
}

119 
äs_vÆue_t
 *
	$deÁu…_lﬂd_fûãrs
(
£rvî_id
)

121 c⁄° *
FILTER_QUERY
 = "SELECT id,Çame, settings FROM filter WHERE server_id = %d";

122  
	`DB_exec
(
FILTER_QUERY
, 
£rvî_id
);

123 
	}
}

125 
äs_vÆue_t
 *
	$deÁu…_lﬂd_xªque°s
(
£rvî_id
)

127 c⁄° *
FILTER_QUERY
 = "SELECT id,Çame, settings FROM xrequest WHERE server_id = %d";

128  
	`DB_exec
(
FILTER_QUERY
, 
£rvî_id
);

129 
	}
}

131 
C⁄figModuÀ
 
	gCONFIG_MODULE
 = {

132 .
öô
 = 
deÁu…_öô
,

133 .
	g˛o£
 = 
deÁu…_˛o£
,

134 .
	glﬂd_h™dÀr
 = 
deÁu…_lﬂd_h™dÀr
,

135 .
	glﬂd_¥oxy
 = 
deÁu…_lﬂd_¥oxy
,

136 .
	glﬂd_dú
 = 
deÁu…_lﬂd_dú
,

137 .
	glﬂd_rouãs
 = 
deÁu…_lﬂd_rouãs
,

138 .
	glﬂd_ho°s
 = 
deÁu…_lﬂd_ho°s
,

139 .
	glﬂd_£rvî
 = 
deÁu…_lﬂd_£rvî
,

140 .
	glﬂd_mimëy≥s
 = 
deÁu…_lﬂd_mimëy≥s
,

141 .
	glﬂd_£âögs
 = 
deÁu…_lﬂd_£âögs
,

142 .
	glﬂd_fûãrs
 = 
deÁu…_lﬂd_fûãrs
,

143 .
	glﬂd_xªque°s
 = 
deÁu…_lﬂd_xªque°s


	@config/module.h

1 #i‚de‡
_moduÀ_h


2 
	#_moduÀ_h


	)

4 
	~"äë°rögs.h
"

6 
	sC⁄figModuÀ
 {

7 (*
	möô
)(c⁄° *
	m∑th
);

8 (*
	m˛o£
)();

9 
	mäs_vÆue_t
 *(*
	mlﬂd_h™dÀr
)(
	mh™dÀr_id
);

10 
	mäs_vÆue_t
 *(*
	mlﬂd_¥oxy
)(
	m¥oxy_id
);

11 
	mäs_vÆue_t
 *(*
	mlﬂd_dú
)(
	mdú_id
);

12 
	mäs_vÆue_t
 *(*
	mlﬂd_rouãs
)(
	mho°_id
, 
	m£rvî_id
);

13 
	mäs_vÆue_t
 *(*
	mlﬂd_ho°s
)(
	m£rvî_id
);

14 
	mäs_vÆue_t
 *(*
	mlﬂd_fûãrs
)(
	m£rvî_id
);

15 
	mäs_vÆue_t
 *(*
	mlﬂd_xªque°s
)(
	m£rvî_id
);

16 
	mäs_vÆue_t
 *(*
	mlﬂd_£rvî
)(c⁄° *
	muuid
);

17 
	mäs_vÆue_t
 *(*
	mlﬂd_mimëy≥s
)();

18 
	mäs_vÆue_t
 *(*
	mlﬂd_£âögs
)();

19 } 
	tC⁄figModuÀ
;

21 
C⁄figModuÀ
 
CONFIG_MODULE
;

	@connection.c

34 
	~<as£π.h
>

35 
	~<sys/ty≥s.h
>

36 
	~<sys/sockë.h
>

37 
	~<limôs.h
>

38 
	~<˘y≥.h
>

40 
	~"c⁄√˘i⁄.h
"

41 
	~"hâp11/hâp˛õ¡_∑r£r.h
"

42 
	~"dbg.h
"

43 
	~"evíts.h
"

44 
	~"ªgi°î.h
"

45 
	~"∑âîn.h
"

46 
	~"dú.h
"

47 
	~"ª•⁄£.h
"

48 
	~"mem/hÆloc.h
"

49 
	~"£âög.h
"

50 
	~"log.h
"

51 
	~"u∂ﬂd.h
"

52 
	~"fûãr.h
"

53 
	~"websockë.h
"

54 
	~"adt/d¨øy.h
"

55 
	~"hódîs.h
"

57 
ègb°rög
 
	gPING_PATTERN
 = 
bsSètic
("@[a-z/]- {\"type\":\\s*\"ping\"}");

59 
ègb°rög
 
	gPOLICY_XML_REQUEST
 = 
bsSètic
("<policy-file-request");

61 
	gMAX_CONTENT_LENGTH
 = 20 * 1024;

62 
	gBUFFER_SIZE
 = 4 * 1024;

63 
	gCONNECTION_STACK
 = 32 * 1024;

64 
	gCLIENT_READ_RETRIES
 = 5;

66 
	gMAX_WS_LENGTH
 = 256 * 1024;

69 
ölöe
 
	$C⁄√˘i⁄_backíd_evít
(
Backíd
 *
found
, 
C⁄√˘i⁄
 *
c⁄n
)

71 
found
->
ty≥
) {

72 
BACKEND_HANDLER
:

73  
HANDLER
;

74 
BACKEND_DIR
:

75  
DIRECTORY
;

76 
BACKEND_PROXY
:

77  
PROXY
;

79 
	`îr‹_ª•⁄£
(
c⁄n
, 501, "InvÆid backídÅy≥: %d", 
found
->
ty≥
);

82 
îr‹
:

83  
CLOSE
;

84 
	}
}

87 
	$C⁄√˘i⁄_dñivî_íqueue
(
C⁄√˘i⁄
 *
c⁄n
, 
dñivî_fun˘i⁄
 
f
,

88 
äs_vÆue_t
 *
d
)

90 
	`check_debug
(
c⁄n
->
dñivîPo°
-c⁄n->
dñivîAck
 < 
DELIVER_OUTSTANDING_MSGS
, "Too many outstanding messages") ;

91 
	`check_debug
(
c⁄n
->
dñivîTaskSètus
==
DT_RUNNING
, "CannotÉnqueue, deliverÅaskÇotÑunning");

92 
c⁄n
->
dñivîRög
[c⁄n->
dñivîPo°
%
DELIVER_OUTSTANDING_MSGS
].
dñivî
=
f
;

93 
c⁄n
->
dñivîRög
[c⁄n->
dñivîPo°
%
DELIVER_OUTSTANDING_MSGS
].
d©a
=
d
;

94 
c⁄n
->
dñivîPo°
++;

95 
	`èskwakeup
(&
c⁄n
->
dñivîRídez
);

98 
îr‹
:

100 
	}
}

102 
ölöe
 
	$C⁄√˘i⁄_dñivî_dequeue
(
C⁄√˘i⁄
 *
c⁄n
, 
Dñivî_mesßge
 *
m
)

105 if(
c⁄n
->
dñivîPo°
-c⁄n->
dñivîAck
) {

106 *
m
 = 
c⁄n
->
dñivîRög
[c⁄n->
dñivîAck
++%
DELIVER_OUTSTANDING_MSGS
];

109 
	`èsk¶ìp
(&
c⁄n
->
dñivîRídez
);

111 
	}
}

113 
	$c⁄√˘i⁄_£nd_sockë_ª•⁄£
(
C⁄√˘i⁄
 *
c⁄n
)

115 
	`check
(
	`Re•⁄£_£nd_sockë_pﬁicy
(
c⁄n
) > 0, "FailedÅo send Flash cross domainÖolicy.");

117 
îr‹
:

118  
CLOSE
;

119 
	}
}

122 
	$c⁄√˘i⁄_rouã_ªque°
(
C⁄√˘i⁄
 *
c⁄n
)

124 
Ho°
 *
ho°
 = 
NULL
;

125 
Rouã
 *
rouã
 = 
NULL
;

127 
b°rög
 
∑th
 = 
	`Reque°_∑th
(
c⁄n
->
ªq
);

128 
	`check_debug
(
∑th
 !
NULL
, "NoÖath given, inÑequest, ignoring.");

130 
Sîvî
 *
£rvî
 = 
	`Sîvî_queue_œã°
();

131 
	`check
(
£rvî
 !
NULL
, "No server inÅhe server queue,Åell Zed.");

133 if(
c⁄n
->
ªq
->
ho°_«me
) {

134 
ho°
 = 
	`Sîvî_m©ch_backíd
(
£rvî
, 
c⁄n
->
ªq
->
ho°_«me
);

136 
ho°
 = 
£rvî
->
deÁu…_ho°
;

139 
	`îr‹_u∆ess
(
ho°
, 
c⁄n
, 404, "Reque° f‹á ho° wêd⁄'àhavêªgi°îed: %s", 
	`bd©a
(c⁄n->
ªq
->
ho°_«me
));

141 
Backíd
 *
found
 = 
	`Ho°_m©ch_backíd
(
ho°
, 
∑th
, &
rouã
);

142 
	`îr‹_u∆ess
(
found
, 
c⁄n
, 404, "H™dÀ∏nŸ found: %s", 
	`bd©a
(
∑th
));

144 
	`Reque°_£t_a˘i⁄
(
c⁄n
->
ªq
, 
found
);

146 
c⁄n
->
ªq
->
èrgë_ho°
 = 
ho°
;

147 
c⁄n
->
ªq
->
∑âîn
 = 
rouã
->pattern;

148 
c⁄n
->
ªq
->
¥efix
 = 
rouã
->prefix;

150  
	`C⁄√˘i⁄_backíd_evít
(
found
, 
c⁄n
);

152 
îr‹
:

153  
CLOSE
;

154 
	}
}

158 
	$c⁄√˘i⁄_msg_to_h™dÀr
(
C⁄√˘i⁄
 *
c⁄n
)

160 
H™dÀr
 *
h™dÀr
 = 
	`Reque°_gë_a˘i⁄
(
c⁄n
->
ªq
, handler);

161 
rc
 = 0;

162 
hódî_Àn
 = 
	`Reque°_hódî_Àngth
(
c⁄n
->
ªq
);

164 
body_Àn
 = 
	`Reque°_c⁄ã¡_Àngth
(
c⁄n
->
ªq
);

166 
	`check
(
h™dÀr
, "JSONÑequest doesn't matchány handler: %s",

167 
	`bd©a
(
	`Reque°_∑th
(
c⁄n
->
ªq
)));

169 if(
	`∑âîn_m©ch
(
	`IOBuf_°¨t
(
c⁄n
->
iob
), 
hódî_Àn
 + 
body_Àn
, 
	`bd©a
(&
PING_PATTERN
))) {

170 
	`Regi°î_pög
(
	`IOBuf_fd
(
c⁄n
->
iob
));

172 
	`check
(
body_Àn
 >= 0, "ParsingÉrror, bodyÜengthÉnded up being: %d", body_len);

173 
b°rög
 
∑ylﬂd
 = 
NULL
;

175 if(
h™dÀr
->
¥Ÿocﬁ
 =
HANDLER_PROTO_TNET
) {

176 
∑ylﬂd
 = 
	`Reque°_to_äë°rög
(
c⁄n
->
ªq
, 
h™dÀr
->
£nd_idít
,

177 
	`IOBuf_fd
(
c⁄n
->
iob
), 
	`IOBuf_°¨t
(c⁄n->iobË+ 
hódî_Àn
,

178 
body_Àn
 - 1,
c⁄n
, 
NULL
);

179 } if(
h™dÀr
->
¥Ÿocﬁ
 =
HANDLER_PROTO_JSON
) {

180 
∑ylﬂd
 = 
	`Reque°_to_∑ylﬂd
(
c⁄n
->
ªq
, 
h™dÀr
->
£nd_idít
,

181 
	`IOBuf_fd
(
c⁄n
->
iob
), 
	`IOBuf_°¨t
(c⁄n->iobË+ 
hódî_Àn
,

182 
body_Àn
 - 1,
c⁄n
, 
NULL
);

184 
	`£¡öñ
("InvÆidÖrŸocﬁÅy≥: %d", 
h™dÀr
->
¥Ÿocﬁ
);

187 
	`debug
("SENT: %s", 
	`bd©a
(
∑ylﬂd
));

188 
	`check
(
∑ylﬂd
 !
NULL
, "FailedÅo generateÖayload.");

189 
	`check
(
h™dÀr
->
£nd_sockë
 !
NULL
, "Handler socket is NULL,Åell Zed.");

191 
rc
 = 
	`H™dÀr_dñivî
(
h™dÀr
->
£nd_sockë
, 
	`bd©a
(
∑ylﬂd
), 
	`bÀngth
(payload));

192 
	`‰ì
(
∑ylﬂd
);

194 
	`check
(
rc
 =0, "FaûedÅÿdñivîÅÿh™dÀr: %s", 
	`bd©a
(
	`Reque°_∑th
(
c⁄n
->
ªq
)));

198 
	`check
(
	`IOBuf_ªad_commô
(
c⁄n
->
iob
, 
hódî_Àn
 + 
body_Àn
) != -1, "Final commit failed.");

200  
REQ_SENT
;

202 
îr‹
:

203  
CLOSE
;

204 
	}
}

206 
	#CERT_FINGERPRINT_SIZE
 20

	)

208 
ègb°rög
 
	gPEER_CERT_SHA1_KEY
 = 
bsSètic
("PEER_CERT_SHA1");

210 
	$C⁄√˘i⁄_fögî¥öt_‰om_˚π
(
C⁄√˘i⁄
 *
c⁄n
)

212 c⁄° 
x509_¸t
* 
_x509P
 = 
	`s¶_gë_≥î_˚π
(&
c⁄n
->
iob
->
s¶
);

213 
i
 = 0;

215 
	`debug
("Connection_fingerprint_from_cert:Öeer_cert: %016lX:Åag=%dÜength=%ld",

216 (Ë
_x509P
,

217 
_x509P
 ? _x509P->
øw
.
èg
 : -1,

218 
_x509P
 ? _x509P->
øw
.
Àn
 : -1);

220 i‡(
_x509P
 !
NULL
 && _x509P->
øw
.
Àn
 > 0) {

221 
sha1_c⁄ãxt
 
˘x
;

222 
sha1sum
[
CERT_FINGERPRINT_SIZE
 + 1] = {0};

224 
	`sha1_°¨ts
(&
˘x
);

225 
	`sha1_upd©e
(&
˘x
, 
_x509P
->
øw
.
p
, _x509P->øw.
Àn
);

226 
	`sha1_föish
(&
˘x
, 
sha1sum
);

228 
b°rög
 
hex
 = 
	`b‰omc°r
("");

229 
i
 = 0; i < ()(
sha1sum
); i++) {

230 
	`bf‹m©a
(
hex
, "%02X", 
sha1sum
[
i
]);

233 
	`Reque°_£t
(
c⁄n
->
ªq
, &
PEER_CERT_SHA1_KEY
, 
hex
, 1);

235 
	}
}

237 
	$C⁄√˘i⁄_£nd_to_h™dÀr
(
C⁄√˘i⁄
 *
c⁄n
, 
H™dÀr
 *
h™dÀr
, *
body
, 
c⁄ã¡_Àn
, 
hash_t
 *
Æthódîs
)

239 
rc
 = 0;

240 
b°rög
 
∑ylﬂd
 = 
NULL
;

242 if(
c⁄n
->
iob
->
u£_s¶
)

243 
	`C⁄√˘i⁄_fögî¥öt_‰om_˚π
(
c⁄n
);

245 
	`îr‹_u∆ess
(
h™dÀr
->
ru¬ög
, 
c⁄n
, 404,

246 "H™dÀ∏shutdow¿whûêåyögÅÿdñivî: %s", 
	`bd©a
(
	`Reque°_∑th
(
c⁄n
->
ªq
)));

248 if(
h™dÀr
->
¥Ÿocﬁ
 =
HANDLER_PROTO_TNET
) {

249 
∑ylﬂd
 = 
	`Reque°_to_äë°rög
(
c⁄n
->
ªq
, 
h™dÀr
->
£nd_idít
,

250 
	`IOBuf_fd
(
c⁄n
->
iob
), 
body
, 
c⁄ã¡_Àn
, c⁄n, 
Æthódîs
);

251 } if(
h™dÀr
->
¥Ÿocﬁ
 =
HANDLER_PROTO_JSON
) {

252 
∑ylﬂd
 = 
	`Reque°_to_∑ylﬂd
(
c⁄n
->
ªq
, 
h™dÀr
->
£nd_idít
,

253 
	`IOBuf_fd
(
c⁄n
->
iob
), 
body
, 
c⁄ã¡_Àn
, c⁄n, 
Æthódîs
);

255 
	`£¡öñ
("InvÆidÖrŸocﬁÅy≥: %d", 
h™dÀr
->
¥Ÿocﬁ
);

258 
	`check
(
∑ylﬂd
, "FailedÅo createÖayload forÑequest.");

259 
	`debug
("HTTP TO HANDLER: %.*s", 
	`bÀngth
(
∑ylﬂd
Ë- 
c⁄ã¡_Àn
, 
	`bd©a
(payload));

261 
rc
 = 
	`H™dÀr_dñivî
(
h™dÀr
->
£nd_sockë
, 
	`bd©a
(
∑ylﬂd
), 
	`bÀngth
(payload));

262 
	`‰ì
(
∑ylﬂd
);Öaylﬂd = 
NULL
;

264 
	`îr‹_u∆ess
(
rc
 !-1, 
c⁄n
, 502, "FailedÅo deliverÅo handler: %s",

265 
	`bd©a
(
	`Reque°_∑th
(
c⁄n
->
ªq
)));

269 
îr‹
:

270 if(
∑ylﬂd
Ë
	`‰ì
(payload);

272 
	}
}

275 
	$Reque°_is_websockë
(
Reque°
 *
ªq
)

277 
b°rög
 
upgøde
,
c⁄√˘i⁄
;

279 if(
ªq
->
ws_Êags
 != 0)

281  
ªq
->
ws_Êags
 == 1;

284 i‡(
	`Reque°_gë
(
ªq
, &
WS_SEC_WS_KEY
Ë!=
NULL
 &&

285 
	`Reque°_gë
(
ªq
, &
WS_SEC_WS_VER
Ë!=
NULL
 &&

286 
	`Reque°_gë
(
ªq
, &
WS_HOST
Ë!=
NULL
 &&

287 (
upgøde
 = 
	`Reque°_gë
(
ªq
, &
WS_UPGRADE
)Ë!
NULL
 &&

288 (
c⁄√˘i⁄
 = 
	`Reque°_gë
(
ªq
, &
WS_CONNECTION
)Ë!
NULL
)

290 i‡(
BSTR_ERR
 !
	`bö°rˇ£Àss
(
c⁄√˘i⁄
,0,&
WS_UPGRADE
) &&

291 !
	`b°rcmp
(
upgøde
,&
WS_WEBSOCKET
))

293 
ªq
->
ws_Êags
 =1;

297 
ªq
->
ws_Êags
 =2;

299 
	}
}

301 
ölöe
 
	$is_websockë
(
C⁄√˘i⁄
 *
c⁄n
)

303  
	`Reque°_is_websockë
(
c⁄n
->
ªq
);

304 
	}
}

306 
	$c⁄√˘i⁄_hâp_to_h™dÀr
(
C⁄√˘i⁄
 *
c⁄n
)

308 
c⁄ã¡_Àn
 = 
	`Reque°_c⁄ã¡_Àngth
(
c⁄n
->
ªq
);

309 
rc
 = 0;

310 *
body
 = 
NULL
;

312 
H™dÀr
 *
h™dÀr
 = 
	`Reque°_gë_a˘i⁄
(
c⁄n
->
ªq
, handler);

313 
	`îr‹_u∆ess
(
h™dÀr
, 
c⁄n
, 404, "Nÿa˘i⁄ f‹Ñeque°: %s", 
	`bd©a
(
	`Reque°_∑th
(c⁄n->
ªq
)));

315 
b°rög
 
ex≥˘s
 = 
	`Reque°_gë
(
c⁄n
->
ªq
, &
HTTP_EXPECT
);

317 i‡(
ex≥˘s
 !
NULL
) {

318 i‡(
	`bi£qc°r
(
ex≥˘s
, "100-continue")) {

319 
	`Re•⁄£_£nd_°©us
(
c⁄n
, &
HTTP_100
);

321 
	`Re•⁄£_£nd_°©us
(
c⁄n
, &
HTTP_417
);

322 
	`log_öfo
("Clõ¡Ñeque°ed unsuµ‹ãdÉx≥˘©i⁄: %s.", 
	`bd©a
(
ex≥˘s
));

323 
îr‹
;

328 
	`check
(
	`IOBuf_ªad_commô
(
c⁄n
->
iob
, 
	`Reque°_hódî_Àngth
(c⁄n->
ªq
)) != -1, "Finaly commit failed streamingÅhe connectionÅo http handlers.");

330 if(
	`is_websockë
(
c⁄n
)) {

331 
b°rög
 
wsKey
 = 
	`Reque°_gë
(
c⁄n
->
ªq
, &
WS_SEC_WS_KEY
);

332 
b°rög
 
ª•⁄£

	`websockë_chÆÀnge
(
wsKey
);

333 
c⁄n
->
h™dÀr
 = handler;

336 
	`bde°roy
(
c⁄n
->
ªq
->
ªque°_mëhod
);

337 
c⁄n
->
ªq
->
ªque°_mëhod
=
	`b‰omc°r
("WEBSOCKET_HANDSHAKE");

338 
	`C⁄√˘i⁄_£nd_to_h™dÀr
(
c⁄n
, 
h™dÀr
, 
	`bd©a
(
ª•⁄£
), 
	`bÀngth
‘e•⁄£), 
NULL
);

339 
	`bde°roy
(
ª•⁄£
);

341 
	`bde°roy
(
c⁄n
->
ªq
->
ªque°_mëhod
);

342 
c⁄n
->
ªq
->
ªque°_mëhod
=
	`b‰omc°r
("WEBSOCKET");

343  
REQ_SENT
;

346 if(
c⁄ã¡_Àn
 == 0) {

347 
body
 = "";

348 
rc
 = 
	`C⁄√˘i⁄_£nd_to_h™dÀr
(
c⁄n
, 
h™dÀr
, 
body
, 
c⁄ã¡_Àn
, 
NULL
);

349 
	`check_debug
(
rc
 == 0, "FailedÅo deliverÅoÅhe handler.");

350 } if(
c⁄ã¡_Àn
 > 
MAX_CONTENT_LENGTH
) {

351 if(
	`Sëtög_gë_öt
("upload.stream", 0)) {

352 
rc
 = 
	`U∂ﬂd_°ªam
(
c⁄n
, 
h™dÀr
, 
c⁄ã¡_Àn
);

354 
rc
 = 
	`U∂ﬂd_fûe
(
c⁄n
, 
h™dÀr
, 
c⁄ã¡_Àn
);

356 
	`check
(
rc
 == 0, "FailedÅo upload file.");

358 
	`debug
("READ ALL CALLED wôh c⁄ã¡_Àn: %d,ánd MAX_CONTENT_LENGTH: %d", 
c⁄ã¡_Àn
, 
MAX_CONTENT_LENGTH
);

360 
body
 = 
	`IOBuf_ªad_Æl
(
c⁄n
->
iob
, 
c⁄ã¡_Àn
, 
CLIENT_READ_RETRIES
);

361 
	`check
(
body
 !
NULL
, "Client closedÅhe connection during upload.");

363 
rc
 = 
	`C⁄√˘i⁄_£nd_to_h™dÀr
(
c⁄n
, 
h™dÀr
, 
body
, 
c⁄ã¡_Àn
, 
NULL
);

364 
	`check_debug
(
rc
 == 0, "FailedÅo deliverÅoÅhe handler.");

367 
	`Log_ªque°
(
c⁄n
, 200, 
c⁄ã¡_Àn
);

369  
REQ_SENT
;

371 
îr‹
:

372  
CLOSE
;

373 
	}
}

376 
	$c⁄√˘i⁄_hâp_to_dúe˘‹y
(
C⁄√˘i⁄
 *
c⁄n
)

378 
Dú
 *
dú
 = 
	`Reque°_gë_a˘i⁄
(
c⁄n
->
ªq
, dir);

380 
rc
 = 
	`Dú_£rve_fûe
(
dú
, 
c⁄n
->
ªq
, conn);

381 
	`check_debug
(
rc
 =0, "FaûedÅÿ£rvêfûe: %s", 
	`bd©a
(
	`Reque°_∑th
(
c⁄n
->
ªq
)));

383 
	`check
(
	`IOBuf_ªad_commô
(
c⁄n
->
iob
,

384 
	`Reque°_hódî_Àngth
(
c⁄n
->
ªq
Ë+ 
	`Reque°_c⁄ã¡_Àngth
(conn->req)) != -1, "Finaly commit failed sending from directory.");

387 
	`Log_ªque°
(
c⁄n
, c⁄n->
ªq
->
°©us_code
, c⁄n->ªq->
ª•⁄£_size
);

389 if(
c⁄n
->
˛o£
) {

390  
CLOSE
;

392  
RESP_SENT
;

395 
îr‹
:

396  
CLOSE
;

397 
	}
}

402 
	$c⁄√˘i⁄_hâp_to_¥oxy
(
C⁄√˘i⁄
 *
c⁄n
)

404 
Proxy
 *
¥oxy
 = 
	`Reque°_gë_a˘i⁄
(
c⁄n
->
ªq
,Öroxy);

405 
	`check
(
¥oxy
 !
NULL
, "Should haveáÖroxy backend.");

407 
	`debug
("CONNECT TO: %s:%d", 
	`bd©a
(
¥oxy
->
£rvî
),Öroxy->
p‹t
);

409 
¥oxy_fd
 = 
	`√tdül
(1, 
	`bd©a
(
¥oxy
->
£rvî
),Öroxy->
p‹t
);

410 
	`check
(
¥oxy_fd
 != -1, "FailedÅo connectÅoÖroxy backend %s:%d",

411 
	`bd©a
(
¥oxy
->
£rvî
),Öroxy->
p‹t
);

413 if(!
c⁄n
->
¥oxy_iob
) {

414 
c⁄n
->
¥oxy_iob
 = 
	`IOBuf_¸óã
(
BUFFER_SIZE
, 
¥oxy_fd
, 
IOBUF_SOCKET
);

415 
	`check_mem
(
c⁄n
->
¥oxy_iob
);

418 if(!
c⁄n
->
˛õ¡
) {

419 
c⁄n
->
˛õ¡
 = 
	`ˇŒoc
((
hâp˛õ¡_∑r£r
), 1);

420 
	`check_mem
(
c⁄n
->
˛õ¡
);

423  
CONNECT
;

425 
îr‹
:

426  
FAILED
;

427 
	}
}

429 
	$c⁄√˘i⁄_¥oxy_dñivî
(
C⁄√˘i⁄
 *
c⁄n
)

431 
rc
 = 0;

432 
tŸÆ_Àn
 = 
	`Reque°_hódî_Àngth
(
c⁄n
->
ªq
Ë+ 
	`Reque°_c⁄ã¡_Àngth
(conn->req);

434 *
buf
 =
NULL
;

437 i‡(
c⁄n
->
ªq
->
√w_hódî
) {

438 
	`log_öfo
("In Proxy.");

439 
	`IOBuf_ªad_Æl
(
c⁄n
->
iob
,
	`Reque°_hódî_Àngth
(c⁄n->
ªq
),
CLIENT_READ_RETRIES
);

441 
buf
 = 
	`IOBuf_ªad_Æl
(
c⁄n
->
iob
, 
	`Reque°_c⁄ã¡_Àngth
(c⁄n->
ªq
),

442 
CLIENT_READ_RETRIES
);

443 
	`check
(
buf
 !
NULL
, "FailedÅoÑead fromÅhe client socketÅoÖroxy.");

445 
rc
 = 
	`IOBuf_£nd
(
c⁄n
->
¥oxy_iob
, 
	`bd©a
(c⁄n->
ªq
->
√w_hódî
),

446 
	`bÀngth
(
c⁄n
->
ªq
->
√w_hódî
));

447 
	`check
(
rc
 > 0, "FailedÅo sendÅoÖroxy.");

449 if(
	`Reque°_c⁄ã¡_Àngth
(
c⁄n
->
ªq
) > 0) {

450 
rc
 = 
	`IOBuf_£nd
(
c⁄n
->
¥oxy_iob
, 
	`IOBuf_°¨t
(c⁄n->
iob
),

451 
	`Reque°_c⁄ã¡_Àngth
(
c⁄n
->
ªq
));

452 
	`check
(
rc
 > 0, "FailedÅo sendÅoÖroxy.");

456 
buf
 = 
	`IOBuf_ªad_Æl
(
c⁄n
->
iob
, 
tŸÆ_Àn
, 
CLIENT_READ_RETRIES
);

457 
	`check
(
buf
 !
NULL
, "FailedÅoÑead fromÅhe client socketÅoÖroxy.");

459 
rc
 = 
	`IOBuf_£nd
(
c⁄n
->
¥oxy_iob
, 
	`IOBuf_°¨t
(c⁄n->
iob
), 
tŸÆ_Àn
);

460 
	`check
(
rc
 > 0, "FailedÅo sendÅoÖroxy.");

463  
REQ_SENT
;

465 
îr‹
:

466  
REMOTE_CLOSE
;

467 
	}
}

469 
	$c⁄√˘i⁄_¥oxy_ª∂y_∑r£
(
C⁄√˘i⁄
 *
c⁄n
)

471 
rc
 = 0;

472 
tŸÆ
 = 0;

473 
Proxy
 *
¥oxy
 = 
	`Reque°_gë_a˘i⁄
(
c⁄n
->
ªq
,Öroxy);

474 
	`check
(
¥oxy
 !
NULL
, "Proxy is NULL inÑeply_parse?")

475 
hâp˛õ¡_∑r£r
 *
˛õ¡
 = 
c⁄n
->client;

477 
rc
 = 
	`Proxy_ªad_™d_∑r£
(
c⁄n
);

478 
	`check
(
rc
 != -1, "FailedÅoÑead fromÖroxy server: %s:%d",

479 
	`bd©a
(
¥oxy
->
£rvî
),Öroxy->
p‹t
);

481 if(
˛õ¡
->
chunked
) {

483 
rc
 = 
	`IOBuf_°ªam
(
c⁄n
->
¥oxy_iob
, c⁄n->
iob
, 
˛õ¡
->
body_°¨t
);

484 
	`check_debug
(
rc
 != -1, "Failed streaming headerÅo client.");

489 
rc
 = 
	`Proxy_°ªam_chunks
(
c⁄n
);

490 
	`check
(
rc
 != -1, "FailedÅo stream chunkedÉncodingÅo client.");

491 } 
rc
 == 0);

493 } if(
˛õ¡
->
c⁄ã¡_Àn
 >= 0) {

494 
tŸÆ
 = 
˛õ¡
->
body_°¨t
 + clõ¡->
c⁄ã¡_Àn
;

495 
rc
 = 
	`IOBuf_°ªam
(
c⁄n
->
¥oxy_iob
, c⁄n->
iob
, 
tŸÆ
);

496 
	`check
(
rc
 != -1, "Failed streamingÇon-chunkedÑesponse.");

497 } if(
˛õ¡
->
°©us
 == 204 || client->status == 304) {

500 
rc
 = 
	`IOBuf_°ªam
(
c⁄n
->
¥oxy_iob
, c⁄n->
iob
, 
˛õ¡
->
body_°¨t
);

501 
	`check
(
rc
 != -1, "Failed streamingÇon-chunkedÑesponse.");

502 } if(
˛õ¡
->
˛o£
 || clõ¡->
c⁄ã¡_Àn
 == -1) {

503 
	`debug
("ResponseÑequestedáÑead until close.");

504 
	`check
(
	`Proxy_°ªam_to_˛o£
(
c⁄n
) != -1, "Failed streamingÅo client.");

506 
	`£¡öñ
("ShouldÇotÑeachÅhis code, Tell Zed.");

509 
	`Log_ªque°
(
c⁄n
, 
˛õ¡
->
°©us
, clõ¡->
c⁄ã¡_Àn
);

511 if(
˛õ¡
->
˛o£
) {

512  
REMOTE_CLOSE
;

514  
REQ_RECV
;

517 
îr‹
:

518  
FAILED
;

519 
	}
}

522 
	$c⁄√˘i⁄_¥oxy_ªq_∑r£
(
C⁄√˘i⁄
 *
c⁄n
)

524 
Rouã
 *
rouã
 = 
NULL
;

526 
rc
 = 0;

527 
Ho°
 *
èrgë_ho°
 = 
c⁄n
->
ªq
->target_host;

528 
Backíd
 *
ªq_a˘i⁄
 = 
c⁄n
->
ªq
->
a˘i⁄
;

530 
	`check_debug
(!
	`IOBuf_˛o£d
(
c⁄n
->
iob
), "Client closed, goodbye.");

532 
rc
 = 
	`C⁄√˘i⁄_ªad_hódî
(
c⁄n
, c⁄n->
ªq
);

534 
	`check_debug
(
rc
 > 0, "FailedÅoÑeadánother header.");

535 
	`îr‹_u∆ess
(
	`Reque°_is_hâp
(
c⁄n
->
ªq
), conn, 400,

539 
	`Reque°_£t
(
c⁄n
->
ªq
, &
HTTP_X_FORWARDED_FOR
, 
	`b‰omc°r
(c⁄n->
ªmŸe
), 1);

541 
Backíd
 *
found
 = 
	`Ho°_m©ch_backíd
(
èrgë_ho°
, 
	`Reque°_∑th
(
c⁄n
->
ªq
), &
rouã
);

542 
	`îr‹_u∆ess
(
found
, 
c⁄n
, 404,

543 "H™dÀ∏nŸ found: %s", 
	`bd©a
(
	`Reque°_∑th
(
c⁄n
->
ªq
)));

546 if(
found
 !
ªq_a˘i⁄
) {

547 
	`Reque°_£t_a˘i⁄
(
c⁄n
->
ªq
, 
found
);

548 
c⁄n
->
ªq
->
∑âîn
 = 
rouã
->pattern;

549 
c⁄n
->
ªq
->
¥efix
 = 
rouã
->prefix;

550  
	`C⁄√˘i⁄_backíd_evít
(
found
, 
c⁄n
);

552  
HTTP_REQ
;

555 
	`îr‹_ª•⁄£
(
c⁄n
, 500, "Invalid code branch,Åell Zed.");

556 
îr‹
:

557  
REMOTE_CLOSE
;

558 
	}
}

562 
	$c⁄√˘i⁄_¥oxy_Áûed
(
C⁄√˘i⁄
 *
c⁄n
)

564 
	`Re•⁄£_£nd_°©us
(
c⁄n
, &
HTTP_502
);

566  
CLOSE
;

567 
	}
}

570 
	$c⁄√˘i⁄_¥oxy_˛o£
(
C⁄√˘i⁄
 *
c⁄n
)

572 
	`IOBuf_de°roy
(
c⁄n
->
¥oxy_iob
);

573 
c⁄n
->
¥oxy_iob
 = 
NULL
;

575  
CLOSE
;

576 
	}
}

578 
ölöe
 
	$˛o£_‹_îr‹
(
C⁄√˘i⁄
 *
c⁄n
, 
√xt
)

581 
	`IOBuf_de°roy
(
c⁄n
->
¥oxy_iob
);

582 
c⁄n
->
¥oxy_iob
 = 
NULL
;

584 i‡(
	`IOBuf_fd
(
c⁄n
->
iob
) >= 0)

585 
	`check_debug
(
	`Regi°î_disc⁄√˘
(
	`IOBuf_fd
(
c⁄n
->
iob
)) != -1,

586 "Regi°î disc⁄√˘ didn'àw‹k f‹ %d", 
	`IOBuf_fd
(
c⁄n
->
iob
));

588 
îr‹
:

590  
√xt
;

591 
	}
}

594 
	$c⁄√˘i⁄_˛o£
(
C⁄√˘i⁄
 *
c⁄n
)

596  
	`˛o£_‹_îr‹
(
c⁄n
, 0);

597 
	}
}

601 
	$c⁄√˘i⁄_îr‹
(
C⁄√˘i⁄
 *
c⁄n
)

603  
	`˛o£_‹_îr‹
(
c⁄n
, 
CLOSE
);

604 
	}
}

606 
	$c⁄√˘i⁄_idítify_ªque°
(
C⁄√˘i⁄
 *
c⁄n
)

608 
√xt
 = 
CLOSE
;

610 if(
	`Reque°_is_xml
(
c⁄n
->
ªq
)) {

611 if(
	`bi£q
(
	`Reque°_∑th
(
c⁄n
->
ªq
), &
POLICY_XML_REQUEST
)) {

612 
	`debug
("XML POLICY CONNECTION: %s", 
	`bd©a
(
	`Reque°_∑th
(
c⁄n
->
ªq
)));

613 
c⁄n
->
ty≥
 = 
CONN_TYPE_SOCKET
;

614 
	`èsk«me
("XML");

615 
√xt
 = 
SOCKET_REQ
;

617 
	`debug
("XML MESSAGE");

618 
c⁄n
->
ty≥
 = 
CONN_TYPE_MSG
;

619 
	`èsk«me
("MSG");

620 
√xt
 = 
MSG_REQ
;

622 } if(
	`Reque°_is_js⁄
(
c⁄n
->
ªq
)) {

623 
	`debug
("JSON SOCKET MESSAGE");

624 
c⁄n
->
ty≥
 = 
CONN_TYPE_MSG
;

625 
	`èsk«me
("MSG");

626 
√xt
 = 
MSG_REQ
;

627 } if(
	`Reque°_is_websockë
(
c⁄n
->
ªq
)) {

628 
	`debug
("WEBSOCKET MESSAGE");

629 
c⁄n
->
ty≥
 = 
CONN_TYPE_SOCKET
;

630 
	`èsk«me
("WS");

631 
√xt
 = 
WS_REQ
;

632 } if(
	`Reque°_is_hâp
(
c⁄n
->
ªq
)) {

633 
	`debug
("HTTP MESSAGE");

634 
c⁄n
->
ty≥
 = 
CONN_TYPE_HTTP
;

635 
	`èsk«me
("HTTP");

636 
√xt
 = 
HTTP_REQ
;

638 
	`îr‹_ª•⁄£
(
c⁄n
, 500, "Invalid code branch,Åell Zed.");

641  
√xt
;

643 
îr‹
:

644  
CLOSE
;

646 
	}
}

649 
	$c⁄√˘i⁄_∑r£
(
C⁄√˘i⁄
 *
c⁄n
)

651 if(
	`C⁄√˘i⁄_ªad_hódî
(
c⁄n
, c⁄n->
ªq
) > 0) {

652 if(!
	`Sëtög_gë_öt
("no_clobber_xff", 0)) {

654 
	`Reque°_£t
(
c⁄n
->
ªq
, &
HTTP_X_FORWARDED_FOR
, 
	`b‰omc°r
(c⁄n->
ªmŸe
), 1);

656  
REQ_RECV
;

658  
CLOSE
;

660 
	}
}

664 
	$C⁄√˘i⁄_ªad_w•ackë
(
C⁄√˘i⁄
 *
c⁄n
)

666 
b°rög
 
∑ylﬂd
 = 
NULL
;

667 
ö¥ogFœgs
 = 0;

668 
key
[4];

669 
isC⁄åﬁ
;

670 
Êags
;

671 
uöt8_t
 *
d©aU
;

672 *
d©a
;

673 
avaû
;

674 
öt64_t
 
∑ckë_Àngth
;

675 
smÆÀr_∑ckë_Àngth
;

676 
hódî_Àngth
;

677 
i
;

678 
d©a_Àngth
;

679 
åõs
;

680 
rc
;

681 
fö
;

683 
agaö
:

684 
d©aU
 = 
NULL
;

685 
d©a
 = 
	`IOBuf_°¨t
(
c⁄n
->
iob
);

686 
avaû
 = 
	`IOBuf_avaû
(
c⁄n
->
iob
);

687 
∑ckë_Àngth
 = -1;

689 
åõs
 = 0; 
∑ckë_Àngth
 =-1 &&Årõ†< 8*
CLIENT_READ_RETRIES
;Åries++) {

690 if(
avaû
 > 0) {

691 
∑ckë_Àngth
 = 
	`Websockë_∑ckë_Àngth
((
uöt8_t
 *)
d©a
, 
avaû
);

694 if(
∑ckë_Àngth
 == -1) {

695 
d©a
 = 
	`IOBuf_ªad_some
(
c⁄n
->
iob
, &
avaû
);

696 
	`check_debug
(!
	`IOBuf_˛o£d
(
c⁄n
->
iob
), "Client closed duringÑead.");

699 
	`check
(
∑ckë_Àngth
 > 0,"ErrorÑeceiving websocketÖacket header.");

701 
	`check_debug
(
∑ckë_Àngth
 <
INT_MAX
,"WebsocketÖacketÜongerÅhan MAXINT.");

704 
smÆÀr_∑ckë_Àngth
 = ()
∑ckë_Àngth
;

708 
hódî_Àngth
=
	`Websockë_hódî_Àngth
((
uöt8_t
 *Ë
d©a
, 
avaû
);

709 
d©a_Àngth
=
smÆÀr_∑ckë_Àngth
-
hódî_Àngth
;

710 
d©aU
 = (
uöt8_t
 *)
	`IOBuf_ªad_Æl
(
c⁄n
->
iob
,
hódî_Àngth
,8*
CLIENT_READ_RETRIES
);

711 
	`mem˝y
(
key
,
d©aU
+
hódî_Àngth
-4,4);

713 
Êags
=
d©aU
[0];

714 i‡(
∑ylﬂd
==
NULL
) {

715 
ö¥ogFœgs
=
Êags
;

719 
fö
 = (
	`WS_fö
(
d©aU
));

720 
isC⁄åﬁ
=(
	`WS_is_c⁄åﬁ
(
d©aU
));

723 c⁄° *
îr‹
=
	`WS_vÆid©e_∑ckë
(
d©aU
,
∑ylﬂd
!=
NULL
);

724 
	`check
(
îr‹
==
NULL
,"%s",error);

727 
d©aU
 = (
uöt8_t
 *)
	`IOBuf_ªad_Æl
(
c⁄n
->
iob
,
d©a_Àngth
, 8*
CLIENT_READ_RETRIES
);

728 
	`check
(
d©aU
 !
NULL
, "Client closedÅhe connection during websocketÖacket.");

730 
i
=0;i<
d©a_Àngth
;++i) {

731 
d©aU
[
i
]^=
key
[i%4];

734 if(
isC⁄åﬁ
)

736 
	`Reque°_£t
(
c⁄n
->
ªq
,
	`b‰omc°r
("FLAGS"),
	`bf‹m©
("0x%X",
Êags
|0x80),1);

737 
rc
 = 
	`C⁄√˘i⁄_£nd_to_h™dÀr
(
c⁄n
, c⁄n->
h™dÀr
, (*)
d©aU
,
d©a_Àngth
, 
NULL
);

738 
	`check_debug
(
rc
 == 0, "FailedÅo deliverÅoÅhe handler.");

741 if(
fö
) {

742 
	`Reque°_£t
(
c⁄n
->
ªq
,
	`b‰omc°r
("FLAGS"),
	`bf‹m©
("0x%X",
ö¥ogFœgs
|0x80),1);

744 i‡(
∑ylﬂd
 =
NULL
) {

745 i‡(
fö
) {

746 
rc
 = 
	`C⁄√˘i⁄_£nd_to_h™dÀr
(
c⁄n
, c⁄n->
h™dÀr
, (*)
d©aU
,
d©a_Àngth
, 
NULL
);

747 
	`check_debug
(
rc
 == 0, "FailedÅo deliverÅoÅhe handler.");

750 
∑ylﬂd
 = 
	`blk2b°r
(
d©aU
,
d©a_Àngth
);

751 
	`check
(
∑ylﬂd
 !
NULL
,"Allocation failed");

754 
	`check
(
BSTR_OK
 =
	`bˇtblk
(
∑ylﬂd
,
d©aU
,
d©a_Àngth
), "Concatenation failed");

755 i‡(
fö
) {

756 
rc
 = 
	`C⁄√˘i⁄_£nd_to_h™dÀr
(
c⁄n
, c⁄n->
h™dÀr
, 
	`bd©a
(
∑ylﬂd
),
	`bÀngth
’aylﬂd), 
NULL
);

757 
	`check_debug
(
rc
 == 0, "FailedÅo deliverÅoÅhe handler.");

758 
	`bde°roy
(
∑ylﬂd
);

759 
∑ylﬂd
=
NULL
;

763 i‡(
∑ylﬂd
 !
NULL
) {

764 
agaö
;

768  
∑ckë_Àngth
;

770 
îr‹
:

771 
	`bde°roy
(
∑ylﬂd
);

774 
	}
}

776 
	$c⁄√˘i⁄_websockë_e°ablished
(
C⁄√˘i⁄
 *
c⁄n
)

778 if(
	`C⁄√˘i⁄_ªad_w•ackë
(
c⁄n
) > 0) {

779  
REQ_SENT
;

781  
CLOSE
;

784 
	`debug
("WS Established");

786 
	}
}

788 
SèãA˘i⁄s
 
	gCONN_ACTIONS
 = {

789 .
îr‹
 = 
c⁄√˘i⁄_îr‹
,

790 .
	g˛o£
 = 
c⁄√˘i⁄_˛o£
,

791 .
	g∑r£
 = 
c⁄√˘i⁄_∑r£
,

792 .
	gªgi°î_ªque°
 = 
c⁄√˘i⁄_idítify_ªque°
,

793 .
	gidítify_ªque°
 = 
c⁄√˘i⁄_idítify_ªque°
,

794 .
	grouã_ªque°
 = 
c⁄√˘i⁄_rouã_ªque°
,

795 .
	g£nd_sockë_ª•⁄£
 = 
c⁄√˘i⁄_£nd_sockë_ª•⁄£
,

796 .
	gmsg_to_h™dÀr
 = 
c⁄√˘i⁄_msg_to_h™dÀr
,

797 .
	ghâp_to_h™dÀr
 = 
c⁄√˘i⁄_hâp_to_h™dÀr
,

798 .
	ghâp_to_¥oxy
 = 
c⁄√˘i⁄_hâp_to_¥oxy
,

799 .
	ghâp_to_dúe˘‹y
 = 
c⁄√˘i⁄_hâp_to_dúe˘‹y
,

800 .
	g¥oxy_dñivî
 = 
c⁄√˘i⁄_¥oxy_dñivî
,

801 .
	g¥oxy_Áûed
 = 
c⁄√˘i⁄_¥oxy_Áûed
,

802 .
	g¥oxy_ª∂y_∑r£
 = 
c⁄√˘i⁄_¥oxy_ª∂y_∑r£
,

803 .
	g¥oxy_ªq_∑r£
 = 
c⁄√˘i⁄_¥oxy_ªq_∑r£
,

804 .
	g¥oxy_˛o£
 = 
c⁄√˘i⁄_¥oxy_˛o£
,

805 .
	gwebsockë_e°ablished
 = 
c⁄√˘i⁄_websockë_e°ablished


809 
	$C⁄√˘i⁄_dñivî_èsk_kûl
(
C⁄√˘i⁄
 *
c⁄n
)

811 if(
c⁄n
 && c⁄n->
dñivîTaskSètus
==
DT_RUNNING
) {

812 
	`debug
("KûlögÅask f‹ c⁄√˘i⁄ %p",
c⁄n
);

813 
¶ì±ime
=10;

814 
c⁄n
->
dñivîAck
!=c⁄n->
dñivîPo°
)

816 
Dñivî_mesßge
 
msg
={
NULL
,NULL};

817 
	`C⁄√˘i⁄_dñivî_dequeue
(
c⁄n
,&
msg
);

818 
	`äs_vÆue_de°roy
(
msg
.
d©a
);

820 
	`C⁄√˘i⁄_dñivî_íqueue
(
c⁄n
,
NULL
,NULL);

821 
c⁄n
->
dñivîTaskSètus
=
DT_DYING
;

822 
c⁄n
->
dñivîTaskSètus
 !
DT_DEAD
) {

823 
	`èskdñay
(
¶ì±ime
);

824 if(
¶ì±ime
<10000) {

825 
¶ì±ime
<<=1;

828 
	`log_w¨n
("C⁄√˘i⁄ %∞i†nŸ dyög, c⁄è˘ jasom\n",
c⁄n
);

832 
	`debug
("Dñivî Task KûÀd %p",
c⁄n
);

834 
	}
}

836 
	$C⁄√˘i⁄_de°roy
(
C⁄√˘i⁄
 *
c⁄n
)

838 if(
c⁄n
) {

839 
	`C⁄√˘i⁄_dñivî_èsk_kûl
(
c⁄n
);

840 
	`Reque°_de°roy
(
c⁄n
->
ªq
);

841 
c⁄n
->
ªq
 = 
NULL
;

843 if(
c⁄n
->
u£_¢i
) {

844 
	`x509_¸t_‰ì
(&
c⁄n
->
own_˚π
);

845 
	`pk_‰ì
(&
c⁄n
->
pk_key
);

848 if(
c⁄n
->
˛õ¡
Ë
	`‰ì
(conn->client);

849 
	`IOBuf_de°roy
(
c⁄n
->
iob
);

850 
	`IOBuf_de°roy
(
c⁄n
->
¥oxy_iob
);

851 
	`‰ì
(
c⁄n
);

853 
	}
}

856 
	$c⁄√˘i⁄_¢i_cb
(*
p_c⁄n
, 
s¶_c⁄ãxt
 *
s¶
, c⁄° *
cho°«me
, 
size_t
 
cho°«me_Àn
)

858 
C⁄√˘i⁄
 *
c⁄n
 = (C⁄√˘i⁄ *Ë
p_c⁄n
;

859 
i
;

860 
rc
 = 0;

861 
b°rög
 
ho°«me
 = 
NULL
;

862 
b°rög
 
˚π∑th
 = 
NULL
;

863 
b°rög
 
key∑th
 = 
NULL
;

865 
ho°«me
 = 
	`blk2b°r
((c⁄° *)
cho°«me
, 
cho°«me_Àn
);

866 
	`check
(
ho°«me
 !
NULL
, "Allocation failed");

871 
i
 = 0; i < 
	`bÀngth
(
ho°«me
); ++i) {

872 
c
 = 
	`bd©a
(
ho°«me
)[
i
];

873 if(
c
 < 0x20 || c == '/')

875 
	`log_w¨n
("SNI: invalid hostnameÖrovided");

878 if(
c
 <= 0x7f)

882 
	`bd©a
(
ho°«me
)[
i
] = ()
	`tﬁowî
(
c
);

886 
b°rög
 
˚πdú
 = 
	`Sëtög_gë_°r
("˚πdú", 
NULL
);

887 
	`check
(
˚πdú
 !
NULL
, "to use ssl, you must specifyá certdir");

889 
˚π∑th
 = 
	`bf‹m©
("%s%s.¸t", 
	`bd©a
(
˚πdú
), bd©a(
ho°«me
));

890 
	`check_mem
(
˚π∑th
);

892 
key∑th
 = 
	`bf‹m©
("%s%s.key", 
	`bd©a
(
˚πdú
), bd©a(
ho°«me
));

893 
	`check_mem
(
key∑th
);

895 
rc
 = 
	`x509_¸t_∑r£_fûe
(&
c⁄n
->
own_˚π
, 
	`bd©a
(
˚π∑th
));

896 
	`check
(
rc
 =0, "FaûedÅÿlﬂd cîà‰om %s", 
	`bd©a
(
˚π∑th
));

898 
rc
 = 
	`pk_∑r£_keyfûe
(&
c⁄n
->
pk_key
, 
	`bd©a
(
key∑th
), 
NULL
);

899 
	`check
(
rc
 =0, "FaûedÅÿlﬂd key from %s", 
	`bd©a
(
key∑th
));

901 
	`bde°roy
(
ho°«me
);

902 
	`bde°roy
(
˚π∑th
);

903 
	`bde°roy
(
key∑th
);

905 
c⁄n
->
u£_¢i
 = 1;

907 
	`s¶_£t_own_˚π
(
s¶
, &
c⁄n
->
own_˚π
, &c⁄n->
pk_key
);

911 
îr‹
:

913 
	`x509_¸t_‰ì
(&
c⁄n
->
own_˚π
);

914 
	`pk_‰ì
(&
c⁄n
->
pk_key
);

916 
	`bde°roy
(
ho°«me
);

917 if(
˚π∑th
 !
NULL
Ë
	`bde°roy
(certpath);

918 if(
key∑th
 !
NULL
Ë
	`bde°roy
(keypath);

923 
	}
}

926 
C⁄√˘i⁄
 *
	$C⁄√˘i⁄_¸óã
(
Sîvî
 *
§v
, 
fd
, 
Ω‹t
,

927 c⁄° *
ªmŸe
)

929 
C⁄√˘i⁄
 *
c⁄n
 = 
	`ˇŒoc
((Connection),1);

930 
	`check_mem
(
c⁄n
);

932 
c⁄n
->
ªq
 = 
	`Reque°_¸óã
();

933 
c⁄n
->
¥oxy_iob
 = 
NULL
;

934 
c⁄n
->
u£_¢i
 = 0;

935 
c⁄n
->
Ω‹t
 =Ñport;

936 
c⁄n
->
˛õ¡
 = 
NULL
;

937 
c⁄n
->
˛o£
 = 0;

938 
c⁄n
->
ty≥
 = 0;

939 
c⁄n
->
fûãr_°©e
 = 
NULL
;

941 
	`mem˝y
(
c⁄n
->
ªmŸe
,ÑemŸe, 
IPADDR_SIZE
);

942 
c⁄n
->
ªmŸe
[
IPADDR_SIZE
] = '\0';

944 
c⁄n
->
h™dÀr
 = 
NULL
;

945 
c⁄n
->
£ndCªdôs
 = 0;

947 
	`check_mem
(
c⁄n
->
ªq
);

949 if(
§v
 !
NULL
 && srv->
u£_s¶
) {

950 
c⁄n
->
iob
 = 
	`IOBuf_¸óã
(
BUFFER_SIZE
, 
fd
, 
IOBUF_SSL
);

951 
	`check
(
c⁄n
->
iob
 !
NULL
, "FailedÅo createÅhe SSL IOBuf.");

954 
	`s¶_£t_own_˚π
(&
c⁄n
->
iob
->
s¶
, &
§v
->
own_˚π
, &§v->
pk_key
);

957 i‡–
§v
->
ˇ_chaö
.
vîsi⁄
 != -1 ) {

958 
	`s¶_£t_ˇ_chaö
(&
c⁄n
->
iob
->
s¶
, &
§v
->
ˇ_chaö
, 
NULL
, NULL );

964 
	`s¶_£t_¢i
(&
c⁄n
->
iob
->
s¶
, 
c⁄√˘i⁄_¢i_cb
, conn);

966 
	`s¶_£t_dh_∑øm
(&
c⁄n
->
iob
->
s¶
, 
§v
->
dhm_P
, srv->
dhm_G
);

967 
	`s¶_£t_cùhîsuôes
(&
c⁄n
->
iob
->
s¶
, 
§v
->
cùhîs
);

969 
c⁄n
->
iob
 = 
	`IOBuf_¸óã
(
BUFFER_SIZE
, 
fd
, 
IOBUF_SOCKET
);

972  
c⁄n
;

974 
îr‹
:

975 
	`C⁄√˘i⁄_de°roy
(
c⁄n
);

976  
NULL
;

977 
	}
}

980 
	$C⁄√˘i⁄_ac˚±
(
C⁄√˘i⁄
 *
c⁄n
)

982 
	`check
(
	`Regi°î_c⁄√˘
(
	`IOBuf_fd
(
c⁄n
->
iob
), (*)conn) != -1,

985 
	`check
(
	`èsk¸óã
(
C⁄√˘i⁄_èsk
, 
c⁄n
, 
CONNECTION_STACK
) != -1,

988 
	`check
(
	`èsk¸óã
(
C⁄√˘i⁄_dñivî_èsk
, 
c⁄n
, 
CONNECTION_STACK
) != -1,

990 
c⁄n
->
dñivîTaskSètus
=
DT_RUNNING
;

992 
îr‹
:

993 
	`IOBuf_ªgi°î_disc⁄√˘
(
c⁄n
->
iob
);

995 
	}
}

999 
	$C⁄√˘i⁄_èsk
(*
v
)

1001 
C⁄√˘i⁄
 *
c⁄n
 = (C⁄√˘i⁄ *)
v
;

1002 
i
 = 0;

1003 
√xt
 = 
OPEN
;

1005 
	`Sèã_öô
(&
c⁄n
->
°©e
, &
CONN_ACTIONS
);

1008 if(
	`Fûãr_a˘iv©ed
()) {

1009 
√xt
 = 
	`Fûãr_run
“ext, 
c⁄n
);

1010 
	`check
(
√xt
 >
CLOSE
 &&Çexà< 
EVENT_END
,

1011 "!!! InvÆidÇexàevít[%d]: %d from fûãr!", 
i
, 
√xt
);

1014 if(
√xt
 =
CLOSE
) ;

1016 
√xt
 = 
	`Sèã_exec
(&
c⁄n
->
°©e
,Çext, (*)conn);

1018 
	`check
(
√xt
 >
CLOSE
 &&Çexà< 
EVENT_END
,

1019 "!!! InvÆidÇexàevít[%d]: %d, Tñ»ZED!", 
i
, 
√xt
);

1021 if(
c⁄n
->
iob
 && !c⁄n->iob->
˛o£d
) {

1022 
	`Regi°î_pög
(
	`IOBuf_fd
(
c⁄n
->
iob
));

1025 
i
++;

1028 
îr‹
:

1029 
	`Sèã_exec
(&
c⁄n
->
°©e
, 
CLOSE
, (*)conn);

1030 
	`C⁄√˘i⁄_de°roy
(
c⁄n
);

1031 
	`èskexô
(0);

1032 
	}
}

1034 
	$C⁄√˘i⁄_dñivî_øw_öã∫Æ
(
C⁄√˘i⁄
 *
c⁄n
, 
äs_vÆue_t
 *
d©a
)

1036 
b°rög
 
buf
;

1037 
	`check
(
d©a
->
ty≥
==
äs_èg_°rög
, "deliver_raw_internalÉxpectedá string.");

1038 
buf
=
d©a
->
vÆue
.
°rög
;

1039 
ªt

	`IOBuf_£nd_Æl
(
c⁄n
->
iob
, 
	`bd©a
(
buf
), 
	`bÀngth
(buf));

1040 
	`check_debug
(
ªt
==
	`bÀngth
(
buf
), "FaûedÅÿ£ndáŒ o‡thêd©a: %d o‡%d", 
rc
, 
avaû
)

1043 
îr‹
:

1045 
	}
}

1047 
	$C⁄√˘i⁄_dñivî_øw
(
C⁄√˘i⁄
 *
c⁄n
, 
b°rög
 
buf
)

1049 
äs_vÆue_t
 *
vÆ
=
NULL
;

1050 if(
buf
 !
NULL
) {

1051 
vÆ
=
	`mÆloc
((
äs_vÆue_t
));

1052 
	`check_mem
(
vÆ
);

1053 
vÆ
->
ty≥
=
äs_èg_°rög
;

1054 
vÆ
->
vÆue
.
°rög
=
	`b°r˝y
(
buf
);

1055 
	`check_debug
(0=
	`C⁄√˘i⁄_dñivî_íqueue
(
c⁄n
, 
C⁄√˘i⁄_dñivî_øw_öã∫Æ
,
vÆ
),

1056 "FaûedÅÿwrôêøw mesßgêtÿc⁄ %d", 
	`IOBuf_fd
(
c⁄n
->
iob
));

1058 
	`C⁄√˘i⁄_dñivî_íqueue
(
c⁄n
, 
NULL
, NULL);

1062 
îr‹
:

1063 
	`äs_vÆue_de°roy
(
vÆ
);

1065 
	}
}

1067 
	$C⁄√˘i⁄_dñivî
(
C⁄√˘i⁄
 *
c⁄n
, 
b°rög
 
buf
)

1069 
rc
 = 0;

1071 
b°rög
 
b64_buf
 = 
	`bBa£64Encode
(
buf
);

1072 
	`check
(
b64_buf
 !
NULL
, "FailedÅo base64Éncode data.");

1073 
	`check
(
c⁄n
->
iob
 !
NULL
, "There'sÇo IOBufferÅo sendÅo, Tell Zed.");

1076 
rc
 = 
	`C⁄√˘i⁄_dñivî_øw
(
c⁄n
,
b64_buf
);

1077 
	`check_debug
(
rc
 =0, "FaûedÅÿwrôêmesßgêtÿc⁄¿%d", 
	`IOBuf_fd
(
c⁄n
->
iob
));

1078 
	`bde°roy
(
b64_buf
);

1082 
îr‹
:

1083 
	`bde°roy
(
b64_buf
);

1085 
	}
}

1088 
	$C⁄√˘i⁄_dñivî_èsk
(*
v
)

1090 
C⁄√˘i⁄
 *
c⁄n
=
v
;

1091 
Dñivî_mesßge
 
msg
={
NULL
,NULL};

1093 
	`C⁄√˘i⁄_dñivî_dequeue
(
c⁄n
, &
msg
);

1094 
	`check_debug
(
msg
.
dñivî
,"Re˚ived NULL msg o¿FD %d,Éxôög dñivîÅask",
	`IOBuf_fd
(
c⁄n
->
iob
));

1095 
	`check
(-1 !
msg
.
	`dñivî
(
c⁄n
,msg.
d©a
),"Eº‹ dñivîögÅÿMSGÜi°íî o¿FD %d, closögÅhem.", 
	`IOBuf_fd
(c⁄n->
iob
));

1096 
	`äs_vÆue_de°roy
(
msg
.
d©a
);

1097 
msg
.
d©a
=
NULL
;

1099 
îr‹
:

1100 
c⁄n
->
dñivîTaskSètus
=
DT_DYING
;

1101 
	`äs_vÆue_de°roy
(
msg
.
d©a
);

1102 
c⁄n
->
dñivîPo°
 > c⁄n->
dñivîAck
) {

1103 
	`C⁄√˘i⁄_dñivî_dequeue
(
c⁄n
, &
msg
);

1104 
	`äs_vÆue_de°roy
(
msg
.
d©a
);

1107 i‡(
	`IOBuf_fd
(
c⁄n
->
iob
) >= 0)

1108 
	`shutdown
(
	`IOBuf_fd
(
c⁄n
->
iob
), 
SHUT_RDWR
);

1109 
	`debug
("Deliver Task Shut Down\n");

1110 
c⁄n
->
dñivîTaskSètus
=
DT_DEAD
;

1111 
	`èskexô
(0);

1112 
	}
}

1114 
ölöe
 
	$check_should_˛o£
(
C⁄√˘i⁄
 *
c⁄n
, 
Reque°
 *
ªq
)

1116 if(
ªq
->
vîsi⁄
 && 
	`bi£qc°r
(req->version, "HTTP/1.0")) {

1117 
	`debug
("HTTP 1.0Ñeque° comög i¿‰om %s", 
c⁄n
->
ªmŸe
);

1118 
c⁄n
->
˛o£
 = 1;

1120 
b°rög
 
c⁄n_˛o£
 = 
	`Reque°_gë
(
ªq
, &
HTTP_CONNECTION
);

1122 if(
c⁄n_˛o£
 && 
	`bi£qc°rˇ£Àss
(conn_close, "close")) {

1123 
c⁄n
->
˛o£
 = 1;

1125 
c⁄n
->
˛o£
 = 0;

1128 
	}
}

1131 
	$C⁄√˘i⁄_ªad_hódî
(
C⁄√˘i⁄
 *
c⁄n
, 
Reque°
 *
ªq
)

1133 *
d©a
 = 
	`IOBuf_°¨t
(
c⁄n
->
iob
);

1134 
avaû
 = 
	`IOBuf_avaû
(
c⁄n
->
iob
);

1135 
rc
 = 0;

1136 
size_t
 
≈¨£d
 = 0;

1137 
åõs
 = 0;

1139 
	`Reque°_°¨t
(
ªq
);

1141 
åõs
 = 0; 
rc
 =0 &&Årõ†< 
CLIENT_READ_RETRIES
;Åries++) {

1142 if(
avaû
 > 0) {

1143 
rc
 = 
	`Reque°_∑r£
(
ªq
, 
d©a
, 
avaû
, &
≈¨£d
);

1146 if(
rc
 == 0) {

1147 
d©a
 = 
	`IOBuf_ªad_some
(
c⁄n
->
iob
, &
avaû
);

1148 
	`check_debug
(!
	`IOBuf_˛o£d
(
c⁄n
->
iob
), "Client closed duringÑead.");

1152 
	`îr‹_u∆ess
(
åõs
 < 
CLIENT_READ_RETRIES
, 
c⁄n
,

1154 
	`îr‹_u∆ess
(
rc
 =1, 
c⁄n
, 400, "ErrorÖarsingÑequest.");

1156 
	`check_should_˛o£
(
c⁄n
, c⁄n->
ªq
);

1158  
≈¨£d
;

1160 
îr‹
:

1163 
	}
}

1166 
	$C⁄√˘i⁄_öô
()

1168 
MAX_CONTENT_LENGTH
 = 
	`Sëtög_gë_öt
("limits.content_length", 20 * 1024);

1169 
BUFFER_SIZE
 = 
	`Sëtög_gë_öt
("limits.buffer_size", 4 * 1024);

1170 
CONNECTION_STACK
 = 
	`Sëtög_gë_öt
("limits.connection_stack_size", 32 * 1024);

1171 
CLIENT_READ_RETRIES
 = 
	`Sëtög_gë_öt
("limits.client_read_retries", 5);

1174 
	`log_öfo
("MAXÜimits.content_length=%d,Üimits.buffer_size=%d,Üimits.connection_stack_size=%d,Üimits.client_read_retries=%d",

1175 
MAX_CONTENT_LENGTH
, 
BUFFER_SIZE
, 
CONNECTION_STACK
,

1176 
CLIENT_READ_RETRIES
);

1178 
PROXY_READ_RETRIES
 = 
	`Sëtög_gë_öt
("limits.proxy_read_retries", 100);

1179 
PROXY_READ_RETRY_WARN
 = 
	`Sëtög_gë_öt
("limits.proxy_read_retry_warn", 10);

1181 
	`log_öfo
("MAXÜimits.proxy_read_retries=%d,Üimits.proxy_read_retry_warn=%d",

1182 
PROXY_READ_RETRIES
, 
PROXY_READ_RETRY_WARN
);

1184 
IO_SSL_VERIFY_METHOD
 = 
	`Sëtög_gë_öt
("s¶.vîify_›ti⁄Æ", 0Ë? 
SSL_VERIFY_OPTIONAL
 : 
SSL_VERIFY_NONE
;

1185 
IO_SSL_VERIFY_METHOD
 = 
	`Sëtög_gë_öt
("s¶.vîify_ªquúed", 0Ë? 
SSL_VERIFY_REQUIRED
 : IO_SSL_VERIFY_METHOD;

1187 
	}
}

	@connection.h

35 #i‚de‡
_li°íî_h


36 
	#_li°íî_h


	)

38 
	~"£rvî.h
"

39 
	~"ªque°.h
"

40 
	~"°©e.h
"

41 
	~"¥oxy.h
"

42 
	~"io.h
"

43 
	~"adt/hash.h
"

44 
	~"äë°rögs.h
"

46 
	#DELIVER_OUTSTANDING_MSGS
 16

	)

48 #i‡
DELIVER_OUTSTANDING_MSGS
 & (DELIVER_OUTSTANDING_MSGS-1)

49 #îr‹ 
DELIVER_OUTSTANDING_MSGS
 
mu°
 
be
 
a
 
owî
 
of
 2

52 
CONNECTION_STACK
;

53 
BUFFER_SIZE
;

54 
MAX_CONTENT_LENGTH
;

57 
	mCONN_TYPE_HTTP
=1,

58 
	mCONN_TYPE_MSG
,

59 
	mCONN_TYPE_SOCKET


62 
	edñivîTaskSèã
 {

63 
	mDT_NOT_CREATED
 = 0,

64 
	mDT_RUNNING
,

65 
	mDT_DYING
,

66 
	mDT_DEAD


68 
	gC⁄√˘i⁄
;

70 (*
	tdñivî_fun˘i⁄
)(
	tC⁄√˘i⁄
 *
	tc
, 
	täs_vÆue_t
 *
	td©a
);

72 
	sDñivî_mesßge
 {

73 
dñivî_fun˘i⁄
 
dñivî
;

74 
äs_vÆue_t
 *
d©a
;

75 } 
	tDñivî_mesßge
;

77 
	sC⁄√˘i⁄
 {

78 
Reque°
 *
ªq
;

80 
IOBuf
 *
iob
;

81 
IOBuf
 *
¥oxy_iob
;

84 
u£_¢i
;

85 
x509_¸t
 
own_˚π
;

86 
pk_c⁄ãxt
 
pk_key
;

88 
Ω‹t
;

89 
Sèã
 
°©e
;

90 
hâp˛õ¡_∑r£r
 *
˛õ¡
;

91 
˛o£
;

92 
ty≥
;

93 
hash_t
 *
fûãr_°©e
;

94 
ªmŸe
[
IPADDR_SIZE
+1];

95 
H™dÀr
 *
h™dÀr
;

96 vﬁ©ûê
dñivîTaskSèã
 
dñivîTaskSètus
;

97 vﬁ©ûê
Dñivî_mesßge
 
dñivîRög
[
DELIVER_OUTSTANDING_MSGS
];

98 vﬁ©ûê
dñivîPo°
,
dñivîAck
;

99 
Rídez
 
dñivîRídez
;

100 
Rídez
 
u∂ﬂdRídez
;

101 
£ndCªdôs
;

102 } 
	tC⁄√˘i⁄
;

104 
	`C⁄√˘i⁄_de°roy
(
C⁄√˘i⁄
 *
c⁄n
);

105 
C⁄√˘i⁄
 *
	`C⁄√˘i⁄_¸óã
(
Sîvî
 *
§v
, 
fd
, 
Ω‹t
,

106 c⁄° *
ªmŸe
);

108 
	`C⁄√˘i⁄_ac˚±
(
C⁄√˘i⁄
 *
c⁄n
);

110 
	`C⁄√˘i⁄_èsk
(*
v
);

112 
H™dÀr
;

113 
	`C⁄√˘i⁄_£nd_to_h™dÀr
(
C⁄√˘i⁄
 *
c⁄n
, 
H™dÀr
 *
h™dÀr
, *
body
, 
c⁄ã¡_Àn
, 
hash_t
 *
Æthódîs
);

115 
	`C⁄√˘i⁄_dñivî_øw
(
C⁄√˘i⁄
 *
c⁄n
, 
b°rög
 
buf
);

117 
	`C⁄√˘i⁄_dñivî
(
C⁄√˘i⁄
 *
c⁄n
, 
b°rög
 
buf
);

119 
	`C⁄√˘i⁄_ªad_hódî
(
C⁄√˘i⁄
 *
c⁄n
, 
Reque°
 *
ªq
);

121 
	`C⁄√˘i⁄_öô
();

123 
	`C⁄√˘i⁄_dñivî_èsk
(*
v
);

124 
	`C⁄√˘i⁄_dñivî_íqueue
(
C⁄√˘i⁄
 *
c⁄n
, 
dñivî_fun˘i⁄
 
f
,

125 
äs_vÆue_t
 *
d
);

	@control.c

35 
	~"c⁄åﬁ.h
"

36 
	~"b°rög.h
"

37 
	~"èsk/èsk.h
"

38 
	~"ªgi°î.h
"

39 
	~"£rvî.h
"

40 
	~"dbg.h
"

41 
	~<°dlib.h
>

42 
	~<time.h
>

43 
	~"£âög.h
"

44 
	~<sig«l.h
>

45 
	~"äë°rögs.h
"

46 
	~"äë°rögs_im∂.h
"

47 
	~"vîsi⁄.h
"

50 
	$c°r_‰ì
(*
d©a
, *
höt
)

52 ()
höt
;

54 
	`‰ì
(
d©a
);

55 
	}
}

57 
	gCONTROL_RUNNING
 = 1;

58 *
	gCONTROL_SOCKET
 = 
NULL
;

61 
ègb°rög
 
	gINVALID_FORMAT_ERR
 = 
bsSètic
("101:4:code,15:INVALID_REQUEST,5:error,63:InvalidÑequest format, must beáÜist withÅwoÉlements in it.,}");

62 
ègb°rög
 
	gINVALID_DATA_ERR
 = 
bsSètic
("97:4:code,12:INVALID_DATA,5:error,62:Invalid data,ÉxpectingáÜist withá stringándá hash in it.,}");

63 
ègb°rög
 
	gCALLBACK_RETURN_ERR
 = 
bsSètic
("91:4:code,15:CALLBACK_RETURN,5:error,53:Callback failedándÑeturned NULL, shouldÇot happen.,}");

64 
ègb°rög
 
	gCALLBACK_NOT_FOUND_ERR
 = 
bsSètic
("74:4:code,18:CALLBACK_NOT_FOUND,5:error,33:CallbackÑequested wasÇot found.,}");

65 
ègb°rög
 
	gSIGNAL_FAILED_ERR
 = 
bsSètic
("75:4:code,13:SIGNAL_FAILED,5:error,39:raise call failed, can't signalÖrocess,}");

66 
ègb°rög
 
	gINVALID_ARGUMENT_ERR
 = 
bsSètic
("61:4:code,16:INVALID_ARGUMENT,5:error,22:InvalidárgumentÅype.,}");

67 
ègb°rög
 
	gNOT_CONNECTED_ERR
 = 
bsSètic
("57:4:code,13:NOT_CONNECTED,5:error,21:SocketÇot connected.,}");

70 
	#check_c⁄åﬁ_îr
(
A
, 
E
, 
M
, ...Ëif(!(A)Ë{ 
ªsu…
 = 
	`äs_∑r£
(
	`bd©a
(E), 
	`bÀngth
(E), 
NULL
); 
	`log_w¨n
(M, ##
__VA_ARGS__
); 
î∫o
=0; 
îr‹
; }

	)

72 
	gäs_vÆue_t
 *(*
	tˇŒback_t
)(
	tb°rög
 
	t«me
, 
	thash_t
 *
	t¨gs
);

74 
	sˇŒback_li°_t
 {

75 
ègb°rög
 
	m«me
;

76 
ègb°rög
 
	mhñp
;

77 
ˇŒback_t
 
	mˇŒback
;

78 } 
	tˇŒback_li°_t
;

80 
ˇŒback_li°_t
 
	gCALLBACKS
[];

82 
ölöe
 
äs_vÆue_t
 *
	$ªad_mesßge
(*
sock
)

84 
äs_vÆue_t
 *
ªq
 = 
NULL
;

85 
rc
 = 0;

87 
zmq_msg_t
 *
ömsg
 = 
	`ˇŒoc
((zmq_msg_t), 1);

88 
rc
 = 
	`zmq_msg_öô
(
ömsg
);

89 
	`check
(
rc
 == 0, "init failed.");

91 
rc
 = 
	`mqªcv
(
sock
, 
ömsg
, 0);

92 
	`check
(
rc
 == 0, "Receive on control failed.");

94 
ªq
 = 
	`äs_∑r£
(
	`zmq_msg_d©a
(
ömsg
), 
	`zmq_msg_size
(ömsg), 
NULL
);

96 if(
ªq
 =
NULL
) {

97 
ªq
 = 
	`äs_gë_nuŒ
();

100 
	`check
(
ªq
, "FailedÅo createÅheÑequest string.");

102 
	`zmq_msg_˛o£
(
ömsg
);

103 
	`‰ì
(
ömsg
);

105  
ªq
;

107 
îr‹
:

108 if(
ömsg
) {

109 
	`zmq_msg_˛o£
(
ömsg
);

110 
	`‰ì
(
ömsg
);

113  
NULL
;

114 
	}
}

117 
ölöe
 
	$£nd_ª∂y
(*
sock
, 
äs_vÆue_t
 *
ªp
)

119 
rc
 = 0;

120 
size_t
 
Àn
 = 0;

122 
zmq_msg_t
 *
outmsg
 = 
	`ˇŒoc
((zmq_msg_t), 1);

123 
	`check_mem
(
outmsg
);

125 
rc
 = 
	`zmq_msg_öô
(
outmsg
);

126 
	`check
(
rc
 == 0, "Cannotállocate zmq msg.");

128 *
outbuf
 = 
	`äs_ªndî
(
ªp
, &
Àn
);

129 
	`check
(
outbuf
 !
NULL
, "FailedÅoÑender controlÖortÑeply.");

130 
	`check
(
Àn
 > 0, "ControlÖortÑeply isÅoo small.");

132 
rc
 = 
	`zmq_msg_öô_d©a
(
outmsg
, 
outbuf
, 
Àn
, 
c°r_‰ì
, 
ªp
);

133 
	`check
(
rc
 == 0, "FailedÅo initÑeply data.");

135 
rc
 = 
	`mq£nd
(
sock
, 
outmsg
, 0);

136 
	`check
(
rc
 == 0, "FailedÅo deliver 0mq messageÅoÑequestor.");

137 
	`‰ì
(
outmsg
);

140 
îr‹
:

141 
	`‰ì
(
outmsg
);

143 
	}
}

152 
ölöe
 
äs_vÆue_t
 *
	$basic_ª•⁄£
(
b°rög
 
key
, b°rög 
vÆue
)

154 
äs_vÆue_t
 *
ªsu…s
 = 
	`äs_√w_di˘
();

155 
äs_vÆue_t
 *
hódîs
 = 
	`äs_√w_li°
();

156 
äs_vÆue_t
 *
rows
 = 
	`äs_√w_li°
();

157 
äs_vÆue_t
 *
cﬁs
 = 
	`äs_√w_li°
();

159 
	`äs_add_to_li°
(
hódîs
, 
	`äs_∑r£_°rög
(
	`bd©a
(
key
), 
	`bÀngth
(key)));

160 
	`äs_add_to_li°
(
cﬁs
, 
	`äs_∑r£_°rög
(
	`bd©a
(
vÆue
), 
	`bÀngth
(value)));

161 
	`äs_add_to_li°
(
rows
, 
cﬁs
);

163 
	`bde°roy
(
key
);

164 
	`bde°roy
(
vÆue
);

166 
	`äs_di˘_£tc°r
(
ªsu…s
, "hódîs", 
hódîs
);

167 
	`äs_di˘_£tc°r
(
ªsu…s
, "rows", 
rows
);

169  
ªsu…s
;

170 
	}
}

173 
ölöe
 
äs_vÆue_t
 *
	$gë_¨g
(
hash_t
 *
¨gs
, c⁄° *
«me
)

175 
b°rög
 
key
 = 
	`b‰omc°r
(
«me
);

176 
hnode_t
 *
node
 = 
	`hash_lookup
(
¨gs
, 
key
);

177 
	`bde°roy
(
key
);

179 
	`check
(
node
 !
NULL
, "Missögárgumíà%†ö cÆl.", 
«me
);

181 
äs_vÆue_t
 *
vÆ
 = 
	`hnode_gë
(
node
);

182 
	`check
(
vÆ
 !
NULL
, "GotáÇull forá dict inárguments.");

184  
vÆ
;

185 
îr‹
:

186  
NULL
;

187 
	}
}

189 
äs_vÆue_t
 *
	$sig«l_£rvî_cb
(
b°rög
 
«me
, 
hash_t
 *
¨gs
)

191 ()
¨gs
;

193 
rc
 = -1;

194 
äs_vÆue_t
 *
ªsu…
 = 
NULL
;

196 if(
	`bi£qc°r
(
«me
, "stop")) {

197 
rc
 = 
	`øi£
(
SIGINT
);

198 } if(
	`bi£qc°r
(
«me
, "reload")) {

199 
rc
 = 
	`øi£
(
SIGHUP
);

200 } if(
	`bi£qc°r
(
«me
, "terminate")) {

201 
rc
 = 
	`øi£
(
SIGTERM
);

203 
rc
 = -1;

206 
	`check_c⁄åﬁ_îr
(
rc
 =0, &
SIGNAL_FAILED_ERR
, "Signal failed.");

208 
ªsu…
 = 
	`basic_ª•⁄£
(
	`b‰omc°r
("msg"), bfromcstr("signal sentÅo server"));

210 
îr‹
:

211  
ªsu…
;

212 
	}
}

215 
äs_vÆue_t
 *
	$vîsi⁄_cb
(
b°rög
 
«me
, 
hash_t
 *
¨gs
)

217 ()
«me
;

218 ()
¨gs
;

220  
	`basic_ª•⁄£
(
	`b‰omc°r
("vîsi⁄"), b‰omc°r(
VERSION
));

221 
	}
}

223 
äs_vÆue_t
 *
	$hñp_cb
(
b°rög
 
«me
, 
hash_t
 *
¨gs
)

225 ()
«me
;

226 ()
¨gs
;

228 
äs_vÆue_t
 *
ªsu…
 = 
	`äs_√w_di˘
();

229 
äs_vÆue_t
 *
hódîs
 = 
	`äs_√w_li°
();

230 
äs_vÆue_t
 *
rows
 = 
	`äs_√w_li°
();

232 
	`äs_add_to_li°
(
hódîs
, 
	`äs_∑r£_°rög
("«me", 
	`°æí
("name")));

233 
	`äs_add_to_li°
(
hódîs
, 
	`äs_∑r£_°rög
("hñp", 
	`°æí
("help")));

234 
	`äs_di˘_£tc°r
(
ªsu…
, "hódîs", 
hódîs
);

236 
ˇŒback_li°_t
 *
cbñ
 = 
NULL
;

238 
cbñ
 = 
CALLBACKS
; cbñ->
ˇŒback
 !
NULL
; cbel++) {

239 
äs_vÆue_t
 *
cﬁ
 = 
	`äs_√w_li°
();

240 
	`äs_add_to_li°
(
cﬁ
, 
	`äs_∑r£_°rög
(
	`bd©a
(&
cbñ
->
«me
), 
	`bÀngth
(&cbel->name)));

241 
	`äs_add_to_li°
(
cﬁ
, 
	`äs_∑r£_°rög
(
	`bd©a
(&
cbñ
->
hñp
), 
	`bÀngth
(&cbel->help)));

242 
	`äs_add_to_li°
(
rows
, 
cﬁ
);

245 
	`äs_di˘_£tc°r
(
ªsu…
, "rows", 
rows
);

247  
ªsu…
;

248 
	}
}

250 
äs_vÆue_t
 *
	$c⁄åﬁ_°›_cb
(
b°rög
 
«me
, 
hash_t
 *
¨gs
)

252 ()
«me
;

253 ()
¨gs
;

255 
CONTROL_RUNNING
 = 0;

257  
	`basic_ª•⁄£
(
	`b‰omc°r
("msg"), bfromcstr("stoppingÅhe controlÖort"));

258 
	}
}

260 
äs_vÆue_t
 *
	$kûl_cb
(
b°rög
 
«me
, 
hash_t
 *
¨gs
)

262 ()
«me
;

264 
äs_vÆue_t
 *
ªsu…
 = 
	`äs_√w_di˘
();

266 
äs_vÆue_t
 *
¨g
 = 
	`gë_¨g
(
¨gs
, "id");

267 
	`check_c⁄åﬁ_îr
(
¨g
 !
NULL
, &
INVALID_ARGUMENT_ERR
, "Missingárgument 'id'.");

268 
	`check_c⁄åﬁ_îr
(
	`äs_gë_ty≥
(
¨g
Ë=
äs_èg_numbî
, &
INVALID_ARGUMENT_ERR
, "ArgumentÅypeÉrror.");

270 
id
 = 
¨g
->
vÆue
.
numbî
;

271 
	`check_c⁄åﬁ_îr
(
id
 >0 && id < 
MAX_REGISTERED_FDS
, &
INVALID_ARGUMENT_ERR
, "ArgumentÅypeÉrror.");

274 
fd
 = 
	`Regi°î_fd_f‹_id
(
id
);

275 
	`check_c⁄åﬁ_îr
(
fd
 >0, &
INVALID_ARGUMENT_ERR
, "ArgumentÅypeÉrror.");

276 
	`check_c⁄åﬁ_îr
(
	`Regi°î_fd_exi°s
(
fd
), &
NOT_CONNECTED_ERR
, "SocketÇot connected.");

278 
	`Regi°î_disc⁄√˘
(
fd
);

280 
	`äs_vÆue_de°roy
(
ªsu…
);

282  
	`basic_ª•⁄£
(
	`b‰omc°r
("status"), bfromcstr("OK"));

284 
îr‹
:

285  
ªsu…
;

286 
	}
}

289 
äs_vÆue_t
 *
	$°©us_cb
(
b°rög
 
«me
, 
hash_t
 *
¨gs
)

291 ()
«me
;

293 
äs_vÆue_t
 *
vÆ
 = 
	`gë_¨g
(
¨gs
, "what");

294 
äs_vÆue_t
 *
ªsu…
 = 
	`äs_√w_di˘
();

296 
	`check_c⁄åﬁ_îr
(
vÆ
 !
NULL
, &
INVALID_ARGUMENT_ERR
, "Missingárgument what.");

297 
	`check_c⁄åﬁ_îr
(
vÆ
->
ty≥
 =
äs_èg_°rög
, &
INVALID_ARGUMENT_ERR
, "ArgumentÅypeÉrror.");

298 
b°rög
 
wh©
 = 
vÆ
->
vÆue
.
°rög
;

300 if(
	`bi£qc°r
(
wh©
, "tasks")) {

301 
	`äs_vÆue_de°roy
(
ªsu…
);

302  
	`èskgëöfo
();

303 } if(
	`bi£qc°r
(
wh©
, "net")) {

304 
	`äs_vÆue_de°roy
(
ªsu…
);

305  
	`Regi°î_öfo
();

307 
b°rög
 
îr
 = 
	`b‰omc°r
("Expectedárgument what=['net'|'tasks'].");

308 
	`äs_di˘_£tc°r
(
ªsu…
, "îr‹", 
	`äs_∑r£_°rög
(
	`bd©a
(
îr
), 
	`bÀngth
(err)));

309 
	`bde°roy
(
îr
);

312 
îr‹
:

313  
ªsu…
;

314 
	}
}

316 
ègb°rög
 
	gINFO_HEADERS
 = 
bsSètic
("92:4:port,9:bind_addr,4:uuid,6:chroot,10:access_log,9:error_log,8:pid_file,16:default_hostname,]");

318 
äs_vÆue_t
 *
	$öfo_cb
(
b°rög
 
«me
, 
hash_t
 *
¨gs
)

320 ()
¨gs
;

322 
Sîvî
 *
§v
 = 
	`Sîvî_queue_œã°
();

324 if(
	`bi£qc°r
(
«me
, "time")) {

325  
	`basic_ª•⁄£
(
	`b‰omc°r
("time"), 
	`bf‹m©
("%d", ()
	`time
(
NULL
)));

326 } if(
	`bi£qc°r
(
«me
, "uuid")) {

327  
	`basic_ª•⁄£
(
	`b‰omc°r
("uuid"), 
	`b°r˝y
(
§v
->
uuid
));

329 
äs_vÆue_t
 *
rows
 = 
	`äs_√w_li°
();

330 
äs_vÆue_t
 *
cﬁs
 = 
	`äs_√w_li°
();

331 
	`äs_add_to_li°
(
cﬁs
, 
	`äs_√w_öãgî
(
§v
->
p‹t
));

332 
	`äs_li°_add°r
(
cﬁs
, 
§v
->
böd_addr
);

333 
	`äs_li°_add°r
(
cﬁs
, 
§v
->
uuid
);

334 if(
§v
->
chroŸ
 !
NULL
) {

335 
	`äs_li°_add°r
(
cﬁs
, 
§v
->
chroŸ
);

337 
b°rög
 
em±y
 = 
	`b‰omc°r
("");

338 
	`äs_li°_add°r
(
cﬁs
, 
em±y
);

339 
	`bde°roy
(
em±y
);

341 
	`äs_li°_add°r
(
cﬁs
, 
§v
->
ac˚ss_log
);

342 
	`äs_li°_add°r
(
cﬁs
, 
§v
->
îr‹_log
);

343 
	`äs_li°_add°r
(
cﬁs
, 
§v
->
pid_fûe
);

344 
	`äs_li°_add°r
(
cﬁs
, 
§v
->
deÁu…_ho°«me
);

346 
	`äs_add_to_li°
(
rows
, 
cﬁs
);

347  
	`äs_°™d¨d_èbÀ
(&
INFO_HEADERS
, 
rows
);

349 
	}
}

352 
ˇŒback_li°_t
 
	gCALLBACKS
[] = {

353 {.
«me
 = 
bsSètic
("stop"),

354 .
	ghñp
 = 
bsSètic
("°›Åhê£rvî (SIGINT)"), .
	gˇŒback
 = 
sig«l_£rvî_cb
},

355 {.
	g«me
 = 
bsSètic
("reload"),

356 .
	ghñp
 = 
bsSètic
("ªlﬂdÅhê£rvî"), .
	gˇŒback
 = 
sig«l_£rvî_cb
},

357 {.
	g«me
 = 
bsSètic
("help"),

358 .
	ghñp
 = 
bsSètic
("thi†comm™d"), .
	gˇŒback
 = 
hñp_cb
},

359 {.
	g«me
 = 
bsSètic
("control_stop"),

360 .
	ghñp
 = 
bsSètic
("°› c⁄åﬁÖ‹t"), .
	gˇŒback
 = 
c⁄åﬁ_°›_cb
},

361 {.
	g«me
 = 
bsSètic
("kill"),

362 .
	ghñp
 = 
bsSètic
("kû»®c⁄√˘i⁄"), .
	gˇŒback
 = 
kûl_cb
},

363 {.
	g«me
 = 
bsSètic
("status"),

364 .
	ghñp
 = 
bsSètic
("°©us, wh©=['√t'|'èsks']"), .
	gˇŒback
 = 
°©us_cb
},

365 {.
	g«me
 = 
bsSètic
("terminate"),

366 .
	ghñp
 = 
bsSètic
("ãrmö©êthê£rvî (SIGTERM)"), .
	gˇŒback
 = 
sig«l_£rvî_cb
},

367 {.
	g«me
 = 
bsSètic
("time"),

368 .
	ghñp
 = 
bsSètic
("thê£rvî'†time"), .
	gˇŒback
 = 
öfo_cb
},

369 {.
	g«me
 = 
bsSètic
("uuid"),

370 .
	ghñp
 = 
bsSètic
("thê£rvî'†uuid"), .
	gˇŒback
 = 
öfo_cb
},

371 {.
	g«me
 = 
bsSètic
("info"),

372 .
	ghñp
 = 
bsSètic
("öf‹m©i⁄ábouàthi†£rvî"), .
	gˇŒback
 = 
öfo_cb
},

374 {.
	g«me
 = 
bsSètic
(""), .
	ghñp
 = bsSètic(""), .
	gˇŒback
 = 
NULL
},

378 
äs_vÆue_t
 *
	$C⁄åﬁ_execuã
(
äs_vÆue_t
 *
ªq
, 
ˇŒback_li°_t
 *
ˇŒbacks
)

380 
äs_vÆue_t
 *
ªsu…
 = 
NULL
;

381 
äs_vÆue_t
 *
ˇŒ
 = 
NULL
;

382 
äs_vÆue_t
 *
¨gs
 = 
NULL
;

383 
ˇŒback_li°_t
 *
cbñ
 = 
NULL
;

386 
	`check_c⁄åﬁ_îr
(
ªq
->
ty≥
 =
äs_èg_li°
, &
INVALID_FORMAT_ERR
, "InvalidÑequest format.");

388 
ˇŒ
 = 
	`d¨øy_gë
(
ªq
->
vÆue
.
li°
, 0);

389 
	`check_c⁄åﬁ_îr
(
ˇŒ
 !
NULL
, &
INVALID_DATA_ERR
, "Invalid firstárgument.");

390 
	`check_c⁄åﬁ_îr
(
ˇŒ
->
ty≥
 =
äs_èg_°rög
, &
INVALID_DATA_ERR
, "Firstárgument must be string.");

393 
¨gs
 = 
	`d¨øy_gë
(
ªq
->
vÆue
.
li°
, 1);

394 
	`check_c⁄åﬁ_îr
(
¨gs
 !
NULL
, &
INVALID_DATA_ERR
, "Invalid secondárgument.");

395 
	`check_c⁄åﬁ_îr
(
¨gs
 !
ˇŒ
, &
INVALID_DATA_ERR
, "Must have moreÅhan oneÉlementÅoÑequest.");

396 
	`check_c⁄åﬁ_îr
(
¨gs
->
ty≥
 =
äs_èg_di˘
, &
INVALID_DATA_ERR
, "Secondárgument must be dict.");

402 
cbñ
 = 
ˇŒbacks
; cbñ->
ˇŒback
 !
NULL
; cbel++) {

403 if(
	`bi£q
(
ˇŒ
->
vÆue
.
°rög
, &
cbñ
->
«me
)) {

404 
ªsu…
 = 
cbñ
->
	`ˇŒback
(
ˇŒ
->
vÆue
.
°rög
, 
¨gs
->vÆue.
di˘
);

405 
	`check_c⁄åﬁ_îr
(
ªsu…
 !
NULL
, &
CALLBACK_RETURN_ERR
, "CallbackÑeturn invalid data (NULL).");

411 
	`check_c⁄åﬁ_îr
(
ªsu…
 !
NULL
, &
CALLBACK_NOT_FOUND_ERR
, "CallbackÇot found.");

413 
îr‹
:

414  
ªsu…
;

415 
	}
}

417 
ègb°rög
 
	gDEFAULT_CONTROL_SPEC
 = 
bsSètic
("ipc://run/control");

419 
	$C⁄åﬁ_èsk
(*
v
)

421 ()
v
;

423 
rc
 = 0;

424 
äs_vÆue_t
 *
ªq
 = 
NULL
;

425 
äs_vÆue_t
 *
ªp
 = 
NULL
;

427 
b°rög
 
•ec
;

428 
Sîvî
 *
§v
 = 
	`Sîvî_queue_œã°
();

429 if(
§v
->
c⁄åﬁ_p‹t
 !
NULL
) {

430 
•ec
 = 
§v
->
c⁄åﬁ_p‹t
;

432 
•ec
 = 
	`Sëtög_gë_°r
("c⁄åﬁ_p‹t", &
DEFAULT_CONTROL_SPEC
);

435 
	`èsk«me
("control");

437 
	`log_öfo
("Sëtög u∞c⁄åﬁ sockë i¿© %s", 
	`bd©a
(
•ec
));

439 
CONTROL_SOCKET
 = 
	`mqsockë
(
ZMQ_REP
);

440 
	`check
(
CONTROL_SOCKET
 !
NULL
, "Can't create contol socket.");

442 
rc
 = 
	`zmq_böd
(
CONTROL_SOCKET
, 
	`bd©a
(
•ec
));

443 
	`check
(
rc
 == 0, "FailedÅo bind controlÖortÅoÑun/control.");

445 
CONTROL_RUNNING
) {

446 
	`èsk°©e
("waiting");

448 
ªq
 = 
	`ªad_mesßge
(
CONTROL_SOCKET
);

449 
	`check
(
ªq
, "FaûedÅÿªad mesßge: %s.", 
	`°ªº‹
(
î∫o
));

451 if(
ªq
->
ty≥
 =
äs_èg_nuŒ
) {

452 
ªp
 = 
	`äs_∑r£
(
	`bd©a
(&
INVALID_DATA_ERR
), 
	`bÀngth
(&INVALID_DATA_ERR), 
NULL
);

454 
ªp
 = 
	`C⁄åﬁ_execuã
(
ªq
, 
CALLBACKS
);

457 
	`check
(
ªp
 !
NULL
, "ShouldÇever getá NULL fromÅhe controlÖortÉxecutor.");

459 
	`èsk°©e
("replying");

460 
rc
 = 
	`£nd_ª∂y
(
CONTROL_SOCKET
, 
ªp
);

461 
	`check
(
rc
 == 0, "FailedÅo sendáÑeply.");

463 
	`äs_vÆue_de°roy
(
ªq
);

464 
	`äs_vÆue_de°roy
(
ªp
);

467 
rc
 = 
	`zmq_˛o£
(
CONTROL_SOCKET
);

468 
	`check
(
rc
 == 0, "FailedÅo close controlÖort socket.");

469 
CONTROL_SOCKET
 = 
NULL
;

470 
	`log_öfo
("ControlÖortÉxiting.");

471 
	`èskexô
(0);

473 
îr‹
:

474 
	`log_öfo
("ControlÖortÉxiting withÉrror.");

475 
	`zmq_˛o£
(
CONTROL_SOCKET
);

476 
CONTROL_SOCKET
 = 
NULL
;

477 
	`èskexô
(1);

478 
	}
}

481 
	$C⁄åﬁ_p‹t_°¨t
()

483 
	`èsk¸óã
(
C⁄åﬁ_èsk
, 
NULL
, 32 * 1024);

484 
	}
}

486 
	$C⁄åﬁ_p‹t_°›
()

488 
CONTROL_RUNNING
 = 0;

489 
	}
}

	@control.h

1 #i‚de‡
_c⁄åﬁ_h


2 
	#_c⁄åﬁ_h


	)

4 
C⁄åﬁ_p‹t_°¨t
();

6 
C⁄åﬁ_p‹t_°›
();

	@dbg.c

35 
	~"dbg.h
"

36 
	~"b°rög.h
"

38 
FILE
 *
	gLOG_FILE
 = 
NULL
;

40 
	$dbg_£t_log
(
FILE
 *
log_fûe
)

42 
LOG_FILE
 = 
log_fûe
;

43 
	}
}

46 
FILE
 *
	$dbg_gë_log
()

48  
LOG_FILE
 !
NULL
 ? LOG_FILE : 
°dîr
;

49 
	}
}

51 
	$Ârötf_wôh_time°amp
(
FILE
 *
log_fûe
, c⁄° *
f‹m©
, ...)

53 
va_li°
 
¨gs
;

54 
time_t
 
now
 = 
	`time
(
NULL
);

55 
b°rög
 
time_°amp
 = 
	`bSåfTime
("%a, %d %b %Y %H:%M:%S GMT", 
	`gmtime
(&
now
));

56 
	`va_°¨t
(
¨gs
, 
f‹m©
);

57 
	`Ârötf
(
log_fûe
, "%†", 
time_°amp
->
d©a
);

58 
	`vÂrötf
(
log_fûe
, 
f‹m©
, 
¨gs
);

59 
	`bde°roy
(
time_°amp
);

60 
	`va_íd
(
¨gs
);

61 
	}
}

	@dbg.h

35 #i‚de‡
__dbg_h__


36 
	#__dbg_h__


	)

38 
	~<°dio.h
>

39 
	~<î∫o.h
>

40 
	~<°rög.h
>

41 
	~<°d¨g.h
>

43 
dbg_£t_log
(
FILE
 *
log_fûe
);

44 
FILE
 *
dbg_gë_log
();

45 
Ârötf_wôh_time°amp
(
FILE
 *
log_fûe
, c⁄° *
f‹m©
, ...);

47 #ifde‡
NDEBUG


48 
	#debug
(
M
, ...)

	)

50 
	#debug
(
M
, ...Ë
	`Ârötf_wôh_time°amp
(
	`dbg_gë_log
(), "DEBUG %s:%d: " M "\n", 
__FILE__
, 
__LINE__
, ##
__VA_ARGS__
)

	)

57 
	#check_debug
(
A
, 
M
, ...Ëif(!(A)Ë{ 
	`debug
(M, ##
__VA_ARGS__
); 
î∫o
=0; 
îr‹
; }

	)

59 
	#˛ón_î∫o
(Ë(
î∫o
 =0 ? "N⁄e" : 
	`°ªº‹
”ºno))

	)

61 #ifde‡
NO_LINENOS


63 
	#log_îr
(
M
, ...Ë
	`Ârötf_wôh_time°amp
(
	`dbg_gë_log
(), "[ERROR] (î∫o: %sË" M "\n", 
	`˛ón_î∫o
(), ##
__VA_ARGS__
)

	)

64 
	#log_w¨n
(
M
, ...Ë
	`Ârötf_wôh_time°amp
(
	`dbg_gë_log
(), "[WARN] (î∫o: %sË" M "\n", 
	`˛ón_î∫o
(), ##
__VA_ARGS__
)

	)

65 
	#log_öfo
(
M
, ...Ë
	`Ârötf_wôh_time°amp
(
	`dbg_gë_log
(), "[INFO] " M "\n", ##
__VA_ARGS__
)

	)

67 
	#log_îr
(
M
, ...Ë
	`Ârötf_wôh_time°amp
(
	`dbg_gë_log
(), "[ERROR] (%s:%d:Éºno: %sË" M "\n", 
__FILE__
, 
__LINE__
, 
	`˛ón_î∫o
(), ##
__VA_ARGS__
)

	)

68 
	#log_w¨n
(
M
, ...Ë
	`Ârötf_wôh_time°amp
(
	`dbg_gë_log
(), "[WARN] (%s:%d:Éºno: %sË" M "\n", 
__FILE__
, 
__LINE__
, 
	`˛ón_î∫o
(), ##
__VA_ARGS__
)

	)

69 
	#log_öfo
(
M
, ...Ë
	`Ârötf_wôh_time°amp
(
	`dbg_gë_log
(), "[INFO] (%s:%dË" M "\n", 
__FILE__
, 
__LINE__
, ##
__VA_ARGS__
)

	)

72 
	#check
(
A
, 
M
, ...Ëif(!(A)Ë{ 
	`log_îr
(M, ##
__VA_ARGS__
); 
î∫o
=0; 
îr‹
; }

	)

74 
	#£¡öñ
(
M
, ...Ë{ 
	`log_îr
(M, ##
__VA_ARGS__
); 
î∫o
=0; 
îr‹
; }

	)

76 
	#check_mem
(
A
Ë
	`check
((A), "Ouào‡mem‹y.")

	)

78 
	#TRACE
(
C
,
E
Ë
	`debug
("--> %s(%s:%dË%s:%d ", "" #C, 
	`Sèã_evít_«me
(E), E, 
__FUNCTION__
, 
__LINE__
)

	)

80 
	#îr‹_ª•⁄£
(
F
, 
C
, 
M
, ...Ë{
	`Re•⁄£_£nd_°©us
(F, &
HTTP_
##C); 
	`£¡öñ
(M, ##
__VA_ARGS__
);}

	)

82 
	#îr‹_u∆ess
(
T
, 
F
, 
C
, 
M
, ...Ëif(!(T)Ë
	`îr‹_ª•⁄£
(F, C, M, ##
__VA_ARGS__
)

	)

	@dir.c

35 
	~<dú.h
>

36 
	~<ˇche.h
>

37 
	~<f˙é.h
>

38 
	~<dbg.h
>

39 
	~<èsk/èsk.h
>

40 
	~<°rög.h
>

41 
	~<∑âîn.h
>

42 
	~<as£π.h
>

43 
	~<mime.h
>

44 
	~<ª•⁄£.h
>

45 
	~"vîsi⁄.h
"

46 
	~"£âög.h
"

48 
	gMAX_DIR_PATH
 = 0;

49 
	gMAX_SEND_BUFFER
 = 0;

51 
ègb°rög
 
	gETAG_PATTERN
 = 
bsSètic
("[a-e0-9]+-[a-e0-9]+");

53 c⁄° *
	gRESPONSE_FORMAT
 = "HTTP/1.1 200 OK\r\n"

59 "Sîvî: " 
VERSION


62 c⁄° *
	gDIR_REDIRECT_FORMAT
 = "HTTP/1.1 301 Moved Permanently\r\n"

65 "Sîvî: " 
VERSION


69 c⁄° *
	gRFC_822_TIME
 = "%a, %d %b %Y %H:%M:%S GMT";

71 
	$fûîec‹d_ˇche_lookup
(*
d©a
, *
key
) {

72 
b°rög
 
ªque°_∑th
 = (b°rögË
key
;

73 
FûeRec‹d
 *
‰
 = (FûeRec‹d *Ë
d©a
;

75  !
	`b°rcmp
(
‰
->
ªque°_∑th
,Ñequest_path);

76 
	}
}

78 
	$fûîec‹d_ˇche_evi˘
(*
d©a
) {

79 
	`FûeRec‹d_ªÀa£
((
FûeRec‹d
 *Ë
d©a
);

80 
	}
}

82 
ölöe
 
	$gë_fûe_ªÆ_size
(
FûeRec‹d
 *
‰
)

85 
fd
 = 
	`›í
(
	`bd©´
(
‰
->
fuŒ_∑th
,""), 
O_RDONLY
);

86 
	`check
(
fd
 >0, "FaûedÅÿ›í fûêbuà°© w‹ked: %s", 
	`bd©a
(
‰
->
fuŒ_∑th
));

88 
‰
->
fûe_size
 = 
	`l£ek
(
fd
, 0L, 
SEEK_END
);

89 
	`check
(
‰
->
fûe_size
 >0, "FaûedÅÿ£ekÉnd o‡fûe: %s", 
	`bd©a
(‰->
fuŒ_∑th
));

90 
	`l£ek
(
fd
, 0L, 
SEEK_SET
);

92 
	`fd˛o£
(
fd
);

95 
îr‹
:

96 i‡(
fd
>=0) {

97 
	`fd˛o£
(
fd
);

100 
	}
}

104 
FûeRec‹d
 *
	$Dú_föd_fûe
(
b°rög
 
∑th
, b°rög 
deÁu…_ty≥
)

106 
FûeRec‹d
 *
‰
 = 
	`ˇŒoc
((FileRecord), 1);

108 
	`check_mem
(
‰
);

111 
‰
->
u£rs
 = 1;

112 
‰
->
fuŒ_∑th
 = 
∑th
;

114 
rc
 = 
	`°©
(
	`bd©´
(
‰
->
fuŒ_∑th
,""), &‰->
sb
);

115 
	`check
(
rc
 =0, "Fûê°© faûed: %s", 
	`bd©a
(
‰
->
fuŒ_∑th
));

117 if(
	`S_ISDIR
(
‰
->
sb
.
°_mode
)) {

118 
‰
->
is_dú
 = 1;

119  
‰
;

122 
	`check
(
	`gë_fûe_ªÆ_size
(
‰
Ë=0, "FaûedÅÿ£tu∞thêfûêªc‹d f‹ %s", 
	`bd©a
(‰->
fuŒ_∑th
));

123 
‰
->
lﬂded
 = 
	`time
(
NULL
);

125 
‰
->
œ°_mod
 = 
	`bSåfTime
(
RFC_822_TIME
, 
	`gmtime
(&‰->
sb
.
°_mtime
));

126 
	`check
(
‰
->
œ°_mod
, "FailedÅo formatÜast modifiedÅime.");

129 
‰
->
c⁄ã¡_ty≥
 = 
	`MIME_m©ch_ext
(
∑th
, 
deÁu…_ty≥
);

130 
	`check
(
‰
->
c⁄ã¡_ty≥
, "Shouldálways getá contentÅype back.");

133 
‰
->
fuŒ_∑th
 = 
∑th
;

135 
time_t
 
now
 = 
	`time
(
NULL
);

137 
‰
->
d©e
 = 
	`bSåfTime
(
RFC_822_TIME
, 
	`gmtime
(&
now
));

139 
‰
->
ëag
 = 
	`bf‹m©
("%x-%x", fr->
sb
.
°_mtime
, fr->
fûe_size
);

141 
‰
->
hódî
 = 
	`bf‹m©
(
RESPONSE_FORMAT
,

142 
	`bd©a
(
‰
->
d©e
),

143 
	`bd©a
(
‰
->
c⁄ã¡_ty≥
),

144 
‰
->
fûe_size
,

145 
	`bd©a
(
‰
->
œ°_mod
),

146 
	`bd©a
(
‰
->
ëag
));

148 
	`check
(
‰
->
hódî
 !
NULL
, "FailedÅo createÑesponse header.");

150  
‰
;

152 
îr‹
:

153 
	`FûeRec‹d_de°roy
(
‰
);

154  
NULL
;

155 
	}
}

157 
ölöe
 
	$Dú_£nd_hódî
(
FûeRec‹d
 *
fûe
, 
C⁄√˘i⁄
 *
c⁄n
)

159  
	`IOBuf_£nd
(
c⁄n
->
iob
, 
	`bd©a
(
fûe
->
hódî
), 
	`bÀngth
(file->header));

160 
	}
}

162 
	$Dú_°ªam_fûe
(
FûeRec‹d
 *
fûe
, 
C⁄√˘i⁄
 *
c⁄n
)

164 
£¡
 = 0;

165 
fd
 = -1;

167 
rc
 = 
	`Dú_£nd_hódî
(
fûe
, 
c⁄n
);

168 
	`check_debug
(
rc
, "FailedÅo write headerÅo socket.");

170 
fd
 = 
	`›í
(
	`bd©´
(
fûe
->
fuŒ_∑th
,""), 
O_RDONLY
);

171 
	`check
(
fd
 >0, "FaûedÅÿ›í fûe: %s", 
	`bd©a
(
fûe
->
fuŒ_∑th
));

173 
£¡
 = 
	`IOBuf_°ªam_fûe
(
c⁄n
->
iob
, 
fd
, 
fûe
->
fûe_size
);

174 
	`check
(
£¡
 =
fûe
->
fûe_size
, "Error streaming file. Sent %d of %d bytes.", sent, file->file_size);

176 
	`fd˛o£
(
fd
);

177  
fûe
->
fûe_size
;

179 
îr‹
:

180 if(
fd
 >0Ë
	`fd˛o£
(fd);

182 
	}
}

185 
	$£tup_dú_whôñi°
(
Dú
 *
d
, 
b°rög
 
whôñi°
)

187 
äs_vÆue_t
 *
wl_äs
 = 
	`äs_∑r£
(
	`bd©a
(
whôñi°
),
	`bÀngth
(whôñi°),
NULL
);

189 
d
->
whôñi°
=
NULL
;

191 
	`check
(
wl_äs
!=
NULL
, "UnableÅoÖarseÅnetstring for whitelist");

193 
äs_vÆue_t
 *
ôem
 = 
	`d¨øy_p›
(
wl_äs
->
vÆue
.
li°
); iãm !
NULL
;

194 
ôem
=
	`d¨øy_p›
(
wl_äs
->
vÆue
.
li°
)) {

195 
	`check
(
ôem
->
ty≥
 =
äs_èg_°rög
, "Non-string item in whitelist");

196 
d
->
whôñi°
=
	`t°_ö£π
(d->whôñi°,
	`bd©a
(
ôem
->
vÆue
.
°rög
),

197 
	`bÀngth
(
ôem
->
vÆue
.
°rög
),
	`b°r˝y
(item->value.string));

200 
	`äs_vÆue_de°roy
(
wl_äs
);

202 
îr‹
:

203 if(
wl_äs
) {

204 
	`äs_vÆue_de°roy
(
wl_äs
);

207 
	}
}

215 
Dú
 *
	$Dú_¸óã
(
b°rög
 
ba£
, b°rög 
ödex_fûe
, b°rög 
deÁu…_˘y≥
, 
ˇche_âl
,

216 
b°rög
 
whôñi°
)

218 
Dú
 *
dú
 = 
	`ˇŒoc
((Dir), 1);

219 
	`check_mem
(
dú
);

221 
dú
->
ru¬ög
 = 1;

223 if(!
MAX_SEND_BUFFER
 || !
MAX_DIR_PATH
) {

224 
MAX_SEND_BUFFER
 = 
	`Sëtög_gë_öt
("limits.dir_send_buffer", 16 * 1024);

225 
MAX_DIR_PATH
 = 
	`Sëtög_gë_öt
("limits.dir_max_path", 256);

226 
	`log_öfo
("MAXÜimits.dir_send_buffer=%d,Üimits.dir_max_path=%d",

227 
MAX_SEND_BUFFER
, 
MAX_DIR_PATH
);

230 
dú
->
ba£
 = 
	`b°r˝y
(base);

231 
	`check
(
	`bÀngth
(
dú
->
ba£
Ë< 
MAX_DIR_PATH
, "Base directory isÅooÜong, must beÜessÅhan %d", MAX_DIR_PATH);

232 
	`check
(
	`bch¨
(
dú
->
ba£
, 
	`bÀngth
(dú->ba£Ë- 1Ë='/', "End dúe˘‹y ba£ wôh / i¿%†‹ iàw⁄'àw‹kÑight.", 
	`bd©a
(base));

234 
dú
->
ödex_fûe
 = 
	`b°r˝y
(index_file);

235 
dú
->
deÁu…_˘y≥
 = 
	`b°r˝y
(default_ctype);

237 
dú
->
‰_ˇche
 = 
	`Cache_¸óã
(
FR_CACHE_SIZE
, 
fûîec‹d_ˇche_lookup
,

238 
fûîec‹d_ˇche_evi˘
);

239 
	`check
(
dú
->
‰_ˇche
, "FailedÅo create FileRecord cache");

241 
	`check
(
ˇche_âl
 >= 0, "Invalid cacheÅtl, must beáÖositive integer");

242 
dú
->
ˇche_âl
 = cache_ttl;

244 
	`£tup_dú_whôñi°
(
dú
, 
whôñi°
);

246  
dú
;

248 
îr‹
:

249 if(
dú
)

250 
	`‰ì
(
dú
);

252  
NULL
;

253 
	}
}

257 
	$Dú_de°roy
(
Dú
 *
dú
)

259 if(
dú
) {

260 
	`bde°roy
(
dú
->
ba£
);

261 
	`bde°roy
(
dú
->
ödex_fûe
);

262 
	`bde°roy
(
dú
->
n‹mÆized_ba£
);

263 
	`bde°roy
(
dú
->
deÁu…_˘y≥
);

264 if(
dú
->
‰_ˇche
Ë
	`Cache_de°roy
(dir->fr_cache);

265 
	`‰ì
(
dú
);

267 
	}
}

269 
	$FûeRec‹d_ªÀa£
(
FûeRec‹d
 *
fûe
)

271 if(
fûe
) {

272 
fûe
->
u£rs
--;

273 
	`check
(
fûe
->
u£rs
 >= 0, "User count on fileÑecord somehow fell below 0");

274 if(
fûe
->
u£rs
 <0Ë
	`FûeRec‹d_de°roy
(file);

277 
îr‹
:

279 
	}
}

281 
	$FûeRec‹d_de°roy
(
FûeRec‹d
 *
fûe
)

283 if(
fûe
) {

284 if(!
fûe
->
is_dú
) {

285 
	`bde°roy
(
fûe
->
d©e
);

286 
	`bde°roy
(
fûe
->
œ°_mod
);

287 
	`bde°roy
(
fûe
->
hódî
);

288 
	`bde°roy
(
fûe
->
ëag
);

289 
	`bde°roy
(
fûe
->
ªque°_∑th
);

291 
	`bde°roy
(
fûe
->
fuŒ_∑th
);

293 
	`‰ì
(
fûe
);

295 
	}
}

297 
ölöe
 *
	$uæ_decode
(c⁄° *
ö
, *
out
)

299 c⁄° *
cur
;

300 
d1
;

301 
d2
;

302 *
ªs
 = 
out
;

304 if(!
ö
) {

305 *
out
 = '\0';

306  
ªs
;

309 
cur
 = 
ö
;

311 *
cur
) {

312 
d1
 = *(
cur
+1);

313 
d2
 = *(
cur
+2);

316 if(!
d1
) {

317 *
out
 = *
cur
;

318 *(
out
+1) = '\0';

319  
ªs
;

323 if(!
d2
) {

324 *
out
 = *
cur
;

325 *(
out
+1Ë*(
cur
+1);

326 *(
out
+2) = '\0';

327  
ªs
;

331 if(*
cur
=='%' && 
	`isxdigô
(
d1
Ë&& isxdigô(
d2
)) {

332 
d1
 = 
	`tﬁowî
(d1);

333 
d2
 = 
	`tﬁowî
(d2);

335 if–
d1
 <= '9' )

336 
d1
 = d1 - '0';

338 
d1
 = d1 - 'a' + 10;

339 if–
d2
 <= '9' )

340 
d2
 = d2 - '0';

342 
d2
 = d2 - 'a' + 10;

344 *
out
 = 16 * 
d1
 + 
d2
;

346 
out
 += 1;

347 
cur
 += 3;

350 *
out
 = *
cur
;

351 
out
 += 1;

352 
cur
 += 1;

356 *
out
 = '\0';

357  
ªs
;

358 
	}
}

360 
ölöe
 
	$n‹mÆize_∑th
(
b°rög
 
èrgë
)

362 
	`bÆlocmö
(
èrgë
, 
PATH_MAX
);

363 *
∑th_buf
 = 
NULL
;

366 if(
∑th_buf
 =
NULL
) {

367 
∑th_buf
 = 
	`ˇŒoc
(
PATH_MAX
+1, 1);

368 
	`check_mem
(
∑th_buf
);

371 
	`uæ_decode
((c⁄° *)(
	`bd©a
(
èrgë
)), 
∑th_buf
);

372 
	`bassignc°r
(
èrgë
, 
∑th_buf
);

374 *
n‹mÆized
 = 
	`ªÆ∑th
((c⁄° *)(
	`bd©a
(
èrgë
)), 
∑th_buf
);

375 
	`check_debug
(
n‹mÆized
, "FaûedÅÿn‹mÆizê∑th: %s", 
	`bd©a
(
èrgë
));

377 
	`bassignc°r
(
èrgë
, 
n‹mÆized
);

381 
îr‹
:

383 
	}
}

385 
ölöe
 
	$Dú_œzy_n‹mÆize_ba£
(
Dú
 *
dú
)

387 if(
dú
->
n‹mÆized_ba£
 =
NULL
) {

388 
dú
->
n‹mÆized_ba£
 = 
	`b°r˝y
(dú->
ba£
);

389 
	`check
(
	`n‹mÆize_∑th
(
dú
->
n‹mÆized_ba£
) == 0,

390 "FaûedÅÿn‹mÆizêba£Ö©h: %s", 
	`bd©a
(
dú
->
n‹mÆized_ba£
));

392 
	`debug
("LazyÇ‹mÆized ba£Ö©h %†ötÿ%s", 
	`bd©a
(
dú
->
ba£
), bd©a(dú->
n‹mÆized_ba£
));

401 
îr‹
:

403 
	}
}

405 
ölöe
 
	$Dú_vÆid_∑th
(
Dú
 *
dú
, 
b°rög
 
èrgë
)

407 if(!
	`b°∫cmp
(
èrgë
,
dú
->
n‹mÆized_ba£
,
	`bÀngth
(dir->normalized_base))) {

410 
b°rög
 
be°_m©ch
 = 
	`t°_£¨ch_¥efix
(
dú
->
whôñi°
,

411 
	`bd©a
(
èrgë
),
	`bÀngth
(target));

412  
	`b°∫cmp
(
èrgë
,
be°_m©ch
,
	`bÀngth
(best_match));

413 
	}
}

417 
FûeRec‹d
 *
	$FûeRec‹d_ˇche_check
(
Dú
 *
dú
, 
b°rög
 
∑th
)

419 
FûeRec‹d
 *
fûe
 = 
	`Cache_lookup
(
dú
->
‰_ˇche
, 
∑th
);

421 if(
fûe
) {

422 
time_t
 
now
 = 
	`time
(
NULL
);

423 c⁄° *
p
 = 
	`bd©a
(
fûe
->
fuŒ_∑th
);

424 
°©
 
sb
;

426 if(
	`dif·ime
(
now
, 
fûe
->
lﬂded
Ë> 
dú
->
ˇche_âl
) {

427 if–
p
 =
NULL
 ||

428 0 !
	`°©
(
p
, &
sb
) ||

429 
fûe
->
sb
.
°_mtime
 != sb.st_mtime ||

430 
fûe
->
sb
.
°_˘ime
 != sb.st_ctime ||

431 
fûe
->
sb
.
°_uid
 != sb.st_uid ||

432 
fûe
->
sb
.
°_gid
 != sb.st_gid ||

433 
fûe
->
sb
.
°_mode
 != sb.st_mode ||

434 
fûe
->
sb
.
°_size
 != sb.st_size ||

435 
fûe
->
sb
.
°_öo
 != sb.st_ino ||

436 
fûe
->
sb
.
°_dev
 != sb.st_dev

438 
	`Cache_evi˘_obje˘
(
dú
->
‰_ˇche
, 
fûe
);

439 
fûe
 = 
NULL
;

441 
fûe
->
lﬂded
 = 
now
;

446  
fûe
;

447 
	}
}

450 
FûeRec‹d
 *
	$Dú_ªsﬁve_fûe
(
Dú
 *
dú
, 
b°rög
 
¥efix
, b°rög 
∑th
)

452 
FûeRec‹d
 *
fûe
 = 
NULL
;

453 
b°rög
 
èrgë
 = 
NULL
;

455 
	`check
(
	`bÀngth
(
¥efix
Ë<bÀngth(
∑th
),

456 "P©h '%s' i†sh‹ã∏th™Öªfix '%s',ÇŸáŒowed.", 
	`bd©a
(
∑th
), bd©a(
¥efix
));

458 
	`check
(
	`Dú_œzy_n‹mÆize_ba£
(
dú
) == 0, "FailedÅoÇormalize baseÖath whenÑequesting %s",

459 
	`bd©a
(
∑th
));

461 
fûe
 = 
	`FûeRec‹d_ˇche_check
(
dú
, 
∑th
);

463 if(
fûe
) {

465 
fûe
->
u£rs
++;

466  
fûe
;

469 
	`check
(
	`bch¨
(
¥efix
, 0Ë='/', "Rouã '%s'ÖoötögÅÿdúe˘‹y mu° havê¥efix wôhÜódög '/'", 
	`bd©a
(prefix));

470 
	`check
(
	`bÀngth
(
¥efix
Ë< 
MAX_DIR_PATH
, "Prefix isÅooÜong, must beÜessÅhan %d", MAX_DIR_PATH);

472 
	`debug
("BuildingÅarget from base: %sÖrefix: %sÖath: %s index_file: %s",

473 
	`bd©a
(
dú
->
n‹mÆized_ba£
),

474 
	`bd©a
(
¥efix
),

475 
	`bd©a
(
∑th
),

476 
	`bd©a
(
dú
->
ödex_fûe
));

478 if(
	`bch¨
(
∑th
, 
	`bÀngth
(path) - 1) == '/') {

480 
èrgë
 = 
	`bf‹m©
("%s/%s%s",

481 
	`bd©a
(
dú
->
n‹mÆized_ba£
),

482 
	`bd©aofs
(
∑th
, 
	`bÀngth
(
¥efix
)),

483 
	`bd©a
(
dú
->
ödex_fûe
));

484 } if(
	`bi£q
(
¥efix
, 
∑th
)) {

485 
èrgë
 = 
	`bf‹m©
("%s%s", 
	`bd©a
(
dú
->
n‹mÆized_ba£
), bd©a(
∑th
));

487 
èrgë
 = 
	`bf‹m©
("%s/%s", 
	`bd©a
(
dú
->
n‹mÆized_ba£
), 
	`bd©aofs
(
∑th
, 
	`bÀngth
(
¥efix
)));

490 
	`check_mem
(
èrgë
);

492 
	`check_debug
(
	`n‹mÆize_∑th
(
èrgë
) == 0,

493 "FaûedÅÿn‹mÆizêèrgëÖ©h: %s", 
	`bd©a
(
èrgë
));

495 
	`check
(0 !
	`Dú_vÆid_∑th
(
dú
,
èrgë
),

497 
	`bd©a
(
èrgë
), bd©a(
dú
->
ba£
));

500 
fûe
 = 
	`Dú_föd_fûe
(
èrgë
, 
dú
->
deÁu…_˘y≥
);

501 
	`check_debug
(
fûe
, "Eº‹ o≥nög fûe: %s", 
	`bd©a
(
èrgë
));

504 
fûe
->
u£rs
++;

505 
fûe
->
ªque°_∑th
 = 
	`b°r˝y
(
∑th
);

506 
	`Cache_add
(
dú
->
‰_ˇche
, 
fûe
);

508  
fûe
;

510 
îr‹
:

511 
	`bde°roy
(
èrgë
);

512 
	`FûeRec‹d_ªÀa£
(
fûe
);

513  
NULL
;

514 
	}
}

517 
ölöe
 
b°rög
 
	$Dú_if_modifõd_sö˚
(
Reque°
 *
ªq
, 
FûeRec‹d
 *
fûe
, 
if_modifõd_sö˚
)

519 if(
if_modifõd_sö˚
 <()
	`time
(
NULL
Ë&& 
fûe
->
sb
.
°_mtime
 <= if_modified_since) {

520 
ªq
->
°©us_code
 = 304;

521  &
HTTP_304
;

523  
NULL
;

526 
ªq
->
°©us_code
 = 500;

527  &
HTTP_500
;

528 
	}
}

530 
ölöe
 
b°rög
 
	$Dú_n⁄e_m©ch
(
Reque°
 *
ªq
, 
FûeRec‹d
 *
fûe
, 
if_modifõd_sö˚
, 
b°rög
 
if_n⁄e_m©ch
)

532 if(
	`bi£qc°r
(
if_n⁄e_m©ch
, "*"Ë|| 
	`bi£q
(if_n⁄e_m©ch, 
fûe
->
ëag
)) {

533 
ªq
->
°©us_code
 = 304;

534  &
HTTP_304
;

536 if(
if_modifõd_sö˚
) {

537  
	`Dú_if_modifõd_sö˚
(
ªq
, 
fûe
, 
if_modifõd_sö˚
);

539  
NULL
;

543 
ªq
->
°©us_code
 = 500;

544  &
HTTP_500
;

545 
	}
}

547 
ölöe
 
b°rög
 
	$Dú_ˇlcuœã_ª•⁄£
(
Reque°
 *
ªq
, 
FûeRec‹d
 *
fûe
)

549 
if_unmodifõd_sö˚
 = 0;

550 
if_modifõd_sö˚
 = 0;

551 
b°rög
 
if_m©ch
 = 
NULL
;

552 
b°rög
 
if_n⁄e_m©ch
 = 
NULL
;

554 if(
fûe
) {

555 if(
fûe
->
is_dú
)

556  
	`bf‹m©
(
DIR_REDIRECT_FORMAT
, 
	`bd©a
(
ªq
->
ho°
),

557 
	`bd©a
(
ªq
->
uri
));

559 
if_m©ch
 = 
	`Reque°_gë
(
ªq
, &
HTTP_IF_MATCH
);

561 if(!
if_m©ch
 || 
	`bi£qc°r
(if_m©ch, "*"Ë|| 
	`b°rög_m©ch
(if_m©ch, &
ETAG_PATTERN
)) {

562 
if_n⁄e_m©ch
 = 
	`Reque°_gë
(
ªq
, &
HTTP_IF_NONE_MATCH
);

563 
if_unmodifõd_sö˚
 = 
	`Reque°_gë_d©e
(
ªq
, &
HTTP_IF_UNMODIFIED_SINCE
, 
RFC_822_TIME
);

564 
if_modifõd_sö˚
 = 
	`Reque°_gë_d©e
(
ªq
, &
HTTP_IF_MODIFIED_SINCE
, 
RFC_822_TIME
);

566 
	`debug
("TESTING WITH: if_match: %s, if_none_match: %s, if_unmodified_since: %d, if_modified_since: %d",

567 
	`bd©a
(
if_m©ch
), bd©a(
if_n⁄e_m©ch
), 
if_unmodifõd_sö˚
, 
if_modifõd_sö˚
);

569 if(
if_unmodifõd_sö˚
) {

570 if(
fûe
->
sb
.
°_mtime
 > 
if_unmodifõd_sö˚
) {

571 
ªq
->
°©us_code
 = 412;

572  &
HTTP_412
;

573 } if(
if_n⁄e_m©ch
) {

574  
	`Dú_n⁄e_m©ch
(
ªq
, 
fûe
, 
if_modifõd_sö˚
, 
if_n⁄e_m©ch
);

575 } if(
if_modifõd_sö˚
) {

576  
	`Dú_if_modifõd_sö˚
(
ªq
, 
fûe
, 
if_modifõd_sö˚
);

578 } if(
if_n⁄e_m©ch
) {

579  
	`Dú_n⁄e_m©ch
(
ªq
, 
fûe
, 
if_modifõd_sö˚
, 
if_n⁄e_m©ch
);

580 } if(
if_modifõd_sö˚
) {

581  
	`Dú_if_modifõd_sö˚
(
ªq
, 
fûe
, 
if_modifõd_sö˚
);

584 
ªq
->
°©us_code
 = 200;

585  
NULL
;

588 
ªq
->
°©us_code
 = 412;

589  &
HTTP_412
;

592 
ªq
->
°©us_code
 = 404;

593  &
HTTP_404
;

596 
ªq
->
°©us_code
 = 500;

597  &
HTTP_500
;

598 
	}
}

600 
	$Dú_£rve_fûe
(
Dú
 *
dú
, 
Reque°
 *
ªq
, 
C⁄√˘i⁄
 *
c⁄n
)

602 
FûeRec‹d
 *
fûe
 = 
NULL
;

603 
b°rög
 
ª•
 = 
NULL
;

604 
b°rög
 
∑th
 = 
	`Reque°_∑th
(
ªq
);

605 
b°rög
 
¥efix
 = 
ªq
->prefix;

606 
	`check
(
¥efix
 !
NULL
, "Request withoutáÖrefix hit.");

607 
	`check
(
dú
->
ru¬ög
, "Directory isÇotÑunningánymore.");

609 
rc
 = 0;

610 
is_gë
 = 
	`bi£q
(
ªq
->
ªque°_mëhod
, &
HTTP_GET
);

611 
is_hód
 = 
is_gë
 ? 0 : 
	`bi£q
(
ªq
->
ªque°_mëhod
, &
HTTP_HEAD
);

613 
	`check
(
∑th
, "Request hadÇotÖath. That's weird.");

614 
ªq
->
ª•⁄£_size
 = 0;

616 if(!(
is_gë
 || 
is_hód
)) {

617 
ªq
->
°©us_code
 = 405;

618 
rc
 = 
	`Re•⁄£_£nd_°©us
(
c⁄n
, &
HTTP_405
);

619 
	`check_debug
(
rc
 =
	`bÀngth
(&
HTTP_405
), "FailedÅo send 405Åo client.");

621 } i‡(
	`bÀngth
(
¥efix
Ë> bÀngth(
∑th
)) {

622 
ªq
->
°©us_code
 = 404;

623 
rc
 = 
	`Re•⁄£_£nd_°©us
(
c⁄n
, &
HTTP_404
);

624 
	`check_debug
(
rc
 =
	`bÀngth
(&
HTTP_404
), "FailedÅo send 404Åo client.");

627 
fûe
 = 
	`Dú_ªsﬁve_fûe
(
dú
, 
¥efix
, 
∑th
);

628 
ª•
 = 
	`Dú_ˇlcuœã_ª•⁄£
(
ªq
, 
fûe
);

630 if(
ª•
) {

631 
rc
 = 
	`Re•⁄£_£nd_°©us
(
c⁄n
, 
ª•
);

632 
	`check_debug
(
rc
 =
	`bÀngth
(
ª•
), "FailedÅo sendÉrrorÑesponse on file serving.");

633 } if(
is_gë
) {

634 
rc
 = 
	`Dú_°ªam_fûe
(
fûe
, 
c⁄n
);

635 
ªq
->
ª•⁄£_size
 = 
rc
;

636 
	`check_debug
(
rc
 =
fûe
->
fûe_size
, "Didn'à£ndáŒ o‡thêfûe, síà%Œd o‡%s.",Ñc, 
	`bd©a
(
∑th
));

637 } if(
is_hód
) {

638 
rc
 = 
	`Dú_£nd_hódî
(
fûe
, 
c⁄n
);

639 
	`check_debug
(
rc
, "FailedÅo write headerÅo socket.");

641 
	`£¡öñ
("HowÅhe hell did you getÅo here. Tell Zed.");

644 
	`FûeRec‹d_ªÀa£
(
fûe
);

648 
	`£¡öñ
("Invalid code branch, Tell Zed you have magic.");

649 
îr‹
:

650 
	`FûeRec‹d_ªÀa£
(
fûe
);

652 
	}
}

	@dir.h

35 #i‚de‡
_dú_h


36 
	#_dú_h


	)

38 #i‚de‡
_FILE_OFFSET_BITS


39 
	#_FILE_OFFSET_BITS
 64

	)

42 
	~<°dlib.h
>

44 
	~<b°rög.h
>

45 
	~<ˇche.h
>

46 
	~<sys/ty≥s.h
>

47 
	~<sys/°©.h
>

48 
	~<uni°d.h
>

49 
	~<ªque°.h
>

50 
	~<c⁄√˘i⁄.h
>

51 
	~"vîsi⁄.h
"

53 
MAX_SEND_BUFFER
;

54 
MAX_DIR_PATH
;

56 c⁄° *
RESPONSE_FORMAT
;

58 
	sFûeRec‹d
 {

59 
	mis_dú
;

60 
	mu£rs
;

61 
time_t
 
	mlﬂded
;

62 
b°rög
 
	md©e
;

63 
b°rög
 
	mœ°_mod
;

64 
b°rög
 
	mc⁄ã¡_ty≥
;

65 
b°rög
 
	mhódî
;

66 
b°rög
 
	mªque°_∑th
;

67 
b°rög
 
	mfuŒ_∑th
;

68 
b°rög
 
	mëag
;

69 
°©
 
	msb
;

70 
off_t
 
	mfûe_size
;

71 } 
	tFûeRec‹d
;

73 
	sDú
 {

74 
	mru¬ög
;

75 
Cache
 *
	m‰_ˇche
;

76 
b°rög
 
	mba£
;

77 
b°rög
 
	mn‹mÆized_ba£
;

78 
b°rög
 
	mödex_fûe
;

79 
b°rög
 
	mdeÁu…_˘y≥
;

80 
t°_t
 *
	mwhôñi°
;

81 
	mˇche_âl
;

82 } 
	tDú
;

84 
Dú
 *
Dú_¸óã
(
b°rög
 
ba£
, b°rög 
ödex_fûe
,

85 
b°rög
 
deÁu…_˘y≥
, 
ˇche_âl
,

86 
b°rög
 
whôñi°
);

88 
Dú_de°roy
(
Dú
 *
dú
);

90 
FûeRec‹d
 *
	$Dú_föd_fûe
(
b°rög
 
∑th
, b°rög 
deÁu…_ty≥
Ë
	`__©åibuã__
((
	`n⁄nuŒ
(1)));;

92 
	`Dú_°ªam_fûe
(
FûeRec‹d
 *
fûe
, 
C⁄√˘i⁄
 *
c⁄n
);

94 
	`Dú_£rve_fûe
(
Dú
 *
dú
, 
Reque°
 *
ªq
, 
C⁄√˘i⁄
 *
c⁄n
);

96 
FûeRec‹d
 *
	`Dú_ªsﬁve_fûe
(
Dú
 *
dú
, 
b°rög
 
¥efix
, b°rög 
∑th
);

98 
	`FûeRec‹d_ªÀa£
(
FûeRec‹d
 *
fûe
);

99 
	`FûeRec‹d_de°roy
(
FûeRec‹d
 *
fûe
);

101 
	#FR_CACHE_SIZE
 32

	)

	@events.h

35 #i‚de‡
_evíts_h


36 
	#_evíts_h


	)

38 
	#EVENT_MIN
 100

	)

40 
	eSèãEvít
 {

41 
	mCLOSE
=100,

42 
	mCONNECT
=101,

43 
	mDIRECTORY
=102,

44 
	mFAILED
=103,

45 
	mHANDLER
=104,

46 
	mHTTP_REQ
=105,

47 
	mMSG_REQ
=106,

48 
	mOPEN
=107,

49 
	mPROXY
=108,

50 
	mREMOTE_CLOSE
=109,

51 
	mREQ_RECV
=110,

52 
	mREQ_SENT
=111,

53 
	mRESP_SENT
=112,

54 
	mSOCKET_REQ
=113,

55 
	mTIMEOUT
=114,

56 
	mWS_REQ
=115,

57 
	mEVENT_END
=116

58 } 
	tSèãEvít
 ;

	@filter.c

35 
	~"fûãr.h
"

36 
	~"adt/d¨øy.h
"

37 
	~"mem/hÆloc.h
"

38 
	~<dlf˙.h
>

42 
d¨øy_t
 *
	gREGISTERED_FILTERS
 = 
NULL
;

43 
	gFILTERS_ACTIVATED
 = 0;

45 
	$Fûãr_öô
()

47 
REGISTERED_FILTERS
 = 
	`d¨øy_¸óã
((
d¨øy_t
 *), 
EVENT_END
 - 
EVENT_MIN
);

48 
	`check_mem
(
REGISTERED_FILTERS
);

51 
îr‹
:

53 
	}
}

58 
	$Fûãr_de°roy
()

60 
	`d¨øy_de°roy
(
REGISTERED_FILTERS
);

61 
REGISTERED_FILTERS
 = 
NULL
;

62 
	}
}

64 
ölöe
 
d¨øy_t
 *
	$Fûãr_lookup
(
SèãEvít
 
√xt
)

66  
	`d¨øy_gë
(
REGISTERED_FILTERS
, 
√xt
 - 
EVENT_MIN
);

67 
	}
}

69 
ölöe
 
d¨øy_t
 *
	$Fûãr_lookup_¸óã
(
SèãEvít
 
√xt
)

71 
d¨øy_t
 *
fûts
 = 
	`Fûãr_lookup
(
√xt
);

73 if(
fûts
 =
NULL
) {

75 
fûts
 = 
	`d¨øy_¸óã
((
Fûãr
), 10);

76 
	`check_mem
(
fûts
);

77 
	`d¨øy_£t
(
REGISTERED_FILTERS
, 
√xt
 - 
EVENT_MIN
, 
fûts
);

80  
fûts
;

81 
îr‹
:

82  
NULL
;

83 
	}
}

86 
	$Fûãr_run
(
SèãEvít
 
√xt
, 
C⁄√˘i⁄
 *
c⁄n
)

88 
i
 = 0;

89 
SèãEvít
 
ªs
 = 
√xt
;

90 
	`check
(
REGISTERED_FILTERS
 !
NULL
, "No filtersÜoaded yet, don't callÅhis.");

92 
d¨øy_t
 *
fûãrs
 = 
	`Fûãr_lookup
(
√xt
);

94 if(
fûãrs
 !
NULL
) {

95 
i
 = 0; i < 
	`d¨øy_íd
(
fûãrs
Ë&& 
ªs
 =
√xt
; i++) {

96 
Fûãr
 *
fûãr
 = 
	`d¨øy_gë
(
fûãrs
, 
i
);

97 
	`check
(
fûãr
 !
NULL
, "ExpectedÅo getá filterÑecord but got NULL.");

99 
ªs
 = 
fûãr
->
	`cb
(
√xt
, 
c⁄n
, fûãr->
c⁄fig
);

100 
	`check
(
ªs
 >
CLOSE
 &&Ñe†< 
EVENT_END
,

101 "Fûã∏%†ªtu∫ed invÆidÉvít: %d", 
	`bd©a
(
fûãr
->
lﬂd_∑th
), 
ªs
);

105  
ªs
;

107 
îr‹
:

109 
	}
}

111 
	$Fûãr_add
(
SèãEvít
 
°©e
, 
fûãr_cb
 
cb
, 
b°rög
 
lﬂd_∑th
, 
äs_vÆue_t
 *
c⁄fig
)

113 
d¨øy_t
 *
fûãrs
 = 
	`Fûãr_lookup_¸óã
(
°©e
);

114 
	`check
(
fûãrs
 !
NULL
, "Invalid filter state: %d given for filter %s",

115 
°©e
, 
	`bd©a
(
lﬂd_∑th
));

117 
Fûãr
 *
fûãr
 = 
	`d¨øy_√w
(
fûãrs
);

118 
	`check_mem
(
fûãr
);

120 
fûãr
->
°©e
 = state;

121 
fûãr
->
cb
 = cb;

122 
fûãr
->
lﬂd_∑th
 = 
	`b°r˝y
(load_path);

123 
fûãr
->
c⁄fig
 = config;

125 
	`d¨øy_©èch
(
fûãrs
, 
fûãr
);

126 
	`d¨øy_push
(
fûãrs
, 
fûãr
);

129 
îr‹
:

131 
	}
}

134 
	$Fûãr_lﬂd
(
Sîvî
 *
§v
, 
b°rög
 
lﬂd_∑th
, 
äs_vÆue_t
 *
c⁄fig
)

136 
i
 = 0;

138 if(
REGISTERED_FILTERS
 =
NULL
) {

139 
	`check
(
	`Fûãr_öô
() == 0, "FailedÅo initialize filter storage.");

140 
FILTERS_ACTIVATED
 = 1;

144 *
lib
 = 
	`dl›í
(
	`bd©a
(
lﬂd_∑th
), 
RTLD_LAZY
 | 
RTLD_LOCAL
);

145 
	`check
(
lib
 !
NULL
, "FaûedÅÿlﬂd fûã∏%s: %s.", 
	`bd©a
(
lﬂd_∑th
), 
	`dÀº‹
());

148 
fûãr_öô_cb
 
öô
 = 
	`dlsym
(
lib
, "filter_init");

149 
	`check
(
öô
 !
NULL
, "Fûã∏%†d€¢'àhavê™ inô fun˘i⁄.", 
	`bd©a
(
lﬂd_∑th
));

151 
n°©es
 = 0;

152 
SèãEvít
 *
°©es
 = 
	`öô
(
§v
, 
lﬂd_∑th
, &
n°©es
);

153 
	`check
(
°©es
 !
NULL
, "Inô f‹ %†ªtu∫ NULL faûuª.", 
	`bd©a
(
lﬂd_∑th
));

154 
	`check
(
n°©es
 > 0, "Inô f‹ %†ªtu∫ <0 sèãs,ÇŸhögÅÿdo.", 
	`bd©a
(
lﬂd_∑th
));

156 
fûãr_cb
 
cb
 = 
	`dlsym
(
lib
, "filter_transition");

157 
	`check
(
cb
 !
NULL
, "NÿFûãr_å™sôi⁄ deföed i¿%s, faû.", 
	`bd©a
(
lﬂd_∑th
));

160 
i
 = 0; i < 
n°©es
; i++) {

161 
SèãEvít
 
°©e
 = 
°©es
[
i
];

162 
	`check
(
°©e
 >
CLOSE
 && sèã < 
EVENT_END
,

163 "InvÆid sèãÑëu∫ by %†Fûãr_öô: %d", 
	`bd©a
(
lﬂd_∑th
), 
°©e
);

166 
	`check
(
	`Fûãr_add
(
°©e
, 
cb
, 
lﬂd_∑th
, 
c⁄fig
) == 0, "FailedÅoádd filter:state %s:%d",

167 
	`bd©a
(
lﬂd_∑th
), 
°©e
);

171 
îr‹
:

173 
	}
}

176 
SèãEvít
 *
	$Fûãr_°©e_li°
(
SèãEvít
 *
°©es
, 
Àngth
)

178 
SèãEvít
 *
√w_°©es
 = 
	`ˇŒoc
((SèãEvít), 
Àngth
);

179 
	`mem˝y
(
√w_°©es
, 
°©es
, 
Àngth
 * (
SèãEvít
));

181  
√w_°©es
;

182 
	}
}

	@filter.h

1 #i‚de‡
_fûãr_h


2 
	#_fûãr_h


	)

4 
	~"c⁄√˘i⁄.h
"

5 
	~"b°rög.h
"

6 
	~"evíts.h
"

7 
	~"äë°rögs.h
"

9 
FILTERS_ACTIVATED
;

11 
	$SèãEvít
 (*
	tfûãr_cb
)(
	t√xt
, 
	tC⁄√˘i⁄
 *
	tc⁄n
, 
	täs_vÆue_t
 *
	tc⁄fig
);

12 
SèãEvít
* (*
	tfûãr_öô_cb
)(
	tSîvî
 *
	t§v
, 
	tb°rög
 
	tlﬂd_∑th
, *
	tout_n°©es
);

14 
	sFûãr
 {

15 
°©e
;

16 
fûãr_cb
 
cb
;

17 
b°rög
 
lﬂd_∑th
;

18 
äs_vÆue_t
 *
c⁄fig
;

19 } 
	tFûãr
;

21 
	`Fûãr_öô
();

22 
	`Fûãr_de°roy
();

23 
	`Fûãr_run
(
SèãEvít
 
√xt
, 
C⁄√˘i⁄
 *
c⁄n
);

24 
	`Fûãr_add
(
SèãEvít
 
°©e
, 
fûãr_cb
 
cb
, 
b°rög
 
lﬂd_∑th
, 
äs_vÆue_t
 *
c⁄fig
);

25 
	`Fûãr_lﬂd
(
Sîvî
 *
§v
, 
b°rög
 
lﬂd_∑th
, 
äs_vÆue_t
 *
c⁄fig
);

27 
SèãEvít
 *
	`Fûãr_°©e_li°
(SèãEvíà*
°©es
, 
Àngth
);

29 
	#Fûãr_°©es_Àngth
(
L
Ë((LË/ (
SèãEvít
))

	)

31 
	#Fûãr_a˘iv©ed
(Ë(
FILTERS_ACTIVATED
)

	)

	@handler.c

35 
	~<h™dÀr.h
>

36 
	~<h™dÀr_∑r£r.h
>

37 
	~<èsk/èsk.h
>

38 
	~"zmq_com∑t.h
"

39 
	~<dbg.h
>

40 
	~<°dlib.h
>

41 
	~<°rög.h
>

42 
	~<c⁄√˘i⁄.h
>

43 
	~<as£π.h
>

44 
	~<ªgi°î.h
>

45 
	~"äë°rögs.h
"

46 
	~"xªque°.h
"

48 
	~"£âög.h
"

50 
ègb°rög
 
	gLEAVE_HEADER_JSON
 = 
bsSètic
("{\"METHOD\":\"JSON\"}");

51 
ègb°rög
 
	gLEAVE_HEADER_TNET
 = 
bsSètic
("16:6:METHOD,4:JSON,}");

52 
ègb°rög
 
	gLEAVE_MSG
 = 
bsSètic
("{\"type\":\"disconnect\"}");

53 
ègb°rög
 
	gXREQ_CTL
 = 
bsSètic
("ctl");

54 
ègb°rög
 
	gKEEP_ALIVE
 = 
bsSètic
("keep-alive");

55 
ègb°rög
 
	gCREDITS
 = 
bsSètic
("credits");

56 
ègb°rög
 
	gCANCEL
 = 
bsSètic
("cancel");

58 
	gHANDLER_STACK
;

60 
	$c°r_‰ì
(*
d©a
, *
höt
)

62 ()
höt
;

64 
	`‰ì
(
d©a
);

65 
	}
}

67 
	$H™dÀr_nŸify_Àave
(
H™dÀr
 *
h™dÀr
, 
id
)

69 *
sockë
 = 
h™dÀr
->
£nd_sockë
;

70 
	`as£π
(
sockë
 && "Socket can't be NULL");

71 
b°rög
 
∑ylﬂd
 = 
NULL
;

73 if(
h™dÀr
->
¥Ÿocﬁ
 =
HANDLER_PROTO_TNET
) {

74 
∑ylﬂd
 = 
	`bf‹m©
("%s %d @* %s%d:%s,",

75 
	`bd©a
(
h™dÀr
->
£nd_idít
), 
id
,

76 
	`bd©a
(&
LEAVE_HEADER_TNET
),

77 
	`bÀngth
(&
LEAVE_MSG
), 
	`bd©a
(&LEAVE_MSG));

79 
∑ylﬂd
 = 
	`bf‹m©
("%s %d @* %d:%s,%d:%s,",

80 
	`bd©a
(
h™dÀr
->
£nd_idít
), 
id
,

81 
	`bÀngth
(&
LEAVE_HEADER_JSON
), 
	`bd©a
(&LEAVE_HEADER_JSON),

82 
	`bÀngth
(&
LEAVE_MSG
), 
	`bd©a
(&LEAVE_MSG));

85 
	`check
(
∑ylﬂd
 !
NULL
, "FailedÅo makeÅheÖayload for disconnect.");

87 if(
	`H™dÀr_dñivî
(
sockë
, 
	`bd©a
(
∑ylﬂd
), 
	`bÀngth
(payload)) == -1) {

88 
	`log_îr
("C™'àãŒ h™dÀ∏%d dõd.", 
id
);

91 
îr‹
:

92 if(
∑ylﬂd
Ë
	`‰ì
(payload);

93 
	}
}

96 
	$H™dÀr_£tup
(
H™dÀr
 *
h™dÀr
)

98 
	`èsk«me
("Handler_task");

100 
h™dÀr
->
èsk
 = 
	`èsk£lf
();

102 
h™dÀr
->
£nd_sockë
 = 
	`H™dÀr_£nd_¸óã
(
	`bd©a
(h™dÀr->
£nd_•ec
), bd©a(h™dÀr->
£nd_idít
));

103 
	`check
(
h™dÀr
->
£nd_sockë
, "FailedÅo create handler socket.");

105 
h™dÀr
->
ªcv_sockë
 = 
	`H™dÀr_ªcv_¸óã
(
	`bd©a
(h™dÀr->
ªcv_•ec
), bd©a(h™dÀr->
ªcv_idít
));

106 
	`check
(
h™dÀr
->
ªcv_sockë
, "FailedÅo createÜistener socket.");

110 
îr‹
:

113 
	}
}

115 
ölöe
 
	$h™dÀr_ˇp_∑ylﬂd
(
b°rög
 
∑ylﬂd
)

117 if(
∑ylﬂd
->
d©a
[∑ylﬂd->
¶í
 - 1] == '\0') {

118 
	`båunc
(
∑ylﬂd
, 
	`bÀngth
(payload)-1);

119 } if(
∑ylﬂd
->
d©a
[∑ylﬂd->
¶í
] != '\0') {

120 
	`bc⁄ch¨
(
∑ylﬂd
, '\0');

122 
	}
}

124 
ölöe
 
	$dñivî_∑ylﬂd
(
øw
, 
fd
, 
C⁄√˘i⁄
 *
c⁄n
, 
b°rög
 
∑ylﬂd
)

126 
rc
 = 0;

128 if(
øw
) {

129 
	`debug
("SídögÑaw mesßgêtÿ%dÜígth %d", 
fd
, 
	`bÀngth
(
∑ylﬂd
));

130 
rc
 = 
	`C⁄√˘i⁄_dñivî_øw
(
c⁄n
, 
∑ylﬂd
);

131 
	`check
(
rc
 !-1, "Eº‹ sídögÑaw mesßgêtÿHTTPÜi°íî o¿FD %d, closögÅhem.", 
fd
);

133 
	`debug
("Sídög BASE64 mesßgêtÿ%dÜígth %d", 
fd
, 
	`bÀngth
(
∑ylﬂd
));

134 
	`h™dÀr_ˇp_∑ylﬂd
(
∑ylﬂd
);

135 
rc
 = 
	`C⁄√˘i⁄_dñivî
(
c⁄n
, 
∑ylﬂd
);

136 
	`check
(
rc
 !-1, "Eº‹ sídögÅÿMSGÜi°íî o¿FD %d, closögÅhem.", 
fd
);

140 
îr‹
:

142 
	}
}

144 
	$h™dÀr_¥o˚ss_c⁄åﬁ_ªque°
(
C⁄√˘i⁄
 *
c⁄n
, 
äs_vÆue_t
 *
d©a
)

146 
äs_vÆue_t
 *
¨gs
 = 
	`d¨øy_gë
(
d©a
->
vÆue
.
li°
, 1);

147 
	`check
(
¨gs
->
ty≥
==
äs_èg_di˘
, "Invalid controlÑesponse:Çotá dict.");

149 
hnode_t
 *
n
 = 
	`hash_lookup
(
¨gs
->
vÆue
.
di˘
, &
KEEP_ALIVE
);

150 if(
n
 !
NULL
) {

151 
	`Regi°î_pög
(
	`IOBuf_fd
(
c⁄n
->
iob
));

154 
n
 = 
	`hash_lookup
(
¨gs
->
vÆue
.
di˘
, &
CREDITS
);

155 if(
n
 !
NULL
) {

156 
äs_vÆue_t
 *
¸edôs
 = (äs_vÆue_à*)
	`hnode_gë
(
n
);

157 
c⁄n
->
£ndCªdôs
 +
¸edôs
->
vÆue
.
numbî
;

158 
	`èskwakeup
(&
c⁄n
->
u∂ﬂdRídez
);

161 
n
 = 
	`hash_lookup
(
¨gs
->
vÆue
.
di˘
, &
CANCEL
);

162 if(
n
 !
NULL
) {

163 
	`Regi°î_disc⁄√˘
(
	`IOBuf_fd
(
c⁄n
->
iob
));

164 
	`èskwakeup
(&
c⁄n
->
u∂ﬂdRídez
);

167 
	`äs_vÆue_de°roy
(
d©a
);

170 
îr‹
:

172 
	}
}

174 
ölöe
 
	$h™dÀr_¥o˚ss_exãnded_ªque°
(
fd
, 
C⁄√˘i⁄
 *
c⁄n
, 
b°rög
 
∑ylﬂd
)

176 *
x
;

177 
äs_vÆue_t
 *
d©a
 = 
NULL
;

178 
d¨øy_t
 *
l
 = 
NULL
;

180 
d©a
 = 
	`äs_∑r£
(
	`bd©a
(
∑ylﬂd
),
	`bÀngth
’aylﬂd),&
x
);

182 
	`check
((
x
-
	`bd©a
(
∑ylﬂd
))==
	`bÀngth
(payload), "InvalidÉxtendedÑesponse:Éxtra dataáfterÅnetstring.");

183 
	`check
(
d©a
->
ty≥
==
äs_èg_li°
, "InvalidÉxtendedÑesponse:ÇotáÜist.");

184 
l
 = 
d©a
->
vÆue
.
li°
;

185 
	`check
(
	`d¨øy_íd
(
l
)==2, "InvalidÉxtendedÑesponse: oddÇumber ofÉlements inÜist.");

186 
äs_vÆue_t
 *
key
=
	`d¨øy_gë
(
l
,0);

187 
	`check
(
key
->
ty≥
==
äs_èg_°rög
, "InvalidÉxtendedÑesponse: key isÇotá string");

188 
	`check
(
key
->
vÆue
.
°rög
 !
NULL
,, "InvalidÉxtendedÑesponse: key is NULL");

190 if(!
	`b°rcmp
(
key
->
vÆue
.
°rög
, &
XREQ_CTL
)) {

191 
	`check
 (0 =
	`h™dÀr_¥o˚ss_c⁄åﬁ_ªque°
(
c⁄n
, 
d©a
),

192 "C⁄åﬁÑeque°Öro˚ssögÑëu∫edÇ⁄-zîo: %s", 
	`bd©a
(
key
->
vÆue
.
°rög
));

194 
	`check
 (0 =
	`di•©ch_exãnded_ªque°
(
c⁄n
, 
key
->
vÆue
.
°rög
, 
d©a
),

195 "ExãndedÑeque° di•©chÑëu∫edÇ⁄-zîo: %s",
	`bd©a
(
key
->
vÆue
.
°rög
));

199 
îr‹
:

200 
	`äs_vÆue_de°roy
(
d©a
);

201 
	`Regi°î_disc⁄√˘
(
fd
);

203 
	}
}

205 
ölöe
 
	$h™dÀr_¥o˚ss_ªque°
(
H™dÀr
 *
h™dÀr
, 
id
, 
fd
,

206 
C⁄√˘i⁄
 *
c⁄n
, 
b°rög
 
∑ylﬂd
)

208 
rc
 = 0;

209 
	`check
(
c⁄n
 !
NULL
, "You can'tÖass NULL connÅoÅhisánymore.");

211 if(
	`bÀngth
(
∑ylﬂd
) == 0) {

212 
rc
 = 
	`C⁄√˘i⁄_dñivî_øw
(
c⁄n
,
NULL
);

213 
	`check
(
rc
 !-1, "Regi°î disc⁄√˘ faûed f‹: %d", 
fd
);

215 
øw
 = 
c⁄n
->
ty≥
 !
CONN_TYPE_MSG
 || 
h™dÀr
->raw;

217 
rc
 = 
	`dñivî_∑ylﬂd
(
øw
, 
fd
, 
c⁄n
, 
∑ylﬂd
);

218 
	`check
(
rc
 !-1, "FaûedÅÿdñivîÅÿc⁄√˘i⁄ %d o¿sockë %d", 
id
, 
fd
);

223 
îr‹
:

224 
	`Regi°î_disc⁄√˘
(
fd
);

226 
	}
}

229 
ölöe
 
	$h™dÀr_ªcv_∑r£
(
H™dÀr
 *
h™dÀr
, 
H™dÀrP¨£r
 *
∑r£r
)

231 
zmq_msg_t
 *
ömsg
 = 
NULL
;

232 
	`check
(
h™dÀr
->
ru¬ög
, "Called while handler wasn'tÑunning,Åhat'sÇot good.");

234 
ömsg
 = 
	`ˇŒoc
((
zmq_msg_t
), 1);

235 
rc
 = 0;

237 
	`check_mem
(
ömsg
);

239 
rc
 = 
	`zmq_msg_öô
(
ömsg
);

240 
	`check
(
rc
 == 0, "FailedÅo initialize message.");

242 
	`èsk°©e
("recv");

244 
rc
 = 
	`mqªcv
(
h™dÀr
->
ªcv_sockë
, 
ömsg
, 0);

245 
	`check
(
rc
 == 0, "Receive on handler socket failed.");

246 
	`check
(
h™dÀr
->
ru¬ög
, "Handler markedásÇotÑunning.");

248 
rc
 = 
	`H™dÀrP¨£r_execuã
(
∑r£r
, 
	`zmq_msg_d©a
(
ömsg
), 
	`zmq_msg_size
(inmsg));

249 
	`check
(
rc
 == 1, "FailedÅoÖarse message from handler.");

251 
	`check
(
∑r£r
->
èrgë_cou¡
 > 0, "Message sent had 0Åargets: %.*s",

252 ()
	`zmq_msg_size
(
ömsg
), (*)
	`zmq_msg_d©a
(inmsg));

254 
	`zmq_msg_˛o£
(
ömsg
);

255 
	`‰ì
(
ömsg
);

258 
îr‹
:

259 if(
ömsg
) {

260 
	`zmq_msg_˛o£
(
ömsg
);

261 
	`‰ì
(
ömsg
);

264 
	}
}

267 
	$H™dÀr_èsk
(*
v
)

269 
rc
 = 0;

270 
i
 = 0;

271 
H™dÀr
 *
h™dÀr
 = (H™dÀ∏*)
v
;

272 
H™dÀrP¨£r
 *
∑r£r
 = 
NULL
;

273 
max_èrgës
 = 
	`Sëtög_gë_öt
("limits.handler_targets", 128);

274 
	`log_öfo
("MAXáŒowögÜimôs.h™dÀr_èrgës=%d", 
max_èrgës
);

276 
∑r£r
 = 
	`H™dÀrP¨£r_¸óã
(
max_èrgës
);

277 
	`check_mem
(
∑r£r
);

279 
	`check
(
	`H™dÀr_£tup
(
h™dÀr
) == 0, "FailedÅo initialize handler,Éxiting.");

281 
h™dÀr
->
ru¬ög
 && !
	`èsk_was_sig«Àd
()) {

282 
	`èsk°©e
("delivering");

284 
rc
 = 
	`h™dÀr_ªcv_∑r£
(
h™dÀr
, 
∑r£r
);

286 if(
	`èsk_was_sig«Àd
()) {

287 
	`log_w¨n
("HandlerÅask signaled,Éxiting.");

289 } if–
rc
 =-1 || 
∑r£r
->
èrgë_cou¡
 <= 0) {

290 
	`log_w¨n
("Skù≥d invÆid mesßgê‰om h™dÀr: %s", 
	`bd©a
(
h™dÀr
->
£nd_•ec
));

291 
	`èskdñay
(100);

294 
i
 = 0; i < ()
∑r£r
->
èrgë_cou¡
; i++) {

295 
id
 = ()
∑r£r
->
èrgës
[
i
];

296 
fd
 = 
	`Regi°î_fd_f‹_id
(
id
);

297 
C⁄√˘i⁄
 *
c⁄n
 = 
fd
 =-1 ? 
NULL
 : 
	`Regi°î_fd_exi°s
(fd);

300 if(
c⁄n
 && 
fd
 >= 0) {

301 if(
∑r£r
->
exãnded
) {

302 
	`h™dÀr_¥o˚ss_exãnded_ªque°
(
fd
, 
c⁄n
, 
∑r£r
->
body
);

304 
	`h™dÀr_¥o˚ss_ªque°
(
h™dÀr
, 
id
, 
fd
, 
c⁄n
, 
∑r£r
->
body
);

308 
	`H™dÀr_nŸify_Àave
(
h™dÀr
, 
id
);

313 
	`H™dÀrP¨£r_ª£t
(
∑r£r
);

316 
h™dÀr
->
ru¬ög
 = 0;

317 
h™dÀr
->
èsk
 = 
NULL
;

318 
	`H™dÀrP¨£r_de°roy
(
∑r£r
);

319 
	`èskexô
(0);

321 
îr‹
:

322 
	`log_îr
("HANDLER TASK DIED: %s", 
	`bd©a
(
h™dÀr
->
£nd_•ec
));

323 
h™dÀr
->
ru¬ög
 = 0;

324 
h™dÀr
->
èsk
 = 
NULL
;

325 
	`H™dÀrP¨£r_de°roy
(
∑r£r
);

326 
	`èskexô
(1);

327 
	}
}

330 
	$H™dÀr_dñivî
(*
h™dÀr_sockë
, *
buf„r
, 
size_t
 
Àn
)

332 
rc
 = 0;

333 
zmq_msg_t
 
msg
;

335 
rc
 = 
	`zmq_msg_öô
(&
msg
);

336 
	`check
(
rc
 == 0, "FailedÅo initialize 0mq messageÅo send.");

338 
rc
 = 
	`zmq_msg_öô_d©a
(&
msg
, 
buf„r
, 
Àn
, 
c°r_‰ì
, 
NULL
);

339 
	`check
(
rc
 == 0, "FailedÅo init 0mq message data.");

341 
rc
 = 
	`mq£nd
(
h™dÀr_sockë
, &
msg
, 0);

342 
	`check
(
rc
 == 0, "FailedÅo deliver 0mq messageÅo handler.");

347 
îr‹
:

348 
	`‰ì
(
buf„r
);

350 
	}
}

353 *
	$H™dÀr_£nd_¸óã
(c⁄° *
£nd_•ec
, c⁄° *
idítôy
)

355 
böd_©ãm±s
 = 10;

356 *
h™dÀr_sockë
 = 
	`mqsockë
(
ZMQ_PUSH
);

357 
rc
 = 
	`zmq_£tsock›t
(
h™dÀr_sockë
, 
ZMQ_IDENTITY
, 
idítôy
, 
	`°æí
(identity));

358 
	`check
(
rc
 =0, "FaûedÅÿ£àh™dÀ∏sockë %†idítôy %s", 
£nd_•ec
, 
idítôy
);

360 
	`log_öfo
("Bödög h™dÀ∏PUSH sockë %†wôh idítôy: %s", 
£nd_•ec
, 
idítôy
);

362 
rc
 = 
	`zmq_böd
(
h™dÀr_sockë
, 
£nd_•ec
);

364 
rc
 !0 && 
böd_©ãm±s
-- > 0) {

365 
	`èskdñay
(1000);

366 
	`log_w¨n
("FaûedÅÿböd síd sockëÅryögágaö f‹: %s", 
£nd_•ec
);

367 
rc
 = 
	`zmq_böd
(
h™dÀr_sockë
, 
£nd_•ec
);

370 
	`check
(
böd_©ãm±s
 > 0, "Toÿm™y bödáâem±†f‹ h™dÀ∏%s", 
£nd_•ec
);

372  
h™dÀr_sockë
;

374 
îr‹
:

375  
NULL
;

376 
	}
}

378 *
	$H™dÀr_ªcv_¸óã
(c⁄° *
ªcv_•ec
, c⁄° *
uuid
)

380 
böd_©ãm±s
 = 10;

381 *
li°íî_sockë
 = 
	`mqsockë
(
ZMQ_SUB
);

382 
	`check
(
li°íî_sockë
, "Can't create ZMQ_SUB socket.");

384 
rc
 = 
	`zmq_£tsock›t
(
li°íî_sockë
, 
ZMQ_SUBSCRIBE
, 
uuid
, 
	`°æí
(uuid));

385 
	`check
(
rc
 =0, "FaûedÅÿsubs¸ibêli°íî sockë: %s", 
ªcv_•ec
);

386 
	`log_öfo
("BödögÜi°íî SUB sockë %†subs¸ibedÅo: %s", 
ªcv_•ec
, 
uuid
);

388 
rc
 = 
	`zmq_böd
(
li°íî_sockë
, 
ªcv_•ec
);

390 
rc
 !0 && 
böd_©ãm±s
-- > 0) {

391 
	`èskdñay
(1000);

392 
	`debug
("FailedÅo bindÑecv socketÅryingágain.");

393 
rc
 = 
	`zmq_böd
(
li°íî_sockë
, 
ªcv_•ec
);

396 
	`check
(
böd_©ãm±s
 > 0, "Toÿm™y bödáâem±†f‹ h™dÀ∏%s", 
ªcv_•ec
);

398  
li°íî_sockë
;

400 
îr‹
:

401  
NULL
;

402 
	}
}

404 c⁄° 
	gDEFAULT_HANDLER_STACK
 = 100 * 1024;

406 
H™dÀr
 *
	$H™dÀr_¸óã
(
b°rög
 
£nd_•ec
, b°rög 
£nd_idít
,

407 
b°rög
 
ªcv_•ec
, b°rög 
ªcv_idít
)

409 
	`debug
("Cª©ög h™dÀ∏%s:%s", 
	`bd©a
(
£nd_•ec
), bd©a(
£nd_idít
));

411 if(!
HANDLER_STACK
) {

412 
HANDLER_STACK
 = 
	`Sëtög_gë_öt
("limôs.h™dÀr_°ack", 
DEFAULT_HANDLER_STACK
);

413 
	`log_öfo
("MAXÜimôs.h™dÀr_°ack=%d", 
HANDLER_STACK
);

416 
H™dÀr
 *
h™dÀr
 = 
	`ˇŒoc
((Handler), 1);

417 
	`check_mem
(
h™dÀr
);

419 
h™dÀr
->
£nd_idít
 = 
	`b°r˝y
(send_ident);

420 
h™dÀr
->
ªcv_idít
 = 
	`b°r˝y
(recv_ident);

421 
h™dÀr
->
ªcv_•ec
 = 
	`b°r˝y
(recv_spec);

422 
h™dÀr
->
£nd_•ec
 = 
	`b°r˝y
(send_spec);

423 
h™dÀr
->
ru¬ög
 = 0;

424 
h™dÀr
->
øw
 = 0;

425 
h™dÀr
->
¥Ÿocﬁ
 = 
HANDLER_PROTO_JSON
;

427  
h™dÀr
;

428 
îr‹
:

430 if(
h™dÀr
Ë
	`‰ì
(handler);

431  
NULL
;

432 
	}
}

435 
	$H™dÀr_de°roy
(
H™dÀr
 *
h™dÀr
)

437 if(
h™dÀr
) {

438 if(
h™dÀr
->
ªcv_sockë
Ë
	`zmq_˛o£
(handler->recv_socket);

439 if(
h™dÀr
->
£nd_sockë
Ë
	`zmq_˛o£
(handler->send_socket);

441 
	`bde°roy
(
h™dÀr
->
£nd_idít
);

442 
	`bde°roy
(
h™dÀr
->
ªcv_idít
);

443 
	`bde°roy
(
h™dÀr
->
£nd_•ec
);

444 
	`bde°roy
(
h™dÀr
->
ªcv_•ec
);

445 
	`‰ì
(
h™dÀr
);

447 
	}
}

	@handler.h

35 #i‚de‡
_h™dÀr_h


36 
	#_h™dÀr_h


	)

38 
	~<°dlib.h
>

39 
	~<b°rög.h
>

40 
	~<èsk/èsk.h
>

42 
HANDLER_STACK
;

44 íum { 
	mHANDLER_PROTO_JSON
, 
	mHANDLER_PROTO_TNET
 } 
	th™dÀr_¥Ÿocﬁ_t
;

46 
	sH™dÀr
 {

47 *
	m£nd_sockë
;

48 *
	mªcv_sockë
;

49 
b°rög
 
	m£nd_idít
;

50 
b°rög
 
	mªcv_idít
;

51 
b°rög
 
	mªcv_•ec
;

52 
b°rög
 
	m£nd_•ec
;

53 
Task
 *
	mèsk
;

54 
	mru¬ög
;

55 
	møw
;

56 
h™dÀr_¥Ÿocﬁ_t
 
	m¥Ÿocﬁ
;

57 } 
	tH™dÀr
;

59 
H™dÀr_èsk
(*
v
);

61 
H™dÀr_dñivî
(*
h™dÀr_sockë
, *
buf„r
, 
size_t
 
Àn
);

63 
H™dÀr
 *
H™dÀr_¸óã
(
b°rög
 
£nd_•ec
, b°rög 
£nd_idít
,

64 
b°rög
 
ªcv_•ec
, b°rög 
ªcv_idít
);

66 
H™dÀr_de°roy
(
H™dÀr
 *
h™dÀr
);

68 *
H™dÀr_ªcv_¸óã
(c⁄° *
ªcv_•ec
, c⁄° *
uuid
);

70 *
H™dÀr_£nd_¸óã
(c⁄° *
£nd_•ec
, c⁄° *
idítôy
);

72 
H™dÀr_nŸify_Àave
(
H™dÀr
 *
h™dÀr
, 
fd
);

	@handler_parser.c

37 
	~<as£π.h
>

38 
	~<°dlib.h
>

39 
	~<˘y≥.h
>

41 
	~"h™dÀr_∑r£r.h
"

42 
	~"b°rög.h
"

43 
	~"dbg.h
"

44 
	~"mem/hÆloc.h
"

53 c⁄° 
	gH™dÀrP¨£r_°¨t
 = 1;

54 c⁄° 
	gH™dÀrP¨£r_fú°_föÆ
 = 11;

55 c⁄° 
	gH™dÀrP¨£r_îr‹
 = 0;

57 c⁄° 
	gH™dÀrP¨£r_í_maö
 = 1;

64 
	$H™dÀrP¨£r_execuã
(
H™dÀrP¨£r
 *
∑r£r
, c⁄° *
buf„r
, 
size_t
 
Àn
)

66 c⁄° *
p
 = 
buf„r
;

67 c⁄° *
≥
 = 
buf„r
+
Àn
;

68 
cs
 = 0;

69 c⁄° *
m¨k
 = 
p
;

70 c⁄° *
èrgës_°¨t
 = 
NULL
;

71 
èrgë_ex≥˘ed_Àn
 = 0;

72 
∑r£r
->
èrgë_cou¡
 = 0;

73 
∑r£r
->
uuid
 = 
NULL
;

78 
cs
 = 
H™dÀrP¨£r_°¨t
;

85  
cs
 )

88 i‡–(*
p
) == 45 )

89 
å0
;

90 i‡–(*
p
) < 65 ) {

91 i‡–48 <(*
p
) && (*p) <= 57 )

92 
å0
;

93 } i‡–(*
p
) > 90 ) {

94 i‡–97 <(*
p
) && (*p) <= 122 )

95 
å0
;

97 
å0
;

98 
°0
;

99 
°0
:

100 
cs
 = 0;

101 
_out
;

102 
å0
:

104 { 
m¨k
 = 
p
; }

105 
°2
;

106 
°2
:

107 
p
 += 1;

110  (*
p
) ) {

111 32: 
å2
;

112 45: 
°2
;

114 i‡–(*
p
) < 65 ) {

115 i‡–48 <(*
p
) && (*p) <= 57 )

116 
°2
;

117 } i‡–(*
p
) > 90 ) {

118 i‡–97 <(*
p
) && (*p) <= 122 )

119 
°2
;

121 
°2
;

122 
°0
;

123 
å2
:

126 
∑r£r
->
uuid
 = 
	`blk2b°r
(
m¨k
, 
p
-mark);

128 
°3
;

129 
°3
:

130 
p
 += 1;

133 i‡–48 <(*
p
) && (*p) <= 57 )

134 
å4
;

135 
°0
;

136 
å4
:

138 { 
m¨k
 = 
p
; }

139 
°4
;

140 
°4
:

141 
p
 += 1;

144 i‡–(*
p
) == 58 )

145 
å6
;

146 i‡–48 <(*
p
) && (*p) <= 57 )

147 
°4
;

148 
°0
;

149 
å6
:

152 *
íd±r
 = 
NULL
;

153 
èrgë_ex≥˘ed_Àn
 = 
	`°πoul
(
m¨k
, &
íd±r
, 10);

154 
	`check
(
íd±r
 =
p
, "InvalidÜength given, didn'tÖarse correctly.");

156 
°5
;

157 
°5
:

158 
p
 += 1;

161  (*
p
) ) {

162 44: 
å7
;

163 88: 
å9
;

165 i‡–48 <(*
p
) && (*p) <= 57 )

166 
å8
;

167 
°0
;

168 
å7
:

171 
èrgës_°¨t
 = 
p
;

175 
	`check
(
p
-
èrgës_°¨t
 =
èrgë_ex≥˘ed_Àn
,

177 ()(
p
-
èrgës_°¨t
), ()
èrgë_ex≥˘ed_Àn
);

179 
°6
;

180 
å12
:

183 
	`check
(
∑r£r
->
èrgë_cou¡
 <Ö¨£r->
èrgë_max
, "Request containsÅoo manyÅargetÜisteners: %d > %d",Öarser->target_count,Öarser->target_max);

184 
∑r£r
->
èrgës
[∑r£r->
èrgë_cou¡
++] = 
	`°πoul
(
m¨k
, 
NULL
, 10);

188 
	`check
(
p
-
èrgës_°¨t
 =
èrgë_ex≥˘ed_Àn
,

190 ()(
p
-
èrgës_°¨t
), ()
èrgë_ex≥˘ed_Àn
);

192 
°6
;

193 
å16
:

196 
∑r£r
->
exãnded
 = 1;

200 
	`check
(
p
-
èrgës_°¨t
 =
èrgë_ex≥˘ed_Àn
,

202 ()(
p
-
èrgës_°¨t
), ()
èrgë_ex≥˘ed_Àn
);

204 
°6
;

205 
°6
:

206 
p
 += 1;

209 i‡–(*
p
) == 32 )

210 
å10
;

211 
°0
;

212 
å10
:

214 { {
p
++; 
cs
 = 11; 
_out
;} }

215 
°11
;

216 
°11
:

217 
p
 += 1;

220 
°0
;

221 
å8
:

224 
èrgës_°¨t
 = 
p
;

227 { 
m¨k
 = 
p
; }

228 
°7
;

229 
å14
:

232 
	`check
(
∑r£r
->
èrgë_cou¡
 <Ö¨£r->
èrgë_max
, "Request containsÅoo manyÅargetÜisteners: %d > %d",Öarser->target_count,Öarser->target_max);

233 
∑r£r
->
èrgës
[∑r£r->
èrgë_cou¡
++] = 
	`°πoul
(
m¨k
, 
NULL
, 10);

236 { 
m¨k
 = 
p
; }

237 
°7
;

238 
å17
:

241 
∑r£r
->
exãnded
 = 1;

244 { 
m¨k
 = 
p
; }

245 
°7
;

246 
°7
:

247 
p
 += 1;

250  (*
p
) ) {

251 32: 
°8
;

252 44: 
å12
;

254 i‡–48 <(*
p
) && (*p) <= 57 )

255 
°7
;

256 
°0
;

257 
°8
:

258 
p
 += 1;

260 i‡–(*
p
) == 44 )

261 
å12
;

262 i‡–48 <(*
p
) && (*p) <= 57 )

263 
å14
;

264 
°0
;

265 
å9
:

268 
èrgës_°¨t
 = 
p
;

270 
°9
;

271 
°9
:

272 
p
 += 1;

275 i‡–(*
p
) == 32 )

276 
°10
;

277 
°0
;

278 
°10
:

279 
p
 += 1;

281 i‡–(*
p
) == 44 )

282 
å16
;

283 i‡–48 <(*
p
) && (*p) <= 57 )

284 
å17
;

285 
°0
;

288 
_out
: {}

293 
	`check
(
p
 <
≥
, "Buffer overflowáfterÖarsing. Tell ZedÅhat you sent something fromá handlerÅhat went %ldÖastÅheÉnd inÅheÖarser.",

294 ()(
≥
 - 
p
));

296 
∑r£r
->
body
 = 
	`blk2b°r
(
p
, 
≥
 -Ö);

298 i‡–
cs
 ==

304 } i‡–
cs
 >=

314 
îr‹
:

316 
	}
}

319 
H™dÀrP¨£r
 *
	$H™dÀrP¨£r_¸óã
(
size_t
 
max_èrgës
)

321 
H™dÀrP¨£r
 *
∑r£r
 = 
	`h_ˇŒoc
((HandlerParser), 1);

322 
	`check_mem
(
∑r£r
);

324 
∑r£r
->
èrgë_max
 = 
max_èrgës
;

325 
∑r£r
->
èrgës
 = 
	`h_ˇŒoc
((), 
max_èrgës
);

326 
	`check_mem
(
∑r£r
->
èrgës
);

327 
	`h©èch
(
∑r£r
->
èrgës
,Öarser);

329  
∑r£r
;

331 
îr‹
:

332  
NULL
;

333 
	}
}

335 
	$H™dÀrP¨£r_ª£t
(
H™dÀrP¨£r
 *
∑r£r
)

337 if(
∑r£r
->
uuid
) {

338 
	`bde°roy
(
∑r£r
->
uuid
);

339 
∑r£r
->
uuid
 = 
NULL
;

342 if(
∑r£r
->
body
) {

343 
	`bde°roy
(
∑r£r
->
body
);

344 
∑r£r
->
body
 = 
NULL
;

346 
∑r£r
->
exãnded
 = 0;

347 
	}
}

349 
	$H™dÀrP¨£r_de°roy
(
H™dÀrP¨£r
 *
∑r£r
)

351 if(
∑r£r
 !
NULL
) {

352 
	`H™dÀrP¨£r_ª£t
(
∑r£r
);

353 
	`h_‰ì
(
∑r£r
);

355 
	}
}

	@handler_parser.h

1 #i‚de‡
_h™dÀr_∑r£r_h


2 
	#_h™dÀr_∑r£r_h


	)

4 
	~<°dlib.h
>

5 
	~<b°rög.h
>

7 
	sH™dÀrP¨£r
 {

8 
b°rög
 
	mbody
;

9 
b°rög
 
	muuid
;

11 
size_t
 
	mèrgë_cou¡
;

12 
size_t
 
	mèrgë_max
;

13 *
	mèrgës
;

14 
	mexãnded
;

15 } 
	tH™dÀrP¨£r
;

17 
H™dÀrP¨£r
 *
H™dÀrP¨£r_¸óã
(
size_t
 
max_èrgës
);

19 
H™dÀrP¨£r_de°roy
(
H™dÀrP¨£r
 *
∑r£r
);

21 
H™dÀrP¨£r_execuã
(
H™dÀrP¨£r
 *
∑r£r
, c⁄° *
buf„r
, 
size_t
 
Àn
);

23 
H™dÀrP¨£r_ª£t
(
H™dÀrP¨£r
 *
∑r£r
);

	@headers.c

35 
	~<hódîs.h
>

37 
ègb°rög
 
	gHTTP_METHOD
 = 
bsSètic
("METHOD");

38 
ègb°rög
 
	gHTTP_VERSION
 = 
bsSètic
("VERSION");

39 
ègb°rög
 
	gHTTP_URI
 = 
bsSètic
("URI");

40 
ègb°rög
 
	gHTTP_PATH
 = 
bsSètic
("PATH");

41 
ègb°rög
 
	gHTTP_QUERY
 = 
bsSètic
("QUERY");

42 
ègb°rög
 
	gHTTP_FRAGMENT
 = 
bsSètic
("FRAGMENT");

43 
ègb°rög
 
	gHTTP_BODY
 = 
bsSètic
("BODY");

44 
ègb°rög
 
	gJSON_METHOD
 = 
bsSètic
("JSON");

45 
ègb°rög
 
	gXML_METHOD
 = 
bsSètic
("XML");

48 
ègb°rög
 
	gHTTP_POST
 = 
bsSètic
("POST");

49 
ègb°rög
 
	gHTTP_GET
 = 
bsSètic
("GET");

50 
ègb°rög
 
	gHTTP_HEAD
 = 
bsSètic
("HEAD");

51 
ègb°rög
 
	gHTTP_DELETE
 = 
bsSètic
("DELETE");

52 
ègb°rög
 
	gHTTP_PUT
 = 
bsSètic
("PUT");

53 
ègb°rög
 
	gHTTP_OPTIONS
 = 
bsSètic
("OPTIONS");

54 
ègb°rög
 
	gHTTP_PATTERN
 = 
bsSètic
("PATTERN");

55 
ègb°rög
 
	gHTTP_URL_SCHEME
 = 
bsSètic
("URL_SCHEME");

56 
ègb°rög
 
	gHTTP_HTTP
 = 
bsSètic
("http");

57 
ègb°rög
 
	gHTTP_HTTPS
 = 
bsSètic
("https");

58 
ègb°rög
 
	gHTTP_REMOTE_ADDR
 = 
bsSètic
("REMOTE_ADDR");

61 
ègb°rög
 
	gHTTP_CONTENT_LENGTH
 = 
bsSètic
("content-length");

62 
ègb°rög
 
	gHTTP_HOST
 = 
bsSètic
("host");

63 
ègb°rög
 
	gHTTP_IF_MATCH
 = 
bsSètic
("if-match");

64 
ègb°rög
 
	gHTTP_IF_NONE_MATCH
 = 
bsSètic
("if-none-match");

65 
ègb°rög
 
	gHTTP_IF_MODIFIED_SINCE
 = 
bsSètic
("if-modified-since");

66 
ègb°rög
 
	gHTTP_IF_UNMODIFIED_SINCE
 = 
bsSètic
("if-unmodified-since");

67 
ègb°rög
 
	gHTTP_USER_AGENT
 = 
bsSètic
("user-agent");

68 
ègb°rög
 
	gHTTP_CONNECTION
 = 
bsSètic
("connection");

69 
ègb°rög
 
	gHTTP_EXPECT
 = 
bsSètic
("expect");

71 
ègb°rög
 
	gHTTP_X_FORWARDED_FOR
 = 
bsSètic
("x-forwarded-for");

	@headers.h

35 #i‚de‡
_hódîs_h


36 
	#_hódîs_h


	)

38 
	~<b°rög.h
>

40 
ègb°rög
 
HTTP_CONTENT_LENGTH
;

41 
ègb°rög
 
HTTP_HOST
;

42 
ègb°rög
 
HTTP_METHOD
;

43 
ègb°rög
 
HTTP_VERSION
;

44 
ègb°rög
 
HTTP_URI
;

45 
ègb°rög
 
HTTP_PATH
;

46 
ègb°rög
 
HTTP_QUERY
;

47 
ègb°rög
 
HTTP_FRAGMENT
;

48 
ègb°rög
 
HTTP_BODY
;

49 
ègb°rög
 
JSON_METHOD
;

50 
ègb°rög
 
XML_METHOD
;

51 
ègb°rög
 
HTTP_IF_MATCH
;

52 
ègb°rög
 
HTTP_IF_NONE_MATCH
;

53 
ègb°rög
 
HTTP_IF_MODIFIED_SINCE
;

54 
ègb°rög
 
HTTP_IF_UNMODIFIED_SINCE
;

55 
ègb°rög
 
HTTP_POST
;

56 
ègb°rög
 
HTTP_GET
;

57 
ègb°rög
 
HTTP_HEAD
;

58 
ègb°rög
 
HTTP_DELETE
;

59 
ègb°rög
 
HTTP_PUT
;

60 
ègb°rög
 
HTTP_OPTIONS
;

61 
ègb°rög
 
HTTP_PATTERN
;

62 
ègb°rög
 
HTTP_USER_AGENT
;

63 
ègb°rög
 
HTTP_CONNECTION
;

64 
ègb°rög
 
HTTP_X_FORWARDED_FOR
;

65 
ègb°rög
 
HTTP_EXPECT
;

66 
ègb°rög
 
HTTP_URL_SCHEME
;

67 
ègb°rög
 
HTTP_HTTP
;

68 
ègb°rög
 
HTTP_HTTPS
;

69 
ègb°rög
 
HTTP_REMOTE_ADDR
;

	@host.c

35 
	~<ho°.h
>

36 
	~<°rög.h
>

37 
	~<dbg.h
>

38 
	~<as£π.h
>

39 
	~<mem/hÆloc.h
>

40 
	~<dú.h
>

41 
	~"£âög.h
"

43 
	gMAX_HOST_NAME
 = 0;

44 
	gMAX_URL_PATH
 = 0;

46 
	$backíd_de°roy_cb
(
Rouã
 *
r
, 
RouãM≠
 *
m≠
)

48 ()
m≠
;

50 
Backíd
 *
backíd
 = (Backíd *)
r
->
d©a
;

52 if(
backíd
) {

53 if(
backíd
->
ty≥
 =
BACKEND_DIR
) {

54 
	`Dú_de°roy
(
backíd
->
èrgë
.
dú
);

55 } if(
backíd
->
ty≥
 =
BACKEND_HANDLER
) {

57 } if(
backíd
->
ty≥
 =
BACKEND_PROXY
) {

58 
	`Proxy_de°roy
(
backíd
->
èrgë
.
¥oxy
);

60 
	`log_îr
("InvÆid backídÅy≥, d⁄'àknow howÅÿde°roy: %d", 
backíd
->
ty≥
);

63 
	`‰ì
(
backíd
);

64 
r
->
d©a
 = 
NULL
;

66 
	}
}

68 
Ho°
 *
	$Ho°_¸óã
(
b°rög
 
«me
, b°rög 
m©chög
)

70 if(!
MAX_URL_PATH
 || !
MAX_HOST_NAME
) {

71 
MAX_URL_PATH
 = 
	`Sëtög_gë_öt
("limits.url_path", 256);

72 
MAX_HOST_NAME
 = 
	`Sëtög_gë_öt
("limits.host_name", 256);

73 
	`log_öfo
("MAXÜimits.url_path=%d,Üimits.host_name=%d",

74 
MAX_URL_PATH
, 
MAX_HOST_NAME
);

77 
Ho°
 *
ho°
 = 
	`h_ˇŒoc
((Host), 1);

78 
	`check_mem
(
ho°
);

80 
ho°
->
«me
 = 
	`b°r˝y
(name);

81 
	`check
(
	`bÀngth
(
ho°
->
«me
Ë< 
MAX_HOST_NAME
, "HostÇameÅooÜong (max %d): '%s'\n",

82 
MAX_HOST_NAME
, 
	`bd©a
(
«me
));

84 
ho°
->
m©chög
 = 
	`b°r˝y
(matching);

86 
	`check
(
	`bÀngth
(
ho°
->
m©chög
Ë< 
MAX_HOST_NAME
, "Host matchingÖatternÅooÜong (max %d): '%s'\n",

87 
MAX_HOST_NAME
, 
	`bd©a
(
«me
));

89 
ho°
->
rouãs
 = 
	`RouãM≠_¸óã
(
backíd_de°roy_cb
);

90 
	`check
(
ho°
->
rouãs
, "FaûedÅÿ¸óã ho°Ñouã m≠ f‹ %s.", 
	`bd©a
(
«me
));

92  
ho°
;

94 
îr‹
:

95  
NULL
;

96 
	}
}

99 
	$Ho°_de°roy
(
Ho°
 *
ho°
)

101 if(
ho°
) {

102 
	`bde°roy
(
ho°
->
«me
);

103 
	`RouãM≠_de°roy
(
ho°
->
rouãs
);

104 
	`h_‰ì
(
ho°
);

106 
	}
}

110 
	$Ho°_add_backíd
(
Ho°
 *
ho°
, 
b°rög
 
∑th
, 
BackídTy≥
 
ty≥
, *
èrgë
)

112 
	`debug
("ADDING ROUTE TO HOST %p: %s", 
ho°
, 
	`bd©a
(
∑th
));

113 
Backíd
 *
backíd
 = 
	`ˇŒoc
((Backend), 1);

114 
	`check_mem
(
backíd
);

116 
backíd
->
ty≥
 =Åype;

118 if(
ty≥
 =
BACKEND_HANDLER
) {

119 
backíd
->
èrgë
.
h™dÀr
 =Åarget;

120 } if(
ty≥
 =
BACKEND_PROXY
) {

121 
backíd
->
èrgë
.
¥oxy
 =Åarget;

122 } if(
ty≥
 =
BACKEND_DIR
) {

123 
backíd
->
èrgë
.
dú
 =Åarget;

125 
	`£¡öñ
("InvÆidÖroxyÅy≥ giví: %d", 
ty≥
);

128 
rc
 = 
	`RouãM≠_ö£π
(
ho°
->
rouãs
, 
	`b°r˝y
(
∑th
), 
backíd
);

129 
	`check
(
rc
 == 0, "FailedÅo insert %s into host %sÑoute map.",

130 
	`bd©a
(
∑th
), bd©a(
ho°
->
«me
));

134 
îr‹
:

136 
	}
}

139 
Backíd
 *
	$Ho°_m©ch_backíd
(
Ho°
 *
ho°
, 
b°rög
 
èrgë
, 
Rouã
 **
out_rouã
)

141 
Rouã
 *
found
 = 
NULL
;

142 
	`debug
("MATCHING BACKEND IN HOST %∞AGAINST %†ö ROUTES: %p", 
ho°
, 
	`bd©a
(
èrgë
), ho°->
rouãs
);

144 
found
 = 
	`RouãM≠_sim∂e_¥efix_m©ch
(
ho°
->
rouãs
, 
èrgë
);

146 if(
found
) {

147 
	`debug
("Found backídáà%s", 
	`bd©a
(
found
->
∑âîn
));

148 
	`as£π
(
found
->
d©a
 && "Invalid value for storedÑoute.");

149 if(
out_rouã
Ë*out_rouã = 
found
;

150  
found
->
d©a
;

152 if(
out_rouã
Ë*out_rouã = 
found
;

153  
NULL
;

155 
	}
}

	@host.h

35 #i‚de‡
_ho°_h


36 
	#_ho°_h


	)

38 
	~<adt/t°.h
>

39 
	~<¥oxy.h
>

40 
	~<h™dÀr.h
>

41 
	~<ªque°.h
>

42 
	~<routög.h
>

44 
MAX_HOST_NAME
;

45 
MAX_URL_PATH
;

48 
	sHo°
 {

49 
RouãM≠
 *
	mrouãs
;

50 
b°rög
 
	m«me
;

51 
b°rög
 
	mm©chög
;

52 } 
	tHo°
;

55 
	eBackídTy≥
 {

56 
	mBACKEND_HANDLER
=1, 
	mBACKEND_PROXY
, 
	mBACKEND_DIR


57 } 
	tBackídTy≥
;

59 
	sBackíd
 {

60 
	mty≥
;

63 
H™dÀr
 *
	mh™dÀr
;

64 
Proxy
 *
	m¥oxy
;

65 
Dú
 *
	mdú
;

66 } 
	mèrgë
;

67 } 
	tBackíd
;

69 
Ho°
 *
Ho°_¸óã
(
b°rög
 
«me
, b°rög 
m©chög
);

70 
Ho°_de°roy
(
Ho°
 *
ho°
);

72 
Ho°_add_backíd
(
Ho°
 *
ho°
, 
b°rög
 
∑th
, 
BackídTy≥
 
ty≥
, *
èrgë
);

74 
Backíd
 *
Ho°_m©ch_backíd
(
Ho°
 *
ho°
, 
b°rög
 
èrgë
, 
Rouã
 **
out_rouã
);

	@http11/http11_common.h

1 #i‚de‡
_hâp11_comm⁄_h


2 
	#_hâp11_comm⁄_h


	)

4 
	~<sys/ty≥s.h
>

6 (*
	tñemít_cb
)(*
	td©a
, c⁄° *
	t©
, 
	tsize_t
 
	tÀngth
);

7 (*
	tfõld_cb
)(*
	td©a
, c⁄° *
	tfõld
, 
	tsize_t
 
	tÊí
, c⁄° *
	tvÆue
, size_à
	tvÀn
);

	@http11/http11_parser.c

37 
	~"hâp11_∑r£r.h
"

38 
	~<°dio.h
>

39 
	~<as£π.h
>

40 
	~<°dlib.h
>

41 
	~<˘y≥.h
>

42 
	~<°rög.h
>

43 
	~<dbg.h
>

45 
	#LEN
(
AT
, 
FPC
Ë(FPC - 
buf„r
 - 
∑r£r
->AT)

	)

46 
	#MARK
(
M
,
FPC
Ë(
∑r£r
->M = (FPCË- 
buf„r
)

	)

47 
	#PTR_TO
(
F
Ë(
buf„r
 + 
∑r£r
->F)

	)

58 c⁄° 
	ghâp_∑r£r_°¨t
 = 1;

59 c⁄° 
	ghâp_∑r£r_fú°_föÆ
 = 348;

60 c⁄° 
	ghâp_∑r£r_îr‹
 = 0;

62 c⁄° 
	ghâp_∑r£r_í_maö
 = 1;

67 
	$hâp_∑r£r_öô
(
hâp_∑r£r
 *
∑r£r
) {

68 
cs
 = 0;

72 
cs
 = 
hâp_∑r£r_°¨t
;

76 
∑r£r
->
cs
 = cs;

77 
∑r£r
->
body_°¨t
 = 0;

78 
∑r£r
->
c⁄ã¡_Àn
 = 0;

79 
∑r£r
->
m¨k
 = 0;

80 
∑r£r
->
ƒód
 = 0;

81 
∑r£r
->
fõld_Àn
 = 0;

82 
∑r£r
->
fõld_°¨t
 = 0;

83 
∑r£r
->
xml_£¡
 = 0;

84 
∑r£r
->
js⁄_£¡
 = 0;

87 
	}
}

91 
size_t
 
	$hâp_∑r£r_execuã
(
hâp_∑r£r
 *
∑r£r
, c⁄° *
buf„r
, 
size_t
 
Àn
, size_à
off
)

93 if(
Àn
 == 0)  0;

95 c⁄° *
p
, *
≥
;

96 
cs
 = 
∑r£r
->cs;

98 
	`as£π
(
off
 <
Àn
 && "offsetÖastÉnd of buffer");

100 
p
 = 
buf„r
+
off
;

101 
≥
 = 
buf„r
+
Àn
;

103 
	`as£π
(
≥
 - 
p
 =()
Àn
 - ()
off
 && "pointersáren't same distance");

108 i‡–
p
 =
≥
 )

109 
_ã°_eof
;

110  
cs
 )

113  (*
p
) ) {

114 60: 
å2
;

115 64: 
å3
;

117 i‡–(*
p
) > 57 ) {

118 i‡–65 <(*
p
) && (*p) <= 90 )

119 
å0
;

120 } i‡–(*
p
) >= 48 )

121 
å0
;

122 
°0
;

123 
°0
:

124 
cs
 = 0;

125 
_out
;

126 
å0
:

128 {
	`MARK
(
m¨k
, 
p
); }

129 
°2
;

130 
°2
:

131 i‡–++
p
 =
≥
 )

132 
_ã°_eof2
;

135 i‡–(*
p
) == 32 )

136 
å4
;

137 i‡–(*
p
) > 57 ) {

138 i‡–65 <(*
p
) && (*p) <= 90 )

139 
°175
;

140 } i‡–(*
p
) >= 48 )

141 
°175
;

142 
°0
;

143 
å4
:

146 if(
∑r£r
->
ªque°_mëhod
 !
NULL
)

147 
∑r£r
->
	`ªque°_mëhod
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

149 
°3
;

150 
°3
:

151 i‡–++
p
 =
≥
 )

152 
_ã°_eof3
;

155  (*
p
) ) {

156 32: 
å6
;

157 33: 
å7
;

158 35: 
å8
;

159 37: 
å9
;

160 47: 
å10
;

161 59: 
å7
;

162 61: 
å7
;

163 63: 
å11
;

164 64: 
å7
;

165 95: 
å7
;

166 126: 
å7
;

168 i‡–(*
p
) < 65 ) {

169 i‡–36 <(*
p
) && (*p) <= 57 )

170 
å7
;

171 } i‡–(*
p
) > 90 ) {

172 i‡–97 <(*
p
) && (*p) <= 122 )

173 
å12
;

175 
å12
;

176 
°0
;

177 
å6
:

179 {
	`MARK
(
m¨k
, 
p
); }

182 if(
∑r£r
->
ªque°_∑th
 !
NULL
)

183 
∑r£r
->
	`ªque°_∑th
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k,
p
));

187 if(
∑r£r
->
ªque°_uri
 !
NULL
)

188 
∑r£r
->
	`ªque°_uri
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

190 
°4
;

191 
å37
:

194 if(
∑r£r
->
ªque°_∑th
 !
NULL
)

195 
∑r£r
->
	`ªque°_∑th
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k,
p
));

199 if(
∑r£r
->
ªque°_uri
 !
NULL
)

200 
∑r£r
->
	`ªque°_uri
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

202 
°4
;

203 
å43
:

205 {
	`MARK
(
m¨k
, 
p
); }

208 if(
∑r£r
->
‰agmít
 !
NULL
)

209 
∑r£r
->
	`‰agmít
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

211 
°4
;

212 
å46
:

215 if(
∑r£r
->
‰agmít
 !
NULL
)

216 
∑r£r
->
	`‰agmít
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

218 
°4
;

219 
å53
:

221 {
	`MARK
(
quîy_°¨t
, 
p
); }

224 if(
∑r£r
->
quîy_°rög
 !
NULL
)

225 
∑r£r
->
	`quîy_°rög
’¨£r->
d©a
, 
	`PTR_TO
(
quîy_°¨t
), 
	`LEN
(quîy_°¨t, 
p
));

229 if(
∑r£r
->
ªque°_uri
 !
NULL
)

230 
∑r£r
->
	`ªque°_uri
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

232 
°4
;

233 
å57
:

236 if(
∑r£r
->
quîy_°rög
 !
NULL
)

237 
∑r£r
->
	`quîy_°rög
’¨£r->
d©a
, 
	`PTR_TO
(
quîy_°¨t
), 
	`LEN
(quîy_°¨t, 
p
));

241 if(
∑r£r
->
ªque°_uri
 !
NULL
)

242 
∑r£r
->
	`ªque°_uri
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

244 
°4
;

245 
°4
:

246 i‡–++
p
 =
≥
 )

247 
_ã°_eof4
;

250 i‡–(*
p
) == 72 )

251 
å13
;

252 
°0
;

253 
å13
:

255 {
	`MARK
(
m¨k
, 
p
); }

256 
°5
;

257 
°5
:

258 i‡–++
p
 =
≥
 )

259 
_ã°_eof5
;

262 i‡–(*
p
) == 84 )

263 
°6
;

264 
°0
;

265 
°6
:

266 i‡–++
p
 =
≥
 )

267 
_ã°_eof6
;

269 i‡–(*
p
) == 84 )

270 
°7
;

271 
°0
;

272 
°7
:

273 i‡–++
p
 =
≥
 )

274 
_ã°_eof7
;

276 i‡–(*
p
) == 80 )

277 
°8
;

278 
°0
;

279 
°8
:

280 i‡–++
p
 =
≥
 )

281 
_ã°_eof8
;

283 i‡–(*
p
) == 47 )

284 
°9
;

285 
°0
;

286 
°9
:

287 i‡–++
p
 =
≥
 )

288 
_ã°_eof9
;

290 i‡–(*
p
) == 49 )

291 
°10
;

292 
°0
;

293 
°10
:

294 i‡–++
p
 =
≥
 )

295 
_ã°_eof10
;

297 i‡–(*
p
) == 46 )

298 
°11
;

299 
°0
;

300 
°11
:

301 i‡–++
p
 =
≥
 )

302 
_ã°_eof11
;

304 i‡–48 <(*
p
) && (*p) <= 49 )

305 
°12
;

306 
°0
;

307 
°12
:

308 i‡–++
p
 =
≥
 )

309 
_ã°_eof12
;

311  (*
p
) ) {

312 10: 
å21
;

313 13: 
å22
;

315 
°0
;

316 
å21
:

319 if(
∑r£r
->
hâp_vîsi⁄
 !
NULL
)

320 
∑r£r
->
	`hâp_vîsi⁄
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

322 
°13
;

323 
å30
:

325 { 
	`MARK
(
m¨k
, 
p
); }

328 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

329 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

332 
°13
;

333 
å33
:

336 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

337 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

340 
°13
;

341 
°13
:

342 i‡–++
p
 =
≥
 )

343 
_ã°_eof13
;

346  (*
p
) ) {

347 10: 
å24
;

348 13: 
å25
;

349 33: 
å23
;

350 124: 
å23
;

351 126: 
å23
;

353 i‡–(*
p
) < 42 ) {

354 i‡–(*
p
) < 11 ) {

355 i‡–1 <(*
p
) && (*p) <= 8 )

356 
å23
;

357 } i‡–(*
p
) > 31 ) {

358 i‡–35 <(*
p
) && (*p) <= 39 )

359 
å23
;

361 
å23
;

362 } i‡–(*
p
) > 43 ) {

363 i‡–(*
p
) < 48 ) {

364 i‡–45 <(*
p
) && (*p) <= 46 )

365 
å23
;

366 } i‡–(*
p
) > 57 ) {

367 i‡–(*
p
) > 90 ) {

368 i‡–94 <(*
p
) && (*p) <= 122 )

369 
å23
;

370 } i‡–(*
p
) >= 65 )

371 
å23
;

373 
å23
;

375 
å23
;

376 
°0
;

377 
å23
:

379 { 
	`MARK
(
fõld_°¨t
, 
p
); }

380 
°14
;

381 
°14
:

382 i‡–++
p
 =
≥
 )

383 
_ã°_eof14
;

386  (*
p
) ) {

387 33: 
°14
;

388 58: 
å27
;

389 124: 
°14
;

390 126: 
°14
;

392 i‡–(*
p
) < 42 ) {

393 i‡–(*
p
) < 10 ) {

394 i‡–1 <(*
p
) && (*p) <= 8 )

395 
°14
;

396 } i‡–(*
p
) > 31 ) {

397 i‡–35 <(*
p
) && (*p) <= 39 )

398 
°14
;

400 
°14
;

401 } i‡–(*
p
) > 43 ) {

402 i‡–(*
p
) < 48 ) {

403 i‡–45 <(*
p
) && (*p) <= 46 )

404 
°14
;

405 } i‡–(*
p
) > 57 ) {

406 i‡–(*
p
) > 90 ) {

407 i‡–94 <(*
p
) && (*p) <= 122 )

408 
°14
;

409 } i‡–(*
p
) >= 65 )

410 
°14
;

412 
°14
;

414 
°14
;

415 
°0
;

416 
å27
:

419 
∑r£r
->
fõld_Àn
 = 
	`LEN
(
fõld_°¨t
, 
p
);

421 
°15
;

422 
å29
:

424 { 
	`MARK
(
m¨k
, 
p
); }

425 
°15
;

426 
°15
:

427 i‡–++
p
 =
≥
 )

428 
_ã°_eof15
;

431  (*
p
) ) {

432 0: 
°0
;

433 9: 
å29
;

434 10: 
å30
;

435 13: 
å31
;

436 32: 
å29
;

437 127: 
°0
;

439 
å28
;

440 
å28
:

442 { 
	`MARK
(
m¨k
, 
p
); }

443 
°16
;

444 
°16
:

445 i‡–++
p
 =
≥
 )

446 
_ã°_eof16
;

449  (*
p
) ) {

450 0: 
°0
;

451 10: 
å33
;

452 13: 
å34
;

453 127: 
°0
;

455 
°16
;

456 
å22
:

459 if(
∑r£r
->
hâp_vîsi⁄
 !
NULL
)

460 
∑r£r
->
	`hâp_vîsi⁄
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

462 
°17
;

463 
å31
:

465 { 
	`MARK
(
m¨k
, 
p
); }

468 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

469 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

472 
°17
;

473 
å34
:

476 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

477 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

480 
°17
;

481 
°17
:

482 i‡–++
p
 =
≥
 )

483 
_ã°_eof17
;

486 i‡–(*
p
) == 10 )

487 
°13
;

488 
°0
;

489 
å24
:

491 { 
	`MARK
(
fõld_°¨t
, 
p
); }

494 if(
∑r£r
->
xml_£¡
 ||Ö¨£r->
js⁄_£¡
) {

495 
∑r£r
->
body_°¨t
 = 
	`PTR_TO
(
m¨k
Ë- 
buf„r
;

497 
∑r£r
->
c⁄ã¡_Àn
 = 
p
 - 
buf„r
 -Ö¨£r->
body_°¨t
 + 1;

499 
∑r£r
->
body_°¨t
 = 
p
 - 
buf„r
 + 1;

501 if(
∑r£r
->
hódî_d⁄e
 !
NULL
) {

502 
∑r£r
->
	`hódî_d⁄e
’¨£r->
d©a
, 
p
 + 1, 
≥
 -Ö - 1);

505 {
p
++; 
cs
 = 348; 
_out
;}

507 
°348
;

508 
å36
:

511 if(
∑r£r
->
xml_£¡
 ||Ö¨£r->
js⁄_£¡
) {

512 
∑r£r
->
body_°¨t
 = 
	`PTR_TO
(
m¨k
Ë- 
buf„r
;

514 
∑r£r
->
c⁄ã¡_Àn
 = 
p
 - 
buf„r
 -Ö¨£r->
body_°¨t
 + 1;

516 
∑r£r
->
body_°¨t
 = 
p
 - 
buf„r
 + 1;

518 if(
∑r£r
->
hódî_d⁄e
 !
NULL
) {

519 
∑r£r
->
	`hódî_d⁄e
’¨£r->
d©a
, 
p
 + 1, 
≥
 -Ö - 1);

522 {
p
++; 
cs
 = 348; 
_out
;}

524 
°348
;

525 
°348
:

526 i‡–++
p
 =
≥
 )

527 
_ã°_eof348
;

530  (*
p
) ) {

531 33: 
°14
;

532 58: 
å27
;

533 124: 
°14
;

534 126: 
°14
;

536 i‡–(*
p
) < 42 ) {

537 i‡–(*
p
) < 10 ) {

538 i‡–1 <(*
p
) && (*p) <= 8 )

539 
°14
;

540 } i‡–(*
p
) > 31 ) {

541 i‡–35 <(*
p
) && (*p) <= 39 )

542 
°14
;

544 
°14
;

545 } i‡–(*
p
) > 43 ) {

546 i‡–(*
p
) < 48 ) {

547 i‡–45 <(*
p
) && (*p) <= 46 )

548 
°14
;

549 } i‡–(*
p
) > 57 ) {

550 i‡–(*
p
) > 90 ) {

551 i‡–94 <(*
p
) && (*p) <= 122 )

552 
°14
;

553 } i‡–(*
p
) >= 65 )

554 
°14
;

556 
°14
;

558 
°14
;

559 
°0
;

560 
å25
:

562 { 
	`MARK
(
fõld_°¨t
, 
p
); }

563 
°18
;

564 
°18
:

565 i‡–++
p
 =
≥
 )

566 
_ã°_eof18
;

569  (*
p
) ) {

570 10: 
å36
;

571 33: 
°14
;

572 58: 
å27
;

573 124: 
°14
;

574 126: 
°14
;

576 i‡–(*
p
) < 42 ) {

577 i‡–(*
p
) < 11 ) {

578 i‡–1 <(*
p
) && (*p) <= 8 )

579 
°14
;

580 } i‡–(*
p
) > 31 ) {

581 i‡–35 <(*
p
) && (*p) <= 39 )

582 
°14
;

584 
°14
;

585 } i‡–(*
p
) > 43 ) {

586 i‡–(*
p
) < 48 ) {

587 i‡–45 <(*
p
) && (*p) <= 46 )

588 
°14
;

589 } i‡–(*
p
) > 57 ) {

590 i‡–(*
p
) > 90 ) {

591 i‡–94 <(*
p
) && (*p) <= 122 )

592 
°14
;

593 } i‡–(*
p
) >= 65 )

594 
°14
;

596 
°14
;

598 
°14
;

599 
°0
;

600 
å7
:

602 {
	`MARK
(
m¨k
, 
p
); }

603 
°19
;

604 
°19
:

605 i‡–++
p
 =
≥
 )

606 
_ã°_eof19
;

609  (*
p
) ) {

610 32: 
å37
;

611 33: 
°19
;

612 35: 
å39
;

613 37: 
°24
;

614 47: 
°26
;

615 59: 
°19
;

616 61: 
°19
;

617 63: 
å42
;

618 95: 
°19
;

619 126: 
°19
;

621 i‡–(*
p
) < 64 ) {

622 i‡–36 <(*
p
) && (*p) <= 57 )

623 
°19
;

624 } i‡–(*
p
) > 90 ) {

625 i‡–97 <(*
p
) && (*p) <= 122 )

626 
°19
;

628 
°19
;

629 
°0
;

630 
å8
:

632 {
	`MARK
(
m¨k
, 
p
); }

635 if(
∑r£r
->
ªque°_∑th
 !
NULL
)

636 
∑r£r
->
	`ªque°_∑th
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k,
p
));

640 if(
∑r£r
->
ªque°_uri
 !
NULL
)

641 
∑r£r
->
	`ªque°_uri
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

643 
°20
;

644 
å39
:

647 if(
∑r£r
->
ªque°_∑th
 !
NULL
)

648 
∑r£r
->
	`ªque°_∑th
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k,
p
));

652 if(
∑r£r
->
ªque°_uri
 !
NULL
)

653 
∑r£r
->
	`ªque°_uri
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

655 
°20
;

656 
å55
:

658 {
	`MARK
(
quîy_°¨t
, 
p
); }

661 if(
∑r£r
->
quîy_°rög
 !
NULL
)

662 
∑r£r
->
	`quîy_°rög
’¨£r->
d©a
, 
	`PTR_TO
(
quîy_°¨t
), 
	`LEN
(quîy_°¨t, 
p
));

666 if(
∑r£r
->
ªque°_uri
 !
NULL
)

667 
∑r£r
->
	`ªque°_uri
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

669 
°20
;

670 
å59
:

673 if(
∑r£r
->
quîy_°rög
 !
NULL
)

674 
∑r£r
->
	`quîy_°rög
’¨£r->
d©a
, 
	`PTR_TO
(
quîy_°¨t
), 
	`LEN
(quîy_°¨t, 
p
));

678 if(
∑r£r
->
ªque°_uri
 !
NULL
)

679 
∑r£r
->
	`ªque°_uri
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

681 
°20
;

682 
°20
:

683 i‡–++
p
 =
≥
 )

684 
_ã°_eof20
;

687  (*
p
) ) {

688 32: 
å43
;

689 33: 
å44
;

690 37: 
å45
;

691 61: 
å44
;

692 95: 
å44
;

693 126: 
å44
;

695 i‡–(*
p
) < 63 ) {

696 i‡–36 <(*
p
) && (*p) <= 59 )

697 
å44
;

698 } i‡–(*
p
) > 90 ) {

699 i‡–97 <(*
p
) && (*p) <= 122 )

700 
å44
;

702 
å44
;

703 
°0
;

704 
å44
:

706 {
	`MARK
(
m¨k
, 
p
); }

707 
°21
;

708 
°21
:

709 i‡–++
p
 =
≥
 )

710 
_ã°_eof21
;

713  (*
p
) ) {

714 32: 
å46
;

715 33: 
°21
;

716 37: 
°22
;

717 61: 
°21
;

718 95: 
°21
;

719 126: 
°21
;

721 i‡–(*
p
) < 63 ) {

722 i‡–36 <(*
p
) && (*p) <= 59 )

723 
°21
;

724 } i‡–(*
p
) > 90 ) {

725 i‡–97 <(*
p
) && (*p) <= 122 )

726 
°21
;

728 
°21
;

729 
°0
;

730 
å45
:

732 {
	`MARK
(
m¨k
, 
p
); }

733 
°22
;

734 
°22
:

735 i‡–++
p
 =
≥
 )

736 
_ã°_eof22
;

739 i‡–(*
p
) < 65 ) {

740 i‡–48 <(*
p
) && (*p) <= 57 )

741 
°23
;

742 } i‡–(*
p
) > 70 ) {

743 i‡–97 <(*
p
) && (*p) <= 102 )

744 
°23
;

746 
°23
;

747 
°0
;

748 
°23
:

749 i‡–++
p
 =
≥
 )

750 
_ã°_eof23
;

752 i‡–(*
p
) < 65 ) {

753 i‡–48 <(*
p
) && (*p) <= 57 )

754 
°21
;

755 } i‡–(*
p
) > 70 ) {

756 i‡–97 <(*
p
) && (*p) <= 102 )

757 
°21
;

759 
°21
;

760 
°0
;

761 
å9
:

763 {
	`MARK
(
m¨k
, 
p
); }

764 
°24
;

765 
°24
:

766 i‡–++
p
 =
≥
 )

767 
_ã°_eof24
;

770 i‡–(*
p
) < 65 ) {

771 i‡–48 <(*
p
) && (*p) <= 57 )

772 
°25
;

773 } i‡–(*
p
) > 70 ) {

774 i‡–97 <(*
p
) && (*p) <= 102 )

775 
°25
;

777 
°25
;

778 
°0
;

779 
°25
:

780 i‡–++
p
 =
≥
 )

781 
_ã°_eof25
;

783 i‡–(*
p
) < 65 ) {

784 i‡–48 <(*
p
) && (*p) <= 57 )

785 
°19
;

786 } i‡–(*
p
) > 70 ) {

787 i‡–97 <(*
p
) && (*p) <= 102 )

788 
°19
;

790 
°19
;

791 
°0
;

792 
å203
:

794 {
	`MARK
(
m¨k
, 
p
); }

795 
°26
;

796 
°26
:

797 i‡–++
p
 =
≥
 )

798 
_ã°_eof26
;

801  (*
p
) ) {

802 32: 
å37
;

803 33: 
°26
;

804 35: 
å39
;

805 37: 
°27
;

806 61: 
°26
;

807 63: 
å42
;

808 95: 
°26
;

809 126: 
°26
;

811 i‡–(*
p
) < 64 ) {

812 i‡–36 <(*
p
) && (*p) <= 59 )

813 
°26
;

814 } i‡–(*
p
) > 90 ) {

815 i‡–97 <(*
p
) && (*p) <= 122 )

816 
°26
;

818 
°26
;

819 
°0
;

820 
å204
:

822 {
	`MARK
(
m¨k
, 
p
); }

823 
°27
;

824 
°27
:

825 i‡–++
p
 =
≥
 )

826 
_ã°_eof27
;

829 i‡–(*
p
) < 65 ) {

830 i‡–48 <(*
p
) && (*p) <= 57 )

831 
°28
;

832 } i‡–(*
p
) > 70 ) {

833 i‡–97 <(*
p
) && (*p) <= 102 )

834 
°28
;

836 
°28
;

837 
°0
;

838 
°28
:

839 i‡–++
p
 =
≥
 )

840 
_ã°_eof28
;

842 i‡–(*
p
) < 65 ) {

843 i‡–48 <(*
p
) && (*p) <= 57 )

844 
°26
;

845 } i‡–(*
p
) > 70 ) {

846 i‡–97 <(*
p
) && (*p) <= 102 )

847 
°26
;

849 
°26
;

850 
°0
;

851 
å11
:

853 {
	`MARK
(
m¨k
, 
p
); }

856 if(
∑r£r
->
ªque°_∑th
 !
NULL
)

857 
∑r£r
->
	`ªque°_∑th
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k,
p
));

859 
°29
;

860 
å42
:

863 if(
∑r£r
->
ªque°_∑th
 !
NULL
)

864 
∑r£r
->
	`ªque°_∑th
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k,
p
));

866 
°29
;

867 
°29
:

868 i‡–++
p
 =
≥
 )

869 
_ã°_eof29
;

872  (*
p
) ) {

873 32: 
å53
;

874 33: 
å54
;

875 35: 
å55
;

876 37: 
å56
;

877 61: 
å54
;

878 95: 
å54
;

879 126: 
å54
;

881 i‡–(*
p
) < 63 ) {

882 i‡–36 <(*
p
) && (*p) <= 59 )

883 
å54
;

884 } i‡–(*
p
) > 90 ) {

885 i‡–97 <(*
p
) && (*p) <= 122 )

886 
å54
;

888 
å54
;

889 
°0
;

890 
å54
:

892 {
	`MARK
(
quîy_°¨t
, 
p
); }

893 
°30
;

894 
°30
:

895 i‡–++
p
 =
≥
 )

896 
_ã°_eof30
;

899  (*
p
) ) {

900 32: 
å57
;

901 33: 
°30
;

902 35: 
å59
;

903 37: 
°31
;

904 61: 
°30
;

905 95: 
°30
;

906 126: 
°30
;

908 i‡–(*
p
) < 63 ) {

909 i‡–36 <(*
p
) && (*p) <= 59 )

910 
°30
;

911 } i‡–(*
p
) > 90 ) {

912 i‡–97 <(*
p
) && (*p) <= 122 )

913 
°30
;

915 
°30
;

916 
°0
;

917 
å56
:

919 {
	`MARK
(
quîy_°¨t
, 
p
); }

920 
°31
;

921 
°31
:

922 i‡–++
p
 =
≥
 )

923 
_ã°_eof31
;

926 i‡–(*
p
) < 65 ) {

927 i‡–48 <(*
p
) && (*p) <= 57 )

928 
°32
;

929 } i‡–(*
p
) > 70 ) {

930 i‡–97 <(*
p
) && (*p) <= 102 )

931 
°32
;

933 
°32
;

934 
°0
;

935 
°32
:

936 i‡–++
p
 =
≥
 )

937 
_ã°_eof32
;

939 i‡–(*
p
) < 65 ) {

940 i‡–48 <(*
p
) && (*p) <= 57 )

941 
°30
;

942 } i‡–(*
p
) > 70 ) {

943 i‡–97 <(*
p
) && (*p) <= 102 )

944 
°30
;

946 
°30
;

947 
°0
;

948 
å10
:

950 {
	`MARK
(
m¨k
, 
p
); }

951 
°33
;

952 
°33
:

953 i‡–++
p
 =
≥
 )

954 
_ã°_eof33
;

957  (*
p
) ) {

958 32: 
å37
;

959 33: 
°26
;

960 35: 
å39
;

961 37: 
°27
;

962 47: 
°34
;

963 61: 
°26
;

964 63: 
å42
;

965 95: 
°26
;

966 126: 
°26
;

968 i‡–(*
p
) < 64 ) {

969 i‡–36 <(*
p
) && (*p) <= 59 )

970 
°26
;

971 } i‡–(*
p
) > 90 ) {

972 i‡–97 <(*
p
) && (*p) <= 122 )

973 
°26
;

975 
°26
;

976 
°0
;

977 
°34
:

978 i‡–++
p
 =
≥
 )

979 
_ã°_eof34
;

981  (*
p
) ) {

982 32: 
å37
;

983 33: 
°35
;

984 35: 
å39
;

985 37: 
°36
;

986 47: 
°26
;

987 58: 
°38
;

988 61: 
°35
;

989 63: 
å42
;

990 64: 
°42
;

991 91: 
°47
;

992 95: 
°35
;

993 126: 
°35
;

995 i‡–(*
p
) < 65 ) {

996 i‡–36 <(*
p
) && (*p) <= 59 )

997 
°35
;

998 } i‡–(*
p
) > 90 ) {

999 i‡–97 <(*
p
) && (*p) <= 122 )

1000 
°35
;

1002 
°35
;

1003 
°0
;

1004 
°35
:

1005 i‡–++
p
 =
≥
 )

1006 
_ã°_eof35
;

1008  (*
p
) ) {

1009 32: 
å37
;

1010 33: 
°35
;

1011 35: 
å39
;

1012 37: 
°36
;

1013 47: 
°26
;

1014 58: 
°38
;

1015 61: 
°35
;

1016 63: 
å42
;

1017 64: 
°42
;

1018 95: 
°35
;

1019 126: 
°35
;

1021 i‡–(*
p
) < 65 ) {

1022 i‡–36 <(*
p
) && (*p) <= 59 )

1023 
°35
;

1024 } i‡–(*
p
) > 90 ) {

1025 i‡–97 <(*
p
) && (*p) <= 122 )

1026 
°35
;

1028 
°35
;

1029 
°0
;

1030 
°36
:

1031 i‡–++
p
 =
≥
 )

1032 
_ã°_eof36
;

1034 i‡–(*
p
) < 65 ) {

1035 i‡–48 <(*
p
) && (*p) <= 57 )

1036 
°37
;

1037 } i‡–(*
p
) > 70 ) {

1038 i‡–97 <(*
p
) && (*p) <= 102 )

1039 
°37
;

1041 
°37
;

1042 
°0
;

1043 
°37
:

1044 i‡–++
p
 =
≥
 )

1045 
_ã°_eof37
;

1047 i‡–(*
p
) < 65 ) {

1048 i‡–48 <(*
p
) && (*p) <= 57 )

1049 
°35
;

1050 } i‡–(*
p
) > 70 ) {

1051 i‡–97 <(*
p
) && (*p) <= 102 )

1052 
°35
;

1054 
°35
;

1055 
°0
;

1056 
°38
:

1057 i‡–++
p
 =
≥
 )

1058 
_ã°_eof38
;

1060  (*
p
) ) {

1061 32: 
å37
;

1062 33: 
°39
;

1063 35: 
å39
;

1064 37: 
°40
;

1065 47: 
°26
;

1066 61: 
°39
;

1067 63: 
å42
;

1068 64: 
°42
;

1069 95: 
°39
;

1070 126: 
°39
;

1072 i‡–(*
p
) < 58 ) {

1073 i‡–(*
p
) > 46 ) {

1074 i‡–48 <(*
p
) && (*p) <= 57 )

1075 
°38
;

1076 } i‡–(*
p
) >= 36 )

1077 
°39
;

1078 } i‡–(*
p
) > 59 ) {

1079 i‡–(*
p
) > 90 ) {

1080 i‡–97 <(*
p
) && (*p) <= 122 )

1081 
°39
;

1082 } i‡–(*
p
) >= 65 )

1083 
°39
;

1085 
°39
;

1086 
°0
;

1087 
°39
:

1088 i‡–++
p
 =
≥
 )

1089 
_ã°_eof39
;

1091  (*
p
) ) {

1092 33: 
°39
;

1093 37: 
°40
;

1094 61: 
°39
;

1095 64: 
°42
;

1096 95: 
°39
;

1097 126: 
°39
;

1099 i‡–(*
p
) < 48 ) {

1100 i‡–36 <(*
p
) && (*p) <= 46 )

1101 
°39
;

1102 } i‡–(*
p
) > 59 ) {

1103 i‡–(*
p
) > 90 ) {

1104 i‡–97 <(*
p
) && (*p) <= 122 )

1105 
°39
;

1106 } i‡–(*
p
) >= 65 )

1107 
°39
;

1109 
°39
;

1110 
°0
;

1111 
°40
:

1112 i‡–++
p
 =
≥
 )

1113 
_ã°_eof40
;

1115 i‡–(*
p
) < 65 ) {

1116 i‡–48 <(*
p
) && (*p) <= 57 )

1117 
°41
;

1118 } i‡–(*
p
) > 70 ) {

1119 i‡–97 <(*
p
) && (*p) <= 102 )

1120 
°41
;

1122 
°41
;

1123 
°0
;

1124 
°41
:

1125 i‡–++
p
 =
≥
 )

1126 
_ã°_eof41
;

1128 i‡–(*
p
) < 65 ) {

1129 i‡–48 <(*
p
) && (*p) <= 57 )

1130 
°39
;

1131 } i‡–(*
p
) > 70 ) {

1132 i‡–97 <(*
p
) && (*p) <= 102 )

1133 
°39
;

1135 
°39
;

1136 
°0
;

1137 
°42
:

1138 i‡–++
p
 =
≥
 )

1139 
_ã°_eof42
;

1141  (*
p
) ) {

1142 32: 
å37
;

1143 33: 
°43
;

1144 35: 
å39
;

1145 37: 
°44
;

1146 47: 
°26
;

1147 58: 
°46
;

1148 61: 
°43
;

1149 63: 
å42
;

1150 91: 
°47
;

1151 95: 
°43
;

1152 126: 
°43
;

1154 i‡–(*
p
) < 65 ) {

1155 i‡–36 <(*
p
) && (*p) <= 59 )

1156 
°43
;

1157 } i‡–(*
p
) > 90 ) {

1158 i‡–97 <(*
p
) && (*p) <= 122 )

1159 
°43
;

1161 
°43
;

1162 
°0
;

1163 
°43
:

1164 i‡–++
p
 =
≥
 )

1165 
_ã°_eof43
;

1167  (*
p
) ) {

1168 32: 
å37
;

1169 33: 
°43
;

1170 35: 
å39
;

1171 37: 
°44
;

1172 47: 
°26
;

1173 58: 
°46
;

1174 61: 
°43
;

1175 63: 
å42
;

1176 95: 
°43
;

1177 126: 
°43
;

1179 i‡–(*
p
) < 65 ) {

1180 i‡–36 <(*
p
) && (*p) <= 59 )

1181 
°43
;

1182 } i‡–(*
p
) > 90 ) {

1183 i‡–97 <(*
p
) && (*p) <= 122 )

1184 
°43
;

1186 
°43
;

1187 
°0
;

1188 
°44
:

1189 i‡–++
p
 =
≥
 )

1190 
_ã°_eof44
;

1192 i‡–(*
p
) < 65 ) {

1193 i‡–48 <(*
p
) && (*p) <= 57 )

1194 
°45
;

1195 } i‡–(*
p
) > 70 ) {

1196 i‡–97 <(*
p
) && (*p) <= 102 )

1197 
°45
;

1199 
°45
;

1200 
°0
;

1201 
°45
:

1202 i‡–++
p
 =
≥
 )

1203 
_ã°_eof45
;

1205 i‡–(*
p
) < 65 ) {

1206 i‡–48 <(*
p
) && (*p) <= 57 )

1207 
°43
;

1208 } i‡–(*
p
) > 70 ) {

1209 i‡–97 <(*
p
) && (*p) <= 102 )

1210 
°43
;

1212 
°43
;

1213 
°0
;

1214 
°46
:

1215 i‡–++
p
 =
≥
 )

1216 
_ã°_eof46
;

1218  (*
p
) ) {

1219 32: 
å37
;

1220 35: 
å39
;

1221 47: 
°26
;

1222 63: 
å42
;

1224 i‡–48 <(*
p
) && (*p) <= 57 )

1225 
°46
;

1226 
°0
;

1227 
°47
:

1228 i‡–++
p
 =
≥
 )

1229 
_ã°_eof47
;

1231  (*
p
) ) {

1232 6: 
°48
;

1233 58: 
°167
;

1234 118: 
°169
;

1236 i‡–(*
p
) < 65 ) {

1237 i‡–48 <(*
p
) && (*p) <= 57 )

1238 
°91
;

1239 } i‡–(*
p
) > 70 ) {

1240 i‡–97 <(*
p
) && (*p) <= 102 )

1241 
°91
;

1243 
°91
;

1244 
°0
;

1245 
°48
:

1246 i‡–++
p
 =
≥
 )

1247 
_ã°_eof48
;

1249 i‡–(*
p
) < 65 ) {

1250 i‡–48 <(*
p
) && (*p) <= 57 )

1251 
°49
;

1252 } i‡–(*
p
) > 70 ) {

1253 i‡–97 <(*
p
) && (*p) <= 102 )

1254 
°49
;

1256 
°49
;

1257 
°0
;

1258 
°49
:

1259 i‡–++
p
 =
≥
 )

1260 
_ã°_eof49
;

1262 i‡–(*
p
) == 58 )

1263 
°53
;

1264 i‡–(*
p
) < 65 ) {

1265 i‡–48 <(*
p
) && (*p) <= 57 )

1266 
°50
;

1267 } i‡–(*
p
) > 70 ) {

1268 i‡–97 <(*
p
) && (*p) <= 102 )

1269 
°50
;

1271 
°50
;

1272 
°0
;

1273 
°50
:

1274 i‡–++
p
 =
≥
 )

1275 
_ã°_eof50
;

1277 i‡–(*
p
) == 58 )

1278 
°53
;

1279 i‡–(*
p
) < 65 ) {

1280 i‡–48 <(*
p
) && (*p) <= 57 )

1281 
°51
;

1282 } i‡–(*
p
) > 70 ) {

1283 i‡–97 <(*
p
) && (*p) <= 102 )

1284 
°51
;

1286 
°51
;

1287 
°0
;

1288 
°51
:

1289 i‡–++
p
 =
≥
 )

1290 
_ã°_eof51
;

1292 i‡–(*
p
) == 58 )

1293 
°53
;

1294 i‡–(*
p
) < 65 ) {

1295 i‡–48 <(*
p
) && (*p) <= 57 )

1296 
°52
;

1297 } i‡–(*
p
) > 70 ) {

1298 i‡–97 <(*
p
) && (*p) <= 102 )

1299 
°52
;

1301 
°52
;

1302 
°0
;

1303 
°52
:

1304 i‡–++
p
 =
≥
 )

1305 
_ã°_eof52
;

1307 i‡–(*
p
) == 58 )

1308 
°53
;

1309 
°0
;

1310 
°53
:

1311 i‡–++
p
 =
≥
 )

1312 
_ã°_eof53
;

1314  (*
p
) ) {

1315 49: 
°84
;

1316 50: 
°87
;

1318 i‡–(*
p
) < 65 ) {

1319 i‡–48 <(*
p
) && (*p) <= 57 )

1320 
°54
;

1321 } i‡–(*
p
) > 70 ) {

1322 i‡–97 <(*
p
) && (*p) <= 102 )

1323 
°90
;

1325 
°90
;

1326 
°0
;

1327 
°54
:

1328 i‡–++
p
 =
≥
 )

1329 
_ã°_eof54
;

1331  (*
p
) ) {

1332 46: 
°55
;

1333 58: 
°80
;

1335 i‡–(*
p
) < 65 ) {

1336 i‡–48 <(*
p
) && (*p) <= 57 )

1337 
°77
;

1338 } i‡–(*
p
) > 70 ) {

1339 i‡–97 <(*
p
) && (*p) <= 102 )

1340 
°77
;

1342 
°77
;

1343 
°0
;

1344 
°55
:

1345 i‡–++
p
 =
≥
 )

1346 
_ã°_eof55
;

1348  (*
p
) ) {

1349 49: 
°72
;

1350 50: 
°74
;

1352 i‡–48 <(*
p
) && (*p) <= 57 )

1353 
°56
;

1354 
°0
;

1355 
°56
:

1356 i‡–++
p
 =
≥
 )

1357 
_ã°_eof56
;

1359 i‡–(*
p
) == 46 )

1360 
°57
;

1361 
°0
;

1362 
°57
:

1363 i‡–++
p
 =
≥
 )

1364 
_ã°_eof57
;

1366  (*
p
) ) {

1367 49: 
°67
;

1368 50: 
°69
;

1370 i‡–48 <(*
p
) && (*p) <= 57 )

1371 
°58
;

1372 
°0
;

1373 
°58
:

1374 i‡–++
p
 =
≥
 )

1375 
_ã°_eof58
;

1377 i‡–(*
p
) == 46 )

1378 
°59
;

1379 
°0
;

1380 
°59
:

1381 i‡–++
p
 =
≥
 )

1382 
_ã°_eof59
;

1384  (*
p
) ) {

1385 49: 
°62
;

1386 50: 
°64
;

1388 i‡–48 <(*
p
) && (*p) <= 57 )

1389 
°60
;

1390 
°0
;

1391 
°60
:

1392 i‡–++
p
 =
≥
 )

1393 
_ã°_eof60
;

1395 i‡–(*
p
) == 93 )

1396 
°61
;

1397 
°0
;

1398 
°61
:

1399 i‡–++
p
 =
≥
 )

1400 
_ã°_eof61
;

1402  (*
p
) ) {

1403 32: 
å37
;

1404 35: 
å39
;

1405 47: 
°26
;

1406 58: 
°46
;

1407 63: 
å42
;

1409 
°0
;

1410 
°62
:

1411 i‡–++
p
 =
≥
 )

1412 
_ã°_eof62
;

1414 i‡–(*
p
) == 93 )

1415 
°61
;

1416 i‡–48 <(*
p
) && (*p) <= 57 )

1417 
°63
;

1418 
°0
;

1419 
°63
:

1420 i‡–++
p
 =
≥
 )

1421 
_ã°_eof63
;

1423 i‡–(*
p
) == 93 )

1424 
°61
;

1425 i‡–48 <(*
p
) && (*p) <= 57 )

1426 
°60
;

1427 
°0
;

1428 
°64
:

1429 i‡–++
p
 =
≥
 )

1430 
_ã°_eof64
;

1432  (*
p
) ) {

1433 48: 
°65
;

1434 53: 
°66
;

1435 93: 
°61
;

1437 
°0
;

1438 
°65
:

1439 i‡–++
p
 =
≥
 )

1440 
_ã°_eof65
;

1442 i‡–48 <(*
p
) && (*p) <= 57 )

1443 
°60
;

1444 
°0
;

1445 
°66
:

1446 i‡–++
p
 =
≥
 )

1447 
_ã°_eof66
;

1449 i‡–(*
p
) == 48 )

1450 
°60
;

1451 
°0
;

1452 
°67
:

1453 i‡–++
p
 =
≥
 )

1454 
_ã°_eof67
;

1456 i‡–(*
p
) == 46 )

1457 
°59
;

1458 i‡–48 <(*
p
) && (*p) <= 57 )

1459 
°68
;

1460 
°0
;

1461 
°68
:

1462 i‡–++
p
 =
≥
 )

1463 
_ã°_eof68
;

1465 i‡–(*
p
) == 46 )

1466 
°59
;

1467 i‡–48 <(*
p
) && (*p) <= 57 )

1468 
°58
;

1469 
°0
;

1470 
°69
:

1471 i‡–++
p
 =
≥
 )

1472 
_ã°_eof69
;

1474  (*
p
) ) {

1475 46: 
°59
;

1476 48: 
°70
;

1477 53: 
°71
;

1479 
°0
;

1480 
°70
:

1481 i‡–++
p
 =
≥
 )

1482 
_ã°_eof70
;

1484 i‡–48 <(*
p
) && (*p) <= 57 )

1485 
°58
;

1486 
°0
;

1487 
°71
:

1488 i‡–++
p
 =
≥
 )

1489 
_ã°_eof71
;

1491 i‡–(*
p
) == 48 )

1492 
°58
;

1493 
°0
;

1494 
°72
:

1495 i‡–++
p
 =
≥
 )

1496 
_ã°_eof72
;

1498 i‡–(*
p
) == 46 )

1499 
°57
;

1500 i‡–48 <(*
p
) && (*p) <= 57 )

1501 
°73
;

1502 
°0
;

1503 
°73
:

1504 i‡–++
p
 =
≥
 )

1505 
_ã°_eof73
;

1507 i‡–(*
p
) == 46 )

1508 
°57
;

1509 i‡–48 <(*
p
) && (*p) <= 57 )

1510 
°56
;

1511 
°0
;

1512 
°74
:

1513 i‡–++
p
 =
≥
 )

1514 
_ã°_eof74
;

1516  (*
p
) ) {

1517 46: 
°57
;

1518 48: 
°75
;

1519 53: 
°76
;

1521 
°0
;

1522 
°75
:

1523 i‡–++
p
 =
≥
 )

1524 
_ã°_eof75
;

1526 i‡–48 <(*
p
) && (*p) <= 57 )

1527 
°56
;

1528 
°0
;

1529 
°76
:

1530 i‡–++
p
 =
≥
 )

1531 
_ã°_eof76
;

1533 i‡–(*
p
) == 48 )

1534 
°56
;

1535 
°0
;

1536 
°77
:

1537 i‡–++
p
 =
≥
 )

1538 
_ã°_eof77
;

1540 i‡–(*
p
) == 58 )

1541 
°80
;

1542 i‡–(*
p
) < 65 ) {

1543 i‡–48 <(*
p
) && (*p) <= 57 )

1544 
°78
;

1545 } i‡–(*
p
) > 70 ) {

1546 i‡–97 <(*
p
) && (*p) <= 102 )

1547 
°78
;

1549 
°78
;

1550 
°0
;

1551 
°78
:

1552 i‡–++
p
 =
≥
 )

1553 
_ã°_eof78
;

1555 i‡–(*
p
) == 58 )

1556 
°80
;

1557 i‡–(*
p
) < 65 ) {

1558 i‡–48 <(*
p
) && (*p) <= 57 )

1559 
°79
;

1560 } i‡–(*
p
) > 70 ) {

1561 i‡–97 <(*
p
) && (*p) <= 102 )

1562 
°79
;

1564 
°79
;

1565 
°0
;

1566 
°79
:

1567 i‡–++
p
 =
≥
 )

1568 
_ã°_eof79
;

1570 i‡–(*
p
) == 58 )

1571 
°80
;

1572 
°0
;

1573 
°80
:

1574 i‡–++
p
 =
≥
 )

1575 
_ã°_eof80
;

1577 i‡–(*
p
) < 65 ) {

1578 i‡–48 <(*
p
) && (*p) <= 57 )

1579 
°81
;

1580 } i‡–(*
p
) > 70 ) {

1581 i‡–97 <(*
p
) && (*p) <= 102 )

1582 
°81
;

1584 
°81
;

1585 
°0
;

1586 
°81
:

1587 i‡–++
p
 =
≥
 )

1588 
_ã°_eof81
;

1590 i‡–(*
p
) == 93 )

1591 
°61
;

1592 i‡–(*
p
) < 65 ) {

1593 i‡–48 <(*
p
) && (*p) <= 57 )

1594 
°82
;

1595 } i‡–(*
p
) > 70 ) {

1596 i‡–97 <(*
p
) && (*p) <= 102 )

1597 
°82
;

1599 
°82
;

1600 
°0
;

1601 
°82
:

1602 i‡–++
p
 =
≥
 )

1603 
_ã°_eof82
;

1605 i‡–(*
p
) == 93 )

1606 
°61
;

1607 i‡–(*
p
) < 65 ) {

1608 i‡–48 <(*
p
) && (*p) <= 57 )

1609 
°83
;

1610 } i‡–(*
p
) > 70 ) {

1611 i‡–97 <(*
p
) && (*p) <= 102 )

1612 
°83
;

1614 
°83
;

1615 
°0
;

1616 
°83
:

1617 i‡–++
p
 =
≥
 )

1618 
_ã°_eof83
;

1620 i‡–(*
p
) == 93 )

1621 
°61
;

1622 i‡–(*
p
) < 65 ) {

1623 i‡–48 <(*
p
) && (*p) <= 57 )

1624 
°60
;

1625 } i‡–(*
p
) > 70 ) {

1626 i‡–97 <(*
p
) && (*p) <= 102 )

1627 
°60
;

1629 
°60
;

1630 
°0
;

1631 
°84
:

1632 i‡–++
p
 =
≥
 )

1633 
_ã°_eof84
;

1635  (*
p
) ) {

1636 46: 
°55
;

1637 58: 
°80
;

1639 i‡–(*
p
) < 65 ) {

1640 i‡–48 <(*
p
) && (*p) <= 57 )

1641 
°85
;

1642 } i‡–(*
p
) > 70 ) {

1643 i‡–97 <(*
p
) && (*p) <= 102 )

1644 
°77
;

1646 
°77
;

1647 
°0
;

1648 
°85
:

1649 i‡–++
p
 =
≥
 )

1650 
_ã°_eof85
;

1652  (*
p
) ) {

1653 46: 
°55
;

1654 58: 
°80
;

1656 i‡–(*
p
) < 65 ) {

1657 i‡–48 <(*
p
) && (*p) <= 57 )

1658 
°86
;

1659 } i‡–(*
p
) > 70 ) {

1660 i‡–97 <(*
p
) && (*p) <= 102 )

1661 
°78
;

1663 
°78
;

1664 
°0
;

1665 
°86
:

1666 i‡–++
p
 =
≥
 )

1667 
_ã°_eof86
;

1669  (*
p
) ) {

1670 46: 
°55
;

1671 58: 
°80
;

1673 i‡–(*
p
) < 65 ) {

1674 i‡–48 <(*
p
) && (*p) <= 57 )

1675 
°79
;

1676 } i‡–(*
p
) > 70 ) {

1677 i‡–97 <(*
p
) && (*p) <= 102 )

1678 
°79
;

1680 
°79
;

1681 
°0
;

1682 
°87
:

1683 i‡–++
p
 =
≥
 )

1684 
_ã°_eof87
;

1686  (*
p
) ) {

1687 46: 
°55
;

1688 48: 
°88
;

1689 53: 
°89
;

1690 58: 
°80
;

1692 i‡–(*
p
) < 65 ) {

1693 i‡–49 <(*
p
) && (*p) <= 57 )

1694 
°77
;

1695 } i‡–(*
p
) > 70 ) {

1696 i‡–97 <(*
p
) && (*p) <= 102 )

1697 
°77
;

1699 
°77
;

1700 
°0
;

1701 
°88
:

1702 i‡–++
p
 =
≥
 )

1703 
_ã°_eof88
;

1705 i‡–(*
p
) == 58 )

1706 
°80
;

1707 i‡–(*
p
) < 65 ) {

1708 i‡–48 <(*
p
) && (*p) <= 57 )

1709 
°86
;

1710 } i‡–(*
p
) > 70 ) {

1711 i‡–97 <(*
p
) && (*p) <= 102 )

1712 
°78
;

1714 
°78
;

1715 
°0
;

1716 
°89
:

1717 i‡–++
p
 =
≥
 )

1718 
_ã°_eof89
;

1720  (*
p
) ) {

1721 48: 
°86
;

1722 58: 
°80
;

1724 i‡–(*
p
) < 65 ) {

1725 i‡–49 <(*
p
) && (*p) <= 57 )

1726 
°78
;

1727 } i‡–(*
p
) > 70 ) {

1728 i‡–97 <(*
p
) && (*p) <= 102 )

1729 
°78
;

1731 
°78
;

1732 
°0
;

1733 
°90
:

1734 i‡–++
p
 =
≥
 )

1735 
_ã°_eof90
;

1737 i‡–(*
p
) == 58 )

1738 
°80
;

1739 i‡–(*
p
) < 65 ) {

1740 i‡–48 <(*
p
) && (*p) <= 57 )

1741 
°77
;

1742 } i‡–(*
p
) > 70 ) {

1743 i‡–97 <(*
p
) && (*p) <= 102 )

1744 
°77
;

1746 
°77
;

1747 
°0
;

1748 
°91
:

1749 i‡–++
p
 =
≥
 )

1750 
_ã°_eof91
;

1752 i‡–(*
p
) == 58 )

1753 
°95
;

1754 i‡–(*
p
) < 65 ) {

1755 i‡–48 <(*
p
) && (*p) <= 57 )

1756 
°92
;

1757 } i‡–(*
p
) > 70 ) {

1758 i‡–97 <(*
p
) && (*p) <= 102 )

1759 
°92
;

1761 
°92
;

1762 
°0
;

1763 
°92
:

1764 i‡–++
p
 =
≥
 )

1765 
_ã°_eof92
;

1767 i‡–(*
p
) == 58 )

1768 
°95
;

1769 i‡–(*
p
) < 65 ) {

1770 i‡–48 <(*
p
) && (*p) <= 57 )

1771 
°93
;

1772 } i‡–(*
p
) > 70 ) {

1773 i‡–97 <(*
p
) && (*p) <= 102 )

1774 
°93
;

1776 
°93
;

1777 
°0
;

1778 
°93
:

1779 i‡–++
p
 =
≥
 )

1780 
_ã°_eof93
;

1782 i‡–(*
p
) == 58 )

1783 
°95
;

1784 i‡–(*
p
) < 65 ) {

1785 i‡–48 <(*
p
) && (*p) <= 57 )

1786 
°94
;

1787 } i‡–(*
p
) > 70 ) {

1788 i‡–97 <(*
p
) && (*p) <= 102 )

1789 
°94
;

1791 
°94
;

1792 
°0
;

1793 
°94
:

1794 i‡–++
p
 =
≥
 )

1795 
_ã°_eof94
;

1797 i‡–(*
p
) == 58 )

1798 
°95
;

1799 
°0
;

1800 
°95
:

1801 i‡–++
p
 =
≥
 )

1802 
_ã°_eof95
;

1804 i‡–(*
p
) == 58 )

1805 
°166
;

1806 i‡–(*
p
) < 65 ) {

1807 i‡–48 <(*
p
) && (*p) <= 57 )

1808 
°96
;

1809 } i‡–(*
p
) > 70 ) {

1810 i‡–97 <(*
p
) && (*p) <= 102 )

1811 
°96
;

1813 
°96
;

1814 
°0
;

1815 
°96
:

1816 i‡–++
p
 =
≥
 )

1817 
_ã°_eof96
;

1819 i‡–(*
p
) == 58 )

1820 
°100
;

1821 i‡–(*
p
) < 65 ) {

1822 i‡–48 <(*
p
) && (*p) <= 57 )

1823 
°97
;

1824 } i‡–(*
p
) > 70 ) {

1825 i‡–97 <(*
p
) && (*p) <= 102 )

1826 
°97
;

1828 
°97
;

1829 
°0
;

1830 
°97
:

1831 i‡–++
p
 =
≥
 )

1832 
_ã°_eof97
;

1834 i‡–(*
p
) == 58 )

1835 
°100
;

1836 i‡–(*
p
) < 65 ) {

1837 i‡–48 <(*
p
) && (*p) <= 57 )

1838 
°98
;

1839 } i‡–(*
p
) > 70 ) {

1840 i‡–97 <(*
p
) && (*p) <= 102 )

1841 
°98
;

1843 
°98
;

1844 
°0
;

1845 
°98
:

1846 i‡–++
p
 =
≥
 )

1847 
_ã°_eof98
;

1849 i‡–(*
p
) == 58 )

1850 
°100
;

1851 i‡–(*
p
) < 65 ) {

1852 i‡–48 <(*
p
) && (*p) <= 57 )

1853 
°99
;

1854 } i‡–(*
p
) > 70 ) {

1855 i‡–97 <(*
p
) && (*p) <= 102 )

1856 
°99
;

1858 
°99
;

1859 
°0
;

1860 
°99
:

1861 i‡–++
p
 =
≥
 )

1862 
_ã°_eof99
;

1864 i‡–(*
p
) == 58 )

1865 
°100
;

1866 
°0
;

1867 
°100
:

1868 i‡–++
p
 =
≥
 )

1869 
_ã°_eof100
;

1871 i‡–(*
p
) == 58 )

1872 
°165
;

1873 i‡–(*
p
) < 65 ) {

1874 i‡–48 <(*
p
) && (*p) <= 57 )

1875 
°101
;

1876 } i‡–(*
p
) > 70 ) {

1877 i‡–97 <(*
p
) && (*p) <= 102 )

1878 
°101
;

1880 
°101
;

1881 
°0
;

1882 
°101
:

1883 i‡–++
p
 =
≥
 )

1884 
_ã°_eof101
;

1886 i‡–(*
p
) == 58 )

1887 
°105
;

1888 i‡–(*
p
) < 65 ) {

1889 i‡–48 <(*
p
) && (*p) <= 57 )

1890 
°102
;

1891 } i‡–(*
p
) > 70 ) {

1892 i‡–97 <(*
p
) && (*p) <= 102 )

1893 
°102
;

1895 
°102
;

1896 
°0
;

1897 
°102
:

1898 i‡–++
p
 =
≥
 )

1899 
_ã°_eof102
;

1901 i‡–(*
p
) == 58 )

1902 
°105
;

1903 i‡–(*
p
) < 65 ) {

1904 i‡–48 <(*
p
) && (*p) <= 57 )

1905 
°103
;

1906 } i‡–(*
p
) > 70 ) {

1907 i‡–97 <(*
p
) && (*p) <= 102 )

1908 
°103
;

1910 
°103
;

1911 
°0
;

1912 
°103
:

1913 i‡–++
p
 =
≥
 )

1914 
_ã°_eof103
;

1916 i‡–(*
p
) == 58 )

1917 
°105
;

1918 i‡–(*
p
) < 65 ) {

1919 i‡–48 <(*
p
) && (*p) <= 57 )

1920 
°104
;

1921 } i‡–(*
p
) > 70 ) {

1922 i‡–97 <(*
p
) && (*p) <= 102 )

1923 
°104
;

1925 
°104
;

1926 
°0
;

1927 
°104
:

1928 i‡–++
p
 =
≥
 )

1929 
_ã°_eof104
;

1931 i‡–(*
p
) == 58 )

1932 
°105
;

1933 
°0
;

1934 
°105
:

1935 i‡–++
p
 =
≥
 )

1936 
_ã°_eof105
;

1938 i‡–(*
p
) == 58 )

1939 
°164
;

1940 i‡–(*
p
) < 65 ) {

1941 i‡–48 <(*
p
) && (*p) <= 57 )

1942 
°106
;

1943 } i‡–(*
p
) > 70 ) {

1944 i‡–97 <(*
p
) && (*p) <= 102 )

1945 
°106
;

1947 
°106
;

1948 
°0
;

1949 
°106
:

1950 i‡–++
p
 =
≥
 )

1951 
_ã°_eof106
;

1953 i‡–(*
p
) == 58 )

1954 
°110
;

1955 i‡–(*
p
) < 65 ) {

1956 i‡–48 <(*
p
) && (*p) <= 57 )

1957 
°107
;

1958 } i‡–(*
p
) > 70 ) {

1959 i‡–97 <(*
p
) && (*p) <= 102 )

1960 
°107
;

1962 
°107
;

1963 
°0
;

1964 
°107
:

1965 i‡–++
p
 =
≥
 )

1966 
_ã°_eof107
;

1968 i‡–(*
p
) == 58 )

1969 
°110
;

1970 i‡–(*
p
) < 65 ) {

1971 i‡–48 <(*
p
) && (*p) <= 57 )

1972 
°108
;

1973 } i‡–(*
p
) > 70 ) {

1974 i‡–97 <(*
p
) && (*p) <= 102 )

1975 
°108
;

1977 
°108
;

1978 
°0
;

1979 
°108
:

1980 i‡–++
p
 =
≥
 )

1981 
_ã°_eof108
;

1983 i‡–(*
p
) == 58 )

1984 
°110
;

1985 i‡–(*
p
) < 65 ) {

1986 i‡–48 <(*
p
) && (*p) <= 57 )

1987 
°109
;

1988 } i‡–(*
p
) > 70 ) {

1989 i‡–97 <(*
p
) && (*p) <= 102 )

1990 
°109
;

1992 
°109
;

1993 
°0
;

1994 
°109
:

1995 i‡–++
p
 =
≥
 )

1996 
_ã°_eof109
;

1998 i‡–(*
p
) == 58 )

1999 
°110
;

2000 
°0
;

2001 
°110
:

2002 i‡–++
p
 =
≥
 )

2003 
_ã°_eof110
;

2005 i‡–(*
p
) == 58 )

2006 
°163
;

2007 i‡–(*
p
) < 65 ) {

2008 i‡–48 <(*
p
) && (*p) <= 57 )

2009 
°111
;

2010 } i‡–(*
p
) > 70 ) {

2011 i‡–97 <(*
p
) && (*p) <= 102 )

2012 
°111
;

2014 
°111
;

2015 
°0
;

2016 
°111
:

2017 i‡–++
p
 =
≥
 )

2018 
_ã°_eof111
;

2020 i‡–(*
p
) == 58 )

2021 
°115
;

2022 i‡–(*
p
) < 65 ) {

2023 i‡–48 <(*
p
) && (*p) <= 57 )

2024 
°112
;

2025 } i‡–(*
p
) > 70 ) {

2026 i‡–97 <(*
p
) && (*p) <= 102 )

2027 
°112
;

2029 
°112
;

2030 
°0
;

2031 
°112
:

2032 i‡–++
p
 =
≥
 )

2033 
_ã°_eof112
;

2035 i‡–(*
p
) == 58 )

2036 
°115
;

2037 i‡–(*
p
) < 65 ) {

2038 i‡–48 <(*
p
) && (*p) <= 57 )

2039 
°113
;

2040 } i‡–(*
p
) > 70 ) {

2041 i‡–97 <(*
p
) && (*p) <= 102 )

2042 
°113
;

2044 
°113
;

2045 
°0
;

2046 
°113
:

2047 i‡–++
p
 =
≥
 )

2048 
_ã°_eof113
;

2050 i‡–(*
p
) == 58 )

2051 
°115
;

2052 i‡–(*
p
) < 65 ) {

2053 i‡–48 <(*
p
) && (*p) <= 57 )

2054 
°114
;

2055 } i‡–(*
p
) > 70 ) {

2056 i‡–97 <(*
p
) && (*p) <= 102 )

2057 
°114
;

2059 
°114
;

2060 
°0
;

2061 
°114
:

2062 i‡–++
p
 =
≥
 )

2063 
_ã°_eof114
;

2065 i‡–(*
p
) == 58 )

2066 
°115
;

2067 
°0
;

2068 
°115
:

2069 i‡–++
p
 =
≥
 )

2070 
_ã°_eof115
;

2072 i‡–(*
p
) == 58 )

2073 
°151
;

2074 i‡–(*
p
) < 65 ) {

2075 i‡–48 <(*
p
) && (*p) <= 57 )

2076 
°116
;

2077 } i‡–(*
p
) > 70 ) {

2078 i‡–97 <(*
p
) && (*p) <= 102 )

2079 
°116
;

2081 
°116
;

2082 
°0
;

2083 
°116
:

2084 i‡–++
p
 =
≥
 )

2085 
_ã°_eof116
;

2087 i‡–(*
p
) == 58 )

2088 
°120
;

2089 i‡–(*
p
) < 65 ) {

2090 i‡–48 <(*
p
) && (*p) <= 57 )

2091 
°117
;

2092 } i‡–(*
p
) > 70 ) {

2093 i‡–97 <(*
p
) && (*p) <= 102 )

2094 
°117
;

2096 
°117
;

2097 
°0
;

2098 
°117
:

2099 i‡–++
p
 =
≥
 )

2100 
_ã°_eof117
;

2102 i‡–(*
p
) == 58 )

2103 
°120
;

2104 i‡–(*
p
) < 65 ) {

2105 i‡–48 <(*
p
) && (*p) <= 57 )

2106 
°118
;

2107 } i‡–(*
p
) > 70 ) {

2108 i‡–97 <(*
p
) && (*p) <= 102 )

2109 
°118
;

2111 
°118
;

2112 
°0
;

2113 
°118
:

2114 i‡–++
p
 =
≥
 )

2115 
_ã°_eof118
;

2117 i‡–(*
p
) == 58 )

2118 
°120
;

2119 i‡–(*
p
) < 65 ) {

2120 i‡–48 <(*
p
) && (*p) <= 57 )

2121 
°119
;

2122 } i‡–(*
p
) > 70 ) {

2123 i‡–97 <(*
p
) && (*p) <= 102 )

2124 
°119
;

2126 
°119
;

2127 
°0
;

2128 
°119
:

2129 i‡–++
p
 =
≥
 )

2130 
_ã°_eof119
;

2132 i‡–(*
p
) == 58 )

2133 
°120
;

2134 
°0
;

2135 
°120
:

2136 i‡–++
p
 =
≥
 )

2137 
_ã°_eof120
;

2139 i‡–(*
p
) == 58 )

2140 
°150
;

2141 i‡–(*
p
) < 65 ) {

2142 i‡–48 <(*
p
) && (*p) <= 57 )

2143 
°121
;

2144 } i‡–(*
p
) > 70 ) {

2145 i‡–97 <(*
p
) && (*p) <= 102 )

2146 
°121
;

2148 
°121
;

2149 
°0
;

2150 
°121
:

2151 i‡–++
p
 =
≥
 )

2152 
_ã°_eof121
;

2154 i‡–(*
p
) == 58 )

2155 
°125
;

2156 i‡–(*
p
) < 65 ) {

2157 i‡–48 <(*
p
) && (*p) <= 57 )

2158 
°122
;

2159 } i‡–(*
p
) > 70 ) {

2160 i‡–97 <(*
p
) && (*p) <= 102 )

2161 
°122
;

2163 
°122
;

2164 
°0
;

2165 
°122
:

2166 i‡–++
p
 =
≥
 )

2167 
_ã°_eof122
;

2169 i‡–(*
p
) == 58 )

2170 
°125
;

2171 i‡–(*
p
) < 65 ) {

2172 i‡–48 <(*
p
) && (*p) <= 57 )

2173 
°123
;

2174 } i‡–(*
p
) > 70 ) {

2175 i‡–97 <(*
p
) && (*p) <= 102 )

2176 
°123
;

2178 
°123
;

2179 
°0
;

2180 
°123
:

2181 i‡–++
p
 =
≥
 )

2182 
_ã°_eof123
;

2184 i‡–(*
p
) == 58 )

2185 
°125
;

2186 i‡–(*
p
) < 65 ) {

2187 i‡–48 <(*
p
) && (*p) <= 57 )

2188 
°124
;

2189 } i‡–(*
p
) > 70 ) {

2190 i‡–97 <(*
p
) && (*p) <= 102 )

2191 
°124
;

2193 
°124
;

2194 
°0
;

2195 
°124
:

2196 i‡–++
p
 =
≥
 )

2197 
_ã°_eof124
;

2199 i‡–(*
p
) == 58 )

2200 
°125
;

2201 
°0
;

2202 
°125
:

2203 i‡–++
p
 =
≥
 )

2204 
_ã°_eof125
;

2206 i‡–(*
p
) == 58 )

2207 
°126
;

2208 i‡–(*
p
) < 65 ) {

2209 i‡–48 <(*
p
) && (*p) <= 57 )

2210 
°121
;

2211 } i‡–(*
p
) > 70 ) {

2212 i‡–97 <(*
p
) && (*p) <= 102 )

2213 
°121
;

2215 
°121
;

2216 
°0
;

2217 
°126
:

2218 i‡–++
p
 =
≥
 )

2219 
_ã°_eof126
;

2221  (*
p
) ) {

2222 49: 
°143
;

2223 50: 
°146
;

2224 93: 
°61
;

2226 i‡–(*
p
) < 48 ) {

2227 i‡–2 <(*
p
) && (*p) <= 3 )

2228 
°48
;

2229 } i‡–(*
p
) > 57 ) {

2230 i‡–(*
p
) > 70 ) {

2231 i‡–97 <(*
p
) && (*p) <= 102 )

2232 
°149
;

2233 } i‡–(*
p
) >= 65 )

2234 
°149
;

2236 
°127
;

2237 
°0
;

2238 
°127
:

2239 i‡–++
p
 =
≥
 )

2240 
_ã°_eof127
;

2242  (*
p
) ) {

2243 46: 
°55
;

2244 58: 
°131
;

2245 93: 
°61
;

2247 i‡–(*
p
) < 65 ) {

2248 i‡–48 <(*
p
) && (*p) <= 57 )

2249 
°128
;

2250 } i‡–(*
p
) > 70 ) {

2251 i‡–97 <(*
p
) && (*p) <= 102 )

2252 
°128
;

2254 
°128
;

2255 
°0
;

2256 
°128
:

2257 i‡–++
p
 =
≥
 )

2258 
_ã°_eof128
;

2260  (*
p
) ) {

2261 58: 
°131
;

2262 93: 
°61
;

2264 i‡–(*
p
) < 65 ) {

2265 i‡–48 <(*
p
) && (*p) <= 57 )

2266 
°129
;

2267 } i‡–(*
p
) > 70 ) {

2268 i‡–97 <(*
p
) && (*p) <= 102 )

2269 
°129
;

2271 
°129
;

2272 
°0
;

2273 
°129
:

2274 i‡–++
p
 =
≥
 )

2275 
_ã°_eof129
;

2277  (*
p
) ) {

2278 58: 
°131
;

2279 93: 
°61
;

2281 i‡–(*
p
) < 65 ) {

2282 i‡–48 <(*
p
) && (*p) <= 57 )

2283 
°130
;

2284 } i‡–(*
p
) > 70 ) {

2285 i‡–97 <(*
p
) && (*p) <= 102 )

2286 
°130
;

2288 
°130
;

2289 
°0
;

2290 
°130
:

2291 i‡–++
p
 =
≥
 )

2292 
_ã°_eof130
;

2294  (*
p
) ) {

2295 58: 
°131
;

2296 93: 
°61
;

2298 
°0
;

2299 
°131
:

2300 i‡–++
p
 =
≥
 )

2301 
_ã°_eof131
;

2303  (*
p
) ) {

2304 49: 
°136
;

2305 50: 
°139
;

2307 i‡–(*
p
) < 65 ) {

2308 i‡–48 <(*
p
) && (*p) <= 57 )

2309 
°132
;

2310 } i‡–(*
p
) > 70 ) {

2311 i‡–97 <(*
p
) && (*p) <= 102 )

2312 
°142
;

2314 
°142
;

2315 
°0
;

2316 
°132
:

2317 i‡–++
p
 =
≥
 )

2318 
_ã°_eof132
;

2320  (*
p
) ) {

2321 46: 
°55
;

2322 58: 
°80
;

2323 93: 
°61
;

2325 i‡–(*
p
) < 65 ) {

2326 i‡–48 <(*
p
) && (*p) <= 57 )

2327 
°133
;

2328 } i‡–(*
p
) > 70 ) {

2329 i‡–97 <(*
p
) && (*p) <= 102 )

2330 
°133
;

2332 
°133
;

2333 
°0
;

2334 
°133
:

2335 i‡–++
p
 =
≥
 )

2336 
_ã°_eof133
;

2338  (*
p
) ) {

2339 58: 
°80
;

2340 93: 
°61
;

2342 i‡–(*
p
) < 65 ) {

2343 i‡–48 <(*
p
) && (*p) <= 57 )

2344 
°134
;

2345 } i‡–(*
p
) > 70 ) {

2346 i‡–97 <(*
p
) && (*p) <= 102 )

2347 
°134
;

2349 
°134
;

2350 
°0
;

2351 
°134
:

2352 i‡–++
p
 =
≥
 )

2353 
_ã°_eof134
;

2355  (*
p
) ) {

2356 58: 
°80
;

2357 93: 
°61
;

2359 i‡–(*
p
) < 65 ) {

2360 i‡–48 <(*
p
) && (*p) <= 57 )

2361 
°135
;

2362 } i‡–(*
p
) > 70 ) {

2363 i‡–97 <(*
p
) && (*p) <= 102 )

2364 
°135
;

2366 
°135
;

2367 
°0
;

2368 
°135
:

2369 i‡–++
p
 =
≥
 )

2370 
_ã°_eof135
;

2372  (*
p
) ) {

2373 58: 
°80
;

2374 93: 
°61
;

2376 
°0
;

2377 
°136
:

2378 i‡–++
p
 =
≥
 )

2379 
_ã°_eof136
;

2381  (*
p
) ) {

2382 46: 
°55
;

2383 58: 
°80
;

2384 93: 
°61
;

2386 i‡–(*
p
) < 65 ) {

2387 i‡–48 <(*
p
) && (*p) <= 57 )

2388 
°137
;

2389 } i‡–(*
p
) > 70 ) {

2390 i‡–97 <(*
p
) && (*p) <= 102 )

2391 
°133
;

2393 
°133
;

2394 
°0
;

2395 
°137
:

2396 i‡–++
p
 =
≥
 )

2397 
_ã°_eof137
;

2399  (*
p
) ) {

2400 46: 
°55
;

2401 58: 
°80
;

2402 93: 
°61
;

2404 i‡–(*
p
) < 65 ) {

2405 i‡–48 <(*
p
) && (*p) <= 57 )

2406 
°138
;

2407 } i‡–(*
p
) > 70 ) {

2408 i‡–97 <(*
p
) && (*p) <= 102 )

2409 
°134
;

2411 
°134
;

2412 
°0
;

2413 
°138
:

2414 i‡–++
p
 =
≥
 )

2415 
_ã°_eof138
;

2417  (*
p
) ) {

2418 46: 
°55
;

2419 58: 
°80
;

2420 93: 
°61
;

2422 i‡–(*
p
) < 65 ) {

2423 i‡–48 <(*
p
) && (*p) <= 57 )

2424 
°135
;

2425 } i‡–(*
p
) > 70 ) {

2426 i‡–97 <(*
p
) && (*p) <= 102 )

2427 
°135
;

2429 
°135
;

2430 
°0
;

2431 
°139
:

2432 i‡–++
p
 =
≥
 )

2433 
_ã°_eof139
;

2435  (*
p
) ) {

2436 46: 
°55
;

2437 48: 
°140
;

2438 53: 
°141
;

2439 58: 
°80
;

2440 93: 
°61
;

2442 i‡–(*
p
) < 65 ) {

2443 i‡–49 <(*
p
) && (*p) <= 57 )

2444 
°133
;

2445 } i‡–(*
p
) > 70 ) {

2446 i‡–97 <(*
p
) && (*p) <= 102 )

2447 
°133
;

2449 
°133
;

2450 
°0
;

2451 
°140
:

2452 i‡–++
p
 =
≥
 )

2453 
_ã°_eof140
;

2455  (*
p
) ) {

2456 58: 
°80
;

2457 93: 
°61
;

2459 i‡–(*
p
) < 65 ) {

2460 i‡–48 <(*
p
) && (*p) <= 57 )

2461 
°138
;

2462 } i‡–(*
p
) > 70 ) {

2463 i‡–97 <(*
p
) && (*p) <= 102 )

2464 
°134
;

2466 
°134
;

2467 
°0
;

2468 
°141
:

2469 i‡–++
p
 =
≥
 )

2470 
_ã°_eof141
;

2472  (*
p
) ) {

2473 48: 
°138
;

2474 58: 
°80
;

2475 93: 
°61
;

2477 i‡–(*
p
) < 65 ) {

2478 i‡–49 <(*
p
) && (*p) <= 57 )

2479 
°134
;

2480 } i‡–(*
p
) > 70 ) {

2481 i‡–97 <(*
p
) && (*p) <= 102 )

2482 
°134
;

2484 
°134
;

2485 
°0
;

2486 
°142
:

2487 i‡–++
p
 =
≥
 )

2488 
_ã°_eof142
;

2490  (*
p
) ) {

2491 58: 
°80
;

2492 93: 
°61
;

2494 i‡–(*
p
) < 65 ) {

2495 i‡–48 <(*
p
) && (*p) <= 57 )

2496 
°133
;

2497 } i‡–(*
p
) > 70 ) {

2498 i‡–97 <(*
p
) && (*p) <= 102 )

2499 
°133
;

2501 
°133
;

2502 
°0
;

2503 
°143
:

2504 i‡–++
p
 =
≥
 )

2505 
_ã°_eof143
;

2507  (*
p
) ) {

2508 46: 
°55
;

2509 58: 
°131
;

2510 93: 
°61
;

2512 i‡–(*
p
) < 65 ) {

2513 i‡–48 <(*
p
) && (*p) <= 57 )

2514 
°144
;

2515 } i‡–(*
p
) > 70 ) {

2516 i‡–97 <(*
p
) && (*p) <= 102 )

2517 
°128
;

2519 
°128
;

2520 
°0
;

2521 
°144
:

2522 i‡–++
p
 =
≥
 )

2523 
_ã°_eof144
;

2525  (*
p
) ) {

2526 46: 
°55
;

2527 58: 
°131
;

2528 93: 
°61
;

2530 i‡–(*
p
) < 65 ) {

2531 i‡–48 <(*
p
) && (*p) <= 57 )

2532 
°145
;

2533 } i‡–(*
p
) > 70 ) {

2534 i‡–97 <(*
p
) && (*p) <= 102 )

2535 
°129
;

2537 
°129
;

2538 
°0
;

2539 
°145
:

2540 i‡–++
p
 =
≥
 )

2541 
_ã°_eof145
;

2543  (*
p
) ) {

2544 46: 
°55
;

2545 58: 
°131
;

2546 93: 
°61
;

2548 i‡–(*
p
) < 65 ) {

2549 i‡–48 <(*
p
) && (*p) <= 57 )

2550 
°130
;

2551 } i‡–(*
p
) > 70 ) {

2552 i‡–97 <(*
p
) && (*p) <= 102 )

2553 
°130
;

2555 
°130
;

2556 
°0
;

2557 
°146
:

2558 i‡–++
p
 =
≥
 )

2559 
_ã°_eof146
;

2561  (*
p
) ) {

2562 46: 
°55
;

2563 48: 
°147
;

2564 53: 
°148
;

2565 58: 
°131
;

2566 93: 
°61
;

2568 i‡–(*
p
) < 65 ) {

2569 i‡–49 <(*
p
) && (*p) <= 57 )

2570 
°128
;

2571 } i‡–(*
p
) > 70 ) {

2572 i‡–97 <(*
p
) && (*p) <= 102 )

2573 
°128
;

2575 
°128
;

2576 
°0
;

2577 
°147
:

2578 i‡–++
p
 =
≥
 )

2579 
_ã°_eof147
;

2581  (*
p
) ) {

2582 58: 
°131
;

2583 93: 
°61
;

2585 i‡–(*
p
) < 65 ) {

2586 i‡–48 <(*
p
) && (*p) <= 57 )

2587 
°145
;

2588 } i‡–(*
p
) > 70 ) {

2589 i‡–97 <(*
p
) && (*p) <= 102 )

2590 
°129
;

2592 
°129
;

2593 
°0
;

2594 
°148
:

2595 i‡–++
p
 =
≥
 )

2596 
_ã°_eof148
;

2598  (*
p
) ) {

2599 48: 
°145
;

2600 58: 
°131
;

2601 93: 
°61
;

2603 i‡–(*
p
) < 65 ) {

2604 i‡–49 <(*
p
) && (*p) <= 57 )

2605 
°129
;

2606 } i‡–(*
p
) > 70 ) {

2607 i‡–97 <(*
p
) && (*p) <= 102 )

2608 
°129
;

2610 
°129
;

2611 
°0
;

2612 
°149
:

2613 i‡–++
p
 =
≥
 )

2614 
_ã°_eof149
;

2616  (*
p
) ) {

2617 58: 
°131
;

2618 93: 
°61
;

2620 i‡–(*
p
) < 65 ) {

2621 i‡–48 <(*
p
) && (*p) <= 57 )

2622 
°128
;

2623 } i‡–(*
p
) > 70 ) {

2624 i‡–97 <(*
p
) && (*p) <= 102 )

2625 
°128
;

2627 
°128
;

2628 
°0
;

2629 
°150
:

2630 i‡–++
p
 =
≥
 )

2631 
_ã°_eof150
;

2633  (*
p
) ) {

2634 49: 
°143
;

2635 50: 
°146
;

2637 i‡–(*
p
) < 48 ) {

2638 i‡–2 <(*
p
) && (*p) <= 3 )

2639 
°48
;

2640 } i‡–(*
p
) > 57 ) {

2641 i‡–(*
p
) > 70 ) {

2642 i‡–97 <(*
p
) && (*p) <= 102 )

2643 
°149
;

2644 } i‡–(*
p
) >= 65 )

2645 
°149
;

2647 
°127
;

2648 
°0
;

2649 
°151
:

2650 i‡–++
p
 =
≥
 )

2651 
_ã°_eof151
;

2653  (*
p
) ) {

2654 49: 
°156
;

2655 50: 
°159
;

2657 i‡–(*
p
) < 48 ) {

2658 i‡–2 <(*
p
) && (*p) <= 3 )

2659 
°48
;

2660 } i‡–(*
p
) > 57 ) {

2661 i‡–(*
p
) > 70 ) {

2662 i‡–97 <(*
p
) && (*p) <= 102 )

2663 
°162
;

2664 } i‡–(*
p
) >= 65 )

2665 
°162
;

2667 
°152
;

2668 
°0
;

2669 
°152
:

2670 i‡–++
p
 =
≥
 )

2671 
_ã°_eof152
;

2673  (*
p
) ) {

2674 46: 
°55
;

2675 58: 
°131
;

2677 i‡–(*
p
) < 65 ) {

2678 i‡–48 <(*
p
) && (*p) <= 57 )

2679 
°153
;

2680 } i‡–(*
p
) > 70 ) {

2681 i‡–97 <(*
p
) && (*p) <= 102 )

2682 
°153
;

2684 
°153
;

2685 
°0
;

2686 
°153
:

2687 i‡–++
p
 =
≥
 )

2688 
_ã°_eof153
;

2690 i‡–(*
p
) == 58 )

2691 
°131
;

2692 i‡–(*
p
) < 65 ) {

2693 i‡–48 <(*
p
) && (*p) <= 57 )

2694 
°154
;

2695 } i‡–(*
p
) > 70 ) {

2696 i‡–97 <(*
p
) && (*p) <= 102 )

2697 
°154
;

2699 
°154
;

2700 
°0
;

2701 
°154
:

2702 i‡–++
p
 =
≥
 )

2703 
_ã°_eof154
;

2705 i‡–(*
p
) == 58 )

2706 
°131
;

2707 i‡–(*
p
) < 65 ) {

2708 i‡–48 <(*
p
) && (*p) <= 57 )

2709 
°155
;

2710 } i‡–(*
p
) > 70 ) {

2711 i‡–97 <(*
p
) && (*p) <= 102 )

2712 
°155
;

2714 
°155
;

2715 
°0
;

2716 
°155
:

2717 i‡–++
p
 =
≥
 )

2718 
_ã°_eof155
;

2720 i‡–(*
p
) == 58 )

2721 
°131
;

2722 
°0
;

2723 
°156
:

2724 i‡–++
p
 =
≥
 )

2725 
_ã°_eof156
;

2727  (*
p
) ) {

2728 46: 
°55
;

2729 58: 
°131
;

2731 i‡–(*
p
) < 65 ) {

2732 i‡–48 <(*
p
) && (*p) <= 57 )

2733 
°157
;

2734 } i‡–(*
p
) > 70 ) {

2735 i‡–97 <(*
p
) && (*p) <= 102 )

2736 
°153
;

2738 
°153
;

2739 
°0
;

2740 
°157
:

2741 i‡–++
p
 =
≥
 )

2742 
_ã°_eof157
;

2744  (*
p
) ) {

2745 46: 
°55
;

2746 58: 
°131
;

2748 i‡–(*
p
) < 65 ) {

2749 i‡–48 <(*
p
) && (*p) <= 57 )

2750 
°158
;

2751 } i‡–(*
p
) > 70 ) {

2752 i‡–97 <(*
p
) && (*p) <= 102 )

2753 
°154
;

2755 
°154
;

2756 
°0
;

2757 
°158
:

2758 i‡–++
p
 =
≥
 )

2759 
_ã°_eof158
;

2761  (*
p
) ) {

2762 46: 
°55
;

2763 58: 
°131
;

2765 i‡–(*
p
) < 65 ) {

2766 i‡–48 <(*
p
) && (*p) <= 57 )

2767 
°155
;

2768 } i‡–(*
p
) > 70 ) {

2769 i‡–97 <(*
p
) && (*p) <= 102 )

2770 
°155
;

2772 
°155
;

2773 
°0
;

2774 
°159
:

2775 i‡–++
p
 =
≥
 )

2776 
_ã°_eof159
;

2778  (*
p
) ) {

2779 46: 
°55
;

2780 48: 
°160
;

2781 53: 
°161
;

2782 58: 
°131
;

2784 i‡–(*
p
) < 65 ) {

2785 i‡–49 <(*
p
) && (*p) <= 57 )

2786 
°153
;

2787 } i‡–(*
p
) > 70 ) {

2788 i‡–97 <(*
p
) && (*p) <= 102 )

2789 
°153
;

2791 
°153
;

2792 
°0
;

2793 
°160
:

2794 i‡–++
p
 =
≥
 )

2795 
_ã°_eof160
;

2797 i‡–(*
p
) == 58 )

2798 
°131
;

2799 i‡–(*
p
) < 65 ) {

2800 i‡–48 <(*
p
) && (*p) <= 57 )

2801 
°158
;

2802 } i‡–(*
p
) > 70 ) {

2803 i‡–97 <(*
p
) && (*p) <= 102 )

2804 
°154
;

2806 
°154
;

2807 
°0
;

2808 
°161
:

2809 i‡–++
p
 =
≥
 )

2810 
_ã°_eof161
;

2812  (*
p
) ) {

2813 48: 
°158
;

2814 58: 
°131
;

2816 i‡–(*
p
) < 65 ) {

2817 i‡–49 <(*
p
) && (*p) <= 57 )

2818 
°154
;

2819 } i‡–(*
p
) > 70 ) {

2820 i‡–97 <(*
p
) && (*p) <= 102 )

2821 
°154
;

2823 
°154
;

2824 
°0
;

2825 
°162
:

2826 i‡–++
p
 =
≥
 )

2827 
_ã°_eof162
;

2829 i‡–(*
p
) == 58 )

2830 
°131
;

2831 i‡–(*
p
) < 65 ) {

2832 i‡–48 <(*
p
) && (*p) <= 57 )

2833 
°153
;

2834 } i‡–(*
p
) > 70 ) {

2835 i‡–97 <(*
p
) && (*p) <= 102 )

2836 
°153
;

2838 
°153
;

2839 
°0
;

2840 
°163
:

2841 i‡–++
p
 =
≥
 )

2842 
_ã°_eof163
;

2844 i‡–(*
p
) < 48 ) {

2845 i‡–2 <(*
p
) && (*p) <= 3 )

2846 
°48
;

2847 } i‡–(*
p
) > 57 ) {

2848 i‡–(*
p
) > 70 ) {

2849 i‡–97 <(*
p
) && (*p) <= 102 )

2850 
°49
;

2851 } i‡–(*
p
) >= 65 )

2852 
°49
;

2854 
°49
;

2855 
°0
;

2856 
°164
:

2857 i‡–++
p
 =
≥
 )

2858 
_ã°_eof164
;

2860 i‡–2 <(*
p
) && (*p) <= 3 )

2861 
°48
;

2862 
°0
;

2863 
°165
:

2864 i‡–++
p
 =
≥
 )

2865 
_ã°_eof165
;

2867 i‡–(*
p
) == 3 )

2868 
°48
;

2869 
°0
;

2870 
°166
:

2871 i‡–++
p
 =
≥
 )

2872 
_ã°_eof166
;

2874 i‡–(*
p
) == 4 )

2875 
°48
;

2876 
°0
;

2877 
°167
:

2878 i‡–++
p
 =
≥
 )

2879 
_ã°_eof167
;

2881 i‡–(*
p
) == 58 )

2882 
°168
;

2883 
°0
;

2884 
°168
:

2885 i‡–++
p
 =
≥
 )

2886 
_ã°_eof168
;

2888  (*
p
) ) {

2889 49: 
°143
;

2890 50: 
°146
;

2891 93: 
°61
;

2893 i‡–(*
p
) < 48 ) {

2894 i‡–2 <(*
p
) && (*p) <= 5 )

2895 
°48
;

2896 } i‡–(*
p
) > 57 ) {

2897 i‡–(*
p
) > 70 ) {

2898 i‡–97 <(*
p
) && (*p) <= 102 )

2899 
°149
;

2900 } i‡–(*
p
) >= 65 )

2901 
°149
;

2903 
°127
;

2904 
°0
;

2905 
°169
:

2906 i‡–++
p
 =
≥
 )

2907 
_ã°_eof169
;

2909 i‡–(*
p
) < 65 ) {

2910 i‡–48 <(*
p
) && (*p) <= 57 )

2911 
°170
;

2912 } i‡–(*
p
) > 70 ) {

2913 i‡–97 <(*
p
) && (*p) <= 102 )

2914 
°170
;

2916 
°170
;

2917 
°0
;

2918 
°170
:

2919 i‡–++
p
 =
≥
 )

2920 
_ã°_eof170
;

2922 i‡–(*
p
) == 46 )

2923 
°171
;

2924 i‡–(*
p
) < 65 ) {

2925 i‡–48 <(*
p
) && (*p) <= 57 )

2926 
°170
;

2927 } i‡–(*
p
) > 70 ) {

2928 i‡–97 <(*
p
) && (*p) <= 102 )

2929 
°170
;

2931 
°170
;

2932 
°0
;

2933 
°171
:

2934 i‡–++
p
 =
≥
 )

2935 
_ã°_eof171
;

2937  (*
p
) ) {

2938 33: 
°172
;

2939 36: 
°172
;

2940 61: 
°172
;

2941 95: 
°172
;

2942 126: 
°172
;

2944 i‡–(*
p
) < 48 ) {

2945 i‡–38 <(*
p
) && (*p) <= 46 )

2946 
°172
;

2947 } i‡–(*
p
) > 59 ) {

2948 i‡–(*
p
) > 90 ) {

2949 i‡–97 <(*
p
) && (*p) <= 122 )

2950 
°172
;

2951 } i‡–(*
p
) >= 65 )

2952 
°172
;

2954 
°172
;

2955 
°0
;

2956 
°172
:

2957 i‡–++
p
 =
≥
 )

2958 
_ã°_eof172
;

2960  (*
p
) ) {

2961 33: 
°172
;

2962 36: 
°172
;

2963 61: 
°172
;

2964 93: 
°61
;

2965 95: 
°172
;

2966 126: 
°172
;

2968 i‡–(*
p
) < 48 ) {

2969 i‡–38 <(*
p
) && (*p) <= 46 )

2970 
°172
;

2971 } i‡–(*
p
) > 59 ) {

2972 i‡–(*
p
) > 90 ) {

2973 i‡–97 <(*
p
) && (*p) <= 122 )

2974 
°172
;

2975 } i‡–(*
p
) >= 65 )

2976 
°172
;

2978 
°172
;

2979 
°0
;

2980 
å12
:

2982 {
	`MARK
(
m¨k
, 
p
); }

2983 
°173
;

2984 
°173
:

2985 i‡–++
p
 =
≥
 )

2986 
_ã°_eof173
;

2989  (*
p
) ) {

2990 32: 
å37
;

2991 33: 
°19
;

2992 35: 
å39
;

2993 37: 
°24
;

2994 43: 
°173
;

2995 47: 
°26
;

2996 58: 
°174
;

2997 59: 
°19
;

2998 61: 
°19
;

2999 63: 
å42
;

3000 64: 
°19
;

3001 95: 
°19
;

3002 126: 
°19
;

3004 i‡–(*
p
) < 45 ) {

3005 i‡–36 <(*
p
) && (*p) <= 44 )

3006 
°19
;

3007 } i‡–(*
p
) > 57 ) {

3008 i‡–(*
p
) > 90 ) {

3009 i‡–97 <(*
p
) && (*p) <= 122 )

3010 
°173
;

3011 } i‡–(*
p
) >= 65 )

3012 
°173
;

3014 
°173
;

3015 
°0
;

3016 
°174
:

3017 i‡–++
p
 =
≥
 )

3018 
_ã°_eof174
;

3020  (*
p
) ) {

3021 32: 
å6
;

3022 33: 
å203
;

3023 35: 
å8
;

3024 37: 
å204
;

3025 47: 
å10
;

3026 61: 
å203
;

3027 63: 
å11
;

3028 95: 
å203
;

3029 126: 
å203
;

3031 i‡–(*
p
) < 64 ) {

3032 i‡–36 <(*
p
) && (*p) <= 59 )

3033 
å203
;

3034 } i‡–(*
p
) > 90 ) {

3035 i‡–97 <(*
p
) && (*p) <= 122 )

3036 
å203
;

3038 
å203
;

3039 
°0
;

3040 
°175
:

3041 i‡–++
p
 =
≥
 )

3042 
_ã°_eof175
;

3044 i‡–(*
p
) == 32 )

3045 
å4
;

3046 i‡–(*
p
) > 57 ) {

3047 i‡–65 <(*
p
) && (*p) <= 90 )

3048 
°176
;

3049 } i‡–(*
p
) >= 48 )

3050 
°176
;

3051 
°0
;

3052 
°176
:

3053 i‡–++
p
 =
≥
 )

3054 
_ã°_eof176
;

3056 i‡–(*
p
) == 32 )

3057 
å4
;

3058 i‡–(*
p
) > 57 ) {

3059 i‡–65 <(*
p
) && (*p) <= 90 )

3060 
°177
;

3061 } i‡–(*
p
) >= 48 )

3062 
°177
;

3063 
°0
;

3064 
°177
:

3065 i‡–++
p
 =
≥
 )

3066 
_ã°_eof177
;

3068 i‡–(*
p
) == 32 )

3069 
å4
;

3070 i‡–(*
p
) > 57 ) {

3071 i‡–65 <(*
p
) && (*p) <= 90 )

3072 
°178
;

3073 } i‡–(*
p
) >= 48 )

3074 
°178
;

3075 
°0
;

3076 
°178
:

3077 i‡–++
p
 =
≥
 )

3078 
_ã°_eof178
;

3080 i‡–(*
p
) == 32 )

3081 
å4
;

3082 i‡–(*
p
) > 57 ) {

3083 i‡–65 <(*
p
) && (*p) <= 90 )

3084 
°179
;

3085 } i‡–(*
p
) >= 48 )

3086 
°179
;

3087 
°0
;

3088 
°179
:

3089 i‡–++
p
 =
≥
 )

3090 
_ã°_eof179
;

3092 i‡–(*
p
) == 32 )

3093 
å4
;

3094 i‡–(*
p
) > 57 ) {

3095 i‡–65 <(*
p
) && (*p) <= 90 )

3096 
°180
;

3097 } i‡–(*
p
) >= 48 )

3098 
°180
;

3099 
°0
;

3100 
°180
:

3101 i‡–++
p
 =
≥
 )

3102 
_ã°_eof180
;

3104 i‡–(*
p
) == 32 )

3105 
å4
;

3106 i‡–(*
p
) > 57 ) {

3107 i‡–65 <(*
p
) && (*p) <= 90 )

3108 
°181
;

3109 } i‡–(*
p
) >= 48 )

3110 
°181
;

3111 
°0
;

3112 
°181
:

3113 i‡–++
p
 =
≥
 )

3114 
_ã°_eof181
;

3116 i‡–(*
p
) == 32 )

3117 
å4
;

3118 i‡–(*
p
) > 57 ) {

3119 i‡–65 <(*
p
) && (*p) <= 90 )

3120 
°182
;

3121 } i‡–(*
p
) >= 48 )

3122 
°182
;

3123 
°0
;

3124 
°182
:

3125 i‡–++
p
 =
≥
 )

3126 
_ã°_eof182
;

3128 i‡–(*
p
) == 32 )

3129 
å4
;

3130 i‡–(*
p
) > 57 ) {

3131 i‡–65 <(*
p
) && (*p) <= 90 )

3132 
°183
;

3133 } i‡–(*
p
) >= 48 )

3134 
°183
;

3135 
°0
;

3136 
°183
:

3137 i‡–++
p
 =
≥
 )

3138 
_ã°_eof183
;

3140 i‡–(*
p
) == 32 )

3141 
å4
;

3142 i‡–(*
p
) > 57 ) {

3143 i‡–65 <(*
p
) && (*p) <= 90 )

3144 
°184
;

3145 } i‡–(*
p
) >= 48 )

3146 
°184
;

3147 
°0
;

3148 
°184
:

3149 i‡–++
p
 =
≥
 )

3150 
_ã°_eof184
;

3152 i‡–(*
p
) == 32 )

3153 
å4
;

3154 i‡–(*
p
) > 57 ) {

3155 i‡–65 <(*
p
) && (*p) <= 90 )

3156 
°185
;

3157 } i‡–(*
p
) >= 48 )

3158 
°185
;

3159 
°0
;

3160 
°185
:

3161 i‡–++
p
 =
≥
 )

3162 
_ã°_eof185
;

3164 i‡–(*
p
) == 32 )

3165 
å4
;

3166 i‡–(*
p
) > 57 ) {

3167 i‡–65 <(*
p
) && (*p) <= 90 )

3168 
°186
;

3169 } i‡–(*
p
) >= 48 )

3170 
°186
;

3171 
°0
;

3172 
°186
:

3173 i‡–++
p
 =
≥
 )

3174 
_ã°_eof186
;

3176 i‡–(*
p
) == 32 )

3177 
å4
;

3178 i‡–(*
p
) > 57 ) {

3179 i‡–65 <(*
p
) && (*p) <= 90 )

3180 
°187
;

3181 } i‡–(*
p
) >= 48 )

3182 
°187
;

3183 
°0
;

3184 
°187
:

3185 i‡–++
p
 =
≥
 )

3186 
_ã°_eof187
;

3188 i‡–(*
p
) == 32 )

3189 
å4
;

3190 i‡–(*
p
) > 57 ) {

3191 i‡–65 <(*
p
) && (*p) <= 90 )

3192 
°188
;

3193 } i‡–(*
p
) >= 48 )

3194 
°188
;

3195 
°0
;

3196 
°188
:

3197 i‡–++
p
 =
≥
 )

3198 
_ã°_eof188
;

3200 i‡–(*
p
) == 32 )

3201 
å4
;

3202 i‡–(*
p
) > 57 ) {

3203 i‡–65 <(*
p
) && (*p) <= 90 )

3204 
°189
;

3205 } i‡–(*
p
) >= 48 )

3206 
°189
;

3207 
°0
;

3208 
°189
:

3209 i‡–++
p
 =
≥
 )

3210 
_ã°_eof189
;

3212 i‡–(*
p
) == 32 )

3213 
å4
;

3214 i‡–(*
p
) > 57 ) {

3215 i‡–65 <(*
p
) && (*p) <= 90 )

3216 
°190
;

3217 } i‡–(*
p
) >= 48 )

3218 
°190
;

3219 
°0
;

3220 
°190
:

3221 i‡–++
p
 =
≥
 )

3222 
_ã°_eof190
;

3224 i‡–(*
p
) == 32 )

3225 
å4
;

3226 i‡–(*
p
) > 57 ) {

3227 i‡–65 <(*
p
) && (*p) <= 90 )

3228 
°191
;

3229 } i‡–(*
p
) >= 48 )

3230 
°191
;

3231 
°0
;

3232 
°191
:

3233 i‡–++
p
 =
≥
 )

3234 
_ã°_eof191
;

3236 i‡–(*
p
) == 32 )

3237 
å4
;

3238 i‡–(*
p
) > 57 ) {

3239 i‡–65 <(*
p
) && (*p) <= 90 )

3240 
°192
;

3241 } i‡–(*
p
) >= 48 )

3242 
°192
;

3243 
°0
;

3244 
°192
:

3245 i‡–++
p
 =
≥
 )

3246 
_ã°_eof192
;

3248 i‡–(*
p
) == 32 )

3249 
å4
;

3250 i‡–(*
p
) > 57 ) {

3251 i‡–65 <(*
p
) && (*p) <= 90 )

3252 
°193
;

3253 } i‡–(*
p
) >= 48 )

3254 
°193
;

3255 
°0
;

3256 
°193
:

3257 i‡–++
p
 =
≥
 )

3258 
_ã°_eof193
;

3260 i‡–(*
p
) == 32 )

3261 
å4
;

3262 
°0
;

3263 
å2
:

3265 {
	`MARK
(
m¨k
, 
p
); }

3266 
°194
;

3267 
°194
:

3268 i‡–++
p
 =
≥
 )

3269 
_ã°_eof194
;

3272 i‡–(*
p
) < 48 ) {

3273 i‡–45 <(*
p
) && (*p) <= 46 )

3274 
°195
;

3275 } i‡–(*
p
) > 57 ) {

3276 i‡–(*
p
) > 90 ) {

3277 i‡–97 <(*
p
) && (*p) <= 122 )

3278 
°195
;

3279 } i‡–(*
p
) >= 65 )

3280 
°195
;

3282 
°195
;

3283 
°0
;

3284 
°195
:

3285 i‡–++
p
 =
≥
 )

3286 
_ã°_eof195
;

3288  (*
p
) ) {

3289 32: 
å224
;

3290 47: 
å224
;

3291 62: 
å224
;

3293 i‡–(*
p
) < 45 ) {

3294 i‡–9 <(*
p
) && (*p) <= 13 )

3295 
å224
;

3296 } i‡–(*
p
) > 57 ) {

3297 i‡–(*
p
) > 90 ) {

3298 i‡–97 <(*
p
) && (*p) <= 122 )

3299 
°195
;

3300 } i‡–(*
p
) >= 65 )

3301 
°195
;

3303 
°195
;

3304 
°0
;

3305 
å224
:

3308 if(
∑r£r
->
ªque°_∑th
 !
NULL
)

3309 
∑r£r
->
	`ªque°_∑th
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k,
p
));

3311 
°196
;

3312 
°196
:

3313 i‡–++
p
 =
≥
 )

3314 
_ã°_eof196
;

3317 i‡–(*
p
) == 62 )

3318 
°197
;

3319 
°196
;

3320 
°197
:

3321 i‡–++
p
 =
≥
 )

3322 
_ã°_eof197
;

3324  (*
p
) ) {

3325 0: 
å227
;

3326 62: 
°197
;

3328 
°196
;

3329 
å227
:

3332 
∑r£r
->
xml_£¡
 = 1;

3336 if(
∑r£r
->
xml_£¡
 ||Ö¨£r->
js⁄_£¡
) {

3337 
∑r£r
->
body_°¨t
 = 
	`PTR_TO
(
m¨k
Ë- 
buf„r
;

3339 
∑r£r
->
c⁄ã¡_Àn
 = 
p
 - 
buf„r
 -Ö¨£r->
body_°¨t
 + 1;

3341 
∑r£r
->
body_°¨t
 = 
p
 - 
buf„r
 + 1;

3343 if(
∑r£r
->
hódî_d⁄e
 !
NULL
) {

3344 
∑r£r
->
	`hódî_d⁄e
’¨£r->
d©a
, 
p
 + 1, 
≥
 -Ö - 1);

3347 {
p
++; 
cs
 = 349; 
_out
;}

3349 
°349
;

3350 
å235
:

3353 
∑r£r
->
js⁄_£¡
 = 1;

3357 if(
∑r£r
->
xml_£¡
 ||Ö¨£r->
js⁄_£¡
) {

3358 
∑r£r
->
body_°¨t
 = 
	`PTR_TO
(
m¨k
Ë- 
buf„r
;

3360 
∑r£r
->
c⁄ã¡_Àn
 = 
p
 - 
buf„r
 -Ö¨£r->
body_°¨t
 + 1;

3362 
∑r£r
->
body_°¨t
 = 
p
 - 
buf„r
 + 1;

3364 if(
∑r£r
->
hódî_d⁄e
 !
NULL
) {

3365 
∑r£r
->
	`hódî_d⁄e
’¨£r->
d©a
, 
p
 + 1, 
≥
 -Ö - 1);

3368 {
p
++; 
cs
 = 349; 
_out
;}

3370 
°349
;

3371 
°349
:

3372 i‡–++
p
 =
≥
 )

3373 
_ã°_eof349
;

3376 
°0
;

3377 
å3
:

3379 {
	`MARK
(
m¨k
, 
p
); }

3380 
°198
;

3381 
°198
:

3382 i‡–++
p
 =
≥
 )

3383 
_ã°_eof198
;

3386  (*
p
) ) {

3387 32: 
å228
;

3388 33: 
°202
;

3389 37: 
°203
;

3390 47: 
°208
;

3391 59: 
°202
;

3392 61: 
°202
;

3393 95: 
°202
;

3394 126: 
°202
;

3396 i‡–(*
p
) < 64 ) {

3397 i‡–36 <(*
p
) && (*p) <= 57 )

3398 
°202
;

3399 } i‡–(*
p
) > 90 ) {

3400 i‡–97 <(*
p
) && (*p) <= 122 )

3401 
°202
;

3403 
°202
;

3404 
°0
;

3405 
å228
:

3408 if(
∑r£r
->
ªque°_∑th
 !
NULL
)

3409 
∑r£r
->
	`ªque°_∑th
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k,
p
));

3411 
°199
;

3412 
°199
:

3413 i‡–++
p
 =
≥
 )

3414 
_ã°_eof199
;

3417 i‡–(*
p
) == 123 )

3418 
å232
;

3419 
°0
;

3420 
å232
:

3422 {
	`MARK
(
m¨k
, 
p
); }

3423 
°200
;

3424 
°200
:

3425 i‡–++
p
 =
≥
 )

3426 
_ã°_eof200
;

3429 i‡–(*
p
) == 125 )

3430 
°201
;

3431 
°200
;

3432 
°201
:

3433 i‡–++
p
 =
≥
 )

3434 
_ã°_eof201
;

3436  (*
p
) ) {

3437 0: 
å235
;

3438 125: 
°201
;

3440 
°200
;

3441 
°202
:

3442 i‡–++
p
 =
≥
 )

3443 
_ã°_eof202
;

3445  (*
p
) ) {

3446 32: 
å228
;

3447 33: 
°202
;

3448 37: 
°203
;

3449 47: 
°205
;

3450 59: 
°202
;

3451 61: 
°202
;

3452 95: 
°202
;

3453 126: 
°202
;

3455 i‡–(*
p
) < 64 ) {

3456 i‡–36 <(*
p
) && (*p) <= 57 )

3457 
°202
;

3458 } i‡–(*
p
) > 90 ) {

3459 i‡–97 <(*
p
) && (*p) <= 122 )

3460 
°202
;

3462 
°202
;

3463 
°0
;

3464 
°203
:

3465 i‡–++
p
 =
≥
 )

3466 
_ã°_eof203
;

3468 i‡–(*
p
) < 65 ) {

3469 i‡–48 <(*
p
) && (*p) <= 57 )

3470 
°204
;

3471 } i‡–(*
p
) > 70 ) {

3472 i‡–97 <(*
p
) && (*p) <= 102 )

3473 
°204
;

3475 
°204
;

3476 
°0
;

3477 
°204
:

3478 i‡–++
p
 =
≥
 )

3479 
_ã°_eof204
;

3481 i‡–(*
p
) < 65 ) {

3482 i‡–48 <(*
p
) && (*p) <= 57 )

3483 
°202
;

3484 } i‡–(*
p
) > 70 ) {

3485 i‡–97 <(*
p
) && (*p) <= 102 )

3486 
°202
;

3488 
°202
;

3489 
°0
;

3490 
°205
:

3491 i‡–++
p
 =
≥
 )

3492 
_ã°_eof205
;

3494  (*
p
) ) {

3495 32: 
å228
;

3496 33: 
°205
;

3497 37: 
°206
;

3498 61: 
°205
;

3499 95: 
°205
;

3500 126: 
°205
;

3502 i‡–(*
p
) < 64 ) {

3503 i‡–36 <(*
p
) && (*p) <= 59 )

3504 
°205
;

3505 } i‡–(*
p
) > 90 ) {

3506 i‡–97 <(*
p
) && (*p) <= 122 )

3507 
°205
;

3509 
°205
;

3510 
°0
;

3511 
°206
:

3512 i‡–++
p
 =
≥
 )

3513 
_ã°_eof206
;

3515 i‡–(*
p
) < 65 ) {

3516 i‡–48 <(*
p
) && (*p) <= 57 )

3517 
°207
;

3518 } i‡–(*
p
) > 70 ) {

3519 i‡–97 <(*
p
) && (*p) <= 102 )

3520 
°207
;

3522 
°207
;

3523 
°0
;

3524 
°207
:

3525 i‡–++
p
 =
≥
 )

3526 
_ã°_eof207
;

3528 i‡–(*
p
) < 65 ) {

3529 i‡–48 <(*
p
) && (*p) <= 57 )

3530 
°205
;

3531 } i‡–(*
p
) > 70 ) {

3532 i‡–97 <(*
p
) && (*p) <= 102 )

3533 
°205
;

3535 
°205
;

3536 
°0
;

3537 
°208
:

3538 i‡–++
p
 =
≥
 )

3539 
_ã°_eof208
;

3541  (*
p
) ) {

3542 32: 
å228
;

3543 33: 
°205
;

3544 37: 
°206
;

3545 47: 
°209
;

3546 61: 
°205
;

3547 95: 
°205
;

3548 126: 
°205
;

3550 i‡–(*
p
) < 64 ) {

3551 i‡–36 <(*
p
) && (*p) <= 59 )

3552 
°205
;

3553 } i‡–(*
p
) > 90 ) {

3554 i‡–97 <(*
p
) && (*p) <= 122 )

3555 
°205
;

3557 
°205
;

3558 
°0
;

3559 
°209
:

3560 i‡–++
p
 =
≥
 )

3561 
_ã°_eof209
;

3563  (*
p
) ) {

3564 32: 
å228
;

3565 33: 
°210
;

3566 37: 
°211
;

3567 47: 
°205
;

3568 58: 
°213
;

3569 61: 
°210
;

3570 64: 
°217
;

3571 91: 
°222
;

3572 95: 
°210
;

3573 126: 
°210
;

3575 i‡–(*
p
) < 65 ) {

3576 i‡–36 <(*
p
) && (*p) <= 59 )

3577 
°210
;

3578 } i‡–(*
p
) > 90 ) {

3579 i‡–97 <(*
p
) && (*p) <= 122 )

3580 
°210
;

3582 
°210
;

3583 
°0
;

3584 
°210
:

3585 i‡–++
p
 =
≥
 )

3586 
_ã°_eof210
;

3588  (*
p
) ) {

3589 32: 
å228
;

3590 33: 
°210
;

3591 37: 
°211
;

3592 47: 
°205
;

3593 58: 
°213
;

3594 61: 
°210
;

3595 64: 
°217
;

3596 95: 
°210
;

3597 126: 
°210
;

3599 i‡–(*
p
) < 65 ) {

3600 i‡–36 <(*
p
) && (*p) <= 59 )

3601 
°210
;

3602 } i‡–(*
p
) > 90 ) {

3603 i‡–97 <(*
p
) && (*p) <= 122 )

3604 
°210
;

3606 
°210
;

3607 
°0
;

3608 
°211
:

3609 i‡–++
p
 =
≥
 )

3610 
_ã°_eof211
;

3612 i‡–(*
p
) < 65 ) {

3613 i‡–48 <(*
p
) && (*p) <= 57 )

3614 
°212
;

3615 } i‡–(*
p
) > 70 ) {

3616 i‡–97 <(*
p
) && (*p) <= 102 )

3617 
°212
;

3619 
°212
;

3620 
°0
;

3621 
°212
:

3622 i‡–++
p
 =
≥
 )

3623 
_ã°_eof212
;

3625 i‡–(*
p
) < 65 ) {

3626 i‡–48 <(*
p
) && (*p) <= 57 )

3627 
°210
;

3628 } i‡–(*
p
) > 70 ) {

3629 i‡–97 <(*
p
) && (*p) <= 102 )

3630 
°210
;

3632 
°210
;

3633 
°0
;

3634 
°213
:

3635 i‡–++
p
 =
≥
 )

3636 
_ã°_eof213
;

3638  (*
p
) ) {

3639 32: 
å228
;

3640 33: 
°214
;

3641 37: 
°215
;

3642 47: 
°205
;

3643 61: 
°214
;

3644 64: 
°217
;

3645 95: 
°214
;

3646 126: 
°214
;

3648 i‡–(*
p
) < 58 ) {

3649 i‡–(*
p
) > 46 ) {

3650 i‡–48 <(*
p
) && (*p) <= 57 )

3651 
°213
;

3652 } i‡–(*
p
) >= 36 )

3653 
°214
;

3654 } i‡–(*
p
) > 59 ) {

3655 i‡–(*
p
) > 90 ) {

3656 i‡–97 <(*
p
) && (*p) <= 122 )

3657 
°214
;

3658 } i‡–(*
p
) >= 65 )

3659 
°214
;

3661 
°214
;

3662 
°0
;

3663 
°214
:

3664 i‡–++
p
 =
≥
 )

3665 
_ã°_eof214
;

3667  (*
p
) ) {

3668 33: 
°214
;

3669 37: 
°215
;

3670 61: 
°214
;

3671 64: 
°217
;

3672 95: 
°214
;

3673 126: 
°214
;

3675 i‡–(*
p
) < 48 ) {

3676 i‡–36 <(*
p
) && (*p) <= 46 )

3677 
°214
;

3678 } i‡–(*
p
) > 59 ) {

3679 i‡–(*
p
) > 90 ) {

3680 i‡–97 <(*
p
) && (*p) <= 122 )

3681 
°214
;

3682 } i‡–(*
p
) >= 65 )

3683 
°214
;

3685 
°214
;

3686 
°0
;

3687 
°215
:

3688 i‡–++
p
 =
≥
 )

3689 
_ã°_eof215
;

3691 i‡–(*
p
) < 65 ) {

3692 i‡–48 <(*
p
) && (*p) <= 57 )

3693 
°216
;

3694 } i‡–(*
p
) > 70 ) {

3695 i‡–97 <(*
p
) && (*p) <= 102 )

3696 
°216
;

3698 
°216
;

3699 
°0
;

3700 
°216
:

3701 i‡–++
p
 =
≥
 )

3702 
_ã°_eof216
;

3704 i‡–(*
p
) < 65 ) {

3705 i‡–48 <(*
p
) && (*p) <= 57 )

3706 
°214
;

3707 } i‡–(*
p
) > 70 ) {

3708 i‡–97 <(*
p
) && (*p) <= 102 )

3709 
°214
;

3711 
°214
;

3712 
°0
;

3713 
°217
:

3714 i‡–++
p
 =
≥
 )

3715 
_ã°_eof217
;

3717  (*
p
) ) {

3718 32: 
å228
;

3719 33: 
°218
;

3720 37: 
°219
;

3721 47: 
°205
;

3722 58: 
°221
;

3723 61: 
°218
;

3724 91: 
°222
;

3725 95: 
°218
;

3726 126: 
°218
;

3728 i‡–(*
p
) < 65 ) {

3729 i‡–36 <(*
p
) && (*p) <= 59 )

3730 
°218
;

3731 } i‡–(*
p
) > 90 ) {

3732 i‡–97 <(*
p
) && (*p) <= 122 )

3733 
°218
;

3735 
°218
;

3736 
°0
;

3737 
°218
:

3738 i‡–++
p
 =
≥
 )

3739 
_ã°_eof218
;

3741  (*
p
) ) {

3742 32: 
å228
;

3743 33: 
°218
;

3744 37: 
°219
;

3745 47: 
°205
;

3746 58: 
°221
;

3747 61: 
°218
;

3748 95: 
°218
;

3749 126: 
°218
;

3751 i‡–(*
p
) < 65 ) {

3752 i‡–36 <(*
p
) && (*p) <= 59 )

3753 
°218
;

3754 } i‡–(*
p
) > 90 ) {

3755 i‡–97 <(*
p
) && (*p) <= 122 )

3756 
°218
;

3758 
°218
;

3759 
°0
;

3760 
°219
:

3761 i‡–++
p
 =
≥
 )

3762 
_ã°_eof219
;

3764 i‡–(*
p
) < 65 ) {

3765 i‡–48 <(*
p
) && (*p) <= 57 )

3766 
°220
;

3767 } i‡–(*
p
) > 70 ) {

3768 i‡–97 <(*
p
) && (*p) <= 102 )

3769 
°220
;

3771 
°220
;

3772 
°0
;

3773 
°220
:

3774 i‡–++
p
 =
≥
 )

3775 
_ã°_eof220
;

3777 i‡–(*
p
) < 65 ) {

3778 i‡–48 <(*
p
) && (*p) <= 57 )

3779 
°218
;

3780 } i‡–(*
p
) > 70 ) {

3781 i‡–97 <(*
p
) && (*p) <= 102 )

3782 
°218
;

3784 
°218
;

3785 
°0
;

3786 
°221
:

3787 i‡–++
p
 =
≥
 )

3788 
_ã°_eof221
;

3790  (*
p
) ) {

3791 32: 
å228
;

3792 47: 
°205
;

3794 i‡–48 <(*
p
) && (*p) <= 57 )

3795 
°221
;

3796 
°0
;

3797 
°222
:

3798 i‡–++
p
 =
≥
 )

3799 
_ã°_eof222
;

3801  (*
p
) ) {

3802 6: 
°223
;

3803 58: 
°342
;

3804 118: 
°344
;

3806 i‡–(*
p
) < 65 ) {

3807 i‡–48 <(*
p
) && (*p) <= 57 )

3808 
°266
;

3809 } i‡–(*
p
) > 70 ) {

3810 i‡–97 <(*
p
) && (*p) <= 102 )

3811 
°266
;

3813 
°266
;

3814 
°0
;

3815 
°223
:

3816 i‡–++
p
 =
≥
 )

3817 
_ã°_eof223
;

3819 i‡–(*
p
) < 65 ) {

3820 i‡–48 <(*
p
) && (*p) <= 57 )

3821 
°224
;

3822 } i‡–(*
p
) > 70 ) {

3823 i‡–97 <(*
p
) && (*p) <= 102 )

3824 
°224
;

3826 
°224
;

3827 
°0
;

3828 
°224
:

3829 i‡–++
p
 =
≥
 )

3830 
_ã°_eof224
;

3832 i‡–(*
p
) == 58 )

3833 
°228
;

3834 i‡–(*
p
) < 65 ) {

3835 i‡–48 <(*
p
) && (*p) <= 57 )

3836 
°225
;

3837 } i‡–(*
p
) > 70 ) {

3838 i‡–97 <(*
p
) && (*p) <= 102 )

3839 
°225
;

3841 
°225
;

3842 
°0
;

3843 
°225
:

3844 i‡–++
p
 =
≥
 )

3845 
_ã°_eof225
;

3847 i‡–(*
p
) == 58 )

3848 
°228
;

3849 i‡–(*
p
) < 65 ) {

3850 i‡–48 <(*
p
) && (*p) <= 57 )

3851 
°226
;

3852 } i‡–(*
p
) > 70 ) {

3853 i‡–97 <(*
p
) && (*p) <= 102 )

3854 
°226
;

3856 
°226
;

3857 
°0
;

3858 
°226
:

3859 i‡–++
p
 =
≥
 )

3860 
_ã°_eof226
;

3862 i‡–(*
p
) == 58 )

3863 
°228
;

3864 i‡–(*
p
) < 65 ) {

3865 i‡–48 <(*
p
) && (*p) <= 57 )

3866 
°227
;

3867 } i‡–(*
p
) > 70 ) {

3868 i‡–97 <(*
p
) && (*p) <= 102 )

3869 
°227
;

3871 
°227
;

3872 
°0
;

3873 
°227
:

3874 i‡–++
p
 =
≥
 )

3875 
_ã°_eof227
;

3877 i‡–(*
p
) == 58 )

3878 
°228
;

3879 
°0
;

3880 
°228
:

3881 i‡–++
p
 =
≥
 )

3882 
_ã°_eof228
;

3884  (*
p
) ) {

3885 49: 
°259
;

3886 50: 
°262
;

3888 i‡–(*
p
) < 65 ) {

3889 i‡–48 <(*
p
) && (*p) <= 57 )

3890 
°229
;

3891 } i‡–(*
p
) > 70 ) {

3892 i‡–97 <(*
p
) && (*p) <= 102 )

3893 
°265
;

3895 
°265
;

3896 
°0
;

3897 
°229
:

3898 i‡–++
p
 =
≥
 )

3899 
_ã°_eof229
;

3901  (*
p
) ) {

3902 46: 
°230
;

3903 58: 
°255
;

3905 i‡–(*
p
) < 65 ) {

3906 i‡–48 <(*
p
) && (*p) <= 57 )

3907 
°252
;

3908 } i‡–(*
p
) > 70 ) {

3909 i‡–97 <(*
p
) && (*p) <= 102 )

3910 
°252
;

3912 
°252
;

3913 
°0
;

3914 
°230
:

3915 i‡–++
p
 =
≥
 )

3916 
_ã°_eof230
;

3918  (*
p
) ) {

3919 49: 
°247
;

3920 50: 
°249
;

3922 i‡–48 <(*
p
) && (*p) <= 57 )

3923 
°231
;

3924 
°0
;

3925 
°231
:

3926 i‡–++
p
 =
≥
 )

3927 
_ã°_eof231
;

3929 i‡–(*
p
) == 46 )

3930 
°232
;

3931 
°0
;

3932 
°232
:

3933 i‡–++
p
 =
≥
 )

3934 
_ã°_eof232
;

3936  (*
p
) ) {

3937 49: 
°242
;

3938 50: 
°244
;

3940 i‡–48 <(*
p
) && (*p) <= 57 )

3941 
°233
;

3942 
°0
;

3943 
°233
:

3944 i‡–++
p
 =
≥
 )

3945 
_ã°_eof233
;

3947 i‡–(*
p
) == 46 )

3948 
°234
;

3949 
°0
;

3950 
°234
:

3951 i‡–++
p
 =
≥
 )

3952 
_ã°_eof234
;

3954  (*
p
) ) {

3955 49: 
°237
;

3956 50: 
°239
;

3958 i‡–48 <(*
p
) && (*p) <= 57 )

3959 
°235
;

3960 
°0
;

3961 
°235
:

3962 i‡–++
p
 =
≥
 )

3963 
_ã°_eof235
;

3965 i‡–(*
p
) == 93 )

3966 
°236
;

3967 
°0
;

3968 
°236
:

3969 i‡–++
p
 =
≥
 )

3970 
_ã°_eof236
;

3972  (*
p
) ) {

3973 32: 
å228
;

3974 47: 
°205
;

3975 58: 
°221
;

3977 
°0
;

3978 
°237
:

3979 i‡–++
p
 =
≥
 )

3980 
_ã°_eof237
;

3982 i‡–(*
p
) == 93 )

3983 
°236
;

3984 i‡–48 <(*
p
) && (*p) <= 57 )

3985 
°238
;

3986 
°0
;

3987 
°238
:

3988 i‡–++
p
 =
≥
 )

3989 
_ã°_eof238
;

3991 i‡–(*
p
) == 93 )

3992 
°236
;

3993 i‡–48 <(*
p
) && (*p) <= 57 )

3994 
°235
;

3995 
°0
;

3996 
°239
:

3997 i‡–++
p
 =
≥
 )

3998 
_ã°_eof239
;

4000  (*
p
) ) {

4001 48: 
°240
;

4002 53: 
°241
;

4003 93: 
°236
;

4005 
°0
;

4006 
°240
:

4007 i‡–++
p
 =
≥
 )

4008 
_ã°_eof240
;

4010 i‡–48 <(*
p
) && (*p) <= 57 )

4011 
°235
;

4012 
°0
;

4013 
°241
:

4014 i‡–++
p
 =
≥
 )

4015 
_ã°_eof241
;

4017 i‡–(*
p
) == 48 )

4018 
°235
;

4019 
°0
;

4020 
°242
:

4021 i‡–++
p
 =
≥
 )

4022 
_ã°_eof242
;

4024 i‡–(*
p
) == 46 )

4025 
°234
;

4026 i‡–48 <(*
p
) && (*p) <= 57 )

4027 
°243
;

4028 
°0
;

4029 
°243
:

4030 i‡–++
p
 =
≥
 )

4031 
_ã°_eof243
;

4033 i‡–(*
p
) == 46 )

4034 
°234
;

4035 i‡–48 <(*
p
) && (*p) <= 57 )

4036 
°233
;

4037 
°0
;

4038 
°244
:

4039 i‡–++
p
 =
≥
 )

4040 
_ã°_eof244
;

4042  (*
p
) ) {

4043 46: 
°234
;

4044 48: 
°245
;

4045 53: 
°246
;

4047 
°0
;

4048 
°245
:

4049 i‡–++
p
 =
≥
 )

4050 
_ã°_eof245
;

4052 i‡–48 <(*
p
) && (*p) <= 57 )

4053 
°233
;

4054 
°0
;

4055 
°246
:

4056 i‡–++
p
 =
≥
 )

4057 
_ã°_eof246
;

4059 i‡–(*
p
) == 48 )

4060 
°233
;

4061 
°0
;

4062 
°247
:

4063 i‡–++
p
 =
≥
 )

4064 
_ã°_eof247
;

4066 i‡–(*
p
) == 46 )

4067 
°232
;

4068 i‡–48 <(*
p
) && (*p) <= 57 )

4069 
°248
;

4070 
°0
;

4071 
°248
:

4072 i‡–++
p
 =
≥
 )

4073 
_ã°_eof248
;

4075 i‡–(*
p
) == 46 )

4076 
°232
;

4077 i‡–48 <(*
p
) && (*p) <= 57 )

4078 
°231
;

4079 
°0
;

4080 
°249
:

4081 i‡–++
p
 =
≥
 )

4082 
_ã°_eof249
;

4084  (*
p
) ) {

4085 46: 
°232
;

4086 48: 
°250
;

4087 53: 
°251
;

4089 
°0
;

4090 
°250
:

4091 i‡–++
p
 =
≥
 )

4092 
_ã°_eof250
;

4094 i‡–48 <(*
p
) && (*p) <= 57 )

4095 
°231
;

4096 
°0
;

4097 
°251
:

4098 i‡–++
p
 =
≥
 )

4099 
_ã°_eof251
;

4101 i‡–(*
p
) == 48 )

4102 
°231
;

4103 
°0
;

4104 
°252
:

4105 i‡–++
p
 =
≥
 )

4106 
_ã°_eof252
;

4108 i‡–(*
p
) == 58 )

4109 
°255
;

4110 i‡–(*
p
) < 65 ) {

4111 i‡–48 <(*
p
) && (*p) <= 57 )

4112 
°253
;

4113 } i‡–(*
p
) > 70 ) {

4114 i‡–97 <(*
p
) && (*p) <= 102 )

4115 
°253
;

4117 
°253
;

4118 
°0
;

4119 
°253
:

4120 i‡–++
p
 =
≥
 )

4121 
_ã°_eof253
;

4123 i‡–(*
p
) == 58 )

4124 
°255
;

4125 i‡–(*
p
) < 65 ) {

4126 i‡–48 <(*
p
) && (*p) <= 57 )

4127 
°254
;

4128 } i‡–(*
p
) > 70 ) {

4129 i‡–97 <(*
p
) && (*p) <= 102 )

4130 
°254
;

4132 
°254
;

4133 
°0
;

4134 
°254
:

4135 i‡–++
p
 =
≥
 )

4136 
_ã°_eof254
;

4138 i‡–(*
p
) == 58 )

4139 
°255
;

4140 
°0
;

4141 
°255
:

4142 i‡–++
p
 =
≥
 )

4143 
_ã°_eof255
;

4145 i‡–(*
p
) < 65 ) {

4146 i‡–48 <(*
p
) && (*p) <= 57 )

4147 
°256
;

4148 } i‡–(*
p
) > 70 ) {

4149 i‡–97 <(*
p
) && (*p) <= 102 )

4150 
°256
;

4152 
°256
;

4153 
°0
;

4154 
°256
:

4155 i‡–++
p
 =
≥
 )

4156 
_ã°_eof256
;

4158 i‡–(*
p
) == 93 )

4159 
°236
;

4160 i‡–(*
p
) < 65 ) {

4161 i‡–48 <(*
p
) && (*p) <= 57 )

4162 
°257
;

4163 } i‡–(*
p
) > 70 ) {

4164 i‡–97 <(*
p
) && (*p) <= 102 )

4165 
°257
;

4167 
°257
;

4168 
°0
;

4169 
°257
:

4170 i‡–++
p
 =
≥
 )

4171 
_ã°_eof257
;

4173 i‡–(*
p
) == 93 )

4174 
°236
;

4175 i‡–(*
p
) < 65 ) {

4176 i‡–48 <(*
p
) && (*p) <= 57 )

4177 
°258
;

4178 } i‡–(*
p
) > 70 ) {

4179 i‡–97 <(*
p
) && (*p) <= 102 )

4180 
°258
;

4182 
°258
;

4183 
°0
;

4184 
°258
:

4185 i‡–++
p
 =
≥
 )

4186 
_ã°_eof258
;

4188 i‡–(*
p
) == 93 )

4189 
°236
;

4190 i‡–(*
p
) < 65 ) {

4191 i‡–48 <(*
p
) && (*p) <= 57 )

4192 
°235
;

4193 } i‡–(*
p
) > 70 ) {

4194 i‡–97 <(*
p
) && (*p) <= 102 )

4195 
°235
;

4197 
°235
;

4198 
°0
;

4199 
°259
:

4200 i‡–++
p
 =
≥
 )

4201 
_ã°_eof259
;

4203  (*
p
) ) {

4204 46: 
°230
;

4205 58: 
°255
;

4207 i‡–(*
p
) < 65 ) {

4208 i‡–48 <(*
p
) && (*p) <= 57 )

4209 
°260
;

4210 } i‡–(*
p
) > 70 ) {

4211 i‡–97 <(*
p
) && (*p) <= 102 )

4212 
°252
;

4214 
°252
;

4215 
°0
;

4216 
°260
:

4217 i‡–++
p
 =
≥
 )

4218 
_ã°_eof260
;

4220  (*
p
) ) {

4221 46: 
°230
;

4222 58: 
°255
;

4224 i‡–(*
p
) < 65 ) {

4225 i‡–48 <(*
p
) && (*p) <= 57 )

4226 
°261
;

4227 } i‡–(*
p
) > 70 ) {

4228 i‡–97 <(*
p
) && (*p) <= 102 )

4229 
°253
;

4231 
°253
;

4232 
°0
;

4233 
°261
:

4234 i‡–++
p
 =
≥
 )

4235 
_ã°_eof261
;

4237  (*
p
) ) {

4238 46: 
°230
;

4239 58: 
°255
;

4241 i‡–(*
p
) < 65 ) {

4242 i‡–48 <(*
p
) && (*p) <= 57 )

4243 
°254
;

4244 } i‡–(*
p
) > 70 ) {

4245 i‡–97 <(*
p
) && (*p) <= 102 )

4246 
°254
;

4248 
°254
;

4249 
°0
;

4250 
°262
:

4251 i‡–++
p
 =
≥
 )

4252 
_ã°_eof262
;

4254  (*
p
) ) {

4255 46: 
°230
;

4256 48: 
°263
;

4257 53: 
°264
;

4258 58: 
°255
;

4260 i‡–(*
p
) < 65 ) {

4261 i‡–49 <(*
p
) && (*p) <= 57 )

4262 
°252
;

4263 } i‡–(*
p
) > 70 ) {

4264 i‡–97 <(*
p
) && (*p) <= 102 )

4265 
°252
;

4267 
°252
;

4268 
°0
;

4269 
°263
:

4270 i‡–++
p
 =
≥
 )

4271 
_ã°_eof263
;

4273 i‡–(*
p
) == 58 )

4274 
°255
;

4275 i‡–(*
p
) < 65 ) {

4276 i‡–48 <(*
p
) && (*p) <= 57 )

4277 
°261
;

4278 } i‡–(*
p
) > 70 ) {

4279 i‡–97 <(*
p
) && (*p) <= 102 )

4280 
°253
;

4282 
°253
;

4283 
°0
;

4284 
°264
:

4285 i‡–++
p
 =
≥
 )

4286 
_ã°_eof264
;

4288  (*
p
) ) {

4289 48: 
°261
;

4290 58: 
°255
;

4292 i‡–(*
p
) < 65 ) {

4293 i‡–49 <(*
p
) && (*p) <= 57 )

4294 
°253
;

4295 } i‡–(*
p
) > 70 ) {

4296 i‡–97 <(*
p
) && (*p) <= 102 )

4297 
°253
;

4299 
°253
;

4300 
°0
;

4301 
°265
:

4302 i‡–++
p
 =
≥
 )

4303 
_ã°_eof265
;

4305 i‡–(*
p
) == 58 )

4306 
°255
;

4307 i‡–(*
p
) < 65 ) {

4308 i‡–48 <(*
p
) && (*p) <= 57 )

4309 
°252
;

4310 } i‡–(*
p
) > 70 ) {

4311 i‡–97 <(*
p
) && (*p) <= 102 )

4312 
°252
;

4314 
°252
;

4315 
°0
;

4316 
°266
:

4317 i‡–++
p
 =
≥
 )

4318 
_ã°_eof266
;

4320 i‡–(*
p
) == 58 )

4321 
°270
;

4322 i‡–(*
p
) < 65 ) {

4323 i‡–48 <(*
p
) && (*p) <= 57 )

4324 
°267
;

4325 } i‡–(*
p
) > 70 ) {

4326 i‡–97 <(*
p
) && (*p) <= 102 )

4327 
°267
;

4329 
°267
;

4330 
°0
;

4331 
°267
:

4332 i‡–++
p
 =
≥
 )

4333 
_ã°_eof267
;

4335 i‡–(*
p
) == 58 )

4336 
°270
;

4337 i‡–(*
p
) < 65 ) {

4338 i‡–48 <(*
p
) && (*p) <= 57 )

4339 
°268
;

4340 } i‡–(*
p
) > 70 ) {

4341 i‡–97 <(*
p
) && (*p) <= 102 )

4342 
°268
;

4344 
°268
;

4345 
°0
;

4346 
°268
:

4347 i‡–++
p
 =
≥
 )

4348 
_ã°_eof268
;

4350 i‡–(*
p
) == 58 )

4351 
°270
;

4352 i‡–(*
p
) < 65 ) {

4353 i‡–48 <(*
p
) && (*p) <= 57 )

4354 
°269
;

4355 } i‡–(*
p
) > 70 ) {

4356 i‡–97 <(*
p
) && (*p) <= 102 )

4357 
°269
;

4359 
°269
;

4360 
°0
;

4361 
°269
:

4362 i‡–++
p
 =
≥
 )

4363 
_ã°_eof269
;

4365 i‡–(*
p
) == 58 )

4366 
°270
;

4367 
°0
;

4368 
°270
:

4369 i‡–++
p
 =
≥
 )

4370 
_ã°_eof270
;

4372 i‡–(*
p
) == 58 )

4373 
°341
;

4374 i‡–(*
p
) < 65 ) {

4375 i‡–48 <(*
p
) && (*p) <= 57 )

4376 
°271
;

4377 } i‡–(*
p
) > 70 ) {

4378 i‡–97 <(*
p
) && (*p) <= 102 )

4379 
°271
;

4381 
°271
;

4382 
°0
;

4383 
°271
:

4384 i‡–++
p
 =
≥
 )

4385 
_ã°_eof271
;

4387 i‡–(*
p
) == 58 )

4388 
°275
;

4389 i‡–(*
p
) < 65 ) {

4390 i‡–48 <(*
p
) && (*p) <= 57 )

4391 
°272
;

4392 } i‡–(*
p
) > 70 ) {

4393 i‡–97 <(*
p
) && (*p) <= 102 )

4394 
°272
;

4396 
°272
;

4397 
°0
;

4398 
°272
:

4399 i‡–++
p
 =
≥
 )

4400 
_ã°_eof272
;

4402 i‡–(*
p
) == 58 )

4403 
°275
;

4404 i‡–(*
p
) < 65 ) {

4405 i‡–48 <(*
p
) && (*p) <= 57 )

4406 
°273
;

4407 } i‡–(*
p
) > 70 ) {

4408 i‡–97 <(*
p
) && (*p) <= 102 )

4409 
°273
;

4411 
°273
;

4412 
°0
;

4413 
°273
:

4414 i‡–++
p
 =
≥
 )

4415 
_ã°_eof273
;

4417 i‡–(*
p
) == 58 )

4418 
°275
;

4419 i‡–(*
p
) < 65 ) {

4420 i‡–48 <(*
p
) && (*p) <= 57 )

4421 
°274
;

4422 } i‡–(*
p
) > 70 ) {

4423 i‡–97 <(*
p
) && (*p) <= 102 )

4424 
°274
;

4426 
°274
;

4427 
°0
;

4428 
°274
:

4429 i‡–++
p
 =
≥
 )

4430 
_ã°_eof274
;

4432 i‡–(*
p
) == 58 )

4433 
°275
;

4434 
°0
;

4435 
°275
:

4436 i‡–++
p
 =
≥
 )

4437 
_ã°_eof275
;

4439 i‡–(*
p
) == 58 )

4440 
°340
;

4441 i‡–(*
p
) < 65 ) {

4442 i‡–48 <(*
p
) && (*p) <= 57 )

4443 
°276
;

4444 } i‡–(*
p
) > 70 ) {

4445 i‡–97 <(*
p
) && (*p) <= 102 )

4446 
°276
;

4448 
°276
;

4449 
°0
;

4450 
°276
:

4451 i‡–++
p
 =
≥
 )

4452 
_ã°_eof276
;

4454 i‡–(*
p
) == 58 )

4455 
°280
;

4456 i‡–(*
p
) < 65 ) {

4457 i‡–48 <(*
p
) && (*p) <= 57 )

4458 
°277
;

4459 } i‡–(*
p
) > 70 ) {

4460 i‡–97 <(*
p
) && (*p) <= 102 )

4461 
°277
;

4463 
°277
;

4464 
°0
;

4465 
°277
:

4466 i‡–++
p
 =
≥
 )

4467 
_ã°_eof277
;

4469 i‡–(*
p
) == 58 )

4470 
°280
;

4471 i‡–(*
p
) < 65 ) {

4472 i‡–48 <(*
p
) && (*p) <= 57 )

4473 
°278
;

4474 } i‡–(*
p
) > 70 ) {

4475 i‡–97 <(*
p
) && (*p) <= 102 )

4476 
°278
;

4478 
°278
;

4479 
°0
;

4480 
°278
:

4481 i‡–++
p
 =
≥
 )

4482 
_ã°_eof278
;

4484 i‡–(*
p
) == 58 )

4485 
°280
;

4486 i‡–(*
p
) < 65 ) {

4487 i‡–48 <(*
p
) && (*p) <= 57 )

4488 
°279
;

4489 } i‡–(*
p
) > 70 ) {

4490 i‡–97 <(*
p
) && (*p) <= 102 )

4491 
°279
;

4493 
°279
;

4494 
°0
;

4495 
°279
:

4496 i‡–++
p
 =
≥
 )

4497 
_ã°_eof279
;

4499 i‡–(*
p
) == 58 )

4500 
°280
;

4501 
°0
;

4502 
°280
:

4503 i‡–++
p
 =
≥
 )

4504 
_ã°_eof280
;

4506 i‡–(*
p
) == 58 )

4507 
°339
;

4508 i‡–(*
p
) < 65 ) {

4509 i‡–48 <(*
p
) && (*p) <= 57 )

4510 
°281
;

4511 } i‡–(*
p
) > 70 ) {

4512 i‡–97 <(*
p
) && (*p) <= 102 )

4513 
°281
;

4515 
°281
;

4516 
°0
;

4517 
°281
:

4518 i‡–++
p
 =
≥
 )

4519 
_ã°_eof281
;

4521 i‡–(*
p
) == 58 )

4522 
°285
;

4523 i‡–(*
p
) < 65 ) {

4524 i‡–48 <(*
p
) && (*p) <= 57 )

4525 
°282
;

4526 } i‡–(*
p
) > 70 ) {

4527 i‡–97 <(*
p
) && (*p) <= 102 )

4528 
°282
;

4530 
°282
;

4531 
°0
;

4532 
°282
:

4533 i‡–++
p
 =
≥
 )

4534 
_ã°_eof282
;

4536 i‡–(*
p
) == 58 )

4537 
°285
;

4538 i‡–(*
p
) < 65 ) {

4539 i‡–48 <(*
p
) && (*p) <= 57 )

4540 
°283
;

4541 } i‡–(*
p
) > 70 ) {

4542 i‡–97 <(*
p
) && (*p) <= 102 )

4543 
°283
;

4545 
°283
;

4546 
°0
;

4547 
°283
:

4548 i‡–++
p
 =
≥
 )

4549 
_ã°_eof283
;

4551 i‡–(*
p
) == 58 )

4552 
°285
;

4553 i‡–(*
p
) < 65 ) {

4554 i‡–48 <(*
p
) && (*p) <= 57 )

4555 
°284
;

4556 } i‡–(*
p
) > 70 ) {

4557 i‡–97 <(*
p
) && (*p) <= 102 )

4558 
°284
;

4560 
°284
;

4561 
°0
;

4562 
°284
:

4563 i‡–++
p
 =
≥
 )

4564 
_ã°_eof284
;

4566 i‡–(*
p
) == 58 )

4567 
°285
;

4568 
°0
;

4569 
°285
:

4570 i‡–++
p
 =
≥
 )

4571 
_ã°_eof285
;

4573 i‡–(*
p
) == 58 )

4574 
°338
;

4575 i‡–(*
p
) < 65 ) {

4576 i‡–48 <(*
p
) && (*p) <= 57 )

4577 
°286
;

4578 } i‡–(*
p
) > 70 ) {

4579 i‡–97 <(*
p
) && (*p) <= 102 )

4580 
°286
;

4582 
°286
;

4583 
°0
;

4584 
°286
:

4585 i‡–++
p
 =
≥
 )

4586 
_ã°_eof286
;

4588 i‡–(*
p
) == 58 )

4589 
°290
;

4590 i‡–(*
p
) < 65 ) {

4591 i‡–48 <(*
p
) && (*p) <= 57 )

4592 
°287
;

4593 } i‡–(*
p
) > 70 ) {

4594 i‡–97 <(*
p
) && (*p) <= 102 )

4595 
°287
;

4597 
°287
;

4598 
°0
;

4599 
°287
:

4600 i‡–++
p
 =
≥
 )

4601 
_ã°_eof287
;

4603 i‡–(*
p
) == 58 )

4604 
°290
;

4605 i‡–(*
p
) < 65 ) {

4606 i‡–48 <(*
p
) && (*p) <= 57 )

4607 
°288
;

4608 } i‡–(*
p
) > 70 ) {

4609 i‡–97 <(*
p
) && (*p) <= 102 )

4610 
°288
;

4612 
°288
;

4613 
°0
;

4614 
°288
:

4615 i‡–++
p
 =
≥
 )

4616 
_ã°_eof288
;

4618 i‡–(*
p
) == 58 )

4619 
°290
;

4620 i‡–(*
p
) < 65 ) {

4621 i‡–48 <(*
p
) && (*p) <= 57 )

4622 
°289
;

4623 } i‡–(*
p
) > 70 ) {

4624 i‡–97 <(*
p
) && (*p) <= 102 )

4625 
°289
;

4627 
°289
;

4628 
°0
;

4629 
°289
:

4630 i‡–++
p
 =
≥
 )

4631 
_ã°_eof289
;

4633 i‡–(*
p
) == 58 )

4634 
°290
;

4635 
°0
;

4636 
°290
:

4637 i‡–++
p
 =
≥
 )

4638 
_ã°_eof290
;

4640 i‡–(*
p
) == 58 )

4641 
°326
;

4642 i‡–(*
p
) < 65 ) {

4643 i‡–48 <(*
p
) && (*p) <= 57 )

4644 
°291
;

4645 } i‡–(*
p
) > 70 ) {

4646 i‡–97 <(*
p
) && (*p) <= 102 )

4647 
°291
;

4649 
°291
;

4650 
°0
;

4651 
°291
:

4652 i‡–++
p
 =
≥
 )

4653 
_ã°_eof291
;

4655 i‡–(*
p
) == 58 )

4656 
°295
;

4657 i‡–(*
p
) < 65 ) {

4658 i‡–48 <(*
p
) && (*p) <= 57 )

4659 
°292
;

4660 } i‡–(*
p
) > 70 ) {

4661 i‡–97 <(*
p
) && (*p) <= 102 )

4662 
°292
;

4664 
°292
;

4665 
°0
;

4666 
°292
:

4667 i‡–++
p
 =
≥
 )

4668 
_ã°_eof292
;

4670 i‡–(*
p
) == 58 )

4671 
°295
;

4672 i‡–(*
p
) < 65 ) {

4673 i‡–48 <(*
p
) && (*p) <= 57 )

4674 
°293
;

4675 } i‡–(*
p
) > 70 ) {

4676 i‡–97 <(*
p
) && (*p) <= 102 )

4677 
°293
;

4679 
°293
;

4680 
°0
;

4681 
°293
:

4682 i‡–++
p
 =
≥
 )

4683 
_ã°_eof293
;

4685 i‡–(*
p
) == 58 )

4686 
°295
;

4687 i‡–(*
p
) < 65 ) {

4688 i‡–48 <(*
p
) && (*p) <= 57 )

4689 
°294
;

4690 } i‡–(*
p
) > 70 ) {

4691 i‡–97 <(*
p
) && (*p) <= 102 )

4692 
°294
;

4694 
°294
;

4695 
°0
;

4696 
°294
:

4697 i‡–++
p
 =
≥
 )

4698 
_ã°_eof294
;

4700 i‡–(*
p
) == 58 )

4701 
°295
;

4702 
°0
;

4703 
°295
:

4704 i‡–++
p
 =
≥
 )

4705 
_ã°_eof295
;

4707 i‡–(*
p
) == 58 )

4708 
°325
;

4709 i‡–(*
p
) < 65 ) {

4710 i‡–48 <(*
p
) && (*p) <= 57 )

4711 
°296
;

4712 } i‡–(*
p
) > 70 ) {

4713 i‡–97 <(*
p
) && (*p) <= 102 )

4714 
°296
;

4716 
°296
;

4717 
°0
;

4718 
°296
:

4719 i‡–++
p
 =
≥
 )

4720 
_ã°_eof296
;

4722 i‡–(*
p
) == 58 )

4723 
°300
;

4724 i‡–(*
p
) < 65 ) {

4725 i‡–48 <(*
p
) && (*p) <= 57 )

4726 
°297
;

4727 } i‡–(*
p
) > 70 ) {

4728 i‡–97 <(*
p
) && (*p) <= 102 )

4729 
°297
;

4731 
°297
;

4732 
°0
;

4733 
°297
:

4734 i‡–++
p
 =
≥
 )

4735 
_ã°_eof297
;

4737 i‡–(*
p
) == 58 )

4738 
°300
;

4739 i‡–(*
p
) < 65 ) {

4740 i‡–48 <(*
p
) && (*p) <= 57 )

4741 
°298
;

4742 } i‡–(*
p
) > 70 ) {

4743 i‡–97 <(*
p
) && (*p) <= 102 )

4744 
°298
;

4746 
°298
;

4747 
°0
;

4748 
°298
:

4749 i‡–++
p
 =
≥
 )

4750 
_ã°_eof298
;

4752 i‡–(*
p
) == 58 )

4753 
°300
;

4754 i‡–(*
p
) < 65 ) {

4755 i‡–48 <(*
p
) && (*p) <= 57 )

4756 
°299
;

4757 } i‡–(*
p
) > 70 ) {

4758 i‡–97 <(*
p
) && (*p) <= 102 )

4759 
°299
;

4761 
°299
;

4762 
°0
;

4763 
°299
:

4764 i‡–++
p
 =
≥
 )

4765 
_ã°_eof299
;

4767 i‡–(*
p
) == 58 )

4768 
°300
;

4769 
°0
;

4770 
°300
:

4771 i‡–++
p
 =
≥
 )

4772 
_ã°_eof300
;

4774 i‡–(*
p
) == 58 )

4775 
°301
;

4776 i‡–(*
p
) < 65 ) {

4777 i‡–48 <(*
p
) && (*p) <= 57 )

4778 
°296
;

4779 } i‡–(*
p
) > 70 ) {

4780 i‡–97 <(*
p
) && (*p) <= 102 )

4781 
°296
;

4783 
°296
;

4784 
°0
;

4785 
°301
:

4786 i‡–++
p
 =
≥
 )

4787 
_ã°_eof301
;

4789  (*
p
) ) {

4790 49: 
°318
;

4791 50: 
°321
;

4792 93: 
°236
;

4794 i‡–(*
p
) < 48 ) {

4795 i‡–2 <(*
p
) && (*p) <= 3 )

4796 
°223
;

4797 } i‡–(*
p
) > 57 ) {

4798 i‡–(*
p
) > 70 ) {

4799 i‡–97 <(*
p
) && (*p) <= 102 )

4800 
°324
;

4801 } i‡–(*
p
) >= 65 )

4802 
°324
;

4804 
°302
;

4805 
°0
;

4806 
°302
:

4807 i‡–++
p
 =
≥
 )

4808 
_ã°_eof302
;

4810  (*
p
) ) {

4811 46: 
°230
;

4812 58: 
°306
;

4813 93: 
°236
;

4815 i‡–(*
p
) < 65 ) {

4816 i‡–48 <(*
p
) && (*p) <= 57 )

4817 
°303
;

4818 } i‡–(*
p
) > 70 ) {

4819 i‡–97 <(*
p
) && (*p) <= 102 )

4820 
°303
;

4822 
°303
;

4823 
°0
;

4824 
°303
:

4825 i‡–++
p
 =
≥
 )

4826 
_ã°_eof303
;

4828  (*
p
) ) {

4829 58: 
°306
;

4830 93: 
°236
;

4832 i‡–(*
p
) < 65 ) {

4833 i‡–48 <(*
p
) && (*p) <= 57 )

4834 
°304
;

4835 } i‡–(*
p
) > 70 ) {

4836 i‡–97 <(*
p
) && (*p) <= 102 )

4837 
°304
;

4839 
°304
;

4840 
°0
;

4841 
°304
:

4842 i‡–++
p
 =
≥
 )

4843 
_ã°_eof304
;

4845  (*
p
) ) {

4846 58: 
°306
;

4847 93: 
°236
;

4849 i‡–(*
p
) < 65 ) {

4850 i‡–48 <(*
p
) && (*p) <= 57 )

4851 
°305
;

4852 } i‡–(*
p
) > 70 ) {

4853 i‡–97 <(*
p
) && (*p) <= 102 )

4854 
°305
;

4856 
°305
;

4857 
°0
;

4858 
°305
:

4859 i‡–++
p
 =
≥
 )

4860 
_ã°_eof305
;

4862  (*
p
) ) {

4863 58: 
°306
;

4864 93: 
°236
;

4866 
°0
;

4867 
°306
:

4868 i‡–++
p
 =
≥
 )

4869 
_ã°_eof306
;

4871  (*
p
) ) {

4872 49: 
°311
;

4873 50: 
°314
;

4875 i‡–(*
p
) < 65 ) {

4876 i‡–48 <(*
p
) && (*p) <= 57 )

4877 
°307
;

4878 } i‡–(*
p
) > 70 ) {

4879 i‡–97 <(*
p
) && (*p) <= 102 )

4880 
°317
;

4882 
°317
;

4883 
°0
;

4884 
°307
:

4885 i‡–++
p
 =
≥
 )

4886 
_ã°_eof307
;

4888  (*
p
) ) {

4889 46: 
°230
;

4890 58: 
°255
;

4891 93: 
°236
;

4893 i‡–(*
p
) < 65 ) {

4894 i‡–48 <(*
p
) && (*p) <= 57 )

4895 
°308
;

4896 } i‡–(*
p
) > 70 ) {

4897 i‡–97 <(*
p
) && (*p) <= 102 )

4898 
°308
;

4900 
°308
;

4901 
°0
;

4902 
°308
:

4903 i‡–++
p
 =
≥
 )

4904 
_ã°_eof308
;

4906  (*
p
) ) {

4907 58: 
°255
;

4908 93: 
°236
;

4910 i‡–(*
p
) < 65 ) {

4911 i‡–48 <(*
p
) && (*p) <= 57 )

4912 
°309
;

4913 } i‡–(*
p
) > 70 ) {

4914 i‡–97 <(*
p
) && (*p) <= 102 )

4915 
°309
;

4917 
°309
;

4918 
°0
;

4919 
°309
:

4920 i‡–++
p
 =
≥
 )

4921 
_ã°_eof309
;

4923  (*
p
) ) {

4924 58: 
°255
;

4925 93: 
°236
;

4927 i‡–(*
p
) < 65 ) {

4928 i‡–48 <(*
p
) && (*p) <= 57 )

4929 
°310
;

4930 } i‡–(*
p
) > 70 ) {

4931 i‡–97 <(*
p
) && (*p) <= 102 )

4932 
°310
;

4934 
°310
;

4935 
°0
;

4936 
°310
:

4937 i‡–++
p
 =
≥
 )

4938 
_ã°_eof310
;

4940  (*
p
) ) {

4941 58: 
°255
;

4942 93: 
°236
;

4944 
°0
;

4945 
°311
:

4946 i‡–++
p
 =
≥
 )

4947 
_ã°_eof311
;

4949  (*
p
) ) {

4950 46: 
°230
;

4951 58: 
°255
;

4952 93: 
°236
;

4954 i‡–(*
p
) < 65 ) {

4955 i‡–48 <(*
p
) && (*p) <= 57 )

4956 
°312
;

4957 } i‡–(*
p
) > 70 ) {

4958 i‡–97 <(*
p
) && (*p) <= 102 )

4959 
°308
;

4961 
°308
;

4962 
°0
;

4963 
°312
:

4964 i‡–++
p
 =
≥
 )

4965 
_ã°_eof312
;

4967  (*
p
) ) {

4968 46: 
°230
;

4969 58: 
°255
;

4970 93: 
°236
;

4972 i‡–(*
p
) < 65 ) {

4973 i‡–48 <(*
p
) && (*p) <= 57 )

4974 
°313
;

4975 } i‡–(*
p
) > 70 ) {

4976 i‡–97 <(*
p
) && (*p) <= 102 )

4977 
°309
;

4979 
°309
;

4980 
°0
;

4981 
°313
:

4982 i‡–++
p
 =
≥
 )

4983 
_ã°_eof313
;

4985  (*
p
) ) {

4986 46: 
°230
;

4987 58: 
°255
;

4988 93: 
°236
;

4990 i‡–(*
p
) < 65 ) {

4991 i‡–48 <(*
p
) && (*p) <= 57 )

4992 
°310
;

4993 } i‡–(*
p
) > 70 ) {

4994 i‡–97 <(*
p
) && (*p) <= 102 )

4995 
°310
;

4997 
°310
;

4998 
°0
;

4999 
°314
:

5000 i‡–++
p
 =
≥
 )

5001 
_ã°_eof314
;

5003  (*
p
) ) {

5004 46: 
°230
;

5005 48: 
°315
;

5006 53: 
°316
;

5007 58: 
°255
;

5008 93: 
°236
;

5010 i‡–(*
p
) < 65 ) {

5011 i‡–49 <(*
p
) && (*p) <= 57 )

5012 
°308
;

5013 } i‡–(*
p
) > 70 ) {

5014 i‡–97 <(*
p
) && (*p) <= 102 )

5015 
°308
;

5017 
°308
;

5018 
°0
;

5019 
°315
:

5020 i‡–++
p
 =
≥
 )

5021 
_ã°_eof315
;

5023  (*
p
) ) {

5024 58: 
°255
;

5025 93: 
°236
;

5027 i‡–(*
p
) < 65 ) {

5028 i‡–48 <(*
p
) && (*p) <= 57 )

5029 
°313
;

5030 } i‡–(*
p
) > 70 ) {

5031 i‡–97 <(*
p
) && (*p) <= 102 )

5032 
°309
;

5034 
°309
;

5035 
°0
;

5036 
°316
:

5037 i‡–++
p
 =
≥
 )

5038 
_ã°_eof316
;

5040  (*
p
) ) {

5041 48: 
°313
;

5042 58: 
°255
;

5043 93: 
°236
;

5045 i‡–(*
p
) < 65 ) {

5046 i‡–49 <(*
p
) && (*p) <= 57 )

5047 
°309
;

5048 } i‡–(*
p
) > 70 ) {

5049 i‡–97 <(*
p
) && (*p) <= 102 )

5050 
°309
;

5052 
°309
;

5053 
°0
;

5054 
°317
:

5055 i‡–++
p
 =
≥
 )

5056 
_ã°_eof317
;

5058  (*
p
) ) {

5059 58: 
°255
;

5060 93: 
°236
;

5062 i‡–(*
p
) < 65 ) {

5063 i‡–48 <(*
p
) && (*p) <= 57 )

5064 
°308
;

5065 } i‡–(*
p
) > 70 ) {

5066 i‡–97 <(*
p
) && (*p) <= 102 )

5067 
°308
;

5069 
°308
;

5070 
°0
;

5071 
°318
:

5072 i‡–++
p
 =
≥
 )

5073 
_ã°_eof318
;

5075  (*
p
) ) {

5076 46: 
°230
;

5077 58: 
°306
;

5078 93: 
°236
;

5080 i‡–(*
p
) < 65 ) {

5081 i‡–48 <(*
p
) && (*p) <= 57 )

5082 
°319
;

5083 } i‡–(*
p
) > 70 ) {

5084 i‡–97 <(*
p
) && (*p) <= 102 )

5085 
°303
;

5087 
°303
;

5088 
°0
;

5089 
°319
:

5090 i‡–++
p
 =
≥
 )

5091 
_ã°_eof319
;

5093  (*
p
) ) {

5094 46: 
°230
;

5095 58: 
°306
;

5096 93: 
°236
;

5098 i‡–(*
p
) < 65 ) {

5099 i‡–48 <(*
p
) && (*p) <= 57 )

5100 
°320
;

5101 } i‡–(*
p
) > 70 ) {

5102 i‡–97 <(*
p
) && (*p) <= 102 )

5103 
°304
;

5105 
°304
;

5106 
°0
;

5107 
°320
:

5108 i‡–++
p
 =
≥
 )

5109 
_ã°_eof320
;

5111  (*
p
) ) {

5112 46: 
°230
;

5113 58: 
°306
;

5114 93: 
°236
;

5116 i‡–(*
p
) < 65 ) {

5117 i‡–48 <(*
p
) && (*p) <= 57 )

5118 
°305
;

5119 } i‡–(*
p
) > 70 ) {

5120 i‡–97 <(*
p
) && (*p) <= 102 )

5121 
°305
;

5123 
°305
;

5124 
°0
;

5125 
°321
:

5126 i‡–++
p
 =
≥
 )

5127 
_ã°_eof321
;

5129  (*
p
) ) {

5130 46: 
°230
;

5131 48: 
°322
;

5132 53: 
°323
;

5133 58: 
°306
;

5134 93: 
°236
;

5136 i‡–(*
p
) < 65 ) {

5137 i‡–49 <(*
p
) && (*p) <= 57 )

5138 
°303
;

5139 } i‡–(*
p
) > 70 ) {

5140 i‡–97 <(*
p
) && (*p) <= 102 )

5141 
°303
;

5143 
°303
;

5144 
°0
;

5145 
°322
:

5146 i‡–++
p
 =
≥
 )

5147 
_ã°_eof322
;

5149  (*
p
) ) {

5150 58: 
°306
;

5151 93: 
°236
;

5153 i‡–(*
p
) < 65 ) {

5154 i‡–48 <(*
p
) && (*p) <= 57 )

5155 
°320
;

5156 } i‡–(*
p
) > 70 ) {

5157 i‡–97 <(*
p
) && (*p) <= 102 )

5158 
°304
;

5160 
°304
;

5161 
°0
;

5162 
°323
:

5163 i‡–++
p
 =
≥
 )

5164 
_ã°_eof323
;

5166  (*
p
) ) {

5167 48: 
°320
;

5168 58: 
°306
;

5169 93: 
°236
;

5171 i‡–(*
p
) < 65 ) {

5172 i‡–49 <(*
p
) && (*p) <= 57 )

5173 
°304
;

5174 } i‡–(*
p
) > 70 ) {

5175 i‡–97 <(*
p
) && (*p) <= 102 )

5176 
°304
;

5178 
°304
;

5179 
°0
;

5180 
°324
:

5181 i‡–++
p
 =
≥
 )

5182 
_ã°_eof324
;

5184  (*
p
) ) {

5185 58: 
°306
;

5186 93: 
°236
;

5188 i‡–(*
p
) < 65 ) {

5189 i‡–48 <(*
p
) && (*p) <= 57 )

5190 
°303
;

5191 } i‡–(*
p
) > 70 ) {

5192 i‡–97 <(*
p
) && (*p) <= 102 )

5193 
°303
;

5195 
°303
;

5196 
°0
;

5197 
°325
:

5198 i‡–++
p
 =
≥
 )

5199 
_ã°_eof325
;

5201  (*
p
) ) {

5202 49: 
°318
;

5203 50: 
°321
;

5205 i‡–(*
p
) < 48 ) {

5206 i‡–2 <(*
p
) && (*p) <= 3 )

5207 
°223
;

5208 } i‡–(*
p
) > 57 ) {

5209 i‡–(*
p
) > 70 ) {

5210 i‡–97 <(*
p
) && (*p) <= 102 )

5211 
°324
;

5212 } i‡–(*
p
) >= 65 )

5213 
°324
;

5215 
°302
;

5216 
°0
;

5217 
°326
:

5218 i‡–++
p
 =
≥
 )

5219 
_ã°_eof326
;

5221  (*
p
) ) {

5222 49: 
°331
;

5223 50: 
°334
;

5225 i‡–(*
p
) < 48 ) {

5226 i‡–2 <(*
p
) && (*p) <= 3 )

5227 
°223
;

5228 } i‡–(*
p
) > 57 ) {

5229 i‡–(*
p
) > 70 ) {

5230 i‡–97 <(*
p
) && (*p) <= 102 )

5231 
°337
;

5232 } i‡–(*
p
) >= 65 )

5233 
°337
;

5235 
°327
;

5236 
°0
;

5237 
°327
:

5238 i‡–++
p
 =
≥
 )

5239 
_ã°_eof327
;

5241  (*
p
) ) {

5242 46: 
°230
;

5243 58: 
°306
;

5245 i‡–(*
p
) < 65 ) {

5246 i‡–48 <(*
p
) && (*p) <= 57 )

5247 
°328
;

5248 } i‡–(*
p
) > 70 ) {

5249 i‡–97 <(*
p
) && (*p) <= 102 )

5250 
°328
;

5252 
°328
;

5253 
°0
;

5254 
°328
:

5255 i‡–++
p
 =
≥
 )

5256 
_ã°_eof328
;

5258 i‡–(*
p
) == 58 )

5259 
°306
;

5260 i‡–(*
p
) < 65 ) {

5261 i‡–48 <(*
p
) && (*p) <= 57 )

5262 
°329
;

5263 } i‡–(*
p
) > 70 ) {

5264 i‡–97 <(*
p
) && (*p) <= 102 )

5265 
°329
;

5267 
°329
;

5268 
°0
;

5269 
°329
:

5270 i‡–++
p
 =
≥
 )

5271 
_ã°_eof329
;

5273 i‡–(*
p
) == 58 )

5274 
°306
;

5275 i‡–(*
p
) < 65 ) {

5276 i‡–48 <(*
p
) && (*p) <= 57 )

5277 
°330
;

5278 } i‡–(*
p
) > 70 ) {

5279 i‡–97 <(*
p
) && (*p) <= 102 )

5280 
°330
;

5282 
°330
;

5283 
°0
;

5284 
°330
:

5285 i‡–++
p
 =
≥
 )

5286 
_ã°_eof330
;

5288 i‡–(*
p
) == 58 )

5289 
°306
;

5290 
°0
;

5291 
°331
:

5292 i‡–++
p
 =
≥
 )

5293 
_ã°_eof331
;

5295  (*
p
) ) {

5296 46: 
°230
;

5297 58: 
°306
;

5299 i‡–(*
p
) < 65 ) {

5300 i‡–48 <(*
p
) && (*p) <= 57 )

5301 
°332
;

5302 } i‡–(*
p
) > 70 ) {

5303 i‡–97 <(*
p
) && (*p) <= 102 )

5304 
°328
;

5306 
°328
;

5307 
°0
;

5308 
°332
:

5309 i‡–++
p
 =
≥
 )

5310 
_ã°_eof332
;

5312  (*
p
) ) {

5313 46: 
°230
;

5314 58: 
°306
;

5316 i‡–(*
p
) < 65 ) {

5317 i‡–48 <(*
p
) && (*p) <= 57 )

5318 
°333
;

5319 } i‡–(*
p
) > 70 ) {

5320 i‡–97 <(*
p
) && (*p) <= 102 )

5321 
°329
;

5323 
°329
;

5324 
°0
;

5325 
°333
:

5326 i‡–++
p
 =
≥
 )

5327 
_ã°_eof333
;

5329  (*
p
) ) {

5330 46: 
°230
;

5331 58: 
°306
;

5333 i‡–(*
p
) < 65 ) {

5334 i‡–48 <(*
p
) && (*p) <= 57 )

5335 
°330
;

5336 } i‡–(*
p
) > 70 ) {

5337 i‡–97 <(*
p
) && (*p) <= 102 )

5338 
°330
;

5340 
°330
;

5341 
°0
;

5342 
°334
:

5343 i‡–++
p
 =
≥
 )

5344 
_ã°_eof334
;

5346  (*
p
) ) {

5347 46: 
°230
;

5348 48: 
°335
;

5349 53: 
°336
;

5350 58: 
°306
;

5352 i‡–(*
p
) < 65 ) {

5353 i‡–49 <(*
p
) && (*p) <= 57 )

5354 
°328
;

5355 } i‡–(*
p
) > 70 ) {

5356 i‡–97 <(*
p
) && (*p) <= 102 )

5357 
°328
;

5359 
°328
;

5360 
°0
;

5361 
°335
:

5362 i‡–++
p
 =
≥
 )

5363 
_ã°_eof335
;

5365 i‡–(*
p
) == 58 )

5366 
°306
;

5367 i‡–(*
p
) < 65 ) {

5368 i‡–48 <(*
p
) && (*p) <= 57 )

5369 
°333
;

5370 } i‡–(*
p
) > 70 ) {

5371 i‡–97 <(*
p
) && (*p) <= 102 )

5372 
°329
;

5374 
°329
;

5375 
°0
;

5376 
°336
:

5377 i‡–++
p
 =
≥
 )

5378 
_ã°_eof336
;

5380  (*
p
) ) {

5381 48: 
°333
;

5382 58: 
°306
;

5384 i‡–(*
p
) < 65 ) {

5385 i‡–49 <(*
p
) && (*p) <= 57 )

5386 
°329
;

5387 } i‡–(*
p
) > 70 ) {

5388 i‡–97 <(*
p
) && (*p) <= 102 )

5389 
°329
;

5391 
°329
;

5392 
°0
;

5393 
°337
:

5394 i‡–++
p
 =
≥
 )

5395 
_ã°_eof337
;

5397 i‡–(*
p
) == 58 )

5398 
°306
;

5399 i‡–(*
p
) < 65 ) {

5400 i‡–48 <(*
p
) && (*p) <= 57 )

5401 
°328
;

5402 } i‡–(*
p
) > 70 ) {

5403 i‡–97 <(*
p
) && (*p) <= 102 )

5404 
°328
;

5406 
°328
;

5407 
°0
;

5408 
°338
:

5409 i‡–++
p
 =
≥
 )

5410 
_ã°_eof338
;

5412 i‡–(*
p
) < 48 ) {

5413 i‡–2 <(*
p
) && (*p) <= 3 )

5414 
°223
;

5415 } i‡–(*
p
) > 57 ) {

5416 i‡–(*
p
) > 70 ) {

5417 i‡–97 <(*
p
) && (*p) <= 102 )

5418 
°224
;

5419 } i‡–(*
p
) >= 65 )

5420 
°224
;

5422 
°224
;

5423 
°0
;

5424 
°339
:

5425 i‡–++
p
 =
≥
 )

5426 
_ã°_eof339
;

5428 i‡–2 <(*
p
) && (*p) <= 3 )

5429 
°223
;

5430 
°0
;

5431 
°340
:

5432 i‡–++
p
 =
≥
 )

5433 
_ã°_eof340
;

5435 i‡–(*
p
) == 3 )

5436 
°223
;

5437 
°0
;

5438 
°341
:

5439 i‡–++
p
 =
≥
 )

5440 
_ã°_eof341
;

5442 i‡–(*
p
) == 4 )

5443 
°223
;

5444 
°0
;

5445 
°342
:

5446 i‡–++
p
 =
≥
 )

5447 
_ã°_eof342
;

5449 i‡–(*
p
) == 58 )

5450 
°343
;

5451 
°0
;

5452 
°343
:

5453 i‡–++
p
 =
≥
 )

5454 
_ã°_eof343
;

5456  (*
p
) ) {

5457 49: 
°318
;

5458 50: 
°321
;

5459 93: 
°236
;

5461 i‡–(*
p
) < 48 ) {

5462 i‡–2 <(*
p
) && (*p) <= 5 )

5463 
°223
;

5464 } i‡–(*
p
) > 57 ) {

5465 i‡–(*
p
) > 70 ) {

5466 i‡–97 <(*
p
) && (*p) <= 102 )

5467 
°324
;

5468 } i‡–(*
p
) >= 65 )

5469 
°324
;

5471 
°302
;

5472 
°0
;

5473 
°344
:

5474 i‡–++
p
 =
≥
 )

5475 
_ã°_eof344
;

5477 i‡–(*
p
) < 65 ) {

5478 i‡–48 <(*
p
) && (*p) <= 57 )

5479 
°345
;

5480 } i‡–(*
p
) > 70 ) {

5481 i‡–97 <(*
p
) && (*p) <= 102 )

5482 
°345
;

5484 
°345
;

5485 
°0
;

5486 
°345
:

5487 i‡–++
p
 =
≥
 )

5488 
_ã°_eof345
;

5490 i‡–(*
p
) == 46 )

5491 
°346
;

5492 i‡–(*
p
) < 65 ) {

5493 i‡–48 <(*
p
) && (*p) <= 57 )

5494 
°345
;

5495 } i‡–(*
p
) > 70 ) {

5496 i‡–97 <(*
p
) && (*p) <= 102 )

5497 
°345
;

5499 
°345
;

5500 
°0
;

5501 
°346
:

5502 i‡–++
p
 =
≥
 )

5503 
_ã°_eof346
;

5505  (*
p
) ) {

5506 33: 
°347
;

5507 36: 
°347
;

5508 61: 
°347
;

5509 95: 
°347
;

5510 126: 
°347
;

5512 i‡–(*
p
) < 48 ) {

5513 i‡–38 <(*
p
) && (*p) <= 46 )

5514 
°347
;

5515 } i‡–(*
p
) > 59 ) {

5516 i‡–(*
p
) > 90 ) {

5517 i‡–97 <(*
p
) && (*p) <= 122 )

5518 
°347
;

5519 } i‡–(*
p
) >= 65 )

5520 
°347
;

5522 
°347
;

5523 
°0
;

5524 
°347
:

5525 i‡–++
p
 =
≥
 )

5526 
_ã°_eof347
;

5528  (*
p
) ) {

5529 33: 
°347
;

5530 36: 
°347
;

5531 61: 
°347
;

5532 93: 
°236
;

5533 95: 
°347
;

5534 126: 
°347
;

5536 i‡–(*
p
) < 48 ) {

5537 i‡–38 <(*
p
) && (*p) <= 46 )

5538 
°347
;

5539 } i‡–(*
p
) > 59 ) {

5540 i‡–(*
p
) > 90 ) {

5541 i‡–97 <(*
p
) && (*p) <= 122 )

5542 
°347
;

5543 } i‡–(*
p
) >= 65 )

5544 
°347
;

5546 
°347
;

5547 
°0
;

5549 
_ã°_eof2
: 
cs
 = 2; 
_ã°_eof
;

5550 
_ã°_eof3
: 
cs
 = 3; 
_ã°_eof
;

5551 
_ã°_eof4
: 
cs
 = 4; 
_ã°_eof
;

5552 
_ã°_eof5
: 
cs
 = 5; 
_ã°_eof
;

5553 
_ã°_eof6
: 
cs
 = 6; 
_ã°_eof
;

5554 
_ã°_eof7
: 
cs
 = 7; 
_ã°_eof
;

5555 
_ã°_eof8
: 
cs
 = 8; 
_ã°_eof
;

5556 
_ã°_eof9
: 
cs
 = 9; 
_ã°_eof
;

5557 
_ã°_eof10
: 
cs
 = 10; 
_ã°_eof
;

5558 
_ã°_eof11
: 
cs
 = 11; 
_ã°_eof
;

5559 
_ã°_eof12
: 
cs
 = 12; 
_ã°_eof
;

5560 
_ã°_eof13
: 
cs
 = 13; 
_ã°_eof
;

5561 
_ã°_eof14
: 
cs
 = 14; 
_ã°_eof
;

5562 
_ã°_eof15
: 
cs
 = 15; 
_ã°_eof
;

5563 
_ã°_eof16
: 
cs
 = 16; 
_ã°_eof
;

5564 
_ã°_eof17
: 
cs
 = 17; 
_ã°_eof
;

5565 
_ã°_eof348
: 
cs
 = 348; 
_ã°_eof
;

5566 
_ã°_eof18
: 
cs
 = 18; 
_ã°_eof
;

5567 
_ã°_eof19
: 
cs
 = 19; 
_ã°_eof
;

5568 
_ã°_eof20
: 
cs
 = 20; 
_ã°_eof
;

5569 
_ã°_eof21
: 
cs
 = 21; 
_ã°_eof
;

5570 
_ã°_eof22
: 
cs
 = 22; 
_ã°_eof
;

5571 
_ã°_eof23
: 
cs
 = 23; 
_ã°_eof
;

5572 
_ã°_eof24
: 
cs
 = 24; 
_ã°_eof
;

5573 
_ã°_eof25
: 
cs
 = 25; 
_ã°_eof
;

5574 
_ã°_eof26
: 
cs
 = 26; 
_ã°_eof
;

5575 
_ã°_eof27
: 
cs
 = 27; 
_ã°_eof
;

5576 
_ã°_eof28
: 
cs
 = 28; 
_ã°_eof
;

5577 
_ã°_eof29
: 
cs
 = 29; 
_ã°_eof
;

5578 
_ã°_eof30
: 
cs
 = 30; 
_ã°_eof
;

5579 
_ã°_eof31
: 
cs
 = 31; 
_ã°_eof
;

5580 
_ã°_eof32
: 
cs
 = 32; 
_ã°_eof
;

5581 
_ã°_eof33
: 
cs
 = 33; 
_ã°_eof
;

5582 
_ã°_eof34
: 
cs
 = 34; 
_ã°_eof
;

5583 
_ã°_eof35
: 
cs
 = 35; 
_ã°_eof
;

5584 
_ã°_eof36
: 
cs
 = 36; 
_ã°_eof
;

5585 
_ã°_eof37
: 
cs
 = 37; 
_ã°_eof
;

5586 
_ã°_eof38
: 
cs
 = 38; 
_ã°_eof
;

5587 
_ã°_eof39
: 
cs
 = 39; 
_ã°_eof
;

5588 
_ã°_eof40
: 
cs
 = 40; 
_ã°_eof
;

5589 
_ã°_eof41
: 
cs
 = 41; 
_ã°_eof
;

5590 
_ã°_eof42
: 
cs
 = 42; 
_ã°_eof
;

5591 
_ã°_eof43
: 
cs
 = 43; 
_ã°_eof
;

5592 
_ã°_eof44
: 
cs
 = 44; 
_ã°_eof
;

5593 
_ã°_eof45
: 
cs
 = 45; 
_ã°_eof
;

5594 
_ã°_eof46
: 
cs
 = 46; 
_ã°_eof
;

5595 
_ã°_eof47
: 
cs
 = 47; 
_ã°_eof
;

5596 
_ã°_eof48
: 
cs
 = 48; 
_ã°_eof
;

5597 
_ã°_eof49
: 
cs
 = 49; 
_ã°_eof
;

5598 
_ã°_eof50
: 
cs
 = 50; 
_ã°_eof
;

5599 
_ã°_eof51
: 
cs
 = 51; 
_ã°_eof
;

5600 
_ã°_eof52
: 
cs
 = 52; 
_ã°_eof
;

5601 
_ã°_eof53
: 
cs
 = 53; 
_ã°_eof
;

5602 
_ã°_eof54
: 
cs
 = 54; 
_ã°_eof
;

5603 
_ã°_eof55
: 
cs
 = 55; 
_ã°_eof
;

5604 
_ã°_eof56
: 
cs
 = 56; 
_ã°_eof
;

5605 
_ã°_eof57
: 
cs
 = 57; 
_ã°_eof
;

5606 
_ã°_eof58
: 
cs
 = 58; 
_ã°_eof
;

5607 
_ã°_eof59
: 
cs
 = 59; 
_ã°_eof
;

5608 
_ã°_eof60
: 
cs
 = 60; 
_ã°_eof
;

5609 
_ã°_eof61
: 
cs
 = 61; 
_ã°_eof
;

5610 
_ã°_eof62
: 
cs
 = 62; 
_ã°_eof
;

5611 
_ã°_eof63
: 
cs
 = 63; 
_ã°_eof
;

5612 
_ã°_eof64
: 
cs
 = 64; 
_ã°_eof
;

5613 
_ã°_eof65
: 
cs
 = 65; 
_ã°_eof
;

5614 
_ã°_eof66
: 
cs
 = 66; 
_ã°_eof
;

5615 
_ã°_eof67
: 
cs
 = 67; 
_ã°_eof
;

5616 
_ã°_eof68
: 
cs
 = 68; 
_ã°_eof
;

5617 
_ã°_eof69
: 
cs
 = 69; 
_ã°_eof
;

5618 
_ã°_eof70
: 
cs
 = 70; 
_ã°_eof
;

5619 
_ã°_eof71
: 
cs
 = 71; 
_ã°_eof
;

5620 
_ã°_eof72
: 
cs
 = 72; 
_ã°_eof
;

5621 
_ã°_eof73
: 
cs
 = 73; 
_ã°_eof
;

5622 
_ã°_eof74
: 
cs
 = 74; 
_ã°_eof
;

5623 
_ã°_eof75
: 
cs
 = 75; 
_ã°_eof
;

5624 
_ã°_eof76
: 
cs
 = 76; 
_ã°_eof
;

5625 
_ã°_eof77
: 
cs
 = 77; 
_ã°_eof
;

5626 
_ã°_eof78
: 
cs
 = 78; 
_ã°_eof
;

5627 
_ã°_eof79
: 
cs
 = 79; 
_ã°_eof
;

5628 
_ã°_eof80
: 
cs
 = 80; 
_ã°_eof
;

5629 
_ã°_eof81
: 
cs
 = 81; 
_ã°_eof
;

5630 
_ã°_eof82
: 
cs
 = 82; 
_ã°_eof
;

5631 
_ã°_eof83
: 
cs
 = 83; 
_ã°_eof
;

5632 
_ã°_eof84
: 
cs
 = 84; 
_ã°_eof
;

5633 
_ã°_eof85
: 
cs
 = 85; 
_ã°_eof
;

5634 
_ã°_eof86
: 
cs
 = 86; 
_ã°_eof
;

5635 
_ã°_eof87
: 
cs
 = 87; 
_ã°_eof
;

5636 
_ã°_eof88
: 
cs
 = 88; 
_ã°_eof
;

5637 
_ã°_eof89
: 
cs
 = 89; 
_ã°_eof
;

5638 
_ã°_eof90
: 
cs
 = 90; 
_ã°_eof
;

5639 
_ã°_eof91
: 
cs
 = 91; 
_ã°_eof
;

5640 
_ã°_eof92
: 
cs
 = 92; 
_ã°_eof
;

5641 
_ã°_eof93
: 
cs
 = 93; 
_ã°_eof
;

5642 
_ã°_eof94
: 
cs
 = 94; 
_ã°_eof
;

5643 
_ã°_eof95
: 
cs
 = 95; 
_ã°_eof
;

5644 
_ã°_eof96
: 
cs
 = 96; 
_ã°_eof
;

5645 
_ã°_eof97
: 
cs
 = 97; 
_ã°_eof
;

5646 
_ã°_eof98
: 
cs
 = 98; 
_ã°_eof
;

5647 
_ã°_eof99
: 
cs
 = 99; 
_ã°_eof
;

5648 
_ã°_eof100
: 
cs
 = 100; 
_ã°_eof
;

5649 
_ã°_eof101
: 
cs
 = 101; 
_ã°_eof
;

5650 
_ã°_eof102
: 
cs
 = 102; 
_ã°_eof
;

5651 
_ã°_eof103
: 
cs
 = 103; 
_ã°_eof
;

5652 
_ã°_eof104
: 
cs
 = 104; 
_ã°_eof
;

5653 
_ã°_eof105
: 
cs
 = 105; 
_ã°_eof
;

5654 
_ã°_eof106
: 
cs
 = 106; 
_ã°_eof
;

5655 
_ã°_eof107
: 
cs
 = 107; 
_ã°_eof
;

5656 
_ã°_eof108
: 
cs
 = 108; 
_ã°_eof
;

5657 
_ã°_eof109
: 
cs
 = 109; 
_ã°_eof
;

5658 
_ã°_eof110
: 
cs
 = 110; 
_ã°_eof
;

5659 
_ã°_eof111
: 
cs
 = 111; 
_ã°_eof
;

5660 
_ã°_eof112
: 
cs
 = 112; 
_ã°_eof
;

5661 
_ã°_eof113
: 
cs
 = 113; 
_ã°_eof
;

5662 
_ã°_eof114
: 
cs
 = 114; 
_ã°_eof
;

5663 
_ã°_eof115
: 
cs
 = 115; 
_ã°_eof
;

5664 
_ã°_eof116
: 
cs
 = 116; 
_ã°_eof
;

5665 
_ã°_eof117
: 
cs
 = 117; 
_ã°_eof
;

5666 
_ã°_eof118
: 
cs
 = 118; 
_ã°_eof
;

5667 
_ã°_eof119
: 
cs
 = 119; 
_ã°_eof
;

5668 
_ã°_eof120
: 
cs
 = 120; 
_ã°_eof
;

5669 
_ã°_eof121
: 
cs
 = 121; 
_ã°_eof
;

5670 
_ã°_eof122
: 
cs
 = 122; 
_ã°_eof
;

5671 
_ã°_eof123
: 
cs
 = 123; 
_ã°_eof
;

5672 
_ã°_eof124
: 
cs
 = 124; 
_ã°_eof
;

5673 
_ã°_eof125
: 
cs
 = 125; 
_ã°_eof
;

5674 
_ã°_eof126
: 
cs
 = 126; 
_ã°_eof
;

5675 
_ã°_eof127
: 
cs
 = 127; 
_ã°_eof
;

5676 
_ã°_eof128
: 
cs
 = 128; 
_ã°_eof
;

5677 
_ã°_eof129
: 
cs
 = 129; 
_ã°_eof
;

5678 
_ã°_eof130
: 
cs
 = 130; 
_ã°_eof
;

5679 
_ã°_eof131
: 
cs
 = 131; 
_ã°_eof
;

5680 
_ã°_eof132
: 
cs
 = 132; 
_ã°_eof
;

5681 
_ã°_eof133
: 
cs
 = 133; 
_ã°_eof
;

5682 
_ã°_eof134
: 
cs
 = 134; 
_ã°_eof
;

5683 
_ã°_eof135
: 
cs
 = 135; 
_ã°_eof
;

5684 
_ã°_eof136
: 
cs
 = 136; 
_ã°_eof
;

5685 
_ã°_eof137
: 
cs
 = 137; 
_ã°_eof
;

5686 
_ã°_eof138
: 
cs
 = 138; 
_ã°_eof
;

5687 
_ã°_eof139
: 
cs
 = 139; 
_ã°_eof
;

5688 
_ã°_eof140
: 
cs
 = 140; 
_ã°_eof
;

5689 
_ã°_eof141
: 
cs
 = 141; 
_ã°_eof
;

5690 
_ã°_eof142
: 
cs
 = 142; 
_ã°_eof
;

5691 
_ã°_eof143
: 
cs
 = 143; 
_ã°_eof
;

5692 
_ã°_eof144
: 
cs
 = 144; 
_ã°_eof
;

5693 
_ã°_eof145
: 
cs
 = 145; 
_ã°_eof
;

5694 
_ã°_eof146
: 
cs
 = 146; 
_ã°_eof
;

5695 
_ã°_eof147
: 
cs
 = 147; 
_ã°_eof
;

5696 
_ã°_eof148
: 
cs
 = 148; 
_ã°_eof
;

5697 
_ã°_eof149
: 
cs
 = 149; 
_ã°_eof
;

5698 
_ã°_eof150
: 
cs
 = 150; 
_ã°_eof
;

5699 
_ã°_eof151
: 
cs
 = 151; 
_ã°_eof
;

5700 
_ã°_eof152
: 
cs
 = 152; 
_ã°_eof
;

5701 
_ã°_eof153
: 
cs
 = 153; 
_ã°_eof
;

5702 
_ã°_eof154
: 
cs
 = 154; 
_ã°_eof
;

5703 
_ã°_eof155
: 
cs
 = 155; 
_ã°_eof
;

5704 
_ã°_eof156
: 
cs
 = 156; 
_ã°_eof
;

5705 
_ã°_eof157
: 
cs
 = 157; 
_ã°_eof
;

5706 
_ã°_eof158
: 
cs
 = 158; 
_ã°_eof
;

5707 
_ã°_eof159
: 
cs
 = 159; 
_ã°_eof
;

5708 
_ã°_eof160
: 
cs
 = 160; 
_ã°_eof
;

5709 
_ã°_eof161
: 
cs
 = 161; 
_ã°_eof
;

5710 
_ã°_eof162
: 
cs
 = 162; 
_ã°_eof
;

5711 
_ã°_eof163
: 
cs
 = 163; 
_ã°_eof
;

5712 
_ã°_eof164
: 
cs
 = 164; 
_ã°_eof
;

5713 
_ã°_eof165
: 
cs
 = 165; 
_ã°_eof
;

5714 
_ã°_eof166
: 
cs
 = 166; 
_ã°_eof
;

5715 
_ã°_eof167
: 
cs
 = 167; 
_ã°_eof
;

5716 
_ã°_eof168
: 
cs
 = 168; 
_ã°_eof
;

5717 
_ã°_eof169
: 
cs
 = 169; 
_ã°_eof
;

5718 
_ã°_eof170
: 
cs
 = 170; 
_ã°_eof
;

5719 
_ã°_eof171
: 
cs
 = 171; 
_ã°_eof
;

5720 
_ã°_eof172
: 
cs
 = 172; 
_ã°_eof
;

5721 
_ã°_eof173
: 
cs
 = 173; 
_ã°_eof
;

5722 
_ã°_eof174
: 
cs
 = 174; 
_ã°_eof
;

5723 
_ã°_eof175
: 
cs
 = 175; 
_ã°_eof
;

5724 
_ã°_eof176
: 
cs
 = 176; 
_ã°_eof
;

5725 
_ã°_eof177
: 
cs
 = 177; 
_ã°_eof
;

5726 
_ã°_eof178
: 
cs
 = 178; 
_ã°_eof
;

5727 
_ã°_eof179
: 
cs
 = 179; 
_ã°_eof
;

5728 
_ã°_eof180
: 
cs
 = 180; 
_ã°_eof
;

5729 
_ã°_eof181
: 
cs
 = 181; 
_ã°_eof
;

5730 
_ã°_eof182
: 
cs
 = 182; 
_ã°_eof
;

5731 
_ã°_eof183
: 
cs
 = 183; 
_ã°_eof
;

5732 
_ã°_eof184
: 
cs
 = 184; 
_ã°_eof
;

5733 
_ã°_eof185
: 
cs
 = 185; 
_ã°_eof
;

5734 
_ã°_eof186
: 
cs
 = 186; 
_ã°_eof
;

5735 
_ã°_eof187
: 
cs
 = 187; 
_ã°_eof
;

5736 
_ã°_eof188
: 
cs
 = 188; 
_ã°_eof
;

5737 
_ã°_eof189
: 
cs
 = 189; 
_ã°_eof
;

5738 
_ã°_eof190
: 
cs
 = 190; 
_ã°_eof
;

5739 
_ã°_eof191
: 
cs
 = 191; 
_ã°_eof
;

5740 
_ã°_eof192
: 
cs
 = 192; 
_ã°_eof
;

5741 
_ã°_eof193
: 
cs
 = 193; 
_ã°_eof
;

5742 
_ã°_eof194
: 
cs
 = 194; 
_ã°_eof
;

5743 
_ã°_eof195
: 
cs
 = 195; 
_ã°_eof
;

5744 
_ã°_eof196
: 
cs
 = 196; 
_ã°_eof
;

5745 
_ã°_eof197
: 
cs
 = 197; 
_ã°_eof
;

5746 
_ã°_eof349
: 
cs
 = 349; 
_ã°_eof
;

5747 
_ã°_eof198
: 
cs
 = 198; 
_ã°_eof
;

5748 
_ã°_eof199
: 
cs
 = 199; 
_ã°_eof
;

5749 
_ã°_eof200
: 
cs
 = 200; 
_ã°_eof
;

5750 
_ã°_eof201
: 
cs
 = 201; 
_ã°_eof
;

5751 
_ã°_eof202
: 
cs
 = 202; 
_ã°_eof
;

5752 
_ã°_eof203
: 
cs
 = 203; 
_ã°_eof
;

5753 
_ã°_eof204
: 
cs
 = 204; 
_ã°_eof
;

5754 
_ã°_eof205
: 
cs
 = 205; 
_ã°_eof
;

5755 
_ã°_eof206
: 
cs
 = 206; 
_ã°_eof
;

5756 
_ã°_eof207
: 
cs
 = 207; 
_ã°_eof
;

5757 
_ã°_eof208
: 
cs
 = 208; 
_ã°_eof
;

5758 
_ã°_eof209
: 
cs
 = 209; 
_ã°_eof
;

5759 
_ã°_eof210
: 
cs
 = 210; 
_ã°_eof
;

5760 
_ã°_eof211
: 
cs
 = 211; 
_ã°_eof
;

5761 
_ã°_eof212
: 
cs
 = 212; 
_ã°_eof
;

5762 
_ã°_eof213
: 
cs
 = 213; 
_ã°_eof
;

5763 
_ã°_eof214
: 
cs
 = 214; 
_ã°_eof
;

5764 
_ã°_eof215
: 
cs
 = 215; 
_ã°_eof
;

5765 
_ã°_eof216
: 
cs
 = 216; 
_ã°_eof
;

5766 
_ã°_eof217
: 
cs
 = 217; 
_ã°_eof
;

5767 
_ã°_eof218
: 
cs
 = 218; 
_ã°_eof
;

5768 
_ã°_eof219
: 
cs
 = 219; 
_ã°_eof
;

5769 
_ã°_eof220
: 
cs
 = 220; 
_ã°_eof
;

5770 
_ã°_eof221
: 
cs
 = 221; 
_ã°_eof
;

5771 
_ã°_eof222
: 
cs
 = 222; 
_ã°_eof
;

5772 
_ã°_eof223
: 
cs
 = 223; 
_ã°_eof
;

5773 
_ã°_eof224
: 
cs
 = 224; 
_ã°_eof
;

5774 
_ã°_eof225
: 
cs
 = 225; 
_ã°_eof
;

5775 
_ã°_eof226
: 
cs
 = 226; 
_ã°_eof
;

5776 
_ã°_eof227
: 
cs
 = 227; 
_ã°_eof
;

5777 
_ã°_eof228
: 
cs
 = 228; 
_ã°_eof
;

5778 
_ã°_eof229
: 
cs
 = 229; 
_ã°_eof
;

5779 
_ã°_eof230
: 
cs
 = 230; 
_ã°_eof
;

5780 
_ã°_eof231
: 
cs
 = 231; 
_ã°_eof
;

5781 
_ã°_eof232
: 
cs
 = 232; 
_ã°_eof
;

5782 
_ã°_eof233
: 
cs
 = 233; 
_ã°_eof
;

5783 
_ã°_eof234
: 
cs
 = 234; 
_ã°_eof
;

5784 
_ã°_eof235
: 
cs
 = 235; 
_ã°_eof
;

5785 
_ã°_eof236
: 
cs
 = 236; 
_ã°_eof
;

5786 
_ã°_eof237
: 
cs
 = 237; 
_ã°_eof
;

5787 
_ã°_eof238
: 
cs
 = 238; 
_ã°_eof
;

5788 
_ã°_eof239
: 
cs
 = 239; 
_ã°_eof
;

5789 
_ã°_eof240
: 
cs
 = 240; 
_ã°_eof
;

5790 
_ã°_eof241
: 
cs
 = 241; 
_ã°_eof
;

5791 
_ã°_eof242
: 
cs
 = 242; 
_ã°_eof
;

5792 
_ã°_eof243
: 
cs
 = 243; 
_ã°_eof
;

5793 
_ã°_eof244
: 
cs
 = 244; 
_ã°_eof
;

5794 
_ã°_eof245
: 
cs
 = 245; 
_ã°_eof
;

5795 
_ã°_eof246
: 
cs
 = 246; 
_ã°_eof
;

5796 
_ã°_eof247
: 
cs
 = 247; 
_ã°_eof
;

5797 
_ã°_eof248
: 
cs
 = 248; 
_ã°_eof
;

5798 
_ã°_eof249
: 
cs
 = 249; 
_ã°_eof
;

5799 
_ã°_eof250
: 
cs
 = 250; 
_ã°_eof
;

5800 
_ã°_eof251
: 
cs
 = 251; 
_ã°_eof
;

5801 
_ã°_eof252
: 
cs
 = 252; 
_ã°_eof
;

5802 
_ã°_eof253
: 
cs
 = 253; 
_ã°_eof
;

5803 
_ã°_eof254
: 
cs
 = 254; 
_ã°_eof
;

5804 
_ã°_eof255
: 
cs
 = 255; 
_ã°_eof
;

5805 
_ã°_eof256
: 
cs
 = 256; 
_ã°_eof
;

5806 
_ã°_eof257
: 
cs
 = 257; 
_ã°_eof
;

5807 
_ã°_eof258
: 
cs
 = 258; 
_ã°_eof
;

5808 
_ã°_eof259
: 
cs
 = 259; 
_ã°_eof
;

5809 
_ã°_eof260
: 
cs
 = 260; 
_ã°_eof
;

5810 
_ã°_eof261
: 
cs
 = 261; 
_ã°_eof
;

5811 
_ã°_eof262
: 
cs
 = 262; 
_ã°_eof
;

5812 
_ã°_eof263
: 
cs
 = 263; 
_ã°_eof
;

5813 
_ã°_eof264
: 
cs
 = 264; 
_ã°_eof
;

5814 
_ã°_eof265
: 
cs
 = 265; 
_ã°_eof
;

5815 
_ã°_eof266
: 
cs
 = 266; 
_ã°_eof
;

5816 
_ã°_eof267
: 
cs
 = 267; 
_ã°_eof
;

5817 
_ã°_eof268
: 
cs
 = 268; 
_ã°_eof
;

5818 
_ã°_eof269
: 
cs
 = 269; 
_ã°_eof
;

5819 
_ã°_eof270
: 
cs
 = 270; 
_ã°_eof
;

5820 
_ã°_eof271
: 
cs
 = 271; 
_ã°_eof
;

5821 
_ã°_eof272
: 
cs
 = 272; 
_ã°_eof
;

5822 
_ã°_eof273
: 
cs
 = 273; 
_ã°_eof
;

5823 
_ã°_eof274
: 
cs
 = 274; 
_ã°_eof
;

5824 
_ã°_eof275
: 
cs
 = 275; 
_ã°_eof
;

5825 
_ã°_eof276
: 
cs
 = 276; 
_ã°_eof
;

5826 
_ã°_eof277
: 
cs
 = 277; 
_ã°_eof
;

5827 
_ã°_eof278
: 
cs
 = 278; 
_ã°_eof
;

5828 
_ã°_eof279
: 
cs
 = 279; 
_ã°_eof
;

5829 
_ã°_eof280
: 
cs
 = 280; 
_ã°_eof
;

5830 
_ã°_eof281
: 
cs
 = 281; 
_ã°_eof
;

5831 
_ã°_eof282
: 
cs
 = 282; 
_ã°_eof
;

5832 
_ã°_eof283
: 
cs
 = 283; 
_ã°_eof
;

5833 
_ã°_eof284
: 
cs
 = 284; 
_ã°_eof
;

5834 
_ã°_eof285
: 
cs
 = 285; 
_ã°_eof
;

5835 
_ã°_eof286
: 
cs
 = 286; 
_ã°_eof
;

5836 
_ã°_eof287
: 
cs
 = 287; 
_ã°_eof
;

5837 
_ã°_eof288
: 
cs
 = 288; 
_ã°_eof
;

5838 
_ã°_eof289
: 
cs
 = 289; 
_ã°_eof
;

5839 
_ã°_eof290
: 
cs
 = 290; 
_ã°_eof
;

5840 
_ã°_eof291
: 
cs
 = 291; 
_ã°_eof
;

5841 
_ã°_eof292
: 
cs
 = 292; 
_ã°_eof
;

5842 
_ã°_eof293
: 
cs
 = 293; 
_ã°_eof
;

5843 
_ã°_eof294
: 
cs
 = 294; 
_ã°_eof
;

5844 
_ã°_eof295
: 
cs
 = 295; 
_ã°_eof
;

5845 
_ã°_eof296
: 
cs
 = 296; 
_ã°_eof
;

5846 
_ã°_eof297
: 
cs
 = 297; 
_ã°_eof
;

5847 
_ã°_eof298
: 
cs
 = 298; 
_ã°_eof
;

5848 
_ã°_eof299
: 
cs
 = 299; 
_ã°_eof
;

5849 
_ã°_eof300
: 
cs
 = 300; 
_ã°_eof
;

5850 
_ã°_eof301
: 
cs
 = 301; 
_ã°_eof
;

5851 
_ã°_eof302
: 
cs
 = 302; 
_ã°_eof
;

5852 
_ã°_eof303
: 
cs
 = 303; 
_ã°_eof
;

5853 
_ã°_eof304
: 
cs
 = 304; 
_ã°_eof
;

5854 
_ã°_eof305
: 
cs
 = 305; 
_ã°_eof
;

5855 
_ã°_eof306
: 
cs
 = 306; 
_ã°_eof
;

5856 
_ã°_eof307
: 
cs
 = 307; 
_ã°_eof
;

5857 
_ã°_eof308
: 
cs
 = 308; 
_ã°_eof
;

5858 
_ã°_eof309
: 
cs
 = 309; 
_ã°_eof
;

5859 
_ã°_eof310
: 
cs
 = 310; 
_ã°_eof
;

5860 
_ã°_eof311
: 
cs
 = 311; 
_ã°_eof
;

5861 
_ã°_eof312
: 
cs
 = 312; 
_ã°_eof
;

5862 
_ã°_eof313
: 
cs
 = 313; 
_ã°_eof
;

5863 
_ã°_eof314
: 
cs
 = 314; 
_ã°_eof
;

5864 
_ã°_eof315
: 
cs
 = 315; 
_ã°_eof
;

5865 
_ã°_eof316
: 
cs
 = 316; 
_ã°_eof
;

5866 
_ã°_eof317
: 
cs
 = 317; 
_ã°_eof
;

5867 
_ã°_eof318
: 
cs
 = 318; 
_ã°_eof
;

5868 
_ã°_eof319
: 
cs
 = 319; 
_ã°_eof
;

5869 
_ã°_eof320
: 
cs
 = 320; 
_ã°_eof
;

5870 
_ã°_eof321
: 
cs
 = 321; 
_ã°_eof
;

5871 
_ã°_eof322
: 
cs
 = 322; 
_ã°_eof
;

5872 
_ã°_eof323
: 
cs
 = 323; 
_ã°_eof
;

5873 
_ã°_eof324
: 
cs
 = 324; 
_ã°_eof
;

5874 
_ã°_eof325
: 
cs
 = 325; 
_ã°_eof
;

5875 
_ã°_eof326
: 
cs
 = 326; 
_ã°_eof
;

5876 
_ã°_eof327
: 
cs
 = 327; 
_ã°_eof
;

5877 
_ã°_eof328
: 
cs
 = 328; 
_ã°_eof
;

5878 
_ã°_eof329
: 
cs
 = 329; 
_ã°_eof
;

5879 
_ã°_eof330
: 
cs
 = 330; 
_ã°_eof
;

5880 
_ã°_eof331
: 
cs
 = 331; 
_ã°_eof
;

5881 
_ã°_eof332
: 
cs
 = 332; 
_ã°_eof
;

5882 
_ã°_eof333
: 
cs
 = 333; 
_ã°_eof
;

5883 
_ã°_eof334
: 
cs
 = 334; 
_ã°_eof
;

5884 
_ã°_eof335
: 
cs
 = 335; 
_ã°_eof
;

5885 
_ã°_eof336
: 
cs
 = 336; 
_ã°_eof
;

5886 
_ã°_eof337
: 
cs
 = 337; 
_ã°_eof
;

5887 
_ã°_eof338
: 
cs
 = 338; 
_ã°_eof
;

5888 
_ã°_eof339
: 
cs
 = 339; 
_ã°_eof
;

5889 
_ã°_eof340
: 
cs
 = 340; 
_ã°_eof
;

5890 
_ã°_eof341
: 
cs
 = 341; 
_ã°_eof
;

5891 
_ã°_eof342
: 
cs
 = 342; 
_ã°_eof
;

5892 
_ã°_eof343
: 
cs
 = 343; 
_ã°_eof
;

5893 
_ã°_eof344
: 
cs
 = 344; 
_ã°_eof
;

5894 
_ã°_eof345
: 
cs
 = 345; 
_ã°_eof
;

5895 
_ã°_eof346
: 
cs
 = 346; 
_ã°_eof
;

5896 
_ã°_eof347
: 
cs
 = 347; 
_ã°_eof
;

5898 
_ã°_eof
: {}

5899 
_out
: {}

5904 
	`as£π
(
p
 <
≥
 && "Buffer overflowáfterÖarsing.");

5906 i‡(!
	`hâp_∑r£r_has_îr‹
(
∑r£r
)) {

5907 
∑r£r
->
cs
 = cs;

5910 
∑r£r
->
ƒód
 +
p
 - (
buf„r
 + 
off
);

5912 
	`as£π
(
∑r£r
->
ƒód
 <
Àn
 && "nreadÜongerÅhanÜength");

5913 
	`as£π
(
∑r£r
->
body_°¨t
 <
Àn
 && "body startsáfter bufferÉnd");

5914 
	`as£π
(
∑r£r
->
m¨k
 < 
Àn
 && "mark isáfter bufferÉnd");

5915 
	`as£π
(
∑r£r
->
fõld_Àn
 <
Àn
 && "field hasÜengthÜongerÅhan whole buffer");

5916 
	`as£π
(
∑r£r
->
fõld_°¨t
 < 
Àn
 && "field startsáfter bufferÉnd");

5918 (
∑r£r
->
ƒód
);

5919 
	}
}

5921 
	$hâp_∑r£r_föish
(
hâp_∑r£r
 *
∑r£r
)

5923 i‡(
	`hâp_∑r£r_has_îr‹
(
∑r£r
) ) {

5925 } i‡(
	`hâp_∑r£r_is_föished
(
∑r£r
) ) {

5930 
	}
}

5932 
	$hâp_∑r£r_has_îr‹
(
hâp_∑r£r
 *
∑r£r
) {

5933  
∑r£r
->
cs
 =
hâp_∑r£r_îr‹
;

5934 
	}
}

5936 
	$hâp_∑r£r_is_föished
(
hâp_∑r£r
 *
∑r£r
) {

5937  
∑r£r
->
cs
 >
hâp_∑r£r_fú°_föÆ
;

5938 
	}
}

	@http11/http11_parser.h

2 #i‚de‡
hâp11_∑r£r_h


3 
	#hâp11_∑r£r_h


	)

5 
	~<hâp11/hâp11_comm⁄.h
>

7 
	shâp_∑r£r
 {

8 
	mcs
;

9 
size_t
 
	mbody_°¨t
;

10 
	mc⁄ã¡_Àn
;

11 
size_t
 
	mƒód
;

12 
size_t
 
	mm¨k
;

13 
size_t
 
	mfõld_°¨t
;

14 
size_t
 
	mfõld_Àn
;

15 
size_t
 
	mquîy_°¨t
;

16 
	mxml_£¡
;

17 
	mjs⁄_£¡
;

19 *
	md©a
;

21 
fõld_cb
 
	mhâp_fõld
;

22 
ñemít_cb
 
	mªque°_mëhod
;

23 
ñemít_cb
 
	mªque°_uri
;

24 
ñemít_cb
 
	m‰agmít
;

25 
ñemít_cb
 
	mªque°_∑th
;

26 
ñemít_cb
 
	mquîy_°rög
;

27 
ñemít_cb
 
	mhâp_vîsi⁄
;

28 
ñemít_cb
 
	mhódî_d⁄e
;

30 } 
	thâp_∑r£r
;

32 
hâp_∑r£r_öô
(
hâp_∑r£r
 *
∑r£r
);

33 
hâp_∑r£r_föish
(
hâp_∑r£r
 *
∑r£r
);

34 
size_t
 
hâp_∑r£r_execuã
(
hâp_∑r£r
 *
∑r£r
, c⁄° *
d©a
, size_à
Àn
, size_à
off
);

35 
hâp_∑r£r_has_îr‹
(
hâp_∑r£r
 *
∑r£r
);

36 
hâp_∑r£r_is_föished
(
hâp_∑r£r
 *
∑r£r
);

38 
	#hâp_∑r£r_ƒód
(
∑r£r
Ë’¨£r)->
ƒód


	)

	@http11/httpclient_parser.c

37 
	~"hâp˛õ¡_∑r£r.h
"

38 
	~<°dio.h
>

39 
	~<as£π.h
>

40 
	~<°dlib.h
>

41 
	~<˘y≥.h
>

42 
	~<°rög.h
>

43 
	~"dbg.h
"

45 
	#LEN
(
AT
, 
FPC
Ë(FPC - 
buf„r
 - 
∑r£r
->AT)

	)

46 
	#MARK
(
M
,
FPC
Ë(
∑r£r
->M = (FPCË- 
buf„r
)

	)

47 
	#PTR_TO
(
F
Ë(
buf„r
 + 
∑r£r
->F)

	)

58 c⁄° 
	ghâp˛õ¡_∑r£r_°¨t
 = 1;

59 c⁄° 
	ghâp˛õ¡_∑r£r_fú°_föÆ
 = 120;

60 c⁄° 
	ghâp˛õ¡_∑r£r_îr‹
 = 0;

62 c⁄° 
	ghâp˛õ¡_∑r£r_í_maö
 = 1;

67 
	$hâp˛õ¡_∑r£r_öô
(
hâp˛õ¡_∑r£r
 *
∑r£r
) {

68 
cs
 = 0;

73 
cs
 = 
hâp˛õ¡_∑r£r_°¨t
;

78 
∑r£r
->
cs
 = cs;

79 
∑r£r
->
body_°¨t
 = 0;

80 
∑r£r
->
c⁄ã¡_Àn
 = -1;

81 
∑r£r
->
chunked
 = 0;

82 
∑r£r
->
chunks_d⁄e
 = 0;

83 
∑r£r
->
m¨k
 = 0;

84 
∑r£r
->
ƒód
 = 0;

85 
∑r£r
->
fõld_Àn
 = 0;

86 
∑r£r
->
fõld_°¨t
 = 0;

87 
∑r£r
->
˛o£
 = 0;

90 
	}
}

94 
	$hâp˛õ¡_∑r£r_execuã
(
hâp˛õ¡_∑r£r
 *
∑r£r
, c⁄° *
buf„r
, 
size_t
 
Àn
, size_à
off
)

96 c⁄° *
p
, *
≥
;

97 
cs
 = 
∑r£r
->cs;

99 
	`as£π
(
off
 <
Àn
 && "offsetÖastÉnd of buffer");

101 
p
 = 
buf„r
+
off
;

102 
≥
 = 
buf„r
+
Àn
;

104 
	`as£π
(*
≥
 == '\0' && "pointer doesÇotÉnd on NUL");

105 
	`as£π
(
≥
 - 
p
 =()
Àn
 - ()
off
 && "pointersáren't same distance");

111 i‡–
p
 =
≥
 )

112 
_ã°_eof
;

113  
cs
 )

116 i‡–(*
p
) == 72 )

117 
å2
;

118 i‡–(*
p
) < 65 ) {

119 i‡–48 <(*
p
) && (*p) <= 57 )

120 
å0
;

121 } i‡–(*
p
) > 70 ) {

122 i‡–97 <(*
p
) && (*p) <= 102 )

123 
å0
;

125 
å0
;

126 
°0
;

127 
°0
:

128 
cs
 = 0;

129 
_out
;

130 
å0
:

132 {
	`MARK
(
m¨k
, 
p
); }

133 
°2
;

134 
°2
:

135 i‡–++
p
 =
≥
 )

136 
_ã°_eof2
;

139  (*
p
) ) {

140 10: 
å3
;

141 13: 
å4
;

142 59: 
å6
;

144 i‡–(*
p
) < 65 ) {

145 i‡–48 <(*
p
) && (*p) <= 57 )

146 
°2
;

147 } i‡–(*
p
) > 70 ) {

148 i‡–97 <(*
p
) && (*p) <= 102 )

149 
°2
;

151 
°2
;

152 
°0
;

153 
å3
:

156 
∑r£r
->
chunked
 = 1;

157 
∑r£r
->
c⁄ã¡_Àn
 = 
	`°πﬁ
(
	`PTR_TO
(
m¨k
), 
NULL
, 16);

158 
∑r£r
->
chunks_d⁄e
 =Ö¨£r->
c⁄ã¡_Àn
 <= 0;

160 if(
∑r£r
->
chunks_d⁄e
 &&Ö¨£r->
œ°_chunk
) {

161 
∑r£r
->
	`œ°_chunk
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

162 } if(
∑r£r
->
chunk_size
 !
NULL
) {

163 
∑r£r
->
	`chunk_size
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

168 
∑r£r
->
body_°¨t
 = 
p
 - 
buf„r
 + 1;

169 if(
∑r£r
->
hódî_d⁄e
 !
NULL
)

170 
∑r£r
->
	`hódî_d⁄e
’¨£r->
d©a
, 
p
 + 1, 
≥
 -Ö - 1);

171 {
p
++; 
cs
 = 120; 
_out
;}

173 
°120
;

174 
å7
:

177 
∑r£r
->
body_°¨t
 = 
p
 - 
buf„r
 + 1;

178 if(
∑r£r
->
hódî_d⁄e
 !
NULL
)

179 
∑r£r
->
	`hódî_d⁄e
’¨£r->
d©a
, 
p
 + 1, 
≥
 -Ö - 1);

180 {
p
++; 
cs
 = 120; 
_out
;}

182 
°120
;

183 
å9
:

186 
∑r£r
->
fõld_Àn
 = 
	`LEN
(
fõld_°¨t
, 
p
);

189 { 
	`MARK
(
m¨k
, 
p
); }

192 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

193 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

198 
∑r£r
->
body_°¨t
 = 
p
 - 
buf„r
 + 1;

199 if(
∑r£r
->
hódî_d⁄e
 !
NULL
)

200 
∑r£r
->
	`hódî_d⁄e
’¨£r->
d©a
, 
p
 + 1, 
≥
 -Ö - 1);

201 {
p
++; 
cs
 = 120; 
_out
;}

203 
°120
;

204 
å15
:

207 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

208 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

213 
∑r£r
->
body_°¨t
 = 
p
 - 
buf„r
 + 1;

214 if(
∑r£r
->
hódî_d⁄e
 !
NULL
)

215 
∑r£r
->
	`hódî_d⁄e
’¨£r->
d©a
, 
p
 + 1, 
≥
 -Ö - 1);

216 {
p
++; 
cs
 = 120; 
_out
;}

218 
°120
;

219 
å74
:

222 
∑r£r
->
˛o£
 = 1;

226 
∑r£r
->
body_°¨t
 = 
p
 - 
buf„r
 + 1;

227 if(
∑r£r
->
hódî_d⁄e
 !
NULL
)

228 
∑r£r
->
	`hódî_d⁄e
’¨£r->
d©a
, 
p
 + 1, 
≥
 -Ö - 1);

229 {
p
++; 
cs
 = 120; 
_out
;}

231 
°120
;

232 
°120
:

233 i‡–++
p
 =
≥
 )

234 
_ã°_eof120
;

237 
°0
;

238 
å4
:

241 
∑r£r
->
chunked
 = 1;

242 
∑r£r
->
c⁄ã¡_Àn
 = 
	`°πﬁ
(
	`PTR_TO
(
m¨k
), 
NULL
, 16);

243 
∑r£r
->
chunks_d⁄e
 =Ö¨£r->
c⁄ã¡_Àn
 <= 0;

245 if(
∑r£r
->
chunks_d⁄e
 &&Ö¨£r->
œ°_chunk
) {

246 
∑r£r
->
	`œ°_chunk
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

247 } if(
∑r£r
->
chunk_size
 !
NULL
) {

248 
∑r£r
->
	`chunk_size
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

251 
°3
;

252 
å10
:

255 
∑r£r
->
fõld_Àn
 = 
	`LEN
(
fõld_°¨t
, 
p
);

258 { 
	`MARK
(
m¨k
, 
p
); }

261 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

262 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

265 
°3
;

266 
å16
:

269 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

270 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

273 
°3
;

274 
å75
:

277 
∑r£r
->
˛o£
 = 1;

279 
°3
;

280 
°3
:

281 i‡–++
p
 =
≥
 )

282 
_ã°_eof3
;

285 i‡–(*
p
) == 10 )

286 
å7
;

287 
°0
;

288 
å6
:

291 
∑r£r
->
chunked
 = 1;

292 
∑r£r
->
c⁄ã¡_Àn
 = 
	`°πﬁ
(
	`PTR_TO
(
m¨k
), 
NULL
, 16);

293 
∑r£r
->
chunks_d⁄e
 =Ö¨£r->
c⁄ã¡_Àn
 <= 0;

295 if(
∑r£r
->
chunks_d⁄e
 &&Ö¨£r->
œ°_chunk
) {

296 
∑r£r
->
	`œ°_chunk
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

297 } if(
∑r£r
->
chunk_size
 !
NULL
) {

298 
∑r£r
->
	`chunk_size
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

301 
°4
;

302 
å12
:

305 
∑r£r
->
fõld_Àn
 = 
	`LEN
(
fõld_°¨t
, 
p
);

308 { 
	`MARK
(
m¨k
, 
p
); }

311 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

312 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

315 
°4
;

316 
å18
:

319 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

320 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

323 
°4
;

324 
°4
:

325 i‡–++
p
 =
≥
 )

326 
_ã°_eof4
;

329  (*
p
) ) {

330 33: 
å8
;

331 124: 
å8
;

332 126: 
å8
;

334 i‡–(*
p
) < 45 ) {

335 i‡–(*
p
) > 39 ) {

336 i‡–42 <(*
p
) && (*p) <= 43 )

337 
å8
;

338 } i‡–(*
p
) >= 35 )

339 
å8
;

340 } i‡–(*
p
) > 46 ) {

341 i‡–(*
p
) < 65 ) {

342 i‡–48 <(*
p
) && (*p) <= 57 )

343 
å8
;

344 } i‡–(*
p
) > 90 ) {

345 i‡–94 <(*
p
) && (*p) <= 122 )

346 
å8
;

348 
å8
;

350 
å8
;

351 
°0
;

352 
å8
:

354 { 
	`MARK
(
fõld_°¨t
, 
p
); }

355 
°5
;

356 
°5
:

357 i‡–++
p
 =
≥
 )

358 
_ã°_eof5
;

361  (*
p
) ) {

362 10: 
å9
;

363 13: 
å10
;

364 33: 
°5
;

365 59: 
å12
;

366 61: 
å13
;

367 124: 
°5
;

368 126: 
°5
;

370 i‡–(*
p
) < 45 ) {

371 i‡–(*
p
) > 39 ) {

372 i‡–42 <(*
p
) && (*p) <= 43 )

373 
°5
;

374 } i‡–(*
p
) >= 35 )

375 
°5
;

376 } i‡–(*
p
) > 46 ) {

377 i‡–(*
p
) < 65 ) {

378 i‡–48 <(*
p
) && (*p) <= 57 )

379 
°5
;

380 } i‡–(*
p
) > 90 ) {

381 i‡–94 <(*
p
) && (*p) <= 122 )

382 
°5
;

384 
°5
;

386 
°5
;

387 
°0
;

388 
å13
:

391 
∑r£r
->
fõld_Àn
 = 
	`LEN
(
fõld_°¨t
, 
p
);

394 { 
	`MARK
(
m¨k
, 
p
); }

395 
°6
;

396 
°6
:

397 i‡–++
p
 =
≥
 )

398 
_ã°_eof6
;

401  (*
p
) ) {

402 33: 
å14
;

403 124: 
å14
;

404 126: 
å14
;

406 i‡–(*
p
) < 45 ) {

407 i‡–(*
p
) > 39 ) {

408 i‡–42 <(*
p
) && (*p) <= 43 )

409 
å14
;

410 } i‡–(*
p
) >= 35 )

411 
å14
;

412 } i‡–(*
p
) > 46 ) {

413 i‡–(*
p
) < 65 ) {

414 i‡–48 <(*
p
) && (*p) <= 57 )

415 
å14
;

416 } i‡–(*
p
) > 90 ) {

417 i‡–94 <(*
p
) && (*p) <= 122 )

418 
å14
;

420 
å14
;

422 
å14
;

423 
°0
;

424 
å14
:

426 { 
	`MARK
(
m¨k
, 
p
); }

427 
°7
;

428 
°7
:

429 i‡–++
p
 =
≥
 )

430 
_ã°_eof7
;

433  (*
p
) ) {

434 10: 
å15
;

435 13: 
å16
;

436 33: 
°7
;

437 59: 
å18
;

438 124: 
°7
;

439 126: 
°7
;

441 i‡–(*
p
) < 45 ) {

442 i‡–(*
p
) > 39 ) {

443 i‡–42 <(*
p
) && (*p) <= 43 )

444 
°7
;

445 } i‡–(*
p
) >= 35 )

446 
°7
;

447 } i‡–(*
p
) > 46 ) {

448 i‡–(*
p
) < 65 ) {

449 i‡–48 <(*
p
) && (*p) <= 57 )

450 
°7
;

451 } i‡–(*
p
) > 90 ) {

452 i‡–94 <(*
p
) && (*p) <= 122 )

453 
°7
;

455 
°7
;

457 
°7
;

458 
°0
;

459 
å2
:

461 {
	`MARK
(
m¨k
, 
p
); }

462 
°8
;

463 
°8
:

464 i‡–++
p
 =
≥
 )

465 
_ã°_eof8
;

468 i‡–(*
p
) == 84 )

469 
°9
;

470 
°0
;

471 
°9
:

472 i‡–++
p
 =
≥
 )

473 
_ã°_eof9
;

475 i‡–(*
p
) == 84 )

476 
°10
;

477 
°0
;

478 
°10
:

479 i‡–++
p
 =
≥
 )

480 
_ã°_eof10
;

482 i‡–(*
p
) == 80 )

483 
°11
;

484 
°0
;

485 
°11
:

486 i‡–++
p
 =
≥
 )

487 
_ã°_eof11
;

489 i‡–(*
p
) == 47 )

490 
°12
;

491 
°0
;

492 
°12
:

493 i‡–++
p
 =
≥
 )

494 
_ã°_eof12
;

496 i‡–48 <(*
p
) && (*p) <= 57 )

497 
°13
;

498 
°0
;

499 
°13
:

500 i‡–++
p
 =
≥
 )

501 
_ã°_eof13
;

503 i‡–(*
p
) == 46 )

504 
°14
;

505 i‡–48 <(*
p
) && (*p) <= 57 )

506 
°13
;

507 
°0
;

508 
°14
:

509 i‡–++
p
 =
≥
 )

510 
_ã°_eof14
;

512 i‡–48 <(*
p
) && (*p) <= 57 )

513 
°15
;

514 
°0
;

515 
°15
:

516 i‡–++
p
 =
≥
 )

517 
_ã°_eof15
;

519 i‡–(*
p
) == 32 )

520 
å26
;

521 i‡–48 <(*
p
) && (*p) <= 57 )

522 
°15
;

523 
°0
;

524 
å26
:

527 if(
∑r£r
->
hâp_vîsi⁄
 !
NULL
)

528 
∑r£r
->
	`hâp_vîsi⁄
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

530 
°16
;

531 
°16
:

532 i‡–++
p
 =
≥
 )

533 
_ã°_eof16
;

536 i‡–48 <(*
p
) && (*p) <= 57 )

537 
å27
;

538 
°0
;

539 
å27
:

541 {
	`MARK
(
m¨k
, 
p
); }

542 
°17
;

543 
°17
:

544 i‡–++
p
 =
≥
 )

545 
_ã°_eof17
;

548 i‡–(*
p
) == 32 )

549 
å28
;

550 i‡–48 <(*
p
) && (*p) <= 57 )

551 
°17
;

552 
°0
;

553 
å28
:

556 
∑r£r
->
°©us
 = 
	`°πﬁ
(
	`PTR_TO
(
m¨k
), 
NULL
, 10);

558 if(
∑r£r
->
°©us_code
 !
NULL
)

559 
∑r£r
->
	`°©us_code
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

561 
°18
;

562 
°18
:

563 i‡–++
p
 =
≥
 )

564 
_ã°_eof18
;

567 i‡–(*
p
) == 10 )

568 
°0
;

569 
å30
;

570 
å30
:

572 {
	`MARK
(
m¨k
, 
p
); }

573 
°19
;

574 
°19
:

575 i‡–++
p
 =
≥
 )

576 
_ã°_eof19
;

579  (*
p
) ) {

580 10: 
å32
;

581 13: 
å33
;

583 
°19
;

584 
å45
:

587 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

588 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

591 
°20
;

592 
å32
:

595 if(
∑r£r
->
ªas⁄_phø£
 !
NULL
)

596 
∑r£r
->
	`ªas⁄_phø£
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

598 
°20
;

599 
å42
:

601 { 
	`MARK
(
m¨k
, 
p
); }

604 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

605 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

608 
°20
;

609 
å111
:

612 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

613 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

618 
∑r£r
->
chunked
 = 1;

620 
°20
;

621 
å113
:

624 
∑r£r
->
chunked
 = 1;

626 
°20
;

627 
å158
:

630 
∑r£r
->
c⁄ã¡_Àn
 = 
	`°πﬁ
(
	`PTR_TO
(
m¨k
), 
NULL
, 10);

634 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

635 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

638 
°20
;

639 
°20
:

640 i‡–++
p
 =
≥
 )

641 
_ã°_eof20
;

644  (*
p
) ) {

645 10: 
å7
;

646 13: 
°3
;

647 33: 
å35
;

648 67: 
å36
;

649 84: 
å37
;

650 99: 
å36
;

651 116: 
å37
;

652 124: 
å35
;

653 126: 
å35
;

655 i‡–(*
p
) < 45 ) {

656 i‡–(*
p
) > 39 ) {

657 i‡–42 <(*
p
) && (*p) <= 43 )

658 
å35
;

659 } i‡–(*
p
) >= 35 )

660 
å35
;

661 } i‡–(*
p
) > 46 ) {

662 i‡–(*
p
) < 65 ) {

663 i‡–48 <(*
p
) && (*p) <= 57 )

664 
å35
;

665 } i‡–(*
p
) > 90 ) {

666 i‡–94 <(*
p
) && (*p) <= 122 )

667 
å35
;

669 
å35
;

671 
å35
;

672 
°0
;

673 
å35
:

675 { 
	`MARK
(
fõld_°¨t
, 
p
); }

676 
°21
;

677 
å76
:

680 
∑r£r
->
˛o£
 = 1;

683 { 
	`MARK
(
fõld_°¨t
, 
p
); }

684 
°21
;

685 
°21
:

686 i‡–++
p
 =
≥
 )

687 
_ã°_eof21
;

690  (*
p
) ) {

691 33: 
°21
;

692 58: 
å39
;

693 124: 
°21
;

694 126: 
°21
;

696 i‡–(*
p
) < 45 ) {

697 i‡–(*
p
) > 39 ) {

698 i‡–42 <(*
p
) && (*p) <= 43 )

699 
°21
;

700 } i‡–(*
p
) >= 35 )

701 
°21
;

702 } i‡–(*
p
) > 46 ) {

703 i‡–(*
p
) < 65 ) {

704 i‡–48 <(*
p
) && (*p) <= 57 )

705 
°21
;

706 } i‡–(*
p
) > 90 ) {

707 i‡–94 <(*
p
) && (*p) <= 122 )

708 
°21
;

710 
°21
;

712 
°21
;

713 
°0
;

714 
å41
:

716 { 
	`MARK
(
m¨k
, 
p
); }

717 
°22
;

718 
å39
:

721 
∑r£r
->
fõld_Àn
 = 
	`LEN
(
fõld_°¨t
, 
p
);

723 
°22
;

724 
°22
:

725 i‡–++
p
 =
≥
 )

726 
_ã°_eof22
;

729  (*
p
) ) {

730 10: 
å42
;

731 13: 
å43
;

732 32: 
å41
;

734 i‡–9 <(*
p
) && (*p) <= 12 )

735 
å41
;

736 
å40
;

737 
å40
:

739 { 
	`MARK
(
m¨k
, 
p
); }

740 
°23
;

741 
°23
:

742 i‡–++
p
 =
≥
 )

743 
_ã°_eof23
;

746  (*
p
) ) {

747 10: 
å45
;

748 13: 
å46
;

750 
°23
;

751 
å46
:

754 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

755 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

758 
°24
;

759 
å33
:

762 if(
∑r£r
->
ªas⁄_phø£
 !
NULL
)

763 
∑r£r
->
	`ªas⁄_phø£
’¨£r->
d©a
, 
	`PTR_TO
(
m¨k
), 
	`LEN
(m¨k, 
p
));

765 
°24
;

766 
å43
:

768 { 
	`MARK
(
m¨k
, 
p
); }

771 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

772 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

775 
°24
;

776 
å159
:

779 
∑r£r
->
c⁄ã¡_Àn
 = 
	`°πﬁ
(
	`PTR_TO
(
m¨k
), 
NULL
, 10);

783 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

784 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

787 
°24
;

788 
°24
:

789 i‡–++
p
 =
≥
 )

790 
_ã°_eof24
;

793 i‡–(*
p
) == 10 )

794 
°20
;

795 
°0
;

796 
å36
:

798 { 
	`MARK
(
fõld_°¨t
, 
p
); }

799 
°25
;

800 
å77
:

803 
∑r£r
->
˛o£
 = 1;

806 { 
	`MARK
(
fõld_°¨t
, 
p
); }

807 
°25
;

808 
°25
:

809 i‡–++
p
 =
≥
 )

810 
_ã°_eof25
;

813  (*
p
) ) {

814 33: 
°21
;

815 58: 
å39
;

816 79: 
°26
;

817 111: 
°26
;

818 124: 
°21
;

819 126: 
°21
;

821 i‡–(*
p
) < 45 ) {

822 i‡–(*
p
) > 39 ) {

823 i‡–42 <(*
p
) && (*p) <= 43 )

824 
°21
;

825 } i‡–(*
p
) >= 35 )

826 
°21
;

827 } i‡–(*
p
) > 46 ) {

828 i‡–(*
p
) < 65 ) {

829 i‡–48 <(*
p
) && (*p) <= 57 )

830 
°21
;

831 } i‡–(*
p
) > 90 ) {

832 i‡–94 <(*
p
) && (*p) <= 122 )

833 
°21
;

835 
°21
;

837 
°21
;

838 
°0
;

839 
°26
:

840 i‡–++
p
 =
≥
 )

841 
_ã°_eof26
;

843  (*
p
) ) {

844 33: 
°21
;

845 58: 
å39
;

846 78: 
°27
;

847 110: 
°27
;

848 124: 
°21
;

849 126: 
°21
;

851 i‡–(*
p
) < 45 ) {

852 i‡–(*
p
) > 39 ) {

853 i‡–42 <(*
p
) && (*p) <= 43 )

854 
°21
;

855 } i‡–(*
p
) >= 35 )

856 
°21
;

857 } i‡–(*
p
) > 46 ) {

858 i‡–(*
p
) < 65 ) {

859 i‡–48 <(*
p
) && (*p) <= 57 )

860 
°21
;

861 } i‡–(*
p
) > 90 ) {

862 i‡–94 <(*
p
) && (*p) <= 122 )

863 
°21
;

865 
°21
;

867 
°21
;

868 
°0
;

869 
°27
:

870 i‡–++
p
 =
≥
 )

871 
_ã°_eof27
;

873  (*
p
) ) {

874 33: 
°21
;

875 58: 
å39
;

876 78: 
°28
;

877 84: 
°101
;

878 110: 
°28
;

879 116: 
°101
;

880 124: 
°21
;

881 126: 
°21
;

883 i‡–(*
p
) < 45 ) {

884 i‡–(*
p
) > 39 ) {

885 i‡–42 <(*
p
) && (*p) <= 43 )

886 
°21
;

887 } i‡–(*
p
) >= 35 )

888 
°21
;

889 } i‡–(*
p
) > 46 ) {

890 i‡–(*
p
) < 65 ) {

891 i‡–48 <(*
p
) && (*p) <= 57 )

892 
°21
;

893 } i‡–(*
p
) > 90 ) {

894 i‡–94 <(*
p
) && (*p) <= 122 )

895 
°21
;

897 
°21
;

899 
°21
;

900 
°0
;

901 
°28
:

902 i‡–++
p
 =
≥
 )

903 
_ã°_eof28
;

905  (*
p
) ) {

906 33: 
°21
;

907 58: 
å39
;

908 69: 
°29
;

909 101: 
°29
;

910 124: 
°21
;

911 126: 
°21
;

913 i‡–(*
p
) < 45 ) {

914 i‡–(*
p
) > 39 ) {

915 i‡–42 <(*
p
) && (*p) <= 43 )

916 
°21
;

917 } i‡–(*
p
) >= 35 )

918 
°21
;

919 } i‡–(*
p
) > 46 ) {

920 i‡–(*
p
) < 65 ) {

921 i‡–48 <(*
p
) && (*p) <= 57 )

922 
°21
;

923 } i‡–(*
p
) > 90 ) {

924 i‡–94 <(*
p
) && (*p) <= 122 )

925 
°21
;

927 
°21
;

929 
°21
;

930 
°0
;

931 
°29
:

932 i‡–++
p
 =
≥
 )

933 
_ã°_eof29
;

935  (*
p
) ) {

936 33: 
°21
;

937 58: 
å39
;

938 67: 
°30
;

939 99: 
°30
;

940 124: 
°21
;

941 126: 
°21
;

943 i‡–(*
p
) < 45 ) {

944 i‡–(*
p
) > 39 ) {

945 i‡–42 <(*
p
) && (*p) <= 43 )

946 
°21
;

947 } i‡–(*
p
) >= 35 )

948 
°21
;

949 } i‡–(*
p
) > 46 ) {

950 i‡–(*
p
) < 65 ) {

951 i‡–48 <(*
p
) && (*p) <= 57 )

952 
°21
;

953 } i‡–(*
p
) > 90 ) {

954 i‡–94 <(*
p
) && (*p) <= 122 )

955 
°21
;

957 
°21
;

959 
°21
;

960 
°0
;

961 
°30
:

962 i‡–++
p
 =
≥
 )

963 
_ã°_eof30
;

965  (*
p
) ) {

966 33: 
°21
;

967 58: 
å39
;

968 84: 
°31
;

969 116: 
°31
;

970 124: 
°21
;

971 126: 
°21
;

973 i‡–(*
p
) < 45 ) {

974 i‡–(*
p
) > 39 ) {

975 i‡–42 <(*
p
) && (*p) <= 43 )

976 
°21
;

977 } i‡–(*
p
) >= 35 )

978 
°21
;

979 } i‡–(*
p
) > 46 ) {

980 i‡–(*
p
) < 65 ) {

981 i‡–48 <(*
p
) && (*p) <= 57 )

982 
°21
;

983 } i‡–(*
p
) > 90 ) {

984 i‡–94 <(*
p
) && (*p) <= 122 )

985 
°21
;

987 
°21
;

989 
°21
;

990 
°0
;

991 
°31
:

992 i‡–++
p
 =
≥
 )

993 
_ã°_eof31
;

995  (*
p
) ) {

996 33: 
°21
;

997 58: 
å39
;

998 73: 
°32
;

999 105: 
°32
;

1000 124: 
°21
;

1001 126: 
°21
;

1003 i‡–(*
p
) < 45 ) {

1004 i‡–(*
p
) > 39 ) {

1005 i‡–42 <(*
p
) && (*p) <= 43 )

1006 
°21
;

1007 } i‡–(*
p
) >= 35 )

1008 
°21
;

1009 } i‡–(*
p
) > 46 ) {

1010 i‡–(*
p
) < 65 ) {

1011 i‡–48 <(*
p
) && (*p) <= 57 )

1012 
°21
;

1013 } i‡–(*
p
) > 90 ) {

1014 i‡–94 <(*
p
) && (*p) <= 122 )

1015 
°21
;

1017 
°21
;

1019 
°21
;

1020 
°0
;

1021 
°32
:

1022 i‡–++
p
 =
≥
 )

1023 
_ã°_eof32
;

1025  (*
p
) ) {

1026 33: 
°21
;

1027 58: 
å39
;

1028 79: 
°33
;

1029 111: 
°33
;

1030 124: 
°21
;

1031 126: 
°21
;

1033 i‡–(*
p
) < 45 ) {

1034 i‡–(*
p
) > 39 ) {

1035 i‡–42 <(*
p
) && (*p) <= 43 )

1036 
°21
;

1037 } i‡–(*
p
) >= 35 )

1038 
°21
;

1039 } i‡–(*
p
) > 46 ) {

1040 i‡–(*
p
) < 65 ) {

1041 i‡–48 <(*
p
) && (*p) <= 57 )

1042 
°21
;

1043 } i‡–(*
p
) > 90 ) {

1044 i‡–94 <(*
p
) && (*p) <= 122 )

1045 
°21
;

1047 
°21
;

1049 
°21
;

1050 
°0
;

1051 
°33
:

1052 i‡–++
p
 =
≥
 )

1053 
_ã°_eof33
;

1055  (*
p
) ) {

1056 33: 
°21
;

1057 58: 
å39
;

1058 78: 
°34
;

1059 110: 
°34
;

1060 124: 
°21
;

1061 126: 
°21
;

1063 i‡–(*
p
) < 45 ) {

1064 i‡–(*
p
) > 39 ) {

1065 i‡–42 <(*
p
) && (*p) <= 43 )

1066 
°21
;

1067 } i‡–(*
p
) >= 35 )

1068 
°21
;

1069 } i‡–(*
p
) > 46 ) {

1070 i‡–(*
p
) < 65 ) {

1071 i‡–48 <(*
p
) && (*p) <= 57 )

1072 
°21
;

1073 } i‡–(*
p
) > 90 ) {

1074 i‡–94 <(*
p
) && (*p) <= 122 )

1075 
°21
;

1077 
°21
;

1079 
°21
;

1080 
°0
;

1081 
°34
:

1082 i‡–++
p
 =
≥
 )

1083 
_ã°_eof34
;

1085  (*
p
) ) {

1086 33: 
°21
;

1087 58: 
å58
;

1088 124: 
°21
;

1089 126: 
°21
;

1091 i‡–(*
p
) < 45 ) {

1092 i‡–(*
p
) > 39 ) {

1093 i‡–42 <(*
p
) && (*p) <= 43 )

1094 
°21
;

1095 } i‡–(*
p
) >= 35 )

1096 
°21
;

1097 } i‡–(*
p
) > 46 ) {

1098 i‡–(*
p
) < 65 ) {

1099 i‡–48 <(*
p
) && (*p) <= 57 )

1100 
°21
;

1101 } i‡–(*
p
) > 90 ) {

1102 i‡–94 <(*
p
) && (*p) <= 122 )

1103 
°21
;

1105 
°21
;

1107 
°21
;

1108 
°0
;

1109 
å59
:

1111 { 
	`MARK
(
m¨k
, 
p
); }

1112 
°35
;

1113 
å58
:

1116 
∑r£r
->
fõld_Àn
 = 
	`LEN
(
fõld_°¨t
, 
p
);

1118 
°35
;

1119 
°35
:

1120 i‡–++
p
 =
≥
 )

1121 
_ã°_eof35
;

1124  (*
p
) ) {

1125 10: 
å60
;

1126 13: 
å61
;

1127 32: 
å59
;

1128 67: 
å62
;

1129 99: 
å62
;

1131 i‡–9 <(*
p
) && (*p) <= 12 )

1132 
å59
;

1133 
å40
;

1134 
å60
:

1136 { 
	`MARK
(
m¨k
, 
p
); }

1139 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

1140 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

1143 
°36
;

1144 
°36
:

1145 i‡–++
p
 =
≥
 )

1146 
_ã°_eof36
;

1149  (*
p
) ) {

1150 10: 
å64
;

1151 13: 
°89
;

1152 32: 
°37
;

1153 33: 
å35
;

1154 67: 
å66
;

1155 84: 
å37
;

1156 99: 
å66
;

1157 116: 
å37
;

1158 124: 
å35
;

1159 126: 
å35
;

1161 i‡–(*
p
) < 45 ) {

1162 i‡–(*
p
) < 35 ) {

1163 i‡–9 <(*
p
) && (*p) <= 12 )

1164 
°37
;

1165 } i‡–(*
p
) > 39 ) {

1166 i‡–42 <(*
p
) && (*p) <= 43 )

1167 
å35
;

1169 
å35
;

1170 } i‡–(*
p
) > 46 ) {

1171 i‡–(*
p
) < 65 ) {

1172 i‡–48 <(*
p
) && (*p) <= 57 )

1173 
å35
;

1174 } i‡–(*
p
) > 90 ) {

1175 i‡–94 <(*
p
) && (*p) <= 122 )

1176 
å35
;

1178 
å35
;

1180 
å35
;

1181 
°0
;

1182 
°37
:

1183 i‡–++
p
 =
≥
 )

1184 
_ã°_eof37
;

1186  (*
p
) ) {

1187 32: 
°37
;

1188 67: 
°38
;

1189 99: 
°38
;

1191 i‡–9 <(*
p
) && (*p) <= 13 )

1192 
°37
;

1193 
°0
;

1194 
°38
:

1195 i‡–++
p
 =
≥
 )

1196 
_ã°_eof38
;

1198  (*
p
) ) {

1199 76: 
°39
;

1200 108: 
°39
;

1202 
°0
;

1203 
°39
:

1204 i‡–++
p
 =
≥
 )

1205 
_ã°_eof39
;

1207  (*
p
) ) {

1208 79: 
°40
;

1209 111: 
°40
;

1211 
°0
;

1212 
°40
:

1213 i‡–++
p
 =
≥
 )

1214 
_ã°_eof40
;

1216  (*
p
) ) {

1217 83: 
°41
;

1218 115: 
°41
;

1220 
°0
;

1221 
°41
:

1222 i‡–++
p
 =
≥
 )

1223 
_ã°_eof41
;

1225  (*
p
) ) {

1226 69: 
°42
;

1227 101: 
°42
;

1229 
°0
;

1230 
°42
:

1231 i‡–++
p
 =
≥
 )

1232 
_ã°_eof42
;

1234  (*
p
) ) {

1235 10: 
°43
;

1236 13: 
°88
;

1238 
°0
;

1239 
å136
:

1242 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

1243 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

1246 
°43
;

1247 
°43
:

1248 i‡–++
p
 =
≥
 )

1249 
_ã°_eof43
;

1252  (*
p
) ) {

1253 10: 
å74
;

1254 13: 
å75
;

1255 33: 
å76
;

1256 67: 
å77
;

1257 84: 
å78
;

1258 99: 
å77
;

1259 116: 
å78
;

1260 124: 
å76
;

1261 126: 
å76
;

1263 i‡–(*
p
) < 45 ) {

1264 i‡–(*
p
) > 39 ) {

1265 i‡–42 <(*
p
) && (*p) <= 43 )

1266 
å76
;

1267 } i‡–(*
p
) >= 35 )

1268 
å76
;

1269 } i‡–(*
p
) > 46 ) {

1270 i‡–(*
p
) < 65 ) {

1271 i‡–48 <(*
p
) && (*p) <= 57 )

1272 
å76
;

1273 } i‡–(*
p
) > 90 ) {

1274 i‡–94 <(*
p
) && (*p) <= 122 )

1275 
å76
;

1277 
å76
;

1279 
å76
;

1280 
°0
;

1281 
å37
:

1283 { 
	`MARK
(
fõld_°¨t
, 
p
); }

1284 
°44
;

1285 
å78
:

1288 
∑r£r
->
˛o£
 = 1;

1291 { 
	`MARK
(
fõld_°¨t
, 
p
); }

1292 
°44
;

1293 
°44
:

1294 i‡–++
p
 =
≥
 )

1295 
_ã°_eof44
;

1298  (*
p
) ) {

1299 33: 
°21
;

1300 58: 
å39
;

1301 82: 
°45
;

1302 114: 
°45
;

1303 124: 
°21
;

1304 126: 
°21
;

1306 i‡–(*
p
) < 45 ) {

1307 i‡–(*
p
) > 39 ) {

1308 i‡–42 <(*
p
) && (*p) <= 43 )

1309 
°21
;

1310 } i‡–(*
p
) >= 35 )

1311 
°21
;

1312 } i‡–(*
p
) > 46 ) {

1313 i‡–(*
p
) < 65 ) {

1314 i‡–48 <(*
p
) && (*p) <= 57 )

1315 
°21
;

1316 } i‡–(*
p
) > 90 ) {

1317 i‡–94 <(*
p
) && (*p) <= 122 )

1318 
°21
;

1320 
°21
;

1322 
°21
;

1323 
°0
;

1324 
°45
:

1325 i‡–++
p
 =
≥
 )

1326 
_ã°_eof45
;

1328  (*
p
) ) {

1329 33: 
°21
;

1330 58: 
å39
;

1331 65: 
°46
;

1332 97: 
°46
;

1333 124: 
°21
;

1334 126: 
°21
;

1336 i‡–(*
p
) < 45 ) {

1337 i‡–(*
p
) > 39 ) {

1338 i‡–42 <(*
p
) && (*p) <= 43 )

1339 
°21
;

1340 } i‡–(*
p
) >= 35 )

1341 
°21
;

1342 } i‡–(*
p
) > 46 ) {

1343 i‡–(*
p
) < 66 ) {

1344 i‡–48 <(*
p
) && (*p) <= 57 )

1345 
°21
;

1346 } i‡–(*
p
) > 90 ) {

1347 i‡–94 <(*
p
) && (*p) <= 122 )

1348 
°21
;

1350 
°21
;

1352 
°21
;

1353 
°0
;

1354 
°46
:

1355 i‡–++
p
 =
≥
 )

1356 
_ã°_eof46
;

1358  (*
p
) ) {

1359 33: 
°21
;

1360 58: 
å39
;

1361 78: 
°47
;

1362 110: 
°47
;

1363 124: 
°21
;

1364 126: 
°21
;

1366 i‡–(*
p
) < 45 ) {

1367 i‡–(*
p
) > 39 ) {

1368 i‡–42 <(*
p
) && (*p) <= 43 )

1369 
°21
;

1370 } i‡–(*
p
) >= 35 )

1371 
°21
;

1372 } i‡–(*
p
) > 46 ) {

1373 i‡–(*
p
) < 65 ) {

1374 i‡–48 <(*
p
) && (*p) <= 57 )

1375 
°21
;

1376 } i‡–(*
p
) > 90 ) {

1377 i‡–94 <(*
p
) && (*p) <= 122 )

1378 
°21
;

1380 
°21
;

1382 
°21
;

1383 
°0
;

1384 
°47
:

1385 i‡–++
p
 =
≥
 )

1386 
_ã°_eof47
;

1388  (*
p
) ) {

1389 33: 
°21
;

1390 58: 
å39
;

1391 83: 
°48
;

1392 115: 
°48
;

1393 124: 
°21
;

1394 126: 
°21
;

1396 i‡–(*
p
) < 45 ) {

1397 i‡–(*
p
) > 39 ) {

1398 i‡–42 <(*
p
) && (*p) <= 43 )

1399 
°21
;

1400 } i‡–(*
p
) >= 35 )

1401 
°21
;

1402 } i‡–(*
p
) > 46 ) {

1403 i‡–(*
p
) < 65 ) {

1404 i‡–48 <(*
p
) && (*p) <= 57 )

1405 
°21
;

1406 } i‡–(*
p
) > 90 ) {

1407 i‡–94 <(*
p
) && (*p) <= 122 )

1408 
°21
;

1410 
°21
;

1412 
°21
;

1413 
°0
;

1414 
°48
:

1415 i‡–++
p
 =
≥
 )

1416 
_ã°_eof48
;

1418  (*
p
) ) {

1419 33: 
°21
;

1420 58: 
å39
;

1421 70: 
°49
;

1422 102: 
°49
;

1423 124: 
°21
;

1424 126: 
°21
;

1426 i‡–(*
p
) < 45 ) {

1427 i‡–(*
p
) > 39 ) {

1428 i‡–42 <(*
p
) && (*p) <= 43 )

1429 
°21
;

1430 } i‡–(*
p
) >= 35 )

1431 
°21
;

1432 } i‡–(*
p
) > 46 ) {

1433 i‡–(*
p
) < 65 ) {

1434 i‡–48 <(*
p
) && (*p) <= 57 )

1435 
°21
;

1436 } i‡–(*
p
) > 90 ) {

1437 i‡–94 <(*
p
) && (*p) <= 122 )

1438 
°21
;

1440 
°21
;

1442 
°21
;

1443 
°0
;

1444 
°49
:

1445 i‡–++
p
 =
≥
 )

1446 
_ã°_eof49
;

1448  (*
p
) ) {

1449 33: 
°21
;

1450 58: 
å39
;

1451 69: 
°50
;

1452 101: 
°50
;

1453 124: 
°21
;

1454 126: 
°21
;

1456 i‡–(*
p
) < 45 ) {

1457 i‡–(*
p
) > 39 ) {

1458 i‡–42 <(*
p
) && (*p) <= 43 )

1459 
°21
;

1460 } i‡–(*
p
) >= 35 )

1461 
°21
;

1462 } i‡–(*
p
) > 46 ) {

1463 i‡–(*
p
) < 65 ) {

1464 i‡–48 <(*
p
) && (*p) <= 57 )

1465 
°21
;

1466 } i‡–(*
p
) > 90 ) {

1467 i‡–94 <(*
p
) && (*p) <= 122 )

1468 
°21
;

1470 
°21
;

1472 
°21
;

1473 
°0
;

1474 
°50
:

1475 i‡–++
p
 =
≥
 )

1476 
_ã°_eof50
;

1478  (*
p
) ) {

1479 33: 
°21
;

1480 58: 
å39
;

1481 82: 
°51
;

1482 114: 
°51
;

1483 124: 
°21
;

1484 126: 
°21
;

1486 i‡–(*
p
) < 45 ) {

1487 i‡–(*
p
) > 39 ) {

1488 i‡–42 <(*
p
) && (*p) <= 43 )

1489 
°21
;

1490 } i‡–(*
p
) >= 35 )

1491 
°21
;

1492 } i‡–(*
p
) > 46 ) {

1493 i‡–(*
p
) < 65 ) {

1494 i‡–48 <(*
p
) && (*p) <= 57 )

1495 
°21
;

1496 } i‡–(*
p
) > 90 ) {

1497 i‡–94 <(*
p
) && (*p) <= 122 )

1498 
°21
;

1500 
°21
;

1502 
°21
;

1503 
°0
;

1504 
°51
:

1505 i‡–++
p
 =
≥
 )

1506 
_ã°_eof51
;

1508  (*
p
) ) {

1509 33: 
°21
;

1510 45: 
°52
;

1511 46: 
°21
;

1512 58: 
å39
;

1513 124: 
°21
;

1514 126: 
°21
;

1516 i‡–(*
p
) < 48 ) {

1517 i‡–(*
p
) > 39 ) {

1518 i‡–42 <(*
p
) && (*p) <= 43 )

1519 
°21
;

1520 } i‡–(*
p
) >= 35 )

1521 
°21
;

1522 } i‡–(*
p
) > 57 ) {

1523 i‡–(*
p
) > 90 ) {

1524 i‡–94 <(*
p
) && (*p) <= 122 )

1525 
°21
;

1526 } i‡–(*
p
) >= 65 )

1527 
°21
;

1529 
°21
;

1530 
°0
;

1531 
°52
:

1532 i‡–++
p
 =
≥
 )

1533 
_ã°_eof52
;

1535  (*
p
) ) {

1536 33: 
°21
;

1537 58: 
å39
;

1538 69: 
°53
;

1539 101: 
°53
;

1540 124: 
°21
;

1541 126: 
°21
;

1543 i‡–(*
p
) < 45 ) {

1544 i‡–(*
p
) > 39 ) {

1545 i‡–42 <(*
p
) && (*p) <= 43 )

1546 
°21
;

1547 } i‡–(*
p
) >= 35 )

1548 
°21
;

1549 } i‡–(*
p
) > 46 ) {

1550 i‡–(*
p
) < 65 ) {

1551 i‡–48 <(*
p
) && (*p) <= 57 )

1552 
°21
;

1553 } i‡–(*
p
) > 90 ) {

1554 i‡–94 <(*
p
) && (*p) <= 122 )

1555 
°21
;

1557 
°21
;

1559 
°21
;

1560 
°0
;

1561 
°53
:

1562 i‡–++
p
 =
≥
 )

1563 
_ã°_eof53
;

1565  (*
p
) ) {

1566 33: 
°21
;

1567 58: 
å39
;

1568 78: 
°54
;

1569 110: 
°54
;

1570 124: 
°21
;

1571 126: 
°21
;

1573 i‡–(*
p
) < 45 ) {

1574 i‡–(*
p
) > 39 ) {

1575 i‡–42 <(*
p
) && (*p) <= 43 )

1576 
°21
;

1577 } i‡–(*
p
) >= 35 )

1578 
°21
;

1579 } i‡–(*
p
) > 46 ) {

1580 i‡–(*
p
) < 65 ) {

1581 i‡–48 <(*
p
) && (*p) <= 57 )

1582 
°21
;

1583 } i‡–(*
p
) > 90 ) {

1584 i‡–94 <(*
p
) && (*p) <= 122 )

1585 
°21
;

1587 
°21
;

1589 
°21
;

1590 
°0
;

1591 
°54
:

1592 i‡–++
p
 =
≥
 )

1593 
_ã°_eof54
;

1595  (*
p
) ) {

1596 33: 
°21
;

1597 58: 
å39
;

1598 67: 
°55
;

1599 99: 
°55
;

1600 124: 
°21
;

1601 126: 
°21
;

1603 i‡–(*
p
) < 45 ) {

1604 i‡–(*
p
) > 39 ) {

1605 i‡–42 <(*
p
) && (*p) <= 43 )

1606 
°21
;

1607 } i‡–(*
p
) >= 35 )

1608 
°21
;

1609 } i‡–(*
p
) > 46 ) {

1610 i‡–(*
p
) < 65 ) {

1611 i‡–48 <(*
p
) && (*p) <= 57 )

1612 
°21
;

1613 } i‡–(*
p
) > 90 ) {

1614 i‡–94 <(*
p
) && (*p) <= 122 )

1615 
°21
;

1617 
°21
;

1619 
°21
;

1620 
°0
;

1621 
°55
:

1622 i‡–++
p
 =
≥
 )

1623 
_ã°_eof55
;

1625  (*
p
) ) {

1626 33: 
°21
;

1627 58: 
å39
;

1628 79: 
°56
;

1629 111: 
°56
;

1630 124: 
°21
;

1631 126: 
°21
;

1633 i‡–(*
p
) < 45 ) {

1634 i‡–(*
p
) > 39 ) {

1635 i‡–42 <(*
p
) && (*p) <= 43 )

1636 
°21
;

1637 } i‡–(*
p
) >= 35 )

1638 
°21
;

1639 } i‡–(*
p
) > 46 ) {

1640 i‡–(*
p
) < 65 ) {

1641 i‡–48 <(*
p
) && (*p) <= 57 )

1642 
°21
;

1643 } i‡–(*
p
) > 90 ) {

1644 i‡–94 <(*
p
) && (*p) <= 122 )

1645 
°21
;

1647 
°21
;

1649 
°21
;

1650 
°0
;

1651 
°56
:

1652 i‡–++
p
 =
≥
 )

1653 
_ã°_eof56
;

1655  (*
p
) ) {

1656 33: 
°21
;

1657 58: 
å39
;

1658 68: 
°57
;

1659 100: 
°57
;

1660 124: 
°21
;

1661 126: 
°21
;

1663 i‡–(*
p
) < 45 ) {

1664 i‡–(*
p
) > 39 ) {

1665 i‡–42 <(*
p
) && (*p) <= 43 )

1666 
°21
;

1667 } i‡–(*
p
) >= 35 )

1668 
°21
;

1669 } i‡–(*
p
) > 46 ) {

1670 i‡–(*
p
) < 65 ) {

1671 i‡–48 <(*
p
) && (*p) <= 57 )

1672 
°21
;

1673 } i‡–(*
p
) > 90 ) {

1674 i‡–94 <(*
p
) && (*p) <= 122 )

1675 
°21
;

1677 
°21
;

1679 
°21
;

1680 
°0
;

1681 
°57
:

1682 i‡–++
p
 =
≥
 )

1683 
_ã°_eof57
;

1685  (*
p
) ) {

1686 33: 
°21
;

1687 58: 
å39
;

1688 73: 
°58
;

1689 105: 
°58
;

1690 124: 
°21
;

1691 126: 
°21
;

1693 i‡–(*
p
) < 45 ) {

1694 i‡–(*
p
) > 39 ) {

1695 i‡–42 <(*
p
) && (*p) <= 43 )

1696 
°21
;

1697 } i‡–(*
p
) >= 35 )

1698 
°21
;

1699 } i‡–(*
p
) > 46 ) {

1700 i‡–(*
p
) < 65 ) {

1701 i‡–48 <(*
p
) && (*p) <= 57 )

1702 
°21
;

1703 } i‡–(*
p
) > 90 ) {

1704 i‡–94 <(*
p
) && (*p) <= 122 )

1705 
°21
;

1707 
°21
;

1709 
°21
;

1710 
°0
;

1711 
°58
:

1712 i‡–++
p
 =
≥
 )

1713 
_ã°_eof58
;

1715  (*
p
) ) {

1716 33: 
°21
;

1717 58: 
å39
;

1718 78: 
°59
;

1719 110: 
°59
;

1720 124: 
°21
;

1721 126: 
°21
;

1723 i‡–(*
p
) < 45 ) {

1724 i‡–(*
p
) > 39 ) {

1725 i‡–42 <(*
p
) && (*p) <= 43 )

1726 
°21
;

1727 } i‡–(*
p
) >= 35 )

1728 
°21
;

1729 } i‡–(*
p
) > 46 ) {

1730 i‡–(*
p
) < 65 ) {

1731 i‡–48 <(*
p
) && (*p) <= 57 )

1732 
°21
;

1733 } i‡–(*
p
) > 90 ) {

1734 i‡–94 <(*
p
) && (*p) <= 122 )

1735 
°21
;

1737 
°21
;

1739 
°21
;

1740 
°0
;

1741 
°59
:

1742 i‡–++
p
 =
≥
 )

1743 
_ã°_eof59
;

1745  (*
p
) ) {

1746 33: 
°21
;

1747 58: 
å39
;

1748 71: 
°60
;

1749 103: 
°60
;

1750 124: 
°21
;

1751 126: 
°21
;

1753 i‡–(*
p
) < 45 ) {

1754 i‡–(*
p
) > 39 ) {

1755 i‡–42 <(*
p
) && (*p) <= 43 )

1756 
°21
;

1757 } i‡–(*
p
) >= 35 )

1758 
°21
;

1759 } i‡–(*
p
) > 46 ) {

1760 i‡–(*
p
) < 65 ) {

1761 i‡–48 <(*
p
) && (*p) <= 57 )

1762 
°21
;

1763 } i‡–(*
p
) > 90 ) {

1764 i‡–94 <(*
p
) && (*p) <= 122 )

1765 
°21
;

1767 
°21
;

1769 
°21
;

1770 
°0
;

1771 
°60
:

1772 i‡–++
p
 =
≥
 )

1773 
_ã°_eof60
;

1775  (*
p
) ) {

1776 33: 
°21
;

1777 58: 
å95
;

1778 124: 
°21
;

1779 126: 
°21
;

1781 i‡–(*
p
) < 45 ) {

1782 i‡–(*
p
) > 39 ) {

1783 i‡–42 <(*
p
) && (*p) <= 43 )

1784 
°21
;

1785 } i‡–(*
p
) >= 35 )

1786 
°21
;

1787 } i‡–(*
p
) > 46 ) {

1788 i‡–(*
p
) < 65 ) {

1789 i‡–48 <(*
p
) && (*p) <= 57 )

1790 
°21
;

1791 } i‡–(*
p
) > 90 ) {

1792 i‡–94 <(*
p
) && (*p) <= 122 )

1793 
°21
;

1795 
°21
;

1797 
°21
;

1798 
°0
;

1799 
å96
:

1801 { 
	`MARK
(
m¨k
, 
p
); }

1802 
°61
;

1803 
å95
:

1806 
∑r£r
->
fõld_Àn
 = 
	`LEN
(
fõld_°¨t
, 
p
);

1808 
°61
;

1809 
°61
:

1810 i‡–++
p
 =
≥
 )

1811 
_ã°_eof61
;

1814  (*
p
) ) {

1815 10: 
å97
;

1816 13: 
å98
;

1817 32: 
å96
;

1818 67: 
å99
;

1819 99: 
å99
;

1821 i‡–9 <(*
p
) && (*p) <= 12 )

1822 
å96
;

1823 
å40
;

1824 
å97
:

1826 { 
	`MARK
(
m¨k
, 
p
); }

1829 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

1830 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

1833 
°62
;

1834 
°62
:

1835 i‡–++
p
 =
≥
 )

1836 
_ã°_eof62
;

1839  (*
p
) ) {

1840 10: 
å101
;

1841 13: 
°72
;

1842 32: 
°63
;

1843 33: 
å35
;

1844 67: 
å103
;

1845 84: 
å37
;

1846 99: 
å103
;

1847 116: 
å37
;

1848 124: 
å35
;

1849 126: 
å35
;

1851 i‡–(*
p
) < 45 ) {

1852 i‡–(*
p
) < 35 ) {

1853 i‡–9 <(*
p
) && (*p) <= 12 )

1854 
°63
;

1855 } i‡–(*
p
) > 39 ) {

1856 i‡–42 <(*
p
) && (*p) <= 43 )

1857 
å35
;

1859 
å35
;

1860 } i‡–(*
p
) > 46 ) {

1861 i‡–(*
p
) < 65 ) {

1862 i‡–48 <(*
p
) && (*p) <= 57 )

1863 
å35
;

1864 } i‡–(*
p
) > 90 ) {

1865 i‡–94 <(*
p
) && (*p) <= 122 )

1866 
å35
;

1868 
å35
;

1870 
å35
;

1871 
°0
;

1872 
°63
:

1873 i‡–++
p
 =
≥
 )

1874 
_ã°_eof63
;

1876  (*
p
) ) {

1877 32: 
°63
;

1878 67: 
å104
;

1879 99: 
å104
;

1881 i‡–9 <(*
p
) && (*p) <= 13 )

1882 
°63
;

1883 
°0
;

1884 
å104
:

1886 { 
	`MARK
(
m¨k
, 
p
); }

1887 
°64
;

1888 
°64
:

1889 i‡–++
p
 =
≥
 )

1890 
_ã°_eof64
;

1893  (*
p
) ) {

1894 72: 
°65
;

1895 104: 
°65
;

1897 
°0
;

1898 
°65
:

1899 i‡–++
p
 =
≥
 )

1900 
_ã°_eof65
;

1902  (*
p
) ) {

1903 85: 
°66
;

1904 117: 
°66
;

1906 
°0
;

1907 
°66
:

1908 i‡–++
p
 =
≥
 )

1909 
_ã°_eof66
;

1911  (*
p
) ) {

1912 78: 
°67
;

1913 110: 
°67
;

1915 
°0
;

1916 
°67
:

1917 i‡–++
p
 =
≥
 )

1918 
_ã°_eof67
;

1920  (*
p
) ) {

1921 75: 
°68
;

1922 107: 
°68
;

1924 
°0
;

1925 
°68
:

1926 i‡–++
p
 =
≥
 )

1927 
_ã°_eof68
;

1929  (*
p
) ) {

1930 69: 
°69
;

1931 101: 
°69
;

1933 
°0
;

1934 
°69
:

1935 i‡–++
p
 =
≥
 )

1936 
_ã°_eof69
;

1938  (*
p
) ) {

1939 68: 
°70
;

1940 100: 
°70
;

1942 
°0
;

1943 
°70
:

1944 i‡–++
p
 =
≥
 )

1945 
_ã°_eof70
;

1947  (*
p
) ) {

1948 10: 
å111
;

1949 13: 
å112
;

1951 
°0
;

1952 
å112
:

1955 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

1956 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

1959 
°71
;

1960 
°71
:

1961 i‡–++
p
 =
≥
 )

1962 
_ã°_eof71
;

1965 i‡–(*
p
) == 10 )

1966 
å113
;

1967 
°0
;

1968 
å101
:

1971 
∑r£r
->
body_°¨t
 = 
p
 - 
buf„r
 + 1;

1972 if(
∑r£r
->
hódî_d⁄e
 !
NULL
)

1973 
∑r£r
->
	`hódî_d⁄e
’¨£r->
d©a
, 
p
 + 1, 
≥
 -Ö - 1);

1974 {
p
++; 
cs
 = 121; 
_out
;}

1976 
°121
;

1977 
°121
:

1978 i‡–++
p
 =
≥
 )

1979 
_ã°_eof121
;

1982  (*
p
) ) {

1983 32: 
°63
;

1984 67: 
å104
;

1985 99: 
å104
;

1987 i‡–9 <(*
p
) && (*p) <= 13 )

1988 
°63
;

1989 
°0
;

1990 
°72
:

1991 i‡–++
p
 =
≥
 )

1992 
_ã°_eof72
;

1994  (*
p
) ) {

1995 10: 
å101
;

1996 32: 
°63
;

1997 67: 
å104
;

1998 99: 
å104
;

2000 i‡–9 <(*
p
) && (*p) <= 13 )

2001 
°63
;

2002 
°0
;

2003 
å103
:

2005 { 
	`MARK
(
m¨k
, 
p
); }

2007 { 
	`MARK
(
fõld_°¨t
, 
p
); }

2008 
°73
;

2009 
°73
:

2010 i‡–++
p
 =
≥
 )

2011 
_ã°_eof73
;

2014  (*
p
) ) {

2015 33: 
°21
;

2016 58: 
å39
;

2017 72: 
°74
;

2018 79: 
°26
;

2019 104: 
°74
;

2020 111: 
°26
;

2021 124: 
°21
;

2022 126: 
°21
;

2024 i‡–(*
p
) < 45 ) {

2025 i‡–(*
p
) > 39 ) {

2026 i‡–42 <(*
p
) && (*p) <= 43 )

2027 
°21
;

2028 } i‡–(*
p
) >= 35 )

2029 
°21
;

2030 } i‡–(*
p
) > 46 ) {

2031 i‡–(*
p
) < 65 ) {

2032 i‡–48 <(*
p
) && (*p) <= 57 )

2033 
°21
;

2034 } i‡–(*
p
) > 90 ) {

2035 i‡–94 <(*
p
) && (*p) <= 122 )

2036 
°21
;

2038 
°21
;

2040 
°21
;

2041 
°0
;

2042 
°74
:

2043 i‡–++
p
 =
≥
 )

2044 
_ã°_eof74
;

2046  (*
p
) ) {

2047 33: 
°21
;

2048 58: 
å39
;

2049 85: 
°75
;

2050 117: 
°75
;

2051 124: 
°21
;

2052 126: 
°21
;

2054 i‡–(*
p
) < 45 ) {

2055 i‡–(*
p
) > 39 ) {

2056 i‡–42 <(*
p
) && (*p) <= 43 )

2057 
°21
;

2058 } i‡–(*
p
) >= 35 )

2059 
°21
;

2060 } i‡–(*
p
) > 46 ) {

2061 i‡–(*
p
) < 65 ) {

2062 i‡–48 <(*
p
) && (*p) <= 57 )

2063 
°21
;

2064 } i‡–(*
p
) > 90 ) {

2065 i‡–94 <(*
p
) && (*p) <= 122 )

2066 
°21
;

2068 
°21
;

2070 
°21
;

2071 
°0
;

2072 
°75
:

2073 i‡–++
p
 =
≥
 )

2074 
_ã°_eof75
;

2076  (*
p
) ) {

2077 33: 
°21
;

2078 58: 
å39
;

2079 78: 
°76
;

2080 110: 
°76
;

2081 124: 
°21
;

2082 126: 
°21
;

2084 i‡–(*
p
) < 45 ) {

2085 i‡–(*
p
) > 39 ) {

2086 i‡–42 <(*
p
) && (*p) <= 43 )

2087 
°21
;

2088 } i‡–(*
p
) >= 35 )

2089 
°21
;

2090 } i‡–(*
p
) > 46 ) {

2091 i‡–(*
p
) < 65 ) {

2092 i‡–48 <(*
p
) && (*p) <= 57 )

2093 
°21
;

2094 } i‡–(*
p
) > 90 ) {

2095 i‡–94 <(*
p
) && (*p) <= 122 )

2096 
°21
;

2098 
°21
;

2100 
°21
;

2101 
°0
;

2102 
°76
:

2103 i‡–++
p
 =
≥
 )

2104 
_ã°_eof76
;

2106  (*
p
) ) {

2107 33: 
°21
;

2108 58: 
å39
;

2109 75: 
°77
;

2110 107: 
°77
;

2111 124: 
°21
;

2112 126: 
°21
;

2114 i‡–(*
p
) < 45 ) {

2115 i‡–(*
p
) > 39 ) {

2116 i‡–42 <(*
p
) && (*p) <= 43 )

2117 
°21
;

2118 } i‡–(*
p
) >= 35 )

2119 
°21
;

2120 } i‡–(*
p
) > 46 ) {

2121 i‡–(*
p
) < 65 ) {

2122 i‡–48 <(*
p
) && (*p) <= 57 )

2123 
°21
;

2124 } i‡–(*
p
) > 90 ) {

2125 i‡–94 <(*
p
) && (*p) <= 122 )

2126 
°21
;

2128 
°21
;

2130 
°21
;

2131 
°0
;

2132 
°77
:

2133 i‡–++
p
 =
≥
 )

2134 
_ã°_eof77
;

2136  (*
p
) ) {

2137 33: 
°21
;

2138 58: 
å39
;

2139 69: 
°78
;

2140 101: 
°78
;

2141 124: 
°21
;

2142 126: 
°21
;

2144 i‡–(*
p
) < 45 ) {

2145 i‡–(*
p
) > 39 ) {

2146 i‡–42 <(*
p
) && (*p) <= 43 )

2147 
°21
;

2148 } i‡–(*
p
) >= 35 )

2149 
°21
;

2150 } i‡–(*
p
) > 46 ) {

2151 i‡–(*
p
) < 65 ) {

2152 i‡–48 <(*
p
) && (*p) <= 57 )

2153 
°21
;

2154 } i‡–(*
p
) > 90 ) {

2155 i‡–94 <(*
p
) && (*p) <= 122 )

2156 
°21
;

2158 
°21
;

2160 
°21
;

2161 
°0
;

2162 
°78
:

2163 i‡–++
p
 =
≥
 )

2164 
_ã°_eof78
;

2166  (*
p
) ) {

2167 33: 
°21
;

2168 58: 
å39
;

2169 68: 
°79
;

2170 100: 
°79
;

2171 124: 
°21
;

2172 126: 
°21
;

2174 i‡–(*
p
) < 45 ) {

2175 i‡–(*
p
) > 39 ) {

2176 i‡–42 <(*
p
) && (*p) <= 43 )

2177 
°21
;

2178 } i‡–(*
p
) >= 35 )

2179 
°21
;

2180 } i‡–(*
p
) > 46 ) {

2181 i‡–(*
p
) < 65 ) {

2182 i‡–48 <(*
p
) && (*p) <= 57 )

2183 
°21
;

2184 } i‡–(*
p
) > 90 ) {

2185 i‡–94 <(*
p
) && (*p) <= 122 )

2186 
°21
;

2188 
°21
;

2190 
°21
;

2191 
°0
;

2192 
°79
:

2193 i‡–++
p
 =
≥
 )

2194 
_ã°_eof79
;

2196  (*
p
) ) {

2197 10: 
å111
;

2198 13: 
å112
;

2199 33: 
°21
;

2200 58: 
å39
;

2201 124: 
°21
;

2202 126: 
°21
;

2204 i‡–(*
p
) < 45 ) {

2205 i‡–(*
p
) > 39 ) {

2206 i‡–42 <(*
p
) && (*p) <= 43 )

2207 
°21
;

2208 } i‡–(*
p
) >= 35 )

2209 
°21
;

2210 } i‡–(*
p
) > 46 ) {

2211 i‡–(*
p
) < 65 ) {

2212 i‡–48 <(*
p
) && (*p) <= 57 )

2213 
°21
;

2214 } i‡–(*
p
) > 90 ) {

2215 i‡–94 <(*
p
) && (*p) <= 122 )

2216 
°21
;

2218 
°21
;

2220 
°21
;

2221 
°0
;

2222 
å98
:

2224 { 
	`MARK
(
m¨k
, 
p
); }

2227 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

2228 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

2231 
°80
;

2232 
°80
:

2233 i‡–++
p
 =
≥
 )

2234 
_ã°_eof80
;

2237  (*
p
) ) {

2238 10: 
°62
;

2239 32: 
°63
;

2240 67: 
å104
;

2241 99: 
å104
;

2243 i‡–9 <(*
p
) && (*p) <= 13 )

2244 
°63
;

2245 
°0
;

2246 
å99
:

2248 { 
	`MARK
(
m¨k
, 
p
); }

2249 
°81
;

2250 
°81
:

2251 i‡–++
p
 =
≥
 )

2252 
_ã°_eof81
;

2255  (*
p
) ) {

2256 10: 
å45
;

2257 13: 
å46
;

2258 72: 
°82
;

2259 104: 
°82
;

2261 
°23
;

2262 
°82
:

2263 i‡–++
p
 =
≥
 )

2264 
_ã°_eof82
;

2266  (*
p
) ) {

2267 10: 
å45
;

2268 13: 
å46
;

2269 85: 
°83
;

2270 117: 
°83
;

2272 
°23
;

2273 
°83
:

2274 i‡–++
p
 =
≥
 )

2275 
_ã°_eof83
;

2277  (*
p
) ) {

2278 10: 
å45
;

2279 13: 
å46
;

2280 78: 
°84
;

2281 110: 
°84
;

2283 
°23
;

2284 
°84
:

2285 i‡–++
p
 =
≥
 )

2286 
_ã°_eof84
;

2288  (*
p
) ) {

2289 10: 
å45
;

2290 13: 
å46
;

2291 75: 
°85
;

2292 107: 
°85
;

2294 
°23
;

2295 
°85
:

2296 i‡–++
p
 =
≥
 )

2297 
_ã°_eof85
;

2299  (*
p
) ) {

2300 10: 
å45
;

2301 13: 
å46
;

2302 69: 
°86
;

2303 101: 
°86
;

2305 
°23
;

2306 
°86
:

2307 i‡–++
p
 =
≥
 )

2308 
_ã°_eof86
;

2310  (*
p
) ) {

2311 10: 
å45
;

2312 13: 
å46
;

2313 68: 
°87
;

2314 100: 
°87
;

2316 
°23
;

2317 
°87
:

2318 i‡–++
p
 =
≥
 )

2319 
_ã°_eof87
;

2321  (*
p
) ) {

2322 10: 
å111
;

2323 13: 
å112
;

2325 
°23
;

2326 
å137
:

2329 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

2330 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

2333 
°88
;

2334 
°88
:

2335 i‡–++
p
 =
≥
 )

2336 
_ã°_eof88
;

2339 i‡–(*
p
) == 10 )

2340 
°43
;

2341 
°0
;

2342 
å64
:

2345 
∑r£r
->
body_°¨t
 = 
p
 - 
buf„r
 + 1;

2346 if(
∑r£r
->
hódî_d⁄e
 !
NULL
)

2347 
∑r£r
->
	`hódî_d⁄e
’¨£r->
d©a
, 
p
 + 1, 
≥
 -Ö - 1);

2348 {
p
++; 
cs
 = 122; 
_out
;}

2350 
°122
;

2351 
°122
:

2352 i‡–++
p
 =
≥
 )

2353 
_ã°_eof122
;

2356  (*
p
) ) {

2357 32: 
°37
;

2358 67: 
°38
;

2359 99: 
°38
;

2361 i‡–9 <(*
p
) && (*p) <= 13 )

2362 
°37
;

2363 
°0
;

2364 
°89
:

2365 i‡–++
p
 =
≥
 )

2366 
_ã°_eof89
;

2368  (*
p
) ) {

2369 10: 
å64
;

2370 32: 
°37
;

2371 67: 
°38
;

2372 99: 
°38
;

2374 i‡–9 <(*
p
) && (*p) <= 13 )

2375 
°37
;

2376 
°0
;

2377 
å66
:

2379 { 
	`MARK
(
fõld_°¨t
, 
p
); }

2380 
°90
;

2381 
°90
:

2382 i‡–++
p
 =
≥
 )

2383 
_ã°_eof90
;

2386  (*
p
) ) {

2387 33: 
°21
;

2388 58: 
å39
;

2389 76: 
°91
;

2390 79: 
°26
;

2391 108: 
°91
;

2392 111: 
°26
;

2393 124: 
°21
;

2394 126: 
°21
;

2396 i‡–(*
p
) < 45 ) {

2397 i‡–(*
p
) > 39 ) {

2398 i‡–42 <(*
p
) && (*p) <= 43 )

2399 
°21
;

2400 } i‡–(*
p
) >= 35 )

2401 
°21
;

2402 } i‡–(*
p
) > 46 ) {

2403 i‡–(*
p
) < 65 ) {

2404 i‡–48 <(*
p
) && (*p) <= 57 )

2405 
°21
;

2406 } i‡–(*
p
) > 90 ) {

2407 i‡–94 <(*
p
) && (*p) <= 122 )

2408 
°21
;

2410 
°21
;

2412 
°21
;

2413 
°0
;

2414 
°91
:

2415 i‡–++
p
 =
≥
 )

2416 
_ã°_eof91
;

2418  (*
p
) ) {

2419 33: 
°21
;

2420 58: 
å39
;

2421 79: 
°92
;

2422 111: 
°92
;

2423 124: 
°21
;

2424 126: 
°21
;

2426 i‡–(*
p
) < 45 ) {

2427 i‡–(*
p
) > 39 ) {

2428 i‡–42 <(*
p
) && (*p) <= 43 )

2429 
°21
;

2430 } i‡–(*
p
) >= 35 )

2431 
°21
;

2432 } i‡–(*
p
) > 46 ) {

2433 i‡–(*
p
) < 65 ) {

2434 i‡–48 <(*
p
) && (*p) <= 57 )

2435 
°21
;

2436 } i‡–(*
p
) > 90 ) {

2437 i‡–94 <(*
p
) && (*p) <= 122 )

2438 
°21
;

2440 
°21
;

2442 
°21
;

2443 
°0
;

2444 
°92
:

2445 i‡–++
p
 =
≥
 )

2446 
_ã°_eof92
;

2448  (*
p
) ) {

2449 33: 
°21
;

2450 58: 
å39
;

2451 83: 
°93
;

2452 115: 
°93
;

2453 124: 
°21
;

2454 126: 
°21
;

2456 i‡–(*
p
) < 45 ) {

2457 i‡–(*
p
) > 39 ) {

2458 i‡–42 <(*
p
) && (*p) <= 43 )

2459 
°21
;

2460 } i‡–(*
p
) >= 35 )

2461 
°21
;

2462 } i‡–(*
p
) > 46 ) {

2463 i‡–(*
p
) < 65 ) {

2464 i‡–48 <(*
p
) && (*p) <= 57 )

2465 
°21
;

2466 } i‡–(*
p
) > 90 ) {

2467 i‡–94 <(*
p
) && (*p) <= 122 )

2468 
°21
;

2470 
°21
;

2472 
°21
;

2473 
°0
;

2474 
°93
:

2475 i‡–++
p
 =
≥
 )

2476 
_ã°_eof93
;

2478  (*
p
) ) {

2479 33: 
°21
;

2480 58: 
å39
;

2481 69: 
°94
;

2482 101: 
°94
;

2483 124: 
°21
;

2484 126: 
°21
;

2486 i‡–(*
p
) < 45 ) {

2487 i‡–(*
p
) > 39 ) {

2488 i‡–42 <(*
p
) && (*p) <= 43 )

2489 
°21
;

2490 } i‡–(*
p
) >= 35 )

2491 
°21
;

2492 } i‡–(*
p
) > 46 ) {

2493 i‡–(*
p
) < 65 ) {

2494 i‡–48 <(*
p
) && (*p) <= 57 )

2495 
°21
;

2496 } i‡–(*
p
) > 90 ) {

2497 i‡–94 <(*
p
) && (*p) <= 122 )

2498 
°21
;

2500 
°21
;

2502 
°21
;

2503 
°0
;

2504 
°94
:

2505 i‡–++
p
 =
≥
 )

2506 
_ã°_eof94
;

2508  (*
p
) ) {

2509 10: 
°43
;

2510 13: 
°88
;

2511 33: 
°21
;

2512 58: 
å39
;

2513 124: 
°21
;

2514 126: 
°21
;

2516 i‡–(*
p
) < 45 ) {

2517 i‡–(*
p
) > 39 ) {

2518 i‡–42 <(*
p
) && (*p) <= 43 )

2519 
°21
;

2520 } i‡–(*
p
) >= 35 )

2521 
°21
;

2522 } i‡–(*
p
) > 46 ) {

2523 i‡–(*
p
) < 65 ) {

2524 i‡–48 <(*
p
) && (*p) <= 57 )

2525 
°21
;

2526 } i‡–(*
p
) > 90 ) {

2527 i‡–94 <(*
p
) && (*p) <= 122 )

2528 
°21
;

2530 
°21
;

2532 
°21
;

2533 
°0
;

2534 
å61
:

2536 { 
	`MARK
(
m¨k
, 
p
); }

2539 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

2540 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

2543 
°95
;

2544 
°95
:

2545 i‡–++
p
 =
≥
 )

2546 
_ã°_eof95
;

2549  (*
p
) ) {

2550 10: 
°36
;

2551 32: 
°37
;

2552 67: 
°38
;

2553 99: 
°38
;

2555 i‡–9 <(*
p
) && (*p) <= 13 )

2556 
°37
;

2557 
°0
;

2558 
å62
:

2560 { 
	`MARK
(
m¨k
, 
p
); }

2561 
°96
;

2562 
°96
:

2563 i‡–++
p
 =
≥
 )

2564 
_ã°_eof96
;

2567  (*
p
) ) {

2568 10: 
å45
;

2569 13: 
å46
;

2570 76: 
°97
;

2571 108: 
°97
;

2573 
°23
;

2574 
°97
:

2575 i‡–++
p
 =
≥
 )

2576 
_ã°_eof97
;

2578  (*
p
) ) {

2579 10: 
å45
;

2580 13: 
å46
;

2581 79: 
°98
;

2582 111: 
°98
;

2584 
°23
;

2585 
°98
:

2586 i‡–++
p
 =
≥
 )

2587 
_ã°_eof98
;

2589  (*
p
) ) {

2590 10: 
å45
;

2591 13: 
å46
;

2592 83: 
°99
;

2593 115: 
°99
;

2595 
°23
;

2596 
°99
:

2597 i‡–++
p
 =
≥
 )

2598 
_ã°_eof99
;

2600  (*
p
) ) {

2601 10: 
å45
;

2602 13: 
å46
;

2603 69: 
°100
;

2604 101: 
°100
;

2606 
°23
;

2607 
°100
:

2608 i‡–++
p
 =
≥
 )

2609 
_ã°_eof100
;

2611  (*
p
) ) {

2612 10: 
å136
;

2613 13: 
å137
;

2615 
°23
;

2616 
°101
:

2617 i‡–++
p
 =
≥
 )

2618 
_ã°_eof101
;

2620  (*
p
) ) {

2621 33: 
°21
;

2622 58: 
å39
;

2623 69: 
°102
;

2624 101: 
°102
;

2625 124: 
°21
;

2626 126: 
°21
;

2628 i‡–(*
p
) < 45 ) {

2629 i‡–(*
p
) > 39 ) {

2630 i‡–42 <(*
p
) && (*p) <= 43 )

2631 
°21
;

2632 } i‡–(*
p
) >= 35 )

2633 
°21
;

2634 } i‡–(*
p
) > 46 ) {

2635 i‡–(*
p
) < 65 ) {

2636 i‡–48 <(*
p
) && (*p) <= 57 )

2637 
°21
;

2638 } i‡–(*
p
) > 90 ) {

2639 i‡–94 <(*
p
) && (*p) <= 122 )

2640 
°21
;

2642 
°21
;

2644 
°21
;

2645 
°0
;

2646 
°102
:

2647 i‡–++
p
 =
≥
 )

2648 
_ã°_eof102
;

2650  (*
p
) ) {

2651 33: 
°21
;

2652 58: 
å39
;

2653 78: 
°103
;

2654 110: 
°103
;

2655 124: 
°21
;

2656 126: 
°21
;

2658 i‡–(*
p
) < 45 ) {

2659 i‡–(*
p
) > 39 ) {

2660 i‡–42 <(*
p
) && (*p) <= 43 )

2661 
°21
;

2662 } i‡–(*
p
) >= 35 )

2663 
°21
;

2664 } i‡–(*
p
) > 46 ) {

2665 i‡–(*
p
) < 65 ) {

2666 i‡–48 <(*
p
) && (*p) <= 57 )

2667 
°21
;

2668 } i‡–(*
p
) > 90 ) {

2669 i‡–94 <(*
p
) && (*p) <= 122 )

2670 
°21
;

2672 
°21
;

2674 
°21
;

2675 
°0
;

2676 
°103
:

2677 i‡–++
p
 =
≥
 )

2678 
_ã°_eof103
;

2680  (*
p
) ) {

2681 33: 
°21
;

2682 58: 
å39
;

2683 84: 
°104
;

2684 116: 
°104
;

2685 124: 
°21
;

2686 126: 
°21
;

2688 i‡–(*
p
) < 45 ) {

2689 i‡–(*
p
) > 39 ) {

2690 i‡–42 <(*
p
) && (*p) <= 43 )

2691 
°21
;

2692 } i‡–(*
p
) >= 35 )

2693 
°21
;

2694 } i‡–(*
p
) > 46 ) {

2695 i‡–(*
p
) < 65 ) {

2696 i‡–48 <(*
p
) && (*p) <= 57 )

2697 
°21
;

2698 } i‡–(*
p
) > 90 ) {

2699 i‡–94 <(*
p
) && (*p) <= 122 )

2700 
°21
;

2702 
°21
;

2704 
°21
;

2705 
°0
;

2706 
°104
:

2707 i‡–++
p
 =
≥
 )

2708 
_ã°_eof104
;

2710  (*
p
) ) {

2711 33: 
°21
;

2712 45: 
°105
;

2713 46: 
°21
;

2714 58: 
å39
;

2715 124: 
°21
;

2716 126: 
°21
;

2718 i‡–(*
p
) < 48 ) {

2719 i‡–(*
p
) > 39 ) {

2720 i‡–42 <(*
p
) && (*p) <= 43 )

2721 
°21
;

2722 } i‡–(*
p
) >= 35 )

2723 
°21
;

2724 } i‡–(*
p
) > 57 ) {

2725 i‡–(*
p
) > 90 ) {

2726 i‡–94 <(*
p
) && (*p) <= 122 )

2727 
°21
;

2728 } i‡–(*
p
) >= 65 )

2729 
°21
;

2731 
°21
;

2732 
°0
;

2733 
°105
:

2734 i‡–++
p
 =
≥
 )

2735 
_ã°_eof105
;

2737  (*
p
) ) {

2738 33: 
°21
;

2739 58: 
å39
;

2740 76: 
°106
;

2741 108: 
°106
;

2742 124: 
°21
;

2743 126: 
°21
;

2745 i‡–(*
p
) < 45 ) {

2746 i‡–(*
p
) > 39 ) {

2747 i‡–42 <(*
p
) && (*p) <= 43 )

2748 
°21
;

2749 } i‡–(*
p
) >= 35 )

2750 
°21
;

2751 } i‡–(*
p
) > 46 ) {

2752 i‡–(*
p
) < 65 ) {

2753 i‡–48 <(*
p
) && (*p) <= 57 )

2754 
°21
;

2755 } i‡–(*
p
) > 90 ) {

2756 i‡–94 <(*
p
) && (*p) <= 122 )

2757 
°21
;

2759 
°21
;

2761 
°21
;

2762 
°0
;

2763 
°106
:

2764 i‡–++
p
 =
≥
 )

2765 
_ã°_eof106
;

2767  (*
p
) ) {

2768 33: 
°21
;

2769 58: 
å39
;

2770 69: 
°107
;

2771 101: 
°107
;

2772 124: 
°21
;

2773 126: 
°21
;

2775 i‡–(*
p
) < 45 ) {

2776 i‡–(*
p
) > 39 ) {

2777 i‡–42 <(*
p
) && (*p) <= 43 )

2778 
°21
;

2779 } i‡–(*
p
) >= 35 )

2780 
°21
;

2781 } i‡–(*
p
) > 46 ) {

2782 i‡–(*
p
) < 65 ) {

2783 i‡–48 <(*
p
) && (*p) <= 57 )

2784 
°21
;

2785 } i‡–(*
p
) > 90 ) {

2786 i‡–94 <(*
p
) && (*p) <= 122 )

2787 
°21
;

2789 
°21
;

2791 
°21
;

2792 
°0
;

2793 
°107
:

2794 i‡–++
p
 =
≥
 )

2795 
_ã°_eof107
;

2797  (*
p
) ) {

2798 33: 
°21
;

2799 58: 
å39
;

2800 78: 
°108
;

2801 110: 
°108
;

2802 124: 
°21
;

2803 126: 
°21
;

2805 i‡–(*
p
) < 45 ) {

2806 i‡–(*
p
) > 39 ) {

2807 i‡–42 <(*
p
) && (*p) <= 43 )

2808 
°21
;

2809 } i‡–(*
p
) >= 35 )

2810 
°21
;

2811 } i‡–(*
p
) > 46 ) {

2812 i‡–(*
p
) < 65 ) {

2813 i‡–48 <(*
p
) && (*p) <= 57 )

2814 
°21
;

2815 } i‡–(*
p
) > 90 ) {

2816 i‡–94 <(*
p
) && (*p) <= 122 )

2817 
°21
;

2819 
°21
;

2821 
°21
;

2822 
°0
;

2823 
°108
:

2824 i‡–++
p
 =
≥
 )

2825 
_ã°_eof108
;

2827  (*
p
) ) {

2828 33: 
°21
;

2829 58: 
å39
;

2830 71: 
°109
;

2831 103: 
°109
;

2832 124: 
°21
;

2833 126: 
°21
;

2835 i‡–(*
p
) < 45 ) {

2836 i‡–(*
p
) > 39 ) {

2837 i‡–42 <(*
p
) && (*p) <= 43 )

2838 
°21
;

2839 } i‡–(*
p
) >= 35 )

2840 
°21
;

2841 } i‡–(*
p
) > 46 ) {

2842 i‡–(*
p
) < 65 ) {

2843 i‡–48 <(*
p
) && (*p) <= 57 )

2844 
°21
;

2845 } i‡–(*
p
) > 90 ) {

2846 i‡–94 <(*
p
) && (*p) <= 122 )

2847 
°21
;

2849 
°21
;

2851 
°21
;

2852 
°0
;

2853 
°109
:

2854 i‡–++
p
 =
≥
 )

2855 
_ã°_eof109
;

2857  (*
p
) ) {

2858 33: 
°21
;

2859 58: 
å39
;

2860 84: 
°110
;

2861 116: 
°110
;

2862 124: 
°21
;

2863 126: 
°21
;

2865 i‡–(*
p
) < 45 ) {

2866 i‡–(*
p
) > 39 ) {

2867 i‡–42 <(*
p
) && (*p) <= 43 )

2868 
°21
;

2869 } i‡–(*
p
) >= 35 )

2870 
°21
;

2871 } i‡–(*
p
) > 46 ) {

2872 i‡–(*
p
) < 65 ) {

2873 i‡–48 <(*
p
) && (*p) <= 57 )

2874 
°21
;

2875 } i‡–(*
p
) > 90 ) {

2876 i‡–94 <(*
p
) && (*p) <= 122 )

2877 
°21
;

2879 
°21
;

2881 
°21
;

2882 
°0
;

2883 
°110
:

2884 i‡–++
p
 =
≥
 )

2885 
_ã°_eof110
;

2887  (*
p
) ) {

2888 33: 
°21
;

2889 58: 
å39
;

2890 72: 
°111
;

2891 104: 
°111
;

2892 124: 
°21
;

2893 126: 
°21
;

2895 i‡–(*
p
) < 45 ) {

2896 i‡–(*
p
) > 39 ) {

2897 i‡–42 <(*
p
) && (*p) <= 43 )

2898 
°21
;

2899 } i‡–(*
p
) >= 35 )

2900 
°21
;

2901 } i‡–(*
p
) > 46 ) {

2902 i‡–(*
p
) < 65 ) {

2903 i‡–48 <(*
p
) && (*p) <= 57 )

2904 
°21
;

2905 } i‡–(*
p
) > 90 ) {

2906 i‡–94 <(*
p
) && (*p) <= 122 )

2907 
°21
;

2909 
°21
;

2911 
°21
;

2912 
°0
;

2913 
°111
:

2914 i‡–++
p
 =
≥
 )

2915 
_ã°_eof111
;

2917  (*
p
) ) {

2918 33: 
°21
;

2919 58: 
å148
;

2920 124: 
°21
;

2921 126: 
°21
;

2923 i‡–(*
p
) < 45 ) {

2924 i‡–(*
p
) > 39 ) {

2925 i‡–42 <(*
p
) && (*p) <= 43 )

2926 
°21
;

2927 } i‡–(*
p
) >= 35 )

2928 
°21
;

2929 } i‡–(*
p
) > 46 ) {

2930 i‡–(*
p
) < 65 ) {

2931 i‡–48 <(*
p
) && (*p) <= 57 )

2932 
°21
;

2933 } i‡–(*
p
) > 90 ) {

2934 i‡–94 <(*
p
) && (*p) <= 122 )

2935 
°21
;

2937 
°21
;

2939 
°21
;

2940 
°0
;

2941 
å149
:

2943 { 
	`MARK
(
m¨k
, 
p
); }

2944 
°112
;

2945 
å148
:

2948 
∑r£r
->
fõld_Àn
 = 
	`LEN
(
fõld_°¨t
, 
p
);

2950 
°112
;

2951 
°112
:

2952 i‡–++
p
 =
≥
 )

2953 
_ã°_eof112
;

2956  (*
p
) ) {

2957 10: 
å150
;

2958 13: 
å151
;

2959 32: 
å149
;

2961 i‡–(*
p
) > 12 ) {

2962 i‡–48 <(*
p
) && (*p) <= 57 )

2963 
å152
;

2964 } i‡–(*
p
) >= 9 )

2965 
å149
;

2966 
å40
;

2967 
å150
:

2969 { 
	`MARK
(
m¨k
, 
p
); }

2972 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

2973 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

2976 
°113
;

2977 
°113
:

2978 i‡–++
p
 =
≥
 )

2979 
_ã°_eof113
;

2982  (*
p
) ) {

2983 10: 
å154
;

2984 13: 
°116
;

2985 32: 
°114
;

2986 33: 
å35
;

2987 67: 
å36
;

2988 84: 
å37
;

2989 99: 
å36
;

2990 116: 
å37
;

2991 124: 
å35
;

2992 126: 
å35
;

2994 i‡–(*
p
) < 45 ) {

2995 i‡–(*
p
) < 35 ) {

2996 i‡–9 <(*
p
) && (*p) <= 12 )

2997 
°114
;

2998 } i‡–(*
p
) > 39 ) {

2999 i‡–42 <(*
p
) && (*p) <= 43 )

3000 
å35
;

3002 
å35
;

3003 } i‡–(*
p
) > 46 ) {

3004 i‡–(*
p
) < 65 ) {

3005 i‡–48 <(*
p
) && (*p) <= 57 )

3006 
å156
;

3007 } i‡–(*
p
) > 90 ) {

3008 i‡–94 <(*
p
) && (*p) <= 122 )

3009 
å35
;

3011 
å35
;

3013 
å35
;

3014 
°0
;

3015 
°114
:

3016 i‡–++
p
 =
≥
 )

3017 
_ã°_eof114
;

3019 i‡–(*
p
) == 32 )

3020 
°114
;

3021 i‡–(*
p
) > 13 ) {

3022 i‡–48 <(*
p
) && (*p) <= 57 )

3023 
å157
;

3024 } i‡–(*
p
) >= 9 )

3025 
°114
;

3026 
°0
;

3027 
å157
:

3029 { 
	`MARK
(
m¨k
, 
p
); }

3030 
°115
;

3031 
°115
:

3032 i‡–++
p
 =
≥
 )

3033 
_ã°_eof115
;

3036  (*
p
) ) {

3037 10: 
å158
;

3038 13: 
å159
;

3040 i‡–48 <(*
p
) && (*p) <= 57 )

3041 
°115
;

3042 
°0
;

3043 
å154
:

3046 
∑r£r
->
body_°¨t
 = 
p
 - 
buf„r
 + 1;

3047 if(
∑r£r
->
hódî_d⁄e
 !
NULL
)

3048 
∑r£r
->
	`hódî_d⁄e
’¨£r->
d©a
, 
p
 + 1, 
≥
 -Ö - 1);

3049 {
p
++; 
cs
 = 123; 
_out
;}

3051 
°123
;

3052 
°123
:

3053 i‡–++
p
 =
≥
 )

3054 
_ã°_eof123
;

3057 i‡–(*
p
) == 32 )

3058 
°114
;

3059 i‡–(*
p
) > 13 ) {

3060 i‡–48 <(*
p
) && (*p) <= 57 )

3061 
å157
;

3062 } i‡–(*
p
) >= 9 )

3063 
°114
;

3064 
°0
;

3065 
°116
:

3066 i‡–++
p
 =
≥
 )

3067 
_ã°_eof116
;

3069  (*
p
) ) {

3070 10: 
å154
;

3071 32: 
°114
;

3073 i‡–(*
p
) > 13 ) {

3074 i‡–48 <(*
p
) && (*p) <= 57 )

3075 
å157
;

3076 } i‡–(*
p
) >= 9 )

3077 
°114
;

3078 
°0
;

3079 
å156
:

3081 { 
	`MARK
(
m¨k
, 
p
); }

3083 { 
	`MARK
(
fõld_°¨t
, 
p
); }

3084 
°117
;

3085 
°117
:

3086 i‡–++
p
 =
≥
 )

3087 
_ã°_eof117
;

3090  (*
p
) ) {

3091 10: 
å158
;

3092 13: 
å159
;

3093 33: 
°21
;

3094 58: 
å39
;

3095 124: 
°21
;

3096 126: 
°21
;

3098 i‡–(*
p
) < 45 ) {

3099 i‡–(*
p
) > 39 ) {

3100 i‡–42 <(*
p
) && (*p) <= 43 )

3101 
°21
;

3102 } i‡–(*
p
) >= 35 )

3103 
°21
;

3104 } i‡–(*
p
) > 46 ) {

3105 i‡–(*
p
) < 65 ) {

3106 i‡–48 <(*
p
) && (*p) <= 57 )

3107 
°117
;

3108 } i‡–(*
p
) > 90 ) {

3109 i‡–94 <(*
p
) && (*p) <= 122 )

3110 
°21
;

3112 
°21
;

3114 
°21
;

3115 
°0
;

3116 
å151
:

3118 { 
	`MARK
(
m¨k
, 
p
); }

3121 if(
∑r£r
->
hâp_fõld
 !
NULL
) {

3122 
∑r£r
->
	`hâp_fõld
’¨£r->
d©a
, 
	`PTR_TO
(
fõld_°¨t
),Ö¨£r->
fõld_Àn
, PTR_TO(
m¨k
), 
	`LEN
(m¨k, 
p
));

3125 
°118
;

3126 
°118
:

3127 i‡–++
p
 =
≥
 )

3128 
_ã°_eof118
;

3131  (*
p
) ) {

3132 10: 
°113
;

3133 32: 
°114
;

3135 i‡–(*
p
) > 13 ) {

3136 i‡–48 <(*
p
) && (*p) <= 57 )

3137 
å157
;

3138 } i‡–(*
p
) >= 9 )

3139 
°114
;

3140 
°0
;

3141 
å152
:

3143 { 
	`MARK
(
m¨k
, 
p
); }

3144 
°119
;

3145 
°119
:

3146 i‡–++
p
 =
≥
 )

3147 
_ã°_eof119
;

3150  (*
p
) ) {

3151 10: 
å158
;

3152 13: 
å159
;

3154 i‡–48 <(*
p
) && (*p) <= 57 )

3155 
°119
;

3156 
°23
;

3158 
_ã°_eof2
: 
cs
 = 2; 
_ã°_eof
;

3159 
_ã°_eof120
: 
cs
 = 120; 
_ã°_eof
;

3160 
_ã°_eof3
: 
cs
 = 3; 
_ã°_eof
;

3161 
_ã°_eof4
: 
cs
 = 4; 
_ã°_eof
;

3162 
_ã°_eof5
: 
cs
 = 5; 
_ã°_eof
;

3163 
_ã°_eof6
: 
cs
 = 6; 
_ã°_eof
;

3164 
_ã°_eof7
: 
cs
 = 7; 
_ã°_eof
;

3165 
_ã°_eof8
: 
cs
 = 8; 
_ã°_eof
;

3166 
_ã°_eof9
: 
cs
 = 9; 
_ã°_eof
;

3167 
_ã°_eof10
: 
cs
 = 10; 
_ã°_eof
;

3168 
_ã°_eof11
: 
cs
 = 11; 
_ã°_eof
;

3169 
_ã°_eof12
: 
cs
 = 12; 
_ã°_eof
;

3170 
_ã°_eof13
: 
cs
 = 13; 
_ã°_eof
;

3171 
_ã°_eof14
: 
cs
 = 14; 
_ã°_eof
;

3172 
_ã°_eof15
: 
cs
 = 15; 
_ã°_eof
;

3173 
_ã°_eof16
: 
cs
 = 16; 
_ã°_eof
;

3174 
_ã°_eof17
: 
cs
 = 17; 
_ã°_eof
;

3175 
_ã°_eof18
: 
cs
 = 18; 
_ã°_eof
;

3176 
_ã°_eof19
: 
cs
 = 19; 
_ã°_eof
;

3177 
_ã°_eof20
: 
cs
 = 20; 
_ã°_eof
;

3178 
_ã°_eof21
: 
cs
 = 21; 
_ã°_eof
;

3179 
_ã°_eof22
: 
cs
 = 22; 
_ã°_eof
;

3180 
_ã°_eof23
: 
cs
 = 23; 
_ã°_eof
;

3181 
_ã°_eof24
: 
cs
 = 24; 
_ã°_eof
;

3182 
_ã°_eof25
: 
cs
 = 25; 
_ã°_eof
;

3183 
_ã°_eof26
: 
cs
 = 26; 
_ã°_eof
;

3184 
_ã°_eof27
: 
cs
 = 27; 
_ã°_eof
;

3185 
_ã°_eof28
: 
cs
 = 28; 
_ã°_eof
;

3186 
_ã°_eof29
: 
cs
 = 29; 
_ã°_eof
;

3187 
_ã°_eof30
: 
cs
 = 30; 
_ã°_eof
;

3188 
_ã°_eof31
: 
cs
 = 31; 
_ã°_eof
;

3189 
_ã°_eof32
: 
cs
 = 32; 
_ã°_eof
;

3190 
_ã°_eof33
: 
cs
 = 33; 
_ã°_eof
;

3191 
_ã°_eof34
: 
cs
 = 34; 
_ã°_eof
;

3192 
_ã°_eof35
: 
cs
 = 35; 
_ã°_eof
;

3193 
_ã°_eof36
: 
cs
 = 36; 
_ã°_eof
;

3194 
_ã°_eof37
: 
cs
 = 37; 
_ã°_eof
;

3195 
_ã°_eof38
: 
cs
 = 38; 
_ã°_eof
;

3196 
_ã°_eof39
: 
cs
 = 39; 
_ã°_eof
;

3197 
_ã°_eof40
: 
cs
 = 40; 
_ã°_eof
;

3198 
_ã°_eof41
: 
cs
 = 41; 
_ã°_eof
;

3199 
_ã°_eof42
: 
cs
 = 42; 
_ã°_eof
;

3200 
_ã°_eof43
: 
cs
 = 43; 
_ã°_eof
;

3201 
_ã°_eof44
: 
cs
 = 44; 
_ã°_eof
;

3202 
_ã°_eof45
: 
cs
 = 45; 
_ã°_eof
;

3203 
_ã°_eof46
: 
cs
 = 46; 
_ã°_eof
;

3204 
_ã°_eof47
: 
cs
 = 47; 
_ã°_eof
;

3205 
_ã°_eof48
: 
cs
 = 48; 
_ã°_eof
;

3206 
_ã°_eof49
: 
cs
 = 49; 
_ã°_eof
;

3207 
_ã°_eof50
: 
cs
 = 50; 
_ã°_eof
;

3208 
_ã°_eof51
: 
cs
 = 51; 
_ã°_eof
;

3209 
_ã°_eof52
: 
cs
 = 52; 
_ã°_eof
;

3210 
_ã°_eof53
: 
cs
 = 53; 
_ã°_eof
;

3211 
_ã°_eof54
: 
cs
 = 54; 
_ã°_eof
;

3212 
_ã°_eof55
: 
cs
 = 55; 
_ã°_eof
;

3213 
_ã°_eof56
: 
cs
 = 56; 
_ã°_eof
;

3214 
_ã°_eof57
: 
cs
 = 57; 
_ã°_eof
;

3215 
_ã°_eof58
: 
cs
 = 58; 
_ã°_eof
;

3216 
_ã°_eof59
: 
cs
 = 59; 
_ã°_eof
;

3217 
_ã°_eof60
: 
cs
 = 60; 
_ã°_eof
;

3218 
_ã°_eof61
: 
cs
 = 61; 
_ã°_eof
;

3219 
_ã°_eof62
: 
cs
 = 62; 
_ã°_eof
;

3220 
_ã°_eof63
: 
cs
 = 63; 
_ã°_eof
;

3221 
_ã°_eof64
: 
cs
 = 64; 
_ã°_eof
;

3222 
_ã°_eof65
: 
cs
 = 65; 
_ã°_eof
;

3223 
_ã°_eof66
: 
cs
 = 66; 
_ã°_eof
;

3224 
_ã°_eof67
: 
cs
 = 67; 
_ã°_eof
;

3225 
_ã°_eof68
: 
cs
 = 68; 
_ã°_eof
;

3226 
_ã°_eof69
: 
cs
 = 69; 
_ã°_eof
;

3227 
_ã°_eof70
: 
cs
 = 70; 
_ã°_eof
;

3228 
_ã°_eof71
: 
cs
 = 71; 
_ã°_eof
;

3229 
_ã°_eof121
: 
cs
 = 121; 
_ã°_eof
;

3230 
_ã°_eof72
: 
cs
 = 72; 
_ã°_eof
;

3231 
_ã°_eof73
: 
cs
 = 73; 
_ã°_eof
;

3232 
_ã°_eof74
: 
cs
 = 74; 
_ã°_eof
;

3233 
_ã°_eof75
: 
cs
 = 75; 
_ã°_eof
;

3234 
_ã°_eof76
: 
cs
 = 76; 
_ã°_eof
;

3235 
_ã°_eof77
: 
cs
 = 77; 
_ã°_eof
;

3236 
_ã°_eof78
: 
cs
 = 78; 
_ã°_eof
;

3237 
_ã°_eof79
: 
cs
 = 79; 
_ã°_eof
;

3238 
_ã°_eof80
: 
cs
 = 80; 
_ã°_eof
;

3239 
_ã°_eof81
: 
cs
 = 81; 
_ã°_eof
;

3240 
_ã°_eof82
: 
cs
 = 82; 
_ã°_eof
;

3241 
_ã°_eof83
: 
cs
 = 83; 
_ã°_eof
;

3242 
_ã°_eof84
: 
cs
 = 84; 
_ã°_eof
;

3243 
_ã°_eof85
: 
cs
 = 85; 
_ã°_eof
;

3244 
_ã°_eof86
: 
cs
 = 86; 
_ã°_eof
;

3245 
_ã°_eof87
: 
cs
 = 87; 
_ã°_eof
;

3246 
_ã°_eof88
: 
cs
 = 88; 
_ã°_eof
;

3247 
_ã°_eof122
: 
cs
 = 122; 
_ã°_eof
;

3248 
_ã°_eof89
: 
cs
 = 89; 
_ã°_eof
;

3249 
_ã°_eof90
: 
cs
 = 90; 
_ã°_eof
;

3250 
_ã°_eof91
: 
cs
 = 91; 
_ã°_eof
;

3251 
_ã°_eof92
: 
cs
 = 92; 
_ã°_eof
;

3252 
_ã°_eof93
: 
cs
 = 93; 
_ã°_eof
;

3253 
_ã°_eof94
: 
cs
 = 94; 
_ã°_eof
;

3254 
_ã°_eof95
: 
cs
 = 95; 
_ã°_eof
;

3255 
_ã°_eof96
: 
cs
 = 96; 
_ã°_eof
;

3256 
_ã°_eof97
: 
cs
 = 97; 
_ã°_eof
;

3257 
_ã°_eof98
: 
cs
 = 98; 
_ã°_eof
;

3258 
_ã°_eof99
: 
cs
 = 99; 
_ã°_eof
;

3259 
_ã°_eof100
: 
cs
 = 100; 
_ã°_eof
;

3260 
_ã°_eof101
: 
cs
 = 101; 
_ã°_eof
;

3261 
_ã°_eof102
: 
cs
 = 102; 
_ã°_eof
;

3262 
_ã°_eof103
: 
cs
 = 103; 
_ã°_eof
;

3263 
_ã°_eof104
: 
cs
 = 104; 
_ã°_eof
;

3264 
_ã°_eof105
: 
cs
 = 105; 
_ã°_eof
;

3265 
_ã°_eof106
: 
cs
 = 106; 
_ã°_eof
;

3266 
_ã°_eof107
: 
cs
 = 107; 
_ã°_eof
;

3267 
_ã°_eof108
: 
cs
 = 108; 
_ã°_eof
;

3268 
_ã°_eof109
: 
cs
 = 109; 
_ã°_eof
;

3269 
_ã°_eof110
: 
cs
 = 110; 
_ã°_eof
;

3270 
_ã°_eof111
: 
cs
 = 111; 
_ã°_eof
;

3271 
_ã°_eof112
: 
cs
 = 112; 
_ã°_eof
;

3272 
_ã°_eof113
: 
cs
 = 113; 
_ã°_eof
;

3273 
_ã°_eof114
: 
cs
 = 114; 
_ã°_eof
;

3274 
_ã°_eof115
: 
cs
 = 115; 
_ã°_eof
;

3275 
_ã°_eof123
: 
cs
 = 123; 
_ã°_eof
;

3276 
_ã°_eof116
: 
cs
 = 116; 
_ã°_eof
;

3277 
_ã°_eof117
: 
cs
 = 117; 
_ã°_eof
;

3278 
_ã°_eof118
: 
cs
 = 118; 
_ã°_eof
;

3279 
_ã°_eof119
: 
cs
 = 119; 
_ã°_eof
;

3281 
_ã°_eof
: {}

3282 
_out
: {}

3287 
∑r£r
->
cs
 = cs;

3288 
∑r£r
->
ƒód
 +
p
 - (
buf„r
 + 
off
);

3290 
	`as£π
(
p
 <
≥
 && "buffer overflowáfterÖarsingÉxecute");

3291 
	`as£π
(
∑r£r
->
ƒód
 <
Àn
 && "nreadÜongerÅhanÜength");

3292 
	`as£π
(
∑r£r
->
body_°¨t
 <
Àn
 && "body startsáfter bufferÉnd");

3293 
	`check
(
∑r£r
->
m¨k
 < 
Àn
, "mark isáfter bufferÉnd");

3294 
	`check
(
∑r£r
->
fõld_Àn
 <
Àn
, "field hasÜengthÜongerÅhan whole buffer");

3295 
	`check
(
∑r£r
->
fõld_°¨t
 < 
Àn
, "field startsáfter bufferÉnd");

3297 if(
∑r£r
->
body_°¨t
) {

3299 
∑r£r
->
ƒód
++;

3302 (
∑r£r
->
ƒód
);

3304 
îr‹
:

3306 
	}
}

3308 
	$hâp˛õ¡_∑r£r_föish
(
hâp˛õ¡_∑r£r
 *
∑r£r
)

3310 
cs
 = 
∑r£r
->cs;

3312 
∑r£r
->
cs
 = cs;

3314 i‡(
	`hâp˛õ¡_∑r£r_has_îr‹
(
∑r£r
) ) {

3316 } i‡(
	`hâp˛õ¡_∑r£r_is_föished
(
∑r£r
) ) {

3321 
	}
}

3323 
	$hâp˛õ¡_∑r£r_has_îr‹
(
hâp˛õ¡_∑r£r
 *
∑r£r
) {

3324  
∑r£r
->
cs
 =
hâp˛õ¡_∑r£r_îr‹
;

3325 
	}
}

3327 
	$hâp˛õ¡_∑r£r_is_föished
(
hâp˛õ¡_∑r£r
 *
∑r£r
) {

3328  
∑r£r
->
cs
 =
hâp˛õ¡_∑r£r_fú°_föÆ
;

3329 
	}
}

	@http11/httpclient_parser.h

35 #i‚de‡
hâp˛õ¡_∑r£r_h


36 
	#hâp˛õ¡_∑r£r_h


	)

38 
	~<hâp11/hâp11_comm⁄.h
>

40 
	shâp˛õ¡_∑r£r
 {

41 
	mcs
;

42 
size_t
 
	mbody_°¨t
;

43 
	mc⁄ã¡_Àn
;

44 
	m°©us
;

45 
	mchunked
;

46 
	mchunks_d⁄e
;

47 
	m˛o£
;

48 
size_t
 
	mƒód
;

49 
size_t
 
	mm¨k
;

50 
size_t
 
	mfõld_°¨t
;

51 
size_t
 
	mfõld_Àn
;

53 *
	md©a
;

55 
fõld_cb
 
	mhâp_fõld
;

56 
ñemít_cb
 
	mªas⁄_phø£
;

57 
ñemít_cb
 
	m°©us_code
;

58 
ñemít_cb
 
	mchunk_size
;

59 
ñemít_cb
 
	mhâp_vîsi⁄
;

60 
ñemít_cb
 
	mhódî_d⁄e
;

61 
ñemít_cb
 
	mœ°_chunk
;

64 } 
	thâp˛õ¡_∑r£r
;

66 
hâp˛õ¡_∑r£r_öô
(
hâp˛õ¡_∑r£r
 *
∑r£r
);

67 
hâp˛õ¡_∑r£r_föish
(
hâp˛õ¡_∑r£r
 *
∑r£r
);

68 
hâp˛õ¡_∑r£r_execuã
(
hâp˛õ¡_∑r£r
 *
∑r£r
, c⁄° *
d©a
, 
size_t
 
Àn
, size_à
off
);

69 
hâp˛õ¡_∑r£r_has_îr‹
(
hâp˛õ¡_∑r£r
 *
∑r£r
);

70 
hâp˛õ¡_∑r£r_is_föished
(
hâp˛õ¡_∑r£r
 *
∑r£r
);

72 
	#hâp˛õ¡_∑r£r_ƒód
(
∑r£r
Ë’¨£r)->
ƒód


	)

	@io.c

35 
	#_XOPEN_SOURCE
 500

	)

37 
	~<°dlib.h
>

38 
	~<as£π.h
>

39 
	~<uni°d.h
>

40 
	~"io.h
"

41 
	~"ªgi°î.h
"

42 
	~"mem/hÆloc.h
"

43 
	~"dbg.h
"

44 
	~"pﬁ¨s¶/havege.h
"

45 
	~"pﬁ¨s¶/s¶.h
"

46 
	~"èsk/èsk.h
"

47 
	~"adt/d¨øy.h
"

49 
	gIO_SSL_VERIFY_METHOD
 = 
SSL_VERIFY_NONE
;

51 
ssize_t
 
	$nuŒ_£nd
(
IOBuf
 *
iob
, *
buf„r
, 
Àn
)

53 ()
iob
;

54 ()
buf„r
;

56  
Àn
;

57 
	}
}

59 
ssize_t
 
	$nuŒ_ªcv
(
IOBuf
 *
iob
, *
buf„r
, 
Àn
)

61 ()
iob
;

62 ()
buf„r
;

64  
Àn
;

65 
	}
}

67 
ssize_t
 
	$nuŒ_°ªam_fûe
(
IOBuf
 *
iob
, 
fd
, 
off_t
 
Àn
)

69 ()
iob
;

70 ()
fd
;

72  
Àn
;

73 
	}
}

75 
ssize_t
 
	$∂aöãxt_£nd
(
IOBuf
 *
iob
, *
buf„r
, 
Àn
)

77  
	`fd£nd
(
iob
->
fd
, 
buf„r
, 
Àn
);

78 
	}
}

80 
ssize_t
 
	$∂aöãxt_ªcv
(
IOBuf
 *
iob
, *
buf„r
, 
Àn
)

82  
	`fdªcv
(
iob
->
fd
, 
buf„r
, 
Àn
);

83 
	}
}

85 
ssize_t
 
	$fûe_£nd
(
IOBuf
 *
iob
, *
buf„r
, 
Àn
)

87  
	`fdwrôe
(
iob
->
fd
, 
buf„r
, 
Àn
);

88 
	}
}

90 
ssize_t
 
	$fûe_ªcv
(
IOBuf
 *
iob
, *
buf„r
, 
Àn
)

92  
	`fdªad
(
iob
->
fd
, 
buf„r
, 
Àn
);

93 
	}
}

95 
ssize_t
 
	$∂aö_°ªam_fûe
(
IOBuf
 *
iob
, 
fd
, 
off_t
 
Àn
)

97 
off_t
 
£¡
;

98 
off_t
 
tŸÆ
 = 0;

99 
off_t
 
off£t
 = 0;

100 
off_t
 
block_size
 = 
MAX_SEND_BUFFER
;

101 
c⁄n_fd
 = 
	`IOBuf_fd
(
iob
);

103 
tŸÆ
 = 0; 
	`fdwaô
(
c⁄n_fd
, 'w'Ë=0 &&ÅŸÆ < 
Àn
;ÅŸÆ +
£¡
) {

105 
block_size
 = (
Àn
 - 
tŸÆ
) > block_size ? block_size : (len -Åotal);

106 
£¡
 = 
	`IOBuf_£ndfûe
(
c⁄n_fd
, 
fd
, &
off£t
, 
block_size
);

108 
	`check
(
	`Regi°î_wrôe
(
iob
->
fd
, 
£¡
) != -1, "Socket seemsÅo be closed.");

110 
	`check_debug
(
£¡
 > 0, "Client closedÖrobably during sendfile on socket: %d from "

111 "fûê%d", 
c⁄n_fd
, 
fd
);

114 
	`check
(
tŸÆ
 <
Àn
,

116 ()
tŸÆ
, 
Àn
);

118 
	`check
(
tŸÆ
 =
Àn
,

120 ()
tŸÆ
, 
Àn
);

122  
tŸÆ
;

124 
îr‹
:

126 
	}
}

128 
	$s¶_fd£nd_wøµî
(*
p_iob
, c⁄° *
ubuf„r
, 
size_t
 
Àn
)

130 
IOBuf
 *
iob
 = (IOBu‡*Ë
p_iob
;

131  
	`fd£nd
(
iob
->
fd
, (*Ë
ubuf„r
, 
Àn
);

132 
	}
}

134 
	$s¶_fdªcv_wøµî
(*
p_iob
, *
ubuf„r
, 
size_t
 
Àn
)

136 
IOBuf
 *
iob
 = (IOBu‡*Ë
p_iob
;

137  
	`fdªcv1
(
iob
->
fd
, (*Ë
ubuf„r
, 
Àn
);

138 
	}
}

140 
	$s¶_do_h™dshake
(
IOBuf
 *
iob
)

142 
rcode
;

143 
	`check
(!
iob
->
h™dshake_≥rf‹med
, "ssl_do_handshake called unnecessarily");

144 (
rcode
 = 
	`s¶_h™dshake
(&
iob
->
s¶
)) != 0) {

146 
	`check
(
rcode
 =
POLARSSL_ERR_NET_WANT_READ


147 || 
rcode
 =
POLARSSL_ERR_NET_WANT_WRITE
, "Handshake failed withÉrror code: %d",Ñcode);

149 
iob
->
h™dshake_≥rf‹med
 = 1;

151 
îr‹
:

153 
	}
}

155 
ssize_t
 
	$s¶_£nd
(
IOBuf
 *
iob
, *
buf„r
, 
Àn
)

157 
£¡
;

158 
tŸÆ
 = 0;

160 
	`check
(
iob
->
u£_s¶
, "IOBufÇot set upÅo use ssl");

162 if(!
iob
->
h™dshake_≥rf‹med
) {

163 
rcode
 = 
	`s¶_do_h™dshake
(
iob
);

164 
	`check
(
rcode
 == 0, "SSL handshake failed: %d",Ñcode);

167 ; 
Àn
 > 0; 
buf„r
 +
£¡
,Üí -£¡, 
tŸÆ
 += sent) {

168 
£¡
 = 
	`s¶_wrôe
(&
iob
->
s¶
, (c⁄° *Ë
buf„r
, 
Àn
);

170 
	`check
(
£¡
 != -1, "Error sending SSL data.");

171 
	`check
(
£¡
 <
Àn
, "Buffer overflow. Too much data sent by ssl_write");

174 if(
£¡
 < 
Àn
) {

175 
	`èskyõld
();

179  
tŸÆ
;

181 
îr‹
:

183 
	}
}

185 
ssize_t
 
	$s¶_ªcv
(
IOBuf
 *
iob
, *
buf„r
, 
Àn
)

187 
	`check
(
iob
->
u£_s¶
, "IOBufÇot set upÅo use ssl");

189 if(!
iob
->
h™dshake_≥rf‹med
) {

190 
rcode
 = 
	`s¶_do_h™dshake
(
iob
);

191 
	`check
(
rcode
 == 0, "SSL handshake failed: %d",Ñcode);

194  
	`s¶_ªad
(&
iob
->
s¶
, (*Ë
buf„r
, 
Àn
);

195 
îr‹
:

197 
	}
}

199 
ssize_t
 
	$s¶_°ªam_fûe
(
IOBuf
 *
iob
, 
fd
, 
off_t
 
Àn
)

201 
ssize_t
 
£¡
 = 0;

202 
off_t
 
tŸÆ
 = 0;

203 
ssize_t
 
amt
 = 0;

204 
ssize_t
 
to£nd
 = 0;

205 
c⁄n_fd
 = 
	`IOBuf_fd
(
iob
);

206 
buff
[1024];

208 
tŸÆ
 = 0; 
	`fdwaô
(
c⁄n_fd
, 'w'Ë=0 &&ÅŸÆ < 
Àn
;ÅŸÆ +
to£nd
) {

209 
to£nd
 = 
	`¥ód
(
fd
, 
buff
, (buff), 
tŸÆ
);

210 
	`check_debug
(
to£nd
 > 0, "Camêu∞sh‹àöÑódög fûê%d\n", 
fd
);

214 if(
to£nd
 + 
tŸÆ
 > 
Àn
)

215 
to£nd
 = 
Àn
 - 
tŸÆ
;

217 
£¡
 = 0;

218 
£¡
 < 
to£nd
) {

219 
amt
 = 
	`s¶_£nd
(
iob
, 
buff
, 
to£nd
);

220 
	`check_debug
(
amt
 > 0, "ssl_send failed in ssl_stream_file with "

221 "ªtu∫ codê%zd", 
amt
);

222 
£¡
 +
amt
;

225 
	`check
(
	`Regi°î_wrôe
(
iob
->
fd
, 
£¡
) != -1, "FailedÅoÑecord write, must have died.");

228 
	`check
(
tŸÆ
 <
Àn
,

230 ()
tŸÆ
, 
Àn
);

232 
	`check
(
tŸÆ
 =
Àn
,

234 ()
tŸÆ
, 
Àn
);

236  
tŸÆ
;

238 
îr‹
:

240 
	}
}

242 
	$s¶_debug
(*
p
, 
Àvñ
, c⁄° *
msg
)

244 ()
p
;

245 i‡(
msg
) {}

247 if(
Àvñ
 < 2) {

248 
	`debug
("pﬁ¨s¶: %s", 
msg
);

250 
	}
}

258 
d¨øy_t
 *
	gSSL_SESSION_CACHE
 = 
NULL
;

259 c⁄° 
	gSSL_INITIAL_CACHE_SIZE
 = 300;

261 
ölöe
 
	$£tup_s¶_£ssi⁄_ˇche
()

263 if(
SSL_SESSION_CACHE
 =
NULL
) {

264 
SSL_SESSION_CACHE
 = 
	`d¨øy_¸óã
(
SSL_INITIAL_CACHE_SIZE
, (
s¶_£ssi⁄
));

265 
	`check_mem
(
SSL_SESSION_CACHE
);

268 
îr‹
:

270 
	}
}

273 
	$sim∂e_gë_ˇche
–*
p_s¶
, 
s¶_£ssi⁄
 *
s¢
 )

275 
s¶_c⁄ãxt
 *
s¶
 = (s¶_c⁄ãxà*Ë
p_s¶
;

276 
i
 = 0;

278 
	`check
(
	`£tup_s¶_£ssi⁄_ˇche
() == 0, "FailedÅo initialize SSL session cache.");

280 if–
s¶
->
h™dshake
->
ªsume
 == 0 )  1;

281 
s¶_£ssi⁄
 *
cur
 = 
NULL
;

283 
i
 = 0; i < 
	`d¨øy_íd
(
SSL_SESSION_CACHE
); i++) {

284 
cur
 = 
	`d¨øy_gë
(
SSL_SESSION_CACHE
, 
i
);

286 if–
s¢
->
cùhîsuôe
 !
cur
->ciphersuite ||

287 
s¢
->
Àngth
 !
cur
->length )

292 if–
	`memcmp
–
s¢
->
id
, 
cur
->id, cur->
Àngth
 ) != 0 ) {

297 
	`mem˝y
–
s¢
->
ma°î
, 
cur
->master, 48 );

299 
x509_¸t
* 
_x509P
 = 
cur
->
≥î_˚π
;

300 i‡(
_x509P
 =
NULL
) {

301 
	`debug
("failedÅo findÖeer_cert in handshake during get");

304 
s¢
->
≥î_˚π
=
_x509P
;

309 
îr‹
:

311 
	}
}

313 
	$sim∂e_£t_ˇche
–*
p_s¶
, c⁄° 
s¶_£ssi⁄
 *
s¢
 )

315 
s¶_c⁄ãxt
 *
s¶
 = (s¶_c⁄ãxà*Ë
p_s¶
;

316 
i
 = 0;

317 
s¶_£ssi⁄
 *
cur
 = 
NULL
;

318 
make_√w
 = 1;

319 
	`check
(
	`£tup_s¶_£ssi⁄_ˇche
() == 0, "FailedÅo initialize SSL session cache.");

321 
i
 = 0; i < 
	`d¨øy_íd
(
SSL_SESSION_CACHE
); i++) {

322 
cur
 = 
	`d¨øy_gë
(
SSL_SESSION_CACHE
, 
i
);

324 if–
	`memcmp
–
s¢
->
id
, 
cur
->id, cur->
Àngth
 ) == 0 ) {

325 
make_√w
 = 0;

330 if(
make_√w
) {

331 
cur
 = (
s¶_£ssi⁄
 *Ë
	`d¨øy_√w
(
SSL_SESSION_CACHE
);

332 
	`check_mem
(
cur
);

333 
	`d¨øy_push
(
SSL_SESSION_CACHE
, 
cur
);

336 *
cur
 = *
s¢
;

338 c⁄° 
x509_¸t
* 
_x509P
 = 
	`s¶_gë_≥î_˚π
–
s¶
 );

339 i‡(
_x509P
 =
NULL
) {

340 
	`debug
("failedÅo findÖeer_cert in handshake");

344 
rc
 = 0;

345 i‡((
rc
 = 
	`x509_¸t_∑r£
–
cur
->
≥î_˚π
, 
_x509P
->
øw
.
p
, _x509P->øw.
Àn
)) != 0) {

346 
	`debug
("ÁûedÅÿ£à≥î_˚π durög h™dshake:rc:%d:", 
rc
);

350 
îr‹
:

352 
	}
}

356 
ölöe
 
	$iobuf_s¶_£tup
(
IOBuf
 *
buf
)

358 
rc
 = 0;

360 
buf
->
u£_s¶
 = 1;

361 
buf
->
h™dshake_≥rf‹med
 = 0;

363 
rc
 = 
	`s¶_öô
(&
buf
->
s¶
);

364 
	`check
(
rc
 == 0, "FailedÅo initialize SSL structure.");

366 
	`s¶_£t_ídpoöt
(&
buf
->
s¶
, 
SSL_IS_SERVER
);

367 
	`s¶_£t_authmode
(&
buf
->
s¶
, 
IO_SSL_VERIFY_METHOD
);

369 
	`havege_öô
(&
buf
->
hs
);

370 
	`s¶_£t_∫g
(&
buf
->
s¶
, 
havege_øndom
, &buf->
hs
);

372 #i‚de‡
DEBUG


373 
	`s¶_£t_dbg
(&
buf
->
s¶
, 
s¶_debug
, 
NULL
);

376 
	`s¶_£t_bio
(&
buf
->
s¶
, 
s¶_fdªcv_wøµî
, buf,

377 
s¶_fd£nd_wøµî
, 
buf
);

379 
	`mem£t
(&
buf
->
s¢
, 0, (buf->ssn));

380 
	`s¶_£t_£ssi⁄
(&
buf
->
s¶
, &buf->
s¢
);

382 
	`s¶_£t_£ssi⁄_ˇche
(&
buf
->
s¶
, 
sim∂e_gë_ˇche
, &buf->s¶, 
sim∂e_£t_ˇche
, &buf->ssl);

385 
îr‹
:

387 
	}
}

389 
IOBuf
 *
	$IOBuf_¸óã
(
size_t
 
Àn
, 
fd
, 
IOBufTy≥
 
ty≥
)

391 
IOBuf
 *
buf
 = 
	`mÆloc
((IOBuf));

392 
	`check_mem
(
buf
);

394 
buf
->
Àn
 =Üen;

395 
buf
->
avaû
 = 0;

396 
buf
->
cur
 = 0;

397 
buf
->
˛o£d
 = 0;

398 
buf
->bu‡
	`mÆloc
(
Àn
 + 1);

399 
	`check_mem
(
buf
->buf);

400 
buf
->
ty≥
 =Åype;

401 
buf
->
fd
 = fd;

402 
buf
->
u£_s¶
 = 0;

404 if(
ty≥
 =
IOBUF_SSL
) {

405 
	`check
(
	`iobuf_s¶_£tup
(
buf
) != -1, "FailedÅo setup SSL.");

406 
buf
->
£nd
 = 
s¶_£nd
;

407 
buf
->
ªcv
 = 
s¶_ªcv
;

408 
buf
->
°ªam_fûe
 = 
s¶_°ªam_fûe
;

409 } if(
ty≥
 =
IOBUF_NULL
) {

410 
buf
->
£nd
 = 
nuŒ_£nd
;

411 
buf
->
ªcv
 = 
nuŒ_ªcv
;

412 
buf
->
°ªam_fûe
 = 
nuŒ_°ªam_fûe
;

413 } if(
ty≥
 =
IOBUF_FILE
) {

414 
buf
->
£nd
 = 
fûe_£nd
;

415 
buf
->
ªcv
 = 
fûe_ªcv
;

416 
buf
->
°ªam_fûe
 = 
∂aö_°ªam_fûe
;

417 } if(
ty≥
 =
IOBUF_SOCKET
) {

418 
buf
->
£nd
 = 
∂aöãxt_£nd
;

419 
buf
->
ªcv
 = 
∂aöãxt_ªcv
;

420 
buf
->
°ªam_fûe
 = 
∂aö_°ªam_fûe
;

422 
	`£¡öñ
("InvÆid IOBufTy≥ giví: %d", 
ty≥
);

425  
buf
;

427 
îr‹
:

428 if(
buf
Ë
	`h_‰ì
(buf);

429  
NULL
;

430 
	}
}

432 
	$IOBuf_˛o£
(
IOBuf
 *
buf
)

434 
rc
 = 0;

436 if(
buf
) {

437 if(
buf
->
u£_s¶
) {

438 
rc
 = 
	`s¶_˛o£_nŸify
(&
buf
->
s¶
);

441 
	`fd˛o£
(
buf
->
fd
);

442 
buf
->
fd
=-1;

445  
rc
;

446 
	}
}

448 
	$IOBuf_de°roy
(
IOBuf
 *
buf
)

450 if(
buf
) {

451 
	`IOBuf_˛o£
(
buf
);

453 if(
buf
->
u£_s¶
) {

454 
	`s¶_‰ì
(&
buf
->
s¶
);

457 if(
buf
->bufË
	`‰ì
(buf->buf);

458 
	`‰ì
(
buf
);

460 
	}
}

462 
	$IOBuf_ªsize
(
IOBuf
 *
buf
, 
size_t
 
√w_size
)

464 
buf
->bu‡
	`ªÆloc
(buf->buf, 
√w_size
);

465 
buf
->
Àn
 = 
√w_size
;

466 
	}
}

469 
ölöe
 
	$IOBuf_com∑˘
(
IOBuf
 *
buf
)

471 
	`memmove
(
buf
->buf, 
	`IOBuf_°¨t
(buf), buf->
avaû
);

472 
buf
->
cur
 = 0;

473 
	}
}

490 *
	$IOBuf_ªad
(
IOBuf
 *
buf
, 
√ed
, *
out_Àn
)

492 
rc
 = 0;

493 
	`as£π
(
buf
->
cur
 + buf->
avaû
 <buf->
Àn
 &&

495 
	`as£π
(
buf
->
cur
 >= 0 && "Buffer cur can't be < 0");

496 
	`as£π
(
buf
->
avaû
 >= 0 && "Bufferávail can't be < 0");

497 
	`as£π
(
√ed
 <
buf
->
Àn
 && "Request for moreÅhanÖossible inÅhe buffer.");

499 if(
	`IOBuf_˛o£d
(
buf
)) {

500 if(
buf
->
avaû
 > 0) {

501 *
out_Àn
 = 
buf
->
avaû
;

503 *
out_Àn
 = 0;

504  
NULL
;

506 } if(
buf
->
avaû
 < 
√ed
) {

507 if(
buf
->
cur
 > 0 && 
	`IOBuf_com∑˘_√eded
(buf, 
√ed
)) {

508 
	`IOBuf_com∑˘
(
buf
);

510 
rc
 = 
buf
->
	`ªcv
(buf, 
	`IOBuf_ªad_poöt
(buf), 
	`IOBuf_ªmaöög
(buf));

512 if(
rc
 <= 0) {

513 
	`debug
("Sockë wa†˛o£d, wû»ªtu∫ o∆y wh©'†avaûabÀ: %d", 
buf
->
avaû
);

514 
buf
->
˛o£d
 = 1;

516 
buf
->
avaû
 = buf->avaû + 
rc
;

519 if(
buf
->
avaû
 < 
√ed
) {

521 *
out_Àn
 = 
buf
->
avaû
;

524 *
out_Àn
 = 
√ed
;

526 } if(
buf
->
avaû
 >
√ed
) {

527 *
out_Àn
 = 
√ed
;

529 
	`£¡öñ
("Invalid branchÖrocessing buffer, Tell Zed.");

532  
	`IOBuf_°¨t
(
buf
);

534 
îr‹
:

535  
NULL
;

536 
	}
}

544 
	$IOBuf_ªad_commô
(
IOBuf
 *
buf
, 
√ed
)

546 
buf
->
avaû
 -
√ed
;

547 
	`as£π
(
buf
->
avaû
 >= 0 && "Buffer commitÑeducedávailÅo < 0.");

549 
	`check
(
	`Regi°î_ªad
(
buf
->
fd
, 
√ed
) != -1, "FailedÅoÑecordÑead, must have died.");

551 
buf
->
m¨k
 = 0;

553 if(
buf
->
avaû
 == 0) {

555 
buf
->
cur
 = 0;

557 
buf
->
cur
 +
√ed
;

561 
îr‹
:

563 
	}
}

569 
	$IOBuf_£nd
(
IOBuf
 *
buf
, *
d©a
, 
Àn
)

571 
rc
 = 0;

573 
rc
 = 
buf
->
	`£nd
(buf, 
d©a
, 
Àn
);

575 if(
rc
 >= 0) {

576 
	`check
(
	`Regi°î_wrôe
(
buf
->
fd
, 
rc
) != -1, "FailedÅoÑecord write, must have died.");

578 
buf
->
˛o£d
 = 1;

581  
rc
;

583 
îr‹
:

585 
	}
}

591 *
	$IOBuf_ªad_Æl
(
IOBuf
 *
buf
, 
Àn
, 
ªåõs
)

593 
ƒód
 = 0;

594 
©ãm±s
 = 0;

596 
	`check_debug
(!
	`IOBuf_˛o£d
(
buf
), "Closed whenáttemptingÅoÑead from buffer.");

598 if(
Àn
 > 
buf
->len) {

600 
	`IOBuf_ªsize
(
buf
, 
Àn
);

603 *
d©a
 = 
	`IOBuf_ªad
(
buf
, 
Àn
, &
ƒód
);

605 
	`debug
("INITIAL READ:Üí: %d,Çªad: %d", 
Àn
, 
ƒód
);

606 
©ãm±s
 = 0; 
ƒód
 < 
Àn
;áttempts++) {

607 
d©a
 = 
	`IOBuf_ªad
(
buf
, 
Àn
, &
ƒód
);

609 
	`check_debug
(
d©a
, "ReadÉrror from socket.");

611 
	`as£π
(
ƒód
 <
Àn
 && "InvalidÇread size (too much) on IOBufÑead.");

613 if(
ƒód
 =
Àn
) {

616 
	`check
(!
	`IOBuf_˛o£d
(
buf
), "Socket closed during IOBuf_read_all.");

617 
	`fdwaô
(
buf
->
fd
, 'r');

621 
	`debug
("ATTEMPTS: %d, RETRIES: %d", 
©ãm±s
, 
ªåõs
);

623 if(
©ãm±s
 > 
ªåõs
) {

624 
	`log_w¨n
("Ród o‡%dÜígtháâem±ed %dÅime†which i†ovî %dÑëryÜimô..", 
Àn
, 
©ãm±s
, 
ªåõs
);

627 
	`check
(
	`IOBuf_ªad_commô
(
buf
, 
Àn
) != -1, "Final commit failed ofÑead_all.");

628  
d©a
;

630 
îr‹
:

631 
buf
->
˛o£d
 = 1;

632  
NULL
;

633 
	}
}

640 
	$IOBuf_°ªam
(
IOBuf
 *
‰om
, IOBu‡*
to
, 
tŸÆ
)

642 
√ed
 = 0;

643 
ªmaö
 = 
tŸÆ
;

644 
avaû
 = 0;

645 
rc
 = 0;

647 if(
‰om
->
Àn
 > 
to
->ÀnË
	`IOBuf_ªsize
(to, from->len);

649 
ªmaö
 > 0) {

650 
√ed
 = 
ªmaö
 <
‰om
->
Àn
 ?Ñemain : from->len;

652 
	`IOBuf_ªad
(
‰om
, 
√ed
, &
avaû
);

653 
	`check_debug
(
avaû
 > 0, "Nothing inÑead buffer.");

655 
rc
 = 
	`IOBuf_£nd_Æl
(
to
, 
	`IOBuf_°¨t
(
‰om
), 
avaû
);

656 
	`check_debug
(
rc
 =
avaû
, "FailedÅo sendáll ofÅhe data: %d of %d",Ñc,ávail)

659 
	`check
(
	`IOBuf_ªad_commô
(
‰om
, 
rc
) != -1, "Final commit failed during streaming.");

662 
ªmaö
 -
rc
;

665 
	`as£π
(
ªmaö
 == 0 && "Buffer math is wrong.");

667  
tŸÆ
 - 
ªmaö
;

669 
îr‹
:

671 
	}
}

675 
	$IOBuf_£nd_Æl
(
IOBuf
 *
buf
, *
d©a
, 
Àn
)

677 
rc
 = 0;

678 
tŸÆ
 = 
Àn
;

681 
rc
 = 
	`IOBuf_£nd
(
buf
, 
d©a
, 
tŸÆ
);

682 
	`check
(
rc
 > 0, "WriteÉrror when sendingáll.");

683 
tŸÆ
 -
rc
;

684 } 
tŸÆ
 > 0);

686 
	`as£π
(
tŸÆ
 == 0 && "MathÉrror sendingáll from buffer.");

688  
Àn
;

690 
îr‹
:

692 
	}
}

694 
	$IOBuf_ªgi°î_disc⁄√˘
(
IOBuf
 *
buf
)

696 
rc
=0;

697 if(
	`IOBuf_fd
(
buf
)>0) {

698 
rc

	`Regi°î_disc⁄√˘
(
	`IOBuf_fd
(
buf
));

699  
rc
;

702 
	}
}

705 
	$IOBuf_°ªam_fûe
(
IOBuf
 *
buf
, 
fd
, 
off_t
 
Àn
)

707 
rc
 = 0;

712 
rc
 = 
buf
->
	`°ªam_fûe
(buf, 
fd
, 
Àn
);

714 if(
rc
 < 0Ë
buf
->
˛o£d
 = 1;

716  
rc
;

717 
	}
}

	@io.h

1 #i‚de‡
_io_h


2 
	#_io_h


	)

4 #i‚de‡
_FILE_OFFSET_BITS


5 
	#_FILE_OFFSET_BITS
 64

	)

8 
	~<°dlib.h
>

9 
	~<pﬁ¨s¶/x509.h
>

10 
	~<pﬁ¨s¶/s¶.h
>

11 
	~<pﬁ¨s¶/havege.h
>

13 #i‡
deföed
(
__APPLE__
Ë|| deföed(
__FªeBSD__
Ë|| deföed(
__NëBSD__
Ë|| deföed(
__O≥nBSD__
)

14 
	~"bsd_•ecific.h
"

16 
	~<sys/£ndfûe.h
>

19 
MAX_SEND_BUFFER
;

20 
IO_SSL_VERIFY_METHOD
;

22 
	gIOBuf
;

24 
	$ssize_t
 (*
	tio_cb
)(
	tIOBuf
 *, *
	td©a
, 
	tÀn
);

25 
	$ssize_t
 (*
	tio_°ªam_fûe_cb
)(
	tIOBuf
 *, 
	tfd
, 
	toff_t
 
	tÀn
);

27 
	eIOBufTy≥
 {

28 
IOBUF_SSL
, 
IOBUF_SOCKET
, 
IOBUF_FILE
, 
IOBUF_NULL


29 } 
	tIOBufTy≥
;

31 
	sIOBuf
 {

34 
Àn
;

37 
avaû
;

40 
cur
;

43 
m¨k
;

45 
˛o£d
;

46 
io_cb
 
ªcv
;

47 
io_cb
 
£nd
;

48 
io_°ªam_fûe_cb
 
°ªam_fûe
;

49 *
buf
;

51 
ty≥
;

53 
fd
;

54 
u£_s¶
;

55 
h™dshake_≥rf‹med
;

56 
s¶_c⁄ãxt
 
s¶
;

57 
s¶_£ssi⁄
 
s¢
;

58 
havege_°©e
 
hs
;

59 } 
	tIOBuf
;

61 
IOBuf
 *
	`IOBuf_¸óã
(
size_t
 
Àn
, 
fd
, 
IOBufTy≥
 
ty≥
);

63 
	`IOBuf_ªsize
(
IOBuf
 *
buf
, 
size_t
 
√w_size
);

65 
	`IOBuf_de°roy
(
IOBuf
 *
buf
);

66 
	`IOBuf_˛o£
(
IOBuf
 *
buf
);

67 
	`IOBuf_ªgi°î_disc⁄√˘
(
IOBuf
 *
buf
);

69 *
	`IOBuf_ªad
(
IOBuf
 *
buf
, 
√ed
, *
out_Àn
);

70 
	`IOBuf_ªad_commô
(
IOBuf
 *
buf
, 
√ed
);

72 
	`IOBuf_£nd
(
IOBuf
 *
buf
, *
d©a
, 
Àn
);

74 
	`IOBuf_£nd_Æl
(
IOBuf
 *
buf
, *
d©a
, 
Àn
);

76 *
	`IOBuf_ªad_Æl
(
IOBuf
 *
buf
, 
Àn
, 
ªåõs
);

78 
	`IOBuf_°ªam
(
IOBuf
 *
‰om
, IOBu‡*
to
, 
tŸÆ
);

80 
	`IOBuf_°ªam_fûe
(
IOBuf
 *
buf
, 
fd
, 
off_t
 
Àn
);

82 
	#IOBuf_ªad_some
(
I
,
A
Ë
	`IOBuf_ªad
((I), (I)->
Àn
, A)

	)

84 
	#IOBuf_˛o£d
(
I
Ë((I)->
˛o£d
)

	)

86 
	#IOBuf_com∑˘_√eded
(
I
,
N
Ë((I)->
cur
 + (NË> (I)->
Àn
)

	)

88 
	#IOBuf_ªmaöög
(
I
Ë((I)->
Àn
 - (I)->
avaû
 - (I)->
cur
)

	)

89 
	#IOBuf_ªad_poöt
(
I
Ë((I)->
buf
 + (I)->
cur
 + (I)->
avaû
)

	)

90 
	#IOBuf_°¨t
(
I
Ë((I)->
buf
 + (I)->
cur
)

	)

92 
	#IOBuf_£t_m¨k
(
I
, 
N
Ë((I)->
m¨k
 = (N))

	)

93 
	#IOBuf_m¨k
(
I
Ë((I)->
m¨k
)

	)

95 
	#IOBuf_avaû
(
I
Ë((I)->
avaû
)

	)

97 
	#IOBuf_fd
(
I
Ë((I)->
fd
)

	)

99 #i‡
	`deföed
(
__APPLE__
Ë|| deföed(
__FªeBSD__
Ë|| deföed(
__NëBSD__
Ë|| deföed(
__O≥nBSD__
)

100 
	#IOBuf_£ndfûe
 
bsd_£ndfûe


	)

102 
	#IOBuf_£ndfûe
 
£ndfûe


	)

	@log.c

35 
	~"log.h
"

36 
	~"logrŸ©e.h
"

37 
	~"dbg.h
"

38 
	~"ªque°.h
"

39 
	~"hódîs.h
"

40 
	~"£âög.h
"

41 
	~"äë°rögs.h
"

42 
	~<°dio.h
>

43 
	~"zmq_com∑t.h
"

44 
	~<±hªad.h
>

46 *
	gLOG_SOCKET
 = 
NULL
;

47 
±hªad_t
 
	gLOG_THREAD
;

49 
	sLogC⁄fig
 {

50 
b°rög
 
	mfûe_«me
;

51 
b°rög
 
	mlog_•ec
;

52 
FILE
 *
	mlog_fûe
;

53 } 
	tLogC⁄fig
;

56 
	$LogC⁄fig_de°roy
(
LogC⁄fig
 *
c⁄fig
)

58 if(
c⁄fig
) {

59 
	`bde°roy
(
c⁄fig
->
fûe_«me
);

60 
	`bde°roy
(
c⁄fig
->
log_•ec
);

61 if(
c⁄fig
->
log_fûe
Ë
	`f˛o£
(config->log_file);

62 
	`‰ì
(
c⁄fig
);

64 
	}
}

66 *
	$Log_öã∫Æ_thªad
(*
•ec
)

68 
zmq_msg_t
 
msg
;

69 
rc
 = 0;

70 
LogC⁄fig
 *
c⁄fig
 = 
•ec
;

72 *
sockë
 = 
	`zmq_sockë
(
ZMQ_CTX
, 
ZMQ_SUB
);

73 
	`check
(
sockë
, "CouldÇot bindÅheÜogging subscribe socket.");

77 
rc
 = 
	`zmq_£tsock›t
(
sockë
, 
ZMQ_SUBSCRIBE
, "", 0);

78 
	`check
(
rc
 == 0, "CouldÇot subscribeÅoÅheÜogger.");

80 #ifde‡
ZMQ_LINGER


81 
›t
 = 0;

82 
rc
 = 
	`zmq_£tsock›t
(
sockë
, 
ZMQ_LINGER
, &
›t
, (opt));

83 
	`check
(
rc
 == 0, "CouldÇot setÅheÜinger option.");

86 
rc
 = 
	`zmq_c⁄√˘
(
sockë
, 
	`bd©a
(
c⁄fig
->
log_•ec
));

87 
	`check
(
rc
 =0, "Could c⁄√˘ÅÿloggögÉndpoöt: %s", 
	`bd©a
(
c⁄fig
->
log_•ec
));

91 
rc
 = 
	`zmq_msg_öô
(&
msg
);

92 
	`check
(
rc
 == 0, "FailedÅo initialize message.");

94 
rc
 = 
	`zmq_msg_ªcv
(&
msg
, 
sockë
, 0);

95 if(
rc
 =-1 && 
î∫o
 =
ETERM
) {

99 
	`check
(
rc
 >= 0, "FailedÅoÑeceive fromÅhe zeromqÜogging socket");

100 
	`check
(
	`zmq_msg_size
(&
msg
) > 0, "ReceivedÖoisonÖill,ÜogÅhreadÉxiting.");

102 
	`Ârötf
(
c⁄fig
->
log_fûe
, "%.*s", ()
	`zmq_msg_size
(&
msg
), (*)
	`zmq_msg_d©a
(&msg));

104 
rc
 = 
	`zmq_msg_˛o£
(&
msg
);

105 
	`check
(
rc
 == 0, "Message close failed.");

108 
rc
 = 
	`zmq_˛o£
(
sockë
);

109 
	`check
(
rc
 == 0, "CouldÇot close socket");

111 
	`LogC⁄fig_de°roy
(
c⁄fig
);

112  
NULL
;

114 
îr‹
:

115 
	`LogC⁄fig_de°roy
(
c⁄fig
);

117  
NULL
;

118 
	}
}

121 
LogC⁄fig
 *
	$LogC⁄fig_¸óã
(
b°rög
 
ac˚ss_log
, b°rög 
log_•ec
)

123 
LogC⁄fig
 *
c⁄fig
 = 
	`mÆloc
((LogConfig));

124 
c⁄fig
->
log_•ec
 =Üog_spec;

125 
c⁄fig
->
fûe_«me
 = 
ac˚ss_log
;

127 
c⁄fig
->
log_fûe
 = 
	`f›í
((*)c⁄fig->
fûe_«me
->
d©a
, "a+");

128 
	`check
(
c⁄fig
->
log_fûe
, "FaûedÅÿ›íÜog fûe: %†f‹ác˚s†loggög.", 
	`bd©a
(c⁄fig->
fûe_«me
));

129 
	`£tbuf
(
c⁄fig
->
log_fûe
, 
NULL
);

130 
	`check
(0==
	`add_log_to_rŸ©e_li°
(
c⁄fig
->
fûe_«me
,c⁄fig->
log_fûe
), "FailedÅoáddáccessÜogÅoÜist ofÜogsÅoÑotate.");

132  
c⁄fig
;

134 
îr‹
:

135 
	`LogC⁄fig_de°roy
(
c⁄fig
);

136  
NULL
;

137 
	}
}

140 
	$Log_öô
(
b°rög
 
ac˚ss_log
, b°rög 
log_•ec
)

142 
rc
 = 0;

143 
LogC⁄fig
 *
c⁄fig
 = 
NULL
;

145 if(
LOG_SOCKET
 =
NULL
)

147 
	`check
(
ZMQ_CTX
, "No ZMQ context, cannot startáccessÜog.");

149 if(
	`Sëtög_gë_öt
("disable.access_logging", 0))

151 
	`log_öfo
("AccessÜog is disabledáccordingÅo disable.access_logging.");

155 
c⁄fig
 = 
	`LogC⁄fig_¸óã
(
ac˚ss_log
, 
log_•ec
);

156 
	`check
(
c⁄fig
, "FailedÅo configureáccessÜogging.");

158 
LOG_SOCKET
 = 
	`zmq_sockë
(
ZMQ_CTX
, 
ZMQ_PUB
);

159 
	`check
(
LOG_SOCKET
 !
NULL
, "FailedÅo createáccessÜog socket");

161 #ifde‡
ZMQ_LINGER


162 
›t
 = 0;

163 
rc
 = 
	`zmq_£tsock›t
(
LOG_SOCKET
, 
ZMQ_LINGER
, &
›t
, (opt));

164 
	`check
(
rc
 == 0, "CouldÇot setÅheÜinger option.");

167 
rc
 = 
	`zmq_böd
(
LOG_SOCKET
, 
	`bd©a
(
log_•ec
));

168 
	`check
(
rc
 == 0, "FailedÅo bindáccess_log zeromq socket.");

170 
	`±hªad_¸óã
(&
LOG_THREAD
, 
NULL
, 
Log_öã∫Æ_thªad
, 
c⁄fig
);

175 
îr‹
:

177 
	`LogC⁄fig_de°roy
(
c⁄fig
);

179 
	}
}

182 
	$Log_pois⁄_w‹kîs
()

184 
	`check
(
LOG_SOCKET
 !
NULL
, "NoáccessÜog socket.");

186 
zmq_msg_t
 
msg
;

187 
rc
 = 
	`zmq_msg_öô_size
(&
msg
, 0);

188 
	`check
(
rc
 == 0, "CouldÇot create zmq message.");

190 
rc
 = 
	`zmq_msg_£nd
(&
msg
, 
LOG_SOCKET
, 0);

191 
	`check
(
rc
 >= 0, "CouldÇot send message");

193 
rc
 = 
	`zmq_msg_˛o£
(&
msg
);

194 
	`check
(
rc
 == 0, "FailedÅo close message object");

197 
îr‹
:

198 
	`zmq_msg_˛o£
(&
msg
);

200 
	}
}

202 
ölöe
 
b°rög
 
	$make_log_mesßge
(
Reque°
 *
ªq
, c⁄° *
ªmŸe_addr
,

203 
ªmŸe_p‹t
, 
°©us
, 
size
)

205 
b°rög
 
ªque°_mëhod
 = 
NULL
;

207 i‡(
	`Reque°_is_js⁄
(
ªq
)) {

208 
ªque°_mëhod
 = &
JSON_METHOD
;

209 } i‡(
	`Reque°_is_xml
(
ªq
)) {

210 
ªque°_mëhod
 = &
XML_METHOD
;

212 
ªque°_mëhod
 = 
ªq
->request_method;

215 
äs_outbuf
 
outbuf
 = {.
buf„r
 = 
NULL
};

216 
b°rög
 
b_ãmp
;

218 
	`check
(
	`äs_ªndî_log_°¨t
(&
outbuf
), "CouldÇot initialize buffer");

220 
	`äs_ªndî_numbî_¥ïíd
(&
outbuf
, 
size
);

221 
	`äs_ªndî_numbî_¥ïíd
(&
outbuf
, 
°©us
);

223 
b_ãmp
 = 
	`b‰omc°r
(
	`Reque°_is_js⁄
(
ªq
Ë? "" : 
	`bd©a
‘eq->
vîsi⁄
));

224 
	`äs_ªndî_°rög_¥ïíd
(&
outbuf
, 
b_ãmp
);

225 
	`bde°roy
(
b_ãmp
);

227 
	`äs_ªndî_°rög_¥ïíd
(&
outbuf
, 
	`Reque°_∑th
(
ªq
));

228 
	`äs_ªndî_°rög_¥ïíd
(&
outbuf
, 
ªque°_mëhod
);

229 
	`äs_ªndî_numbî_¥ïíd
(&
outbuf
, (Ë
	`time
(
NULL
));

230 
	`äs_ªndî_numbî_¥ïíd
(&
outbuf
, 
ªmŸe_p‹t
);

232 
b_ãmp
 = 
	`b‰omc°r
(
ªmŸe_addr
);

233 
	`äs_ªndî_°rög_¥ïíd
(&
outbuf
, 
b_ãmp
);

234 
	`bde°roy
(
b_ãmp
);

236 
	`äs_ªndî_°rög_¥ïíd
(&
outbuf
, 
ªq
->
èrgë_ho°
->
«me
);

238 
	`äs_ªndî_log_íd
(&
outbuf
);

241 
b°rög
 
log_d©a
 = 
	`äs_outbuf_to_b°rög
(&
outbuf
);

242 
	`bc⁄ch¨
(
log_d©a
, '\n');

244  
log_d©a
;

246 
îr‹
:

248  
NULL
;

249 
	}
}

251 
	$‰ì_log_msg
(*
d©a
, *
höt
)

253 ()
d©a
;

255 
	`bde°roy
((
b°rög
)
höt
);

256 
	}
}

258 
	$Log_ªque°
(
C⁄√˘i⁄
 *
c⁄n
, 
°©us
, 
size
)

260 
zmq_msg_t
 
msg
;

262 if(
LOG_SOCKET
 =
NULL
)

265 
b°rög
 
log_d©a
 = 
	`make_log_mesßge
(
c⁄n
->
ªq
, c⁄n->
ªmŸe
, c⁄n->
Ω‹t
, 
°©us
, 
size
);

266 
	`check_mem
(
log_d©a
);

268 
rc
 = 
	`zmq_msg_öô_d©a
(&
msg
, 
	`bd©a
(
log_d©a
), 
	`bÀngth
(log_data),

269 
‰ì_log_msg
, 
log_d©a
);

270 
	`check
(
rc
 =0, "CouldÇŸ cø· mesßgêf‹Üog mesßgê'%s'.", 
	`bd©a
(
log_d©a
));

272 
rc
 = 
	`zmq_msg_£nd
(&
msg
, 
LOG_SOCKET
, 0);

273 
	`check
(
rc
 >= 0, "CouldÇot sendÜog messageÅo socket.");

275 
log_d©a
 = 
NULL
;

276 
rc
 = 
	`zmq_msg_˛o£
(&
msg
);

277 
	`check
(
rc
 == 0, "FailedÅo close message object.");

281 
îr‹
:

282 
	`bde°roy
(
log_d©a
);

283 
	`zmq_msg_˛o£
(&
msg
);

285 
	}
}

287 
	$Log_ãrm
()

289 if(
LOG_SOCKET
 =
NULL
)

292 
rc
 = 
	`zmq_˛o£
(
LOG_SOCKET
);

293 
	`check
(
rc
 == 0, "FailedÅo closeáccessÜog socket.");

297 
îr‹
:

299 
	}
}

	@log.h

1 #i‚de‡
_log_h


2 
	#_log_h


	)

4 
	~"£rvî.h
"

5 
	~"c⁄√˘i⁄.h
"

7 
Log_öô
(
b°rög
 
ac˚ss_log
, b°rög 
log_•ec
);

9 
Log_böd
(c⁄° *
ídpoöt
);

11 
Log_pois⁄_w‹kîs
();

13 
Log_ªque°
(
C⁄√˘i⁄
 *
c⁄n
, 
°©us
, 
size
);

15 
Log_ãrm
();

	@logrotate.c

36 
	~"dbg.h
"

37 
	~"ªque°.h
"

38 
	~"hódîs.h
"

39 
	~"£âög.h
"

40 
	~"äë°rögs.h
"

41 
	~<°dio.h
>

42 
	~"zmq_com∑t.h
"

43 
	~<±hªad.h
>

44 
	~"b°rög.h
"

45 
	~<sig«l.h
>

47 
	#LOG_MAX
 8

	)

49 
	slog_rŸ©e_íåy
 {

50 
b°rög
 
	m«me
;

51 
FILE
 *
	mf
;

54 
log_rŸ©e_íåy
 
	glogs
[
LOG_MAX
];

55 
size_t
 
	g∆ogs
 = 0;

57 
	$rŸ©e_logs
()

59 
size_t
 
i
;

61 
i
=0;i<
∆ogs
;++i) {

62 
	`check
(
	`‰e›í
(
	`bd©a
(
logs
[
i
].
«me
),"a+",logs[i].
f
),"ErrorÑeopeningÜog file: %s",bdata(logs[i].name));

63 
	`£tbuf
(
logs
[
i
].
f
, 
NULL
);

66 
îr‹
:

69 
	}
}

71 
	$add_log_to_rŸ©e_li°
(c⁄° 
b°rög
 
‚ame
, 
FILE
 *
f
)

73 
	`check
(
∆ogs
<
LOG_MAX
,"Too manyÜogsáddedÅoÑotateÜist.");

74 
	`check
(
‚ame
!=
NULL
,"TriedÅoádd NULLÜog filenameÅoÑotateÜist.");

75 
logs
[
∆ogs
].
«me
=
	`b°r˝y
(
‚ame
);

76 
logs
[
∆ogs
].
f
=f;

77 
∆ogs
++;

80 
îr‹
:

82 
	}
}

	@logrotate.h

1 #i‚de‡
_logrŸ©e_h


2 
	#_logrŸ©e_h


	)

4 
add_log_to_rŸ©e_li°
(c⁄° 
b°rög
 
‚ame
, 
FILE
 *
f
);

5 
rŸ©e_logs
();

	@mem/align.h

15 #i‚de‡
_LIBP_ALIGN_H_


16 
	#_LIBP_ALIGN_H_


	)

21 
	umax_Æign


23 
	mc
;

24 
	ms
;

25 
	ml
;

26 
	mi
;

27 
	mf
;

28 
	md
;

29 * 
	mv
;

30 (*
	mq
)();

33 
max_Æign
 
	tmax_Æign_t
;

	@mem/halloc.c

15 #i‡
deföed
(
__APPLE__
Ë|| deföed(
__FªeBSD__
Ë|| deföed(
__O≥nBSD
)

16 
	~<°dlib.h
>

18 
	~<mÆloc.h
>

20 
	~<°rög.h
>

22 
	~"hÆloc.h
"

23 
	~"Æign.h
"

24 
	~"hli°.h
"

29 
	shblock


31 #i‚de‡
NDEBUG


32 
	#HH_MAGIC
 0x20040518L

	)

33 
	mmagic
;

35 
hli°_ôem_t
 
	msiblögs
;

36 
hli°_hód_t
 
	mchûdªn
;

37 
max_Æign_t
 
	md©a
[1];

39 } 
	thblock_t
;

41 
	#sizeof_hblock
 
	`off£tof
(
hblock_t
, 
d©a
)

	)

46 
ªÆloc_t
 
	ghÆloc_Æloˇt‹
 = 
NULL
;

48 
	#Æloˇt‹
 
hÆloc_Æloˇt‹


	)

53 
_£t_Æloˇt‹
();

54 * 
_ªÆloc
(* 
±r
, 
size_t
 
n
);

56 #i‚de‡
NDEBUG


57 
_ªœã
(
hblock_t
 * 
b
, hblock_à* 
p
);

60 
_‰ì_chûdªn
(
hblock_t
 * 
p
);

65 * 
	$hÆloc
(* 
±r
, 
size_t
 
Àn
)

67 
hblock_t
 * 
p
;

70 i‡(! 
Æloˇt‹
)

72 
	`_£t_Æloˇt‹
();

73 
	`as£π
(
Æloˇt‹
);

77 i‡(! 
±r
)

79 i‡(! 
Àn
)

80  
NULL
;

82 
p
 = 
	`Æloˇt‹
(0, 
Àn
 + 
sizeof_hblock
);

83 i‡(! 
p
)

84  
NULL
;

85 #i‚de‡
NDEBUG


86 
p
->
magic
 = 
HH_MAGIC
;

88 
	`hli°_öô
(&
p
->
chûdªn
);

89 
	`hli°_öô_ôem
(&
p
->
siblögs
);

91  
p
->
d©a
;

94 
p
 = 
	`°ru˘of
(
±r
, 
hblock_t
, 
d©a
);

95 
	`as£π
(
p
->
magic
 =
HH_MAGIC
);

98 i‡(
Àn
)

100 
p
 = 
	`Æloˇt‹
’, 
Àn
 + 
sizeof_hblock
);

101 i‡(! 
p
)

102  
NULL
;

104 
	`hli°_ªlök
(&
p
->
siblögs
);

105 
	`hli°_ªlök_hód
(&
p
->
chûdªn
);

107  
p
->
d©a
;

111 
	`_‰ì_chûdªn
(
p
);

112 
	`hli°_dñ
(&
p
->
siblögs
);

113 
	`Æloˇt‹
(
p
, 0);

115  
NULL
;

116 
	}
}

118 
	$h©èch
(* 
block
, * 
∑ª¡
)

120 
hblock_t
 * 
b
, * 
p
;

122 i‡(! 
block
)

124 
	`as£π
(! 
∑ª¡
);

129 
b
 = 
	`°ru˘of
(
block
, 
hblock_t
, 
d©a
);

130 
	`as£π
(
b
->
magic
 =
HH_MAGIC
);

132 
	`hli°_dñ
(&
b
->
siblögs
);

134 i‡(! 
∑ª¡
)

138 
p
 = 
	`°ru˘of
(
∑ª¡
, 
hblock_t
, 
d©a
);

139 
	`as£π
(
p
->
magic
 =
HH_MAGIC
);

142 
	`as£π
(
b
 !
p
);

143 
	`as£π
(! 
	`_ªœã
(
p
, 
b
));

145 
	`hli°_add
(&
p
->
chûdªn
, &
b
->
siblögs
);

146 
	}
}

151 * 
	$h_mÆloc
(
size_t
 
Àn
)

153  
	`hÆloc
(0, 
Àn
);

154 
	}
}

156 * 
	$h_ˇŒoc
(
size_t
 
n
, size_à
Àn
)

158 * 
±r
 = 
	`hÆloc
(0, 
Àn
*=
n
);

159  
±r
 ? 
	`mem£t
’å, 0, 
Àn
Ë: 
NULL
;

160 
	}
}

162 * 
	$h_ªÆloc
(* 
±r
, 
size_t
 
Àn
)

164  
	`hÆloc
(
±r
, 
Àn
);

165 
	}
}

167 
	$h_‰ì
(* 
±r
)

169 
	`hÆloc
(
±r
, 0);

170 
	}
}

172 * 
	$h_°rdup
(c⁄° * 
°r
)

174 
size_t
 
Àn
 = 
	`°æí
(
°r
);

175 * 
±r
 = 
	`hÆloc
(0, 
Àn
 + 1);

176  
±r
 ? (±r[
Àn
] = 0, 
	`mem˝y
’å, 
°r
,Üí)Ë: 
NULL
;

177 
	}
}

182 
	$_£t_Æloˇt‹
()

184 * 
p
;

185 
	`as£π
(! 
Æloˇt‹
);

197 
Æloˇt‹
 = 
ªÆloc
;

198 i‡(! (
p
 = 
	`mÆloc
(1)))

202 i‡((
p
 = 
	`ªÆloc
(p, 0)))

205 
Æloˇt‹
 = 
_ªÆloc
;

206 
	`‰ì
(
p
);

208 
	}
}

210 * 
	$_ªÆloc
(* 
±r
, 
size_t
 
n
)

215 i‡(
n
)

216  
	`ªÆloc
(
±r
, 
n
);

217 
	`‰ì
(
±r
);

218  
NULL
;

219 
	}
}

221 #i‚de‡
NDEBUG


222 
	$_ªœã
(
hblock_t
 * 
b
, hblock_à* 
p
)

224 
hli°_ôem_t
 * 
i
;

226 i‡(!
b
 || !
p
)

234 
	`hli°_f‹_óch
(
i
, &
p
->
chûdªn
)

236 
hblock_t
 * 
q
 = 
	`°ru˘of
(
i
, hblock_t, 
siblögs
);

237 i‡(
q
 =
b
 || 
	`_ªœã
(b, q))

241 
	}
}

244 
	$_‰ì_chûdªn
(
hblock_t
 * 
p
)

246 
hli°_ôem_t
 * 
i
, * 
tmp
;

248 #i‚de‡
NDEBUG


253 
	`as£π
(
p
 &&Ö->
magic
 =
HH_MAGIC
);

254 
p
->
magic
 = 0;

256 
	`hli°_f‹_óch_ß„
(
i
, 
tmp
, &
p
->
chûdªn
)

258 
hblock_t
 * 
q
 = 
	`°ru˘of
(
i
, hblock_t, 
siblögs
);

259 
	`_‰ì_chûdªn
(
q
);

260 
	`Æloˇt‹
(
q
, 0);

262 
	}
}

	@mem/halloc.h

15 #i‚de‡
_LIBP_HALLOC_H_


16 
	#_LIBP_HALLOC_H_


	)

18 
	~<°ddef.h
>

23 * 
hÆloc
 (* 
block
, 
size_t
 
Àn
);

24 
h©èch
(* 
block
, * 
∑ª¡
);

29 * 
h_mÆloc
 (
size_t
 
Àn
);

30 * 
h_ˇŒoc
 (
size_t
 
n
, size_à
Àn
);

31 * 
h_ªÆloc
(* 
p
, 
size_t
 
Àn
);

32 
h_‰ì
 (* 
p
);

33 * 
h_°rdup
 (c⁄° * 
°r
);

38 * (* 
	tªÆloc_t
)(* 
	t±r
, 
	tsize_t
 
	tÀn
);

40 
ªÆloc_t
 
hÆloc_Æloˇt‹
;

	@mem/hlist.h

15 #i‚de‡
_LIBP_HLIST_H_


16 
	#_LIBP_HLIST_H_


	)

18 
	~<as£π.h
>

19 
	~"ma¸os.h
"

24 
hli°_hód
 
	thli°_hód_t
;

25 
hli°_ôem
 
	thli°_ôem_t
;

30 
	shli°_hód


32 
hli°_ôem_t
 * 
	m√xt
;

35 
	shli°_ôem


37 
hli°_ôem_t
 * 
	m√xt
;

38 
hli°_ôem_t
 ** 
	m¥ev
;

44 
hli°_ôem
 
	ghli°_nuŒ
;

49 
	#__hli°_öô
(
h
Ë{ &
hli°_nuŒ
 }

	)

50 
	#__hli°_öô_ôem
(
i
Ë{ &
hli°_nuŒ
, &(i).
√xt
 }

	)

52 
°©ic_ölöe
 
hli°_öô
(
hli°_hód_t
 * 
h
);

53 
°©ic_ölöe
 
hli°_öô_ôem
(
hli°_ôem_t
 * 
i
);

65 
°©ic_ölöe
 
hli°_add
(
hli°_hód_t
 * 
h
, 
hli°_ôem_t
 * 
i
);

70 
°©ic_ölöe
 
hli°_dñ
(
hli°_ôem_t
 * 
i
);

72 
°©ic_ölöe
 
hli°_ªlök
(
hli°_ôem_t
 * 
i
);

73 
°©ic_ölöe
 
hli°_ªlök_hód
(
hli°_hód_t
 * 
h
);

75 
	#hli°_f‹_óch
(
i
, 
h
) \

76 
i
 = (
h
)->
√xt
; i !&
hli°_nuŒ
; i = i->√xt)

	)

78 
	#hli°_f‹_óch_ß„
(
i
, 
tmp
, 
h
) \

79 
i
 = (
h
)->
√xt
, 
tmp
 = i->next; \

80 
i
!&
hli°_nuŒ
; \

81 
i
 = 
tmp
,Åm∞i->
√xt
)

	)

86 
°©ic_ölöe
 
	$hli°_öô
(
hli°_hód_t
 * 
h
)

88 
	`as£π
(
h
);

89 
h
->
√xt
 = &
hli°_nuŒ
;

90 
	}
}

92 
°©ic_ölöe
 
	$hli°_öô_ôem
(
hli°_ôem_t
 * 
i
)

94 
	`as£π
(
i
);

95 
i
->
¥ev
 = &i->
√xt
;

96 
i
->
√xt
 = &
hli°_nuŒ
;

97 
	}
}

99 
°©ic_ölöe
 
	$hli°_add
(
hli°_hód_t
 * 
h
, 
hli°_ôem_t
 * 
i
)

101 
hli°_ôem_t
 * 
√xt
;

102 
	`as£π
(
h
 && 
i
);

104 
√xt
 = 
i
->√xà
h
->next;

105 
√xt
->
¥ev
 = &
i
->next;

106 
h
->
√xt
 = 
i
;

107 
i
->
¥ev
 = &
h
->
√xt
;

108 
	}
}

110 
°©ic_ölöe
 
	$hli°_dñ
(
hli°_ôem_t
 * 
i
)

112 
hli°_ôem_t
 * 
√xt
;

113 
	`as£π
(
i
);

115 
√xt
 = 
i
->next;

116 
√xt
->
¥ev
 = 
i
->prev;

117 *
i
->
¥ev
 = 
√xt
;

119 
	`hli°_öô_ôem
(
i
);

120 
	}
}

122 
°©ic_ölöe
 
	$hli°_ªlök
(
hli°_ôem_t
 * 
i
)

124 
	`as£π
(
i
);

125 *
i
->
¥ev
 = i;

126 
i
->
√xt
->
¥ev
 = &i->next;

127 
	}
}

129 
°©ic_ölöe
 
	$hli°_ªlök_hód
(
hli°_hód_t
 * 
h
)

131 
	`as£π
(
h
);

132 
h
->
√xt
->
¥ev
 = &h->next;

133 
	}
}

	@mem/macros.h

15 #i‚de‡
_LIBP_MACROS_H_


16 
	#_LIBP_MACROS_H_


	)

18 
	~<°ddef.h
>

23 
	#°ru˘of
(
p
,
t
,
f
Ë(—*)(- 
	`off£tof
—,fË+ (*)’)))

	)

28 
	#°©ic_ölöe
 
__ölöe__


	)

	@mime.c

35 
	~<mime.h
>

36 
	~<adt/t°.h
>

37 
	~<dbg.h
>

38 
	~"£âög.h
"

41 
t°_t
 *
	gMIME_MAP
 = 
NULL
;

43 
	gMAX_EXT_LEN
 = 0;

45 
	$MIME_add_ty≥
(c⁄° *
ext
, c⁄° *
ty≥
)

47 if(!
MAX_EXT_LEN
) {

48 
MAX_EXT_LEN
 = 
	`Sëtög_gë_öt
("limits.mime_ext_len", 128);

49 
	`log_öfo
("MAXÜimôs.mime_ext_Àn=%d", 
MAX_EXT_LEN
);

52 
b°rög
 
ext_ªv
 = 
	`b‰omc°r
(
ext
);

53 
	`bRevî£
(
ext_ªv
);

54 
b°rög
 
ty≥_°r
 = 
	`b‰omc°r
(
ty≥
);

56 
	`check
(
	`bÀngth
(
ext_ªv
Ë> 0, "NÿzîÿÀngth MIMEÉxãnsi⁄†Ælowed: %s:%s", 
ext
, 
ty≥
);

57 
	`check
(
	`bÀngth
(
ty≥_°r
Ë> 0, "NÿzîÿÀngth MIMEÅy≥†Ælowed: %s:%s", 
ext
, 
ty≥
);

58 
	`check
(
ext
[0] ='.', "Exãnsi⁄†mu° sèπ wôhá . '%s:%s'",Éxt, 
ty≥
);

60 
	`check
(
	`bÀngth
(
ext_ªv
Ë< 
MAX_EXT_LEN
, "MIMEÉxãnsi⁄ %s:%†i†l⁄gîÅh™ %d MAX (ô'†%d)", 
ext
, 
ty≥
, MAX_EXT_LEN, blength(ext_rev));

62 
	`check
(!
	`t°_£¨ch
(
MIME_MAP
, 
	`bd©a
(
ext_ªv
), 
	`bÀngth
(ext_rev)),

64 
ext
,Éxt, 
ty≥
);

66 
MIME_MAP
 = 
	`t°_ö£π
(MIME_MAP, 
	`bd©a
(
ext_ªv
), 
	`bÀngth
”xt_ªv), 
ty≥_°r
);

68 
	`bde°roy
(
ext_ªv
);

71 
îr‹
:

72 
	`bde°roy
(
ext_ªv
);

73 
	`bde°roy
(
ty≥_°r
);

75 
	}
}

78 
b°rög
 
	$MIME_m©ch_ext
(
b°rög
 
∑th
, b°rög 
def
)

80 
b°rög
 
lowî_∑th
 = 
NULL
;

81 
b°rög
 
ty≥
 = 
NULL
;

82 
rc
 = 0;

84 
lowî_∑th
 = 
	`b°r˝y
(
∑th
);

85 
	`check
(
lowî_∑th
 !
NULL
, "failedÅo createÜower_path");

86 
rc
 = 
	`btﬁowî
(
lowî_∑th
);

87 
	`check
(
rc
 == 0, "failedÅoÜower caseÜower_path");

89 
ty≥
 = 
	`t°_£¨ch_suffix
(
MIME_MAP
, 
	`bd©a
(
lowî_∑th
), 
	`bÀngth
(lower_path));

91 
	`bde°roy
(
lowî_∑th
);

92 
lowî_∑th
 = 
NULL
;

94  
ty≥
 =
NULL
 ? 
def
 :Åype;

95 
îr‹
:

96 if(
lowî_∑th
 !
NULL
)

97 
	`bde°roy
(
lowî_∑th
);

98  
def
;

99 
	}
}

101 
	$MIME_åavî£_de°roy
(*
vÆue
, *
d©a
)

103 ()
d©a
;

105 
	`bde°roy
((
b°rög
)
vÆue
);

106 
	}
}

108 
	$MIME_de°roy
()

110 if(
MIME_MAP
) {

111 
	`t°_åavî£
(
MIME_MAP
, 
MIME_åavî£_de°roy
, 
NULL
);

112 
	`t°_de°roy
(
MIME_MAP
);

113 
MIME_MAP
 = 
NULL
;

115 
	}
}

	@mime.h

35 #i‚de‡
_mime_h


36 
	#_mime_h


	)

38 
	~<°dlib.h
>

39 
	~<b°rög.h
>

41 
MIME_add_ty≥
(c⁄° *
ext
, c⁄° *
ty≥
);

43 
b°rög
 
MIME_m©ch_ext
(b°rög 
∑th
, b°rög 
def
);

45 
MIME_de°roy
();

	@mongrel2.c

35 
	~<f˙é.h
>

36 
	~<°rög.h
>

37 
	~<sig«l.h
>

38 
	~<time.h
>

39 
	~<as£π.h
>

41 
	~"£rvî.h
"

42 
	~"dbg.h
"

43 
	~"dú.h
"

44 
	~"èsk/èsk.h
"

45 
	~"c⁄fig/c⁄fig.h
"

46 
	~"c⁄fig/db.h
"

47 
	~"adt/d¨øy.h
"

48 
	~"unixy.h
"

49 
	~"mime.h
"

50 
	~"su≥Ωﬁl.h
"

51 
	~"£âög.h
"

52 
	~"vîsi⁄.h
"

53 
	~"c⁄åﬁ.h
"

54 
	~"log.h
"

55 
	~"logrŸ©e.h
"

56 
	~"ªgi°î.h
"

58 
RUNNING
;

59 
uöt32_t
 
THE_CURRENT_TIME_IS
;

60 
	gRELOAD
 = 0;

61 
	gMURDER
 = 0;

63 c⁄° 
	gTICKER_TASK_STACK
 = 16 * 1024;

64 c⁄° 
	gRELOAD_TASK_STACK
 = 100 * 1024;

66 
	sSîvîTask
 {

67 
b°rög
 
	mdb_fûe
;

68 
b°rög
 
	m£rvî_id
;

71 
ègb°rög
 
	gPRIV_DIR
 = 
bsSètic
("/");

73 
Task
 *
	gRELOAD_TASK
 = 
NULL
;

76 
	$ãrmö©e
(
s
)

78 
MURDER
 = 
s
 =
SIGTERM
;

80 
s
)

82 
SIGHUP
:

83 if(!
RELOAD
) {

84 
RELOAD
 = 1;

85 if(
RELOAD_TASK
) {

86 
	`èsksig«l
(
RELOAD_TASK
, 
s
);

91 if(!
RUNNING
) {

92 
	`log_öfo
("SIGINT CAUGHT AGAIN, ASSUMING MURDER.");

93 
MURDER
 = 1;

95 
RUNNING
 = 0;

96 
	`log_öfo
("SHUTDOWN REQUESTED: %s", 
MURDER
 ? "MURDER" : "GRACEFUL (SIGINTágainÅo EXIT NOW)");

97 
Sîvî
 *
§v
 = 
	`Sîvî_queue_œã°
();

99 if(
§v
 !
NULL
) {

100 
	`fd˛o£
(
§v
->
li°í_fd
);

105 
	}
}

107 
	$°¨t_ãrmö©‹
()

109 
siga˘i⁄
 
ß
, 
oß
;

110 
	`mem£t
(&
ß
, 0,  sa);

111 
ß
.
ß_h™dÀr
 = 
ãrmö©e
;

112 
ß
.
ß_Êags
 = 
SA_RESTART
;

113 
	`siga˘i⁄
(
SIGINT
, &
ß
, &
oß
);

114 
	`siga˘i⁄
(
SIGTERM
, &
ß
, &
oß
);

115 
	`siga˘i⁄
(
SIGHUP
, &
ß
, &
oß
);

118 
sig£t_t
 
x
;

119 
	`sigem±y£t
(&
x
);

120 
	`sigadd£t
(&
x
, 
SIGPIPE
);

121 
	`sig¥ocmask
(
SIG_BLOCK
, &
x
, 
NULL
);

123 
	`sigem±y£t
(&
x
);

124 
	`sigadd£t
(&
x
, 
SIGPIPE
);

125 
	`±hªad_sigmask
(
SIG_BLOCK
, &
x
, 
NULL
);

127 
ß
.
ß_h™dÀr
 = 
SIG_IGN
;

128 
	`siga˘i⁄
(
SIGPIPE
, &
ß
, &
oß
);

129 
	}
}

132 
Sîvî
 *
	$lﬂd_£rvî
(c⁄° *
db_fûe
, c⁄° *
£rvî_uuid
, 
Sîvî
 *
ﬁd_§v
)

134 
rc
 = 0;

135 
Sîvî
 *
§v
 = 
NULL
;

137 
rc
 = 
	`C⁄fig_öô_db
(
db_fûe
);

138 
	`check
(
rc
 =0, "FaûedÅÿlﬂd c⁄fig d©aba£áà%s", 
db_fûe
);

140 
rc
 = 
	`C⁄fig_lﬂd_£âögs
();

141 
	`check
(
rc
 != -1, "FailedÅoÜoad global settings.");

143 
rc
 = 
	`C⁄fig_lﬂd_mimëy≥s
();

144 
	`check
(
rc
 != -1, "FailedÅoÜoad mimeÅypes.");

146 
§v
 = 
	`C⁄fig_lﬂd_£rvî
(
£rvî_uuid
);

147 
	`check
(
§v
, "FaûedÅÿlﬂd sîvî %†‰om %s", 
£rvî_uuid
, 
db_fûe
);

148 
	`check
(
§v
->
deÁu…_ho°
, "NÿdeÁu…_ho° së f‹ sîvî: %s, youÇìd o√ ho°Çamed: %s", 
£rvî_uuid
, 
	`bd©a
(§v->
deÁu…_ho°«me
));

150 if(
ﬁd_§v
 =
NULL
 || old_§v->
li°í_fd
 == -1) {

151 
§v
->
li°í_fd
 = 
	`√è¬oun˚
(
TCP
, 
	`bd©a
(§v->
böd_addr
), srv->
p‹t
);

152 
	`check
(
§v
->
li°í_fd
 >0, "C™'à™noun˚ o¿TCPÖ‹à%d", srv->
p‹t
);

153 
	`check
(
	`fdnoblock
(
§v
->
li°í_fd
Ë=0, "FaûedÅÿ£àli°íögÖ‹à%dÇ⁄blockög.", srv->
p‹t
);

155 
§v
->
li°í_fd
 = 
ﬁd_§v
->listen_fd;

158 
	`check
(
	`Sîvî_°¨t_h™dÀrs
(
§v
, 
ﬁd_§v
) == 0, "FailedÅo start handlers.");

160 
	`C⁄fig_˛o£_db
();

161  
§v
;

162 
îr‹
:

164 
	`Sîvî_de°roy
(
§v
);

165 
	`C⁄fig_˛o£_db
();

166  
NULL
;

167 
	}
}

170 
	$˛ór_pid_fûe
(
Sîvî
 *
§v
)

172 
b°rög
 
pid_fûe
;

173 if(
§v
->
chroŸ
 !
NULL
) {

174 
pid_fûe
 = 
	`bf‹m©
("%s%s", 
	`bd©a
(
§v
->
chroŸ
), bdata(srv->pid_file));

176 
pid_fûe
 = 
	`b°r˝y
(
§v
->pid_file);

179 
rc
 = 
	`Unixy_ªmove_dód_pidfûe
(
pid_fûe
);

180 
	`check
(
rc
 =0, "FaûedÅÿªmovêthêdód PID fûe: %s", 
	`bd©a
(
pid_fûe
));

181 
	`bde°roy
(
pid_fûe
);

184 
îr‹
:

186 
	}
}

188 
	$tickîèsk
(*
v
)

190 ()
v
;

192 
	`èsk«me
("ticker");

194 !
	`èsk_was_sig«Àd
()) {

195 
THE_CURRENT_TIME_IS
 = 
	`time
(
NULL
);

197 
mö_waô
 = 
	`Sëtög_gë_öt
("limits.tick_timer", 10);

198 
	`èskdñay
(
mö_waô
 * 1000);

201 if(!
RELOAD
) {

203 
mö_pög
 = 
	`Sëtög_gë_öt
("limôs.mö_pög", 
DEFAULT_MIN_PING
);

204 
mö_wrôe_øã
 = 
	`Sëtög_gë_öt
("limôs.mö_wrôe_øã", 
DEFAULT_MIN_READ_RATE
);

205 
mö_ªad_øã
 = 
	`Sëtög_gë_öt
("limôs.mö_ªad_øã", 
DEFAULT_MIN_WRITE_RATE
);

207 if(
mö_pög
 > 0 || 
mö_wrôe_øã
 > 0 || 
mö_ªad_øã
 > 0) {

208 
˛óªd
 = 
	`Regi°î_˛ónout
();

210 if(
˛óªd
 > 0) {

211 
	`log_w¨n
("Timeouàèsk kûÀd %dÅasks, waôög %d sec⁄d†f‹ m‹e.", 
˛óªd
, 
mö_waô
);

213 
	`debug
("No connectionsÅimed out.");

218 
	`Sîvî_queue_˛ónup
();

221 
	}
}

224 
	$©ãm±_chroŸ_dr›
(
Sîvî
 *
§v
)

226 
rc
 = 0;

228 
	`log_öfo
("AllÜoaded up,ÅimeÅoÅurn intoá server.");

229 
	`log_öfo
("-- Sèπög " 
VERSION
 ". Copyright (C) Zed A. Shaw. Licensed BSD.\n");

230 
	`log_öfo
("-- Look i¿%†f‹ sèπu∞mesßge†™dÉº‹s.", 
	`bd©a
(
§v
->
îr‹_log
));

232 
ã°mode
 = 0;

234 if(
§v
->
chroŸ
 !
NULL
) {

235 if(
	`Unixy_chroŸ
(
§v
->
chroŸ
) == 0) {

236 if(
	`Sëtög_gë_öt
("server.daemonize", 1)) {

237 
rc
 = 
	`Unixy_d´m⁄ize
(1);

238 
	`check
(
rc
 == 0, "FailedÅo daemonize,ÜooksÜike you're hosed.");

241 
rc
 = 
	`chdú
("/");

242 
	`check
(
rc
 == 0, "FailedÅo change working directoryÅo '/'.");

245 
	`log_w¨n
("Couldn'àchroŸÅÿ%s,ássumögÑu¬ög i¿ã° mode.", 
	`bd©a
(
§v
->
chroŸ
));

248 
b°rög
 
ãmp
 = 
	`bf‹m©
("%s%s", 
	`bd©a
(
§v
->
chroŸ
), bd©a(§v->
ac˚ss_log
));

249 
	`bassign
(
§v
->
ac˚ss_log
, 
ãmp
);

250 
	`bde°roy
(
ãmp
);

252 
ãmp
 = 
	`bf‹m©
(".%s", 
	`bd©a
(
§v
->
pid_fûe
));

253 
	`bassign
(
§v
->
pid_fûe
, 
ãmp
);

254 
	`bde°roy
(
ãmp
);

256 
ã°mode
 = 1;

259 if(
	`Sëtög_gë_öt
("server.daemonize", 1)) {

260 
rc
 = 
	`Unixy_d´m⁄ize
(0);

261 
	`check
(
rc
 == 0, "FailedÅo daemonize,ÜooksÜike you're hosed.");

265 
rc
 = 
	`Unixy_pid_fûe
(
§v
->
pid_fûe
);

266 
	`check
(
rc
 =0, "FaûedÅÿmakêthêPID fûê%s", 
	`bd©a
(
§v
->
pid_fûe
));

268 if(
§v
->
chroŸ
 !
NULL
 && ! 
ã°mode
) {

269 
rc
 = 
	`Unixy_dr›_¥iv
(&
PRIV_DIR
);

270 
	`check
(
rc
 =0, "FaûedÅÿdr›ÖrivÅÿthêow√∏o‡%s", 
	`bd©a
(&
PRIV_DIR
));

272 
rc
 = 
	`Unixy_dr›_¥iv
(
NULL
);

273 
	`check
(
rc
 == 0, "FailedÅo dropÖriv");

276 if(!
ã°mode
) {

277 
FILE
 *
log
 = 
	`f›í
(
	`bd©a
(
§v
->
îr‹_log
), "a+");

278 
	`check
(
log
, "Couldn'à›í %†log fûe.", 
	`bd©a
(
§v
->
îr‹_log
));

279 
	`£tbuf
(
log
, 
NULL
);

280 
	`check
(0==
	`add_log_to_rŸ©e_li°
(
§v
->
îr‹_log
,
log
),"UnableÅoáddÉrrorÜogÅoÜist of filesÅoÑotate.");

282 
	`dbg_£t_log
(
log
);

287 
îr‹
:

289 
	}
}

292 
	$föÆ_£tup
()

294 
	`°¨t_ãrmö©‹
();

295 
	`Sîvî_öô
();

296 
b°rög
 
íd_poöt
 = 
	`b‰omc°r
("inproc://access_log");

297 
Sîvî
 *
§v
 = 
	`Sîvî_queue_œã°
();

298 
	`Log_öô
(
	`b°r˝y
(
§v
->
ac˚ss_log
), 
íd_poöt
);

299 
	`C⁄åﬁ_p‹t_°¨t
();

300 
	`èskdñay
(500);

301 
	`log_öfo
("-- " 
VERSION
 " Running. Copyright (C) Zed A. Shaw. Licensed BSD.");

302 
	}
}

306 
Sîvî
 *
	$ªlﬂd_£rvî
(
Sîvî
 *
ﬁd_§v
, c⁄° *
db_fûe
, c⁄° *
£rvî_uuid
)

308 
	`log_öfo
("------------------------ RELOAD %†-----------------------------------", 
£rvî_uuid
);

309 
	`MIME_de°roy
();

310 
	`Sëtög_de°roy
();

312 
Sîvî
 *
§v
 = 
	`lﬂd_£rvî
(
db_fûe
, 
£rvî_uuid
, 
ﬁd_§v
);

313 
	`check
(
§v
 !
NULL
, "FailedÅoÜoadÇew server config.");

315 
	`Sîvî_°›_h™dÀrs
(
ﬁd_§v
);

317 
	`rŸ©e_logs
();

319 
RELOAD
 = 0;

320  
§v
;

322 
îr‹
:

323  
NULL
;

324 
	}
}

327 
	$com∂ëe_shutdown
(
Sîvî
 *
§v
)

329 
	`fd˛o£
(
§v
->
li°í_fd
);

330 
©ãm±s
 = 0;

331 
rc
 = 0;

333 
rc
 = 
	`èskÆlsig«l
(
SIGTERM
);

334 
	`check
(
rc
 != -1, "FailedÅo sendÅhe TERM signalÅoáll internalÅasks.");

336 
	`log_öfo
("Shutting downállÑunningÅasksás gracefullyásÖossible.");

339 
©ãm±s
 = 0; 
	`èsk§u¬ög
() > 1 &&áttempts < 20;áttempts++) {

340 
rc
 = 
	`èskÆlsig«l
(
SIGTERM
);

341 
	`check
(
rc
 !-1, "FaûedÅÿ£ndÅhêTERM sig«»tÿöã∫ÆÅask†⁄áâem±: %d.", 
©ãm±s
);

344 
	`log_öfo
("Task†nowÑu¬ög (ö˛udög maöÅask): %d", 
	`èsk§u¬ög
());

346 
	`C⁄åﬁ_p‹t_°›
();

347 
rc
 = 
	`Log_ãrm
();

348 
	`check
(
rc
 != -1, "FailedÅo shutdownÅheÜogging subsystem.");

350 
	`Sëtög_de°roy
();

351 
	`MIME_de°roy
();

353 if(
	`ac˚ss
((*)
§v
->
pid_fûe
->
d©a
, 
F_OK
) == 0) {

354 
	`log_öfo
("RemovögÖid fûê%s", 
	`bd©a
(
§v
->
pid_fûe
));

355 
rc
 = 
	`u∆ök
((c⁄° *)
§v
->
pid_fûe
->
d©a
);

356 
	`check
(
rc
 !-1, "FaûedÅÿu∆ökÖid_fûe: %s", 
	`bd©a
(
§v
->
pid_fûe
));

359 
rc
 = 
	`Sîvî_queue_de°roy
();

360 
	`check
(
rc
 == 0, "Failed cleaning upÅhe serverÑun queue.");

362 
	`Regi°î_de°roy
();

363 
	`fdshutdown
();

365 
	`èskexôÆl
(0);

366 
îr‹
:

367 
	`èskexôÆl
(1);

368 
	}
}

371 
	$ªlﬂd_èsk
(*
d©a
)

373 
RELOAD_TASK
 = 
	`èsk£lf
();

374 
SîvîTask
 *
§v
 = 
d©a
;

377 
	`èskswôch
();

378 
	`èsk_˛ór_sig«l
();

380 if(
RELOAD
) {

381 
	`log_öfo
("RñﬂdÑeque°ed, wû»lﬂd %†‰om %s", 
	`bd©a
(
§v
->
db_fûe
), bd©a(§v->
£rvî_id
));

382 
Sîvî
 *
ﬁd_§v
 = 
	`Sîvî_queue_œã°
();

383 
Sîvî
 *
√w_§v
 = 
	`ªlﬂd_£rvî
(
ﬁd_§v
, 
	`bd©a
(
§v
->
db_fûe
), bd©a(§v->
£rvî_id
));

384 
	`check
(
√w_§v
, "FailedÅoÜoadÅheÇew configuration,Éxiting.");

387 
	`Sîvî_queue_push
(
√w_§v
);

389 
	`log_öfo
("ShutdownÑequested, goodbye.");

394 
	`èskexô
(0);

395 
îr‹
:

396 
	`èskexô
(1);

397 
	}
}

399 
	$èskmaö
(
¨gc
, **
¨gv
)

401 
	`dbg_£t_log
(
°dîr
);

402 
rc
 = 0;

404 
	`check
(
¨gc
 =3 ||árg¯=4, "ußge: %†c⁄fig.sqlôê£rvî_uuid [c⁄fig_moduÀ.so]", 
m2¥ogøm
);

406 if(
¨gc
 == 4) {

407 
	`log_öfo
("Usög c⁄figuøti⁄ moduÀ %†tÿlﬂd c⁄figs.", 
¨gv
[3]);

408 
rc
 = 
	`C⁄fig_moduÀ_lﬂd
(
¨gv
[3]);

409 
	`check
(
rc
 !-1, "FaûedÅÿlﬂdÅhêc⁄fig moduÀ: %s", 
¨gv
[3]);

412 
	`Sîvî_queue_öô
();

414 
Sîvî
 *
§v
 = 
	`lﬂd_£rvî
(
¨gv
[1],árgv[2], 
NULL
);

415 
	`check
(
§v
 !
NULL
, "Aborting since can'tÜoad server.");

416 
	`Sîvî_queue_push
(
§v
);

418 
	`Su≥rPﬁl_gë_max_fd
();

420 
rc
 = 
	`˛ór_pid_fûe
(
§v
);

421 
	`check
(
rc
 == 0, "PID file failure,ábortingÑatherÅhanÅryingÅo start.");

423 
rc
 = 
	`©ãm±_chroŸ_dr›
(
§v
);

424 
	`check
(
rc
 == 0, "Major failure in chroot/droppriv,áborting.");

426 
	`föÆ_£tup
();

428 
	`èsk¸óã
(
tickîèsk
, 
NULL
, 
TICKER_TASK_STACK
);

430 
SîvîTask
 *
§v_d©a
 = 
	`ˇŒoc
(1, (ServerTask));

431 
§v_d©a
->
db_fûe
 = 
	`b‰omc°r
(
¨gv
[1]);

432 
§v_d©a
->
£rvî_id
 = 
	`b‰omc°r
(
¨gv
[2]);

434 
	`èsk¸óã
(
ªlﬂd_èsk
, 
§v_d©a
, 
RELOAD_TASK_STACK
);

436 
rc
 = 
	`Sîvî_run
();

437 
	`check
(
rc
 != -1, "Server hadá failureándÉxitedÉarly.");

438 
	`log_öfo
("ServerÑunÉxited, goodbye.");

440 
§v
 = 
	`Sîvî_queue_œã°
();

441 
	`com∂ëe_shutdown
(
§v
);

445 
îr‹
:

446 
	`log_îr
("Exiting dueÅoÉrror.");

447 
	`èskexôÆl
(1);

448 
	}
}

	@pattern.c

5 
	~<dbg.h
>

6 
	~<°dlib.h
>

7 
	~<∑âîn.h
>

8 
	~<°rög.h
>

9 
	~<as£π.h
>

10 
	~<˘y≥.h
>

14 
	sM©chSèã
 {

15 c⁄° *
	m§c_öô
;

16 c⁄° *
	m§c_íd
;

17 } 
	tM©chSèã
;

20 
	#CAP_UNFINISHED
 (-1)

	)

21 
	#CAP_POSITION
 (-2)

	)

23 
	#uch¨
(
S
Ë(S)

	)

26 
	#L_ESC
 '\\'

	)

29 c⁄° *
	$˛as£nd
 (c⁄° *
p
) {

30 *
p
++) {

31 
L_ESC
: {

32 i‡(*
p
 == '\0')

33 
	`log_îr
("malformedÖattern (ends with '\\0')");

34  
p
+1;

37 i‡(*
p
 == '^')Ö++;

39 i‡(*
p
 == '\0')

40 
	`log_îr
("malformedÖattern (missing ])");

41 i‡(*(
p
++Ë=
L_ESC
 && *p != '\0')

42 
p
++;

43 } *
p
 != ']');

44  
p
+1;

47  
p
;

50 
	}
}

53 
	$m©ch_˛ass
 (
c
, 
˛
) {

54 
ªs
;

55 
	`tﬁowî
(
˛
)) {

56 'a' : 
ªs
 = 
	`ißÕha
(
c
); ;

57 'c' : 
ªs
 = 
	`is˙ål
(
c
); ;

58 'd' : 
ªs
 = 
	`isdigô
(
c
); ;

59 'l' : 
ªs
 = 
	`i¶owî
(
c
); ;

60 'p' : 
ªs
 = 
	`i•un˘
(
c
); ;

61 's' : 
ªs
 = 
	`is•a˚
(
c
); ;

62 'u' : 
ªs
 = 
	`isuµî
(
c
); ;

63 'w' : 
ªs
 = 
	`iß um
(
c
); ;

64 'x' : 
ªs
 = 
	`isxdigô
(
c
); ;

65 'z' : 
ªs
 = (
c
 == 0); ;

66 :  (
˛
 =
c
);

68  (
	`i¶owî
(
˛
Ë? 
ªs
 : !res);

69 
	}
}

72 
	$m©chbøckë˛ass
 (
c
, c⁄° *
p
, c⁄° *
ec
) {

73 
sig
 = 1;

74 i‡(*(
p
+1) == '^') {

75 
sig
 = 0;

76 
p
++;

78 ++
p
 < 
ec
) {

79 i‡(*
p
 =
L_ESC
) {

80 
p
++;

81 i‡(
	`m©ch_˛ass
(
c
, 
	`uch¨
(*
p
)))

82  
sig
;

84 i‡((*(
p
+1Ë='-'Ë&& (p+2 < 
ec
)) {

85 
p
+=2;

86 i‡(
	`uch¨
(*(
p
-2)Ë<
c
 && c <= uchar(*p))

87  
sig
;

89 i‡(
	`uch¨
(*
p
Ë=
c
Ë 
sig
;

91  !
sig
;

92 
	}
}

95 
	$sögÀm©ch
 (
c
, c⁄° *
p
, c⁄° *
ï
) {

96 *
p
) {

98 
L_ESC
:  
	`m©ch_˛ass
(
c
, 
	`uch¨
(*(
p
+1)));

99 '[':  
	`m©chbøckë˛ass
(
c
, 
p
, 
ï
-1);

100 :  (
	`uch¨
(*
p
Ë=
c
);

102 
	}
}

105 c⁄° *
	$m©chbÆ™˚
 (
M©chSèã
 *
ms
, c⁄° *
s
,

106 c⁄° *
p
) {

107 i‡(*
p
 == 0 || *(p+1) == 0)

108 
	`log_îr
("unbalancedÖattern");

109 i‡(*
s
 !*
p
Ë 
NULL
;

111 
b
 = *
p
;

112 
e
 = *(
p
+1);

113 
c⁄t
 = 1;

114 ++
s
 < 
ms
->
§c_íd
) {

115 i‡(*
s
 =
e
) {

116 i‡(--
c⁄t
 =0Ë 
s
+1;

118 i‡(*
s
 =
b
Ë
c⁄t
++;

121  
NULL
;

122 
	}
}

124 c⁄° *
m©ch
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
);

126 
ölöe
 c⁄° *
	$max_ex∑nd
 (
M©chSèã
 *
ms
, c⁄° *
s
,

127 c⁄° *
p
, c⁄° *
ï
) {

128 
i
 = 0;

129 (
s
+
i
Ë< 
ms
->
§c_íd
 && 
	`sögÀm©ch
(
	`uch¨
(*(s+i)), 
p
, 
ï
))

130 
i
++;

132 
i
>=0) {

133 c⁄° *
ªs
 = 
	`m©ch
(
ms
, (
s
+
i
), 
ï
+1);

134 i‡(
ªs
) Ñes;

135 
i
--;

137  
NULL
;

138 
	}
}

141 
ölöe
 c⁄° *
	$mö_ex∑nd
 (
M©chSèã
 *
ms
, c⁄° *
s
,

142 c⁄° *
p
, c⁄° *
ï
) {

144 c⁄° *
ªs
 = 
	`m©ch
(
ms
, 
s
, 
ï
+1);

145 i‡(
ªs
 !
NULL
)

146  
ªs
;

147 i‡(
s
<
ms
->
§c_íd
 && 
	`sögÀm©ch
(
	`uch¨
(*s), 
p
, 
ï
))

148 
s
++;

149  
NULL
;

151 
	}
}

153 
ölöe
 c⁄° *
	$m©ch
(
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
) {

154 
öô
:

155 *
p
) {

157 
p
++;

158 
öô
;

160 
p
++;

161 
öô
;

162 
L_ESC
: {

163 *(
p
+1)) {

165 
s
 = 
	`m©chbÆ™˚
(
ms
, s, 
p
+2);

166 i‡(
s
 =
NULL
)  NULL;

167 
p
+=4; 
öô
;

170 c⁄° *
ï
; 
¥evious
;

171 
p
 += 2;

172 i‡(*
p
 != '[')

173 
	`log_îr
("missing '['áfter \\\\f inÖattern");

174 
ï
 = 
	`˛as£nd
(
p
);

175 
¥evious
 = (
s
 =
ms
->
§c_öô
) ? '\0' : *(s-1);

176 i‡(
	`m©chbøckë˛ass
(
	`uch¨
(
¥evious
), 
p
, 
ï
-1) ||

177 !
	`m©chbøckë˛ass
(
	`uch¨
(*
s
), 
p
, 
ï
-1)Ë 
NULL
;

178 
p
=
ï
; 
öô
;

181 
dÊt
;

186  
s
;

189 i‡(*(
p
+1) == '\0')

190  (
s
 =
ms
->
§c_íd
Ë? s : 
NULL
;

191 
dÊt
;

193 : 
dÊt
: {

194 c⁄° *
ï
 = 
	`˛as£nd
(
p
);

195 
m
 = 
s
<
ms
->
§c_íd
 && 
	`sögÀm©ch
(
	`uch¨
(*s), 
p
, 
ï
);

196 *
ï
) {

198 c⁄° *
ªs
;

199 i‡(
m
 && ((
ªs
=
	`m©ch
(
ms
, 
s
+1, 
ï
+1)Ë!
NULL
))

200  
ªs
;

201 
p
=
ï
+1; 
öô
;

204  
	`max_ex∑nd
(
ms
, 
s
, 
p
, 
ï
);

207  (
m
 ? 
	`max_ex∑nd
(
ms
, 
s
+1, 
p
, 
ï
Ë: 
NULL
);

210  
	`mö_ex∑nd
(
ms
, 
s
, 
p
, 
ï
);

213 i‡(!
m
Ë 
NULL
;

214 
s
++; 
p
=
ï
; 
öô
;

219 
	}
}

221 c⁄° *
	$∑âîn_m©ch
(c⁄° *
s
, 
size_t
 
Àn
, c⁄° *
p
)

223 
M©chSèã
 
ms
 = {.
§c_öô
 = 
s
, .
§c_íd
 = s + 
Àn
};

224  
	`m©ch
(&
ms
, 
s
, 
p
);

225 
	}
}

228 c⁄° *
	$b°rög_m©ch
(
b°rög
 
s
, b°rög 
∑âîn
)

230 
M©chSèã
 
ms
 = {.
§c_öô
 = 
	`bd©a
(
s
), .
§c_íd
 = bd©a(sË+ 
	`bÀngth
(s)};

231  
	`m©ch
(&
ms
, 
	`bd©a
(
s
), bd©a(
∑âîn
));

232 
	}
}

	@pattern.h

35 #i‚de‡
_∑âîn_h


36 
	#_∑âîn_h


	)

38 
	~<b°rög.h
>

40 c⁄° *
∑âîn_m©ch
(c⁄° *
s
, 
size_t
 
Àn
, c⁄° *
p
);

42 c⁄° *
b°rög_m©ch
(
b°rög
 
s
, b°rög 
∑âîn
);

	@polarssl/configs/config-ccm-psk-tls1_2.h

11 #i‚de‡
POLARSSL_CONFIG_H


12 
	#POLARSSL_CONFIG_H


	)

20 
	#POLARSSL_KEY_EXCHANGE_PSK_ENABLED


	)

21 
	#POLARSSL_SSL_PROTO_TLS1_2


	)

24 
	#POLARSSL_AES_C


	)

25 
	#POLARSSL_CCM_C


	)

26 
	#POLARSSL_CIPHER_C


	)

27 
	#POLARSSL_CTR_DRBG_C


	)

28 
	#POLARSSL_ENTROPY_C


	)

29 
	#POLARSSL_MD_C


	)

30 
	#POLARSSL_NET_C


	)

31 
	#POLARSSL_SHA256_C


	)

32 
	#POLARSSL_SSL_CLI_C


	)

33 
	#POLARSSL_SSL_SRV_C


	)

34 
	#POLARSSL_SSL_TLS_C


	)

37 
	#POLARSSL_AES_ROM_TABLES


	)

40 
	#POLARSSL_PSK_MAX_LEN
 16

	)

47 
	#ENTROPY_MAX_SOURCES
 2

	)

53 
	#SSL_CIPHERSUITES
 \

54 
TLS_PSK_WITH_AES_256_CCM_8
, \

55 
TLS_PSK_WITH_AES_128_CCM_8


	)

62 
	#SSL_MAX_CONTENT_LEN
 512

	)

64 
	~"check_c⁄fig.h
"

	@polarssl/configs/config-mini-tls1_1.h

8 #i‚de‡
POLARSSL_CONFIG_H


9 
	#POLARSSL_CONFIG_H


	)

12 
	#POLARSSL_HAVE_ASM


	)

13 
	#POLARSSL_HAVE_TIME


	)

14 
	#POLARSSL_HAVE_IPV6


	)

17 
	#POLARSSL_CIPHER_MODE_CBC


	)

18 
	#POLARSSL_PKCS1_V15


	)

19 
	#POLARSSL_KEY_EXCHANGE_RSA_ENABLED


	)

20 
	#POLARSSL_SSL_PROTO_TLS1_1


	)

23 
	#POLARSSL_AES_C


	)

24 
	#POLARSSL_ASN1_PARSE_C


	)

25 
	#POLARSSL_ASN1_WRITE_C


	)

26 
	#POLARSSL_BIGNUM_C


	)

27 
	#POLARSSL_CIPHER_C


	)

28 
	#POLARSSL_CTR_DRBG_C


	)

29 
	#POLARSSL_DES_C


	)

30 
	#POLARSSL_ENTROPY_C


	)

31 
	#POLARSSL_MD_C


	)

32 
	#POLARSSL_MD5_C


	)

33 
	#POLARSSL_NET_C


	)

34 
	#POLARSSL_OID_C


	)

35 
	#POLARSSL_PK_C


	)

36 
	#POLARSSL_PK_PARSE_C


	)

37 
	#POLARSSL_RSA_C


	)

38 
	#POLARSSL_SHA1_C


	)

39 
	#POLARSSL_SHA256_C


	)

40 
	#POLARSSL_SSL_CLI_C


	)

41 
	#POLARSSL_SSL_SRV_C


	)

42 
	#POLARSSL_SSL_TLS_C


	)

43 
	#POLARSSL_X509_CRT_PARSE_C


	)

44 
	#POLARSSL_X509_USE_C


	)

47 
	#POLARSSL_BASE64_C


	)

48 
	#POLARSSL_CERTS_C


	)

49 
	#POLARSSL_PEM_PARSE_C


	)

52 
	#POLARSSL_FS_IO


	)

54 
	~"pﬁ¨s¶/check_c⁄fig.h
"

	@polarssl/configs/config-picocoin.h

12 #i‚de‡
POLARSSL_CONFIG_H


13 
	#POLARSSL_CONFIG_H


	)

16 
	#POLARSSL_HAVE_LONGLONG


	)

17 
	#POLARSSL_HAVE_ASM


	)

18 
	#POLARSSL_HAVE_TIME


	)

19 
	#POLARSSL_HAVE_IPV6


	)

22 
	#POLARSSL_CIPHER_MODE_CBC


	)

23 
	#POLARSSL_CIPHER_PADDING_PKCS7


	)

24 
	#POLARSSL_ECP_DP_SECP256K1_ENABLED


	)

25 
	#POLARSSL_ECDSA_DETERMINISTIC


	)

26 
	#POLARSSL_PK_PARSE_EC_EXTENDED


	)

27 
	#POLARSSL_ERROR_STRERROR_DUMMY


	)

28 
	#POLARSSL_FS_IO


	)

31 
	#POLARSSL_AESNI_C


	)

32 
	#POLARSSL_AES_C


	)

33 
	#POLARSSL_ASN1_PARSE_C


	)

34 
	#POLARSSL_ASN1_WRITE_C


	)

35 
	#POLARSSL_BASE64_C


	)

36 
	#POLARSSL_BIGNUM_C


	)

37 
	#POLARSSL_ECDSA_C


	)

38 
	#POLARSSL_ECP_C


	)

39 
	#POLARSSL_ENTROPY_C


	)

40 
	#POLARSSL_HMAC_DRBG_C


	)

41 
	#POLARSSL_MD_C


	)

42 
	#POLARSSL_OID_C


	)

43 
	#POLARSSL_PADLOCK_C


	)

44 
	#POLARSSL_PK_C


	)

45 
	#POLARSSL_PK_PARSE_C


	)

46 
	#POLARSSL_PK_WRITE_C


	)

47 
	#POLARSSL_RIPEMD160_C


	)

48 
	#POLARSSL_SHA1_C


	)

49 
	#POLARSSL_SHA256_C


	)

51 
	~"check_c⁄fig.h
"

	@polarssl/configs/config-psk-rc4-tls1_0.h

11 #i‚de‡
POLARSSL_CONFIG_H


12 
	#POLARSSL_CONFIG_H


	)

20 
	#POLARSSL_KEY_EXCHANGE_PSK_ENABLED


	)

21 
	#POLARSSL_SSL_PROTO_TLS1


	)

24 
	#POLARSSL_AES_C


	)

25 
	#POLARSSL_ARC4_C


	)

26 
	#POLARSSL_CIPHER_C


	)

27 
	#POLARSSL_CTR_DRBG_C


	)

28 
	#POLARSSL_ENTROPY_C


	)

29 
	#POLARSSL_MD_C


	)

30 
	#POLARSSL_MD5_C


	)

31 
	#POLARSSL_NET_C


	)

32 
	#POLARSSL_SHA1_C


	)

33 
	#POLARSSL_SHA256_C


	)

34 
	#POLARSSL_SSL_CLI_C


	)

35 
	#POLARSSL_SSL_SRV_C


	)

36 
	#POLARSSL_SSL_TLS_C


	)

38 
	~"pﬁ¨s¶/check_c⁄fig.h
"

	@polarssl/configs/config-suite-b.h

15 #i‚de‡
POLARSSL_CONFIG_H


16 
	#POLARSSL_CONFIG_H


	)

19 
	#POLARSSL_HAVE_ASM


	)

20 
	#POLARSSL_HAVE_TIME


	)

21 
	#POLARSSL_HAVE_IPV6


	)

24 
	#POLARSSL_ECP_DP_SECP256R1_ENABLED


	)

25 
	#POLARSSL_ECP_DP_SECP384R1_ENABLED


	)

26 
	#POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED


	)

27 
	#POLARSSL_SSL_PROTO_TLS1_2


	)

30 
	#POLARSSL_AES_C


	)

31 
	#POLARSSL_ASN1_PARSE_C


	)

32 
	#POLARSSL_ASN1_WRITE_C


	)

33 
	#POLARSSL_BIGNUM_C


	)

34 
	#POLARSSL_CIPHER_C


	)

35 
	#POLARSSL_CTR_DRBG_C


	)

36 
	#POLARSSL_ECDH_C


	)

37 
	#POLARSSL_ECDSA_C


	)

38 
	#POLARSSL_ECP_C


	)

39 
	#POLARSSL_ENTROPY_C


	)

40 
	#POLARSSL_GCM_C


	)

41 
	#POLARSSL_MD_C


	)

42 
	#POLARSSL_NET_C


	)

43 
	#POLARSSL_OID_C


	)

44 
	#POLARSSL_PK_C


	)

45 
	#POLARSSL_PK_PARSE_C


	)

46 
	#POLARSSL_SHA256_C


	)

47 
	#POLARSSL_SHA512_C


	)

48 
	#POLARSSL_SSL_CLI_C


	)

49 
	#POLARSSL_SSL_SRV_C


	)

50 
	#POLARSSL_SSL_TLS_C


	)

51 
	#POLARSSL_X509_CRT_PARSE_C


	)

52 
	#POLARSSL_X509_USE_C


	)

55 
	#POLARSSL_BASE64_C


	)

56 
	#POLARSSL_CERTS_C


	)

57 
	#POLARSSL_PEM_PARSE_C


	)

60 
	#POLARSSL_AES_ROM_TABLES


	)

63 
	#POLARSSL_ECP_MAX_BITS
 384

	)

64 
	#POLARSSL_MPI_MAX_SIZE
 48

65 

	)

67 
	#POLARSSL_ECP_WINDOW_SIZE
 2

	)

68 
	#POLARSSL_ECP_FIXED_POINT_OPTIM
 0

	)

78 
	#ENTROPY_MAX_SOURCES
 2

	)

81 
	#SSL_CIPHERSUITES
 \

82 
TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
, \

83 
TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256


	)

91 
	#SSL_MAX_CONTENT_LEN
 1024

	)

93 
	~"pﬁ¨s¶/check_c⁄fig.h
"

	@polarssl/doxygen/input/doc_encdec.h

	@polarssl/doxygen/input/doc_hashing.h

	@polarssl/doxygen/input/doc_mainpage.h

	@polarssl/doxygen/input/doc_rng.h

	@polarssl/doxygen/input/doc_ssltls.h

	@polarssl/doxygen/input/doc_tcpip.h

	@polarssl/doxygen/input/doc_x509.h

	@polarssl/include/polarssl/aes.h

27 #i‚de‡
POLARSSL_AES_H


28 
	#POLARSSL_AES_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~<°rög.h
>

38 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

39 
	~<ba£tsd.h
>

40 
UINT32
 
	tuöt32_t
;

42 
	~<öây≥s.h
>

46 
	#AES_ENCRYPT
 1

	)

47 
	#AES_DECRYPT
 0

	)

49 
	#POLARSSL_ERR_AES_INVALID_KEY_LENGTH
 -0x0020

	)

50 
	#POLARSSL_ERR_AES_INVALID_INPUT_LENGTH
 -0x0022

	)

52 #i‡!
deföed
(
POLARSSL_AES_ALT
)

56 #ifde‡
__˝lu•lus


70 
ƒ
;

71 
uöt32_t
 *
rk
;

72 
uöt32_t
 
buf
[68];

74 
	t´s_c⁄ãxt
;

81 
´s_öô
–
´s_c⁄ãxt
 *
˘x
 );

88 
´s_‰ì
–
´s_c⁄ãxt
 *
˘x
 );

99 
´s_£tkey_íc
–
´s_c⁄ãxt
 *
˘x
, c⁄° *
key
,

100 
keysize
 );

111 
´s_£tkey_dec
–
´s_c⁄ãxt
 *
˘x
, c⁄° *
key
,

112 
keysize
 );

124 
´s_¸y±_ecb
–
´s_c⁄ãxt
 *
˘x
,

125 
mode
,

126 c⁄° 
öput
[16],

127 
ouçut
[16] );

129 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

144 
´s_¸y±_cbc
–
´s_c⁄ãxt
 *
˘x
,

145 
mode
,

146 
size_t
 
Àngth
,

147 
iv
[16],

148 c⁄° *
öput
,

149 *
ouçut
 );

152 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CFB
)

170 
´s_¸y±_cfb128
–
´s_c⁄ãxt
 *
˘x
,

171 
mode
,

172 
size_t
 
Àngth
,

173 
size_t
 *
iv_off
,

174 
iv
[16],

175 c⁄° *
öput
,

176 *
ouçut
 );

194 
´s_¸y±_cfb8
–
´s_c⁄ãxt
 *
˘x
,

195 
mode
,

196 
size_t
 
Àngth
,

197 
iv
[16],

198 c⁄° *
öput
,

199 *
ouçut
 );

202 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CTR
)

225 
´s_¸y±_˘r
–
´s_c⁄ãxt
 *
˘x
,

226 
size_t
 
Àngth
,

227 
size_t
 *
nc_off
,

228 
n⁄˚_cou¡î
[16],

229 
°ªam_block
[16],

230 c⁄° *
öput
,

231 *
ouçut
 );

234 #ifde‡
__˝lu•lus


239 
	~"´s_Æt.h
"

242 #ifde‡
__˝lu•lus


251 
´s_£lf_ã°
–
vîbo£
 );

253 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/aesni.h

27 #i‚de‡
POLARSSL_AESNI_H


28 
	#POLARSSL_AESNI_H


	)

30 
	~"´s.h
"

32 
	#POLARSSL_AESNI_AES
 0x02000000u

	)

33 
	#POLARSSL_AESNI_CLMUL
 0x00000002u

	)

35 #i‡
deföed
(
POLARSSL_HAVE_ASM
Ë&& deföed(
__GNUC__
) && \

36 –
deföed
(
__amd64__
Ë|| deföed(
__x86_64__
) ) && \

37 ! 
	$deföed
(
POLARSSL_HAVE_X86_64
)

38 
	#POLARSSL_HAVE_X86_64


	)

41 #i‡
	`deföed
(
POLARSSL_HAVE_X86_64
)

51 
	`´¢i_suµ‹ts
–
wh©
 );

63 
	`´¢i_¸y±_ecb
–
´s_c⁄ãxt
 *
˘x
,

64 
mode
,

65 c⁄° 
öput
[16],

66 
ouçut
[16] );

78 
	`´¢i_gcm_mu…
–
c
[16],

79 c⁄° 
a
[16],

80 c⁄° 
b
[16] );

89 
	`´¢i_övî£_key
–*
övkey
,

90 c⁄° *
fwdkey
, 
ƒ
 );

101 
	`´¢i_£tkey_íc
–*
rk
,

102 c⁄° *
key
,

103 
size_t
 
bôs
 );

	@polarssl/include/polarssl/arc4.h

27 #i‚de‡
POLARSSL_ARC4_H


28 
	#POLARSSL_ARC4_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~<°rög.h
>

38 #i‡!
deföed
(
POLARSSL_ARC4_ALT
)

42 #ifde‡
__˝lu•lus


51 
x
;

52 
y
;

53 
m
[256];

55 
	t¨c4_c⁄ãxt
;

62 
¨c4_öô
–
¨c4_c⁄ãxt
 *
˘x
 );

69 
¨c4_‰ì
–
¨c4_c⁄ãxt
 *
˘x
 );

78 
¨c4_£tup
–
¨c4_c⁄ãxt
 *
˘x
, c⁄° *
key
,

79 
keyÀn
 );

91 
¨c4_¸y±
–
¨c4_c⁄ãxt
 *
˘x
, 
size_t
 
Àngth
, c⁄° *
öput
,

92 *
ouçut
 );

94 #ifde‡
__˝lu•lus


99 
	~"¨c4_Æt.h
"

102 #ifde‡
__˝lu•lus


111 
¨c4_£lf_ã°
–
vîbo£
 );

113 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/asn1.h

27 #i‚de‡
POLARSSL_ASN1_H


28 
	#POLARSSL_ASN1_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 #i‡
deföed
(
POLARSSL_BIGNUM_C
)

37 
	~"bignum.h
"

40 
	~<°rög.h
>

54 
	#POLARSSL_ERR_ASN1_OUT_OF_DATA
 -0x0060

	)

55 
	#POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 -0x0062

	)

56 
	#POLARSSL_ERR_ASN1_INVALID_LENGTH
 -0x0064

	)

57 
	#POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 -0x0066

	)

58 
	#POLARSSL_ERR_ASN1_INVALID_DATA
 -0x0068

	)

59 
	#POLARSSL_ERR_ASN1_MALLOC_FAILED
 -0x006A

	)

60 
	#POLARSSL_ERR_ASN1_BUF_TOO_SMALL
 -0x006C

	)

75 
	#ASN1_BOOLEAN
 0x01

	)

76 
	#ASN1_INTEGER
 0x02

	)

77 
	#ASN1_BIT_STRING
 0x03

	)

78 
	#ASN1_OCTET_STRING
 0x04

	)

79 
	#ASN1_NULL
 0x05

	)

80 
	#ASN1_OID
 0x06

	)

81 
	#ASN1_UTF8_STRING
 0x0C

	)

82 
	#ASN1_SEQUENCE
 0x10

	)

83 
	#ASN1_SET
 0x11

	)

84 
	#ASN1_PRINTABLE_STRING
 0x13

	)

85 
	#ASN1_T61_STRING
 0x14

	)

86 
	#ASN1_IA5_STRING
 0x16

	)

87 
	#ASN1_UTC_TIME
 0x17

	)

88 
	#ASN1_GENERALIZED_TIME
 0x18

	)

89 
	#ASN1_UNIVERSAL_STRING
 0x1C

	)

90 
	#ASN1_BMP_STRING
 0x1E

	)

91 
	#ASN1_PRIMITIVE
 0x00

	)

92 
	#ASN1_CONSTRUCTED
 0x20

	)

93 
	#ASN1_CONTEXT_SPECIFIC
 0x80

	)

98 
	#OID_SIZE
(
x
Ë((xË- 1)

	)

108 
	#OID_CMP
(
oid_°r
, 
oid_buf
) \

109 ––
	`OID_SIZE
(
oid_°r
Ë=(
oid_buf
)->
Àn
 ) && \

110 
	`memcmp
–(
oid_°r
), (
oid_buf
)->
p
, (oid_buf)->
Àn
Ë=0 )

	)

112 #ifde‡
__˝lu•lus


124 
	s_a¢1_buf


126 
èg
;

127 
size_t
 
Àn
;

128 *
p
;

130 
	ta¢1_buf
;

135 
	s_a¢1_bô°rög


137 
size_t
 
Àn
;

138 
unu£d_bôs
;

139 *
p
;

141 
	ta¢1_bô°rög
;

146 
	s_a¢1_£quí˚


148 
a¢1_buf
 
buf
;

149 
_a¢1_£quí˚
 *
√xt
;

151 
	ta¢1_£quí˚
;

156 
	s_a¢1_«med_d©a


158 
a¢1_buf
 
oid
;

159 
a¢1_buf
 
vÆ
;

160 
_a¢1_«med_d©a
 *
√xt
;

162 
	ta¢1_«med_d©a
;

176 
a¢1_gë_Àn
–**
p
,

177 c⁄° *
íd
,

178 
size_t
 *
Àn
 );

192 
a¢1_gë_èg
–**
p
,

193 c⁄° *
íd
,

194 
size_t
 *
Àn
, 
èg
 );

206 
a¢1_gë_boﬁ
–**
p
,

207 c⁄° *
íd
,

208 *
vÆ
 );

220 
a¢1_gë_öt
–**
p
,

221 c⁄° *
íd
,

222 *
vÆ
 );

234 
a¢1_gë_bô°rög
–**
p
, c⁄° *
íd
,

235 
a¢1_bô°rög
 *
bs
);

248 
a¢1_gë_bô°rög_nuŒ
–**
p
, c⁄° *
íd
,

249 
size_t
 *
Àn
 );

262 
a¢1_gë_£quí˚_of
–**
p
,

263 c⁄° *
íd
,

264 
a¢1_£quí˚
 *
cur
,

265 
èg
);

267 #i‡
deföed
(
POLARSSL_BIGNUM_C
)

278 
a¢1_gë_mpi
–**
p
,

279 c⁄° *
íd
,

280 
mpi
 *
X
 );

295 
a¢1_gë_Æg
–**
p
,

296 c⁄° *
íd
,

297 
a¢1_buf
 *
Æg
,á¢1_bu‡*
∑øms
 );

311 
a¢1_gë_Æg_nuŒ
–**
p
,

312 c⁄° *
íd
,

313 
a¢1_buf
 *
Æg
 );

325 
a¢1_«med_d©a
 *
a¢1_föd_«med_d©a
–a¢1_«med_d©®*
li°
,

326 c⁄° *
oid
, 
size_t
 
Àn
 );

333 
a¢1_‰ì_«med_d©a
–
a¢1_«med_d©a
 *
íåy
 );

341 
a¢1_‰ì_«med_d©a_li°
–
a¢1_«med_d©a
 **
hód
 );

343 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/asn1write.h

27 #i‚de‡
POLARSSL_ASN1_WRITE_H


28 
	#POLARSSL_ASN1_WRITE_H


	)

30 
	~"a¢1.h
"

32 
	#ASN1_CHK_ADD
(
g
, 
f
Ëdÿ{ if––
ªt
 = f ) < 0 ) (Ñet ); \

33 
g
 +
ªt
; }  0 )

	)

35 #ifde‡
__˝lu•lus


49 
a¢1_wrôe_Àn
–**
p
, *
°¨t
, 
size_t
 
Àn
 );

61 
a¢1_wrôe_èg
–**
p
, *
°¨t
,

62 
èg
 );

75 
a¢1_wrôe_øw_buf„r
–**
p
, *
°¨t
,

76 c⁄° *
buf
, 
size_t
 
size
 );

78 #i‡
deföed
(
POLARSSL_BIGNUM_C
)

89 
a¢1_wrôe_mpi
–**
p
, *
°¨t
, 
mpi
 *
X
 );

101 
a¢1_wrôe_nuŒ
–**
p
, *
°¨t
 );

114 
a¢1_wrôe_oid
–**
p
, *
°¨t
,

115 c⁄° *
oid
, 
size_t
 
oid_Àn
 );

130 
a¢1_wrôe_Æg‹ôhm_idítifõr
–**
p
, *
°¨t
,

131 c⁄° *
oid
, 
size_t
 
oid_Àn
,

132 
size_t
 
∑r_Àn
 );

144 
a¢1_wrôe_boﬁ
–**
p
, *
°¨t
, 
boﬁón
 );

156 
a¢1_wrôe_öt
–**
p
, *
°¨t
, 
vÆ
 );

170 
a¢1_wrôe_¥öèbÀ_°rög
–**
p
, *
°¨t
,

171 c⁄° *
ãxt
, 
size_t
 
ãxt_Àn
 );

185 
a¢1_wrôe_ü5_°rög
–**
p
, *
°¨t
,

186 c⁄° *
ãxt
, 
size_t
 
ãxt_Àn
 );

200 
a¢1_wrôe_bô°rög
–**
p
, *
°¨t
,

201 c⁄° *
buf
, 
size_t
 
bôs
 );

215 
a¢1_wrôe_o˘ë_°rög
–**
p
, *
°¨t
,

216 c⁄° *
buf
, 
size_t
 
size
 );

234 
a¢1_«med_d©a
 *
a¢1_°‹e_«med_d©a
–a¢1_«med_d©®**
li°
,

235 c⁄° *
oid
, 
size_t
 
oid_Àn
,

236 c⁄° *
vÆ
,

237 
size_t
 
vÆ_Àn
 );

239 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/base64.h

27 #i‚de‡
POLARSSL_BASE64_H


28 
	#POLARSSL_BASE64_H


	)

30 
	~<°rög.h
>

32 
	#POLARSSL_ERR_BASE64_BUFFER_TOO_SMALL
 -0x002A

	)

33 
	#POLARSSL_ERR_BASE64_INVALID_CHARACTER
 -0x002C

	)

35 #ifde‡
__˝lu•lus


54 
ba£64_ícode
–*
d°
, 
size_t
 *
dÀn
,

55 c⁄° *
§c
, 
size_t
 
¶í
 );

73 
ba£64_decode
–*
d°
, 
size_t
 *
dÀn
,

74 c⁄° *
§c
, 
size_t
 
¶í
 );

81 
ba£64_£lf_ã°
–
vîbo£
 );

83 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/bignum.h

27 #i‚de‡
POLARSSL_BIGNUM_H


28 
	#POLARSSL_BIGNUM_H


	)

30 
	~<°dio.h
>

31 
	~<°rög.h
>

33 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

34 
	~"c⁄fig.h
"

36 #ö˛udê
POLARSSL_CONFIG_FILE


39 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

40 
	~<ba£tsd.h
>

41 #i‡(
_MSC_VER
 <= 1200)

42 sig√d 
	töt16_t
;

43 
	tuöt16_t
;

45 
INT16
 
	töt16_t
;

46 
UINT16
 
	tuöt16_t
;

48 
INT32
 
	töt32_t
;

49 
INT64
 
	töt64_t
;

50 
UINT32
 
	tuöt32_t
;

51 
UINT64
 
	tuöt64_t
;

53 
	~<öây≥s.h
>

56 
	#POLARSSL_ERR_MPI_FILE_IO_ERROR
 -0x0002

	)

57 
	#POLARSSL_ERR_MPI_BAD_INPUT_DATA
 -0x0004

	)

58 
	#POLARSSL_ERR_MPI_INVALID_CHARACTER
 -0x0006

	)

59 
	#POLARSSL_ERR_MPI_BUFFER_TOO_SMALL
 -0x0008

	)

60 
	#POLARSSL_ERR_MPI_NEGATIVE_VALUE
 -0x000A

	)

61 
	#POLARSSL_ERR_MPI_DIVISION_BY_ZERO
 -0x000C

	)

62 
	#POLARSSL_ERR_MPI_NOT_ACCEPTABLE
 -0x000E

	)

63 
	#POLARSSL_ERR_MPI_MALLOC_FAILED
 -0x0010

	)

65 
	#MPI_CHK
(
f
Ëdÿ{ if––
ªt
 = f ) !0 ) 
˛ónup
; }  0 )

	)

70 
	#POLARSSL_MPI_MAX_LIMBS
 10000

	)

72 #i‡!
deföed
(
POLARSSL_MPI_WINDOW_SIZE
)

82 
	#POLARSSL_MPI_WINDOW_SIZE
 6

	)

85 #i‡!
deföed
(
POLARSSL_MPI_MAX_SIZE
)

93 
	#POLARSSL_MPI_MAX_SIZE
 512

	)

96 
	#POLARSSL_MPI_MAX_BITS
 ( 8 * 
POLARSSL_MPI_MAX_SIZE
 )

	)

116 
	#POLARSSL_MPI_MAX_BITS_SCALE100
 ( 100 * 
POLARSSL_MPI_MAX_BITS
 )

	)

117 
	#LN_2_DIV_LN_10_SCALE100
 332

	)

118 
	#POLARSSL_MPI_RW_BUFFER_SIZE
 ( ((
POLARSSL_MPI_MAX_BITS_SCALE100
 + 
LN_2_DIV_LN_10_SCALE100
 - 1Ë/ LN_2_DIV_LN_10_SCALE100Ë+ 10 + 6 )

	)

123 #i‡
deföed
(
POLARSSL_HAVE_INT8
)

124 sig√d 
	tt_söt
;

125 
	tt_uöt
;

126 
uöt16_t
 
	tt_udbl
;

127 
	#POLARSSL_HAVE_UDBL


	)

129 #i‡
deföed
(
POLARSSL_HAVE_INT16
)

130 
öt16_t
 
	tt_söt
;

131 
uöt16_t
 
	tt_uöt
;

132 
uöt32_t
 
	tt_udbl
;

133 
	#POLARSSL_HAVE_UDBL


	)

139 #i‡–! 
deföed
(
POLARSSL_HAVE_INT32
) && \

140 
deföed
(
_MSC_VER
Ë&& 
	$deföed
(
_M_AMD64
) )

141 
	#POLARSSL_HAVE_INT64


	)

142 
öt64_t
 
	tt_söt
;

143 
uöt64_t
 
	tt_uöt
;

145 #i‡–! 
	`deföed
(
POLARSSL_HAVE_INT32
) && \

146 
	`deföed
(
__GNUC__
) && ( \

147 
	`deföed
(
__amd64__
Ë|| deföed(
__x86_64__
) || \

148 
	`deföed
(
__µc64__
Ë|| deföed(
__powîpc64__
) || \

149 
	`deföed
(
__ü64__
Ë|| deföed(
__Æpha__
) || \

150 (
	`deföed
(
__•¨c__
Ë&& deföed(
__¨ch64__
)) || \

151 
	$deföed
(
__s390x__
) ) )

152 
	#POLARSSL_HAVE_INT64


	)

153 
öt64_t
 
	tt_söt
;

154 
uöt64_t
 
	tt_uöt
;

155 
	tt_udbl
 
	t__©åibuã__
((
	tmode
(
	tTI
)));

156 
	#POLARSSL_HAVE_UDBL


	)

158 
	#POLARSSL_HAVE_INT32


	)

159 
öt32_t
 
	tt_söt
;

160 
uöt32_t
 
	tt_uöt
;

161 #i‡–
	`deföed
(
_MSC_VER
Ë&& deföed(
_M_IX86
) )

162 
uöt64_t
 
	tt_udbl
;

163 
	#POLARSSL_HAVE_UDBL


	)

165 #i‡
	`deföed
–
POLARSSL_HAVE_LONGLONG
 )

166 
	tt_udbl
;

167 
	#POLARSSL_HAVE_UDBL


	)

175 #ifde‡
__˝lu•lus


184 
s
;

185 
size_t
 
n
;

186 
t_uöt
 *
p
;

188 
	tmpi
;

195 
	`mpi_öô
–
mpi
 *
X
 );

202 
	`mpi_‰ì
–
mpi
 *
X
 );

213 
	`mpi_grow
–
mpi
 *
X
, 
size_t
 
nblimbs
 );

224 
	`mpi_shrök
–
mpi
 *
X
, 
size_t
 
nblimbs
 );

235 
	`mpi_c›y
–
mpi
 *
X
, c⁄° mpò*
Y
 );

243 
	`mpi_sw≠
–
mpi
 *
X
, mpò*
Y
 );

262 
	`mpi_ß„_c⁄d_assign
–
mpi
 *
X
, c⁄° mpò*
Y
, 
assign
 );

281 
	`mpi_ß„_c⁄d_sw≠
–
mpi
 *
X
, mpò*
Y
, 
assign
 );

292 
	`mpi_l£t
–
mpi
 *
X
, 
t_söt
 
z
 );

302 
	`mpi_gë_bô
–c⁄° 
mpi
 *
X
, 
size_t
 
pos
 );

318 
	`mpi_£t_bô
–
mpi
 *
X
, 
size_t
 
pos
, 
vÆ
 );

328 
size_t
 
	`mpi_lsb
–c⁄° 
mpi
 *
X
 );

338 
size_t
 
	`mpi_msb
–c⁄° 
mpi
 *
X
 );

345 
size_t
 
	`mpi_size
–c⁄° 
mpi
 *
X
 );

356 
	`mpi_ªad_°rög
–
mpi
 *
X
, 
ødix
, c⁄° *
s
 );

373 
	`mpi_wrôe_°rög
–c⁄° 
mpi
 *
X
, 
ødix
, *
s
, 
size_t
 *
¶í
 );

375 #i‡
	`deföed
(
POLARSSL_FS_IO
)

387 
	`mpi_ªad_fûe
–
mpi
 *
X
, 
ødix
, 
FILE
 *
fö
 );

401 
	`mpi_wrôe_fûe
–c⁄° *
p
, c⁄° 
mpi
 *
X
, 
ødix
, 
FILE
 *
fout
 );

414 
	`mpi_ªad_bö¨y
–
mpi
 *
X
, c⁄° *
buf
, 
size_t
 
buÊí
 );

428 
	`mpi_wrôe_bö¨y
–c⁄° 
mpi
 *
X
, *
buf
, 
size_t
 
buÊí
 );

439 
	`mpi_shi·_l
–
mpi
 *
X
, 
size_t
 
cou¡
 );

450 
	`mpi_shi·_r
–
mpi
 *
X
, 
size_t
 
cou¡
 );

462 
	`mpi_cmp_abs
–c⁄° 
mpi
 *
X
, c⁄° mpò*
Y
 );

474 
	`mpi_cmp_mpi
–c⁄° 
mpi
 *
X
, c⁄° mpò*
Y
 );

486 
	`mpi_cmp_öt
–c⁄° 
mpi
 *
X
, 
t_söt
 
z
 );

498 
	`mpi_add_abs
–
mpi
 *
X
, c⁄° mpò*
A
, c⁄° mpò*
B
 );

510 
	`mpi_sub_abs
–
mpi
 *
X
, c⁄° mpò*
A
, c⁄° mpò*
B
 );

522 
	`mpi_add_mpi
–
mpi
 *
X
, c⁄° mpò*
A
, c⁄° mpò*
B
 );

534 
	`mpi_sub_mpi
–
mpi
 *
X
, c⁄° mpò*
A
, c⁄° mpò*
B
 );

546 
	`mpi_add_öt
–
mpi
 *
X
, c⁄° mpò*
A
, 
t_söt
 
b
 );

558 
	`mpi_sub_öt
–
mpi
 *
X
, c⁄° mpò*
A
, 
t_söt
 
b
 );

570 
	`mpi_mul_mpi
–
mpi
 *
X
, c⁄° mpò*
A
, c⁄° mpò*
B
 );

585 
	`mpi_mul_öt
–
mpi
 *
X
, c⁄° mpò*
A
, 
t_söt
 
b
 );

601 
	`mpi_div_mpi
–
mpi
 *
Q
, mpò*
R
, c⁄° mpò*
A
, c⁄° mpò*
B
 );

617 
	`mpi_div_öt
–
mpi
 *
Q
, mpò*
R
, c⁄° mpò*
A
, 
t_söt
 
b
 );

631 
	`mpi_mod_mpi
–
mpi
 *
R
, c⁄° mpò*
A
, c⁄° mpò*
B
 );

645 
	`mpi_mod_öt
–
t_uöt
 *
r
, c⁄° 
mpi
 *
A
, 
t_söt
 
b
 );

665 
	`mpi_exp_mod
–
mpi
 *
X
, c⁄° mpò*
A
, c⁄° mpò*
E
, c⁄° mpò*
N
, mpò*
_RR
 );

678 
	`mpi_fûl_øndom
–
mpi
 *
X
, 
size_t
 
size
,

679 (*
f_∫g
)(*, *, 
size_t
),

680 *
p_∫g
 );

692 
	`mpi_gcd
–
mpi
 *
G
, c⁄° mpò*
A
, c⁄° mpò*
B
 );

706 
	`mpi_öv_mod
–
mpi
 *
X
, c⁄° mpò*
A
, c⁄° mpò*
N
 );

719 
	`mpi_is_¥ime
–
mpi
 *
X
,

720 (*
f_∫g
)(*, *, 
size_t
),

721 *
p_∫g
 );

737 
	`mpi_gí_¥ime
–
mpi
 *
X
, 
size_t
 
nbôs
, 
dh_Êag
,

738 (*
f_∫g
)(*, *, 
size_t
),

739 *
p_∫g
 );

746 
	`mpi_£lf_ã°
–
vîbo£
 );

748 #ifde‡
__˝lu•lus


749 
	}
}

	@polarssl/include/polarssl/blowfish.h

27 #i‚de‡
POLARSSL_BLOWFISH_H


28 
	#POLARSSL_BLOWFISH_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~<°rög.h
>

38 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

39 
	~<ba£tsd.h
>

40 
UINT32
 
	tuöt32_t
;

42 
	~<öây≥s.h
>

45 
	#BLOWFISH_ENCRYPT
 1

	)

46 
	#BLOWFISH_DECRYPT
 0

	)

47 
	#BLOWFISH_MAX_KEY
 448

	)

48 
	#BLOWFISH_MIN_KEY
 32

	)

49 
	#BLOWFISH_ROUNDS
 16

	)

50 
	#BLOWFISH_BLOCKSIZE
 8

	)

52 
	#POLARSSL_ERR_BLOWFISH_INVALID_KEY_LENGTH
 -0x0016

	)

53 
	#POLARSSL_ERR_BLOWFISH_INVALID_INPUT_LENGTH
 -0x0018

	)

55 #i‡!
deföed
(
POLARSSL_BLOWFISH_ALT
)

59 #ifde‡
__˝lu•lus


68 
uöt32_t
 
P
[
BLOWFISH_ROUNDS
 + 2];

69 
uöt32_t
 
S
[4][256];

71 
	tblowfish_c⁄ãxt
;

78 
blowfish_öô
–
blowfish_c⁄ãxt
 *
˘x
 );

85 
blowfish_‰ì
–
blowfish_c⁄ãxt
 *
˘x
 );

96 
blowfish_£tkey
–
blowfish_c⁄ãxt
 *
˘x
, c⁄° *
key
,

97 
keysize
 );

109 
blowfish_¸y±_ecb
–
blowfish_c⁄ãxt
 *
˘x
,

110 
mode
,

111 c⁄° 
öput
[
BLOWFISH_BLOCKSIZE
],

112 
ouçut
[
BLOWFISH_BLOCKSIZE
] );

114 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

130 
blowfish_¸y±_cbc
–
blowfish_c⁄ãxt
 *
˘x
,

131 
mode
,

132 
size_t
 
Àngth
,

133 
iv
[
BLOWFISH_BLOCKSIZE
],

134 c⁄° *
öput
,

135 *
ouçut
 );

138 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CFB
)

152 
blowfish_¸y±_cfb64
–
blowfish_c⁄ãxt
 *
˘x
,

153 
mode
,

154 
size_t
 
Àngth
,

155 
size_t
 *
iv_off
,

156 
iv
[
BLOWFISH_BLOCKSIZE
],

157 c⁄° *
öput
,

158 *
ouçut
 );

161 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CTR
)

180 
blowfish_¸y±_˘r
–
blowfish_c⁄ãxt
 *
˘x
,

181 
size_t
 
Àngth
,

182 
size_t
 *
nc_off
,

183 
n⁄˚_cou¡î
[
BLOWFISH_BLOCKSIZE
],

184 
°ªam_block
[
BLOWFISH_BLOCKSIZE
],

185 c⁄° *
öput
,

186 *
ouçut
 );

189 #ifde‡
__˝lu•lus


194 
	~"blowfish_Æt.h
"

	@polarssl/include/polarssl/bn_mul.h

41 #i‚de‡
POLARSSL_BN_MUL_H


42 
	#POLARSSL_BN_MUL_H


	)

44 
	~"bignum.h
"

46 #i‡
deföed
(
POLARSSL_HAVE_ASM
)

48 #i‡
deföed
(
__GNUC__
)

49 #i‡
deföed
(
__i386__
)

51 
	#MULADDC_INIT
 \

52 
	`asm
( \

57 "mov» %8, %%ebx \n\t"

	)

59 
	#MULADDC_CORE
 \

67 "°o¶ \n\t"

	)

69 #i‡
deföed
(
POLARSSL_HAVE_SSE2
)

71 
	#MULADDC_HUIT
 \

132 "movd %%mm1, %%ecx \n\t"

	)

134 
	#MULADDC_STOP
 \

140 : "=m" (
t
), "=m" (
c
), "=m" (
d
), "=m" (
s
) \

141 : "m" (
t
), "m" (
s
), "m" (
d
), "m" (
c
), "m" (
b
) \

143 );

	)

147 
	#MULADDC_STOP
 \

152 : "=m" (
t
), "=m" (
c
), "=m" (
d
), "=m" (
s
) \

153 : "m" (
t
), "m" (
s
), "m" (
d
), "m" (
c
), "m" (
b
) \

155 );

	)

159 #i‡
deföed
(
__amd64__
Ë|| deföed (
__x86_64__
)

161 
	#MULADDC_INIT
 \

162 
	`asm
( \

167 "x‹q %%r8, %%r8 \n\t"

	)

169 
	#MULADDC_CORE
 \

179 "addq $8, %%rdò \n\t"

	)

181 
	#MULADDC_STOP
 \

185 : "=m" (
c
), "=m" (
d
), "=m" (
s
) \

186 : "m" (
s
), "m" (
d
), "m" (
c
), "m" (
b
) \

188 );

	)

192 #i‡
deföed
(
__mc68020__
Ë|| deföed(
__m˝u32__
)

194 
	#MULADDC_INIT
 \

195 
	`asm
( \

200 "moveq #0, %%d0 \n\t"

	)

202 
	#MULADDC_CORE
 \

209 "addx» %%d4, %%d3 \n\t"

	)

211 
	#MULADDC_STOP
 \

215 : "=m" (
c
), "=m" (
d
), "=m" (
s
) \

216 : "m" (
s
), "m" (
d
), "m" (
c
), "m" (
b
) \

218 );

	)

220 
	#MULADDC_HUIT
 \

261 "addx» %%d0, %%d3 \n\t"

	)

265 #i‡
deföed
(
__powîpc64__
Ë|| deföed(
__µc64__
)

267 #i‡
deföed
(
__MACH__
Ë&& deföed(
__APPLE__
)

269 
	#MULADDC_INIT
 \

270 
	`asm
( \

277 "addi¯Ñ5,Ñ5, 0 \n\t"

	)

279 
	#MULADDC_CORE
 \

287 "°duÑ8, 8‘4Ë \n\t"

	)

289 
	#MULADDC_STOP
 \

296 : "=m" (
c
), "=m" (
d
), "=m" (
s
) \

297 : "m" (
s
), "m" (
d
), "m" (
c
), "m" (
b
) \

299 );

	)

304 
	#MULADDC_INIT
 \

305 
	`asm
( \

312 "addi¯ %%r5, %%r5, 0 \n\t"

	)

314 
	#MULADDC_CORE
 \

322 "°du %%r8, 8(%%r4Ë \n\t"

	)

324 
	#MULADDC_STOP
 \

331 : "=m" (
c
), "=m" (
d
), "=m" (
s
) \

332 : "m" (
s
), "m" (
d
), "m" (
c
), "m" (
b
) \

334 );

	)

338 #ñi‡
deföed
(
__powîpc__
Ë|| deföed(
__µc__
)

340 #i‡
deföed
(
__MACH__
Ë&& deföed(
__APPLE__
)

342 
	#MULADDC_INIT
 \

343 
	`asm
( \

350 "addi¯Ñ5,Ñ5, 0 \n\t"

	)

352 
	#MULADDC_CORE
 \

360 "°wuÑ8, 4‘4Ë \n\t"

	)

362 
	#MULADDC_STOP
 \

369 : "=m" (
c
), "=m" (
d
), "=m" (
s
) \

370 : "m" (
s
), "m" (
d
), "m" (
c
), "m" (
b
) \

372 );

	)

376 
	#MULADDC_INIT
 \

377 
	`asm
( \

384 "addi¯ %%r5, %%r5, 0 \n\t"

	)

386 
	#MULADDC_CORE
 \

394 "°wu %%r8, 4(%%r4Ë \n\t"

	)

396 
	#MULADDC_STOP
 \

403 : "=m" (
c
), "=m" (
d
), "=m" (
s
) \

404 : "m" (
s
), "m" (
d
), "m" (
c
), "m" (
b
) \

406 );

	)

416 #i‡0 && 
deföed
(
__•¨c__
Ë&& deföed(
__•¨c64__
)

418 
	#MULADDC_INIT
 \

419 
	`asm
( \

423 "ld %6, %%o3 \n\t"

	)

425 
	#MULADDC_CORE
 \

436 "ö¯ 4, %%o1 \n\t"

	)

438 
	#MULADDC_STOP
 \

442 : "=m" (
c
), "=m" (
d
), "=m" (
s
) \

443 : "m" (
s
), "m" (
d
), "m" (
c
), "m" (
b
) \

446 );

	)

449 #i‡
deföed
(
__•¨c__
Ë&& !deföed(
__•¨c64__
)

451 
	#MULADDC_INIT
 \

452 
	`asm
( \

456 "ld %6, %%o3 \n\t"

	)

458 
	#MULADDC_CORE
 \

469 "ö¯ 4, %%o1 \n\t"

	)

471 
	#MULADDC_STOP
 \

475 : "=m" (
c
), "=m" (
d
), "=m" (
s
) \

476 : "m" (
s
), "m" (
d
), "m" (
c
), "m" (
b
) \

479 );

	)

483 #i‡
deföed
(
__mi¸obœze__
Ë|| deföed(
mi¸obœze
)

485 
	#MULADDC_INIT
 \

486 
	`asm
( \

492 "b§lòr6,Ñ6, 16 \n\t"

	)

494 
	#MULADDC_CORE
 \

519 "addòÑ4,Ñ4, 4 \n\t"

	)

521 
	#MULADDC_STOP
 \

525 : "=m" (
c
), "=m" (
d
), "=m" (
s
) \

526 : "m" (
s
), "m" (
d
), "m" (
c
), "m" (
b
) \

529 );

	)

533 #i‡
deföed
(
__åic‹e__
)

535 
	#MULADDC_INIT
 \

536 
	`asm
( \

541 "x‹ %%d5, %%d5 \n\t"

	)

543 
	#MULADDC_CORE
 \

550 "°.w [%%a3+], %%d2 \n\t"

	)

552 
	#MULADDC_STOP
 \

556 : "=m" (
c
), "=m" (
d
), "=m" (
s
) \

557 : "m" (
s
), "m" (
d
), "m" (
c
), "m" (
b
) \

559 );

	)

563 #i‡
deföed
(
__¨m__
)

565 #i‡
deföed
(
__thumb__
Ë&& !deföed(
__thumb2__
)

567 
	#MULADDC_INIT
 \

568 
	`asm
( \

577 "movÑ8,Ñ7 \n\t"

	)

579 
	#MULADDC_CORE
 \

608 "°müÑ1!, {r4} \n\t"

	)

610 
	#MULADDC_STOP
 \

614 : "=m" (
c
), "=m" (
d
), "=m" (
s
) \

615 : "m" (
s
), "m" (
d
), "m" (
c
), "m" (
b
) \

618 );

	)

622 
	#MULADDC_INIT
 \

623 
	`asm
( \

627 "ld∏Ñ3, %6 \n\t"

	)

629 
	#MULADDC_CORE
 \

636 "°∏Ñ7, [r1], #4 \n\t"

	)

638 
	#MULADDC_STOP
 \

642 : "=m" (
c
), "=m" (
d
), "=m" (
s
) \

643 : "m" (
s
), "m" (
d
), "m" (
c
), "m" (
b
) \

646 );

	)

652 #i‡
deföed
(
__Æpha__
)

654 
	#MULADDC_INIT
 \

655 
	`asm
( \

659 "ldq $4, %6 \n\t"

	)

661 
	#MULADDC_CORE
 \

674 "addq $5, $3, $3 \n\t"

	)

676 
	#MULADDC_STOP
 \

680 : "=m" (
c
), "=m" (
d
), "=m" (
s
) \

681 : "m" (
s
), "m" (
d
), "m" (
c
), "m" (
b
) \

683 );

	)

686 #i‡
deföed
(
__mùs__
Ë&& !deföed(
__mùs64__
)

688 
	#MULADDC_INIT
 \

689 
	`asm
( \

693 "lw $13, %6 \n\t"

	)

695 
	#MULADDC_CORE
 \

709 "addò $11, $11, 4 \n\t"

	)

711 
	#MULADDC_STOP
 \

715 : "=m" (
c
), "=m" (
d
), "=m" (
s
) \

716 : "m" (
s
), "m" (
d
), "m" (
c
), "m" (
b
) \

718 );

	)

723 #i‡(
deföed
(
_MSC_VER
Ë&& deföed(
_M_IX86
)Ë|| deföed(
__WATCOMC__
)

725 
	#MULADDC_INIT
 \

726 
__asm
 
mov
 
esi
, 
s
 \

727 
__asm
 
mov
 
edi
, 
d
 \

728 
__asm
 
mov
 
ecx
, 
c
 \

729 
__asm
 
mov
 
ebx
, 
b


	)

731 
	#MULADDC_CORE
 \

732 
__asm
 
lodsd
 \

733 
__asm
 
mul
 
ebx
 \

734 
__asm
 
add
 
óx
, 
ecx
 \

735 
__asm
 
adc
 
edx
, 0 \

736 
__asm
 
add
 
óx
, [
edi
] \

737 
__asm
 
adc
 
edx
, 0 \

738 
__asm
 
mov
 
ecx
, 
edx
 \

739 
__asm
 
°osd


	)

741 #i‡
deföed
(
POLARSSL_HAVE_SSE2
)

743 
	#EMIT
 
__asm
 
_emô


	)

745 
	#MULADDC_HUIT
 \

746 
EMIT
 0x0F EMIT 0x6E EMIT 0xC9 \

747 
EMIT
 0x0F EMIT 0x6E EMIT 0xC3 \

748 
EMIT
 0x0F EMIT 0x6E EMIT 0x1F \

749 
EMIT
 0x0F EMIT 0xD4 EMIT 0xCB \

750 
EMIT
 0x0F EMIT 0x6E EMIT 0x16 \

751 
EMIT
 0x0F EMIT 0xF4 EMIT 0xD0 \

752 
EMIT
 0x0F EMIT 0x6E EMIT 0x66 EMIT 0x04 \

753 
EMIT
 0x0F EMIT 0xF4 EMIT 0xE0 \

754 
EMIT
 0x0F EMIT 0x6E EMIT 0x76 EMIT 0x08 \

755 
EMIT
 0x0F EMIT 0xF4 EMIT 0xF0 \

756 
EMIT
 0x0F EMIT 0x6E EMIT 0x7E EMIT 0x0C \

757 
EMIT
 0x0F EMIT 0xF4 EMIT 0xF8 \

758 
EMIT
 0x0F EMIT 0xD4 EMIT 0xCA \

759 
EMIT
 0x0F EMIT 0x6E EMIT 0x5F EMIT 0x04 \

760 
EMIT
 0x0F EMIT 0xD4 EMIT 0xDC \

761 
EMIT
 0x0F EMIT 0x6E EMIT 0x6F EMIT 0x08 \

762 
EMIT
 0x0F EMIT 0xD4 EMIT 0xEE \

763 
EMIT
 0x0F EMIT 0x6E EMIT 0x67 EMIT 0x0C \

764 
EMIT
 0x0F EMIT 0xD4 EMIT 0xFC \

765 
EMIT
 0x0F EMIT 0x7E EMIT 0x0F \

766 
EMIT
 0x0F EMIT 0x6E EMIT 0x56 EMIT 0x10 \

767 
EMIT
 0x0F EMIT 0xF4 EMIT 0xD0 \

768 
EMIT
 0x0F EMIT 0x73 EMIT 0xD1 EMIT 0x20 \

769 
EMIT
 0x0F EMIT 0x6E EMIT 0x66 EMIT 0x14 \

770 
EMIT
 0x0F EMIT 0xF4 EMIT 0xE0 \

771 
EMIT
 0x0F EMIT 0xD4 EMIT 0xCB \

772 
EMIT
 0x0F EMIT 0x6E EMIT 0x76 EMIT 0x18 \

773 
EMIT
 0x0F EMIT 0xF4 EMIT 0xF0 \

774 
EMIT
 0x0F EMIT 0x7E EMIT 0x4F EMIT 0x04 \

775 
EMIT
 0x0F EMIT 0x73 EMIT 0xD1 EMIT 0x20 \

776 
EMIT
 0x0F EMIT 0x6E EMIT 0x5E EMIT 0x1C \

777 
EMIT
 0x0F EMIT 0xF4 EMIT 0xD8 \

778 
EMIT
 0x0F EMIT 0xD4 EMIT 0xCD \

779 
EMIT
 0x0F EMIT 0x6E EMIT 0x6F EMIT 0x10 \

780 
EMIT
 0x0F EMIT 0xD4 EMIT 0xD5 \

781 
EMIT
 0x0F EMIT 0x7E EMIT 0x4F EMIT 0x08 \

782 
EMIT
 0x0F EMIT 0x73 EMIT 0xD1 EMIT 0x20 \

783 
EMIT
 0x0F EMIT 0xD4 EMIT 0xCF \

784 
EMIT
 0x0F EMIT 0x6E EMIT 0x6F EMIT 0x14 \

785 
EMIT
 0x0F EMIT 0xD4 EMIT 0xE5 \

786 
EMIT
 0x0F EMIT 0x7E EMIT 0x4F EMIT 0x0C \

787 
EMIT
 0x0F EMIT 0x73 EMIT 0xD1 EMIT 0x20 \

788 
EMIT
 0x0F EMIT 0xD4 EMIT 0xCA \

789 
EMIT
 0x0F EMIT 0x6E EMIT 0x6F EMIT 0x18 \

790 
EMIT
 0x0F EMIT 0xD4 EMIT 0xF5 \

791 
EMIT
 0x0F EMIT 0x7E EMIT 0x4F EMIT 0x10 \

792 
EMIT
 0x0F EMIT 0x73 EMIT 0xD1 EMIT 0x20 \

793 
EMIT
 0x0F EMIT 0xD4 EMIT 0xCC \

794 
EMIT
 0x0F EMIT 0x6E EMIT 0x6F EMIT 0x1C \

795 
EMIT
 0x0F EMIT 0xD4 EMIT 0xDD \

796 
EMIT
 0x0F EMIT 0x7E EMIT 0x4F EMIT 0x14 \

797 
EMIT
 0x0F EMIT 0x73 EMIT 0xD1 EMIT 0x20 \

798 
EMIT
 0x0F EMIT 0xD4 EMIT 0xCE \

799 
EMIT
 0x0F EMIT 0x7E EMIT 0x4F EMIT 0x18 \

800 
EMIT
 0x0F EMIT 0x73 EMIT 0xD1 EMIT 0x20 \

801 
EMIT
 0x0F EMIT 0xD4 EMIT 0xCB \

802 
EMIT
 0x0F EMIT 0x7E EMIT 0x4F EMIT 0x1C \

803 
EMIT
 0x83 EMIT 0xC7 EMIT 0x20 \

804 
EMIT
 0x83 EMIT 0xC6 EMIT 0x20 \

805 
EMIT
 0x0F EMIT 0x73 EMIT 0xD1 EMIT 0x20 \

806 
EMIT
 0x0F EMIT 0x7E EMIT 0xC9

	)

808 
	#MULADDC_STOP
 \

809 
EMIT
 0x0F EMIT 0x77 \

810 
__asm
 
mov
 
c
, 
ecx
 \

811 
__asm
 
mov
 
d
, 
edi
 \

812 
__asm
 
mov
 
s
, 
esi
 \

813 

	)

816 
	#MULADDC_STOP
 \

817 
__asm
 
mov
 
c
, 
ecx
 \

818 
__asm
 
mov
 
d
, 
edi
 \

819 
__asm
 
mov
 
s
, 
esi
 \

820 

	)

826 #i‡!
deföed
(
MULADDC_CORE
)

827 #i‡
deföed
(
POLARSSL_HAVE_UDBL
)

829 
	#MULADDC_INIT
 \

831 
t_udbl
 
r
; \

832 
t_uöt
 
r0
, 
r1
;

	)

834 
	#MULADDC_CORE
 \

835 
r
 = *(
s
++Ë* (
t_udbl
Ë
b
; \

836 
r0
 = 
r
; \

837 
r1
 = 
r
 >> 
biL
; \

838 
r0
 +
c
; 
r1
 += (r0 < c); \

839 
r0
 +*
d
; 
r1
 += (r0 < *d); \

840 
c
 = 
r1
; *(
d
++Ë
r0
;

	)

842 
	#MULADDC_STOP
 \

843 }

	)

846 
	#MULADDC_INIT
 \

848 
t_uöt
 
s0
, 
s1
, 
b0
, 
b1
; \

849 
t_uöt
 
r0
, 
r1
, 
rx
, 
ry
; \

850 
b0
 = ( 
b
 << 
biH
 ) >> biH; \

851 
b1
 = ( 
b
 >> 
biH
 );

	)

853 
	#MULADDC_CORE
 \

854 
s0
 = ( *
s
 << 
biH
 ) >> biH; \

855 
s1
 = ( *
s
 >> 
biH
 ); s++; \

856 
rx
 = 
s0
 * 
b1
; 
r0
 = s0 * 
b0
; \

857 
ry
 = 
s1
 * 
b0
; 
r1
 = s1 * 
b1
; \

858 
r1
 +–
rx
 >> 
biH
 ); \

859 
r1
 +–
ry
 >> 
biH
 ); \

860 
rx
 <<
biH
; 
ry
 <<= biH; \

861 
r0
 +
rx
; 
r1
 += (r0 <Ñx); \

862 
r0
 +
ry
; 
r1
 += (r0 <Ñy); \

863 
r0
 +
c
; 
r1
 += (r0 < c); \

864 
r0
 +*
d
; 
r1
 += (r0 < *d); \

865 
c
 = 
r1
; *(
d
++Ë
r0
;

	)

867 
	#MULADDC_STOP
 \

868 }

	)

	@polarssl/include/polarssl/camellia.h

27 #i‚de‡
POLARSSL_CAMELLIA_H


28 
	#POLARSSL_CAMELLIA_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~<°rög.h
>

38 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

39 
	~<ba£tsd.h
>

40 
UINT32
 
	tuöt32_t
;

42 
	~<öây≥s.h
>

45 
	#CAMELLIA_ENCRYPT
 1

	)

46 
	#CAMELLIA_DECRYPT
 0

	)

48 
	#POLARSSL_ERR_CAMELLIA_INVALID_KEY_LENGTH
 -0x0024

	)

49 
	#POLARSSL_ERR_CAMELLIA_INVALID_INPUT_LENGTH
 -0x0026

	)

51 #i‡!
deföed
(
POLARSSL_CAMELLIA_ALT
)

55 #ifde‡
__˝lu•lus


64 
ƒ
;

65 
uöt32_t
 
rk
[68];

67 
	tˇmñlü_c⁄ãxt
;

74 
ˇmñlü_öô
–
ˇmñlü_c⁄ãxt
 *
˘x
 );

81 
ˇmñlü_‰ì
–
ˇmñlü_c⁄ãxt
 *
˘x
 );

92 
ˇmñlü_£tkey_íc
–
ˇmñlü_c⁄ãxt
 *
˘x
, c⁄° *
key
,

93 
keysize
 );

104 
ˇmñlü_£tkey_dec
–
ˇmñlü_c⁄ãxt
 *
˘x
, c⁄° *
key
,

105 
keysize
 );

117 
ˇmñlü_¸y±_ecb
–
ˇmñlü_c⁄ãxt
 *
˘x
,

118 
mode
,

119 c⁄° 
öput
[16],

120 
ouçut
[16] );

122 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

138 
ˇmñlü_¸y±_cbc
–
ˇmñlü_c⁄ãxt
 *
˘x
,

139 
mode
,

140 
size_t
 
Àngth
,

141 
iv
[16],

142 c⁄° *
öput
,

143 *
ouçut
 );

146 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CFB
)

165 
ˇmñlü_¸y±_cfb128
–
ˇmñlü_c⁄ãxt
 *
˘x
,

166 
mode
,

167 
size_t
 
Àngth
,

168 
size_t
 *
iv_off
,

169 
iv
[16],

170 c⁄° *
öput
,

171 *
ouçut
 );

174 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CTR
)

197 
ˇmñlü_¸y±_˘r
–
ˇmñlü_c⁄ãxt
 *
˘x
,

198 
size_t
 
Àngth
,

199 
size_t
 *
nc_off
,

200 
n⁄˚_cou¡î
[16],

201 
°ªam_block
[16],

202 c⁄° *
öput
,

203 *
ouçut
 );

206 #ifde‡
__˝lu•lus


211 
	~"ˇmñlü_Æt.h
"

214 #ifde‡
__˝lu•lus


223 
ˇmñlü_£lf_ã°
–
vîbo£
 );

225 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/ccm.h

27 #i‚de‡
POLARSSL_CCM_H


28 
	#POLARSSL_CCM_H


	)

30 
	~"cùhî.h
"

32 
	#POLARSSL_ERR_CCM_BAD_INPUT
 -0x000D

	)

33 
	#POLARSSL_ERR_CCM_AUTH_FAILED
 -0x000F

	)

35 #ifde‡
__˝lu•lus


43 
cùhî_c⁄ãxt_t
 
cùhî_˘x
;

45 
	tccm_c⁄ãxt
;

57 
ccm_öô
–
ccm_c⁄ãxt
 *
˘x
, 
cùhî_id_t
 
cùhî
,

58 c⁄° *
key
, 
keysize
 );

65 
ccm_‰ì
–
ccm_c⁄ãxt
 *
˘x
 );

92 
ccm_í¸y±_™d_èg
–
ccm_c⁄ãxt
 *
˘x
, 
size_t
 
Àngth
,

93 c⁄° *
iv
, 
size_t
 
iv_Àn
,

94 c⁄° *
add
, 
size_t
 
add_Àn
,

95 c⁄° *
öput
, *
ouçut
,

96 *
èg
, 
size_t
 
èg_Àn
 );

115 
ccm_auth_de¸y±
–
ccm_c⁄ãxt
 *
˘x
, 
size_t
 
Àngth
,

116 c⁄° *
iv
, 
size_t
 
iv_Àn
,

117 c⁄° *
add
, 
size_t
 
add_Àn
,

118 c⁄° *
öput
, *
ouçut
,

119 c⁄° *
èg
, 
size_t
 
èg_Àn
 );

121 #i‡
deföed
(
POLARSSL_SELF_TEST
Ë&& deföed(
POLARSSL_AES_C
)

127 
ccm_£lf_ã°
–
vîbo£
 );

130 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/certs.h

27 #i‚de‡
POLARSSL_CERTS_H


28 
	#POLARSSL_CERTS_H


	)

30 #ifde‡
__˝lu•lus


35 c⁄° 
ã°_ˇ_li°
[];

41 c⁄° *
ã°_ˇ_¸t
;

42 c⁄° *
ã°_ˇ_key
;

43 c⁄° *
ã°_ˇ_pwd
;

44 c⁄° *
ã°_§v_¸t
;

45 c⁄° *
ã°_§v_key
;

46 c⁄° *
ã°_˛i_¸t
;

47 c⁄° *
ã°_˛i_key
;

49 #i‡
deföed
(
POLARSSL_ECDSA_C
)

50 c⁄° 
ã°_ˇ_¸t_ec
[];

51 c⁄° 
ã°_ˇ_key_ec
[];

52 c⁄° 
ã°_ˇ_pwd_ec
[];

53 c⁄° 
ã°_§v_¸t_ec
[];

54 c⁄° 
ã°_§v_key_ec
[];

55 c⁄° 
ã°_˛i_¸t_ec
[];

56 c⁄° 
ã°_˛i_key_ec
[];

59 #i‡
deföed
(
POLARSSL_RSA_C
)

60 c⁄° 
ã°_ˇ_¸t_rß
[];

61 c⁄° 
ã°_ˇ_key_rß
[];

62 c⁄° 
ã°_ˇ_pwd_rß
[];

63 c⁄° 
ã°_§v_¸t_rß
[];

64 c⁄° 
ã°_§v_key_rß
[];

65 c⁄° 
ã°_˛i_¸t_rß
[];

66 c⁄° 
ã°_˛i_key_rß
[];

69 #i‡
deföed
(
POLARSSL_DHM_C
)

70 c⁄° 
ã°_dhm_∑øms
[];

73 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/check_config.h

33 #i‚de‡
POLARSSL_CHECK_CONFIG_H


34 
	#POLARSSL_CHECK_CONFIG_H


	)

36 #i‡
deföed
(
POLARSSL_AESNI_C
Ë&& !deföed(
POLARSSL_HAVE_ASM
)

40 #i‡
deföed
(
POLARSSL_CERTS_C
Ë&& !deföed(
POLARSSL_PEM_PARSE_C
)

44 #i‡
deföed
(
POLARSSL_CTR_DRBG_C
Ë&& !deföed(
POLARSSL_AES_C
)

48 #i‡
deföed
(
POLARSSL_DHM_C
Ë&& !deföed(
POLARSSL_BIGNUM_C
)

52 #i‡
deföed
(
POLARSSL_ECDH_C
Ë&& !deföed(
POLARSSL_ECP_C
)

56 #i‡
deföed
(
POLARSSL_ECDSA_C
) && \

57 –!
deföed
(
POLARSSL_ECP_C
) || \

58 !
deföed
(
POLARSSL_ASN1_PARSE_C
) || \

59 !
	$deföed
(
POLARSSL_ASN1_WRITE_C
) )

63 #i‡
	`deföed
(
POLARSSL_ECDSA_DETERMINISTIC
Ë&& !deföed(
POLARSSL_HMAC_DRBG_C
)

67 #i‡
	`deföed
(
POLARSSL_ECP_C
Ë&& ( !deföed(
POLARSSL_BIGNUM_C
) || ( \

68 !
	`deföed
(
POLARSSL_ECP_DP_SECP192R1_ENABLED
) && \

69 !
	`deföed
(
POLARSSL_ECP_DP_SECP224R1_ENABLED
) && \

70 !
	`deföed
(
POLARSSL_ECP_DP_SECP256R1_ENABLED
) && \

71 !
	`deföed
(
POLARSSL_ECP_DP_SECP384R1_ENABLED
) && \

72 !
	`deföed
(
POLARSSL_ECP_DP_SECP521R1_ENABLED
) && \

73 !
	`deföed
(
POLARSSL_ECP_DP_BP256R1_ENABLED
) && \

74 !
	`deföed
(
POLARSSL_ECP_DP_BP384R1_ENABLED
) && \

75 !
	`deföed
(
POLARSSL_ECP_DP_BP512R1_ENABLED
) && \

76 !
	`deföed
(
POLARSSL_ECP_DP_SECP192K1_ENABLED
) && \

77 !
	`deföed
(
POLARSSL_ECP_DP_SECP224K1_ENABLED
) && \

78 !
	$deföed
(
POLARSSL_ECP_DP_SECP256K1_ENABLED
) ) )

82 #i‡
	`deföed
(
POLARSSL_ENTROPY_C
Ë&& (!deföed(
POLARSSL_SHA512_C
) && \

83 !
	$deföed
(
POLARSSL_SHA256_C
))

86 #i‡
	`deföed
(
POLARSSL_ENTROPY_C
Ë&& deföed(
POLARSSL_SHA512_C
) && \

87 
	`deföed
(
CTR_DRBG_ENTROPY_LEN
) && (CTR_DRBG_ENTROPY_LEN > 64)

90 #i‡
	`deföed
(
POLARSSL_ENTROPY_C
) && \

91 –!
	`deföed
(
POLARSSL_SHA512_C
Ë|| deföed(
POLARSSL_ENTROPY_FORCE_SHA256
) ) \

92 && 
	`deföed
(
CTR_DRBG_ENTROPY_LEN
) && (CTR_DRBG_ENTROPY_LEN > 32)

95 #i‡
	`deföed
(
POLARSSL_ENTROPY_C
) && \

96 
	`deföed
(
POLARSSL_ENTROPY_FORCE_SHA256
Ë&& !
	$deföed
(
POLARSSL_SHA256_C
)

100 #i‡
	`deföed
(
POLARSSL_GCM_C
) && ( \

101 !
	`deföed
(
POLARSSL_AES_C
Ë&& !
	$deföed
(
POLARSSL_CAMELLIA_C
) )

105 #i‡
	`deföed
(
POLARSSL_HAVEGE_C
Ë&& !deföed(
POLARSSL_TIMING_C
)

109 #i‡
	`deföed
(
POLARSSL_HMAC_DRBG
Ë&& !deföed(
POLARSSL_MD_C
)

113 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
) && \

114 –!
	`deföed
(
POLARSSL_ECDH_C
Ë|| !
	$deföed
(
POLARSSL_X509_CRT_PARSE_C
) )

118 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_RSA_ENABLED
) && \

119 –!
	`deföed
(
POLARSSL_ECDH_C
Ë|| !
	$deföed
(
POLARSSL_X509_CRT_PARSE_C
) )

123 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
Ë&& !deföed(
POLARSSL_DHM_C
)

127 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED
) && \

128 !
	$deföed
(
POLARSSL_ECDH_C
)

132 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
) && \

133 –!
	`deföed
(
POLARSSL_DHM_C
Ë|| !deföed(
POLARSSL_RSA_C
) || \

134 !
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
Ë|| !
	$deföed
(
POLARSSL_PKCS1_V15
) )

138 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) && \

139 –!
	`deföed
(
POLARSSL_ECDH_C
Ë|| !deföed(
POLARSSL_RSA_C
) || \

140 !
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
Ë|| !
	$deföed
(
POLARSSL_PKCS1_V15
) )

144 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
) && \

145 –!
	`deföed
(
POLARSSL_ECDH_C
Ë|| !deföed(
POLARSSL_ECDSA_C
) || \

146 !
	$deföed
(
POLARSSL_X509_CRT_PARSE_C
) )

150 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED
) && \

151 –!
	`deföed
(
POLARSSL_RSA_C
Ë|| !deföed(
POLARSSL_X509_CRT_PARSE_C
) ||\

152 !
	$deföed
(
POLARSSL_PKCS1_V15
) )

156 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_RSA_ENABLED
) && \

157 –!
	`deföed
(
POLARSSL_RSA_C
Ë|| !deföed(
POLARSSL_X509_CRT_PARSE_C
) ||\

158 !
	$deföed
(
POLARSSL_PKCS1_V15
) )

162 #i‡
	`deföed
(
POLARSSL_MEMORY_BUFFER_ALLOC_C
) && \

163 –!
	`deföed
(
POLARSSL_PLATFORM_C
Ë|| !
	$deföed
(
POLARSSL_PLATFORM_MEMORY
) )

167 #i‡
	`deföed
(
POLARSSL_PADLOCK_C
Ë&& !deföed(
POLARSSL_HAVE_ASM
)

171 #i‡
	`deföed
(
POLARSSL_PBKDF2_C
Ë&& !deföed(
POLARSSL_MD_C
)

175 #i‡
	`deföed
(
POLARSSL_PEM_PARSE_C
Ë&& !deföed(
POLARSSL_BASE64_C
)

179 #i‡
	`deföed
(
POLARSSL_PEM_WRITE_C
Ë&& !deföed(
POLARSSL_BASE64_C
)

183 #i‡
	`deföed
(
POLARSSL_PK_PARSE_C
Ë&& !deföed(
POLARSSL_PK_C
)

187 #i‡
	`deföed
(
POLARSSL_PK_WRITE_C
Ë&& !deföed(
POLARSSL_PK_C
)

191 #i‡
	`deföed
(
POLARSSL_PKCS11_C
Ë&& !deföed(
POLARSSL_PK_C
)

195 #i‡
	`deföed
(
POLARSSL_RSA_C
Ë&& ( !deföed(
POLARSSL_BIGNUM_C
) || \

196 !
	$deföed
(
POLARSSL_OID_C
) )

200 #i‡
	`deföed
(
POLARSSL_X509_RSASSA_PSS_SUPPORT
) && \

201 –!
	`deföed
(
POLARSSL_RSA_C
Ë|| !
	$deföed
(
POLARSSL_PKCS1_V21
) )

205 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
Ë&& ( !deföed(
POLARSSL_MD5_C
) || \

206 !
	$deföed
(
POLARSSL_SHA1_C
) )

210 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë&& ( !deföed(
POLARSSL_MD5_C
) || \

211 !
	$deföed
(
POLARSSL_SHA1_C
) )

215 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
Ë&& ( !deföed(
POLARSSL_MD5_C
) || \

216 !
	$deföed
(
POLARSSL_SHA1_C
) )

220 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
Ë&& ( !deföed(
POLARSSL_SHA1_C
) && \

221 !
	`deföed
(
POLARSSL_SHA256_C
Ë&& !
	$deföed
(
POLARSSL_SHA512_C
) )

225 #i‡
	`deföed
(
POLARSSL_SSL_CLI_C
Ë&& !deföed(
POLARSSL_SSL_TLS_C
)

229 #i‡
	`deföed
(
POLARSSL_SSL_TLS_C
Ë&& ( !deföed(
POLARSSL_CIPHER_C
) || \

230 !
	$deföed
(
POLARSSL_MD_C
) )

234 #i‡
	`deföed
(
POLARSSL_SSL_SRV_C
Ë&& !deföed(
POLARSSL_SSL_TLS_C
)

238 #i‡
	`deföed
(
POLARSSL_SSL_TLS_C
Ë&& (!deföed(
POLARSSL_SSL_PROTO_SSL3
) && \

239 !
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë&& !deföed(
POLARSSL_SSL_PROTO_TLS1_1
) && \

240 !
	$deföed
(
POLARSSL_SSL_PROTO_TLS1_2
))

244 #i‡
	`deföed
(
POLARSSL_SSL_TLS_C
Ë&& (deföed(
POLARSSL_SSL_PROTO_SSL3
) && \

245 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
Ë&& !
	$deföed
(
POLARSSL_SSL_PROTO_TLS1
))

249 #i‡
	`deföed
(
POLARSSL_SSL_TLS_C
Ë&& (deföed(
POLARSSL_SSL_PROTO_TLS1
) && \

250 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
Ë&& !
	$deföed
(
POLARSSL_SSL_PROTO_TLS1_1
))

254 #i‡
	`deföed
(
POLARSSL_SSL_TLS_C
Ë&& (deföed(
POLARSSL_SSL_PROTO_SSL3
) && \

255 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
Ë&& (!deföed(
POLARSSL_SSL_PROTO_TLS1
) || \

256 !
	$deföed
(
POLARSSL_SSL_PROTO_TLS1_1
)))

260 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
Ë&& deföed(
POLARSSL_SSL_TLS_C
) && \

261 –!
	`deföed
(
POLARSSL_AES_C
Ë|| !deföed(
POLARSSL_SHA256_C
) || \

262 !
	$deföed
(
POLARSSL_CIPHER_MODE_CBC
) )

266 #i‡
	`deföed
(
POLARSSL_SSL_SERVER_NAME_INDICATION
) && \

267 !
	$deföed
(
POLARSSL_X509_CRT_PARSE_C
)

271 #i‡
	`deföed
(
POLARSSL_THREADING_PTHREAD
)

272 #i‡!
	`deföed
(
POLARSSL_THREADING_C
Ë|| deföed(
POLARSSL_THREADING_IMPL
)

275 
	#POLARSSL_THREADING_IMPL


	)

278 #i‡
	`deföed
(
POLARSSL_THREADING_ALT
)

279 #i‡!
	`deföed
(
POLARSSL_THREADING_C
Ë|| deföed(
POLARSSL_THREADING_IMPL
)

282 
	#POLARSSL_THREADING_IMPL


	)

285 #i‡
	`deföed
(
POLARSSL_THREADING_C
Ë&& !deföed(
POLARSSL_THREADING_IMPL
)

288 #unde‡
POLARSSL_THREADING_IMPL


290 #i‡
	`deföed
(
POLARSSL_VERSION_FEATURES
Ë&& !deföed(
POLARSSL_VERSION_C
)

294 #i‡
	`deföed
(
POLARSSL_X509_USE_C
Ë&& ( !deföed(
POLARSSL_BIGNUM_C
) || \

295 !
	`deföed
(
POLARSSL_OID_C
Ë|| !deföed(
POLARSSL_ASN1_PARSE_C
) || \

296 !
	$deföed
(
POLARSSL_PK_PARSE_C
) )

300 #i‡
	`deföed
(
POLARSSL_X509_CREATE_C
Ë&& ( !deföed(
POLARSSL_BIGNUM_C
) || \

301 !
	`deföed
(
POLARSSL_OID_C
Ë|| !deföed(
POLARSSL_ASN1_WRITE_C
) || \

302 !
	$deföed
(
POLARSSL_PK_WRITE_C
) )

306 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
Ë&& ( !deföed(
POLARSSL_X509_USE_C
) )

310 #i‡
	`deföed
(
POLARSSL_X509_CRL_PARSE_C
Ë&& ( !deföed(
POLARSSL_X509_USE_C
) )

314 #i‡
	`deföed
(
POLARSSL_X509_CSR_PARSE_C
Ë&& ( !deföed(
POLARSSL_X509_USE_C
) )

318 #i‡
	`deföed
(
POLARSSL_X509_CRT_WRITE_C
Ë&& ( !deföed(
POLARSSL_X509_CREATE_C
) )

322 #i‡
	`deföed
(
POLARSSL_X509_CSR_WRITE_C
Ë&& ( !deföed(
POLARSSL_X509_CREATE_C
) )

	@polarssl/include/polarssl/cipher.h

30 #i‚de‡
POLARSSL_CIPHER_H


31 
	#POLARSSL_CIPHER_H


	)

33 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

34 
	~"c⁄fig.h
"

36 #ö˛udê
POLARSSL_CONFIG_FILE


39 #i‡
deföed
(
POLARSSL_GCM_C
Ë|| deföed(
POLARSSL_CCM_C
)

40 
	#POLARSSL_CIPHER_MODE_AEAD


	)

43 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

44 
	#POLARSSL_CIPHER_MODE_WITH_PADDING


	)

47 
	~<°rög.h
>

49 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
ölöe
)

50 
	#ölöe
 
_ölöe


	)

52 #i‡
deföed
(
__ARMCC_VERSION
Ë&& !deföed(
ölöe
)

53 
	#ölöe
 
__ölöe


	)

57 
	#POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE
 -0x6080

	)

58 
	#POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 -0x6100

	)

59 
	#POLARSSL_ERR_CIPHER_ALLOC_FAILED
 -0x6180

	)

60 
	#POLARSSL_ERR_CIPHER_INVALID_PADDING
 -0x6200

	)

61 
	#POLARSSL_ERR_CIPHER_FULL_BLOCK_EXPECTED
 -0x6280

	)

62 
	#POLARSSL_ERR_CIPHER_AUTH_FAILED
 -0x6300

	)

64 
	#POLARSSL_CIPHER_VARIABLE_IV_LEN
 0x01

	)

65 
	#POLARSSL_CIPHER_VARIABLE_KEY_LEN
 0x02

	)

67 #ifde‡
__˝lu•lus


72 
POLARSSL_CIPHER_ID_NONE
 = 0,

73 
POLARSSL_CIPHER_ID_NULL
,

74 
POLARSSL_CIPHER_ID_AES
,

75 
POLARSSL_CIPHER_ID_DES
,

76 
POLARSSL_CIPHER_ID_3DES
,

77 
POLARSSL_CIPHER_ID_CAMELLIA
,

78 
POLARSSL_CIPHER_ID_BLOWFISH
,

79 
POLARSSL_CIPHER_ID_ARC4
,

80 } 
	tcùhî_id_t
;

83 
POLARSSL_CIPHER_NONE
 = 0,

84 
POLARSSL_CIPHER_NULL
,

85 
POLARSSL_CIPHER_AES_128_ECB
,

86 
POLARSSL_CIPHER_AES_192_ECB
,

87 
POLARSSL_CIPHER_AES_256_ECB
,

88 
POLARSSL_CIPHER_AES_128_CBC
,

89 
POLARSSL_CIPHER_AES_192_CBC
,

90 
POLARSSL_CIPHER_AES_256_CBC
,

91 
POLARSSL_CIPHER_AES_128_CFB128
,

92 
POLARSSL_CIPHER_AES_192_CFB128
,

93 
POLARSSL_CIPHER_AES_256_CFB128
,

94 
POLARSSL_CIPHER_AES_128_CTR
,

95 
POLARSSL_CIPHER_AES_192_CTR
,

96 
POLARSSL_CIPHER_AES_256_CTR
,

97 
POLARSSL_CIPHER_AES_128_GCM
,

98 
POLARSSL_CIPHER_AES_192_GCM
,

99 
POLARSSL_CIPHER_AES_256_GCM
,

100 
POLARSSL_CIPHER_CAMELLIA_128_ECB
,

101 
POLARSSL_CIPHER_CAMELLIA_192_ECB
,

102 
POLARSSL_CIPHER_CAMELLIA_256_ECB
,

103 
POLARSSL_CIPHER_CAMELLIA_128_CBC
,

104 
POLARSSL_CIPHER_CAMELLIA_192_CBC
,

105 
POLARSSL_CIPHER_CAMELLIA_256_CBC
,

106 
POLARSSL_CIPHER_CAMELLIA_128_CFB128
,

107 
POLARSSL_CIPHER_CAMELLIA_192_CFB128
,

108 
POLARSSL_CIPHER_CAMELLIA_256_CFB128
,

109 
POLARSSL_CIPHER_CAMELLIA_128_CTR
,

110 
POLARSSL_CIPHER_CAMELLIA_192_CTR
,

111 
POLARSSL_CIPHER_CAMELLIA_256_CTR
,

112 
POLARSSL_CIPHER_CAMELLIA_128_GCM
,

113 
POLARSSL_CIPHER_CAMELLIA_192_GCM
,

114 
POLARSSL_CIPHER_CAMELLIA_256_GCM
,

115 
POLARSSL_CIPHER_DES_ECB
,

116 
POLARSSL_CIPHER_DES_CBC
,

117 
POLARSSL_CIPHER_DES_EDE_ECB
,

118 
POLARSSL_CIPHER_DES_EDE_CBC
,

119 
POLARSSL_CIPHER_DES_EDE3_ECB
,

120 
POLARSSL_CIPHER_DES_EDE3_CBC
,

121 
POLARSSL_CIPHER_BLOWFISH_ECB
,

122 
POLARSSL_CIPHER_BLOWFISH_CBC
,

123 
POLARSSL_CIPHER_BLOWFISH_CFB64
,

124 
POLARSSL_CIPHER_BLOWFISH_CTR
,

125 
POLARSSL_CIPHER_ARC4_128
,

126 
POLARSSL_CIPHER_AES_128_CCM
,

127 
POLARSSL_CIPHER_AES_192_CCM
,

128 
POLARSSL_CIPHER_AES_256_CCM
,

129 
POLARSSL_CIPHER_CAMELLIA_128_CCM
,

130 
POLARSSL_CIPHER_CAMELLIA_192_CCM
,

131 
POLARSSL_CIPHER_CAMELLIA_256_CCM
,

132 } 
	tcùhî_ty≥_t
;

135 
POLARSSL_MODE_NONE
 = 0,

136 
POLARSSL_MODE_ECB
,

137 
POLARSSL_MODE_CBC
,

138 
POLARSSL_MODE_CFB
,

139 
POLARSSL_MODE_OFB
,

140 
POLARSSL_MODE_CTR
,

141 
POLARSSL_MODE_GCM
,

142 
POLARSSL_MODE_STREAM
,

143 
POLARSSL_MODE_CCM
,

144 } 
	tcùhî_mode_t
;

147 
POLARSSL_PADDING_PKCS7
 = 0,

148 
POLARSSL_PADDING_ONE_AND_ZEROS
,

149 
POLARSSL_PADDING_ZEROS_AND_LEN
,

150 
POLARSSL_PADDING_ZEROS
,

151 
POLARSSL_PADDING_NONE
,

152 } 
	tcùhî_∑ddög_t
;

155 
POLARSSL_OPERATION_NONE
 = -1,

156 
POLARSSL_DECRYPT
 = 0,

157 
POLARSSL_ENCRYPT
,

158 } 
	t›î©i⁄_t
;

162 
POLARSSL_KEY_LENGTH_NONE
 = 0,

164 
POLARSSL_KEY_LENGTH_DES
 = 64,

166 
POLARSSL_KEY_LENGTH_DES_EDE
 = 128,

168 
POLARSSL_KEY_LENGTH_DES_EDE3
 = 192,

172 
	#POLARSSL_MAX_IV_LENGTH
 16

	)

174 
	#POLARSSL_MAX_BLOCK_LENGTH
 16

	)

182 
cùhî_id_t
 
cùhî
;

185 (*
ecb_func
)–*
˘x
, 
›î©i⁄_t
 
mode
,

186 c⁄° *
öput
, *
ouçut
 );

189 (*
cbc_func
)–*
˘x
, 
›î©i⁄_t
 
mode
, 
size_t
 
Àngth
,

190 *
iv
, c⁄° *
öput
,

191 *
ouçut
 );

194 (*
cfb_func
)–*
˘x
, 
›î©i⁄_t
 
mode
, 
size_t
 
Àngth
, size_à*
iv_off
,

195 *
iv
, c⁄° *
öput
,

196 *
ouçut
 );

199 (*
˘r_func
)–*
˘x
, 
size_t
 
Àngth
, size_à*
nc_off
,

200 *
n⁄˚_cou¡î
, *
°ªam_block
,

201 c⁄° *
öput
, *
ouçut
 );

204 (*
°ªam_func
)–*
˘x
, 
size_t
 
Àngth
,

205 c⁄° *
öput
, *
ouçut
 );

208 (*
£tkey_íc_func
)–*
˘x
, c⁄° *
key
,

209 
key_Àngth
 );

212 (*
£tkey_dec_func
)–*
˘x
, c⁄° *
key
,

213 
key_Àngth
);

216 * (*
˘x_Æloc_func
)( );

219 (*
˘x_‰ì_func
)–*
˘x
 );

221 } 
	tcùhî_ba£_t
;

228 
cùhî_ty≥_t
 
ty≥
;

231 
cùhî_mode_t
 
mode
;

235 
key_Àngth
;

238 c⁄° * 
«me
;

242 
iv_size
;

245 
Êags
;

248 
block_size
;

251 c⁄° 
cùhî_ba£_t
 *
ba£
;

253 } 
	tcùhî_öfo_t
;

260 c⁄° 
cùhî_öfo_t
 *
cùhî_öfo
;

263 
key_Àngth
;

266 
›î©i⁄_t
 
›î©i⁄
;

269 (*
add_∑ddög
)–*
ouçut
, 
size_t
 
ﬁí
, size_à
d©a_Àn
 );

270 (*
gë_∑ddög
)–*
öput
, 
size_t
 
ûí
, size_à*
d©a_Àn
 );

273 
u≈ro˚s£d_d©a
[
POLARSSL_MAX_BLOCK_LENGTH
];

276 
size_t
 
u≈ro˚s£d_Àn
;

279 
iv
[
POLARSSL_MAX_IV_LENGTH
];

282 
size_t
 
iv_size
;

285 *
cùhî_˘x
;

286 } 
	tcùhî_c⁄ãxt_t
;

294 c⁄° *
cùhî_li°
( );

305 c⁄° 
cùhî_öfo_t
 *
cùhî_öfo_‰om_°rög
–c⁄° *
cùhî_«me
 );

316 c⁄° 
cùhî_öfo_t
 *
cùhî_öfo_‰om_ty≥
–c⁄° 
cùhî_ty≥_t
 
cùhî_ty≥
 );

330 c⁄° 
cùhî_öfo_t
 *
cùhî_öfo_‰om_vÆues
–c⁄° 
cùhî_id_t
 
cùhî_id
,

331 
key_Àngth
,

332 c⁄° 
cùhî_mode_t
 
mode
 );

337 
cùhî_öô
–
cùhî_c⁄ãxt_t
 *
˘x
 );

344 
cùhî_‰ì
–
cùhî_c⁄ãxt_t
 *
˘x
 );

362 
cùhî_öô_˘x
–
cùhî_c⁄ãxt_t
 *
˘x
, c⁄° 
cùhî_öfo_t
 *
cùhî_öfo
 );

374 
cùhî_‰ì_˘x
–
cùhî_c⁄ãxt_t
 *
˘x
 );

384 
ölöe
 
cùhî_gë_block_size
–c⁄° 
cùhî_c⁄ãxt_t
 *
˘x
 )

386 if–
NULL
 =
˘x
 || NULL =˘x->
cùhî_öfo
 )

389  
˘x
->
cùhî_öfo
->
block_size
;

401 
ölöe
 
cùhî_mode_t
 
cùhî_gë_cùhî_mode
–c⁄° 
cùhî_c⁄ãxt_t
 *
˘x
 )

403 if–
NULL
 =
˘x
 || NULL =˘x->
cùhî_öfo
 )

404  
POLARSSL_MODE_NONE
;

406  
˘x
->
cùhî_öfo
->
mode
;

418 
ölöe
 
cùhî_gë_iv_size
–c⁄° 
cùhî_c⁄ãxt_t
 *
˘x
 )

420 if–
NULL
 =
˘x
 || NULL =˘x->
cùhî_öfo
 )

423 if–
˘x
->
iv_size
 != 0 )

424  (Ë
˘x
->
iv_size
;

426  
˘x
->
cùhî_öfo
->
iv_size
;

437 
ölöe
 
cùhî_ty≥_t
 
cùhî_gë_ty≥
–c⁄° 
cùhî_c⁄ãxt_t
 *
˘x
 )

439 if–
NULL
 =
˘x
 || NULL =˘x->
cùhî_öfo
 )

440  
POLARSSL_CIPHER_NONE
;

442  
˘x
->
cùhî_öfo
->
ty≥
;

452 
ölöe
 c⁄° *
cùhî_gë_«me
–c⁄° 
cùhî_c⁄ãxt_t
 *
˘x
 )

454 if–
NULL
 =
˘x
 || NULL =˘x->
cùhî_öfo
 )

457  
˘x
->
cùhî_öfo
->
«me
;

469 
ölöe
 
cùhî_gë_key_size
 ( c⁄° 
cùhî_c⁄ãxt_t
 *
˘x
 )

471 if–
NULL
 =
˘x
 || NULL =˘x->
cùhî_öfo
 )

472  
POLARSSL_KEY_LENGTH_NONE
;

474  
˘x
->
cùhî_öfo
->
key_Àngth
;

486 
ölöe
 
›î©i⁄_t
 
cùhî_gë_›î©i⁄
–c⁄° 
cùhî_c⁄ãxt_t
 *
˘x
 )

488 if–
NULL
 =
˘x
 || NULL =˘x->
cùhî_öfo
 )

489  
POLARSSL_OPERATION_NONE
;

491  
˘x
->
›î©i⁄
;

509 
cùhî_£tkey
–
cùhî_c⁄ãxt_t
 *
˘x
, c⁄° *
key
,

510 
key_Àngth
, c⁄° 
›î©i⁄_t
 
›î©i⁄
 );

512 #i‡
deföed
(
POLARSSL_CIPHER_MODE_WITH_PADDING
)

525 
cùhî_£t_∑ddög_mode
–
cùhî_c⁄ãxt_t
 *
˘x
, 
cùhî_∑ddög_t
 
mode
 );

541 
cùhî_£t_iv
–
cùhî_c⁄ãxt_t
 *
˘x
,

542 c⁄° *
iv
, 
size_t
 
iv_Àn
 );

552 
cùhî_ª£t
–
cùhî_c⁄ãxt_t
 *
˘x
 );

554 #i‡
deföed
(
POLARSSL_GCM_C
)

566 
cùhî_upd©e_ad
–
cùhî_c⁄ãxt_t
 *
˘x
,

567 c⁄° *
ad
, 
size_t
 
ad_Àn
 );

599 
cùhî_upd©e
–
cùhî_c⁄ãxt_t
 *
˘x
, c⁄° *
öput
,

600 
size_t
 
ûí
, *
ouçut
, size_à*
ﬁí
 );

619 
cùhî_föish
–
cùhî_c⁄ãxt_t
 *
˘x
,

620 *
ouçut
, 
size_t
 *
ﬁí
 );

622 #i‡
deföed
(
POLARSSL_GCM_C
)

634 
cùhî_wrôe_èg
–
cùhî_c⁄ãxt_t
 *
˘x
,

635 *
èg
, 
size_t
 
èg_Àn
 );

648 
cùhî_check_èg
–
cùhî_c⁄ãxt_t
 *
˘x
,

649 c⁄° *
èg
, 
size_t
 
èg_Àn
 );

679 
cùhî_¸y±
–
cùhî_c⁄ãxt_t
 *
˘x
,

680 c⁄° *
iv
, 
size_t
 
iv_Àn
,

681 c⁄° *
öput
, 
size_t
 
ûí
,

682 *
ouçut
, 
size_t
 *
ﬁí
 );

684 #i‡
deföed
(
POLARSSL_CIPHER_MODE_AEAD
)

707 
cùhî_auth_í¸y±
–
cùhî_c⁄ãxt_t
 *
˘x
,

708 c⁄° *
iv
, 
size_t
 
iv_Àn
,

709 c⁄° *
ad
, 
size_t
 
ad_Àn
,

710 c⁄° *
öput
, 
size_t
 
ûí
,

711 *
ouçut
, 
size_t
 *
ﬁí
,

712 *
èg
, 
size_t
 
èg_Àn
 );

741 
cùhî_auth_de¸y±
–
cùhî_c⁄ãxt_t
 *
˘x
,

742 c⁄° *
iv
, 
size_t
 
iv_Àn
,

743 c⁄° *
ad
, 
size_t
 
ad_Àn
,

744 c⁄° *
öput
, 
size_t
 
ûí
,

745 *
ouçut
, 
size_t
 *
ﬁí
,

746 c⁄° *
èg
, 
size_t
 
èg_Àn
 );

754 
cùhî_£lf_ã°
–
vîbo£
 );

756 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/cipher_wrap.h

29 #i‚de‡
POLARSSL_CIPHER_WRAP_H


30 
	#POLARSSL_CIPHER_WRAP_H


	)

32 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

33 
	~"c⁄fig.h
"

35 #ö˛udê
POLARSSL_CONFIG_FILE


37 
	~"cùhî.h
"

39 #ifde‡
__˝lu•lus


45 
cùhî_ty≥_t
 
ty≥
;

46 c⁄° 
cùhî_öfo_t
 *
öfo
;

47 } 
	tcùhî_deföôi⁄_t
;

49 c⁄° 
cùhî_deföôi⁄_t
 
cùhî_deföôi⁄s
[];

51 
suµ‹ãd_cùhîs
[];

53 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/compat-1.2.h

27 #i‚de‡
POLARSSL_COMPAT_1_2_H


28 
	#POLARSSL_COMPAT_1_2_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


37 
	#SHOW_PROTOTYPE_CHANGE_WARNINGS


	)

39 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
ölöe
)

40 
	#ölöe
 
_ölöe


	)

42 #i‡
deföed
(
__ARMCC_VERSION
Ë&& !deföed(
ölöe
)

43 
	#ölöe
 
__ölöe


	)

47 #i‡
deföed
(
_MSC_VER
)

49 #unde‡
SHOW_PROTOTYPE_CHANGE_WARNINGS


52 #i‡
deföed
(
SHOW_PROTOTYPE_CHANGE_WARNINGS
)

56 #i‡
deföed
(
POLARSSL_SHA256_C
)

57 
	#POLARSSL_SHA2_C


	)

58 
	~"sha256.h
"

63 
sha256_c⁄ãxt
 
	tsha2_c⁄ãxt
;

65 
ölöe
 
	$sha2_°¨ts
–
sha256_c⁄ãxt
 *
˘x
, 
is224
 ) {

66 
	`sha256_°¨ts
–
˘x
, 
is224
 );

67 
	}
}

68 
ölöe
 
	$sha2_upd©e
–
sha256_c⁄ãxt
 *
˘x
, c⁄° *
öput
,

69 
size_t
 
ûí
 ) {

70 
	`sha256_upd©e
–
˘x
, 
öput
, 
ûí
 );

71 
	}
}

72 
ölöe
 
	$sha2_föish
–
sha256_c⁄ãxt
 *
˘x
, 
ouçut
[32] ) {

73 
	`sha256_föish
–
˘x
, 
ouçut
 );

74 
	}
}

75 
ölöe
 
	$sha2_fûe
–c⁄° *
∑th
, 
ouçut
[32], 
is224
 ) {

76  
	`sha256_fûe
–
∑th
, 
ouçut
, 
is224
 );

77 
	}
}

78 
ölöe
 
	$sha2
–c⁄° *
öput
, 
size_t
 
ûí
,

79 
ouçut
[32], 
is224
 ) {

80 
	`sha256
–
öput
, 
ûí
, 
ouçut
, 
is224
 );

81 
	}
}

82 
ölöe
 
	$sha2_hmac_°¨ts
–
sha256_c⁄ãxt
 *
˘x
, c⁄° *
key
,

83 
size_t
 
keyÀn
, 
is224
 ) {

84 
	`sha256_hmac_°¨ts
–
˘x
, 
key
, 
keyÀn
, 
is224
 );

85 
	}
}

86 
ölöe
 
	$sha2_hmac_upd©e
–
sha256_c⁄ãxt
 *
˘x
, c⁄° *
öput
, 
size_t
 
ûí
 ) {

87 
	`sha256_hmac_upd©e
–
˘x
, 
öput
, 
ûí
 );

88 
	}
}

89 
ölöe
 
	$sha2_hmac_föish
–
sha256_c⁄ãxt
 *
˘x
, 
ouçut
[32] ) {

90 
	`sha256_hmac_föish
–
˘x
, 
ouçut
 );

91 
	}
}

92 
ölöe
 
	$sha2_hmac_ª£t
–
sha256_c⁄ãxt
 *
˘x
 ) {

93 
	`sha256_hmac_ª£t
–
˘x
 );

94 
	}
}

95 
ölöe
 
	$sha2_hmac
–c⁄° *
key
, 
size_t
 
keyÀn
,

96 c⁄° *
öput
, 
size_t
 
ûí
,

97 
ouçut
[32], 
is224
 ) {

98 
	`sha256_hmac
–
key
, 
keyÀn
, 
öput
, 
ûí
, 
ouçut
, 
is224
 );

99 
	}
}

100 
ölöe
 
	$sha2_£lf_ã°
–
vîbo£
 ) {

101  
	`sha256_£lf_ã°
–
vîbo£
 );

102 
	}
}

105 #i‡
deföed
(
POLARSSL_SHA512_C
)

106 
	#POLARSSL_SHA4_C


	)

107 
	~"sha512.h
"

112 
sha512_c⁄ãxt
 
	tsha4_c⁄ãxt
;

114 
ölöe
 
	$sha4_°¨ts
–
sha512_c⁄ãxt
 *
˘x
, 
is384
 ) {

115 
	`sha512_°¨ts
–
˘x
, 
is384
 );

116 
	}
}

117 
ölöe
 
	$sha4_upd©e
–
sha512_c⁄ãxt
 *
˘x
, c⁄° *
öput
,

118 
size_t
 
ûí
 ) {

119 
	`sha512_upd©e
–
˘x
, 
öput
, 
ûí
 );

120 
	}
}

121 
ölöe
 
	$sha4_föish
–
sha512_c⁄ãxt
 *
˘x
, 
ouçut
[64] ) {

122 
	`sha512_föish
–
˘x
, 
ouçut
 );

123 
	}
}

124 
ölöe
 
	$sha4_fûe
–c⁄° *
∑th
, 
ouçut
[64], 
is384
 ) {

125  
	`sha512_fûe
–
∑th
, 
ouçut
, 
is384
 );

126 
	}
}

127 
ölöe
 
	$sha4
–c⁄° *
öput
, 
size_t
 
ûí
,

128 
ouçut
[32], 
is384
 ) {

129 
	`sha512
–
öput
, 
ûí
, 
ouçut
, 
is384
 );

130 
	}
}

131 
ölöe
 
	$sha4_hmac_°¨ts
–
sha512_c⁄ãxt
 *
˘x
, c⁄° *
key
,

132 
size_t
 
keyÀn
, 
is384
 ) {

133 
	`sha512_hmac_°¨ts
–
˘x
, 
key
, 
keyÀn
, 
is384
 );

134 
	}
}

135 
ölöe
 
	$sha4_hmac_upd©e
–
sha512_c⁄ãxt
 *
˘x
, c⁄° *
öput
, 
size_t
 
ûí
 ) {

136 
	`sha512_hmac_upd©e
–
˘x
, 
öput
, 
ûí
 );

137 
	}
}

138 
ölöe
 
	$sha4_hmac_föish
–
sha512_c⁄ãxt
 *
˘x
, 
ouçut
[64] ) {

139 
	`sha512_hmac_föish
–
˘x
, 
ouçut
 );

140 
	}
}

141 
ölöe
 
	$sha4_hmac_ª£t
–
sha512_c⁄ãxt
 *
˘x
 ) {

142 
	`sha512_hmac_ª£t
–
˘x
 );

143 
	}
}

144 
ölöe
 
	$sha4_hmac
–c⁄° *
key
, 
size_t
 
keyÀn
,

145 c⁄° *
öput
, 
size_t
 
ûí
,

146 
ouçut
[64], 
is384
 ) {

147 
	`sha512_hmac
–
key
, 
keyÀn
, 
öput
, 
ûí
, 
ouçut
, 
is384
 );

148 
	}
}

149 
ölöe
 
	$sha4_£lf_ã°
–
vîbo£
 ) {

150  
	`sha512_£lf_ã°
–
vîbo£
 );

151 
	}
}

154 #i‡
deföed
(
POLARSSL_CIPHER_C
)

155 #i‡
deföed
(
SHOW_PROTOTYPE_CHANGE_WARNINGS
)

160 #i‡
deföed
(
POLARSSL_RSA_C
)

161 
	#SIG_RSA_RAW
 
POLARSSL_MD_NONE


	)

162 
	#SIG_RSA_MD2
 
POLARSSL_MD_MD2


	)

163 
	#SIG_RSA_MD4
 
POLARSSL_MD_MD4


	)

164 
	#SIG_RSA_MD5
 
POLARSSL_MD_MD5


	)

165 
	#SIG_RSA_SHA1
 
POLARSSL_MD_SHA1


	)

166 
	#SIG_RSA_SHA224
 
POLARSSL_MD_SHA224


	)

167 
	#SIG_RSA_SHA256
 
POLARSSL_MD_SHA256


	)

168 
	#SIG_RSA_SHA384
 
POLARSSL_MD_SHA384


	)

169 
	#SIG_RSA_SHA512
 
POLARSSL_MD_SHA512


	)

170 #i‡
deföed
(
SHOW_PROTOTYPE_CHANGE_WARNINGS
)

176 #i‡
deföed
(
POLARSSL_DHM_C
)

177 #i‡
deföed
(
SHOW_PROTOTYPE_CHANGE_WARNINGS
)

182 #i‡
deföed
(
POLARSSL_GCM_C
)

183 #i‡
deföed
(
SHOW_PROTOTYPE_CHANGE_WARNINGS
)

188 #i‡
deföed
(
POLARSSL_SSL_CLI_C
)

189 #i‡
deföed
(
SHOW_PROTOTYPE_CHANGE_WARNINGS
)

194 #i‡
deföed
(
POLARSSL_X509_USE_C
Ë|| deföed(
POLARSSL_X509_CREATE_C
)

195 
	~"x509.h
"

197 
	#POLARSSL_ERR_X509_CERT_INVALID_FORMAT
 
POLARSSL_ERR_X509_INVALID_FORMAT


	)

198 
	#POLARSSL_ERR_X509_CERT_INVALID_VERSION
 
POLARSSL_ERR_X509_INVALID_VERSION


	)

199 
	#POLARSSL_ERR_X509_CERT_INVALID_ALG
 
POLARSSL_ERR_X509_INVALID_ALG


	)

200 
	#POLARSSL_ERR_X509_CERT_UNKNOWN_SIG_ALG
 
POLARSSL_ERR_X509_UNKNOWN_SIG_ALG


	)

201 
	#POLARSSL_ERR_X509_CERT_INVALID_NAME
 
POLARSSL_ERR_X509_INVALID_NAME


	)

202 
	#POLARSSL_ERR_X509_CERT_INVALID_DATE
 
POLARSSL_ERR_X509_INVALID_DATE


	)

203 
	#POLARSSL_ERR_X509_CERT_INVALID_EXTENSIONS
 
POLARSSL_ERR_X509_INVALID_EXTENSIONS


	)

204 
	#POLARSSL_ERR_X509_CERT_SIG_MISMATCH
 
POLARSSL_ERR_X509_SIG_MISMATCH


	)

205 
	#POLARSSL_ERR_X509_CERT_INVALID_SIGNATURE
 
POLARSSL_ERR_X509_INVALID_SIGNATURE


	)

206 
	#POLARSSL_ERR_X509_CERT_INVALID_SERIAL
 
POLARSSL_ERR_X509_INVALID_SERIAL


	)

207 
	#POLARSSL_ERR_X509_CERT_UNKNOWN_VERSION
 
POLARSSL_ERR_X509_UNKNOWN_VERSION


	)

209 
ölöe
 
	$x509∑r£_£rül_gës
–*
buf
, 
size_t
 
size
, c⁄° 
x509_buf
 *
£rül
 ) {

210  
	`x509_£rül_gës
–
buf
, 
size
, 
£rül
 );

211 
	}
}

212 
ölöe
 
	$x509∑r£_dn_gës
–*
buf
, 
size_t
 
size
, c⁄° 
x509_«me
 *
dn
 ) {

213  
	`x509_dn_gës
–
buf
, 
size
, 
dn
 );

214 
	}
}

215 
ölöe
 
	$x509∑r£_time_expúed
–c⁄° 
x509_time
 *
time
 ) {

216  
	`x509_time_expúed
–
time
 );

217 
	}
}

220 #i‡
deföed
(
POLARSSL_X509_CRT_PARSE_C
)

221 
	#POLARSSL_X509_PARSE_C


	)

222 
	~"x509_¸t.h
"

223 
x509_¸t
 
	tx509_˚π
;

225 
ölöe
 
	$x509∑r£_¸t_dî
–
x509_˚π
 *
chaö
, c⁄° *
buf
,

226 
size_t
 
buÊí
 ) {

227  
	`x509_¸t_∑r£_dî
–
chaö
, 
buf
, 
buÊí
 );

228 
	}
}

229 
ölöe
 
	$x509∑r£_¸t
–
x509_˚π
 *
chaö
, c⁄° *
buf
, 
size_t
 
buÊí
 ) {

230  
	`x509_¸t_∑r£
–
chaö
, 
buf
, 
buÊí
 );

231 
	}
}

232 
ölöe
 
	$x509∑r£_¸tfûe
–
x509_˚π
 *
chaö
, c⁄° *
∑th
 ) {

233  
	`x509_¸t_∑r£_fûe
–
chaö
, 
∑th
 );

234 
	}
}

235 
ölöe
 
	$x509∑r£_¸ç©h
–
x509_˚π
 *
chaö
, c⁄° *
∑th
 ) {

236  
	`x509_¸t_∑r£_∑th
–
chaö
, 
∑th
 );

237 
	}
}

238 
ölöe
 
	$x509∑r£_˚π_öfo
–*
buf
, 
size_t
 
size
, c⁄° *
¥efix
,

239 c⁄° 
x509_˚π
 *
¸t
 ) {

240  
	`x509_¸t_öfo
–
buf
, 
size
, 
¥efix
, 
¸t
 );

241 
	}
}

242 
ölöe
 
x509∑r£_vîify
–
x509_˚π
 *
¸t
, x509_˚π *
åu°_ˇ
,

243 
x509_¸l
 *
ˇ_¸l
, c⁄° *
˙
, *
Êags
,

244 (*
f_vrfy
)(*, 
x509_˚π
 *, , *),

245 *
p_vrfy
 ) {

246  
	`x509_¸t_vîify
–
¸t
, 
åu°_ˇ
, 
ˇ_¸l
, 
˙
, 
Êags
, 
f_vrfy
, 
p_vrfy
 );

247 
	}
}

248 
ölöe
 
	$x509∑r£_ªvoked
–c⁄° 
x509_˚π
 *
¸t
, c⁄° 
x509_¸l
 *
¸l
 ) {

249  
	`x509_¸t_ªvoked
–
¸t
, 
¸l
 );

250 
	}
}

251 
ölöe
 
	$x509_‰ì
–
x509_˚π
 *
¸t
 ) {

252 
	`x509_¸t_‰ì
–
¸t
 );

253 
	}
}

256 #i‡
deföed
(
POLARSSL_X509_CRL_PARSE_C
)

257 
	#POLARSSL_X509_PARSE_C


	)

258 
	~"x509_¸l.h
"

259 
ölöe
 
	$x509∑r£_¸l
–
x509_¸l
 *
chaö
, c⁄° *
buf
, 
size_t
 
buÊí
 ) {

260  
	`x509_¸l_∑r£
–
chaö
, 
buf
, 
buÊí
 );

261 
	}
}

262 
ölöe
 
	$x509∑r£_¸lfûe
–
x509_¸l
 *
chaö
, c⁄° *
∑th
 ) {

263  
	`x509_¸l_∑r£_fûe
–
chaö
, 
∑th
 );

264 
	}
}

265 
ölöe
 
	$x509∑r£_¸l_öfo
–*
buf
, 
size_t
 
size
, c⁄° *
¥efix
,

266 c⁄° 
x509_¸l
 *
¸l
 ) {

267  
	`x509_¸l_öfo
–
buf
, 
size
, 
¥efix
, 
¸l
 );

268 
	}
}

271 #i‡
deföed
(
POLARSSL_X509_CSR_PARSE_C
)

272 
	#POLARSSL_X509_PARSE_C


	)

273 
	~"x509_c§.h
"

274 
ölöe
 
	$x509∑r£_c§
–
x509_c§
 *
c§
, c⁄° *
buf
, 
size_t
 
buÊí
 ) {

275  
	`x509_c§_∑r£
–
c§
, 
buf
, 
buÊí
 );

276 
	}
}

277 
ölöe
 
	$x509∑r£_c§fûe
–
x509_c§
 *
c§
, c⁄° *
∑th
 ) {

278  
	`x509_c§_∑r£_fûe
–
c§
, 
∑th
 );

279 
	}
}

280 
ölöe
 
	$x509∑r£_c§_öfo
–*
buf
, 
size_t
 
size
, c⁄° *
¥efix
,

281 c⁄° 
x509_c§
 *
c§
 ) {

282  
	`x509_c§_öfo
–
buf
, 
size
, 
¥efix
, 
c§
 );

283 
	}
}

286 #i‡
deföed
(
POLARSSL_SSL_TLS_C
)

287 
	~"s¶_cùhîsuôes.h
"

289 
	#s¶_deÁu…_cùhîsuôes
 
	`s¶_li°_cùhîsuôes
()

	)

292 #i‡
deföed
(
POLARSSL_PK_PARSE_C
Ë&& deföed(
POLARSSL_RSA_C
)

293 
	~"rß.h
"

294 
	~"pk.h
"

296 
	#POLARSSL_ERR_X509_PASSWORD_MISMATCH
 
POLARSSL_ERR_PK_PASSWORD_MISMATCH


	)

297 
	#POLARSSL_ERR_X509_KEY_INVALID_FORMAT
 
POLARSSL_ERR_PK_KEY_INVALID_FORMAT


	)

298 
	#POLARSSL_ERR_X509_UNKNOWN_PK_ALG
 
POLARSSL_ERR_PK_UNKNOWN_PK_ALG


	)

299 
	#POLARSSL_ERR_X509_CERT_INVALID_PUBKEY
 
POLARSSL_ERR_PK_INVALID_PUBKEY


	)

301 #i‡
deföed
(
POLARSSL_FS_IO
)

302 
ölöe
 
	$x509∑r£_keyfûe
–
rß_c⁄ãxt
 *
rß
, c⁄° *
∑th
,

303 c⁄° *
pwd
 ) {

304 
ªt
;

305 
pk_c⁄ãxt
 
pk
;

306 
	`pk_öô
–&
pk
 );

307 
ªt
 = 
	`pk_∑r£_keyfûe
–&
pk
, 
∑th
, 
pwd
 );

308 if–
ªt
 =0 && ! 
	`pk_ˇn_do
–&
pk
, 
POLARSSL_PK_RSA
 ) )

309 
ªt
 = 
POLARSSL_ERR_PK_TYPE_MISMATCH
;

310 if–
ªt
 == 0 )

311 
	`rß_c›y
–
rß
, 
	`pk_rß
–
pk
 ) );

313 
	`rß_‰ì
–
rß
 );

314 
	`pk_‰ì
–&
pk
 );

315 –
ªt
 );

316 
	}
}

317 
ölöe
 
	$x509∑r£_public_keyfûe
–
rß_c⁄ãxt
 *
rß
, c⁄° *
∑th
 ) {

318 
ªt
;

319 
pk_c⁄ãxt
 
pk
;

320 
	`pk_öô
–&
pk
 );

321 
ªt
 = 
	`pk_∑r£_public_keyfûe
–&
pk
, 
∑th
 );

322 if–
ªt
 =0 && ! 
	`pk_ˇn_do
–&
pk
, 
POLARSSL_PK_RSA
 ) )

323 
ªt
 = 
POLARSSL_ERR_PK_TYPE_MISMATCH
;

324 if–
ªt
 == 0 )

325 
	`rß_c›y
–
rß
, 
	`pk_rß
–
pk
 ) );

327 
	`rß_‰ì
–
rß
 );

328 
	`pk_‰ì
–&
pk
 );

329 –
ªt
 );

330 
	}
}

333 
ölöe
 
	$x509∑r£_key
–
rß_c⁄ãxt
 *
rß
, c⁄° *
key
,

334 
size_t
 
keyÀn
,

335 c⁄° *
pwd
, 
size_t
 
pwdÀn
 ) {

336 
ªt
;

337 
pk_c⁄ãxt
 
pk
;

338 
	`pk_öô
–&
pk
 );

339 
ªt
 = 
	`pk_∑r£_key
–&
pk
, 
key
, 
keyÀn
, 
pwd
, 
pwdÀn
 );

340 if–
ªt
 =0 && ! 
	`pk_ˇn_do
–&
pk
, 
POLARSSL_PK_RSA
 ) )

341 
ªt
 = 
POLARSSL_ERR_PK_TYPE_MISMATCH
;

342 if–
ªt
 == 0 )

343 
	`rß_c›y
–
rß
, 
	`pk_rß
–
pk
 ) );

345 
	`rß_‰ì
–
rß
 );

346 
	`pk_‰ì
–&
pk
 );

347 –
ªt
 );

348 
	}
}

350 
ölöe
 
	$x509∑r£_public_key
–
rß_c⁄ãxt
 *
rß
,

351 c⁄° *
key
, 
size_t
 
keyÀn
 )

353 
ªt
;

354 
pk_c⁄ãxt
 
pk
;

355 
	`pk_öô
–&
pk
 );

356 
ªt
 = 
	`pk_∑r£_public_key
–&
pk
, 
key
, 
keyÀn
 );

357 if–
ªt
 =0 && ! 
	`pk_ˇn_do
–&
pk
, 
POLARSSL_PK_RSA
 ) )

358 
ªt
 = 
POLARSSL_ERR_PK_TYPE_MISMATCH
;

359 if–
ªt
 == 0 )

360 
	`rß_c›y
–
rß
, 
	`pk_rß
–
pk
 ) );

362 
	`rß_‰ì
–
rß
 );

363 
	`pk_‰ì
–&
pk
 );

364 –
ªt
 );

365 
	}
}

368 #i‡
deföed
(
POLARSSL_PK_WRITE_C
Ë&& deföed(
POLARSSL_RSA_C
)

369 
	~"pk.h
"

370 
ölöe
 
	$x509_wrôe_pubkey_dî
–*
buf
, 
size_t
 
Àn
, 
rß_c⁄ãxt
 *
rß
 ) {

371 
ªt
;

372 
pk_c⁄ãxt
 
˘x
;

373 if––
ªt
 = 
	`pk_öô_˘x
–&
˘x
, 
	`pk_öfo_‰om_ty≥
–
POLARSSL_PK_RSA
 ) ) ) != 0 ) (Ñet );

374 if––
ªt
 = 
	`rß_c›y
–
	`pk_rß
–
˘x
 ), 
rß
 ) ) != 0 ) (Ñet );

375 
ªt
 = 
	`pk_wrôe_pubkey_dî
–&
˘x
, 
buf
, 
Àn
 );

376 
	`pk_‰ì
–&
˘x
 );

377 –
ªt
 );

378 
	}
}

379 
ölöe
 
	$x509_wrôe_key_dî
–*
buf
, 
size_t
 
Àn
, 
rß_c⁄ãxt
 *
rß
 ) {

380 
ªt
;

381 
pk_c⁄ãxt
 
˘x
;

382 if––
ªt
 = 
	`pk_öô_˘x
–&
˘x
, 
	`pk_öfo_‰om_ty≥
–
POLARSSL_PK_RSA
 ) ) ) != 0 ) (Ñet );

383 if––
ªt
 = 
	`rß_c›y
–
	`pk_rß
–
˘x
 ), 
rß
 ) ) != 0 ) (Ñet );

384 
ªt
 = 
	`pk_wrôe_key_dî
–&
˘x
, 
buf
, 
Àn
 );

385 
	`pk_‰ì
–&
˘x
 );

386 –
ªt
 );

387 
	}
}

	@polarssl/include/polarssl/config.h

31 #i‚de‡
POLARSSL_CONFIG_H


32 
	#POLARSSL_CONFIG_H


	)

34 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
_CRT_SECURE_NO_DEPRECATE
)

35 
	#_CRT_SECURE_NO_DEPRECATE
 1

	)

69 
	#POLARSSL_HAVE_LONGLONG


	)

86 
	#POLARSSL_HAVE_ASM


	)

105 
	#POLARSSL_HAVE_TIME


	)

160 
	#POLARSSL_CIPHER_MODE_CBC


	)

167 
	#POLARSSL_CIPHER_MODE_CFB


	)

174 
	#POLARSSL_CIPHER_MODE_CTR


	)

213 
	#POLARSSL_CIPHER_PADDING_PKCS7


	)

214 
	#POLARSSL_CIPHER_PADDING_ONE_AND_ZEROS


	)

215 
	#POLARSSL_CIPHER_PADDING_ZEROS_AND_LEN


	)

216 
	#POLARSSL_CIPHER_PADDING_ZEROS


	)

241 
	#POLARSSL_ECP_DP_SECP192R1_ENABLED


	)

242 
	#POLARSSL_ECP_DP_SECP224R1_ENABLED


	)

243 
	#POLARSSL_ECP_DP_SECP256R1_ENABLED


	)

244 
	#POLARSSL_ECP_DP_SECP384R1_ENABLED


	)

245 
	#POLARSSL_ECP_DP_SECP521R1_ENABLED


	)

263 
	#POLARSSL_KEY_EXCHANGE_PSK_ENABLED


	)

283 
	#POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED


	)

328 
	#POLARSSL_KEY_EXCHANGE_RSA_ENABLED


	)

350 
	#POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED


	)

373 
	#POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED


	)

395 
	#POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED


	)

406 
	#POLARSSL_ERROR_STRERROR_BC


	)

417 
	#POLARSSL_ERROR_STRERROR_DUMMY


	)

426 
	#POLARSSL_GENPRIME


	)

433 
	#POLARSSL_FS_IO


	)

493 
	#POLARSSL_PKCS1_V15


	)

503 
	#POLARSSL_PKCS1_V21


	)

520 
	#POLARSSL_SELF_TEST


	)

534 
	#POLARSSL_SSL_ALERT_MESSAGES


	)

570 
	#POLARSSL_SSL_SRV_SUPPORT_SSLV2_CLIENT_HELLO


	)

579 
	#POLARSSL_SSL_MAX_FRAGMENT_LENGTH


	)

591 
	#POLARSSL_SSL_PROTO_SSL3


	)

603 
	#POLARSSL_SSL_PROTO_TLS1


	)

615 
	#POLARSSL_SSL_PROTO_TLS1_1


	)

627 
	#POLARSSL_SSL_PROTO_TLS1_2


	)

640 
	#POLARSSL_SSL_SESSION_TICKETS


	)

649 
	#POLARSSL_SSL_SERVER_NAME_INDICATION


	)

658 
	#POLARSSL_SSL_TRUNCATED_HMAC


	)

724 
	#POLARSSL_AES_C


	)

741 
	#POLARSSL_ARC4_C


	)

751 
	#POLARSSL_ASN1_PARSE_C


	)

760 
	#POLARSSL_ASN1_WRITE_C


	)

772 
	#POLARSSL_BASE64_C


	)

787 
	#POLARSSL_BIGNUM_C


	)

796 
	#POLARSSL_BLOWFISH_C


	)

817 
	#POLARSSL_CAMELLIA_C


	)

829 
	#POLARSSL_CERTS_C


	)

841 
	#POLARSSL_CIPHER_C


	)

855 
	#POLARSSL_CTR_DRBG_C


	)

869 
	#POLARSSL_DEBUG_C


	)

889 
	#POLARSSL_DES_C


	)

915 
	#POLARSSL_DHM_C


	)

936 
	#POLARSSL_ECDH_C


	)

948 
	#POLARSSL_ECDSA_C


	)

961 
	#POLARSSL_ECP_C


	)

975 
	#POLARSSL_ENTROPY_C


	)

987 
	#POLARSSL_ERROR_C


	)

1003 
	#POLARSSL_GCM_C


	)

1026 
	#POLARSSL_HAVEGE_C


	)

1038 
	#POLARSSL_MD_C


	)

1079 
	#POLARSSL_MD5_C


	)

1116 
	#POLARSSL_NET_C


	)

1130 
	#POLARSSL_OID_C


	)

1142 
	#POLARSSL_PADLOCK_C


	)

1156 
	#POLARSSL_PBKDF2_C


	)

1171 
	#POLARSSL_PEM_PARSE_C


	)

1186 
	#POLARSSL_PEM_WRITE_C


	)

1201 
	#POLARSSL_PK_C


	)

1215 
	#POLARSSL_PK_PARSE_C


	)

1229 
	#POLARSSL_PK_WRITE_C


	)

1242 
	#POLARSSL_PKCS5_C


	)

1273 
	#POLARSSL_PKCS12_C


	)

1290 
	#POLARSSL_RSA_C


	)

1305 
	#POLARSSL_SHA1_C


	)

1320 
	#POLARSSL_SHA256_C


	)

1334 
	#POLARSSL_SHA512_C


	)

1346 
	#POLARSSL_SSL_CACHE_C


	)

1360 
	#POLARSSL_SSL_CLI_C


	)

1374 
	#POLARSSL_SSL_SRV_C


	)

1390 
	#POLARSSL_SSL_TLS_C


	)

1402 
	#POLARSSL_TIMING_C


	)

1413 
	#POLARSSL_VERSION_C


	)

1430 
	#POLARSSL_X509_USE_C


	)

1446 
	#POLARSSL_X509_CRT_PARSE_C


	)

1460 
	#POLARSSL_X509_CRL_PARSE_C


	)

1474 
	#POLARSSL_X509_CSR_PARSE_C


	)

1487 
	#POLARSSL_X509_CREATE_C


	)

1500 
	#POLARSSL_X509_CRT_WRITE_C


	)

1513 
	#POLARSSL_X509_CSR_WRITE_C


	)

1523 
	#POLARSSL_XTEA_C


	)

1547 #i‡
deföed
(
POLARSSL_CONFIG_OPTIONS
)

1551 
	#POLARSSL_MPI_WINDOW_SIZE
 6

	)

1552 
	#POLARSSL_MPI_MAX_SIZE
 512

	)

1556 
	#CTR_DRBG_ENTROPY_LEN
 48

	)

1557 
	#CTR_DRBG_RESEED_INTERVAL
 10000

	)

1558 
	#CTR_DRBG_MAX_INPUT
 256

	)

1559 
	#CTR_DRBG_MAX_REQUEST
 1024

	)

1560 
	#CTR_DRBG_MAX_SEED_INPUT
 384

	)

1564 
	#ENTROPY_MAX_SOURCES
 20

	)

1565 
	#ENTROPY_MAX_GATHER
 128

	)

1568 
	#MEMORY_ALIGN_MULTIPLE
 4

	)

1569 
	#POLARSSL_MEMORY_STDMALLOC
 
mÆloc


	)

1570 
	#POLARSSL_MEMORY_STDFREE
 
‰ì


	)

1574 
	#SSL_CACHE_DEFAULT_TIMEOUT
 86400

	)

1575 
	#SSL_CACHE_DEFAULT_MAX_ENTRIES
 50

	)

1579 
	#SSL_MAX_CONTENT_LEN
 16384

	)

1580 
	#SSL_DEFAULT_TICKET_LIFETIME
 86400

	)

1589 #i‡
deföed
(
POLARSSL_DHM_C
Ë&& !deföed(
POLARSSL_BIGNUM_C
)

1593 #i‡
deföed
(
POLARSSL_CTR_DRBG_C
Ë&& !deföed(
POLARSSL_AES_C
)

1597 #i‡
deföed
(
POLARSSL_ECDH_C
Ë&& !deföed(
POLARSSL_ECP_C
)

1601 #i‡
deföed
(
POLARSSL_ECDSA_C
) && \

1602 –!
deföed
(
POLARSSL_ECP_C
) || \

1603 !
deföed
(
POLARSSL_ASN1_PARSE_C
) || \

1604 !
	$deföed
(
POLARSSL_ASN1_WRITE_C
) )

1608 #i‡
	`deföed
(
POLARSSL_ECP_C
Ë&& !deföed(
POLARSSL_BIGNUM_C
)

1612 #i‡
	`deföed
(
POLARSSL_ENTROPY_C
Ë&& (!deföed(
POLARSSL_SHA512_C
) && \

1613 !
	$deföed
(
POLARSSL_SHA256_C
))

1616 #i‡
	`deföed
(
POLARSSL_ENTROPY_C
Ë&& deföed(
POLARSSL_SHA512_C
) && \

1617 
	`deföed
(
POLARSSL_CONFIG_OPTIONS
Ë&& (
CTR_DRBG_ENTROPY_LEN
 > 64)

1620 #i‡
	`deföed
(
POLARSSL_ENTROPY_C
Ë&& !deföed(
POLARSSL_SHA512_C
) && \

1621 
	`deföed
(
POLARSSL_CONFIG_OPTIONS
Ë&& (
CTR_DRBG_ENTROPY_LEN
 > 32)

1625 #i‡
	`deföed
(
POLARSSL_GCM_C
Ë&& !deföed(
POLARSSL_AES_C
)

1629 #i‡
	`deföed
(
POLARSSL_HAVEGE_C
Ë&& !deföed(
POLARSSL_TIMING_C
)

1633 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
Ë&& !deföed(
POLARSSL_DHM_C
)

1637 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
) && \

1638 –!
	`deföed
(
POLARSSL_DHM_C
Ë|| !deföed(
POLARSSL_RSA_C
) || \

1639 !
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
Ë|| !
	$deföed
(
POLARSSL_PKCS1_V15
) )

1643 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) && \

1644 –!
	`deföed
(
POLARSSL_ECDH_C
Ë|| !deföed(
POLARSSL_RSA_C
) || \

1645 !
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
Ë|| !
	$deföed
(
POLARSSL_PKCS1_V15
) )

1649 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
) && \

1650 –!
	`deföed
(
POLARSSL_ECDH_C
Ë|| !deföed(
POLARSSL_ECDSA_C
) || \

1651 !
	$deföed
(
POLARSSL_X509_CRT_PARSE_C
) )

1655 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED
) && \

1656 –!
	`deföed
(
POLARSSL_RSA_C
Ë|| !deföed(
POLARSSL_X509_CRT_PARSE_C
) ||\

1657 !
	$deföed
(
POLARSSL_PKCS1_V15
) )

1661 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_RSA_ENABLED
) && \

1662 –!
	`deföed
(
POLARSSL_RSA_C
Ë|| !deföed(
POLARSSL_X509_CRT_PARSE_C
) ||\

1663 !
	$deföed
(
POLARSSL_PKCS1_V15
) )

1667 #i‡
	`deföed
(
POLARSSL_MEMORY_BUFFER_ALLOC_C
Ë&& !deföed(
POLARSSL_MEMORY_C
)

1671 #i‡
	`deföed
(
POLARSSL_PBKDF2_C
Ë&& !deföed(
POLARSSL_MD_C
)

1675 #i‡
	`deföed
(
POLARSSL_PEM_PARSE_C
Ë&& !deföed(
POLARSSL_BASE64_C
)

1679 #i‡
	`deföed
(
POLARSSL_PEM_WRITE_C
Ë&& !deföed(
POLARSSL_BASE64_C
)

1683 #i‡
	`deföed
(
POLARSSL_PK_PARSE_C
Ë&& !deföed(
POLARSSL_PK_C
)

1687 #i‡
	`deföed
(
POLARSSL_PK_WRITE_C
Ë&& !deföed(
POLARSSL_PK_C
)

1691 #i‡
	`deföed
(
POLARSSL_PKCS11_C
Ë&& !deföed(
POLARSSL_PK_C
)

1695 #i‡
	`deföed
(
POLARSSL_RSA_C
Ë&& ( !deföed(
POLARSSL_BIGNUM_C
) || \

1696 !
	$deföed
(
POLARSSL_OID_C
) )

1700 #i‡
	`deföed
(
POLARSSL_SSL_CLI_C
Ë&& !deföed(
POLARSSL_SSL_TLS_C
)

1704 #i‡
	`deföed
(
POLARSSL_SSL_TLS_C
Ë&& ( !deföed(
POLARSSL_CIPHER_C
) || \

1705 !
	`deföed
(
POLARSSL_PK_C
Ë|| !
	$deföed
(
POLARSSL_MD_C
) )

1709 #i‡
	`deföed
(
POLARSSL_SSL_SRV_C
Ë&& !deföed(
POLARSSL_SSL_TLS_C
)

1713 #i‡
	`deföed
(
POLARSSL_SSL_TLS_C
Ë&& (!deföed(
POLARSSL_SSL_PROTO_SSL3
) && \

1714 !
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë&& !deföed(
POLARSSL_SSL_PROTO_TLS1_1
) && \

1715 !
	$deföed
(
POLARSSL_SSL_PROTO_TLS1_2
))

1719 #i‡
	`deföed
(
POLARSSL_SSL_TLS_C
Ë&& (deföed(
POLARSSL_SSL_PROTO_SSL3
) && \

1720 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
Ë&& !
	$deföed
(
POLARSSL_SSL_PROTO_TLS1
))

1724 #i‡
	`deföed
(
POLARSSL_SSL_TLS_C
Ë&& (deföed(
POLARSSL_SSL_PROTO_TLS1
) && \

1725 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
Ë&& !
	$deföed
(
POLARSSL_SSL_PROTO_TLS1_1
))

1729 #i‡
	`deföed
(
POLARSSL_SSL_TLS_C
Ë&& (deföed(
POLARSSL_SSL_PROTO_SSL3
) && \

1730 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
Ë&& (!deföed(
POLARSSL_SSL_PROTO_TLS1
) || \

1731 !
	$deföed
(
POLARSSL_SSL_PROTO_TLS1_1
)))

1735 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
Ë&& deföed(
POLARSSL_SSL_TLS_C
) && \

1736 –!
	`deföed
(
POLARSSL_AES_C
Ë|| !deföed(
POLARSSL_SHA256_C
) || \

1737 !
	$deföed
(
POLARSSL_CIPHER_MODE_CBC
) )

1741 #i‡
	`deföed
(
POLARSSL_X509_USE_C
Ë&& ( !deföed(
POLARSSL_BIGNUM_C
) || \

1742 !
	`deföed
(
POLARSSL_OID_C
Ë|| !deföed(
POLARSSL_ASN1_PARSE_C
) || \

1743 !
	$deföed
(
POLARSSL_PK_PARSE_C
) )

1747 #i‡
	`deföed
(
POLARSSL_X509_CREATE_C
Ë&& ( !deföed(
POLARSSL_BIGNUM_C
) || \

1748 !
	`deföed
(
POLARSSL_OID_C
Ë|| !deföed(
POLARSSL_ASN1_WRITE_C
) || \

1749 !
	$deföed
(
POLARSSL_PK_WRITE_C
) )

1753 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
Ë&& ( !deföed(
POLARSSL_X509_USE_C
) )

1757 #i‡
	`deföed
(
POLARSSL_X509_CRL_PARSE_C
Ë&& ( !deföed(
POLARSSL_X509_USE_C
) )

1761 #i‡
	`deföed
(
POLARSSL_X509_CSR_PARSE_C
Ë&& ( !deföed(
POLARSSL_X509_USE_C
) )

1765 #i‡
	`deföed
(
POLARSSL_X509_CRT_WRITE_C
Ë&& ( !deföed(
POLARSSL_X509_CREATE_C
) )

1769 #i‡
	`deföed
(
POLARSSL_X509_CSR_WRITE_C
Ë&& ( !deföed(
POLARSSL_X509_CREATE_C
) )

	@polarssl/include/polarssl/ctr_drbg.h

27 #i‚de‡
POLARSSL_CTR_DRBG_H


28 
	#POLARSSL_CTR_DRBG_H


	)

30 
	~<°rög.h
>

32 
	~"´s.h
"

34 
	#POLARSSL_ERR_CTR_DRBG_ENTROPY_SOURCE_FAILED
 -0x0034

	)

35 
	#POLARSSL_ERR_CTR_DRBG_REQUEST_TOO_BIG
 -0x0036

	)

36 
	#POLARSSL_ERR_CTR_DRBG_INPUT_TOO_BIG
 -0x0038

	)

37 
	#POLARSSL_ERR_CTR_DRBG_FILE_IO_ERROR
 -0x003A

	)

39 
	#CTR_DRBG_BLOCKSIZE
 16

	)

40 
	#CTR_DRBG_KEYSIZE
 32

	)

41 
	#CTR_DRBG_KEYBITS
 ( 
CTR_DRBG_KEYSIZE
 * 8 )

	)

42 
	#CTR_DRBG_SEEDLEN
 ( 
CTR_DRBG_KEYSIZE
 + 
CTR_DRBG_BLOCKSIZE
 )

	)

53 #i‡!
deföed
(
CTR_DRBG_ENTROPY_LEN
)

54 #i‡
deföed
(
POLARSSL_SHA512_C
Ë&& !deföed(
POLARSSL_ENTROPY_FORCE_SHA256
)

55 
	#CTR_DRBG_ENTROPY_LEN
 48

	)

57 
	#CTR_DRBG_ENTROPY_LEN
 32

	)

61 #i‡!
deföed
(
CTR_DRBG_RESEED_INTERVAL
)

62 
	#CTR_DRBG_RESEED_INTERVAL
 10000

	)

65 #i‡!
deföed
(
CTR_DRBG_MAX_INPUT
)

66 
	#CTR_DRBG_MAX_INPUT
 256

	)

69 #i‡!
deföed
(
CTR_DRBG_MAX_REQUEST
)

70 
	#CTR_DRBG_MAX_REQUEST
 1024

	)

73 #i‡!
deföed
(
CTR_DRBG_MAX_SEED_INPUT
)

74 
	#CTR_DRBG_MAX_SEED_INPUT
 384

	)

79 
	#CTR_DRBG_PR_OFF
 0

	)

80 
	#CTR_DRBG_PR_ON
 1

	)

82 #ifde‡
__˝lu•lus


91 
cou¡î
[16];

92 
ª£ed_cou¡î
;

93 
¥edi˘i⁄_ªsi°™˚
;

95 
size_t
 
íå›y_Àn
;

97 
ª£ed_öãrvÆ
;

99 
´s_c⁄ãxt
 
´s_˘x
;

104 (*
f_íå›y
)(*, *, 
size_t
);

106 *
p_íå›y
;

108 
	t˘r_drbg_c⁄ãxt
;

127 
˘r_drbg_öô
–
˘r_drbg_c⁄ãxt
 *
˘x
,

128 (*
f_íå›y
)(*, *, 
size_t
),

129 *
p_íå›y
,

130 c⁄° *
cu°om
,

131 
size_t
 
Àn
 );

138 
˘r_drbg_‰ì
–
˘r_drbg_c⁄ãxt
 *
˘x
 );

149 
˘r_drbg_£t_¥edi˘i⁄_ªsi°™˚
–
˘r_drbg_c⁄ãxt
 *
˘x
,

150 
ªsi°™˚
 );

159 
˘r_drbg_£t_íå›y_Àn
–
˘r_drbg_c⁄ãxt
 *
˘x
,

160 
size_t
 
Àn
 );

169 
˘r_drbg_£t_ª£ed_öãrvÆ
–
˘r_drbg_c⁄ãxt
 *
˘x
,

170 
öãrvÆ
 );

182 
˘r_drbg_ª£ed
–
˘r_drbg_c⁄ãxt
 *
˘x
,

183 c⁄° *
addôi⁄Æ
, 
size_t
 
Àn
 );

192 
˘r_drbg_upd©e
–
˘r_drbg_c⁄ãxt
 *
˘x
,

193 c⁄° *
addôi⁄Æ
, 
size_t
 
add_Àn
 );

210 
˘r_drbg_øndom_wôh_add
–*
p_∫g
,

211 *
ouçut
, 
size_t
 
ouçut_Àn
,

212 c⁄° *
addôi⁄Æ
, 
size_t
 
add_Àn
 );

227 
˘r_drbg_øndom
–*
p_∫g
,

228 *
ouçut
, 
size_t
 
ouçut_Àn
 );

230 #i‡
deföed
(
POLARSSL_FS_IO
)

241 
˘r_drbg_wrôe_£ed_fûe
–
˘r_drbg_c⁄ãxt
 *
˘x
, c⁄° *
∑th
 );

255 
˘r_drbg_upd©e_£ed_fûe
–
˘r_drbg_c⁄ãxt
 *
˘x
, c⁄° *
∑th
 );

263 
˘r_drbg_£lf_ã°
–
vîbo£
 );

266 
˘r_drbg_öô_íå›y_Àn
–
˘r_drbg_c⁄ãxt
 *,

267 (*)(*, *, 
size_t
), *,

268 c⁄° *, 
size_t
, size_t );

270 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/debug.h

27 #i‚de‡
POLARSSL_DEBUG_H


28 
	#POLARSSL_DEBUG_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


35 
	~"s¶.h
"

36 #i‡
deföed
(
POLARSSL_ECP_C
)

37 
	~"e˝.h
"

40 #i‡
deföed
(
POLARSSL_DEBUG_C
)

42 
	#POLARSSL_DEBUG_LOG_FULL
 0

	)

43 
	#POLARSSL_DEBUG_LOG_RAW
 1

	)

53 #i‡!
deföed
(
POLARSSL_DEBUG_DFL_MODE
)

54 
	#POLARSSL_DEBUG_DFL_MODE
 
POLARSSL_DEBUG_LOG_FULL


	)

60 
	#SSL_DEBUG_MSG
–
Àvñ
, 
¨gs
 ) \

61 
	`debug_¥öt_msg
–
s¶
, 
Àvñ
, 
__FILE__
, 
__LINE__
, 
debug_fmt
 
¨gs
 );

	)

63 
	#SSL_DEBUG_RET
–
Àvñ
, 
ãxt
, 
ªt
 ) \

64 
	`debug_¥öt_ªt
–
s¶
, 
Àvñ
, 
__FILE__
, 
__LINE__
, 
ãxt
, 
ªt
 );

	)

66 
	#SSL_DEBUG_BUF
–
Àvñ
, 
ãxt
, 
buf
, 
Àn
 ) \

67 
	`debug_¥öt_buf
–
s¶
, 
Àvñ
, 
__FILE__
, 
__LINE__
, 
ãxt
, 
buf
, 
Àn
 );

	)

69 #i‡
deföed
(
POLARSSL_BIGNUM_C
)

70 
	#SSL_DEBUG_MPI
–
Àvñ
, 
ãxt
, 
X
 ) \

71 
	`debug_¥öt_mpi
–
s¶
, 
Àvñ
, 
__FILE__
, 
__LINE__
, 
ãxt
, 
X
 );

	)

74 #i‡
deföed
(
POLARSSL_ECP_C
)

75 
	#SSL_DEBUG_ECP
–
Àvñ
, 
ãxt
, 
X
 ) \

76 
	`debug_¥öt_e˝
–
s¶
, 
Àvñ
, 
__FILE__
, 
__LINE__
, 
ãxt
, 
X
 );

	)

79 #i‡
deföed
(
POLARSSL_X509_CRT_PARSE_C
)

80 
	#SSL_DEBUG_CRT
–
Àvñ
, 
ãxt
, 
¸t
 ) \

81 
	`debug_¥öt_¸t
–
s¶
, 
Àvñ
, 
__FILE__
, 
__LINE__
, 
ãxt
, 
¸t
 );

	)

86 
	#SSL_DEBUG_MSG
–
Àvñ
, 
¨gs
 ) dÿ{ }  0 )

	)

87 
	#SSL_DEBUG_RET
–
Àvñ
, 
ãxt
, 
ªt
 ) dÿ{ }  0 )

	)

88 
	#SSL_DEBUG_BUF
–
Àvñ
, 
ãxt
, 
buf
, 
Àn
 ) dÿ{ }  0 )

	)

89 
	#SSL_DEBUG_MPI
–
Àvñ
, 
ãxt
, 
X
 ) dÿ{ }  0 )

	)

90 
	#SSL_DEBUG_ECP
–
Àvñ
, 
ãxt
, 
X
 ) dÿ{ }  0 )

	)

91 
	#SSL_DEBUG_CRT
–
Àvñ
, 
ãxt
, 
¸t
 ) dÿ{ }  0 )

	)

95 #ifde‡
__˝lu•lus


106 
debug_£t_log_mode
–
log_mode
 );

115 
debug_£t_thªshﬁd
–
thªshﬁd
 );

117 *
debug_fmt
–c⁄° *
f‹m©
, ... );

119 
debug_¥öt_msg
–c⁄° 
s¶_c⁄ãxt
 *
s¶
, 
Àvñ
,

120 c⁄° *
fûe
, 
löe
, c⁄° *
ãxt
 );

122 
debug_¥öt_ªt
–c⁄° 
s¶_c⁄ãxt
 *
s¶
, 
Àvñ
,

123 c⁄° *
fûe
, 
löe
,

124 c⁄° *
ãxt
, 
ªt
 );

126 
debug_¥öt_buf
–c⁄° 
s¶_c⁄ãxt
 *
s¶
, 
Àvñ
,

127 c⁄° *
fûe
, 
löe
, c⁄° *
ãxt
,

128 *
buf
, 
size_t
 
Àn
 );

130 #i‡
deföed
(
POLARSSL_BIGNUM_C
)

131 
debug_¥öt_mpi
–c⁄° 
s¶_c⁄ãxt
 *
s¶
, 
Àvñ
,

132 c⁄° *
fûe
, 
löe
,

133 c⁄° *
ãxt
, c⁄° 
mpi
 *
X
 );

136 #i‡
deföed
(
POLARSSL_ECP_C
)

137 
debug_¥öt_e˝
–c⁄° 
s¶_c⁄ãxt
 *
s¶
, 
Àvñ
,

138 c⁄° *
fûe
, 
löe
,

139 c⁄° *
ãxt
, c⁄° 
e˝_poöt
 *
X
 );

142 #i‡
deföed
(
POLARSSL_X509_CRT_PARSE_C
)

143 
debug_¥öt_¸t
–c⁄° 
s¶_c⁄ãxt
 *
s¶
, 
Àvñ
,

144 c⁄° *
fûe
, 
löe
,

145 c⁄° *
ãxt
, c⁄° 
x509_¸t
 *
¸t
 );

148 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/des.h

27 #i‚de‡
POLARSSL_DES_H


28 
	#POLARSSL_DES_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~<°rög.h
>

38 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

39 
	~<ba£tsd.h
>

40 
UINT32
 
	tuöt32_t
;

42 
	~<öây≥s.h
>

45 
	#DES_ENCRYPT
 1

	)

46 
	#DES_DECRYPT
 0

	)

48 
	#POLARSSL_ERR_DES_INVALID_INPUT_LENGTH
 -0x0032

	)

50 
	#DES_KEY_SIZE
 8

	)

52 #i‡!
deföed
(
POLARSSL_DES_ALT
)

56 #ifde‡
__˝lu•lus


65 
mode
;

66 
uöt32_t
 
sk
[32];

68 
	tdes_c⁄ãxt
;

75 
mode
;

76 
uöt32_t
 
sk
[96];

78 
	tdes3_c⁄ãxt
;

85 
des_öô
–
des_c⁄ãxt
 *
˘x
 );

92 
des_‰ì
–
des_c⁄ãxt
 *
˘x
 );

99 
des3_öô
–
des3_c⁄ãxt
 *
˘x
 );

106 
des3_‰ì
–
des3_c⁄ãxt
 *
˘x
 );

116 
des_key_£t_∑rôy
–
key
[
DES_KEY_SIZE
] );

128 
des_key_check_key_∑rôy
–c⁄° 
key
[
DES_KEY_SIZE
] );

137 
des_key_check_wók
–c⁄° 
key
[
DES_KEY_SIZE
] );

147 
des_£tkey_íc
–
des_c⁄ãxt
 *
˘x
, c⁄° 
key
[
DES_KEY_SIZE
] );

157 
des_£tkey_dec
–
des_c⁄ãxt
 *
˘x
, c⁄° 
key
[
DES_KEY_SIZE
] );

167 
des3_£t2key_íc
–
des3_c⁄ãxt
 *
˘x
,

168 c⁄° 
key
[
DES_KEY_SIZE
 * 2] );

178 
des3_£t2key_dec
–
des3_c⁄ãxt
 *
˘x
,

179 c⁄° 
key
[
DES_KEY_SIZE
 * 2] );

189 
des3_£t3key_íc
–
des3_c⁄ãxt
 *
˘x
,

190 c⁄° 
key
[
DES_KEY_SIZE
 * 3] );

200 
des3_£t3key_dec
–
des3_c⁄ãxt
 *
˘x
,

201 c⁄° 
key
[
DES_KEY_SIZE
 * 3] );

212 
des_¸y±_ecb
–
des_c⁄ãxt
 *
˘x
,

213 c⁄° 
öput
[8],

214 
ouçut
[8] );

216 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

227 
des_¸y±_cbc
–
des_c⁄ãxt
 *
˘x
,

228 
mode
,

229 
size_t
 
Àngth
,

230 
iv
[8],

231 c⁄° *
öput
,

232 *
ouçut
 );

244 
des3_¸y±_ecb
–
des3_c⁄ãxt
 *
˘x
,

245 c⁄° 
öput
[8],

246 
ouçut
[8] );

248 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

261 
des3_¸y±_cbc
–
des3_c⁄ãxt
 *
˘x
,

262 
mode
,

263 
size_t
 
Àngth
,

264 
iv
[8],

265 c⁄° *
öput
,

266 *
ouçut
 );

269 #ifde‡
__˝lu•lus


274 
	~"des_Æt.h
"

277 #ifde‡
__˝lu•lus


286 
des_£lf_ã°
–
vîbo£
 );

288 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/dhm.h

27 #i‚de‡
POLARSSL_DHM_H


28 
	#POLARSSL_DHM_H


	)

30 
	~"bignum.h
"

35 
	#POLARSSL_ERR_DHM_BAD_INPUT_DATA
 -0x3080

	)

36 
	#POLARSSL_ERR_DHM_READ_PARAMS_FAILED
 -0x3100

	)

37 
	#POLARSSL_ERR_DHM_MAKE_PARAMS_FAILED
 -0x3180

	)

38 
	#POLARSSL_ERR_DHM_READ_PUBLIC_FAILED
 -0x3200

	)

39 
	#POLARSSL_ERR_DHM_MAKE_PUBLIC_FAILED
 -0x3280

	)

40 
	#POLARSSL_ERR_DHM_CALC_SECRET_FAILED
 -0x3300

	)

41 
	#POLARSSL_ERR_DHM_INVALID_FORMAT
 -0x3380

	)

42 
	#POLARSSL_ERR_DHM_MALLOC_FAILED
 -0x3400

	)

43 
	#POLARSSL_ERR_DHM_FILE_IO_ERROR
 -0x3480

	)

62 
	#POLARSSL_DHM_RFC2409_MODP_1024_P
 \

68 "FFFFFFFFFFFFFFFF"

	)

70 
	#POLARSSL_DHM_RFC2409_MODP_1024_G
 "02"

	)

72 
	#POLARSSL_DHM_RFC3526_MODP_2048_P
 \

83 "15728E5A8AACAA68FFFFFFFFFFFFFFFF"

	)

85 
	#POLARSSL_DHM_RFC3526_MODP_2048_G
 "02"

	)

87 
	#POLARSSL_DHM_RFC3526_MODP_3072_P
 \

103 "43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF"

	)

105 
	#POLARSSL_DHM_RFC3526_MODP_3072_G
 "02"

	)

107 
	#POLARSSL_DHM_RFC5114_MODP_1024_P
 \

113 "DF1FB2BC2E4A4371"

	)

115 
	#POLARSSL_DHM_RFC5114_MODP_1024_G
 \

121 "855E6EEB22B3B2E5"

	)

123 
	#POLARSSL_DHM_RFC5114_MODP_2048_P
 \

134 "CF9DE5384E71B81C0AC4DFFE0C10E64F"

	)

136 
	#POLARSSL_DHM_RFC5114_MODP_2048_G
 \

147 "81BC087F2A7065B384B890D3191F2BFA"

	)

149 #ifde‡
__˝lu•lus


158 
size_t
 
Àn
;

159 
mpi
 
P
;

160 
mpi
 
G
;

161 
mpi
 
X
;

162 
mpi
 
GX
;

163 
mpi
 
GY
;

164 
mpi
 
K
;

165 
mpi
 
RP
;

166 
mpi
 
Vi
;

167 
mpi
 
Vf
;

168 
mpi
 
pX
;

170 
	tdhm_c⁄ãxt
;

177 
dhm_öô
–
dhm_c⁄ãxt
 *
˘x
 );

188 
dhm_ªad_∑øms
–
dhm_c⁄ãxt
 *
˘x
,

189 **
p
,

190 c⁄° *
íd
 );

208 
dhm_make_∑øms
–
dhm_c⁄ãxt
 *
˘x
, 
x_size
,

209 *
ouçut
, 
size_t
 *
ﬁí
,

210 (*
f_∫g
)(*, *, 
size_t
),

211 *
p_∫g
 );

222 
dhm_ªad_public
–
dhm_c⁄ãxt
 *
˘x
,

223 c⁄° *
öput
, 
size_t
 
ûí
 );

237 
dhm_make_public
–
dhm_c⁄ãxt
 *
˘x
, 
x_size
,

238 *
ouçut
, 
size_t
 
ﬁí
,

239 (*
f_∫g
)(*, *, 
size_t
),

240 *
p_∫g
 );

260 
dhm_ˇlc_£¸ë
–
dhm_c⁄ãxt
 *
˘x
,

261 *
ouçut
, 
size_t
 *
ﬁí
,

262 (*
f_∫g
)(*, *, 
size_t
),

263 *
p_∫g
 );

270 
dhm_‰ì
–
dhm_c⁄ãxt
 *
˘x
 );

272 #i‡
deföed
(
POLARSSL_ASN1_PARSE_C
)

283 
dhm_∑r£_dhm
–
dhm_c⁄ãxt
 *
dhm
, c⁄° *
dhmö
,

284 
size_t
 
dhmöÀn
 );

286 #i‡
deföed
(
POLARSSL_FS_IO
)

296 
dhm_∑r£_dhmfûe
–
dhm_c⁄ãxt
 *
dhm
, c⁄° *
∑th
 );

305 
dhm_£lf_ã°
–
vîbo£
 );

307 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/ecdh.h

27 #i‚de‡
POLARSSL_ECDH_H


28 
	#POLARSSL_ECDH_H


	)

30 
	~"e˝.h
"

32 #ifde‡
__˝lu•lus


41 
POLARSSL_ECDH_OURS
,

42 
POLARSSL_ECDH_THEIRS
,

43 } 
	tecdh_side
;

50 
e˝_group
 
gΩ
;

51 
mpi
 
d
;

52 
e˝_poöt
 
Q
;

53 
e˝_poöt
 
Qp
;

54 
mpi
 
z
;

55 
poöt_f‹m©
;

56 
e˝_poöt
 
Vi
;

57 
e˝_poöt
 
Vf
;

58 
mpi
 
_d
;

60 
	tecdh_c⁄ãxt
;

75 
ecdh_gí_public
–
e˝_group
 *
gΩ
, 
mpi
 *
d
, 
e˝_poöt
 *
Q
,

76 (*
f_∫g
)(*, *, 
size_t
),

77 *
p_∫g
 );

97 
ecdh_compuã_sh¨ed
–
e˝_group
 *
gΩ
, 
mpi
 *
z
,

98 c⁄° 
e˝_poöt
 *
Q
, c⁄° 
mpi
 *
d
,

99 (*
f_∫g
)(*, *, 
size_t
),

100 *
p_∫g
 );

107 
ecdh_öô
–
ecdh_c⁄ãxt
 *
˘x
 );

114 
ecdh_‰ì
–
ecdh_c⁄ãxt
 *
˘x
 );

132 
ecdh_make_∑øms
–
ecdh_c⁄ãxt
 *
˘x
, 
size_t
 *
ﬁí
,

133 *
buf
, 
size_t
 
bÀn
,

134 (*
f_∫g
)(*, *, 
size_t
),

135 *
p_∫g
 );

147 
ecdh_ªad_∑øms
–
ecdh_c⁄ãxt
 *
˘x
,

148 c⁄° **
buf
, c⁄° *
íd
 );

162 
ecdh_gë_∑øms
–
ecdh_c⁄ãxt
 *
˘x
, c⁄° 
e˝_key∑ú
 *
key
,

163 
ecdh_side
 
side
 );

178 
ecdh_make_public
–
ecdh_c⁄ãxt
 *
˘x
, 
size_t
 *
ﬁí
,

179 *
buf
, 
size_t
 
bÀn
,

180 (*
f_∫g
)(*, *, 
size_t
),

181 *
p_∫g
 );

193 
ecdh_ªad_public
–
ecdh_c⁄ãxt
 *
˘x
,

194 c⁄° *
buf
, 
size_t
 
bÀn
 );

209 
ecdh_ˇlc_£¸ë
–
ecdh_c⁄ãxt
 *
˘x
, 
size_t
 *
ﬁí
,

210 *
buf
, 
size_t
 
bÀn
,

211 (*
f_∫g
)(*, *, 
size_t
),

212 *
p_∫g
 );

219 
ecdh_£lf_ã°
–
vîbo£
 );

221 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/ecdsa.h

27 #i‚de‡
POLARSSL_ECDSA_H


28 
	#POLARSSL_ECDSA_H


	)

30 
	~"e˝.h
"

32 #i‡
deföed
(
POLARSSL_ECDSA_DETERMINISTIC
)

33 
	~"md.h
"

43 
e˝_group
 
	mgΩ
;

44 
mpi
 
	md
;

45 
e˝_poöt
 
	mQ
;

46 
mpi
 
	mr
;

47 
mpi
 
	ms
;

49 
	tecdß_c⁄ãxt
;

51 #ifde‡
__˝lu•lus


70 
ecdß_sign
–
e˝_group
 *
gΩ
, 
mpi
 *
r
, mpò*
s
,

71 c⁄° 
mpi
 *
d
, c⁄° *
buf
, 
size_t
 
bÀn
,

72 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 );

74 #i‡
deföed
(
POLARSSL_ECDSA_DETERMINISTIC
)

90 
ecdß_sign_dë
–
e˝_group
 *
gΩ
, 
mpi
 *
r
, mpò*
s
,

91 c⁄° 
mpi
 *
d
, c⁄° *
buf
, 
size_t
 
bÀn
,

92 
md_ty≥_t
 
md_Æg
 );

109 
ecdß_vîify
–
e˝_group
 *
gΩ
,

110 c⁄° *
buf
, 
size_t
 
bÀn
,

111 c⁄° 
e˝_poöt
 *
Q
, c⁄° 
mpi
 *
r
, c⁄° mpò*
s
);

134 
ecdß_wrôe_sig«tuª
–
ecdß_c⁄ãxt
 *
˘x
,

135 c⁄° *
hash
, 
size_t
 
hÀn
,

136 *
sig
, 
size_t
 *
¶í
,

137 (*
f_∫g
)(*, *, 
size_t
),

138 *
p_∫g
 );

140 #i‡
deföed
(
POLARSSL_ECDSA_DETERMINISTIC
)

162 
ecdß_wrôe_sig«tuª_dë
–
ecdß_c⁄ãxt
 *
˘x
,

163 c⁄° *
hash
, 
size_t
 
hÀn
,

164 *
sig
, 
size_t
 *
¶í
,

165 
md_ty≥_t
 
md_Æg
 );

183 
ecdß_ªad_sig«tuª
–
ecdß_c⁄ãxt
 *
˘x
,

184 c⁄° *
hash
, 
size_t
 
hÀn
,

185 c⁄° *
sig
, 
size_t
 
¶í
 );

198 
ecdß_gíkey
–
ecdß_c⁄ãxt
 *
˘x
, 
e˝_group_id
 
gid
,

199 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 );

209 
ecdß_‰om_key∑ú
–
ecdß_c⁄ãxt
 *
˘x
, c⁄° 
e˝_key∑ú
 *
key
 );

216 
ecdß_öô
–
ecdß_c⁄ãxt
 *
˘x
 );

223 
ecdß_‰ì
–
ecdß_c⁄ãxt
 *
˘x
 );

230 
ecdß_£lf_ã°
–
vîbo£
 );

232 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/ecp.h

27 #i‚de‡
POLARSSL_ECP_H


28 
	#POLARSSL_ECP_H


	)

30 
	~"bignum.h
"

35 
	#POLARSSL_ERR_ECP_BAD_INPUT_DATA
 -0x4F80

	)

36 
	#POLARSSL_ERR_ECP_BUFFER_TOO_SMALL
 -0x4F00

	)

37 
	#POLARSSL_ERR_ECP_FEATURE_UNAVAILABLE
 -0x4E80

	)

38 
	#POLARSSL_ERR_ECP_VERIFY_FAILED
 -0x4E00

	)

39 
	#POLARSSL_ERR_ECP_MALLOC_FAILED
 -0x4D80

	)

40 
	#POLARSSL_ERR_ECP_RANDOM_FAILED
 -0x4D00

	)

41 
	#POLARSSL_ERR_ECP_INVALID_KEY
 -0x4C80

	)

42 
	#POLARSSL_ERR_ECP_SIG_LEN_MISMATCH
 -0x4C00

	)

44 #ifde‡
__˝lu•lus


59 
POLARSSL_ECP_DP_NONE
 = 0,

60 
POLARSSL_ECP_DP_SECP192R1
,

61 
POLARSSL_ECP_DP_SECP224R1
,

62 
POLARSSL_ECP_DP_SECP256R1
,

63 
POLARSSL_ECP_DP_SECP384R1
,

64 
POLARSSL_ECP_DP_SECP521R1
,

65 
POLARSSL_ECP_DP_BP256R1
,

66 
POLARSSL_ECP_DP_BP384R1
,

67 
POLARSSL_ECP_DP_BP512R1
,

68 
POLARSSL_ECP_DP_M221
,

69 
POLARSSL_ECP_DP_M255
,

70 
POLARSSL_ECP_DP_M383
,

71 
POLARSSL_ECP_DP_M511
,

72 
POLARSSL_ECP_DP_SECP192K1
,

73 
POLARSSL_ECP_DP_SECP224K1
,

74 
POLARSSL_ECP_DP_SECP256K1
,

75 } 
	te˝_group_id
;

82 
	#POLARSSL_ECP_DP_MAX
 12

	)

89 
e˝_group_id
 
gΩ_id
;

90 
uöt16_t
 
és_id
;

91 
uöt16_t
 
size
;

92 c⁄° *
«me
;

93 } 
	te˝_curve_öfo
;

106 
mpi
 
X
;

107 
mpi
 
Y
;

108 
mpi
 
Z
;

110 
	te˝_poöt
;

138 
e˝_group_id
 
id
;

139 
mpi
 
P
;

140 
mpi
 
A
;

141 
mpi
 
B
;

142 
e˝_poöt
 
G
;

143 
mpi
 
N
;

144 
size_t
 
pbôs
;

145 
size_t
 
nbôs
;

146 
h
;

147 (*
modp
)(
mpi
 *);

148 (*
t_¥e
)(
e˝_poöt
 *, *);

149 (*
t_po°
)(
e˝_poöt
 *, *);

150 *
t_d©a
;

151 
e˝_poöt
 *
T
;

152 
size_t
 
T_size
;

154 
	te˝_group
;

165 
e˝_group
 
gΩ
;

166 
mpi
 
d
;

167 
e˝_poöt
 
Q
;

169 
	te˝_key∑ú
;

179 #i‡!
deföed
(
POLARSSL_ECP_MAX_BITS
)

183 
	#POLARSSL_ECP_MAX_BITS
 521

	)

186 
	#POLARSSL_ECP_MAX_BYTES
 ( ( 
POLARSSL_ECP_MAX_BITS
 + 7 ) / 8 )

	)

187 
	#POLARSSL_ECP_MAX_PT_LEN
 ( 2 * 
POLARSSL_ECP_MAX_BYTES
 + 1 )

	)

189 #i‡!
deföed
(
POLARSSL_ECP_WINDOW_SIZE
)

210 
	#POLARSSL_ECP_WINDOW_SIZE
 6

	)

213 #i‡!
deföed
(
POLARSSL_ECP_FIXED_POINT_OPTIM
)

225 
	#POLARSSL_ECP_FIXED_POINT_OPTIM
 1

	)

233 
	#POLARSSL_ECP_PF_UNCOMPRESSED
 0

	)

234 
	#POLARSSL_ECP_PF_COMPRESSED
 1

	)

239 
	#POLARSSL_ECP_TLS_NAMED_CURVE
 3

	)

247 c⁄° 
e˝_curve_öfo
 *
e˝_curve_li°
( );

256 c⁄° 
e˝_group_id
 *
e˝_gΩ_id_li°
( );

265 c⁄° 
e˝_curve_öfo
 *
e˝_curve_öfo_‰om_gΩ_id
–
e˝_group_id
 
gΩ_id
 );

274 c⁄° 
e˝_curve_öfo
 *
e˝_curve_öfo_‰om_és_id
–
uöt16_t
 
és_id
 );

283 c⁄° 
e˝_curve_öfo
 *
e˝_curve_öfo_‰om_«me
–c⁄° *
«me
 );

288 
e˝_poöt_öô
–
e˝_poöt
 *
±
 );

293 
e˝_group_öô
–
e˝_group
 *
gΩ
 );

298 
e˝_key∑ú_öô
–
e˝_key∑ú
 *
key
 );

303 
e˝_poöt_‰ì
–
e˝_poöt
 *
±
 );

308 
e˝_group_‰ì
–
e˝_group
 *
gΩ
 );

313 
e˝_key∑ú_‰ì
–
e˝_key∑ú
 *
key
 );

324 
e˝_c›y
–
e˝_poöt
 *
P
, c⁄°É˝_poöà*
Q
 );

335 
e˝_group_c›y
–
e˝_group
 *
d°
, c⁄°É˝_grou∞*
§c
 );

345 
e˝_£t_zîo
–
e˝_poöt
 *
±
 );

354 
e˝_is_zîo
–
e˝_poöt
 *
±
 );

366 
e˝_poöt_ªad_°rög
–
e˝_poöt
 *
P
, 
ødix
,

367 c⁄° *
x
, c⁄° *
y
 );

383 
e˝_poöt_wrôe_bö¨y
–c⁄° 
e˝_group
 *
gΩ
, c⁄° 
e˝_poöt
 *
P
,

384 
f‹m©
, 
size_t
 *
ﬁí
,

385 *
buf
, 
size_t
 
buÊí
 );

405 
e˝_poöt_ªad_bö¨y
–c⁄° 
e˝_group
 *
gΩ
, 
e˝_poöt
 *
P
,

406 c⁄° *
buf
, 
size_t
 
ûí
 );

420 
e˝_és_ªad_poöt
–c⁄° 
e˝_group
 *
gΩ
, 
e˝_poöt
 *
±
,

421 c⁄° **
buf
, 
size_t
 
Àn
 );

437 
e˝_és_wrôe_poöt
–c⁄° 
e˝_group
 *
gΩ
, c⁄° 
e˝_poöt
 *
±
,

438 
f‹m©
, 
size_t
 *
ﬁí
,

439 *
buf
, 
size_t
 
bÀn
 );

456 
e˝_group_ªad_°rög
–
e˝_group
 *
gΩ
, 
ødix
,

457 c⁄° *
p
, c⁄° *
b
,

458 c⁄° *
gx
, c⁄° *
gy
, c⁄° *
n
);

473 
e˝_u£_known_dp
–
e˝_group
 *
gΩ
, 
e˝_group_id
 
ödex
 );

486 
e˝_és_ªad_group
–
e˝_group
 *
gΩ
, c⁄° **
buf
, 
size_t
 
Àn
 );

499 
e˝_és_wrôe_group
–c⁄° 
e˝_group
 *
gΩ
, 
size_t
 *
ﬁí
,

500 *
buf
, 
size_t
 
bÀn
 );

516 
e˝_add
–c⁄° 
e˝_group
 *
gΩ
, 
e˝_poöt
 *
R
,

517 c⁄° 
e˝_poöt
 *
P
, c⁄°É˝_poöà*
Q
 );

533 
e˝_sub
–c⁄° 
e˝_group
 *
gΩ
, 
e˝_poöt
 *
R
,

534 c⁄° 
e˝_poöt
 *
P
, c⁄°É˝_poöà*
Q
 );

562 
e˝_mul
–
e˝_group
 *
gΩ
, 
e˝_poöt
 *
R
,

563 c⁄° 
mpi
 *
m
, c⁄° 
e˝_poöt
 *
P
,

564 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 );

587 
e˝_check_pubkey
–c⁄° 
e˝_group
 *
gΩ
, c⁄° 
e˝_poöt
 *
±
 );

602 
e˝_check_¥ivkey
–c⁄° 
e˝_group
 *
gΩ
, c⁄° 
mpi
 *
d
 );

620 
e˝_gí_key∑ú
–
e˝_group
 *
gΩ
, 
mpi
 *
d
, 
e˝_poöt
 *
Q
,

621 (*
f_∫g
)(*, *, 
size_t
),

622 *
p_∫g
 );

635 
e˝_gí_key
–
e˝_group_id
 
gΩ_id
, 
e˝_key∑ú
 *
key
,

636 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 );

638 #i‡
deföed
(
POLARSSL_SELF_TEST
)

644 
e˝_£lf_ã°
–
vîbo£
 );

647 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/entropy.h

27 #i‚de‡
POLARSSL_ENTROPY_H


28 
	#POLARSSL_ENTROPY_H


	)

30 
	~<°rög.h
>

32 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

33 
	~"c⁄fig.h
"

35 #ö˛udê
POLARSSL_CONFIG_FILE


38 #i‡
deföed
(
POLARSSL_SHA512_C
Ë&& !deföed(
POLARSSL_ENTROPY_FORCE_SHA256
)

39 
	~"sha512.h
"

40 
	#POLARSSL_ENTROPY_SHA512_ACCUMULATOR


	)

42 #i‡
deföed
(
POLARSSL_SHA256_C
)

43 
	#POLARSSL_ENTROPY_SHA256_ACCUMULATOR


	)

44 
	~"sha256.h
"

48 #i‡
deföed
(
POLARSSL_THREADING_C
)

49 
	~"thªadög.h
"

52 #i‡
deföed
(
POLARSSL_HAVEGE_C
)

53 
	~"havege.h
"

56 
	#POLARSSL_ERR_ENTROPY_SOURCE_FAILED
 -0x003C

	)

57 
	#POLARSSL_ERR_ENTROPY_MAX_SOURCES
 -0x003E

	)

58 
	#POLARSSL_ERR_ENTROPY_NO_SOURCES_DEFINED
 -0x0040

	)

59 
	#POLARSSL_ERR_ENTROPY_FILE_IO_ERROR
 -0x0058

	)

69 #i‡!
deföed
(
ENTROPY_MAX_SOURCES
)

70 
	#ENTROPY_MAX_SOURCES
 20

	)

73 #i‡!
deföed
(
ENTROPY_MAX_GATHER
)

74 
	#ENTROPY_MAX_GATHER
 128

	)

79 #i‡
deföed
(
POLARSSL_ENTROPY_SHA512_ACCUMULATOR
)

80 
	#ENTROPY_BLOCK_SIZE
 64

	)

82 
	#ENTROPY_BLOCK_SIZE
 32

	)

85 
	#ENTROPY_MAX_SEED_SIZE
 1024

	)

86 
	#ENTROPY_SOURCE_MANUAL
 
ENTROPY_MAX_SOURCES


	)

88 #ifde‡
__˝lu•lus


103 (*
f_sour˚_±r
)(*
	td©a
, *
	touçut
, 
	tsize_t
 
	tÀn
,

104 
	tsize_t
 *
	tﬁí
);

111 
f_sour˚_±r
 
f_sour˚
;

112 * 
p_sour˚
;

113 
size_t
 
size
;

114 
size_t
 
thªshﬁd
;

116 
	tsour˚_°©e
;

123 #i‡
deföed
(
POLARSSL_ENTROPY_SHA512_ACCUMULATOR
)

124 
sha512_c⁄ãxt
 
accumuœt‹
;

126 
sha256_c⁄ãxt
 
accumuœt‹
;

128 
sour˚_cou¡
;

129 
sour˚_°©e
 
sour˚
[
ENTROPY_MAX_SOURCES
];

130 #i‡
deföed
(
POLARSSL_HAVEGE_C
)

131 
havege_°©e
 
havege_d©a
;

133 #i‡
deföed
(
POLARSSL_THREADING_C
)

134 
thªadög_muãx_t
 
muãx
;

137 
	tíå›y_c⁄ãxt
;

144 
íå›y_öô
–
íå›y_c⁄ãxt
 *
˘x
 );

151 
íå›y_‰ì
–
íå›y_c⁄ãxt
 *
˘x
 );

165 
íå›y_add_sour˚
–
íå›y_c⁄ãxt
 *
˘x
,

166 
f_sour˚_±r
 
f_sour˚
, *
p_sour˚
,

167 
size_t
 
thªshﬁd
 );

177 
íå›y_g©hî
–
íå›y_c⁄ãxt
 *
˘x
 );

190 
íå›y_func
–*
d©a
, *
ouçut
, 
size_t
 
Àn
 );

202 
íå›y_upd©e_m™uÆ
–
íå›y_c⁄ãxt
 *
˘x
,

203 c⁄° *
d©a
, 
size_t
 
Àn
 );

205 #i‡
deföed
(
POLARSSL_FS_IO
)

216 
íå›y_wrôe_£ed_fûe
–
íå›y_c⁄ãxt
 *
˘x
, c⁄° *
∑th
 );

230 
íå›y_upd©e_£ed_fûe
–
íå›y_c⁄ãxt
 *
˘x
, c⁄° *
∑th
 );

233 #i‡
deföed
(
POLARSSL_SELF_TEST
)

239 
íå›y_£lf_ã°
–
vîbo£
 );

242 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/entropy_poll.h

27 #i‚de‡
POLARSSL_ENTROPY_POLL_H


28 
	#POLARSSL_ENTROPY_POLL_H


	)

30 
	~<°rög.h
>

32 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

33 
	~"c⁄fig.h
"

35 #ö˛udê
POLARSSL_CONFIG_FILE


38 #ifde‡
__˝lu•lus


45 
	#ENTROPY_MIN_PLATFORM
 128

	)

46 
	#ENTROPY_MIN_HAVEGE
 128

	)

47 
	#ENTROPY_MIN_HARDCLOCK
 32

	)

49 #i‡!
deföed
(
POLARSSL_NO_PLATFORM_ENTROPY
)

53 
∂©f‹m_íå›y_pﬁl
–*
d©a
,

54 *
ouçut
, 
size_t
 
Àn
, size_à*
ﬁí
 );

57 #i‡
deföed
(
POLARSSL_HAVEGE_C
)

63 
havege_pﬁl
–*
d©a
,

64 *
ouçut
, 
size_t
 
Àn
, size_à*
ﬁí
 );

67 #i‡
deföed
(
POLARSSL_TIMING_C
)

71 
h¨d˛ock_pﬁl
–*
d©a
,

72 *
ouçut
, 
size_t
 
Àn
, size_à*
ﬁí
 );

75 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/error.h

27 #i‚de‡
POLARSSL_ERROR_H


28 
	#POLARSSL_ERROR_H


	)

30 
	~<°rög.h
>

100 #ifde‡
__˝lu•lus


113 
pﬁ¨s¶_°ªº‹
–
î∫um
, *
buf„r
, 
size_t
 
buÊí
 );

115 #i‡
deföed
(
POLARSSL_ERROR_STRERROR_BC
)

116 
îr‹_°ªº‹
–
î∫um
, *
buf„r
, 
size_t
 
buÊí
 );

119 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/gcm.h

27 #i‚de‡
POLARSSL_GCM_H


28 
	#POLARSSL_GCM_H


	)

30 
	~"cùhî.h
"

32 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

33 
	~<ba£tsd.h
>

34 
UINT32
 
	tuöt32_t
;

35 
UINT64
 
	tuöt64_t
;

37 
	~<°döt.h
>

40 
	#GCM_ENCRYPT
 1

	)

41 
	#GCM_DECRYPT
 0

	)

43 
	#POLARSSL_ERR_GCM_AUTH_FAILED
 -0x0012

	)

44 
	#POLARSSL_ERR_GCM_BAD_INPUT
 -0x0014

	)

46 #ifde‡
__˝lu•lus


54 
cùhî_c⁄ãxt_t
 
cùhî_˘x
;

55 
uöt64_t
 
HL
[16];

56 
uöt64_t
 
HH
[16];

57 
uöt64_t
 
Àn
;

58 
uöt64_t
 
add_Àn
;

59 
ba£_e˘r
[16];

60 
y
[16];

61 
buf
[16];

62 
mode
;

64 
	tgcm_c⁄ãxt
;

76 
gcm_öô
–
gcm_c⁄ãxt
 *
˘x
, 
cùhî_id_t
 
cùhî
, c⁄° *
key
,

77 
keysize
 );

101 
gcm_¸y±_™d_èg
–
gcm_c⁄ãxt
 *
˘x
,

102 
mode
,

103 
size_t
 
Àngth
,

104 c⁄° *
iv
,

105 
size_t
 
iv_Àn
,

106 c⁄° *
add
,

107 
size_t
 
add_Àn
,

108 c⁄° *
öput
,

109 *
ouçut
,

110 
size_t
 
èg_Àn
,

111 *
èg
 );

134 
gcm_auth_de¸y±
–
gcm_c⁄ãxt
 *
˘x
,

135 
size_t
 
Àngth
,

136 c⁄° *
iv
,

137 
size_t
 
iv_Àn
,

138 c⁄° *
add
,

139 
size_t
 
add_Àn
,

140 c⁄° *
èg
,

141 
size_t
 
èg_Àn
,

142 c⁄° *
öput
,

143 *
ouçut
 );

157 
gcm_°¨ts
–
gcm_c⁄ãxt
 *
˘x
,

158 
mode
,

159 c⁄° *
iv
,

160 
size_t
 
iv_Àn
,

161 c⁄° *
add
,

162 
size_t
 
add_Àn
 );

181 
gcm_upd©e
–
gcm_c⁄ãxt
 *
˘x
,

182 
size_t
 
Àngth
,

183 c⁄° *
öput
,

184 *
ouçut
 );

197 
gcm_föish
–
gcm_c⁄ãxt
 *
˘x
,

198 *
èg
,

199 
size_t
 
èg_Àn
 );

206 
gcm_‰ì
–
gcm_c⁄ãxt
 *
˘x
 );

213 
gcm_£lf_ã°
–
vîbo£
 );

215 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/havege.h

27 #i‚de‡
POLARSSL_HAVEGE_H


28 
	#POLARSSL_HAVEGE_H


	)

30 
	~<°rög.h
>

32 
	#COLLECT_SIZE
 1024

	)

34 #ifde‡
__˝lu•lus


43 
PT1
, 
PT2
, 
off£t
[2];

44 
poﬁ
[
COLLECT_SIZE
];

45 
WALK
[8192];

47 
	thavege_°©e
;

54 
havege_öô
–
havege_°©e
 *
hs
 );

61 
havege_‰ì
–
havege_°©e
 *
hs
 );

72 
havege_øndom
–*
p_∫g
, *
ouçut
, 
size_t
 
Àn
 );

74 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/hmac_drbg.h

27 #i‚de‡
POLARSSL_HMAC_DRBG_H


28 
	#POLARSSL_HMAC_DRBG_H


	)

30 
	~"md.h
"

35 
	#POLARSSL_ERR_HMAC_DRBG_REQUEST_TOO_BIG
 -0x0003

	)

36 
	#POLARSSL_ERR_HMAC_DRBG_INPUT_TOO_BIG
 -0x0005

	)

37 
	#POLARSSL_ERR_HMAC_DRBG_FILE_IO_ERROR
 -0x0007

	)

38 
	#POLARSSL_ERR_HMAC_DRBG_ENTROPY_SOURCE_FAILED
 -0x0009

	)

48 #i‡!
deföed
(
POLARSSL_HMAC_DRBG_RESEED_INTERVAL
)

49 
	#POLARSSL_HMAC_DRBG_RESEED_INTERVAL
 10000

	)

52 #i‡!
deföed
(
POLARSSL_HMAC_DRBG_MAX_INPUT
)

53 
	#POLARSSL_HMAC_DRBG_MAX_INPUT
 256

	)

56 #i‡!
deföed
(
POLARSSL_HMAC_DRBG_MAX_REQUEST
)

57 
	#POLARSSL_HMAC_DRBG_MAX_REQUEST
 1024

	)

60 #i‡!
deföed
(
POLARSSL_HMAC_DRBG_MAX_SEED_INPUT
)

61 
	#POLARSSL_HMAC_DRBG_MAX_SEED_INPUT
 384

	)

66 
	#POLARSSL_HMAC_DRBG_PR_OFF
 0

	)

67 
	#POLARSSL_HMAC_DRBG_PR_ON
 1

	)

69 #ifde‡
__˝lu•lus


80 
md_c⁄ãxt_t
 
md_˘x
;

81 
V
[
POLARSSL_MD_MAX_SIZE
];

82 
ª£ed_cou¡î
;

85 
size_t
 
íå›y_Àn
;

86 
¥edi˘i⁄_ªsi°™˚
;

88 
ª£ed_öãrvÆ
;

91 (*
f_íå›y
)(*, *, 
size_t
);

92 *
p_íå›y
;

93 } 
	thmac_drbg_c⁄ãxt
;

118 
hmac_drbg_öô
–
hmac_drbg_c⁄ãxt
 *
˘x
,

119 c⁄° 
md_öfo_t
 * 
md_öfo
,

120 (*
f_íå›y
)(*, *, 
size_t
),

121 *
p_íå›y
,

122 c⁄° *
cu°om
,

123 
size_t
 
Àn
 );

138 
hmac_drbg_öô_buf
–
hmac_drbg_c⁄ãxt
 *
˘x
,

139 c⁄° 
md_öfo_t
 * 
md_öfo
,

140 c⁄° *
d©a
, 
size_t
 
d©a_Àn
 );

151 
hmac_drbg_£t_¥edi˘i⁄_ªsi°™˚
–
hmac_drbg_c⁄ãxt
 *
˘x
,

152 
ªsi°™˚
 );

162 
hmac_drbg_£t_íå›y_Àn
–
hmac_drbg_c⁄ãxt
 *
˘x
,

163 
size_t
 
Àn
 );

172 
hmac_drbg_£t_ª£ed_öãrvÆ
–
hmac_drbg_c⁄ãxt
 *
˘x
,

173 
öãrvÆ
 );

185 
hmac_drbg_upd©e
–
hmac_drbg_c⁄ãxt
 *
˘x
,

186 c⁄° *
addôi⁄Æ
, 
size_t
 
add_Àn
 );

198 
hmac_drbg_ª£ed
–
hmac_drbg_c⁄ãxt
 *
˘x
,

199 c⁄° *
addôi⁄Æ
, 
size_t
 
Àn
 );

217 
hmac_drbg_øndom_wôh_add
–*
p_∫g
,

218 *
ouçut
, 
size_t
 
ouçut_Àn
,

219 c⁄° *
addôi⁄Æ
,

220 
size_t
 
add_Àn
 );

235 
hmac_drbg_øndom
–*
p_∫g
, *
ouçut
, 
size_t
 
out_Àn
 );

242 
hmac_drbg_‰ì
–
hmac_drbg_c⁄ãxt
 *
˘x
 );

244 #i‡
deföed
(
POLARSSL_FS_IO
)

254 
hmac_drbg_wrôe_£ed_fûe
–
hmac_drbg_c⁄ãxt
 *
˘x
, c⁄° *
∑th
 );

267 
hmac_drbg_upd©e_£ed_fûe
–
hmac_drbg_c⁄ãxt
 *
˘x
, c⁄° *
∑th
 );

271 #i‡
deföed
(
POLARSSL_SELF_TEST
)

277 
hmac_drbg_£lf_ã°
–
vîbo£
 );

280 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/md.h

29 #i‚de‡
POLARSSL_MD_H


30 
	#POLARSSL_MD_H


	)

32 
	~<°rög.h
>

34 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
ölöe
)

35 
	#ölöe
 
_ölöe


	)

37 #i‡
deföed
(
__ARMCC_VERSION
Ë&& !deföed(
ölöe
)

38 
	#ölöe
 
__ölöe


	)

42 
	#POLARSSL_ERR_MD_FEATURE_UNAVAILABLE
 -0x5080

	)

43 
	#POLARSSL_ERR_MD_BAD_INPUT_DATA
 -0x5100

	)

44 
	#POLARSSL_ERR_MD_ALLOC_FAILED
 -0x5180

	)

45 
	#POLARSSL_ERR_MD_FILE_IO_ERROR
 -0x5200

	)

47 #ifde‡
__˝lu•lus


52 
POLARSSL_MD_NONE
=0,

53 
POLARSSL_MD_MD2
,

54 
POLARSSL_MD_MD4
,

55 
POLARSSL_MD_MD5
,

56 
POLARSSL_MD_SHA1
,

57 
POLARSSL_MD_SHA224
,

58 
POLARSSL_MD_SHA256
,

59 
POLARSSL_MD_SHA384
,

60 
POLARSSL_MD_SHA512
,

61 
POLARSSL_MD_RIPEMD160
,

62 } 
	tmd_ty≥_t
;

64 #i‡
deföed
(
POLARSSL_SHA512_C
)

65 
	#POLARSSL_MD_MAX_SIZE
 64

	)

67 
	#POLARSSL_MD_MAX_SIZE
 32

	)

76 
md_ty≥_t
 
ty≥
;

79 c⁄° * 
«me
;

82 
size
;

85 (*
°¨ts_func
)–*
˘x
 );

88 (*
upd©e_func
)–*
˘x
, c⁄° *
öput
, 
size_t
 
ûí
 );

91 (*
föish_func
)–*
˘x
, *
ouçut
 );

94 (*
dige°_func
)–c⁄° *
öput
, 
size_t
 
ûí
,

95 *
ouçut
 );

98 (*
fûe_func
)–c⁄° *
∑th
, *
ouçut
 );

101 (*
hmac_°¨ts_func
)–*
˘x
, c⁄° *
key
,

102 
size_t
 
keyÀn
 );

105 (*
hmac_upd©e_func
)–*
˘x
, c⁄° *
öput
,

106 
size_t
 
ûí
 );

109 (*
hmac_föish_func
)–*
˘x
, *
ouçut
);

112 (*
hmac_ª£t_func
)–*
˘x
 );

115 (*
hmac_func
)–c⁄° *
key
, 
size_t
 
keyÀn
,

116 c⁄° *
öput
, 
size_t
 
ûí
,

117 *
ouçut
 );

120 * (*
˘x_Æloc_func
)( );

123 (*
˘x_‰ì_func
)–*
˘x
 );

126 (*
¥o˚ss_func
)–*
˘x
, c⁄° *
öput
 );

127 } 
	tmd_öfo_t
;

134 c⁄° 
md_öfo_t
 *
md_öfo
;

137 *
md_˘x
;

138 } 
	tmd_c⁄ãxt_t
;

140 
	#MD_CONTEXT_T_INIT
 { \

141 
NULL
, \

142 
NULL
, \

143 }

	)

151 c⁄° *
md_li°
( );

162 c⁄° 
md_öfo_t
 *
md_öfo_‰om_°rög
–c⁄° *
md_«me
 );

173 c⁄° 
md_öfo_t
 *
md_öfo_‰om_ty≥
–
md_ty≥_t
 
md_ty≥
 );

178 
md_öô
–
md_c⁄ãxt_t
 *
˘x
 );

185 
md_‰ì
–
md_c⁄ãxt_t
 *
˘x
 );

204 
md_öô_˘x
–
md_c⁄ãxt_t
 *
˘x
, c⁄° 
md_öfo_t
 *
md_öfo
 );

216 
md_‰ì_˘x
–
md_c⁄ãxt_t
 *
˘x
 );

225 
ölöe
 
md_gë_size
–c⁄° 
md_öfo_t
 *
md_öfo
 )

227 if–
md_öfo
 =
NULL
 )

230  
md_öfo
->
size
;

240 
ölöe
 
md_ty≥_t
 
md_gë_ty≥
–c⁄° 
md_öfo_t
 *
md_öfo
 )

242 if–
md_öfo
 =
NULL
 )

243 –
POLARSSL_MD_NONE
 );

245  
md_öfo
->
ty≥
;

255 
ölöe
 c⁄° *
md_gë_«me
–c⁄° 
md_öfo_t
 *
md_öfo
 )

257 if–
md_öfo
 =
NULL
 )

258 –
NULL
 );

260  
md_öfo
->
«me
;

271 
md_°¨ts
–
md_c⁄ãxt_t
 *
˘x
 );

283 
md_upd©e
–
md_c⁄ãxt_t
 *
˘x
, c⁄° *
öput
, 
size_t
 
ûí
 );

294 
md_föish
–
md_c⁄ãxt_t
 *
˘x
, *
ouçut
 );

307 
md
–c⁄° 
md_öfo_t
 *
md_öfo
, c⁄° *
öput
, 
size_t
 
ûí
,

308 *
ouçut
 );

321 
md_fûe
–c⁄° 
md_öfo_t
 *
md_öfo
, c⁄° *
∑th
,

322 *
ouçut
 );

334 
md_hmac_°¨ts
–
md_c⁄ãxt_t
 *
˘x
, c⁄° *
key
,

335 
size_t
 
keyÀn
 );

347 
md_hmac_upd©e
–
md_c⁄ãxt_t
 *
˘x
, c⁄° *
öput
,

348 
size_t
 
ûí
 );

359 
md_hmac_föish
–
md_c⁄ãxt_t
 *
˘x
, *
ouçut
);

369 
md_hmac_ª£t
–
md_c⁄ãxt_t
 *
˘x
 );

384 
md_hmac
–c⁄° 
md_öfo_t
 *
md_öfo
, c⁄° *
key
, 
size_t
 
keyÀn
,

385 c⁄° *
öput
, 
size_t
 
ûí
,

386 *
ouçut
 );

389 
md_¥o˚ss
–
md_c⁄ãxt_t
 *
˘x
, c⁄° *
d©a
 );

391 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/md2.h

27 #i‚de‡
POLARSSL_MD2_H


28 
	#POLARSSL_MD2_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~<°rög.h
>

38 
	#POLARSSL_ERR_MD2_FILE_IO_ERROR
 -0x0070

	)

40 #i‡!
deföed
(
POLARSSL_MD2_ALT
)

44 #ifde‡
__˝lu•lus


53 
cksum
[16];

54 
°©e
[48];

55 
buf„r
[16];

57 
ùad
[16];

58 
›ad
[16];

59 
size_t
 
À·
;

61 
	tmd2_c⁄ãxt
;

68 
md2_öô
–
md2_c⁄ãxt
 *
˘x
 );

75 
md2_‰ì
–
md2_c⁄ãxt
 *
˘x
 );

82 
md2_°¨ts
–
md2_c⁄ãxt
 *
˘x
 );

91 
md2_upd©e
–
md2_c⁄ãxt
 *
˘x
, c⁄° *
öput
, 
size_t
 
ûí
 );

99 
md2_föish
–
md2_c⁄ãxt
 *
˘x
, 
ouçut
[16] );

101 #ifde‡
__˝lu•lus


106 
	~"md2_Æt.h
"

109 #ifde‡
__˝lu•lus


120 
md2
–c⁄° *
öput
, 
size_t
 
ûí
, 
ouçut
[16] );

130 
md2_fûe
–c⁄° *
∑th
, 
ouçut
[16] );

139 
md2_hmac_°¨ts
–
md2_c⁄ãxt
 *
˘x
, c⁄° *
key
,

140 
size_t
 
keyÀn
 );

149 
md2_hmac_upd©e
–
md2_c⁄ãxt
 *
˘x
, c⁄° *
öput
,

150 
size_t
 
ûí
 );

158 
md2_hmac_föish
–
md2_c⁄ãxt
 *
˘x
, 
ouçut
[16] );

165 
md2_hmac_ª£t
–
md2_c⁄ãxt
 *
˘x
 );

176 
md2_hmac
–c⁄° *
key
, 
size_t
 
keyÀn
,

177 c⁄° *
öput
, 
size_t
 
ûí
,

178 
ouçut
[16] );

185 
md2_£lf_ã°
–
vîbo£
 );

188 
md2_¥o˚ss
–
md2_c⁄ãxt
 *
˘x
 );

190 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/md4.h

27 #i‚de‡
POLARSSL_MD4_H


28 
	#POLARSSL_MD4_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~<°rög.h
>

38 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

39 
	~<ba£tsd.h
>

40 
UINT32
 
	tuöt32_t
;

42 
	~<öây≥s.h
>

45 
	#POLARSSL_ERR_MD4_FILE_IO_ERROR
 -0x0072

	)

47 #i‡!
deföed
(
POLARSSL_MD4_ALT
)

51 #ifde‡
__˝lu•lus


60 
uöt32_t
 
tŸÆ
[2];

61 
uöt32_t
 
°©e
[4];

62 
buf„r
[64];

64 
ùad
[64];

65 
›ad
[64];

67 
	tmd4_c⁄ãxt
;

74 
md4_öô
–
md4_c⁄ãxt
 *
˘x
 );

81 
md4_‰ì
–
md4_c⁄ãxt
 *
˘x
 );

88 
md4_°¨ts
–
md4_c⁄ãxt
 *
˘x
 );

97 
md4_upd©e
–
md4_c⁄ãxt
 *
˘x
, c⁄° *
öput
, 
size_t
 
ûí
 );

105 
md4_föish
–
md4_c⁄ãxt
 *
˘x
, 
ouçut
[16] );

107 #ifde‡
__˝lu•lus


112 
	~"md4_Æt.h
"

115 #ifde‡
__˝lu•lus


126 
md4
–c⁄° *
öput
, 
size_t
 
ûí
, 
ouçut
[16] );

136 
md4_fûe
–c⁄° *
∑th
, 
ouçut
[16] );

145 
md4_hmac_°¨ts
–
md4_c⁄ãxt
 *
˘x
, c⁄° *
key
,

146 
size_t
 
keyÀn
 );

155 
md4_hmac_upd©e
–
md4_c⁄ãxt
 *
˘x
, c⁄° *
öput
,

156 
size_t
 
ûí
 );

164 
md4_hmac_föish
–
md4_c⁄ãxt
 *
˘x
, 
ouçut
[16] );

171 
md4_hmac_ª£t
–
md4_c⁄ãxt
 *
˘x
 );

182 
md4_hmac
–c⁄° *
key
, 
size_t
 
keyÀn
,

183 c⁄° *
öput
, 
size_t
 
ûí
,

184 
ouçut
[16] );

191 
md4_£lf_ã°
–
vîbo£
 );

194 
md4_¥o˚ss
–
md4_c⁄ãxt
 *
˘x
, c⁄° 
d©a
[64] );

196 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/md5.h

27 #i‚de‡
POLARSSL_MD5_H


28 
	#POLARSSL_MD5_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~<°rög.h
>

38 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

39 
	~<ba£tsd.h
>

40 
UINT32
 
	tuöt32_t
;

42 
	~<öây≥s.h
>

45 
	#POLARSSL_ERR_MD5_FILE_IO_ERROR
 -0x0074

	)

47 #i‡!
deföed
(
POLARSSL_MD5_ALT
)

51 #ifde‡
__˝lu•lus


60 
uöt32_t
 
tŸÆ
[2];

61 
uöt32_t
 
°©e
[4];

62 
buf„r
[64];

64 
ùad
[64];

65 
›ad
[64];

67 
	tmd5_c⁄ãxt
;

74 
md5_öô
–
md5_c⁄ãxt
 *
˘x
 );

81 
md5_‰ì
–
md5_c⁄ãxt
 *
˘x
 );

88 
md5_°¨ts
–
md5_c⁄ãxt
 *
˘x
 );

97 
md5_upd©e
–
md5_c⁄ãxt
 *
˘x
, c⁄° *
öput
, 
size_t
 
ûí
 );

105 
md5_föish
–
md5_c⁄ãxt
 *
˘x
, 
ouçut
[16] );

108 
md5_¥o˚ss
–
md5_c⁄ãxt
 *
˘x
, c⁄° 
d©a
[64] );

110 #ifde‡
__˝lu•lus


115 
	~"md5_Æt.h
"

118 #ifde‡
__˝lu•lus


129 
md5
–c⁄° *
öput
, 
size_t
 
ûí
, 
ouçut
[16] );

139 
md5_fûe
–c⁄° *
∑th
, 
ouçut
[16] );

148 
md5_hmac_°¨ts
–
md5_c⁄ãxt
 *
˘x
,

149 c⁄° *
key
, 
size_t
 
keyÀn
 );

158 
md5_hmac_upd©e
–
md5_c⁄ãxt
 *
˘x
,

159 c⁄° *
öput
, 
size_t
 
ûí
 );

167 
md5_hmac_föish
–
md5_c⁄ãxt
 *
˘x
, 
ouçut
[16] );

174 
md5_hmac_ª£t
–
md5_c⁄ãxt
 *
˘x
 );

185 
md5_hmac
–c⁄° *
key
, 
size_t
 
keyÀn
,

186 c⁄° *
öput
, 
size_t
 
ûí
,

187 
ouçut
[16] );

194 
md5_£lf_ã°
–
vîbo£
 );

196 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/md_wrap.h

29 #i‚de‡
POLARSSL_MD_WRAP_H


30 
	#POLARSSL_MD_WRAP_H


	)

32 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

33 
	~"c⁄fig.h
"

35 #ö˛udê
POLARSSL_CONFIG_FILE


37 
	~"md.h
"

39 #ifde‡
__˝lu•lus


43 #i‡
deföed
(
POLARSSL_MD2_C
)

44 c⁄° 
md_öfo_t
 
md2_öfo
;

46 #i‡
deföed
(
POLARSSL_MD4_C
)

47 c⁄° 
md_öfo_t
 
md4_öfo
;

49 #i‡
deföed
(
POLARSSL_MD5_C
)

50 c⁄° 
md_öfo_t
 
md5_öfo
;

52 #i‡
deföed
(
POLARSSL_RIPEMD160_C
)

53 c⁄° 
md_öfo_t
 
rùemd160_öfo
;

55 #i‡
deföed
(
POLARSSL_SHA1_C
)

56 c⁄° 
md_öfo_t
 
sha1_öfo
;

58 #i‡
deföed
(
POLARSSL_SHA256_C
)

59 c⁄° 
md_öfo_t
 
sha224_öfo
;

60 c⁄° 
md_öfo_t
 
sha256_öfo
;

62 #i‡
deföed
(
POLARSSL_SHA512_C
)

63 c⁄° 
md_öfo_t
 
sha384_öfo
;

64 c⁄° 
md_öfo_t
 
sha512_öfo
;

67 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/memory.h

27 #i‚de‡
POLARSSL_MEMORY_H


28 
	#POLARSSL_MEMORY_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~<°dlib.h
>

38 #i‡
deföed
(
POLARSSL_MEMORY_C
Ë&& !deföed(
POLARSSL_PLATFORM_MEMORY
)

39 
	#POLARSSL_PLATFORM_MEMORY


	)

42 
	~"∂©f‹m.h
"

43 
	~"mem‹y_buf„r_Æloc.h
"

45 
mem‹y_£t_own
–* (*
mÆloc_func
)–
size_t
 ),

46 (*
‰ì_func
)( * ) )

48  
	`∂©f‹m_£t_mÆloc_‰ì
–
mÆloc_func
, 
‰ì_func
 );

49 
	}
}

	@polarssl/include/polarssl/memory_buffer_alloc.h

27 #i‚de‡
POLARSSL_MEMORY_BUFFER_ALLOC_H


28 
	#POLARSSL_MEMORY_BUFFER_ALLOC_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~<°dlib.h
>

46 #i‡!
deföed
(
POLARSSL_MEMORY_ALIGN_MULTIPLE
)

47 
	#POLARSSL_MEMORY_ALIGN_MULTIPLE
 4

	)

52 
	#MEMORY_VERIFY_NONE
 0

	)

53 
	#MEMORY_VERIFY_ALLOC
 (1 << 0)

	)

54 
	#MEMORY_VERIFY_FREE
 (1 << 1)

	)

55 
	#MEMORY_VERIFY_ALWAYS
 (
MEMORY_VERIFY_ALLOC
 | 
MEMORY_VERIFY_FREE
)

	)

57 #ifde‡
__˝lu•lus


78 
mem‹y_buf„r_Æloc_öô
–*
buf
, 
size_t
 
Àn
 );

83 
mem‹y_buf„r_Æloc_‰ì
( );

93 
mem‹y_buf„r_£t_vîify
–
vîify
 );

95 #i‡
deföed
(
POLARSSL_MEMORY_DEBUG
)

102 
mem‹y_buf„r_Æloc_°©us
( );

116 
mem‹y_buf„r_Æloc_vîify
( );

118 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/net.h

27 #i‚de‡
POLARSSL_NET_H


28 
	#POLARSSL_NET_H


	)

30 
	~<°rög.h
>

32 
	#POLARSSL_ERR_NET_UNKNOWN_HOST
 -0x0056

	)

33 
	#POLARSSL_ERR_NET_SOCKET_FAILED
 -0x0042

	)

34 
	#POLARSSL_ERR_NET_CONNECT_FAILED
 -0x0044

	)

35 
	#POLARSSL_ERR_NET_BIND_FAILED
 -0x0046

	)

36 
	#POLARSSL_ERR_NET_LISTEN_FAILED
 -0x0048

	)

37 
	#POLARSSL_ERR_NET_ACCEPT_FAILED
 -0x004A

	)

38 
	#POLARSSL_ERR_NET_RECV_FAILED
 -0x004C

	)

39 
	#POLARSSL_ERR_NET_SEND_FAILED
 -0x004E

	)

40 
	#POLARSSL_ERR_NET_CONN_RESET
 -0x0050

	)

41 
	#POLARSSL_ERR_NET_WANT_READ
 -0x0052

	)

42 
	#POLARSSL_ERR_NET_WANT_WRITE
 -0x0054

	)

44 
	#POLARSSL_NET_LISTEN_BACKLOG
 10

	)

46 #ifde‡
__˝lu•lus


62 
√t_c⁄√˘
–*
fd
, c⁄° *
ho°
, 
p‹t
 );

77 
√t_böd
–*
fd
, c⁄° *
böd_ù
, 
p‹t
 );

91 
√t_ac˚±
–
böd_fd
, *
˛õ¡_fd
, *
˛õ¡_ù
 );

100 
√t_£t_block
–
fd
 );

109 
√t_£t_n⁄block
–
fd
 );

119 
√t_u¶ìp
–
u£c
 );

133 
√t_ªcv
–*
˘x
, *
buf
, 
size_t
 
Àn
 );

147 
√t_£nd
–*
˘x
, c⁄° *
buf
, 
size_t
 
Àn
 );

154 
√t_˛o£
–
fd
 );

156 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/oid.h

27 #i‚de‡
POLARSSL_OID_H


28 
	#POLARSSL_OID_H


	)

30 
	~<°rög.h
>

31 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

32 
	~"c⁄fig.h
"

34 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~"a¢1.h
"

37 
	~"pk.h
"

38 #i‡
deföed
(
POLARSSL_CIPHER_C
)

39 
	~"cùhî.h
"

42 #i‡
deföed
(
POLARSSL_MD_C
)

43 
	~"md.h
"

46 #i‡
deföed
(
POLARSSL_X509_USE_C
Ë|| deföed(
POLARSSL_X509_CREATE_C
)

47 
	~"x509.h
"

50 
	#POLARSSL_ERR_OID_NOT_FOUND
 -0x002E

	)

51 
	#POLARSSL_ERR_OID_BUF_TOO_SMALL
 -0x000B

	)

56 
	#OID_ISO_MEMBER_BODIES
 "\x2a"

	)

57 
	#OID_ISO_IDENTIFIED_ORG
 "\x2b"

	)

58 
	#OID_ISO_CCITT_DS
 "\x55"

	)

59 
	#OID_ISO_ITU_COUNTRY
 "\x60"

	)

64 
	#OID_COUNTRY_US
 "\x86\x48"

	)

65 
	#OID_ORG_RSA_DATA_SECURITY
 "\x86\xf7\x0d"

	)

66 
	#OID_RSA_COMPANY
 
OID_ISO_MEMBER_BODIES
 
OID_COUNTRY_US
 \

67 
OID_ORG_RSA_DATA_SECURITY


	)

68 
	#OID_ORG_ANSI_X9_62
 "\x˚\x3d"

	)

69 
	#OID_ANSI_X9_62
 
OID_ISO_MEMBER_BODIES
 
OID_COUNTRY_US
 \

70 
OID_ORG_ANSI_X9_62


	)

75 
	#OID_ORG_DOD
 "\x06"

	)

76 
	#OID_ORG_OIW
 "\x0e"

	)

77 
	#OID_OIW_SECSIG
 
OID_ORG_OIW
 "\x03"

	)

78 
	#OID_OIW_SECSIG_ALG
 
OID_OIW_SECSIG
 "\x02"

	)

79 
	#OID_OIW_SECSIG_SHA1
 
OID_OIW_SECSIG_ALG
 "\x1a"

	)

80 
	#OID_ORG_CERTICOM
 "\x81\x04"

	)

81 
	#OID_CERTICOM
 
OID_ISO_IDENTIFIED_ORG
 
OID_ORG_CERTICOM


	)

82 
	#OID_ORG_TELETRUST
 "\x24"

	)

83 
	#OID_TELETRUST
 
OID_ISO_IDENTIFIED_ORG
 
OID_ORG_TELETRUST


	)

88 
	#OID_ORGANIZATION
 "\x01"

	)

89 
	#OID_ISO_ITU_US_ORG
 
OID_ISO_ITU_COUNTRY
 
OID_COUNTRY_US
 
OID_ORGANIZATION


	)

91 
	#OID_ORG_GOV
 "\x65"

	)

92 
	#OID_GOV
 
OID_ISO_ITU_US_ORG
 
OID_ORG_GOV


	)

94 
	#OID_ORG_NETSCAPE
 "\x86\xF8\x42"

	)

95 
	#OID_NETSCAPE
 
OID_ISO_ITU_US_ORG
 
OID_ORG_NETSCAPE


	)

98 
	#OID_ID_CE
 
OID_ISO_CCITT_DS
 "\x1D"

	)

105 
	#OID_PKIX
 
OID_ISO_IDENTIFIED_ORG
 
OID_ORG_DOD
 "\x01\x05\x05\x07"

	)

110 
	#OID_AT
 
OID_ISO_CCITT_DS
 "\x04"

	)

111 
	#OID_AT_CN
 
OID_AT
 "\x03"

	)

112 
	#OID_AT_SUR_NAME
 
OID_AT
 "\x04"

	)

113 
	#OID_AT_SERIAL_NUMBER
 
OID_AT
 "\x05"

	)

114 
	#OID_AT_COUNTRY
 
OID_AT
 "\x06"

	)

115 
	#OID_AT_LOCALITY
 
OID_AT
 "\x07"

	)

116 
	#OID_AT_STATE
 
OID_AT
 "\x08"

	)

117 
	#OID_AT_ORGANIZATION
 
OID_AT
 "\x0A"

	)

118 
	#OID_AT_ORG_UNIT
 
OID_AT
 "\x0B"

	)

119 
	#OID_AT_TITLE
 
OID_AT
 "\x0C"

	)

120 
	#OID_AT_POSTAL_ADDRESS
 
OID_AT
 "\x10"

	)

121 
	#OID_AT_POSTAL_CODE
 
OID_AT
 "\x11"

	)

122 
	#OID_AT_GIVEN_NAME
 
OID_AT
 "\x2A"

	)

123 
	#OID_AT_INITIALS
 
OID_AT
 "\x2B"

	)

124 
	#OID_AT_GENERATION_QUALIFIER
 
OID_AT
 "\x2C"

	)

125 
	#OID_AT_DN_QUALIFIER
 
OID_AT
 "\x2E"

	)

126 
	#OID_AT_PSEUDONYM
 
OID_AT
 "\x41"

	)

128 
	#OID_DOMAIN_COMPONENT
 "\x09\x92\x26\x89\x93\xF2\x2C\x64\x01\x19"

	)

133 
	#OID_AUTHORITY_KEY_IDENTIFIER
 
OID_ID_CE
 "\x23"

	)

134 
	#OID_SUBJECT_KEY_IDENTIFIER
 
OID_ID_CE
 "\x0E"

	)

135 
	#OID_KEY_USAGE
 
OID_ID_CE
 "\x0F"

	)

136 
	#OID_CERTIFICATE_POLICIES
 
OID_ID_CE
 "\x20"

	)

137 
	#OID_POLICY_MAPPINGS
 
OID_ID_CE
 "\x21"

	)

138 
	#OID_SUBJECT_ALT_NAME
 
OID_ID_CE
 "\x11"

	)

139 
	#OID_ISSUER_ALT_NAME
 
OID_ID_CE
 "\x12"

	)

140 
	#OID_SUBJECT_DIRECTORY_ATTRS
 
OID_ID_CE
 "\x09"

	)

141 
	#OID_BASIC_CONSTRAINTS
 
OID_ID_CE
 "\x13"

	)

142 
	#OID_NAME_CONSTRAINTS
 
OID_ID_CE
 "\x1E"

	)

143 
	#OID_POLICY_CONSTRAINTS
 
OID_ID_CE
 "\x24"

	)

144 
	#OID_EXTENDED_KEY_USAGE
 
OID_ID_CE
 "\x25"

	)

145 
	#OID_CRL_DISTRIBUTION_POINTS
 
OID_ID_CE
 "\x1F"

	)

146 
	#OID_INIHIBIT_ANYPOLICY
 
OID_ID_CE
 "\x36"

	)

147 
	#OID_FRESHEST_CRL
 
OID_ID_CE
 "\x2E"

	)

152 
	#OID_NS_CERT
 
OID_NETSCAPE
 "\x01"

	)

153 
	#OID_NS_CERT_TYPE
 
OID_NS_CERT
 "\x01"

	)

154 
	#OID_NS_BASE_URL
 
OID_NS_CERT
 "\x02"

	)

155 
	#OID_NS_REVOCATION_URL
 
OID_NS_CERT
 "\x03"

	)

156 
	#OID_NS_CA_REVOCATION_URL
 
OID_NS_CERT
 "\x04"

	)

157 
	#OID_NS_RENEWAL_URL
 
OID_NS_CERT
 "\x07"

	)

158 
	#OID_NS_CA_POLICY_URL
 
OID_NS_CERT
 "\x08"

	)

159 
	#OID_NS_SSL_SERVER_NAME
 
OID_NS_CERT
 "\x0C"

	)

160 
	#OID_NS_COMMENT
 
OID_NS_CERT
 "\x0D"

	)

161 
	#OID_NS_DATA_TYPE
 
OID_NETSCAPE
 "\x02"

	)

162 
	#OID_NS_CERT_SEQUENCE
 
OID_NS_DATA_TYPE
 "\x05"

	)

167 
	#OID_PRIVATE_KEY_USAGE_PERIOD
 
OID_ID_CE
 "\x10"

	)

168 
	#OID_CRL_NUMBER
 
OID_ID_CE
 "\x14"

	)

173 
	#OID_ANY_EXTENDED_KEY_USAGE
 
OID_EXTENDED_KEY_USAGE
 "\x00"

	)

175 
	#OID_KP
 
OID_PKIX
 "\x03"

	)

176 
	#OID_SERVER_AUTH
 
OID_KP
 "\x01"

	)

177 
	#OID_CLIENT_AUTH
 
OID_KP
 "\x02"

	)

178 
	#OID_CODE_SIGNING
 
OID_KP
 "\x03"

	)

179 
	#OID_EMAIL_PROTECTION
 
OID_KP
 "\x04"

	)

180 
	#OID_TIME_STAMPING
 
OID_KP
 "\x08"

	)

181 
	#OID_OCSP_SIGNING
 
OID_KP
 "\x09"

	)

187 
	#OID_PKCS
 
OID_RSA_COMPANY
 "\x01"

	)

188 
	#OID_PKCS1
 
OID_PKCS
 "\x01"

	)

189 
	#OID_PKCS5
 
OID_PKCS
 "\x05"

	)

190 
	#OID_PKCS9
 
OID_PKCS
 "\x09"

	)

191 
	#OID_PKCS12
 
OID_PKCS
 "\x0c"

	)

196 
	#OID_PKCS1_RSA
 
OID_PKCS1
 "\x01"

	)

197 
	#OID_PKCS1_MD2
 
OID_PKCS1
 "\x02"

	)

198 
	#OID_PKCS1_MD4
 
OID_PKCS1
 "\x03"

	)

199 
	#OID_PKCS1_MD5
 
OID_PKCS1
 "\x04"

	)

200 
	#OID_PKCS1_SHA1
 
OID_PKCS1
 "\x05"

	)

201 
	#OID_PKCS1_SHA224
 
OID_PKCS1
 "\x0e"

	)

202 
	#OID_PKCS1_SHA256
 
OID_PKCS1
 "\x0b"

	)

203 
	#OID_PKCS1_SHA384
 
OID_PKCS1
 "\x0c"

	)

204 
	#OID_PKCS1_SHA512
 
OID_PKCS1
 "\x0d"

	)

206 
	#OID_RSA_SHA_OBS
 "\x2B\x0E\x03\x02\x1D"

	)

208 
	#OID_PKCS9_EMAIL
 
OID_PKCS9
 "\x01"

	)

211 
	#OID_RSASSA_PSS
 
OID_PKCS1
 "\x0a"

	)

212 
	#OID_MGF1
 
OID_PKCS1
 "\x08"

	)

217 
	#OID_DIGEST_ALG_MD2
 
OID_RSA_COMPANY
 "\x02\x02"

	)

218 
	#OID_DIGEST_ALG_MD4
 
OID_RSA_COMPANY
 "\x02\x04"

	)

219 
	#OID_DIGEST_ALG_MD5
 
OID_RSA_COMPANY
 "\x02\x05"

	)

220 
	#OID_DIGEST_ALG_SHA1
 
OID_ISO_IDENTIFIED_ORG
 
OID_OIW_SECSIG_SHA1


	)

221 
	#OID_DIGEST_ALG_SHA224
 
OID_GOV
 "\x03\x04\x02\x04"

	)

222 
	#OID_DIGEST_ALG_SHA256
 
OID_GOV
 "\x03\x04\x02\x01"

	)

224 
	#OID_DIGEST_ALG_SHA384
 
OID_GOV
 "\x03\x04\x02\x02"

	)

226 
	#OID_DIGEST_ALG_SHA512
 
OID_GOV
 "\x03\x04\x02\x03"

	)

228 
	#OID_HMAC_SHA1
 
OID_RSA_COMPANY
 "\x02\x07"

	)

233 
	#OID_DES_CBC
 
OID_ISO_IDENTIFIED_ORG
 
OID_OIW_SECSIG_ALG
 "\x07"

	)

234 
	#OID_DES_EDE3_CBC
 
OID_RSA_COMPANY
 "\x03\x07"

	)

239 
	#OID_PKCS5_PBKDF2
 
OID_PKCS5
 "\x0c"

	)

240 
	#OID_PKCS5_PBES2
 
OID_PKCS5
 "\x0d"

	)

241 
	#OID_PKCS5_PBMAC1
 
OID_PKCS5
 "\x0e"

	)

246 
	#OID_PKCS5_PBE_MD2_DES_CBC
 
OID_PKCS5
 "\x01"

	)

247 
	#OID_PKCS5_PBE_MD2_RC2_CBC
 
OID_PKCS5
 "\x04"

	)

248 
	#OID_PKCS5_PBE_MD5_DES_CBC
 
OID_PKCS5
 "\x03"

	)

249 
	#OID_PKCS5_PBE_MD5_RC2_CBC
 
OID_PKCS5
 "\x06"

	)

250 
	#OID_PKCS5_PBE_SHA1_DES_CBC
 
OID_PKCS5
 "\x0a"

	)

251 
	#OID_PKCS5_PBE_SHA1_RC2_CBC
 
OID_PKCS5
 "\x0b"

	)

256 
	#OID_PKCS9_CSR_EXT_REQ
 
OID_PKCS9
 "\x0e"

	)

261 
	#OID_PKCS12_PBE
 
OID_PKCS12
 "\x01"

	)

263 
	#OID_PKCS12_PBE_SHA1_RC4_128
 
OID_PKCS12_PBE
 "\x01"

	)

264 
	#OID_PKCS12_PBE_SHA1_RC4_40
 
OID_PKCS12_PBE
 "\x02"

	)

265 
	#OID_PKCS12_PBE_SHA1_DES3_EDE_CBC
 
OID_PKCS12_PBE
 "\x03"

	)

266 
	#OID_PKCS12_PBE_SHA1_DES2_EDE_CBC
 
OID_PKCS12_PBE
 "\x04"

	)

267 
	#OID_PKCS12_PBE_SHA1_RC2_128_CBC
 
OID_PKCS12_PBE
 "\x05"

	)

268 
	#OID_PKCS12_PBE_SHA1_RC2_40_CBC
 
OID_PKCS12_PBE
 "\x06"

	)

276 
	#OID_EC_ALG_UNRESTRICTED
 
OID_ANSI_X9_62
 "\x02\01"

	)

281 
	#OID_EC_ALG_ECDH
 
OID_CERTICOM
 "\x01\x0c"

	)

289 
	#OID_EC_GRP_SECP192R1
 
OID_ANSI_X9_62
 "\x03\x01\x01"

	)

293 
	#OID_EC_GRP_SECP224R1
 
OID_CERTICOM
 "\x00\x21"

	)

297 
	#OID_EC_GRP_SECP256R1
 
OID_ANSI_X9_62
 "\x03\x01\x07"

	)

301 
	#OID_EC_GRP_SECP384R1
 
OID_CERTICOM
 "\x00\x22"

	)

305 
	#OID_EC_GRP_SECP521R1
 
OID_CERTICOM
 "\x00\x23"

	)

309 
	#OID_EC_GRP_SECP192K1
 
OID_CERTICOM
 "\x00\x1f"

	)

313 
	#OID_EC_GRP_SECP224K1
 
OID_CERTICOM
 "\x00\x20"

	)

317 
	#OID_EC_GRP_SECP256K1
 
OID_CERTICOM
 "\x00\x0a"

	)

325 
	#OID_EC_BRAINPOOL_V1
 
OID_TELETRUST
 "\x03\x03\x02\x08\x01\x01"

	)

328 
	#OID_EC_GRP_BP256R1
 
OID_EC_BRAINPOOL_V1
 "\x07"

	)

331 
	#OID_EC_GRP_BP384R1
 
OID_EC_BRAINPOOL_V1
 "\x0B"

	)

334 
	#OID_EC_GRP_BP512R1
 
OID_EC_BRAINPOOL_V1
 "\x0D"

	)

342 
	#OID_ANSI_X9_62_FIELD_TYPE
 
OID_ANSI_X9_62
 "\x01"

	)

343 
	#OID_ANSI_X9_62_PRIME_FIELD
 
OID_ANSI_X9_62_FIELD_TYPE
 "\x01"

	)

348 
	#OID_ANSI_X9_62_SIG
 
OID_ANSI_X9_62
 "\x04"

	)

349 
	#OID_ANSI_X9_62_SIG_SHA2
 
OID_ANSI_X9_62_SIG
 "\x03"

	)

353 
	#OID_ECDSA_SHA1
 
OID_ANSI_X9_62_SIG
 "\x01"

	)

358 
	#OID_ECDSA_SHA224
 
OID_ANSI_X9_62_SIG_SHA2
 "\x01"

	)

363 
	#OID_ECDSA_SHA256
 
OID_ANSI_X9_62_SIG_SHA2
 "\x02"

	)

368 
	#OID_ECDSA_SHA384
 
OID_ANSI_X9_62_SIG_SHA2
 "\x03"

	)

373 
	#OID_ECDSA_SHA512
 
OID_ANSI_X9_62_SIG_SHA2
 "\x04"

	)

375 #ifde‡
__˝lu•lus


383 c⁄° *
a¢1
;

384 
size_t
 
a¢1_Àn
;

385 c⁄° *
«me
;

386 c⁄° *
des¸ùti⁄
;

387 } 
	toid_des¸ùt‹_t
;

400 
oid_gë_numîic_°rög
–*
buf
, 
size_t
 
size
, c⁄° 
a¢1_buf
 *
oid
 );

402 #i‡
deföed
(
POLARSSL_X509_USE_C
Ë|| deföed(
POLARSSL_X509_CREATE_C
)

411 
oid_gë_x509_ext_ty≥
–c⁄° 
a¢1_buf
 *
oid
, *
ext_ty≥
 );

423 
oid_gë_©å_sh‹t_«me
–c⁄° 
a¢1_buf
 *
oid
, c⁄° **
sh‹t_«me
 );

433 
oid_gë_pk_Æg
–c⁄° 
a¢1_buf
 *
oid
, 
pk_ty≥_t
 *
pk_Æg
 );

444 
oid_gë_oid_by_pk_Æg
–
pk_ty≥_t
 
pk_Æg
,

445 c⁄° **
oid
, 
size_t
 *
ﬁí
 );

447 #i‡
deföed
(
POLARSSL_ECP_C
)

456 
oid_gë_ec_gΩ
–c⁄° 
a¢1_buf
 *
oid
, 
e˝_group_id
 *
gΩ_id
 );

467 
oid_gë_oid_by_ec_gΩ
–
e˝_group_id
 
gΩ_id
,

468 c⁄° **
oid
, 
size_t
 *
ﬁí
 );

471 #i‡
deföed
(
POLARSSL_MD_C
)

481 
oid_gë_sig_Æg
–c⁄° 
a¢1_buf
 *
oid
,

482 
md_ty≥_t
 *
md_Æg
, 
pk_ty≥_t
 *
pk_Æg
 );

492 
oid_gë_sig_Æg_desc
–c⁄° 
a¢1_buf
 *
oid
, c⁄° **
desc
 );

504 
oid_gë_oid_by_sig_Æg
–
pk_ty≥_t
 
pk_Æg
, 
md_ty≥_t
 
md_Æg
,

505 c⁄° **
oid
, 
size_t
 *
ﬁí
 );

515 
oid_gë_md_Æg
–c⁄° 
a¢1_buf
 *
oid
, 
md_ty≥_t
 *
md_Æg
 );

526 
oid_gë_exãnded_key_ußge
–c⁄° 
a¢1_buf
 *
oid
, c⁄° **
desc
 );

537 
oid_gë_oid_by_md
–
md_ty≥_t
 
md_Æg
, c⁄° **
oid
, 
size_t
 *
ﬁí
 );

539 #i‡
deföed
(
POLARSSL_CIPHER_C
)

548 
oid_gë_cùhî_Æg
–c⁄° 
a¢1_buf
 *
oid
, 
cùhî_ty≥_t
 *
cùhî_Æg
 );

551 #i‡
deföed
(
POLARSSL_PKCS12_C
)

562 
oid_gë_pkcs12_pbe_Æg
–c⁄° 
a¢1_buf
 *
oid
, 
md_ty≥_t
 *
md_Æg
,

563 
cùhî_ty≥_t
 *
cùhî_Æg
 );

566 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/openssl.h

30 #i‚de‡
POLARSSL_OPENSSL_H


31 
	#POLARSSL_OPENSSL_H


	)

33 
	~"´s.h
"

34 
	~"md5.h
"

35 
	~"rß.h
"

36 
	~"sha1.h
"

38 
	#AES_SIZE
 16

	)

39 
	#AES_BLOCK_SIZE
 16

	)

40 
	#AES_KEY
 
´s_c⁄ãxt


	)

41 
	#MD5_CTX
 
md5_c⁄ãxt


	)

42 
	#SHA_CTX
 
sha1_c⁄ãxt


	)

44 
	#SHA1_Inô
–
CTX
 ) \

45 
	`sha1_°¨ts
–(
CTX
Ë)

	)

46 
	#SHA1_Upd©e
–
CTX
, 
BUF
, 
LEN
 ) \

47 
	`sha1_upd©e
–(
CTX
), (*)(
BUF
), (
LEN
Ë)

	)

48 
	#SHA1_FöÆ
–
OUT
, 
CTX
 ) \

49 
	`sha1_föish
–(
CTX
), (
OUT
Ë)

	)

51 
	#MD5_Inô
–
CTX
 ) \

52 
	`md5_°¨ts
–(
CTX
Ë)

	)

53 
	#MD5_Upd©e
–
CTX
, 
BUF
, 
LEN
 ) \

54 
	`md5_upd©e
–(
CTX
), (*)(
BUF
), (
LEN
Ë)

	)

55 
	#MD5_FöÆ
–
OUT
, 
CTX
 ) \

56 
	`md5_föish
–(
CTX
), (
OUT
Ë)

	)

58 
	#AES_£t_í¸y±_key
–
KEY
, 
KEYSIZE
, 
CTX
 ) \

59 
	`´s_£tkey_íc
–(
CTX
), (
KEY
), (
KEYSIZE
Ë)

	)

60 
	#AES_£t_de¸y±_key
–
KEY
, 
KEYSIZE
, 
CTX
 ) \

61 
	`´s_£tkey_dec
–(
CTX
), (
KEY
), (
KEYSIZE
Ë)

	)

62 
	#AES_cbc_í¸y±
–
INPUT
, 
OUTPUT
, 
LEN
, 
CTX
, 
IV
, 
MODE
 ) \

63 
	`´s_¸y±_cbc
–(
CTX
), (
MODE
), (
LEN
), (
IV
), (
INPUT
), (
OUTPUT
Ë)

	)

65 #ifde‡
__˝lu•lus


72 
ölöe
 
__RSA_Pas°hrough
–*
ouçut
, *
öput
, 
size
 )

74 
mem˝y
–
ouçut
, 
öput
, 
size
 );

75  
size
;

78 
ölöe
 
rß_c⁄ãxt
* 
d2i_RSA_PUBKEY
–*
ign‹e
, **
buÂå
,

79 
Àn
 )

81 *
buf„r
 = *(**Ë
buÂå
;

82 
rß_c⁄ãxt
 *
rß
;

92 if–
ign‹e
 !0 || ( 
Àn
 != 94 &&Üen != 162 ) )

95 
rß
 = (
rß_c⁄ãxt
 *Ë
mÆloc
––
rß_rß
 ) );

96 if–
rß
 =
NULL
 )

99 
mem£t
–
rß
, 0, –
rß_c⁄ãxt
 ) );

101 if––
Àn
 == 94 &&

102 
mpi_ªad_bö¨y
–&
rß
->
N
, &
buf„r
[ 25], 64 ) == 0 &&

103 
mpi_ªad_bö¨y
–&
rß
->
E
, &
buf„r
[ 91], 3 ) == 0 ) ||

104 –
Àn
 == 162 &&

105 
mpi_ªad_bö¨y
–&
rß
->
N
, &
buf„r
[ 29], 128 ) == 0 ) &&

106 
mpi_ªad_bö¨y
–&
rß
->
E
, &
buf„r
[159], 3 ) == 0 )

111 
rß
->
Àn
 = ( 
mpi_msb
–&rß->
N
 ) + 7 ) >> 3;

112 –
rß
 );

116 
mem£t
–
rß
, 0, –
rß_c⁄ãxt
 ) );

117 
‰ì
–
rß
 );

122 
	#RSA
 
rß_c⁄ãxt


	)

123 
	#RSA_PKCS1_PADDING
 1

	)

124 
	#RSA_size
–
CTX
 ) (CTX)->
Àn


	)

125 
	#RSA_‰ì
–
CTX
 ) 
	`rß_‰ì
–CTX )

	)

126 
	#ERR_gë_îr‹
–Ë"ERR_gë_îr‹(ËnŸ suµ‹ãd"

	)

127 
	#RSA_blödög_off
–
IGNORE
 )

	)

129 
	#d2i_RSAPriv©eKey
–
a
, 
b
, 
c
 ) 
√w
 
rß_c⁄ãxt


	)

131 
ölöe
 
RSA_public_de¸y±
 ( 
size
, * 
öput
, * 
ouçut
, 
RSA
* 
key
, 
ign‹e
 ) { 
outsize
=size; if–!
rß_pkcs1_de¸y±
–key, 
RSA_PUBLIC
, &outsize, input, output ) )  outsize;  -1; }

132 
ölöe
 
RSA_¥iv©e_de¸y±
–
size
, * 
öput
, * 
ouçut
, 
RSA
* 
key
, 
ign‹e
 ) { 
outsize
=size; if–!
rß_pkcs1_de¸y±
–key, 
RSA_PRIVATE
, &outsize, input, output ) )  outsize;  -1; }

133 
ölöe
 
RSA_public_í¸y±
 ( 
size
, * 
öput
, * 
ouçut
, 
RSA
* 
key
, 
ign‹e
 ) { if–!
rß_pkcs1_í¸y±
–key, 
RSA_PUBLIC
, size, i≈ut, ouçuàËË 
RSA_size
(key);  -1; }

134 
ölöe
 
RSA_¥iv©e_í¸y±
–
size
, * 
öput
, * 
ouçut
, 
RSA
* 
key
, 
ign‹e
 ) { if–!
rß_pkcs1_í¸y±
–key, 
RSA_PRIVATE
, size, i≈ut, ouçuàËË 
RSA_size
(key);  -1; }

136 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/padlock.h

28 #i‚de‡
POLARSSL_PADLOCK_H


29 
	#POLARSSL_PADLOCK_H


	)

31 
	~"´s.h
"

33 
	#POLARSSL_ERR_PADLOCK_DATA_MISALIGNED
 -0x0030

	)

35 #i‡
deföed
(
POLARSSL_HAVE_ASM
Ë&& deföed(
__GNUC__
Ë&& deföed(
__i386__
)

37 #i‚de‡
POLARSSL_HAVE_X86


38 
	#POLARSSL_HAVE_X86


	)

41 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

42 
	~<ba£tsd.h
>

43 
INT32
 
	töt32_t
;

45 
	~<öây≥s.h
>

49 
	#PADLOCK_RNG
 0x000C

	)

50 
	#PADLOCK_ACE
 0x00C0

	)

51 
	#PADLOCK_PHE
 0x0C00

	)

52 
	#PADLOCK_PMM
 0x3000

	)

54 
	#PADLOCK_ALIGN16
(
x
Ë(
uöt32_t
 *Ë(16 + ((
öt32_t
Ëx & ~15))

	)

56 #ifde‡
__˝lu•lus


67 
∑dlock_suµ‹ts
–
„©uª
 );

79 
∑dlock_x¸y±ecb
–
´s_c⁄ãxt
 *
˘x
,

80 
mode
,

81 c⁄° 
öput
[16],

82 
ouçut
[16] );

96 
∑dlock_x¸y±cbc
–
´s_c⁄ãxt
 *
˘x
,

97 
mode
,

98 
size_t
 
Àngth
,

99 
iv
[16],

100 c⁄° *
öput
,

101 *
ouçut
 );

103 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/pbkdf2.h

30 #i‚de‡
POLARSSL_PBKDF2_H


31 
	#POLARSSL_PBKDF2_H


	)

33 
	~<°rög.h
>

35 
	~"md.h
"

37 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

38 
	~<ba£tsd.h
>

39 
UINT32
 
	tuöt32_t
;

41 
	~<öây≥s.h
>

44 
	#POLARSSL_ERR_PBKDF2_BAD_INPUT_DATA
 -0x007C

	)

46 #ifde‡
__˝lu•lus


65 
pbkdf2_hmac
–
md_c⁄ãxt_t
 *
˘x
, c⁄° *
∑ssw‹d
,

66 
size_t
 
∂í
, c⁄° *
ß…
, size_à
¶í
,

67 
ôî©i⁄_cou¡
,

68 
uöt32_t
 
key_Àngth
, *
ouçut
 );

76 
pbkdf2_£lf_ã°
–
vîbo£
 );

78 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/pem.h

27 #i‚de‡
POLARSSL_PEM_H


28 
	#POLARSSL_PEM_H


	)

30 
	~<°rög.h
>

38 
	#POLARSSL_ERR_PEM_NO_HEADER_FOOTER_PRESENT
 -0x1080

	)

39 
	#POLARSSL_ERR_PEM_INVALID_DATA
 -0x1100

	)

40 
	#POLARSSL_ERR_PEM_MALLOC_FAILED
 -0x1180

	)

41 
	#POLARSSL_ERR_PEM_INVALID_ENC_IV
 -0x1200

	)

42 
	#POLARSSL_ERR_PEM_UNKNOWN_ENC_ALG
 -0x1280

	)

43 
	#POLARSSL_ERR_PEM_PASSWORD_REQUIRED
 -0x1300

	)

44 
	#POLARSSL_ERR_PEM_PASSWORD_MISMATCH
 -0x1380

	)

45 
	#POLARSSL_ERR_PEM_FEATURE_UNAVAILABLE
 -0x1400

	)

46 
	#POLARSSL_ERR_PEM_BAD_INPUT_DATA
 -0x1480

	)

49 #ifde‡
__˝lu•lus


53 #i‡
deföed
(
POLARSSL_PEM_PARSE_C
)

59 *
buf
;

60 
size_t
 
buÊí
;

61 *
öfo
;

63 
	t≥m_c⁄ãxt
;

70 
≥m_öô
–
≥m_c⁄ãxt
 *
˘x
 );

94 
≥m_ªad_buf„r
–
≥m_c⁄ãxt
 *
˘x
, c⁄° *
hódî
, c⁄° *
foŸî
,

95 c⁄° *
d©a
,

96 c⁄° *
pwd
,

97 
size_t
 
pwdÀn
, size_à*
u£_Àn
 );

104 
≥m_‰ì
–
≥m_c⁄ãxt
 *
˘x
 );

107 #i‡
deföed
(
POLARSSL_PEM_WRITE_C
)

124 
≥m_wrôe_buf„r
–c⁄° *
hódî
, c⁄° *
foŸî
,

125 c⁄° *
dî_d©a
, 
size_t
 
dî_Àn
,

126 *
buf
, 
size_t
 
buf_Àn
, size_à*
ﬁí
 );

129 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/pk.h

28 #i‚de‡
POLARSSL_PK_H


29 
	#POLARSSL_PK_H


	)

31 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

32 
	~"c⁄fig.h
"

34 #ö˛udê
POLARSSL_CONFIG_FILE


37 
	~"md.h
"

39 #i‡
deföed
(
POLARSSL_RSA_C
)

40 
	~"rß.h
"

43 #i‡
deföed
(
POLARSSL_ECP_C
)

44 
	~"e˝.h
"

47 #i‡
deföed
(
POLARSSL_ECDSA_C
)

48 
	~"ecdß.h
"

51 
	#POLARSSL_ERR_PK_MALLOC_FAILED
 -0x2F80

	)

52 
	#POLARSSL_ERR_PK_TYPE_MISMATCH
 -0x2F00

	)

53 
	#POLARSSL_ERR_PK_BAD_INPUT_DATA
 -0x2E80

	)

54 
	#POLARSSL_ERR_PK_FILE_IO_ERROR
 -0x2E00

	)

55 
	#POLARSSL_ERR_PK_KEY_INVALID_VERSION
 -0x2D80

	)

56 
	#POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 -0x2D00

	)

57 
	#POLARSSL_ERR_PK_UNKNOWN_PK_ALG
 -0x2C80

	)

58 
	#POLARSSL_ERR_PK_PASSWORD_REQUIRED
 -0x2C00

	)

59 
	#POLARSSL_ERR_PK_PASSWORD_MISMATCH
 -0x2B80

	)

60 
	#POLARSSL_ERR_PK_INVALID_PUBKEY
 -0x2B00

	)

61 
	#POLARSSL_ERR_PK_INVALID_ALG
 -0x2A80

	)

62 
	#POLARSSL_ERR_PK_UNKNOWN_NAMED_CURVE
 -0x2A00

	)

63 
	#POLARSSL_ERR_PK_FEATURE_UNAVAILABLE
 -0x2980

	)

64 
	#POLARSSL_ERR_PK_SIG_LEN_MISMATCH
 -0x2000

	)

67 #i‡
deföed
(
POLARSSL_RSA_C
)

74 
	#pk_rß
–
pk
 ) ( (
rß_c⁄ãxt
 *Ë’k).
pk_˘x
 )

	)

77 #i‡
deföed
(
POLARSSL_ECP_C
)

84 
	#pk_ec
–
pk
 ) ( (
e˝_key∑ú
 *Ë’k).
pk_˘x
 )

	)

88 #ifde‡
__˝lu•lus


96 
POLARSSL_PK_NONE
=0,

97 
POLARSSL_PK_RSA
,

98 
POLARSSL_PK_ECKEY
,

99 
POLARSSL_PK_ECKEY_DH
,

100 
POLARSSL_PK_ECDSA
,

101 
POLARSSL_PK_RSA_ALT
,

102 
POLARSSL_PK_RSASSA_PSS
,

103 } 
	tpk_ty≥_t
;

111 
md_ty≥_t
 
mgf1_hash_id
;

112 
ex≥˘ed_ß…_Àn
;

114 } 
	tpk_rßsß_pss_›ti⁄s
;

121 
POLARSSL_PK_DEBUG_NONE
 = 0,

122 
POLARSSL_PK_DEBUG_MPI
,

123 
POLARSSL_PK_DEBUG_ECP
,

124 } 
	tpk_debug_ty≥
;

131 
pk_debug_ty≥
 
ty≥
;

132 c⁄° *
«me
;

133 *
vÆue
;

134 } 
	tpk_debug_ôem
;

137 
	#POLARSSL_PK_DEBUG_MAX_ITEMS
 3

	)

145 
pk_ty≥_t
 
ty≥
;

148 c⁄° *
«me
;

151 
size_t
 (*
gë_size
)( const * );

154 (*
ˇn_do
)–
pk_ty≥_t
 
ty≥
 );

157 (*
vîify_func
)–*
˘x
, 
md_ty≥_t
 
md_Æg
,

158 c⁄° *
hash
, 
size_t
 
hash_Àn
,

159 c⁄° *
sig
, 
size_t
 
sig_Àn
 );

162 (*
sign_func
)–*
˘x
, 
md_ty≥_t
 
md_Æg
,

163 c⁄° *
hash
, 
size_t
 
hash_Àn
,

164 *
sig
, 
size_t
 *
sig_Àn
,

165 (*
f_∫g
)(*, *, 
size_t
),

166 *
p_∫g
 );

169 (*
de¸y±_func
)–*
˘x
, c⁄° *
öput
, 
size_t
 
ûí
,

170 *
ouçut
, 
size_t
 *
ﬁí
, size_à
osize
,

171 (*
f_∫g
)(*, *, 
size_t
),

172 *
p_∫g
 );

175 (*
í¸y±_func
)–*
˘x
, c⁄° *
öput
, 
size_t
 
ûí
,

176 *
ouçut
, 
size_t
 *
ﬁí
, size_à
osize
,

177 (*
f_∫g
)(*, *, 
size_t
),

178 *
p_∫g
 );

181 * (*
˘x_Æloc_func
)( );

184 (*
˘x_‰ì_func
)–*
˘x
 );

187 (*
debug_func
)–c⁄° *
˘x
, 
pk_debug_ôem
 *
ôems
 );

189 } 
	tpk_öfo_t
;

196 c⁄° 
pk_öfo_t
 * 
pk_öfo
;

197 * 
pk_˘x
;

198 } 
	tpk_c⁄ãxt
;

203 (*
pk_rß_Æt_de¸y±_func
)–*
	t˘x
, 
	tmode
, 
	tsize_t
 *
	tﬁí
,

204 c⁄° *
	töput
, *
	touçut
,

205 
	tsize_t
 
	touçut_max_Àn
 );

206 (*
pk_rß_Æt_sign_func
)–*
	t˘x
,

207 (*
	tf_∫g
)(*, *, 
	tsize_t
), *
	tp_∫g
,

208 
	tmode
, 
	tmd_ty≥_t
 
	tmd_Æg
, 
	thashÀn
,

209 c⁄° *
	thash
, *
	tsig
 );

210 
size_t
 (*
	tpk_rß_Æt_key_Àn_func
)–*
	t˘x
 );

219 c⁄° 
pk_öfo_t
 *
pk_öfo_‰om_ty≥
–
pk_ty≥_t
 
pk_ty≥
 );

224 
pk_öô
–
pk_c⁄ãxt
 *
˘x
 );

229 
pk_‰ì
–
pk_c⁄ãxt
 *
˘x
 );

245 
pk_öô_˘x
–
pk_c⁄ãxt
 *
˘x
, c⁄° 
pk_öfo_t
 *
öfo
 );

261 
pk_öô_˘x_rß_Æt
–
pk_c⁄ãxt
 *
˘x
, * 
key
,

262 
pk_rß_Æt_de¸y±_func
 
de¸y±_func
,

263 
pk_rß_Æt_sign_func
 
sign_func
,

264 
pk_rß_Æt_key_Àn_func
 
key_Àn_func
 );

273 
size_t
 
pk_gë_size
–c⁄° 
pk_c⁄ãxt
 *
˘x
 );

281 
ölöe
 
size_t
 
pk_gë_Àn
–c⁄° 
pk_c⁄ãxt
 *
˘x
 )

283 ––
pk_gë_size
–
˘x
 ) + 7 ) / 8 );

295 
pk_ˇn_do
–
pk_c⁄ãxt
 *
˘x
, 
pk_ty≥_t
 
ty≥
 );

321 
pk_vîify
–
pk_c⁄ãxt
 *
˘x
, 
md_ty≥_t
 
md_Æg
,

322 c⁄° *
hash
, 
size_t
 
hash_Àn
,

323 c⁄° *
sig
, 
size_t
 
sig_Àn
 );

354 
pk_vîify_ext
–
pk_ty≥_t
 
ty≥
, c⁄° *
›ti⁄s
,

355 
pk_c⁄ãxt
 *
˘x
, 
md_ty≥_t
 
md_Æg
,

356 c⁄° *
hash
, 
size_t
 
hash_Àn
,

357 c⁄° *
sig
, 
size_t
 
sig_Àn
 );

382 
pk_sign
–
pk_c⁄ãxt
 *
˘x
, 
md_ty≥_t
 
md_Æg
,

383 c⁄° *
hash
, 
size_t
 
hash_Àn
,

384 *
sig
, 
size_t
 *
sig_Àn
,

385 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 );

403 
pk_de¸y±
–
pk_c⁄ãxt
 *
˘x
,

404 c⁄° *
öput
, 
size_t
 
ûí
,

405 *
ouçut
, 
size_t
 *
ﬁí
, size_à
osize
,

406 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 );

424 
pk_í¸y±
–
pk_c⁄ãxt
 *
˘x
,

425 c⁄° *
öput
, 
size_t
 
ûí
,

426 *
ouçut
, 
size_t
 *
ﬁí
, size_à
osize
,

427 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 );

437 
pk_debug
–c⁄° 
pk_c⁄ãxt
 *
˘x
, 
pk_debug_ôem
 *
ôems
 );

446 c⁄° * 
pk_gë_«me
–c⁄° 
pk_c⁄ãxt
 *
˘x
 );

455 
pk_ty≥_t
 
pk_gë_ty≥
–c⁄° 
pk_c⁄ãxt
 *
˘x
 );

457 #i‡
deföed
(
POLARSSL_PK_PARSE_C
)

476 
pk_∑r£_key
–
pk_c⁄ãxt
 *
˘x
,

477 c⁄° *
key
, 
size_t
 
keyÀn
,

478 c⁄° *
pwd
, 
size_t
 
pwdÀn
 );

496 
pk_∑r£_public_key
–
pk_c⁄ãxt
 *
˘x
,

497 c⁄° *
key
, 
size_t
 
keyÀn
 );

499 #i‡
deföed
(
POLARSSL_FS_IO
)

516 
pk_∑r£_keyfûe
–
pk_c⁄ãxt
 *
˘x
,

517 c⁄° *
∑th
, c⁄° *
∑ssw‹d
 );

534 
pk_∑r£_public_keyfûe
–
pk_c⁄ãxt
 *
˘x
, c⁄° *
∑th
 );

538 #i‡
deföed
(
POLARSSL_PK_WRITE_C
)

552 
pk_wrôe_key_dî
–
pk_c⁄ãxt
 *
˘x
, *
buf
, 
size_t
 
size
 );

567 
pk_wrôe_pubkey_dî
–
pk_c⁄ãxt
 *
˘x
, *
buf
, 
size_t
 
size
 );

569 #i‡
deföed
(
POLARSSL_PEM_WRITE_C
)

579 
pk_wrôe_pubkey_≥m
–
pk_c⁄ãxt
 *
˘x
, *
buf
, 
size_t
 
size
 );

590 
pk_wrôe_key_≥m
–
pk_c⁄ãxt
 *
˘x
, *
buf
, 
size_t
 
size
 );

599 #i‡
deföed
(
POLARSSL_PK_PARSE_C
)

609 
pk_∑r£_subpubkey
–**
p
, c⁄° *
íd
,

610 
pk_c⁄ãxt
 *
pk
 );

613 #i‡
deföed
(
POLARSSL_PK_WRITE_C
)

624 
pk_wrôe_pubkey
–**
p
, *
°¨t
,

625 c⁄° 
pk_c⁄ãxt
 *
key
 );

628 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/pk_wrap.h

28 #i‚de‡
POLARSSL_PK_WRAP_H


29 
	#POLARSSL_PK_WRAP_H


	)

31 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

32 
	~"c⁄fig.h
"

34 #ö˛udê
POLARSSL_CONFIG_FILE


37 
	~"pk.h
"

42 *
	mkey
;

43 
pk_rß_Æt_de¸y±_func
 
	mde¸y±_func
;

44 
pk_rß_Æt_sign_func
 
	msign_func
;

45 
pk_rß_Æt_key_Àn_func
 
	mkey_Àn_func
;

46 } 
	trß_Æt_c⁄ãxt
;

48 #i‡
deföed
(
POLARSSL_RSA_C
)

49 c⁄° 
pk_öfo_t
 
rß_öfo
;

52 #i‡
deföed
(
POLARSSL_ECP_C
)

53 c⁄° 
pk_öfo_t
 
eckey_öfo
;

54 c⁄° 
pk_öfo_t
 
eckeydh_öfo
;

57 #i‡
deföed
(
POLARSSL_ECDSA_C
)

58 c⁄° 
pk_öfo_t
 
ecdß_öfo
;

61 c⁄° 
pk_öfo_t
 
rß_Æt_öfo
;

	@polarssl/include/polarssl/pkcs11.h

29 #i‚de‡
POLARSSL_PKCS11_H


30 
	#POLARSSL_PKCS11_H


	)

32 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

33 
	~"c⁄fig.h
"

35 #ö˛udê
POLARSSL_CONFIG_FILE


38 #i‡
deföed
(
POLARSSL_PKCS11_C
)

40 
	~"x509_¸t.h
"

42 
	~<pkcs11-hñ≥r-1.0/pkcs11h-˚πifiˇã.h
>

44 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
ölöe
)

45 
	#ölöe
 
_ölöe


	)

47 #i‡
deföed
(
__ARMCC_VERSION
Ë&& !deföed(
ölöe
)

48 
	#ölöe
 
__ölöe


	)

52 #ifde‡
__˝lu•lus


60 
pkcs11h_˚πifiˇã_t
 
pkcs11h_˚π
;

61 
Àn
;

62 } 
	tpkcs11_c⁄ãxt
;

72 
pkcs11_x509_˚π_öô
–
x509_¸t
 *
˚π
, 
pkcs11h_˚πifiˇã_t
 
pkcs11h_˚π
 );

84 
pkcs11_¥iv_key_öô
–
pkcs11_c⁄ãxt
 *
¥iv_key
,

85 
pkcs11h_˚πifiˇã_t
 
pkcs11_˚π
 );

93 
pkcs11_¥iv_key_‰ì
–
pkcs11_c⁄ãxt
 *
¥iv_key
 );

112 
pkcs11_de¸y±
–
pkcs11_c⁄ãxt
 *
˘x
,

113 
mode
, 
size_t
 *
ﬁí
,

114 c⁄° *
öput
,

115 *
ouçut
,

116 
size_t
 
ouçut_max_Àn
 );

134 
pkcs11_sign
–
pkcs11_c⁄ãxt
 *
˘x
,

135 
mode
,

136 
md_ty≥_t
 
md_Æg
,

137 
hashÀn
,

138 c⁄° *
hash
,

139 *
sig
 );

144 
ölöe
 
s¶_pkcs11_de¸y±
–*
˘x
, 
mode
, 
size_t
 *
ﬁí
,

145 c⁄° *
öput
, *
ouçut
,

146 
size_t
 
ouçut_max_Àn
 )

148  
pkcs11_de¸y±
–(
pkcs11_c⁄ãxt
 *Ë
˘x
, 
mode
, 
ﬁí
, 
öput
, 
ouçut
,

149 
ouçut_max_Àn
 );

152 
ölöe
 
s¶_pkcs11_sign
–*
˘x
,

153 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
,

154 
mode
, 
md_ty≥_t
 
md_Æg
, 
hashÀn
,

155 c⁄° *
hash
, *
sig
 )

157 ((Ë
f_∫g
);

158 ((Ë
p_∫g
);

159  
pkcs11_sign
–(
pkcs11_c⁄ãxt
 *Ë
˘x
, 
mode
, 
md_Æg
,

160 
hashÀn
, 
hash
, 
sig
 );

163 
ölöe
 
size_t
 
s¶_pkcs11_key_Àn
–*
˘x
 )

165  ( (
pkcs11_c⁄ãxt
 *Ë
˘x
 )->
Àn
;

168 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/pkcs12.h

27 #i‚de‡
POLARSSL_PKCS12_H


28 
	#POLARSSL_PKCS12_H


	)

30 
	~<°rög.h
>

32 
	~"md.h
"

33 
	~"cùhî.h
"

34 
	~"a¢1.h
"

36 
	#POLARSSL_ERR_PKCS12_BAD_INPUT_DATA
 -0x1F80

	)

37 
	#POLARSSL_ERR_PKCS12_FEATURE_UNAVAILABLE
 -0x1F00

	)

38 
	#POLARSSL_ERR_PKCS12_PBE_INVALID_FORMAT
 -0x1E80

	)

39 
	#POLARSSL_ERR_PKCS12_PASSWORD_MISMATCH
 -0x1E00

	)

41 
	#PKCS12_DERIVE_KEY
 1

	)

42 
	#PKCS12_DERIVE_IV
 2

	)

43 
	#PKCS12_DERIVE_MAC_KEY
 3

	)

45 
	#PKCS12_PBE_DECRYPT
 0

	)

46 
	#PKCS12_PBE_ENCRYPT
 1

	)

48 #ifde‡
__˝lu•lus


66 
pkcs12_pbe_sha1_rc4_128
–
a¢1_buf
 *
pbe_∑øms
, 
mode
,

67 c⁄° *
pwd
, 
size_t
 
pwdÀn
,

68 c⁄° *
öput
, 
size_t
 
Àn
,

69 *
ouçut
 );

87 
pkcs12_pbe
–
a¢1_buf
 *
pbe_∑øms
, 
mode
,

88 
cùhî_ty≥_t
 
cùhî_ty≥
, 
md_ty≥_t
 
md_ty≥
,

89 c⁄° *
pwd
, 
size_t
 
pwdÀn
,

90 c⁄° *
öput
, 
size_t
 
Àn
,

91 *
ouçut
 );

114 
pkcs12_dîiv©i⁄
–*
d©a
, 
size_t
 
d©Æí
,

115 c⁄° *
pwd
, 
size_t
 
pwdÀn
,

116 c⁄° *
ß…
, 
size_t
 
ß…Àn
,

117 
md_ty≥_t
 
md
, 
id
, 
ôî©i⁄s
 );

119 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/pkcs5.h

29 #i‚de‡
POLARSSL_PKCS5_H


30 
	#POLARSSL_PKCS5_H


	)

32 
	~<°rög.h
>

34 
	~"a¢1.h
"

35 
	~"md.h
"

37 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

38 
	~<ba£tsd.h
>

39 
UINT32
 
	tuöt32_t
;

41 
	~<öây≥s.h
>

44 
	#POLARSSL_ERR_PKCS5_BAD_INPUT_DATA
 -0x3f80

	)

45 
	#POLARSSL_ERR_PKCS5_INVALID_FORMAT
 -0x3f00

	)

46 
	#POLARSSL_ERR_PKCS5_FEATURE_UNAVAILABLE
 -0x3e80

	)

47 
	#POLARSSL_ERR_PKCS5_PASSWORD_MISMATCH
 -0x3e00

	)

49 
	#PKCS5_DECRYPT
 0

	)

50 
	#PKCS5_ENCRYPT
 1

	)

52 #ifde‡
__˝lu•lus


69 
pkcs5_pbes2
–
a¢1_buf
 *
pbe_∑øms
, 
mode
,

70 c⁄° *
pwd
, 
size_t
 
pwdÀn
,

71 c⁄° *
d©a
, 
size_t
 
d©Æí
,

72 *
ouçut
 );

88 
pkcs5_pbkdf2_hmac
–
md_c⁄ãxt_t
 *
˘x
, c⁄° *
∑ssw‹d
,

89 
size_t
 
∂í
, c⁄° *
ß…
, size_à
¶í
,

90 
ôî©i⁄_cou¡
,

91 
uöt32_t
 
key_Àngth
, *
ouçut
 );

98 
pkcs5_£lf_ã°
–
vîbo£
 );

100 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/platform.h

27 #i‚de‡
POLARSSL_PLATFORM_H


28 
	#POLARSSL_PLATFORM_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~<°dio.h
>

38 #ifde‡
__˝lu•lus


50 #i‡!
deföed
(
POLARSSL_PLATFORM_NO_STD_FUNCTIONS
)

51 
	~<°dlib.h
>

52 #i‡!
deföed
(
POLARSSL_PLATFORM_STD_PRINTF
)

53 
	#POLARSSL_PLATFORM_STD_PRINTF
 
¥ötf


	)

55 #i‡!
deföed
(
POLARSSL_PLATFORM_STD_FPRINTF
)

56 
	#POLARSSL_PLATFORM_STD_FPRINTF
 
Ârötf


	)

58 #i‡!
deföed
(
POLARSSL_PLATFORM_STD_MALLOC
)

59 
	#POLARSSL_PLATFORM_STD_MALLOC
 
mÆloc


	)

61 #i‡!
deföed
(
POLARSSL_PLATFORM_STD_FREE
)

62 
	#POLARSSL_PLATFORM_STD_FREE
 
‰ì


	)

65 #i‡
deföed
(
POLARSSL_PLATFORM_STD_MEM_HDR
)

66 #ö˛udê
POLARSSL_PLATFORM_STD_MEM_HDR


75 #i‡
deföed
(
POLARSSL_PLATFORM_MEMORY
)

76 * (*
pﬁ¨s¶_mÆloc
)–
size_t
 
Àn
 );

77 (*
pﬁ¨s¶_‰ì
)–*
±r
 );

87 
	`∂©f‹m_£t_mÆloc_‰ì
–* (*
mÆloc_func
)–
size_t
 ),

88 (*
‰ì_func
)( * ) );

90 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

91 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

97 #i‡
	`deföed
(
POLARSSL_PLATFORM_PRINTF_ALT
)

98 (*
pﬁ¨s¶_¥ötf
)–c⁄° *
f‹m©
, ... );

107 
	`∂©f‹m_£t_¥ötf
–(*
¥ötf_func
)( const *, ... ) );

109 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

115 #i‡
	`deföed
(
POLARSSL_PLATFORM_FPRINTF_ALT
)

116 (*
pﬁ¨s¶_Ârötf
)–
FILE
 *
°ªam
, c⁄° *
f‹m©
, ... );

118 
	`∂©f‹m_£t_Ârötf
–(*
Ârötf_func
)–
FILE
 *
°ªam
, const *,

121 
	#pﬁ¨s¶_Ârötf
 
Ârötf


	)

124 #ifde‡
__˝lu•lus


125 
	}
}

	@polarssl/include/polarssl/ripemd160.h

27 #i‚de‡
POLARSSL_RIPEMD160_H


28 
	#POLARSSL_RIPEMD160_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~<°rög.h
>

38 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

39 
	~<ba£tsd.h
>

40 
UINT32
 
	tuöt32_t
;

42 
	~<öây≥s.h
>

45 
	#POLARSSL_ERR_RIPEMD160_FILE_IO_ERROR
 -0x007E

	)

47 #i‡!
deföed
(
POLARSSL_RIPEMD160_ALT
)

51 #ifde‡
__˝lu•lus


60 
uöt32_t
 
tŸÆ
[2];

61 
uöt32_t
 
°©e
[5];

62 
buf„r
[64];

64 
ùad
[64];

65 
›ad
[64];

67 
	trùemd160_c⁄ãxt
;

74 
rùemd160_öô
–
rùemd160_c⁄ãxt
 *
˘x
 );

81 
rùemd160_‰ì
–
rùemd160_c⁄ãxt
 *
˘x
 );

88 
rùemd160_°¨ts
–
rùemd160_c⁄ãxt
 *
˘x
 );

97 
rùemd160_upd©e
–
rùemd160_c⁄ãxt
 *
˘x
,

98 c⁄° *
öput
, 
size_t
 
ûí
 );

106 
rùemd160_föish
–
rùemd160_c⁄ãxt
 *
˘x
, 
ouçut
[20] );

109 
rùemd160_¥o˚ss
–
rùemd160_c⁄ãxt
 *
˘x
, c⁄° 
d©a
[64] );

111 #ifde‡
__˝lu•lus


116 
	~"rùemd160.h
"

119 #ifde‡
__˝lu•lus


130 
rùemd160
–c⁄° *
öput
, 
size_t
 
ûí
,

131 
ouçut
[20] );

133 #i‡
deföed
(
POLARSSL_FS_IO
)

142 
rùemd160_fûe
–c⁄° *
∑th
, 
ouçut
[20] );

152 
rùemd160_hmac_°¨ts
–
rùemd160_c⁄ãxt
 *
˘x
,

153 c⁄° *
key
, 
size_t
 
keyÀn
 );

162 
rùemd160_hmac_upd©e
–
rùemd160_c⁄ãxt
 *
˘x
,

163 c⁄° *
öput
, 
size_t
 
ûí
 );

171 
rùemd160_hmac_föish
–
rùemd160_c⁄ãxt
 *
˘x
, 
ouçut
[20] );

178 
rùemd160_hmac_ª£t
–
rùemd160_c⁄ãxt
 *
˘x
 );

189 
rùemd160_hmac
–c⁄° *
key
, 
size_t
 
keyÀn
,

190 c⁄° *
öput
, 
size_t
 
ûí
,

191 
ouçut
[20] );

198 
rùemd160_£lf_ã°
–
vîbo£
 );

200 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/rsa.h

27 #i‚de‡
POLARSSL_RSA_H


28 
	#POLARSSL_RSA_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~"bignum.h
"

37 
	~"md.h
"

39 #i‡
deföed
(
POLARSSL_THREADING_C
)

40 
	~"thªadög.h
"

46 
	#POLARSSL_ERR_RSA_BAD_INPUT_DATA
 -0x4080

	)

47 
	#POLARSSL_ERR_RSA_INVALID_PADDING
 -0x4100

	)

48 
	#POLARSSL_ERR_RSA_KEY_GEN_FAILED
 -0x4180

	)

49 
	#POLARSSL_ERR_RSA_KEY_CHECK_FAILED
 -0x4200

	)

50 
	#POLARSSL_ERR_RSA_PUBLIC_FAILED
 -0x4280

	)

51 
	#POLARSSL_ERR_RSA_PRIVATE_FAILED
 -0x4300

	)

52 
	#POLARSSL_ERR_RSA_VERIFY_FAILED
 -0x4380

	)

53 
	#POLARSSL_ERR_RSA_OUTPUT_TOO_LARGE
 -0x4400

	)

54 
	#POLARSSL_ERR_RSA_RNG_FAILED
 -0x4480

	)

59 
	#RSA_PUBLIC
 0

	)

60 
	#RSA_PRIVATE
 1

	)

62 
	#RSA_PKCS_V15
 0

	)

63 
	#RSA_PKCS_V21
 1

	)

65 
	#RSA_SIGN
 1

	)

66 
	#RSA_CRYPT
 2

	)

68 
	#RSA_SALT_LEN_ANY
 -1

	)

74 #i‡
deföed
(
POLARSSL_RSA_C
)

76 #ifde‡
__˝lu•lus


85 
vî
;

86 
size_t
 
Àn
;

88 
mpi
 
N
;

89 
mpi
 
E
;

91 
mpi
 
D
;

92 
mpi
 
P
;

93 
mpi
 
Q
;

94 
mpi
 
DP
;

95 
mpi
 
DQ
;

96 
mpi
 
QP
;

98 
mpi
 
RN
;

99 
mpi
 
RP
;

100 
mpi
 
RQ
;

102 #i‡!
deföed
(
POLARSSL_RSA_NO_CRT
)

103 
mpi
 
Vi
;

104 
mpi
 
Vf
;

107 
∑ddög
;

109 
hash_id
;

113 #i‡
deföed
(
POLARSSL_THREADING_C
)

114 
thªadög_muãx_t
 
muãx
;

117 
	trß_c⁄ãxt
;

143 
rß_öô
–
rß_c⁄ãxt
 *
˘x
,

144 
∑ddög
,

145 
hash_id
);

155 
rß_£t_∑ddög
–
rß_c⁄ãxt
 *
˘x
, 
∑ddög
, 
hash_id
);

171 
rß_gí_key
–
rß_c⁄ãxt
 *
˘x
,

172 (*
f_∫g
)(*, *, 
size_t
),

173 *
p_∫g
,

174 
nbôs
, 
exp⁄ít
 );

183 
rß_check_pubkey
–c⁄° 
rß_c⁄ãxt
 *
˘x
 );

192 
rß_check_¥ivkey
–c⁄° 
rß_c⁄ãxt
 *
˘x
 );

210 
rß_public
–
rß_c⁄ãxt
 *
˘x
,

211 c⁄° *
öput
,

212 *
ouçut
 );

228 
rß_¥iv©e
–
rß_c⁄ãxt
 *
˘x
,

229 (*
f_∫g
)(*, *, 
size_t
),

230 *
p_∫g
,

231 c⁄° *
öput
,

232 *
ouçut
 );

253 
rß_pkcs1_í¸y±
–
rß_c⁄ãxt
 *
˘x
,

254 (*
f_∫g
)(*, *, 
size_t
),

255 *
p_∫g
,

256 
mode
, 
size_t
 
ûí
,

257 c⁄° *
öput
,

258 *
ouçut
 );

276 
rß_rßes_pkcs1_v15_í¸y±
–
rß_c⁄ãxt
 *
˘x
,

277 (*
f_∫g
)(*, *, 
size_t
),

278 *
p_∫g
,

279 
mode
, 
size_t
 
ûí
,

280 c⁄° *
öput
,

281 *
ouçut
 );

302 
rß_rßes_ﬂï_í¸y±
–
rß_c⁄ãxt
 *
˘x
,

303 (*
f_∫g
)(*, *, 
size_t
),

304 *
p_∫g
,

305 
mode
,

306 c⁄° *
œbñ
, 
size_t
 
œbñ_Àn
,

307 
size_t
 
ûí
,

308 c⁄° *
öput
,

309 *
ouçut
 );

331 
rß_pkcs1_de¸y±
–
rß_c⁄ãxt
 *
˘x
,

332 (*
f_∫g
)(*, *, 
size_t
),

333 *
p_∫g
,

334 
mode
, 
size_t
 *
ﬁí
,

335 c⁄° *
öput
,

336 *
ouçut
,

337 
size_t
 
ouçut_max_Àn
 );

357 
rß_rßes_pkcs1_v15_de¸y±
–
rß_c⁄ãxt
 *
˘x
,

358 (*
f_∫g
)(*, *, 
size_t
),

359 *
p_∫g
,

360 
mode
, 
size_t
 *
ﬁí
,

361 c⁄° *
öput
,

362 *
ouçut
,

363 
size_t
 
ouçut_max_Àn
 );

385 
rß_rßes_ﬂï_de¸y±
–
rß_c⁄ãxt
 *
˘x
,

386 (*
f_∫g
)(*, *, 
size_t
),

387 *
p_∫g
,

388 
mode
,

389 c⁄° *
œbñ
, 
size_t
 
œbñ_Àn
,

390 
size_t
 *
ﬁí
,

391 c⁄° *
öput
,

392 *
ouçut
,

393 
size_t
 
ouçut_max_Àn
 );

419 
rß_pkcs1_sign
–
rß_c⁄ãxt
 *
˘x
,

420 (*
f_∫g
)(*, *, 
size_t
),

421 *
p_∫g
,

422 
mode
,

423 
md_ty≥_t
 
md_Æg
,

424 
hashÀn
,

425 c⁄° *
hash
,

426 *
sig
 );

446 
rß_rßsß_pkcs1_v15_sign
–
rß_c⁄ãxt
 *
˘x
,

447 (*
f_∫g
)(*, *, 
size_t
),

448 *
p_∫g
,

449 
mode
,

450 
md_ty≥_t
 
md_Æg
,

451 
hashÀn
,

452 c⁄° *
hash
,

453 *
sig
 );

479 
rß_rßsß_pss_sign
–
rß_c⁄ãxt
 *
˘x
,

480 (*
f_∫g
)(*, *, 
size_t
),

481 *
p_∫g
,

482 
mode
,

483 
md_ty≥_t
 
md_Æg
,

484 
hashÀn
,

485 c⁄° *
hash
,

486 *
sig
 );

511 
rß_pkcs1_vîify
–
rß_c⁄ãxt
 *
˘x
,

512 (*
f_∫g
)(*, *, 
size_t
),

513 *
p_∫g
,

514 
mode
,

515 
md_ty≥_t
 
md_Æg
,

516 
hashÀn
,

517 c⁄° *
hash
,

518 c⁄° *
sig
 );

538 
rß_rßsß_pkcs1_v15_vîify
–
rß_c⁄ãxt
 *
˘x
,

539 (*
f_∫g
)(*, *, 
size_t
),

540 *
p_∫g
,

541 
mode
,

542 
md_ty≥_t
 
md_Æg
,

543 
hashÀn
,

544 c⁄° *
hash
,

545 c⁄° *
sig
 );

572 
rß_rßsß_pss_vîify
–
rß_c⁄ãxt
 *
˘x
,

573 (*
f_∫g
)(*, *, 
size_t
),

574 *
p_∫g
,

575 
mode
,

576 
md_ty≥_t
 
md_Æg
,

577 
hashÀn
,

578 c⁄° *
hash
,

579 c⁄° *
sig
 );

605 
rß_rßsß_pss_vîify_ext
–
rß_c⁄ãxt
 *
˘x
,

606 (*
f_∫g
)(*, *, 
size_t
),

607 *
p_∫g
,

608 
mode
,

609 
md_ty≥_t
 
md_Æg
,

610 
hashÀn
,

611 c⁄° *
hash
,

612 
md_ty≥_t
 
mgf1_hash_id
,

613 
ex≥˘ed_ß…_Àn
,

614 c⁄° *
sig
 );

625 
rß_c›y
–
rß_c⁄ãxt
 *
d°
, c⁄°Ñß_c⁄ãxà*
§c
 );

632 
rß_‰ì
–
rß_c⁄ãxt
 *
˘x
 );

639 
rß_£lf_ã°
–
vîbo£
 );

641 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/sha1.h

27 #i‚de‡
POLARSSL_SHA1_H


28 
	#POLARSSL_SHA1_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~<°rög.h
>

38 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

39 
	~<ba£tsd.h
>

40 
UINT32
 
	tuöt32_t
;

42 
	~<öây≥s.h
>

45 
	#POLARSSL_ERR_SHA1_FILE_IO_ERROR
 -0x0076

	)

47 #i‡!
deföed
(
POLARSSL_SHA1_ALT
)

51 #ifde‡
__˝lu•lus


60 
uöt32_t
 
tŸÆ
[2];

61 
uöt32_t
 
°©e
[5];

62 
buf„r
[64];

64 
ùad
[64];

65 
›ad
[64];

67 
	tsha1_c⁄ãxt
;

74 
sha1_öô
–
sha1_c⁄ãxt
 *
˘x
 );

81 
sha1_‰ì
–
sha1_c⁄ãxt
 *
˘x
 );

88 
sha1_°¨ts
–
sha1_c⁄ãxt
 *
˘x
 );

97 
sha1_upd©e
–
sha1_c⁄ãxt
 *
˘x
, c⁄° *
öput
, 
size_t
 
ûí
 );

105 
sha1_föish
–
sha1_c⁄ãxt
 *
˘x
, 
ouçut
[20] );

108 
sha1_¥o˚ss
–
sha1_c⁄ãxt
 *
˘x
, c⁄° 
d©a
[64] );

110 #ifde‡
__˝lu•lus


115 
	~"sha1_Æt.h
"

118 #ifde‡
__˝lu•lus


129 
sha1
–c⁄° *
öput
, 
size_t
 
ûí
, 
ouçut
[20] );

139 
sha1_fûe
–c⁄° *
∑th
, 
ouçut
[20] );

148 
sha1_hmac_°¨ts
–
sha1_c⁄ãxt
 *
˘x
, c⁄° *
key
,

149 
size_t
 
keyÀn
 );

158 
sha1_hmac_upd©e
–
sha1_c⁄ãxt
 *
˘x
, c⁄° *
öput
,

159 
size_t
 
ûí
 );

167 
sha1_hmac_föish
–
sha1_c⁄ãxt
 *
˘x
, 
ouçut
[20] );

174 
sha1_hmac_ª£t
–
sha1_c⁄ãxt
 *
˘x
 );

185 
sha1_hmac
–c⁄° *
key
, 
size_t
 
keyÀn
,

186 c⁄° *
öput
, 
size_t
 
ûí
,

187 
ouçut
[20] );

194 
sha1_£lf_ã°
–
vîbo£
 );

196 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/sha256.h

27 #i‚de‡
POLARSSL_SHA256_H


28 
	#POLARSSL_SHA256_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~<°rög.h
>

38 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

39 
	~<ba£tsd.h
>

40 
UINT32
 
	tuöt32_t
;

42 
	~<öây≥s.h
>

45 
	#POLARSSL_ERR_SHA256_FILE_IO_ERROR
 -0x0078

	)

47 #i‡!
deföed
(
POLARSSL_SHA256_ALT
)

51 #ifde‡
__˝lu•lus


60 
uöt32_t
 
tŸÆ
[2];

61 
uöt32_t
 
°©e
[8];

62 
buf„r
[64];

64 
ùad
[64];

65 
›ad
[64];

66 
is224
;

68 
	tsha256_c⁄ãxt
;

75 
sha256_öô
–
sha256_c⁄ãxt
 *
˘x
 );

82 
sha256_‰ì
–
sha256_c⁄ãxt
 *
˘x
 );

90 
sha256_°¨ts
–
sha256_c⁄ãxt
 *
˘x
, 
is224
 );

99 
sha256_upd©e
–
sha256_c⁄ãxt
 *
˘x
, c⁄° *
öput
,

100 
size_t
 
ûí
 );

108 
sha256_föish
–
sha256_c⁄ãxt
 *
˘x
, 
ouçut
[32] );

111 
sha256_¥o˚ss
–
sha256_c⁄ãxt
 *
˘x
, c⁄° 
d©a
[64] );

113 #ifde‡
__˝lu•lus


118 
	~"sha256_Æt.h
"

121 #ifde‡
__˝lu•lus


133 
sha256
–c⁄° *
öput
, 
size_t
 
ûí
,

134 
ouçut
[32], 
is224
 );

145 
sha256_fûe
–c⁄° *
∑th
, 
ouçut
[32], 
is224
 );

155 
sha256_hmac_°¨ts
–
sha256_c⁄ãxt
 *
˘x
, c⁄° *
key
,

156 
size_t
 
keyÀn
, 
is224
 );

165 
sha256_hmac_upd©e
–
sha256_c⁄ãxt
 *
˘x
, c⁄° *
öput
,

166 
size_t
 
ûí
 );

174 
sha256_hmac_föish
–
sha256_c⁄ãxt
 *
˘x
, 
ouçut
[32] );

181 
sha256_hmac_ª£t
–
sha256_c⁄ãxt
 *
˘x
 );

193 
sha256_hmac
–c⁄° *
key
, 
size_t
 
keyÀn
,

194 c⁄° *
öput
, 
size_t
 
ûí
,

195 
ouçut
[32], 
is224
 );

202 
sha256_£lf_ã°
–
vîbo£
 );

204 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/sha512.h

27 #i‚de‡
POLARSSL_SHA512_H


28 
	#POLARSSL_SHA512_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~<°rög.h
>

38 #i‡
deföed
(
_MSC_VER
Ë|| deföed(
__WATCOMC__
)

39 
	#UL64
(
x
Ëx##
ui64


	)

40 
	t__öt64
 
	tuöt64_t
;

42 
	~<öây≥s.h
>

43 
	#UL64
(
x
Ëx##
ULL


	)

46 
	#POLARSSL_ERR_SHA512_FILE_IO_ERROR
 -0x007A

	)

48 #i‡!
deföed
(
POLARSSL_SHA512_ALT
)

52 #ifde‡
__˝lu•lus


61 
uöt64_t
 
tŸÆ
[2];

62 
uöt64_t
 
°©e
[8];

63 
buf„r
[128];

65 
ùad
[128];

66 
›ad
[128];

67 
is384
;

69 
	tsha512_c⁄ãxt
;

76 
sha512_öô
–
sha512_c⁄ãxt
 *
˘x
 );

83 
sha512_‰ì
–
sha512_c⁄ãxt
 *
˘x
 );

91 
sha512_°¨ts
–
sha512_c⁄ãxt
 *
˘x
, 
is384
 );

100 
sha512_upd©e
–
sha512_c⁄ãxt
 *
˘x
, c⁄° *
öput
,

101 
size_t
 
ûí
 );

109 
sha512_föish
–
sha512_c⁄ãxt
 *
˘x
, 
ouçut
[64] );

111 #ifde‡
__˝lu•lus


116 
	~"sha512_Æt.h
"

119 #ifde‡
__˝lu•lus


131 
sha512
–c⁄° *
öput
, 
size_t
 
ûí
,

132 
ouçut
[64], 
is384
 );

143 
sha512_fûe
–c⁄° *
∑th
, 
ouçut
[64], 
is384
 );

153 
sha512_hmac_°¨ts
–
sha512_c⁄ãxt
 *
˘x
, c⁄° *
key
,

154 
size_t
 
keyÀn
, 
is384
 );

163 
sha512_hmac_upd©e
–
sha512_c⁄ãxt
 *
˘x
, c⁄° *
öput
,

164 
size_t
 
ûí
 );

172 
sha512_hmac_föish
–
sha512_c⁄ãxt
 *
˘x
, 
ouçut
[64] );

179 
sha512_hmac_ª£t
–
sha512_c⁄ãxt
 *
˘x
 );

191 
sha512_hmac
–c⁄° *
key
, 
size_t
 
keyÀn
,

192 c⁄° *
öput
, 
size_t
 
ûí
,

193 
ouçut
[64], 
is384
 );

200 
sha512_£lf_ã°
–
vîbo£
 );

203 
sha512_¥o˚ss
–
sha512_c⁄ãxt
 *
˘x
, c⁄° 
d©a
[128] );

205 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/ssl.h

27 #i‚de‡
POLARSSL_SSL_H


28 
	#POLARSSL_SSL_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


35 
	~"√t.h
"

36 
	~"bignum.h
"

37 
	~"e˝.h
"

39 
	~"s¶_cùhîsuôes.h
"

41 #i‡
deföed
(
POLARSSL_MD5_C
)

42 
	~"md5.h
"

45 #i‡
deföed
(
POLARSSL_SHA1_C
)

46 
	~"sha1.h
"

49 #i‡
deföed
(
POLARSSL_SHA256_C
)

50 
	~"sha256.h
"

53 #i‡
deföed
(
POLARSSL_SHA512_C
)

54 
	~"sha512.h
"

58 #i‡
deföed
(
POLARSSL_AES_C
)

59 
	~"´s.h
"

62 #i‡
deföed
(
POLARSSL_X509_CRT_PARSE_C
)

63 
	~"x509_¸t.h
"

64 
	~"x509_¸l.h
"

67 #i‡
deföed
(
POLARSSL_DHM_C
)

68 
	~"dhm.h
"

71 #i‡
deföed
(
POLARSSL_ECDH_C
)

72 
	~"ecdh.h
"

75 #i‡
deföed
(
POLARSSL_ZLIB_SUPPORT
)

76 
	~"zlib.h
"

79 #i‡
deföed
(
POLARSSL_HAVE_TIME
)

80 
	~<time.h
>

84 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_PSK_ENABLED
) || \

85 
deföed
(
POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED
) || \

86 
deföed
(
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
) || \

87 
	$deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED
)

88 
	#POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED


	)

91 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) || \

92 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
) || \

93 
	$deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED
)

94 
	#POLARSSL_KEY_EXCHANGE__SOME__ECDHE_ENABLED


	)

97 #i‡
	`deföed
(
_MSC_VER
Ë&& !deföed(
ölöe
)

98 
	#ölöe
 
_ölöe


	)

100 #i‡
	`deföed
(
__ARMCC_VERSION
Ë&& !deföed(
ölöe
)

101 
	#ölöe
 
__ölöe


	)

108 
	#POLARSSL_ERR_SSL_FEATURE_UNAVAILABLE
 -0x7080

	)

109 
	#POLARSSL_ERR_SSL_BAD_INPUT_DATA
 -0x7100

	)

110 
	#POLARSSL_ERR_SSL_INVALID_MAC
 -0x7180

	)

111 
	#POLARSSL_ERR_SSL_INVALID_RECORD
 -0x7200

	)

112 
	#POLARSSL_ERR_SSL_CONN_EOF
 -0x7280

	)

113 
	#POLARSSL_ERR_SSL_UNKNOWN_CIPHER
 -0x7300

	)

114 
	#POLARSSL_ERR_SSL_NO_CIPHER_CHOSEN
 -0x7380

	)

115 
	#POLARSSL_ERR_SSL_NO_RNG
 -0x7400

	)

116 
	#POLARSSL_ERR_SSL_NO_CLIENT_CERTIFICATE
 -0x7480

	)

117 
	#POLARSSL_ERR_SSL_CERTIFICATE_TOO_LARGE
 -0x7500

	)

118 
	#POLARSSL_ERR_SSL_CERTIFICATE_REQUIRED
 -0x7580

	)

119 
	#POLARSSL_ERR_SSL_PRIVATE_KEY_REQUIRED
 -0x7600

	)

120 
	#POLARSSL_ERR_SSL_CA_CHAIN_REQUIRED
 -0x7680

	)

121 
	#POLARSSL_ERR_SSL_UNEXPECTED_MESSAGE
 -0x7700

	)

122 
	#POLARSSL_ERR_SSL_FATAL_ALERT_MESSAGE
 -0x7780

	)

123 
	#POLARSSL_ERR_SSL_PEER_VERIFY_FAILED
 -0x7800

	)

124 
	#POLARSSL_ERR_SSL_PEER_CLOSE_NOTIFY
 -0x7880

	)

125 
	#POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 -0x7900

	)

126 
	#POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 -0x7980

	)

127 
	#POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE
 -0x7A00

	)

128 
	#POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE_REQUEST
 -0x7A80

	)

129 
	#POLARSSL_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE
 -0x7B00

	)

130 
	#POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO_DONE
 -0x7B80

	)

131 
	#POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE
 -0x7C00

	)

132 
	#POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE_RP
 -0x7C80

	)

133 
	#POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE_CS
 -0x7D00

	)

134 
	#POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE_VERIFY
 -0x7D80

	)

135 
	#POLARSSL_ERR_SSL_BAD_HS_CHANGE_CIPHER_SPEC
 -0x7E00

	)

136 
	#POLARSSL_ERR_SSL_BAD_HS_FINISHED
 -0x7E80

	)

137 
	#POLARSSL_ERR_SSL_MALLOC_FAILED
 -0x7F00

	)

138 
	#POLARSSL_ERR_SSL_HW_ACCEL_FAILED
 -0x7F80

	)

139 
	#POLARSSL_ERR_SSL_HW_ACCEL_FALLTHROUGH
 -0x6F80

	)

140 
	#POLARSSL_ERR_SSL_COMPRESSION_FAILED
 -0x6F00

	)

141 
	#POLARSSL_ERR_SSL_BAD_HS_PROTOCOL_VERSION
 -0x6E80

	)

142 
	#POLARSSL_ERR_SSL_BAD_HS_NEW_SESSION_TICKET
 -0x6E00

	)

143 
	#POLARSSL_ERR_SSL_SESSION_TICKET_EXPIRED
 -0x6D80

	)

144 
	#POLARSSL_ERR_SSL_PK_TYPE_MISMATCH
 -0x6D00

	)

145 
	#POLARSSL_ERR_SSL_UNKNOWN_IDENTITY
 -0x6C80

	)

146 
	#POLARSSL_ERR_SSL_INTERNAL_ERROR
 -0x6C00

	)

147 
	#POLARSSL_ERR_SSL_COUNTER_WRAPPING
 -0x6B80

	)

152 
	#SSL_MAJOR_VERSION_3
 3

	)

153 
	#SSL_MINOR_VERSION_0
 0

	)

154 
	#SSL_MINOR_VERSION_1
 1

	)

155 
	#SSL_MINOR_VERSION_2
 2

	)

156 
	#SSL_MINOR_VERSION_3
 3

	)

159 
	#SSL_MIN_MAJOR_VERSION
 
SSL_MAJOR_VERSION_3


	)

161 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
)

162 
	#SSL_MIN_MINOR_VERSION
 
SSL_MINOR_VERSION_0


	)

164 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
)

165 
	#SSL_MIN_MINOR_VERSION
 
SSL_MINOR_VERSION_1


	)

167 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
)

168 
	#SSL_MIN_MINOR_VERSION
 
SSL_MINOR_VERSION_2


	)

170 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

171 
	#SSL_MIN_MINOR_VERSION
 
SSL_MINOR_VERSION_3


	)

178 
	#SSL_MAX_MAJOR_VERSION
 
SSL_MAJOR_VERSION_3


	)

180 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

181 
	#SSL_MAX_MINOR_VERSION
 
SSL_MINOR_VERSION_3


	)

183 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
)

184 
	#SSL_MAX_MINOR_VERSION
 
SSL_MINOR_VERSION_2


	)

186 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
)

187 
	#SSL_MAX_MINOR_VERSION
 
SSL_MINOR_VERSION_1


	)

189 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
)

190 
	#SSL_MAX_MINOR_VERSION
 
SSL_MINOR_VERSION_0


	)

198 
	#SSL_MAX_FRAG_LEN_NONE
 0

	)

199 
	#SSL_MAX_FRAG_LEN_512
 1

	)

200 
	#SSL_MAX_FRAG_LEN_1024
 2

	)

201 
	#SSL_MAX_FRAG_LEN_2048
 3

	)

202 
	#SSL_MAX_FRAG_LEN_4096
 4

	)

203 
	#SSL_MAX_FRAG_LEN_INVALID
 5

	)

205 
	#SSL_IS_CLIENT
 0

	)

206 
	#SSL_IS_SERVER
 1

	)

207 
	#SSL_COMPRESS_NULL
 0

	)

208 
	#SSL_COMPRESS_DEFLATE
 1

	)

210 
	#SSL_VERIFY_NONE
 0

	)

211 
	#SSL_VERIFY_OPTIONAL
 1

	)

212 
	#SSL_VERIFY_REQUIRED
 2

	)

214 
	#SSL_INITIAL_HANDSHAKE
 0

	)

215 
	#SSL_RENEGOTIATION
 1

	)

216 
	#SSL_RENEGOTIATION_DONE
 2

	)

217 
	#SSL_RENEGOTIATION_PENDING
 3

	)

219 
	#SSL_LEGACY_RENEGOTIATION
 0

	)

220 
	#SSL_SECURE_RENEGOTIATION
 1

	)

222 
	#SSL_RENEGOTIATION_DISABLED
 0

	)

223 
	#SSL_RENEGOTIATION_ENABLED
 1

	)

225 
	#SSL_RENEGOTIATION_NOT_ENFORCED
 -1

	)

226 
	#SSL_RENEGO_MAX_RECORDS_DEFAULT
 16

	)

228 
	#SSL_LEGACY_NO_RENEGOTIATION
 0

	)

229 
	#SSL_LEGACY_ALLOW_RENEGOTIATION
 1

	)

230 
	#SSL_LEGACY_BREAK_HANDSHAKE
 2

	)

232 
	#SSL_TRUNC_HMAC_DISABLED
 0

	)

233 
	#SSL_TRUNC_HMAC_ENABLED
 1

	)

234 
	#SSL_TRUNCATED_HMAC_LEN
 10

	)

236 
	#SSL_SESSION_TICKETS_DISABLED
 0

	)

237 
	#SSL_SESSION_TICKETS_ENABLED
 1

	)

247 #i‡!
	`deföed
(
SSL_DEFAULT_TICKET_LIFETIME
)

248 
	#SSL_DEFAULT_TICKET_LIFETIME
 86400

	)

260 #i‡!
	`deföed
(
SSL_MAX_CONTENT_LEN
)

261 
	#SSL_MAX_CONTENT_LEN
 16384

	)

272 #i‡
	`deföed
(
POLARSSL_ZLIB_SUPPORT
)

273 
	#SSL_COMPRESSION_ADD
 1024

	)

275 
	#SSL_COMPRESSION_ADD
 0

	)

278 #i‡
	`deföed
(
POLARSSL_RC4_C
Ë|| deföed(
POLARSSL_CIPHER_MODE_CBC
)

280 #i‡
	`deföed
(
POLARSSL_SHA512_C
)

281 
	#SSL_MAC_ADD
 48

	)

282 #ñi‡
	`deföed
(
POLARSSL_SHA256_C
)

283 
	#SSL_MAC_ADD
 32

	)

285 
	#SSL_MAC_ADD
 20

	)

289 
	#SSL_MAC_ADD
 16

	)

292 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
)

293 
	#SSL_PADDING_ADD
 256

	)

295 
	#SSL_PADDING_ADD
 0

	)

298 
	#SSL_BUFFER_LEN
 ( 
SSL_MAX_CONTENT_LEN
 \

299 + 
SSL_COMPRESSION_ADD
 \

301 + 
SSL_MAC_ADD
 \

302 + 
SSL_PADDING_ADD
 \

303 )

	)

308 
	#SSL_EMPTY_RENEGOTIATION_INFO
 0xFF

	)

314 
	#SSL_HASH_NONE
 0

	)

315 
	#SSL_HASH_MD5
 1

	)

316 
	#SSL_HASH_SHA1
 2

	)

317 
	#SSL_HASH_SHA224
 3

	)

318 
	#SSL_HASH_SHA256
 4

	)

319 
	#SSL_HASH_SHA384
 5

	)

320 
	#SSL_HASH_SHA512
 6

	)

322 
	#SSL_SIG_ANON
 0

	)

323 
	#SSL_SIG_RSA
 1

	)

324 
	#SSL_SIG_ECDSA
 3

	)

330 
	#SSL_CERT_TYPE_RSA_SIGN
 1

	)

331 
	#SSL_CERT_TYPE_ECDSA_SIGN
 64

	)

336 
	#SSL_MSG_CHANGE_CIPHER_SPEC
 20

	)

337 
	#SSL_MSG_ALERT
 21

	)

338 
	#SSL_MSG_HANDSHAKE
 22

	)

339 
	#SSL_MSG_APPLICATION_DATA
 23

	)

341 
	#SSL_ALERT_LEVEL_WARNING
 1

	)

342 
	#SSL_ALERT_LEVEL_FATAL
 2

	)

344 
	#SSL_ALERT_MSG_CLOSE_NOTIFY
 0

	)

345 
	#SSL_ALERT_MSG_UNEXPECTED_MESSAGE
 10

	)

346 
	#SSL_ALERT_MSG_BAD_RECORD_MAC
 20

	)

347 
	#SSL_ALERT_MSG_DECRYPTION_FAILED
 21

	)

348 
	#SSL_ALERT_MSG_RECORD_OVERFLOW
 22

	)

349 
	#SSL_ALERT_MSG_DECOMPRESSION_FAILURE
 30

	)

350 
	#SSL_ALERT_MSG_HANDSHAKE_FAILURE
 40

	)

351 
	#SSL_ALERT_MSG_NO_CERT
 41

	)

352 
	#SSL_ALERT_MSG_BAD_CERT
 42

	)

353 
	#SSL_ALERT_MSG_UNSUPPORTED_CERT
 43

	)

354 
	#SSL_ALERT_MSG_CERT_REVOKED
 44

	)

355 
	#SSL_ALERT_MSG_CERT_EXPIRED
 45

	)

356 
	#SSL_ALERT_MSG_CERT_UNKNOWN
 46

	)

357 
	#SSL_ALERT_MSG_ILLEGAL_PARAMETER
 47

	)

358 
	#SSL_ALERT_MSG_UNKNOWN_CA
 48

	)

359 
	#SSL_ALERT_MSG_ACCESS_DENIED
 49

	)

360 
	#SSL_ALERT_MSG_DECODE_ERROR
 50

	)

361 
	#SSL_ALERT_MSG_DECRYPT_ERROR
 51

	)

362 
	#SSL_ALERT_MSG_EXPORT_RESTRICTION
 60

	)

363 
	#SSL_ALERT_MSG_PROTOCOL_VERSION
 70

	)

364 
	#SSL_ALERT_MSG_INSUFFICIENT_SECURITY
 71

	)

365 
	#SSL_ALERT_MSG_INTERNAL_ERROR
 80

	)

366 
	#SSL_ALERT_MSG_USER_CANCELED
 90

	)

367 
	#SSL_ALERT_MSG_NO_RENEGOTIATION
 100

	)

368 
	#SSL_ALERT_MSG_UNSUPPORTED_EXT
 110

	)

369 
	#SSL_ALERT_MSG_UNRECOGNIZED_NAME
 112

	)

370 
	#SSL_ALERT_MSG_UNKNOWN_PSK_IDENTITY
 115

	)

371 
	#SSL_ALERT_MSG_NO_APPLICATION_PROTOCOL
 120

	)

373 
	#SSL_HS_HELLO_REQUEST
 0

	)

374 
	#SSL_HS_CLIENT_HELLO
 1

	)

375 
	#SSL_HS_SERVER_HELLO
 2

	)

376 
	#SSL_HS_NEW_SESSION_TICKET
 4

	)

377 
	#SSL_HS_CERTIFICATE
 11

	)

378 
	#SSL_HS_SERVER_KEY_EXCHANGE
 12

	)

379 
	#SSL_HS_CERTIFICATE_REQUEST
 13

	)

380 
	#SSL_HS_SERVER_HELLO_DONE
 14

	)

381 
	#SSL_HS_CERTIFICATE_VERIFY
 15

	)

382 
	#SSL_HS_CLIENT_KEY_EXCHANGE
 16

	)

383 
	#SSL_HS_FINISHED
 20

	)

388 
	#TLS_EXT_SERVERNAME
 0

	)

389 
	#TLS_EXT_SERVERNAME_HOSTNAME
 0

	)

391 
	#TLS_EXT_MAX_FRAGMENT_LENGTH
 1

	)

393 
	#TLS_EXT_TRUNCATED_HMAC
 4

	)

395 
	#TLS_EXT_SUPPORTED_ELLIPTIC_CURVES
 10

	)

396 
	#TLS_EXT_SUPPORTED_POINT_FORMATS
 11

	)

398 
	#TLS_EXT_SIG_ALG
 13

	)

400 
	#TLS_EXT_ALPN
 16

	)

402 
	#TLS_EXT_SESSION_TICKET
 35

	)

404 
	#TLS_EXT_RENEGOTIATION_INFO
 0xFF01

	)

411 
	#TLS_EXT_SUPPORTED_POINT_FORMATS_PRESENT
 (1 << 0)

	)

416 #i‡!
	`deföed
(
POLARSSL_PSK_MAX_LEN
)

417 
	#POLARSSL_PSK_MAX_LEN
 32

	)

421 
	u_s¶_¥ema°î_£¸ë


423 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_RSA_ENABLED
)

424 
_pms_rß
[48];

426 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
)

427 
_pms_dhm
[
POLARSSL_MPI_MAX_SIZE
];

429 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) || \

430 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
) || \

431 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_RSA_ENABLED
) || \

432 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
)

433 
_pms_ecdh
[
POLARSSL_ECP_MAX_BYTES
];

435 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_PSK_ENABLED
)

436 
_pms_psk
[4 + 2 * 
POLARSSL_PSK_MAX_LEN
];

438 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
)

439 
_pms_dhe_psk
[4 + 
POLARSSL_MPI_MAX_SIZE


440 + 
POLARSSL_PSK_MAX_LEN
];

442 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED
)

443 
_pms_rß_psk
[52 + 
POLARSSL_PSK_MAX_LEN
];

445 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
)

446 
_pms_ecdhe_psk
[4 + 
POLARSSL_ECP_MAX_BYTES


447 + 
POLARSSL_PSK_MAX_LEN
];

451 
	#POLARSSL_PREMASTER_SIZE
 –
_s¶_¥ema°î_£¸ë
 )

	)

453 #ifde‡
__˝lu•lus


461 (*
	trß_de¸y±_func
)–*
	t˘x
, 
	tmode
, 
	tsize_t
 *
	tﬁí
,

462 c⁄° *
	töput
, *
	touçut
,

463 
	tsize_t
 
	touçut_max_Àn
 );

464 (*
	trß_sign_func
)–*
	t˘x
,

465 (*
	tf_∫g
)(*, *, 
	tsize_t
), *
	tp_∫g
,

466 
	tmode
, 
	tmd_ty≥_t
 
	tmd_Æg
, 
	thashÀn
,

467 c⁄° *
	thash
, *
	tsig
 );

468 
	`size_t
 (*
	trß_key_Àn_func
)–*
	t˘x
 );

475 
SSL_HELLO_REQUEST
,

476 
SSL_CLIENT_HELLO
,

477 
SSL_SERVER_HELLO
,

478 
SSL_SERVER_CERTIFICATE
,

479 
SSL_SERVER_KEY_EXCHANGE
,

480 
SSL_CERTIFICATE_REQUEST
,

481 
SSL_SERVER_HELLO_DONE
,

482 
SSL_CLIENT_CERTIFICATE
,

483 
SSL_CLIENT_KEY_EXCHANGE
,

484 
SSL_CERTIFICATE_VERIFY
,

485 
SSL_CLIENT_CHANGE_CIPHER_SPEC
,

486 
SSL_CLIENT_FINISHED
,

487 
SSL_SERVER_CHANGE_CIPHER_SPEC
,

488 
SSL_SERVER_FINISHED
,

489 
SSL_FLUSH_BUFFERS
,

490 
SSL_HANDSHAKE_WRAPUP
,

491 
SSL_HANDSHAKE_OVER
,

492 
SSL_SERVER_NEW_SESSION_TICKET
,

494 
	ts¶_°©es
;

496 
_s¶_£ssi⁄
 
	ts¶_£ssi⁄
;

497 
_s¶_c⁄ãxt
 
	ts¶_c⁄ãxt
;

498 
_s¶_å™sf‹m
 
	ts¶_å™sf‹m
;

499 
_s¶_h™dshake_∑øms
 
	ts¶_h™dshake_∑øms
;

500 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

501 
_s¶_tickë_keys
 
	ts¶_tickë_keys
;

503 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

504 
_s¶_key_˚π
 
	ts¶_key_˚π
;

510 
	s_s¶_£ssi⁄


512 #i‡
	`deföed
(
POLARSSL_HAVE_TIME
)

513 
time_t
 
°¨t
;

515 
cùhîsuôe
;

516 
com¥essi⁄
;

517 
size_t
 
Àngth
;

518 
id
[32];

519 
ma°î
[48];

521 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

522 
x509_¸t
 *
≥î_˚π
;

524 
vîify_ªsu…
;

526 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

527 *
tickë
;

528 
size_t
 
tickë_Àn
;

529 
uöt32_t
 
tickë_li„time
;

532 #i‡
	`deföed
(
POLARSSL_SSL_MAX_FRAGMENT_LENGTH
)

533 
mÊ_code
;

536 #i‡
	`deföed
(
POLARSSL_SSL_TRUNCATED_HMAC
)

537 
åunc_hmac
;

545 
	s_s¶_å™sf‹m


550 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
;

552 
keyÀn
;

553 
size_t
 
möÀn
;

554 
size_t
 
ivÀn
;

555 
size_t
 
fixed_ivÀn
;

556 
size_t
 
ma˛í
;

558 
iv_íc
[16];

559 
iv_dec
[16];

561 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
)

563 
mac_íc
[48];

564 
mac_dec
[48];

567 
md_c⁄ãxt_t
 
md_˘x_íc
;

568 
md_c⁄ãxt_t
 
md_˘x_dec
;

570 
cùhî_c⁄ãxt_t
 
cùhî_˘x_íc
;

571 
cùhî_c⁄ãxt_t
 
cùhî_˘x_dec
;

576 #i‡
	`deföed
(
POLARSSL_ZLIB_SUPPORT
)

577 
z_°ªam
 
˘x_deÊ©e
;

578 
z_°ªam
 
˘x_öÊ©e
;

585 
	s_s¶_h™dshake_∑øms


590 
sig_Æg
;

591 
˚π_ty≥
;

592 
vîify_sig_Æg
;

593 #i‡
	`deföed
(
POLARSSL_DHM_C
)

594 
dhm_c⁄ãxt
 
dhm_˘x
;

596 #i‡
	`deföed
(
POLARSSL_ECDH_C
)

597 
ecdh_c⁄ãxt
 
ecdh_˘x
;

599 #i‡
	`deföed
(
POLARSSL_ECDH_C
Ë|| deföed(
POLARSSL_ECDSA_C
)

600 c⁄° 
e˝_curve_öfo
 **
curves
;

602 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

609 
s¶_key_˚π
 *
key_˚π
;

610 #i‡
	`deföed
(
POLARSSL_SSL_SERVER_NAME_INDICATION
)

611 
s¶_key_˚π
 *
¢i_key_˚π
;

618 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1
) || \

619 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
)

620 
md5_c⁄ãxt
 
fö_md5
;

621 
sha1_c⁄ãxt
 
fö_sha1
;

623 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

624 #i‡
	`deföed
(
POLARSSL_SHA256_C
)

625 
sha256_c⁄ãxt
 
fö_sha256
;

627 #i‡
	`deföed
(
POLARSSL_SHA512_C
)

628 
sha512_c⁄ãxt
 
fö_sha512
;

632 (*
upd©e_checksum
)(
s¶_c⁄ãxt
 *, c⁄° *, 
size_t
);

633 (*
ˇlc_vîify
)(
s¶_c⁄ãxt
 *, *);

634 (*
ˇlc_föished
)(
s¶_c⁄ãxt
 *, *, );

635 (*
és_¥f
)(c⁄° *, 
size_t
, const *,

636 c⁄° *, 
size_t
,

637 *, 
size_t
);

639 
size_t
 
pm¶í
;

641 
øndbyãs
[64];

642 
¥ema°î
[
POLARSSL_PREMASTER_SIZE
];

645 
ªsume
;

646 
max_maj‹_vî
;

647 
max_mö‹_vî
;

648 
˛i_exts
;

650 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

651 
√w_£ssi⁄_tickë
;

655 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

659 
	s_s¶_tickë_keys


661 
key_«me
[16];

662 
´s_c⁄ãxt
 
íc
;

663 
´s_c⁄ãxt
 
dec
;

664 
mac_key
[16];

668 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

672 
	s_s¶_key_˚π


674 
x509_¸t
 *
˚π
;

675 
pk_c⁄ãxt
 *
key
;

676 
key_own_Æloc
;

677 
s¶_key_˚π
 *
√xt
;

681 
	s_s¶_c⁄ãxt


686 
°©e
;

687 
ª√gŸüti⁄
;

688 
ª√go_ªc‹ds_£í
;

690 
maj‹_vî
;

691 
mö‹_vî
;

693 
max_maj‹_vî
;

694 
max_mö‹_vî
;

695 
mö_maj‹_vî
;

696 
mö_mö‹_vî
;

701 (*
f_∫g
)(*, *, 
size_t
);

702 (*
f_dbg
)(*, , const *);

703 (*
f_ªcv
)(*, *, 
size_t
);

704 (*
f_£nd
)(*, c⁄° *, 
size_t
);

705 (*
f_gë_ˇche
)(*, 
s¶_£ssi⁄
 *);

706 (*
f_£t_ˇche
)(*, c⁄° 
s¶_£ssi⁄
 *);

708 *
p_∫g
;

709 *
p_dbg
;

710 *
p_ªcv
;

711 *
p_£nd
;

712 *
p_gë_ˇche
;

713 *
p_£t_ˇche
;

714 *
p_hw_d©a
;

716 #i‡
	`deföed
(
POLARSSL_SSL_SERVER_NAME_INDICATION
)

717 (*
f_¢i
)(*, 
s¶_c⁄ãxt
 *, c⁄° *, 
size_t
);

718 *
p_¢i
;

721 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

722 (*
f_vrfy
)(*, 
x509_¸t
 *, , *);

723 *
p_vrfy
;

726 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

727 (*
f_psk
)(*, 
s¶_c⁄ãxt
 *, c⁄° *, 
size_t
);

728 *
p_psk
;

734 
s¶_£ssi⁄
 *
£ssi⁄_ö
;

735 
s¶_£ssi⁄
 *
£ssi⁄_out
;

736 
s¶_£ssi⁄
 *
£ssi⁄
;

737 
s¶_£ssi⁄
 *
£ssi⁄_√gŸüã
;

739 
s¶_h™dshake_∑øms
 *
h™dshake
;

745 
s¶_å™sf‹m
 *
å™sf‹m_ö
;

746 
s¶_å™sf‹m
 *
å™sf‹m_out
;

747 
s¶_å™sf‹m
 *
å™sf‹m
;

748 
s¶_å™sf‹m
 *
å™sf‹m_√gŸüã
;

753 *
ö_˘r
;

754 *
ö_hdr
;

755 *
ö_iv
;

756 *
ö_msg
;

757 *
ö_of·
;

759 
ö_msgty≥
;

760 
size_t
 
ö_msgÀn
;

761 
size_t
 
ö_À·
;

763 
size_t
 
ö_h¶í
;

764 
nb_zîo
;

765 
ªc‹d_ªad
;

770 *
out_˘r
;

771 *
out_hdr
;

772 *
out_iv
;

773 *
out_msg
;

775 
out_msgty≥
;

776 
size_t
 
out_msgÀn
;

777 
size_t
 
out_À·
;

779 #i‡
	`deföed
(
POLARSSL_ZLIB_SUPPORT
)

780 *
com¥ess_buf
;

782 #i‡
	`deföed
(
POLARSSL_SSL_MAX_FRAGMENT_LENGTH
)

783 
mÊ_code
;

789 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

790 
s¶_key_˚π
 *
key_˚π
;

792 
x509_¸t
 *
ˇ_chaö
;

793 
x509_¸l
 *
ˇ_¸l
;

794 c⁄° *
≥î_˙
;

800 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

801 
s¶_tickë_keys
 *
tickë_keys
;

807 
ídpoöt
;

808 
authmode
;

809 
˛õ¡_auth
;

810 
vîify_ªsu…
;

811 
dißbÀ_ª√gŸüti⁄
;

812 
Ælow_Àgacy_ª√gŸüti⁄
;

813 
ª√go_max_ªc‹ds
;

814 c⁄° *
cùhîsuôe_li°
[4];

815 #i‡
	`deföed
(
POLARSSL_SSL_SET_CURVES
)

816 c⁄° 
e˝_group_id
 *
curve_li°
;

818 #i‡
	`deföed
(
POLARSSL_SSL_TRUNCATED_HMAC
)

819 
åunc_hmac
;

821 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

822 
£ssi⁄_tickës
;

823 
tickë_li„time
;

826 #i‡
	`deföed
(
POLARSSL_DHM_C
)

827 
mpi
 
dhm_P
;

828 
mpi
 
dhm_G
;

831 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

835 *
psk
;

836 
size_t
 
psk_Àn
;

837 *
psk_idítôy
;

838 
size_t
 
psk_idítôy_Àn
;

841 #i‡
	`deföed
(
POLARSSL_SSL_SERVER_NAME_INDICATION
)

845 *
ho°«me
;

846 
size_t
 
ho°«me_Àn
;

849 #i‡
	`deföed
(
POLARSSL_SSL_ALPN
)

853 c⁄° **
Æ≤_li°
;

854 c⁄° *
Æ≤_cho£n
;

860 
£cuª_ª√gŸüti⁄
;

862 
size_t
 
vîify_d©a_Àn
;

863 
own_vîify_d©a
[36];

864 
≥î_vîify_d©a
[36];

867 #i‡
	`deföed
(
POLARSSL_SSL_HW_RECORD_ACCEL
)

869 
	#SSL_CHANNEL_OUTBOUND
 0

	)

870 
	#SSL_CHANNEL_INBOUND
 1

	)

872 (*
s¶_hw_ªc‹d_öô
)(
s¶_c⁄ãxt
 *
s¶
,

873 c⁄° *
key_íc
, c⁄° *
key_dec
,

874 
size_t
 
keyÀn
,

875 c⁄° *
iv_íc
, c⁄° *
iv_dec
,

876 
size_t
 
ivÀn
,

877 c⁄° *
mac_íc
, c⁄° *
mac_dec
,

878 
size_t
 
ma˛í
);

879 (*
s¶_hw_ªc‹d_a˘iv©e
)(
s¶_c⁄ãxt
 *
s¶
, 
dúe˘i⁄
);

880 (*
s¶_hw_ªc‹d_ª£t
)(
s¶_c⁄ãxt
 *
s¶
);

881 (*
s¶_hw_ªc‹d_wrôe
)(
s¶_c⁄ãxt
 *
s¶
);

882 (*
s¶_hw_ªc‹d_ªad
)(
s¶_c⁄ãxt
 *
s¶
);

883 (*
s¶_hw_ªc‹d_föish
)(
s¶_c⁄ãxt
 *
s¶
);

892 c⁄° *
	`s¶_li°_cùhîsuôes
( );

902 c⁄° *
	`s¶_gë_cùhîsuôe_«me
–c⁄° 
cùhîsuôe_id
 );

912 
	`s¶_gë_cùhîsuôe_id
–c⁄° *
cùhîsuôe_«me
 );

923 
	`s¶_öô
–
s¶_c⁄ãxt
 *
s¶
 );

935 
	`s¶_£ssi⁄_ª£t
–
s¶_c⁄ãxt
 *
s¶
 );

946 
	`s¶_£t_ídpoöt
–
s¶_c⁄ãxt
 *
s¶
, 
ídpoöt
 );

971 
	`s¶_£t_authmode
–
s¶_c⁄ãxt
 *
s¶
, 
authmode
 );

973 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

985 
	`s¶_£t_vîify
–
s¶_c⁄ãxt
 *
s¶
,

986 (*
f_vrfy
)(*, 
x509_¸t
 *, , *),

987 *
p_vrfy
 );

997 
	`s¶_£t_∫g
–
s¶_c⁄ãxt
 *
s¶
,

998 (*
f_∫g
)(*, *, 
size_t
),

999 *
p_∫g
 );

1008 
	`s¶_£t_dbg
–
s¶_c⁄ãxt
 *
s¶
,

1009 (*
f_dbg
)(*, , const *),

1010 *
p_dbg
 );

1021 
	`s¶_£t_bio
–
s¶_c⁄ãxt
 *
s¶
,

1022 (*
f_ªcv
)(*, *, 
size_t
), *
p_ªcv
,

1023 (*
f_£nd
)(*, c⁄° *, 
size_t
), *
p_£nd
 );

1062 
	`s¶_£t_£ssi⁄_ˇche
–
s¶_c⁄ãxt
 *
s¶
,

1063 (*
f_gë_ˇche
)(*, 
s¶_£ssi⁄
 *), *
p_gë_ˇche
,

1064 (*
f_£t_ˇche
)(*, c⁄° 
s¶_£ssi⁄
 *), *
p_£t_ˇche
 );

1080 
	`s¶_£t_£ssi⁄
–
s¶_c⁄ãxt
 *
s¶
, c⁄° 
s¶_£ssi⁄
 *
£ssi⁄
 );

1094 
	`s¶_£t_cùhîsuôes
–
s¶_c⁄ãxt
 *
s¶
, c⁄° *
cùhîsuôes
 );

1109 
	`s¶_£t_cùhîsuôes_f‹_vîsi⁄
–
s¶_c⁄ãxt
 *
s¶
,

1110 c⁄° *
cùhîsuôes
,

1111 
maj‹
, 
mö‹
 );

1113 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

1122 
	`s¶_£t_ˇ_chaö
–
s¶_c⁄ãxt
 *
s¶
, 
x509_¸t
 *
ˇ_chaö
,

1123 
x509_¸l
 *
ˇ_¸l
, c⁄° *
≥î_˙
 );

1143 
	`s¶_£t_own_˚π
–
s¶_c⁄ãxt
 *
s¶
, 
x509_¸t
 *
own_˚π
,

1144 
pk_c⁄ãxt
 *
pk_key
 );

1146 #i‡
	`deföed
(
POLARSSL_RSA_C
)

1163 
	`s¶_£t_own_˚π_rß
–
s¶_c⁄ãxt
 *
s¶
, 
x509_¸t
 *
own_˚π
,

1164 
rß_c⁄ãxt
 *
rß_key
 );

1192 
	`s¶_£t_own_˚π_Æt
–
s¶_c⁄ãxt
 *
s¶
, 
x509_¸t
 *
own_˚π
,

1193 *
rß_key
,

1194 
rß_de¸y±_func
 
rß_de¸y±
,

1195 
rß_sign_func
 
rß_sign
,

1196 
rß_key_Àn_func
 
rß_key_Àn
 );

1199 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

1212 
	`s¶_£t_psk
–
s¶_c⁄ãxt
 *
s¶
, c⁄° *
psk
, 
size_t
 
psk_Àn
,

1213 c⁄° *
psk_idítôy
, 
size_t
 
psk_idítôy_Àn
 );

1235 
	`s¶_£t_psk_cb
–
s¶_c⁄ãxt
 *
s¶
,

1236 (*
f_psk
)(*, 
s¶_c⁄ãxt
 *, const *,

1237 
size_t
),

1238 *
p_psk
 );

1241 #i‡
	`deföed
(
POLARSSL_DHM_C
)

1253 
	`s¶_£t_dh_∑øm
–
s¶_c⁄ãxt
 *
s¶
, c⁄° *
dhm_P
, c⁄° *
dhm_G
 );

1264 
	`s¶_£t_dh_∑øm_˘x
–
s¶_c⁄ãxt
 *
s¶
, 
dhm_c⁄ãxt
 *
dhm_˘x
 );

1267 #i‡
	`deföed
(
POLARSSL_SSL_SET_CURVES
)

1286 
	`s¶_£t_curves
–
s¶_c⁄ãxt
 *
s¶
, c⁄° 
e˝_group_id
 *
curves
 );

1289 #i‡
	`deföed
(
POLARSSL_SSL_SERVER_NAME_INDICATION
)

1300 
	`s¶_£t_ho°«me
–
s¶_c⁄ãxt
 *
s¶
, c⁄° *
ho°«me
 );

1321 
	`s¶_£t_¢i
–
s¶_c⁄ãxt
 *
s¶
,

1322 (*
f_¢i
)(*, 
s¶_c⁄ãxt
 *, const *,

1323 
size_t
),

1324 *
p_¢i
 );

1327 #i‡
	`deföed
(
POLARSSL_SSL_ALPN
)

1337 
	`s¶_£t_Æ≤_¥Ÿocﬁs
–
s¶_c⁄ãxt
 *
s¶
, c⁄° **
¥Ÿos
 );

1348 c⁄° *
	`s¶_gë_Æ≤_¥Ÿocﬁ
–c⁄° 
s¶_c⁄ãxt
 *
s¶
 );

1366 
	`s¶_£t_max_vîsi⁄
–
s¶_c⁄ãxt
 *
s¶
, 
maj‹
, 
mö‹
 );

1382 
	`s¶_£t_mö_vîsi⁄
–
s¶_c⁄ãxt
 *
s¶
, 
maj‹
, 
mö‹
 );

1384 #i‡
	`deföed
(
POLARSSL_SSL_MAX_FRAGMENT_LENGTH
)

1400 
	`s¶_£t_max_‰ag_Àn
–
s¶_c⁄ãxt
 *
s¶
, 
mÊ_code
 );

1403 #i‡
	`deföed
(
POLARSSL_SSL_TRUNCATED_HMAC
)

1415 
	`s¶_£t_åunˇãd_hmac
–
s¶_c⁄ãxt
 *
s¶
, 
åunˇã
 );

1418 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

1435 
	`s¶_£t_£ssi⁄_tickës
–
s¶_c⁄ãxt
 *
s¶
, 
u£_tickës
 );

1444 
	`s¶_£t_£ssi⁄_tickë_li„time
–
s¶_c⁄ãxt
 *
s¶
, 
li„time
 );

1460 
	`s¶_£t_ª√gŸüti⁄
–
s¶_c⁄ãxt
 *
s¶
, 
ª√gŸüti⁄
 );

1489 
	`s¶_Àgacy_ª√gŸüti⁄
–
s¶_c⁄ãxt
 *
s¶
, 
Ælow_Àgacy
 );

1516 
	`s¶_£t_ª√gŸüti⁄_íf‹˚d
–
s¶_c⁄ãxt
 *
s¶
, 
max_ªc‹ds
 );

1525 
size_t
 
	`s¶_gë_byãs_avaû
–c⁄° 
s¶_c⁄ãxt
 *
s¶
 );

1538 
	`s¶_gë_vîify_ªsu…
–c⁄° 
s¶_c⁄ãxt
 *
s¶
 );

1547 c⁄° *
	`s¶_gë_cùhîsuôe
–c⁄° 
s¶_c⁄ãxt
 *
s¶
 );

1556 c⁄° *
	`s¶_gë_vîsi⁄
–c⁄° 
s¶_c⁄ãxt
 *
s¶
 );

1558 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

1573 c⁄° 
x509_¸t
 *
	`s¶_gë_≥î_˚π
–c⁄° 
s¶_c⁄ãxt
 *
s¶
 );

1592 
	`s¶_gë_£ssi⁄
–c⁄° 
s¶_c⁄ãxt
 *
s¶
, 
s¶_£ssi⁄
 *
£ssi⁄
 );

1602 
	`s¶_h™dshake
–
s¶_c⁄ãxt
 *
s¶
 );

1616 
	`s¶_h™dshake_°ï
–
s¶_c⁄ãxt
 *
s¶
 );

1628 
	`s¶_ª√gŸüã
–
s¶_c⁄ãxt
 *
s¶
 );

1640 
	`s¶_ªad
–
s¶_c⁄ãxt
 *
s¶
, *
buf
, 
size_t
 
Àn
 );

1656 
	`s¶_wrôe
–
s¶_c⁄ãxt
 *
s¶
, c⁄° *
buf
, 
size_t
 
Àn
 );

1668 
	`s¶_£nd_Æît_mesßge
–
s¶_c⁄ãxt
 *
s¶
,

1669 
Àvñ
,

1670 
mesßge
 );

1676 
	`s¶_˛o£_nŸify
–
s¶_c⁄ãxt
 *
s¶
 );

1683 
	`s¶_‰ì
–
s¶_c⁄ãxt
 *
s¶
 );

1690 
	`s¶_£ssi⁄_öô
–
s¶_£ssi⁄
 *
£ssi⁄
 );

1698 
	`s¶_£ssi⁄_‰ì
–
s¶_£ssi⁄
 *
£ssi⁄
 );

1706 
	`s¶_å™sf‹m_‰ì
–
s¶_å™sf‹m
 *
å™sf‹m
 );

1714 
	`s¶_h™dshake_‰ì
–
s¶_h™dshake_∑øms
 *
h™dshake
 );

1719 
	`s¶_h™dshake_˛õ¡_°ï
–
s¶_c⁄ãxt
 *
s¶
 );

1720 
	`s¶_h™dshake_£rvî_°ï
–
s¶_c⁄ãxt
 *
s¶
 );

1721 
	`s¶_h™dshake_wøpup
–
s¶_c⁄ãxt
 *
s¶
 );

1723 
	`s¶_£nd_Áèl_h™dshake_Áûuª
–
s¶_c⁄ãxt
 *
s¶
 );

1725 
	`s¶_dîive_keys
–
s¶_c⁄ãxt
 *
s¶
 );

1727 
	`s¶_ªad_ªc‹d
–
s¶_c⁄ãxt
 *
s¶
 );

1732 
	`s¶_„tch_öput
–
s¶_c⁄ãxt
 *
s¶
, 
size_t
 
nb_w™t
 );

1734 
	`s¶_wrôe_ªc‹d
–
s¶_c⁄ãxt
 *
s¶
 );

1735 
	`s¶_Êush_ouçut
–
s¶_c⁄ãxt
 *
s¶
 );

1737 
	`s¶_∑r£_˚πifiˇã
–
s¶_c⁄ãxt
 *
s¶
 );

1738 
	`s¶_wrôe_˚πifiˇã
–
s¶_c⁄ãxt
 *
s¶
 );

1740 
	`s¶_∑r£_ch™ge_cùhî_•ec
–
s¶_c⁄ãxt
 *
s¶
 );

1741 
	`s¶_wrôe_ch™ge_cùhî_•ec
–
s¶_c⁄ãxt
 *
s¶
 );

1743 
	`s¶_∑r£_föished
–
s¶_c⁄ãxt
 *
s¶
 );

1744 
	`s¶_wrôe_föished
–
s¶_c⁄ãxt
 *
s¶
 );

1746 
	`s¶_›timize_checksum
–
s¶_c⁄ãxt
 *
s¶
,

1747 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
 );

1749 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

1750 
	`s¶_psk_dîive_¥ema°î
–
s¶_c⁄ãxt
 *
s¶
, 
key_exch™ge_ty≥_t
 
key_ex
 );

1753 #i‡
	`deföed
(
POLARSSL_PK_C
)

1754 
	`s¶_sig_‰om_pk
–
pk_c⁄ãxt
 *
pk
 );

1755 
pk_ty≥_t
 
	`s¶_pk_Æg_‰om_sig
–
sig
 );

1758 
md_ty≥_t
 
	`s¶_md_Æg_‰om_hash
–
hash
 );

1760 #i‡
	`deföed
(
POLARSSL_SSL_SET_CURVES
)

1761 
	`s¶_curve_is_ac˚±abÀ
–c⁄° 
s¶_c⁄ãxt
 *
s¶
, 
e˝_group_id
 
gΩ_id
 );

1764 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

1765 
ölöe
 
pk_c⁄ãxt
 *
	`s¶_own_key
–
s¶_c⁄ãxt
 *
s¶
 )

1767 –
s¶
->
h™dshake
->
key_˚π
 =
NULL
 ? NULL

1768 : 
s¶
->
h™dshake
->
key_˚π
->
key
 );

1771 
ölöe
 
x509_¸t
 *
	`s¶_own_˚π
–
s¶_c⁄ãxt
 *
s¶
 )

1773 –
s¶
->
h™dshake
->
key_˚π
 =
NULL
 ? NULL

1774 : 
s¶
->
h™dshake
->
key_˚π
->
˚π
 );

1786 
	`s¶_check_˚π_ußge
–c⁄° 
x509_¸t
 *
˚π
,

1787 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe
,

1788 
˚π_ídpoöt
 );

1792 
ölöe
 
	`ß„r_memcmp
–c⁄° *
a
, c⁄° *
b
, 
size_t
 
n
 )

1794 
size_t
 
i
;

1795 c⁄° *
A
 = (c⁄° *Ë
a
;

1796 c⁄° *
B
 = (c⁄° *Ë
b
;

1797 
diff
 = 0;

1799  
i
 = 0; i < 
n
; i++ )

1800 
diff
 |
A
[
i
] ^ 
B
[i];

1802 –
diff
 );

1805 #ifde‡
__˝lu•lus


1806 
	}
}

	@polarssl/include/polarssl/ssl_cache.h

27 #i‚de‡
POLARSSL_SSL_CACHE_H


28 
	#POLARSSL_SSL_CACHE_H


	)

30 
	~"s¶.h
"

32 #i‡
deföed
(
POLARSSL_THREADING_C
)

33 
	~"thªadög.h
"

44 #i‡!
deföed
(
SSL_CACHE_DEFAULT_TIMEOUT
)

45 
	#SSL_CACHE_DEFAULT_TIMEOUT
 86400

	)

48 #i‡!
deföed
(
SSL_CACHE_DEFAULT_MAX_ENTRIES
)

49 
	#SSL_CACHE_DEFAULT_MAX_ENTRIES
 50

	)

54 #ifde‡
__˝lu•lus


58 
_s¶_ˇche_c⁄ãxt
 
	ts¶_ˇche_c⁄ãxt
;

59 
_s¶_ˇche_íåy
 
	ts¶_ˇche_íåy
;

64 
	s_s¶_ˇche_íåy


66 #i‡
deföed
(
POLARSSL_HAVE_TIME
)

67 
time_t
 
time°amp
;

69 
s¶_£ssi⁄
 
£ssi⁄
;

70 #i‡
deföed
(
POLARSSL_X509_CRT_PARSE_C
)

71 
x509_buf
 
≥î_˚π
;

73 
s¶_ˇche_íåy
 *
√xt
;

79 
	s_s¶_ˇche_c⁄ãxt


81 
s¶_ˇche_íåy
 *
chaö
;

82 
timeout
;

83 
max_íåõs
;

84 #i‡
deföed
(
POLARSSL_THREADING_C
)

85 
thªadög_muãx_t
 
muãx
;

94 
s¶_ˇche_öô
–
s¶_ˇche_c⁄ãxt
 *
ˇche
 );

103 
s¶_ˇche_gë
–*
d©a
, 
s¶_£ssi⁄
 *
£ssi⁄
 );

112 
s¶_ˇche_£t
–*
d©a
, c⁄° 
s¶_£ssi⁄
 *
£ssi⁄
 );

114 #i‡
deföed
(
POLARSSL_HAVE_TIME
)

124 
s¶_ˇche_£t_timeout
–
s¶_ˇche_c⁄ãxt
 *
ˇche
, 
timeout
 );

134 
s¶_ˇche_£t_max_íåõs
–
s¶_ˇche_c⁄ãxt
 *
ˇche
, 
max
 );

141 
s¶_ˇche_‰ì
–
s¶_ˇche_c⁄ãxt
 *
ˇche
 );

143 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/ssl_ciphersuites.h

27 #i‚de‡
POLARSSL_SSL_CIPHERSUITES_H


28 
	#POLARSSL_SSL_CIPHERSUITES_H


	)

30 
	~"pk.h
"

31 
	~"cùhî.h
"

32 
	~"md.h
"

34 #ifde‡
__˝lu•lus


41 
	#TLS_RSA_WITH_NULL_MD5
 0x01

	)

42 
	#TLS_RSA_WITH_NULL_SHA
 0x02

	)

44 
	#TLS_RSA_WITH_RC4_128_MD5
 0x04

	)

45 
	#TLS_RSA_WITH_RC4_128_SHA
 0x05

	)

46 
	#TLS_RSA_WITH_DES_CBC_SHA
 0x09

	)

48 
	#TLS_RSA_WITH_3DES_EDE_CBC_SHA
 0x0A

	)

50 
	#TLS_DHE_RSA_WITH_DES_CBC_SHA
 0x15

	)

51 
	#TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
 0x16

	)

53 
	#TLS_PSK_WITH_NULL_SHA
 0x2C

	)

54 
	#TLS_DHE_PSK_WITH_NULL_SHA
 0x2D

	)

55 
	#TLS_RSA_PSK_WITH_NULL_SHA
 0x2E

	)

56 
	#TLS_RSA_WITH_AES_128_CBC_SHA
 0x2F

	)

58 
	#TLS_DHE_RSA_WITH_AES_128_CBC_SHA
 0x33

	)

59 
	#TLS_RSA_WITH_AES_256_CBC_SHA
 0x35

	)

60 
	#TLS_DHE_RSA_WITH_AES_256_CBC_SHA
 0x39

	)

62 
	#TLS_RSA_WITH_NULL_SHA256
 0x3B

	)

63 
	#TLS_RSA_WITH_AES_128_CBC_SHA256
 0x3C

	)

64 
	#TLS_RSA_WITH_AES_256_CBC_SHA256
 0x3D

	)

66 
	#TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
 0x41

	)

67 
	#TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA
 0x45

	)

69 
	#TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
 0x67

	)

70 
	#TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
 0x6B

	)

72 
	#TLS_RSA_WITH_CAMELLIA_256_CBC_SHA
 0x84

	)

73 
	#TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA
 0x88

	)

75 
	#TLS_PSK_WITH_RC4_128_SHA
 0x8A

	)

76 
	#TLS_PSK_WITH_3DES_EDE_CBC_SHA
 0x8B

	)

77 
	#TLS_PSK_WITH_AES_128_CBC_SHA
 0x8C

	)

78 
	#TLS_PSK_WITH_AES_256_CBC_SHA
 0x8D

	)

80 
	#TLS_DHE_PSK_WITH_RC4_128_SHA
 0x8E

	)

81 
	#TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA
 0x8F

	)

82 
	#TLS_DHE_PSK_WITH_AES_128_CBC_SHA
 0x90

	)

83 
	#TLS_DHE_PSK_WITH_AES_256_CBC_SHA
 0x91

	)

85 
	#TLS_RSA_PSK_WITH_RC4_128_SHA
 0x92

	)

86 
	#TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA
 0x93

	)

87 
	#TLS_RSA_PSK_WITH_AES_128_CBC_SHA
 0x94

	)

88 
	#TLS_RSA_PSK_WITH_AES_256_CBC_SHA
 0x95

	)

90 
	#TLS_RSA_WITH_AES_128_GCM_SHA256
 0x9C

	)

91 
	#TLS_RSA_WITH_AES_256_GCM_SHA384
 0x9D

	)

92 
	#TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
 0x9E

	)

93 
	#TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
 0x9F

	)

95 
	#TLS_PSK_WITH_AES_128_GCM_SHA256
 0xA8

	)

96 
	#TLS_PSK_WITH_AES_256_GCM_SHA384
 0xA9

	)

97 
	#TLS_DHE_PSK_WITH_AES_128_GCM_SHA256
 0xAA

	)

98 
	#TLS_DHE_PSK_WITH_AES_256_GCM_SHA384
 0xAB

	)

99 
	#TLS_RSA_PSK_WITH_AES_128_GCM_SHA256
 0xAC

	)

100 
	#TLS_RSA_PSK_WITH_AES_256_GCM_SHA384
 0xAD

	)

102 
	#TLS_PSK_WITH_AES_128_CBC_SHA256
 0xAE

	)

103 
	#TLS_PSK_WITH_AES_256_CBC_SHA384
 0xAF

	)

104 
	#TLS_PSK_WITH_NULL_SHA256
 0xB0

	)

105 
	#TLS_PSK_WITH_NULL_SHA384
 0xB1

	)

107 
	#TLS_DHE_PSK_WITH_AES_128_CBC_SHA256
 0xB2

	)

108 
	#TLS_DHE_PSK_WITH_AES_256_CBC_SHA384
 0xB3

	)

109 
	#TLS_DHE_PSK_WITH_NULL_SHA256
 0xB4

	)

110 
	#TLS_DHE_PSK_WITH_NULL_SHA384
 0xB5

	)

112 
	#TLS_RSA_PSK_WITH_AES_128_CBC_SHA256
 0xB6

	)

113 
	#TLS_RSA_PSK_WITH_AES_256_CBC_SHA384
 0xB7

	)

114 
	#TLS_RSA_PSK_WITH_NULL_SHA256
 0xB8

	)

115 
	#TLS_RSA_PSK_WITH_NULL_SHA384
 0xB9

	)

117 
	#TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256
 0xBA

	)

118 
	#TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256
 0xBE

	)

120 
	#TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256
 0xC0

	)

121 
	#TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256
 0xC4

	)

123 
	#TLS_ECDH_ECDSA_WITH_NULL_SHA
 0xC001

	)

124 
	#TLS_ECDH_ECDSA_WITH_RC4_128_SHA
 0xC002

	)

125 
	#TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
 0xC003

	)

126 
	#TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
 0xC004

	)

127 
	#TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
 0xC005

	)

129 
	#TLS_ECDHE_ECDSA_WITH_NULL_SHA
 0xC006

	)

130 
	#TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
 0xC007

	)

131 
	#TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
 0xC008

	)

132 
	#TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
 0xC009

	)

133 
	#TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
 0xC00A

	)

135 
	#TLS_ECDH_RSA_WITH_NULL_SHA
 0xC00B

	)

136 
	#TLS_ECDH_RSA_WITH_RC4_128_SHA
 0xC00C

	)

137 
	#TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
 0xC00D

	)

138 
	#TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
 0xC00E

	)

139 
	#TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
 0xC00F

	)

141 
	#TLS_ECDHE_RSA_WITH_NULL_SHA
 0xC010

	)

142 
	#TLS_ECDHE_RSA_WITH_RC4_128_SHA
 0xC011

	)

143 
	#TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
 0xC012

	)

144 
	#TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
 0xC013

	)

145 
	#TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
 0xC014

	)

147 
	#TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
 0xC023

	)

148 
	#TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
 0xC024

	)

149 
	#TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
 0xC025

	)

150 
	#TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
 0xC026

	)

151 
	#TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
 0xC027

	)

152 
	#TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
 0xC028

	)

153 
	#TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
 0xC029

	)

154 
	#TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
 0xC02A

	)

156 
	#TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
 0xC02B

	)

157 
	#TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
 0xC02C

	)

158 
	#TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
 0xC02D

	)

159 
	#TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
 0xC02E

	)

160 
	#TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
 0xC02F

	)

161 
	#TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
 0xC030

	)

162 
	#TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
 0xC031

	)

163 
	#TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
 0xC032

	)

165 
	#TLS_ECDHE_PSK_WITH_RC4_128_SHA
 0xC033

	)

166 
	#TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA
 0xC034

	)

167 
	#TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
 0xC035

	)

168 
	#TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
 0xC036

	)

169 
	#TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256
 0xC037

	)

170 
	#TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384
 0xC038

	)

171 
	#TLS_ECDHE_PSK_WITH_NULL_SHA
 0xC039

	)

172 
	#TLS_ECDHE_PSK_WITH_NULL_SHA256
 0xC03A

	)

173 
	#TLS_ECDHE_PSK_WITH_NULL_SHA384
 0xC03B

	)

175 
	#TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256
 0xC072

	)

176 
	#TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384
 0xC073

	)

177 
	#TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256
 0xC074

	)

178 
	#TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384
 0xC075

	)

179 
	#TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256
 0xC076

	)

180 
	#TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384
 0xC077

	)

181 
	#TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256
 0xC078

	)

182 
	#TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384
 0xC079

	)

184 
	#TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256
 0xC07A

	)

185 
	#TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384
 0xC07B

	)

186 
	#TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256
 0xC07C

	)

187 
	#TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384
 0xC07D

	)

188 
	#TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256
 0xC086

	)

189 
	#TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384
 0xC087

	)

190 
	#TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256
 0xC088

	)

191 
	#TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384
 0xC089

	)

192 
	#TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256
 0xC08A

	)

193 
	#TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384
 0xC08B

	)

194 
	#TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256
 0xC08C

	)

195 
	#TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384
 0xC08D

	)

197 
	#TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256
 0xC08E

	)

198 
	#TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384
 0xC08F

	)

199 
	#TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256
 0xC090

	)

200 
	#TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384
 0xC091

	)

201 
	#TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256
 0xC092

	)

202 
	#TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384
 0xC093

	)

204 
	#TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256
 0xC094

	)

205 
	#TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384
 0xC095

	)

206 
	#TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256
 0xC096

	)

207 
	#TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384
 0xC097

	)

208 
	#TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256
 0xC098

	)

209 
	#TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384
 0xC099

	)

210 
	#TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256
 0xC09A

	)

211 
	#TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384
 0xC09B

	)

213 
	#TLS_RSA_WITH_AES_128_CCM
 0xC09C

	)

214 
	#TLS_RSA_WITH_AES_256_CCM
 0xC09D

	)

215 
	#TLS_DHE_RSA_WITH_AES_128_CCM
 0xC09E

	)

216 
	#TLS_DHE_RSA_WITH_AES_256_CCM
 0xC09F

	)

217 
	#TLS_RSA_WITH_AES_128_CCM_8
 0xC0A0

	)

218 
	#TLS_RSA_WITH_AES_256_CCM_8
 0xC0A1

	)

219 
	#TLS_DHE_RSA_WITH_AES_128_CCM_8
 0xC0A2

	)

220 
	#TLS_DHE_RSA_WITH_AES_256_CCM_8
 0xC0A3

	)

221 
	#TLS_PSK_WITH_AES_128_CCM
 0xC0A4

	)

222 
	#TLS_PSK_WITH_AES_256_CCM
 0xC0A5

	)

223 
	#TLS_DHE_PSK_WITH_AES_128_CCM
 0xC0A6

	)

224 
	#TLS_DHE_PSK_WITH_AES_256_CCM
 0xC0A7

	)

225 
	#TLS_PSK_WITH_AES_128_CCM_8
 0xC0A8

	)

226 
	#TLS_PSK_WITH_AES_256_CCM_8
 0xC0A9

	)

227 
	#TLS_DHE_PSK_WITH_AES_128_CCM_8
 0xC0AA

	)

228 
	#TLS_DHE_PSK_WITH_AES_256_CCM_8
 0xC0AB

	)

231 
	#TLS_ECDHE_ECDSA_WITH_AES_128_CCM
 0xC0AC

	)

232 
	#TLS_ECDHE_ECDSA_WITH_AES_256_CCM
 0xC0AD

	)

233 
	#TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8
 0xC0AE

	)

234 
	#TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8
 0xC0AF

	)

238 
POLARSSL_KEY_EXCHANGE_NONE
 = 0,

239 
POLARSSL_KEY_EXCHANGE_RSA
,

240 
POLARSSL_KEY_EXCHANGE_DHE_RSA
,

241 
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
,

242 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
,

243 
POLARSSL_KEY_EXCHANGE_PSK
,

244 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

245 
POLARSSL_KEY_EXCHANGE_RSA_PSK
,

246 
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
,

247 
POLARSSL_KEY_EXCHANGE_ECDH_RSA
,

248 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
,

249 } 
	tkey_exch™ge_ty≥_t
;

251 
_s¶_cùhîsuôe_t
 
	ts¶_cùhîsuôe_t
;

253 
	#POLARSSL_CIPHERSUITE_WEAK
 0x01

	)

254 
	#POLARSSL_CIPHERSUITE_SHORT_TAG
 0x02

	)

260 
	s_s¶_cùhîsuôe_t


262 
id
;

263 c⁄° * 
«me
;

265 
cùhî_ty≥_t
 
cùhî
;

266 
md_ty≥_t
 
mac
;

267 
key_exch™ge_ty≥_t
 
key_exch™ge
;

269 
mö_maj‹_vî
;

270 
mö_mö‹_vî
;

271 
max_maj‹_vî
;

272 
max_mö‹_vî
;

274 
Êags
;

277 c⁄° *
s¶_li°_cùhîsuôes
( );

279 c⁄° 
s¶_cùhîsuôe_t
 *
s¶_cùhîsuôe_‰om_°rög
–c⁄° *
cùhîsuôe_«me
 );

280 c⁄° 
s¶_cùhîsuôe_t
 *
s¶_cùhîsuôe_‰om_id
–
cùhîsuôe_id
 );

282 #i‡
deföed
(
POLARSSL_PK_C
)

283 
pk_ty≥_t
 
s¶_gë_cùhîsuôe_sig_pk_Æg
–c⁄° 
s¶_cùhîsuôe_t
 *
öfo
 );

286 
s¶_cùhîsuôe_u£s_ec
–c⁄° 
s¶_cùhîsuôe_t
 *
öfo
 );

287 
s¶_cùhîsuôe_u£s_psk
–c⁄° 
s¶_cùhîsuôe_t
 *
öfo
 );

289 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/threading.h

27 #i‚de‡
POLARSSL_THREADING_H


28 
	#POLARSSL_THREADING_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~<°dlib.h
>

38 #ifde‡
__˝lu•lus


42 
	#POLARSSL_ERR_THREADING_FEATURE_UNAVAILABLE
 -0x001A

	)

43 
	#POLARSSL_ERR_THREADING_BAD_INPUT_DATA
 -0x001C

	)

44 
	#POLARSSL_ERR_THREADING_MUTEX_ERROR
 -0x001E

	)

46 #i‡
deföed
(
POLARSSL_THREADING_PTHREAD
)

47 
	~<±hªad.h
>

48 
±hªad_muãx_t
 
	tthªadög_muãx_t
;

51 #i‡
deföed
(
POLARSSL_THREADING_ALT
)

53 
	~"thªadög_Æt.h
"

66 
thªadög_£t_Æt
–(*
muãx_öô
)–
thªadög_muãx_t
 * ),

67 (*
muãx_‰ì
)–
thªadög_muãx_t
 * ),

68 (*
muãx_lock
)–
thªadög_muãx_t
 * ),

69 (*
muãx_u∆ock
)–
thªadög_muãx_t
 * ) );

77 (*
pﬁ¨s¶_muãx_öô
)–
thªadög_muãx_t
 *
muãx
 );

78 (*
pﬁ¨s¶_muãx_‰ì
)–
thªadög_muãx_t
 *
muãx
 );

79 (*
pﬁ¨s¶_muãx_lock
)–
thªadög_muãx_t
 *
muãx
 );

80 (*
pﬁ¨s¶_muãx_u∆ock
)–
thªadög_muãx_t
 *
muãx
 );

82 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/timing.h

27 #i‚de‡
POLARSSL_TIMING_H


28 
	#POLARSSL_TIMING_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 #i‡!
deföed
(
POLARSSL_TIMING_ALT
)

40 #ifde‡
__˝lu•lus


47 
	shr_time


49 
›aque
[32];

52 vﬁ©ûê
Æ¨med
;

57 
h¨d˛ock
( );

65 
gë_timî
–
hr_time
 *
vÆ
, 
ª£t
 );

72 
£t_Æ¨m
–
£c⁄ds
 );

79 
m_¶ìp
–
mûli£c⁄ds
 );

81 #i‡
deföed
(
POLARSSL_SELF_TEST
)

87 
timög_£lf_ã°
–
vîbo£
 );

90 #ifde‡
__˝lu•lus


95 
	~"timög_Æt.h
"

	@polarssl/include/polarssl/version.h

31 #i‚de‡
POLARSSL_VERSION_H


32 
	#POLARSSL_VERSION_H


	)

34 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

35 
	~"c⁄fig.h
"

37 #ö˛udê
POLARSSL_CONFIG_FILE


44 
	#POLARSSL_VERSION_MAJOR
 1

	)

45 
	#POLARSSL_VERSION_MINOR
 3

	)

46 
	#POLARSSL_VERSION_PATCH
 8

	)

53 
	#POLARSSL_VERSION_NUMBER
 0x01030800

	)

54 
	#POLARSSL_VERSION_STRING
 "1.3.8"

	)

55 
	#POLARSSL_VERSION_STRING_FULL
 "Pﬁ¨SSL 1.3.8"

	)

57 #i‡
deföed
(
POLARSSL_VERSION_C
)

59 #ifde‡
__˝lu•lus


69 
vîsi⁄_gë_numbî
( );

77 
vîsi⁄_gë_°rög
–*
°rög
 );

88 
vîsi⁄_gë_°rög_fuŒ
–*
°rög
 );

106 
vîsi⁄_check_„©uª
–c⁄° *
„©uª
 );

108 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/x509.h

27 #i‚de‡
POLARSSL_X509_H


28 
	#POLARSSL_X509_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~"a¢1.h
"

37 
	~"pk.h
"

39 #i‡
deföed
(
POLARSSL_RSA_C
)

40 
	~"rß.h
"

52 
	#POLARSSL_ERR_X509_FEATURE_UNAVAILABLE
 -0x2080

	)

53 
	#POLARSSL_ERR_X509_UNKNOWN_OID
 -0x2100

	)

54 
	#POLARSSL_ERR_X509_INVALID_FORMAT
 -0x2180

	)

55 
	#POLARSSL_ERR_X509_INVALID_VERSION
 -0x2200

	)

56 
	#POLARSSL_ERR_X509_INVALID_SERIAL
 -0x2280

	)

57 
	#POLARSSL_ERR_X509_INVALID_ALG
 -0x2300

	)

58 
	#POLARSSL_ERR_X509_INVALID_NAME
 -0x2380

	)

59 
	#POLARSSL_ERR_X509_INVALID_DATE
 -0x2400

	)

60 
	#POLARSSL_ERR_X509_INVALID_SIGNATURE
 -0x2480

	)

61 
	#POLARSSL_ERR_X509_INVALID_EXTENSIONS
 -0x2500

	)

62 
	#POLARSSL_ERR_X509_UNKNOWN_VERSION
 -0x2580

	)

63 
	#POLARSSL_ERR_X509_UNKNOWN_SIG_ALG
 -0x2600

	)

64 
	#POLARSSL_ERR_X509_SIG_MISMATCH
 -0x2680

	)

65 
	#POLARSSL_ERR_X509_CERT_VERIFY_FAILED
 -0x2700

	)

66 
	#POLARSSL_ERR_X509_CERT_UNKNOWN_FORMAT
 -0x2780

	)

67 
	#POLARSSL_ERR_X509_BAD_INPUT_DATA
 -0x2800

	)

68 
	#POLARSSL_ERR_X509_MALLOC_FAILED
 -0x2880

	)

69 
	#POLARSSL_ERR_X509_FILE_IO_ERROR
 -0x2900

	)

76 
	#BADCERT_EXPIRED
 0x01

	)

77 
	#BADCERT_REVOKED
 0x02

	)

78 
	#BADCERT_CN_MISMATCH
 0x04

	)

79 
	#BADCERT_NOT_TRUSTED
 0x08

	)

80 
	#BADCRL_NOT_TRUSTED
 0x10

	)

81 
	#BADCRL_EXPIRED
 0x20

	)

82 
	#BADCERT_MISSING
 0x40

	)

83 
	#BADCERT_SKIP_VERIFY
 0x80

	)

84 
	#BADCERT_OTHER
 0x0100

	)

85 
	#BADCERT_FUTURE
 0x0200

	)

86 
	#BADCRL_FUTURE
 0x0400

	)

93 
	#KU_DIGITAL_SIGNATURE
 (0x80Ë

	)

94 
	#KU_NON_REPUDIATION
 (0x40Ë

	)

95 
	#KU_KEY_ENCIPHERMENT
 (0x20Ë

	)

96 
	#KU_DATA_ENCIPHERMENT
 (0x10Ë

	)

97 
	#KU_KEY_AGREEMENT
 (0x08Ë

	)

98 
	#KU_KEY_CERT_SIGN
 (0x04Ë

	)

99 
	#KU_CRL_SIGN
 (0x02Ë

	)

106 
	#NS_CERT_TYPE_SSL_CLIENT
 (0x80Ë

	)

107 
	#NS_CERT_TYPE_SSL_SERVER
 (0x40Ë

	)

108 
	#NS_CERT_TYPE_EMAIL
 (0x20Ë

	)

109 
	#NS_CERT_TYPE_OBJECT_SIGNING
 (0x10Ë

	)

110 
	#NS_CERT_TYPE_RESERVED
 (0x08Ë

	)

111 
	#NS_CERT_TYPE_SSL_CA
 (0x04Ë

	)

112 
	#NS_CERT_TYPE_EMAIL_CA
 (0x02Ë

	)

113 
	#NS_CERT_TYPE_OBJECT_SIGNING_CA
 (0x01Ë

	)

121 
	#EXT_AUTHORITY_KEY_IDENTIFIER
 (1 << 0)

	)

122 
	#EXT_SUBJECT_KEY_IDENTIFIER
 (1 << 1)

	)

123 
	#EXT_KEY_USAGE
 (1 << 2Ë

	)

124 
	#EXT_CERTIFICATE_POLICIES
 (1 << 3)

	)

125 
	#EXT_POLICY_MAPPINGS
 (1 << 4)

	)

126 
	#EXT_SUBJECT_ALT_NAME
 (1 << 5Ë

	)

127 
	#EXT_ISSUER_ALT_NAME
 (1 << 6)

	)

128 
	#EXT_SUBJECT_DIRECTORY_ATTRS
 (1 << 7)

	)

129 
	#EXT_BASIC_CONSTRAINTS
 (1 << 8Ë

	)

130 
	#EXT_NAME_CONSTRAINTS
 (1 << 9)

	)

131 
	#EXT_POLICY_CONSTRAINTS
 (1 << 10)

	)

132 
	#EXT_EXTENDED_KEY_USAGE
 (1 << 11Ë

	)

133 
	#EXT_CRL_DISTRIBUTION_POINTS
 (1 << 12)

	)

134 
	#EXT_INIHIBIT_ANYPOLICY
 (1 << 13)

	)

135 
	#EXT_FRESHEST_CRL
 (1 << 14)

	)

137 
	#EXT_NS_CERT_TYPE
 (1 << 16Ë

	)

143 
	#X509_FORMAT_DER
 1

	)

144 
	#X509_FORMAT_PEM
 2

	)

146 #ifde‡
__˝lu•lus


162 
a¢1_buf
 
	tx509_buf
;

167 
a¢1_bô°rög
 
	tx509_bô°rög
;

173 
a¢1_«med_d©a
 
	tx509_«me
;

178 
a¢1_£quí˚
 
	tx509_£quí˚
;

181 
	s_x509_time


183 
yór
, 
m⁄
, 
day
;

184 
hour
, 
mö
, 
£c
;

186 
	tx509_time
;

202 
x509_dn_gës
–*
buf
, 
size_t
 
size
, c⁄° 
x509_«me
 *
dn
 );

215 
x509_£rül_gës
–*
buf
, 
size_t
 
size
, c⁄° 
x509_buf
 *
£rül
 );

227 c⁄° *
x509_oid_gë_des¸ùti⁄
–
x509_buf
 *
oid
 );

240 
x509_oid_gë_numîic_°rög
–*
buf
, 
size_t
 
size
, 
x509_buf
 *
oid
 );

251 
x509_time_expúed
–c⁄° 
x509_time
 *
time
 );

262 
x509_time_futuª
–c⁄° 
x509_time
 *
time
 );

269 
x509_£lf_ã°
–
vîbo£
 );

275 
x509_gë_«me
–**
p
, c⁄° *
íd
,

276 
x509_«me
 *
cur
 );

277 
x509_gë_Æg_nuŒ
–**
p
, c⁄° *
íd
,

278 
x509_buf
 *
Æg
 );

279 
x509_gë_Æg
–**
p
, c⁄° *
íd
,

280 
x509_buf
 *
Æg
, x509_bu‡*
∑øms
 );

281 #i‡
deföed
(
POLARSSL_X509_RSASSA_PSS_SUPPORT
)

282 
x509_gë_rßsß_pss_∑øms
–c⁄° 
x509_buf
 *
∑øms
,

283 
md_ty≥_t
 *
md_Æg
, md_ty≥_à*
mgf_md
,

284 *
ß…_Àn
 );

286 
x509_gë_sig
–**
p
, c⁄° *
íd
, 
x509_buf
 *
sig
 );

287 
x509_gë_sig_Æg
–c⁄° 
x509_buf
 *
sig_oid
, c⁄° x509_bu‡*
sig_∑øms
,

288 
md_ty≥_t
 *
md_Æg
, 
pk_ty≥_t
 *
pk_Æg
,

289 **
sig_›ts
 );

290 
x509_gë_time
–**
p
, c⁄° *
íd
,

291 
x509_time
 *
time
 );

292 
x509_gë_£rül
–**
p
, c⁄° *
íd
,

293 
x509_buf
 *
£rül
 );

294 
x509_gë_ext
–**
p
, c⁄° *
íd
,

295 
x509_buf
 *
ext
, 
èg
 );

296 
x509_lﬂd_fûe
–c⁄° *
∑th
, **
buf
, 
size_t
 *
n
 );

297 
x509_sig_Æg_gës
–*
buf
, 
size_t
 
size
, c⁄° 
x509_buf
 *
sig_oid
,

298 
pk_ty≥_t
 
pk_Æg
, 
md_ty≥_t
 
md_Æg
,

299 c⁄° *
sig_›ts
 );

300 
x509_key_size_hñ≥r
–*
buf
, 
size_t
 
size
, c⁄° *
«me
 );

301 
x509_°rög_to_«mes
–
a¢1_«med_d©a
 **
hód
, c⁄° *
«me
 );

302 
x509_£t_exãnsi⁄
–
a¢1_«med_d©a
 **
hód
, c⁄° *
oid
, 
size_t
 
oid_Àn
,

303 
¸ôiˇl
, c⁄° *
vÆ
,

304 
size_t
 
vÆ_Àn
 );

305 
x509_wrôe_exãnsi⁄s
–**
p
, *
°¨t
,

306 
a¢1_«med_d©a
 *
fú°
 );

307 
x509_wrôe_«mes
–**
p
, *
°¨t
,

308 
a¢1_«med_d©a
 *
fú°
 );

309 
x509_wrôe_sig
–**
p
, *
°¨t
,

310 c⁄° *
oid
, 
size_t
 
oid_Àn
,

311 *
sig
, 
size_t
 
size
 );

313 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/x509_crl.h

27 #i‚de‡
POLARSSL_X509_CRL_H


28 
	#POLARSSL_X509_CRL_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~"x509.h
"

38 #ifde‡
__˝lu•lus


55 
	s_x509_¸l_íåy


57 
x509_buf
 
øw
;

59 
x509_buf
 
£rül
;

61 
x509_time
 
ªvoˇti⁄_d©e
;

63 
x509_buf
 
íåy_ext
;

65 
_x509_¸l_íåy
 *
√xt
;

67 
	tx509_¸l_íåy
;

73 
	s_x509_¸l


75 
x509_buf
 
øw
;

76 
x509_buf
 
tbs
;

78 
vîsi⁄
;

79 
x509_buf
 
sig_oid1
;

81 
x509_buf
 
issuî_øw
;

83 
x509_«me
 
issuî
;

85 
x509_time
 
this_upd©e
;

86 
x509_time
 
√xt_upd©e
;

88 
x509_¸l_íåy
 
íåy
;

90 
x509_buf
 
¸l_ext
;

92 
x509_buf
 
sig_oid2
;

93 
x509_buf
 
sig
;

94 
md_ty≥_t
 
sig_md
;

95 
pk_ty≥_t
 
sig_pk
;

96 *
sig_›ts
;

98 
_x509_¸l
 *
√xt
;

100 
	tx509_¸l
;

112 
x509_¸l_∑r£
–
x509_¸l
 *
chaö
, c⁄° *
buf
, 
size_t
 
buÊí
 );

114 #i‡
deföed
(
POLARSSL_FS_IO
)

124 
x509_¸l_∑r£_fûe
–
x509_¸l
 *
chaö
, c⁄° *
∑th
 );

138 
x509_¸l_öfo
–*
buf
, 
size_t
 
size
, c⁄° *
¥efix
,

139 c⁄° 
x509_¸l
 *
¸l
 );

146 
x509_¸l_öô
–
x509_¸l
 *
¸l
 );

153 
x509_¸l_‰ì
–
x509_¸l
 *
¸l
 );

158 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/x509_crt.h

27 #i‚de‡
POLARSSL_X509_CRT_H


28 
	#POLARSSL_X509_CRT_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~"x509.h
"

38 
	~"x509_¸l.h
"

45 #ifde‡
__˝lu•lus


57 
	s_x509_¸t


59 
x509_buf
 
øw
;

60 
x509_buf
 
tbs
;

62 
vîsi⁄
;

63 
x509_buf
 
£rül
;

64 
x509_buf
 
sig_oid1
;

66 
x509_buf
 
issuî_øw
;

67 
x509_buf
 
subje˘_øw
;

69 
x509_«me
 
issuî
;

70 
x509_«me
 
subje˘
;

72 
x509_time
 
vÆid_‰om
;

73 
x509_time
 
vÆid_to
;

75 
pk_c⁄ãxt
 
pk
;

77 
x509_buf
 
issuî_id
;

78 
x509_buf
 
subje˘_id
;

79 
x509_buf
 
v3_ext
;

80 
x509_£quí˚
 
subje˘_Æt_«mes
;

82 
ext_ty≥s
;

83 
ˇ_i°rue
;

84 
max_∑thÀn
;

86 
key_ußge
;

88 
x509_£quí˚
 
ext_key_ußge
;

90 
ns_˚π_ty≥
;

92 
x509_buf
 
sig_oid2
;

93 
x509_buf
 
sig
;

94 
md_ty≥_t
 
sig_md
;

95 
pk_ty≥_t
 
sig_pk
;

96 *
sig_›ts
;

98 
_x509_¸t
 *
√xt
;

100 
	tx509_¸t
;

102 
	#X509_CRT_VERSION_1
 0

	)

103 
	#X509_CRT_VERSION_2
 1

	)

104 
	#X509_CRT_VERSION_3
 2

	)

106 
	#X509_RFC5280_MAX_SERIAL_LEN
 32

	)

107 
	#X509_RFC5280_UTC_TIME_LEN
 15

	)

112 
	s_x509wrôe_˚π


114 
vîsi⁄
;

115 
mpi
 
£rül
;

116 
pk_c⁄ãxt
 *
subje˘_key
;

117 
pk_c⁄ãxt
 *
issuî_key
;

118 
a¢1_«med_d©a
 *
subje˘
;

119 
a¢1_«med_d©a
 *
issuî
;

120 
md_ty≥_t
 
md_Æg
;

121 
nŸ_bef‹e
[
X509_RFC5280_UTC_TIME_LEN
 + 1];

122 
nŸ_a·î
[
X509_RFC5280_UTC_TIME_LEN
 + 1];

123 
a¢1_«med_d©a
 *
exãnsi⁄s
;

125 
	tx509wrôe_˚π
;

127 #i‡
deföed
(
POLARSSL_X509_CRT_PARSE_C
)

138 
x509_¸t_∑r£_dî
–
x509_¸t
 *
chaö
, c⁄° *
buf
,

139 
size_t
 
buÊí
 );

155 
x509_¸t_∑r£
–
x509_¸t
 *
chaö
, c⁄° *
buf
, 
size_t
 
buÊí
 );

157 #i‡
deföed
(
POLARSSL_FS_IO
)

171 
x509_¸t_∑r£_fûe
–
x509_¸t
 *
chaö
, c⁄° *
∑th
 );

191 
x509_¸t_∑r£_∑th
–
x509_¸t
 *
chaö
, c⁄° *
∑th
 );

206 
x509_¸t_öfo
–*
buf
, 
size_t
 
size
, c⁄° *
¥efix
,

207 c⁄° 
x509_¸t
 *
¸t
 );

245 
x509_¸t_vîify
–
x509_¸t
 *
¸t
,

246 
x509_¸t
 *
åu°_ˇ
,

247 
x509_¸l
 *
ˇ_¸l
,

248 c⁄° *
˙
, *
Êags
,

249 (*
f_vrfy
)(*, 
x509_¸t
 *, , *),

250 *
p_vrfy
 );

252 #i‡
deföed
(
POLARSSL_X509_CHECK_KEY_USAGE
)

269 
x509_¸t_check_key_ußge
–c⁄° 
x509_¸t
 *
¸t
, 
ußge
 );

272 #i‡
deföed
(
POLARSSL_X509_CHECK_EXTENDED_KEY_USAGE
)

285 
x509_¸t_check_exãnded_key_ußge
–c⁄° 
x509_¸t
 *
¸t
,

286 c⁄° *
ußge_oid
,

287 
size_t
 
ußge_Àn
 );

290 #i‡
deföed
(
POLARSSL_X509_CRL_PARSE_C
)

300 
x509_¸t_ªvoked
–c⁄° 
x509_¸t
 *
¸t
, c⁄° 
x509_¸l
 *
¸l
 );

308 
x509_¸t_öô
–
x509_¸t
 *
¸t
 );

315 
x509_¸t_‰ì
–
x509_¸t
 *
¸t
 );

321 #i‡
deföed
(
POLARSSL_X509_CRT_WRITE_C
)

327 
x509wrôe_¸t_öô
–
x509wrôe_˚π
 *
˘x
 );

337 
x509wrôe_¸t_£t_vîsi⁄
–
x509wrôe_˚π
 *
˘x
, 
vîsi⁄
 );

347 
x509wrôe_¸t_£t_£rül
–
x509wrôe_˚π
 *
˘x
, c⁄° 
mpi
 *
£rül
 );

363 
x509wrôe_¸t_£t_vÆidôy
–
x509wrôe_˚π
 *
˘x
, c⁄° *
nŸ_bef‹e
,

364 c⁄° *
nŸ_a·î
 );

378 
x509wrôe_¸t_£t_issuî_«me
–
x509wrôe_˚π
 *
˘x
,

379 c⁄° *
issuî_«me
 );

393 
x509wrôe_¸t_£t_subje˘_«me
–
x509wrôe_˚π
 *
˘x
,

394 c⁄° *
subje˘_«me
 );

402 
x509wrôe_¸t_£t_subje˘_key
–
x509wrôe_˚π
 *
˘x
, 
pk_c⁄ãxt
 *
key
 );

410 
x509wrôe_¸t_£t_issuî_key
–
x509wrôe_˚π
 *
˘x
, 
pk_c⁄ãxt
 *
key
 );

419 
x509wrôe_¸t_£t_md_Æg
–
x509wrôe_˚π
 *
˘x
, 
md_ty≥_t
 
md_Æg
 );

434 
x509wrôe_¸t_£t_exãnsi⁄
–
x509wrôe_˚π
 *
˘x
,

435 c⁄° *
oid
, 
size_t
 
oid_Àn
,

436 
¸ôiˇl
,

437 c⁄° *
vÆ
, 
size_t
 
vÆ_Àn
 );

450 
x509wrôe_¸t_£t_basic_c⁄°øöts
–
x509wrôe_˚π
 *
˘x
,

451 
is_ˇ
, 
max_∑thÀn
 );

453 #i‡
deföed
(
POLARSSL_SHA1_C
)

463 
x509wrôe_¸t_£t_subje˘_key_idítifõr
–
x509wrôe_˚π
 *
˘x
 );

474 
x509wrôe_¸t_£t_auth‹ôy_key_idítifõr
–
x509wrôe_˚π
 *
˘x
 );

486 
x509wrôe_¸t_£t_key_ußge
–
x509wrôe_˚π
 *
˘x
, 
key_ußge
 );

497 
x509wrôe_¸t_£t_ns_˚π_ty≥
–
x509wrôe_˚π
 *
˘x
,

498 
ns_˚π_ty≥
 );

505 
x509wrôe_¸t_‰ì
–
x509wrôe_˚π
 *
˘x
 );

527 
x509wrôe_¸t_dî
–
x509wrôe_˚π
 *
˘x
, *
buf
, 
size_t
 
size
,

528 (*
f_∫g
)(*, *, 
size_t
),

529 *
p_∫g
 );

531 #i‡
deföed
(
POLARSSL_PEM_WRITE_C
)

548 
x509wrôe_¸t_≥m
–
x509wrôe_˚π
 *
˘x
, *
buf
, 
size_t
 
size
,

549 (*
f_∫g
)(*, *, 
size_t
),

550 *
p_∫g
 );

554 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/x509_csr.h

27 #i‚de‡
POLARSSL_X509_CSR_H


28 
	#POLARSSL_X509_CSR_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~"x509.h
"

38 #ifde‡
__˝lu•lus


54 
	s_x509_c§


56 
x509_buf
 
øw
;

57 
x509_buf
 
¸i
;

59 
vîsi⁄
;

61 
x509_buf
 
subje˘_øw
;

62 
x509_«me
 
subje˘
;

64 
pk_c⁄ãxt
 
pk
;

66 
x509_buf
 
sig_oid
;

67 
x509_buf
 
sig
;

68 
md_ty≥_t
 
sig_md
;

69 
pk_ty≥_t
 
sig_pk
;

70 *
sig_›ts
;

72 
	tx509_c§
;

77 
	s_x509wrôe_c§


79 
pk_c⁄ãxt
 *
key
;

80 
a¢1_«med_d©a
 *
subje˘
;

81 
md_ty≥_t
 
md_Æg
;

82 
a¢1_«med_d©a
 *
exãnsi⁄s
;

84 
	tx509wrôe_c§
;

86 #i‡
deföed
(
POLARSSL_X509_CSR_PARSE_C
)

96 
x509_c§_∑r£_dî
–
x509_c§
 *
c§
,

97 c⁄° *
buf
, 
size_t
 
buÊí
 );

108 
x509_c§_∑r£
–
x509_c§
 *
c§
, c⁄° *
buf
, 
size_t
 
buÊí
 );

110 #i‡
deföed
(
POLARSSL_FS_IO
)

119 
x509_c§_∑r£_fûe
–
x509_c§
 *
c§
, c⁄° *
∑th
 );

134 
x509_c§_öfo
–*
buf
, 
size_t
 
size
, c⁄° *
¥efix
,

135 c⁄° 
x509_c§
 *
c§
 );

142 
x509_c§_öô
–
x509_c§
 *
c§
 );

149 
x509_c§_‰ì
–
x509_c§
 *
c§
 );

155 #i‡
deföed
(
POLARSSL_X509_CSR_WRITE_C
)

161 
x509wrôe_c§_öô
–
x509wrôe_c§
 *
˘x
 );

175 
x509wrôe_c§_£t_subje˘_«me
–
x509wrôe_c§
 *
˘x
,

176 c⁄° *
subje˘_«me
 );

185 
x509wrôe_c§_£t_key
–
x509wrôe_c§
 *
˘x
, 
pk_c⁄ãxt
 *
key
 );

194 
x509wrôe_c§_£t_md_Æg
–
x509wrôe_c§
 *
˘x
, 
md_ty≥_t
 
md_Æg
 );

205 
x509wrôe_c§_£t_key_ußge
–
x509wrôe_c§
 *
˘x
, 
key_ußge
 );

216 
x509wrôe_c§_£t_ns_˚π_ty≥
–
x509wrôe_c§
 *
˘x
,

217 
ns_˚π_ty≥
 );

231 
x509wrôe_c§_£t_exãnsi⁄
–
x509wrôe_c§
 *
˘x
,

232 c⁄° *
oid
, 
size_t
 
oid_Àn
,

233 c⁄° *
vÆ
, 
size_t
 
vÆ_Àn
 );

240 
x509wrôe_c§_‰ì
–
x509wrôe_c§
 *
˘x
 );

263 
x509wrôe_c§_dî
–
x509wrôe_c§
 *
˘x
, *
buf
, 
size_t
 
size
,

264 (*
f_∫g
)(*, *, 
size_t
),

265 *
p_∫g
 );

267 #i‡
deföed
(
POLARSSL_PEM_WRITE_C
)

285 
x509wrôe_c§_≥m
–
x509wrôe_c§
 *
˘x
, *
buf
, 
size_t
 
size
,

286 (*
f_∫g
)(*, *, 
size_t
),

287 *
p_∫g
 );

291 #ifde‡
__˝lu•lus


	@polarssl/include/polarssl/xtea.h

27 #i‚de‡
POLARSSL_XTEA_H


28 
	#POLARSSL_XTEA_H


	)

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 
	~<°rög.h
>

38 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

39 
	~<ba£tsd.h
>

40 
UINT32
 
	tuöt32_t
;

42 
	~<öây≥s.h
>

45 
	#XTEA_ENCRYPT
 1

	)

46 
	#XTEA_DECRYPT
 0

	)

48 
	#POLARSSL_ERR_XTEA_INVALID_INPUT_LENGTH
 -0x0028

	)

50 #i‡!
deföed
(
POLARSSL_XTEA_ALT
)

54 #ifde‡
__˝lu•lus


63 
uöt32_t
 
k
[4];

65 
	txãa_c⁄ãxt
;

72 
xãa_öô
–
xãa_c⁄ãxt
 *
˘x
 );

79 
xãa_‰ì
–
xãa_c⁄ãxt
 *
˘x
 );

87 
xãa_£tup
–
xãa_c⁄ãxt
 *
˘x
, c⁄° 
key
[16] );

99 
xãa_¸y±_ecb
–
xãa_c⁄ãxt
 *
˘x
,

100 
mode
,

101 c⁄° 
öput
[8],

102 
ouçut
[8] );

104 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

118 
xãa_¸y±_cbc
–
xãa_c⁄ãxt
 *
˘x
,

119 
mode
,

120 
size_t
 
Àngth
,

121 
iv
[8],

122 c⁄° *
öput
,

123 *
ouçut
);

126 #ifde‡
__˝lu•lus


131 
	~"xãa_Æt.h
"

134 #ifde‡
__˝lu•lus


143 
xãa_£lf_ã°
–
vîbo£
 );

145 #ifde‡
__˝lu•lus


	@polarssl/library/aes.c

32 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

33 
	~"pﬁ¨s¶/c⁄fig.h
"

35 #ö˛udê
POLARSSL_CONFIG_FILE


38 #i‡
deföed
(
POLARSSL_AES_C
)

40 
	~"pﬁ¨s¶/´s.h
"

41 #i‡
deföed
(
POLARSSL_PADLOCK_C
)

42 
	~"pﬁ¨s¶/∑dlock.h
"

44 #i‡
deföed
(
POLARSSL_AESNI_C
)

45 
	~"pﬁ¨s¶/´¢i.h
"

48 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

49 
	~"pﬁ¨s¶/∂©f‹m.h
"

51 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

54 #i‡!
deföed
(
POLARSSL_AES_ALT
)

57 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

58 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

59 
	}
}

64 #i‚de‡
GET_UINT32_LE


65 
	#GET_UINT32_LE
(
n
,
b
,
i
) \

67 (
n
Ë–(
uöt32_t
Ë(
b
)[(
i
) ] ) \

68 | ( (
uöt32_t
Ë(
b
)[(
i
) + 1] << 8 ) \

69 | ( (
uöt32_t
Ë(
b
)[(
i
) + 2] << 16 ) \

70 | ( (
uöt32_t
Ë(
b
)[(
i
) + 3] << 24 ); \

71 }

	)

74 #i‚de‡
PUT_UINT32_LE


75 
	#PUT_UINT32_LE
(
n
,
b
,
i
) \

77 (
b
)[(
i
Ë] = (Ë–(
n
) ); \

78 (
b
)[(
i
Ë+ 1] = (Ë–(
n
) >> 8 ); \

79 (
b
)[(
i
Ë+ 2] = (Ë–(
n
) >> 16 ); \

80 (
b
)[(
i
Ë+ 3] = (Ë–(
n
) >> 24 ); \

81 }

	)

84 #i‡
deföed
(
POLARSSL_PADLOCK_C
) && \

85 –
deföed
(
POLARSSL_HAVE_X86
Ë|| 
	$deföed
(
PADLOCK_ALIGN16
) )

86 
´s_∑dlock_a˚
 = -1;

89 #i‡
	`deföed
(
POLARSSL_AES_ROM_TABLES
)

93 c⁄° 
FSb
[256] =

127 
	}
};

132 
	#FT
 \

134 
	`V
(
A5
,63,63,
C6
), V(84,7C,7C,
F8
), V(99,77,77,
EE
), V(8D,7B,7B,
F6
), \

135 
	`V
(0D,
F2
,F2,
FF
), V(
BD
,6B,6B,
D6
), V(
B1
,6F,6F,
DE
), V(54,
C5
,C5,91), \

136 
	`V
(50,30,30,60), V(03,01,01,02), V(
A9
,67,67,
CE
), V(7D,2B,2B,56), \

137 
	`V
(19,
FE
,FE,
E7
), V(62,
D7
,D7,
B5
), V(
E6
,
AB
,AB,4D), V(9A,76,76,
EC
), \

138 
	`V
(45,
CA
,CA,8F), V(9D,82,82,1F), V(40,
C9
,C9,89), V(87,7D,7D,
FA
), \

139 
	`V
(15,
FA
,FA,
EF
), V(
EB
,59,59,
B2
), V(
C9
,47,47,8E), V(0B,
F0
,F0,
FB
), \

140 
	`V
(
EC
,
AD
,AD,41), V(67,
D4
,D4,
B3
), V(
FD
,
A2
,A2,5F), V(
EA
,
AF
,AF,45), \

141 
	`V
(
BF
,9C,9C,23), V(
F7
,
A4
,A4,53), V(96,72,72,
E4
), V(5B,
C0
,C0,9B), \

142 
	`V
(
C2
,
B7
,B7,75), V(1C,
FD
,FD,
E1
), V(
AE
,93,93,3D), V(6A,26,26,4C), \

143 
	`V
(5A,36,36,6C), V(41,3F,3F,7E), V(02,
F7
,F7,
F5
), V(4F,
CC
,CC,83), \

144 
	`V
(5C,34,34,68), V(
F4
,
A5
,A5,51), V(34,
E5
,E5,
D1
), V(08,
F1
,F1,
F9
), \

145 
	`V
(93,71,71,
E2
), V(73,
D8
,D8,
AB
), V(53,31,31,62), V(3F,15,15,2A), \

146 
	`V
(0C,04,04,08), V(52,
C7
,C7,95), V(65,23,23,46), V(5E,
C3
,C3,9D), \

147 
	`V
(28,18,18,30), V(
A1
,96,96,37), V(0F,05,05,0A), V(
B5
,9A,9A,2F), \

148 
	`V
(09,07,07,0E), V(36,12,12,24), V(9B,80,80,1B), V(3D,
E2
,E2,
DF
), \

149 
	`V
(26,
EB
,EB,
CD
), V(69,27,27,4E), V(CD,
B2
,B2,7F), V(9F,75,75,
EA
), \

150 
	`V
(1B,09,09,12), V(9E,83,83,1D), V(74,2C,2C,58), V(2E,1A,1A,34), \

151 
	`V
(2D,1B,1B,36), V(
B2
,6E,6E,
DC
), V(
EE
,5A,5A,
B4
), V(
FB
,
A0
,A0,5B), \

152 
	`V
(
F6
,52,52,
A4
), V(4D,3B,3B,76), V(61,
D6
,D6,
B7
), V(
CE
,
B3
,B3,7D), \

153 
	`V
(7B,29,29,52), V(3E,
E3
,E3,
DD
), V(71,2F,2F,5E), V(97,84,84,13), \

154 
	`V
(
F5
,53,53,
A6
), V(68,
D1
,D1,
B9
), V(00,00,00,00), V(2C,
ED
,ED,
C1
), \

155 
	`V
(60,20,20,40), V(1F,
FC
,FC,
E3
), V(
C8
,
B1
,B1,79), V(
ED
,5B,5B,
B6
), \

156 
	`V
(
BE
,6A,6A,
D4
), V(46,
CB
,CB,8D), V(
D9
,BE,BE,67), V(4B,39,39,72), \

157 
	`V
(
DE
,4A,4A,94), V(
D4
,4C,4C,98), V(
E8
,58,58,
B0
), V(4A,
CF
,CF,85), \

158 
	`V
(6B,
D0
,D0,
BB
), V(2A,
EF
,EF,
C5
), V(
E5
,
AA
,AA,4F), V(16,
FB
,FB,
ED
), \

159 
	`V
(
C5
,43,43,86), V(
D7
,4D,4D,9A), V(55,33,33,66), V(94,85,85,11), \

160 
	`V
(
CF
,45,45,8A), V(10,
F9
,F9,
E9
), V(06,02,02,04), V(81,7F,7F,
FE
), \

161 
	`V
(
F0
,50,50,
A0
), V(44,3C,3C,78), V(
BA
,9F,9F,25), V(
E3
,
A8
,A8,4B), \

162 
	`V
(
F3
,51,51,
A2
), V(
FE
,
A3
,A3,5D), V(
C0
,40,40,80), V(8A,8F,8F,05), \

163 
	`V
(
AD
,92,92,3F), V(
BC
,9D,9D,21), V(48,38,38,70), V(04,
F5
,F5,
F1
), \

164 
	`V
(
DF
,
BC
,BC,63), V(
C1
,
B6
,B6,77), V(75,
DA
,DA,
AF
), V(63,21,21,42), \

165 
	`V
(30,10,10,20), V(1A,
FF
,FF,
E5
), V(0E,
F3
,F3,
FD
), V(6D,
D2
,D2,
BF
), \

166 
	`V
(4C,
CD
,CD,81), V(14,0C,0C,18), V(35,13,13,26), V(2F,
EC
,EC,
C3
), \

167 
	`V
(
E1
,5F,5F,
BE
), V(
A2
,97,97,35), V(
CC
,44,44,88), V(39,17,17,2E), \

168 
	`V
(57,
C4
,C4,93), V(
F2
,
A7
,A7,55), V(82,7E,7E,
FC
), V(47,3D,3D,7A), \

169 
	`V
(
AC
,64,64,
C8
), V(
E7
,5D,5D,
BA
), V(2B,19,19,32), V(95,73,73,
E6
), \

170 
	`V
(
A0
,60,60,
C0
), V(98,81,81,19), V(
D1
,4F,4F,9E), V(7F,
DC
,DC,
A3
), \

171 
	`V
(66,22,22,44), V(7E,2A,2A,54), V(
AB
,90,90,3B), V(83,88,88,0B), \

172 
	`V
(
CA
,46,46,8C), V(29,
EE
,EE,
C7
), V(
D3
,
B8
,B8,6B), V(3C,14,14,28), \

173 
	`V
(79,
DE
,DE,
A7
), V(
E2
,5E,5E,
BC
), V(1D,0B,0B,16), V(76,
DB
,DB,
AD
), \

174 
	`V
(3B,
E0
,E0,
DB
), V(56,32,32,64), V(4E,3A,3A,74), V(1E,0A,0A,14), \

175 
	`V
(
DB
,49,49,92), V(0A,06,06,0C), V(6C,24,24,48), V(
E4
,5C,5C,
B8
), \

176 
	`V
(5D,
C2
,C2,9F), V(6E,
D3
,D3,
BD
), V(
EF
,
AC
,AC,43), V(
A6
,62,62,
C4
), \

177 
	`V
(
A8
,91,91,39), V(
A4
,95,95,31), V(37,
E4
,E4,
D3
), V(8B,79,79,
F2
), \

178 
	`V
(32,
E7
,E7,
D5
), V(43,
C8
,C8,8B), V(59,37,37,6E), V(
B7
,6D,6D,
DA
), \

179 
	`V
(8C,8D,8D,01), V(64,
D5
,D5,
B1
), V(
D2
,4E,4E,9C), V(
E0
,
A9
,A9,49), \

180 
	`V
(
B4
,6C,6C,
D8
), V(
FA
,56,56,
AC
), V(07,
F4
,F4,
F3
), V(25,
EA
,EA,
CF
), \

181 
	`V
(
AF
,65,65,
CA
), V(8E,7A,7A,
F4
), V(
E9
,
AE
,AE,47), V(18,08,08,10), \

182 
	`V
(
D5
,
BA
,BA,6F), V(88,78,78,
F0
), V(6F,25,25,4A), V(72,2E,2E,5C), \

183 
	`V
(24,1C,1C,38), V(
F1
,
A6
,A6,57), V(
C7
,
B4
,B4,73), V(51,
C6
,C6,97), \

184 
	`V
(23,
E8
,E8,
CB
), V(7C,
DD
,DD,
A1
), V(9C,74,74,E8), V(21,1F,1F,3E), \

185 
	`V
(
DD
,4B,4B,96), V(
DC
,
BD
,BD,61), V(86,8B,8B,0D), V(85,8A,8A,0F), \

186 
	`V
(90,70,70,
E0
), V(42,3E,3E,7C), V(
C4
,
B5
,B5,71), V(
AA
,66,66,
CC
), \

187 
	`V
(
D8
,48,48,90), V(05,03,03,06), V(01,
F6
,F6,
F7
), V(12,0E,0E,1C), \

188 
	`V
(
A3
,61,61,
C2
), V(5F,35,35,6A), V(
F9
,57,57,
AE
), V(
D0
,
B9
,B9,69), \

189 
	`V
(91,86,86,17), V(58,
C1
,C1,99), V(27,1D,1D,3A), V(
B9
,9E,9E,27), \

190 
	`V
(38,
E1
,E1,
D9
), V(13,
F8
,F8,
EB
), V(
B3
,98,98,2B), V(33,11,11,22), \

191 
	`V
(
BB
,69,69,
D2
), V(70,
D9
,D9,
A9
), V(89,8E,8E,07), V(
A7
,94,94,33), \

192 
	`V
(
B6
,9B,9B,2D), V(22,1E,1E,3C), V(92,87,87,15), V(20,
E9
,E9,
C9
), \

193 
	`V
(49,
CE
,CE,87), V(
FF
,55,55,
AA
), V(78,28,28,50), V(7A,
DF
,DF,
A5
), \

194 
	`V
(8F,8C,8C,03), V(
F8
,
A1
,A1,59), V(80,89,89,09), V(17,0D,0D,1A), \

195 
	`V
(
DA
,
BF
,BF,65), V(31,
E6
,E6,
D7
), V(
C6
,42,42,84), V(
B8
,68,68,
D0
), \

196 
	`V
(
C3
,41,41,82), V(
B0
,99,99,29), V(77,2D,2D,5A), V(11,0F,0F,1E), \

197 
	`V
(
CB
,
B0
,B0,7B), V(
FC
,54,54,
A8
), V(
D6
,
BB
,BB,6D), V(3A,16,16,2C)

	)

199 
	#V
(
a
,
b
,
c
,
d
Ë0x##a##b##c##
	)
d

200 c⁄° 
uöt32_t
 
	gFT0
[256] = { 
FT
 };

201 #unde‡
V


203 
	#V
(
a
,
b
,
c
,
d
Ë0x##b##c##d##
	)
a

204 c⁄° 
uöt32_t
 
	gFT1
[256] = { 
FT
 };

205 #unde‡
V


207 
	#V
(
a
,
b
,
c
,
d
Ë0x##c##d##a##
	)
b

208 c⁄° 
uöt32_t
 
	gFT2
[256] = { 
FT
 };

209 #unde‡
V


211 
	#V
(
a
,
b
,
c
,
d
Ë0x##d##a##b##
	)
c

212 c⁄° 
uöt32_t
 
	gFT3
[256] = { 
FT
 };

213 #unde‡
V


215 #unde‡
FT


220 c⁄° 
	gRSb
[256] =

259 
	#RT
 \

261 
	`V
(50,
A7
,
F4
,51), V(53,65,41,7E), V(
C3
,
A4
,17,1A), V(96,5E,27,3A), \

262 
	`V
(
CB
,6B,
AB
,3B), V(
F1
,45,9D,1F), V(AB,58,
FA
,
AC
), V(93,03,
E3
,4B), \

263 
	`V
(55,
FA
,30,20), V(
F6
,6D,76,
AD
), V(91,76,
CC
,88), V(25,4C,02,
F5
), \

264 
	`V
(
FC
,
D7
,
E5
,4F), V(D7,
CB
,2A,
C5
), V(80,44,35,26), V(8F,
A3
,62,
B5
), \

265 
	`V
(49,5A,
B1
,
DE
), V(67,1B,
BA
,25), V(98,0E,
EA
,45), V(
E1
,
C0
,
FE
,5D), \

266 
	`V
(02,75,2F,
C3
), V(12,
F0
,4C,81), V(
A3
,97,46,8D), V(
C6
,
F9
,
D3
,6B), \

267 
	`V
(
E7
,5F,8F,03), V(95,9C,92,15), V(
EB
,7A,6D,
BF
), V(
DA
,59,52,95), \

268 
	`V
(2D,83,
BE
,
D4
), V(
D3
,21,74,58), V(29,69,
E0
,49), V(44,
C8
,
C9
,8E), \

269 
	`V
(6A,89,
C2
,75), V(78,79,8E,
F4
), V(6B,3E,58,99), V(
DD
,71,
B9
,27), \

270 
	`V
(
B6
,4F,
E1
,
BE
), V(17,
AD
,88,
F0
), V(66,
AC
,20,
C9
), V(
B4
,3A,
CE
,7D), \

271 
	`V
(18,4A,
DF
,63), V(82,31,1A,
E5
), V(60,33,51,97), V(45,7F,53,62), \

272 
	`V
(
E0
,77,64,
B1
), V(84,
AE
,6B,
BB
), V(1C,
A0
,81,
FE
), V(94,2B,08,
F9
), \

273 
	`V
(58,68,48,70), V(19,
FD
,45,8F), V(87,6C,
DE
,94), V(
B7
,
F8
,7B,52), \

274 
	`V
(23,
D3
,73,
AB
), V(
E2
,02,4B,72), V(57,8F,1F,
E3
), V(2A,AB,55,66), \

275 
	`V
(07,28,
EB
,
B2
), V(03,
C2
,
B5
,2F), V(9A,7B,
C5
,86), V(
A5
,08,37,
D3
), \

276 
	`V
(
F2
,87,28,30), V(
B2
,
A5
,
BF
,23), V(
BA
,6A,03,02), V(5C,82,16,
ED
), \

277 
	`V
(2B,1C,
CF
,8A), V(92,
B4
,79,
A7
), V(
F0
,
F2
,07,
F3
), V(
A1
,
E2
,69,4E), \

278 
	`V
(
CD
,
F4
,
DA
,65), V(
D5
,
BE
,05,06), V(1F,62,34,
D1
), V(8A,
FE
,
A6
,
C4
), \

279 
	`V
(9D,53,2E,34), V(
A0
,55,
F3
,
A2
), V(32,
E1
,8A,05), V(75,
EB
,
F6
,
A4
), \

280 
	`V
(39,
EC
,83,0B), V(
AA
,
EF
,60,40), V(06,9F,71,5E), V(51,10,6E,
BD
), \

281 
	`V
(
F9
,8A,21,3E), V(3D,06,
DD
,96), V(
AE
,05,3E,DD), V(46,
BD
,
E6
,4D), \

282 
	`V
(
B5
,8D,54,91), V(05,5D,
C4
,71), V(6F,
D4
,06,04), V(
FF
,15,50,60), \

283 
	`V
(24,
FB
,98,19), V(97,
E9
,
BD
,
D6
), V(
CC
,43,40,89), V(77,9E,
D9
,67), \

284 
	`V
(
BD
,42,
E8
,
B0
), V(88,8B,89,07), V(38,5B,19,
E7
), V(
DB
,
EE
,
C8
,79), \

285 
	`V
(47,0A,7C,
A1
), V(
E9
,0F,42,7C), V(
C9
,1E,84,
F8
), V(00,00,00,00), \

286 
	`V
(83,86,80,09), V(48,
ED
,2B,32), V(
AC
,70,11,1E), V(4E,72,5A,6C), \

287 
	`V
(
FB
,
FF
,0E,
FD
), V(56,38,85,0F), V(1E,
D5
,
AE
,3D), V(27,39,2D,36), \

288 
	`V
(64,
D9
,0F,0A), V(21,
A6
,5C,68), V(
D1
,54,5B,9B), V(3A,2E,36,24), \

289 
	`V
(
B1
,67,0A,0C), V(0F,
E7
,57,93), V(
D2
,96,
EE
,
B4
), V(9E,91,9B,1B), \

290 
	`V
(4F,
C5
,
C0
,80), V(
A2
,20,
DC
,61), V(69,4B,77,5A), V(16,1A,12,1C), \

291 
	`V
(0A,
BA
,93,
E2
), V(
E5
,2A,
A0
,
C0
), V(43,
E0
,22,3C), V(1D,17,1B,12), \

292 
	`V
(0B,0D,09,0E), V(
AD
,
C7
,8B,
F2
), V(
B9
,
A8
,
B6
,2D), V(
C8
,
A9
,1E,14), \

293 
	`V
(85,19,
F1
,57), V(4C,07,75,
AF
), V(
BB
,
DD
,99,
EE
), V(
FD
,60,7F,
A3
), \

294 
	`V
(9F,26,01,
F7
), V(
BC
,
F5
,72,5C), V(
C5
,3B,66,44), V(34,7E,
FB
,5B), \

295 
	`V
(76,29,43,8B), V(
DC
,
C6
,23,
CB
), V(68,
FC
,
ED
,
B6
), V(63,
F1
,
E4
,
B8
), \

296 
	`V
(
CA
,
DC
,31,
D7
), V(10,85,63,42), V(40,22,97,13), V(20,11,
C6
,84), \

297 
	`V
(7D,24,4A,85), V(
F8
,3D,
BB
,
D2
), V(11,32,
F9
,
AE
), V(6D,
A1
,29,
C7
), \

298 
	`V
(4B,2F,9E,1D), V(
F3
,30,
B2
,
DC
), V(
EC
,52,86,0D), V(
D0
,
E3
,
C1
,77), \

299 
	`V
(6C,16,
B3
,2B), V(99,
B9
,70,
A9
), V(
FA
,48,94,11), V(22,64,
E9
,47), \

300 
	`V
(
C4
,8C,
FC
,
A8
), V(1A,3F,
F0
,
A0
), V(
D8
,2C,7D,56), V(
EF
,90,33,22), \

301 
	`V
(
C7
,4E,49,87), V(
C1
,
D1
,38,
D9
), V(
FE
,
A2
,
CA
,8C), V(36,0B,
D4
,98), \

302 
	`V
(
CF
,81,
F5
,
A6
), V(28,
DE
,7A,
A5
), V(26,8E,
B7
,
DA
), V(
A4
,
BF
,
AD
,3F), \

303 
	`V
(
E4
,9D,3A,2C), V(0D,92,78,50), V(9B,
CC
,5F,6A), V(62,46,7E,54), \

304 
	`V
(
C2
,13,8D,
F6
), V(
E8
,
B8
,
D8
,90), V(5E,
F7
,39,2E), V(
F5
,
AF
,
C3
,82), \

305 
	`V
(
BE
,80,5D,9F), V(7C,93,
D0
,69), V(
A9
,2D,
D5
,6F), V(
B3
,12,25,
CF
), \

306 
	`V
(3B,99,
AC
,
C8
), V(
A7
,7D,18,10), V(6E,63,9C,
E8
), V(7B,
BB
,3B,
DB
), \

307 
	`V
(09,78,26,
CD
), V(
F4
,18,59,6E), V(01,
B7
,9A,
EC
), V(
A8
,9A,4F,83), \

308 
	`V
(65,6E,95,
E6
), V(7E,E6,
FF
,
AA
), V(08,
CF
,
BC
,21), V(E6,
E8
,15,
EF
), \

309 
	`V
(
D9
,9B,
E7
,
BA
), V(
CE
,36,6F,4A), V(
D4
,09,9F,
EA
), V(
D6
,7C,
B0
,29), \

310 
	`V
(
AF
,
B2
,
A4
,31), V(31,23,3F,2A), V(30,94,
A5
,
C6
), V(
C0
,66,
A2
,35), \

311 
	`V
(37,
BC
,4E,74), V(
A6
,
CA
,82,
FC
), V(
B0
,
D0
,90,
E0
), V(15,
D8
,
A7
,33), \

312 
	`V
(4A,98,04,
F1
), V(
F7
,
DA
,
EC
,41), V(0E,50,
CD
,7F), V(2F,
F6
,91,17), \

313 
	`V
(8D,
D6
,4D,76), V(4D,
B0
,
EF
,43), V(54,4D,
AA
,
CC
), V(
DF
,04,96,
E4
), \

314 
	`V
(
E3
,
B5
,
D1
,9E), V(1B,88,6A,4C), V(
B8
,1F,2C,
C1
), V(7F,51,65,46), \

315 
	`V
(04,
EA
,5E,9D), V(5D,35,8C,01), V(73,74,87,
FA
), V(2E,41,0B,
FB
), \

316 
	`V
(5A,1D,67,
B3
), V(52,
D2
,
DB
,92), V(33,56,10,
E9
), V(13,47,
D6
,6D), \

317 
	`V
(8C,61,
D7
,9A), V(7A,0C,
A1
,37), V(8E,14,
F8
,59), V(89,3C,13,
EB
), \

318 
	`V
(
EE
,27,
A9
,
CE
), V(35,
C9
,61,
B7
), V(
ED
,
E5
,1C,
E1
), V(3C,
B1
,47,7A), \

319 
	`V
(59,
DF
,
D2
,9C), V(3F,73,
F2
,55), V(79,
CE
,14,18), V(
BF
,37,
C7
,73), \

320 
	`V
(
EA
,
CD
,
F7
,53), V(5B,
AA
,
FD
,5F), V(14,6F,3D,
DF
), V(86,
DB
,44,78), \

321 
	`V
(81,
F3
,
AF
,
CA
), V(3E,
C4
,68,
B9
), V(2C,34,24,38), V(5F,40,
A3
,
C2
), \

322 
	`V
(72,
C3
,1D,16), V(0C,25,
E2
,
BC
), V(8B,49,3C,28), V(41,95,0D,
FF
), \

323 
	`V
(71,01,
A8
,39), V(
DE
,
B3
,0C,08), V(9C,
E4
,
B4
,
D8
), V(90,
C1
,56,64), \

324 
	`V
(61,84,
CB
,7B), V(70,
B6
,32,
D5
), V(74,5C,6C,48), V(42,57,
B8
,
D0
)

	)

326 
	#V
(
a
,
b
,
c
,
d
Ë0x##a##b##c##
	)
d

327 c⁄° 
uöt32_t
 
	gRT0
[256] = { 
RT
 };

328 #unde‡
V


330 
	#V
(
a
,
b
,
c
,
d
Ë0x##b##c##d##
	)
a

331 c⁄° 
uöt32_t
 
	gRT1
[256] = { 
RT
 };

332 #unde‡
V


334 
	#V
(
a
,
b
,
c
,
d
Ë0x##c##d##a##
	)
b

335 c⁄° 
uöt32_t
 
	gRT2
[256] = { 
RT
 };

336 #unde‡
V


338 
	#V
(
a
,
b
,
c
,
d
Ë0x##d##a##b##
	)
c

339 c⁄° 
uöt32_t
 
	gRT3
[256] = { 
RT
 };

340 #unde‡
V


342 #unde‡
RT


347 c⁄° 
uöt32_t
 
	gRCON
[10] =

359 
	gFSb
[256];

360 
uöt32_t
 
	gFT0
[256];

361 
uöt32_t
 
	gFT1
[256];

362 
uöt32_t
 
	gFT2
[256];

363 
uöt32_t
 
	gFT3
[256];

368 
	gRSb
[256];

369 
uöt32_t
 
	gRT0
[256];

370 
uöt32_t
 
	gRT1
[256];

371 
uöt32_t
 
	gRT2
[256];

372 
uöt32_t
 
	gRT3
[256];

377 
uöt32_t
 
	gRCON
[10];

382 
	#ROTL8
(
x
Ë––x << 8 ) & 0xFFFFFFFF ) | ( x >> 24 )

	)

383 
	#XTIME
(
x
Ë––x << 1 ) ^ ( ( x & 0x80 ) ? 0x1B : 0x00 ) )

	)

384 
	#MUL
(
x
,
y
Ë––x && y ) ? 
pow
[(
log
[x]+log[y]Ë% 255] : 0 )

	)

386 
	g´s_öô_d⁄e
 = 0;

388 
	$´s_gí_èbÀs
( )

390 
i
, 
x
, 
y
, 
z
;

391 
pow
[256];

392 
log
[256];

397  
i
 = 0, 
x
 = 1; i < 256; i++ )

399 
pow
[
i
] = 
x
;

400 
log
[
x
] = 
i
;

401 
x
 = ( x ^ 
	`XTIME
( x ) ) & 0xFF;

407  
i
 = 0, 
x
 = 1; i < 10; i++ )

409 
RCON
[
i
] = (
uöt32_t
Ë
x
;

410 
x
 = 
	`XTIME
( x ) & 0xFF;

416 
FSb
[0x00] = 0x63;

417 
RSb
[0x63] = 0x00;

419  
i
 = 1; i < 256; i++ )

421 
x
 = 
pow
[255 - 
log
[
i
]];

423 
y
 = 
x
; y = ( ( y << 1 ) | ( y >> 7 ) ) & 0xFF;

424 
x
 ^
y
; y = ( ( y << 1 ) | ( y >> 7 ) ) & 0xFF;

425 
x
 ^
y
; y = ( ( y << 1 ) | ( y >> 7 ) ) & 0xFF;

426 
x
 ^
y
; y = ( ( y << 1 ) | ( y >> 7 ) ) & 0xFF;

427 
x
 ^
y
 ^ 0x63;

429 
FSb
[
i
] = (Ë
x
;

430 
RSb
[
x
] = (Ë
i
;

436  
i
 = 0; i < 256; i++ )

438 
x
 = 
FSb
[
i
];

439 
y
 = 
	`XTIME
–
x
 ) & 0xFF;

440 
z
 = ( 
y
 ^ 
x
 ) & 0xFF;

442 
FT0
[
i
] = ( (
uöt32_t
Ë
y
 ) ^

443 –(
uöt32_t
Ë
x
 << 8 ) ^

444 –(
uöt32_t
Ë
x
 << 16 ) ^

445 –(
uöt32_t
Ë
z
 << 24 );

447 
FT1
[
i
] = 
	`ROTL8
–
FT0
[i] );

448 
FT2
[
i
] = 
	`ROTL8
–
FT1
[i] );

449 
FT3
[
i
] = 
	`ROTL8
–
FT2
[i] );

451 
x
 = 
RSb
[
i
];

453 
RT0
[
i
] = ( (
uöt32_t
Ë
	`MUL
–0x0E, 
x
 ) ) ^

454 –(
uöt32_t
Ë
	`MUL
–0x09, 
x
 ) << 8 ) ^

455 –(
uöt32_t
Ë
	`MUL
–0x0D, 
x
 ) << 16 ) ^

456 –(
uöt32_t
Ë
	`MUL
–0x0B, 
x
 ) << 24 );

458 
RT1
[
i
] = 
	`ROTL8
–
RT0
[i] );

459 
RT2
[
i
] = 
	`ROTL8
–
RT1
[i] );

460 
RT3
[
i
] = 
	`ROTL8
–
RT2
[i] );

462 
	}
}

466 
	$´s_öô
–
´s_c⁄ãxt
 *
˘x
 )

468 
	`mem£t
–
˘x
, 0, –
´s_c⁄ãxt
 ) );

469 
	}
}

471 
	$´s_‰ì
–
´s_c⁄ãxt
 *
˘x
 )

473 if–
˘x
 =
NULL
 )

476 
	`pﬁ¨s¶_zîoize
–
˘x
, –
´s_c⁄ãxt
 ) );

477 
	}
}

482 
	$´s_£tkey_íc
–
´s_c⁄ãxt
 *
˘x
, c⁄° *
key
,

483 
keysize
 )

485 
i
;

486 
uöt32_t
 *
RK
;

488 #i‡!
	`deföed
(
POLARSSL_AES_ROM_TABLES
)

489 if–
´s_öô_d⁄e
 == 0 )

491 
	`´s_gí_èbÀs
();

492 
´s_öô_d⁄e
 = 1;

497  
keysize
 )

499 128: 
˘x
->
ƒ
 = 10; ;

500 192: 
˘x
->
ƒ
 = 12; ;

501 256: 
˘x
->
ƒ
 = 14; ;

502  : –
POLARSSL_ERR_AES_INVALID_KEY_LENGTH
 );

505 #i‡
	`deföed
(
POLARSSL_PADLOCK_C
Ë&& deföed(
PADLOCK_ALIGN16
)

506 if–
´s_∑dlock_a˚
 == -1 )

507 
´s_∑dlock_a˚
 = 
	`∑dlock_suµ‹ts
–
PADLOCK_ACE
 );

509 if–
´s_∑dlock_a˚
 )

510 
˘x
->
rk
 = 
RK
 = 
	`PADLOCK_ALIGN16
–˘x->
buf
 );

513 
˘x
->
rk
 = 
RK
 = ctx->
buf
;

515 #i‡
	`deföed
(
POLARSSL_AESNI_C
Ë&& deföed(
POLARSSL_HAVE_X86_64
)

516 if–
	`´¢i_suµ‹ts
–
POLARSSL_AESNI_AES
 ) )

517 –
	`´¢i_£tkey_íc
–(*Ë
˘x
->
rk
, 
key
, 
keysize
 ) );

520  
i
 = 0; i < ( 
keysize
 >> 5 ); i++ )

522 
	`GET_UINT32_LE
–
RK
[
i
], 
key
, i << 2 );

525  
˘x
->
ƒ
 )

529  
i
 = 0; i < 10; i++, 
RK
 += 4 )

531 
RK
[4] = RK[0] ^ 
RCON
[
i
] ^

532 –(
uöt32_t
Ë
FSb
[ ( 
RK
[3] >> 8 ) & 0xFF ] ) ^

533 –(
uöt32_t
Ë
FSb
[ ( 
RK
[3] >> 16 ) & 0xFF ] << 8 ) ^

534 –(
uöt32_t
Ë
FSb
[ ( 
RK
[3] >> 24 ) & 0xFF ] << 16 ) ^

535 –(
uöt32_t
Ë
FSb
[ ( 
RK
[3] ) & 0xFF ] << 24 );

537 
RK
[5] = RK[1] ^ RK[4];

538 
RK
[6] = RK[2] ^ RK[5];

539 
RK
[7] = RK[3] ^ RK[6];

545  
i
 = 0; i < 8; i++, 
RK
 += 6 )

547 
RK
[6] = RK[0] ^ 
RCON
[
i
] ^

548 –(
uöt32_t
Ë
FSb
[ ( 
RK
[5] >> 8 ) & 0xFF ] ) ^

549 –(
uöt32_t
Ë
FSb
[ ( 
RK
[5] >> 16 ) & 0xFF ] << 8 ) ^

550 –(
uöt32_t
Ë
FSb
[ ( 
RK
[5] >> 24 ) & 0xFF ] << 16 ) ^

551 –(
uöt32_t
Ë
FSb
[ ( 
RK
[5] ) & 0xFF ] << 24 );

553 
RK
[7] = RK[1] ^ RK[6];

554 
RK
[8] = RK[2] ^ RK[7];

555 
RK
[9] = RK[3] ^ RK[8];

556 
RK
[10] = RK[4] ^ RK[9];

557 
RK
[11] = RK[5] ^ RK[10];

563  
i
 = 0; i < 7; i++, 
RK
 += 8 )

565 
RK
[8] = RK[0] ^ 
RCON
[
i
] ^

566 –(
uöt32_t
Ë
FSb
[ ( 
RK
[7] >> 8 ) & 0xFF ] ) ^

567 –(
uöt32_t
Ë
FSb
[ ( 
RK
[7] >> 16 ) & 0xFF ] << 8 ) ^

568 –(
uöt32_t
Ë
FSb
[ ( 
RK
[7] >> 24 ) & 0xFF ] << 16 ) ^

569 –(
uöt32_t
Ë
FSb
[ ( 
RK
[7] ) & 0xFF ] << 24 );

571 
RK
[9] = RK[1] ^ RK[8];

572 
RK
[10] = RK[2] ^ RK[9];

573 
RK
[11] = RK[3] ^ RK[10];

575 
RK
[12] = RK[4] ^

576 –(
uöt32_t
Ë
FSb
[ ( 
RK
[11] ) & 0xFF ] ) ^

577 –(
uöt32_t
Ë
FSb
[ ( 
RK
[11] >> 8 ) & 0xFF ] << 8 ) ^

578 –(
uöt32_t
Ë
FSb
[ ( 
RK
[11] >> 16 ) & 0xFF ] << 16 ) ^

579 –(
uöt32_t
Ë
FSb
[ ( 
RK
[11] >> 24 ) & 0xFF ] << 24 );

581 
RK
[13] = RK[5] ^ RK[12];

582 
RK
[14] = RK[6] ^ RK[13];

583 
RK
[15] = RK[7] ^ RK[14];

589 
	}
}

594 
	$´s_£tkey_dec
–
´s_c⁄ãxt
 *
˘x
, c⁄° *
key
,

595 
keysize
 )

597 
i
, 
j
, 
ªt
;

598 
´s_c⁄ãxt
 
˘y
;

599 
uöt32_t
 *
RK
;

600 
uöt32_t
 *
SK
;

602 
	`´s_öô
–&
˘y
 );

604 #i‡
	`deföed
(
POLARSSL_PADLOCK_C
Ë&& deföed(
PADLOCK_ALIGN16
)

605 if–
´s_∑dlock_a˚
 == -1 )

606 
´s_∑dlock_a˚
 = 
	`∑dlock_suµ‹ts
–
PADLOCK_ACE
 );

608 if–
´s_∑dlock_a˚
 )

609 
˘x
->
rk
 = 
RK
 = 
	`PADLOCK_ALIGN16
–˘x->
buf
 );

612 
˘x
->
rk
 = 
RK
 = ctx->
buf
;

615 if––
ªt
 = 
	`´s_£tkey_íc
–&
˘y
, 
key
, 
keysize
 ) ) != 0 )

616 
exô
;

618 
˘x
->
ƒ
 = 
˘y
.nr;

620 #i‡
	`deföed
(
POLARSSL_AESNI_C
Ë&& deföed(
POLARSSL_HAVE_X86_64
)

621 if–
	`´¢i_suµ‹ts
–
POLARSSL_AESNI_AES
 ) )

623 
	`´¢i_övî£_key
–(*Ë
˘x
->
rk
,

624 (c⁄° *Ë
˘y
.
rk
, 
˘x
->
ƒ
 );

625 
exô
;

629 
SK
 = 
˘y
.
rk
 + cty.
ƒ
 * 4;

631 *
RK
++ = *
SK
++;

632 *
RK
++ = *
SK
++;

633 *
RK
++ = *
SK
++;

634 *
RK
++ = *
SK
++;

636  
i
 = 
˘x
->
ƒ
 - 1, 
SK
 -= 8; i > 0; i--, SK -= 8 )

638  
j
 = 0; j < 4; j++, 
SK
++ )

640 *
RK
++ = 
RT0
[ 
FSb
[ ( *
SK
 ) & 0xFF ] ] ^

641 
RT1
[ 
FSb
[ ( *
SK
 >> 8 ) & 0xFF ] ] ^

642 
RT2
[ 
FSb
[ ( *
SK
 >> 16 ) & 0xFF ] ] ^

643 
RT3
[ 
FSb
[ ( *
SK
 >> 24 ) & 0xFF ] ];

647 *
RK
++ = *
SK
++;

648 *
RK
++ = *
SK
++;

649 *
RK
++ = *
SK
++;

650 *
RK
++ = *
SK
++;

652 
exô
:

653 
	`´s_‰ì
–&
˘y
 );

655 –
ªt
 );

656 
	}
}

658 
	#AES_FROUND
(
X0
,
X1
,
X2
,
X3
,
Y0
,
Y1
,
Y2
,
Y3
) \

660 
X0
 = *
RK
++ ^ 
FT0
[ ( 
Y0
 ) & 0xFF ] ^ \

661 
FT1
[ ( 
Y1
 >> 8 ) & 0xFF ] ^ \

662 
FT2
[ ( 
Y2
 >> 16 ) & 0xFF ] ^ \

663 
FT3
[ ( 
Y3
 >> 24 ) & 0xFF ]; \

665 
X1
 = *
RK
++ ^ 
FT0
[ ( 
Y1
 ) & 0xFF ] ^ \

666 
FT1
[ ( 
Y2
 >> 8 ) & 0xFF ] ^ \

667 
FT2
[ ( 
Y3
 >> 16 ) & 0xFF ] ^ \

668 
FT3
[ ( 
Y0
 >> 24 ) & 0xFF ]; \

670 
X2
 = *
RK
++ ^ 
FT0
[ ( 
Y2
 ) & 0xFF ] ^ \

671 
FT1
[ ( 
Y3
 >> 8 ) & 0xFF ] ^ \

672 
FT2
[ ( 
Y0
 >> 16 ) & 0xFF ] ^ \

673 
FT3
[ ( 
Y1
 >> 24 ) & 0xFF ]; \

675 
X3
 = *
RK
++ ^ 
FT0
[ ( 
Y3
 ) & 0xFF ] ^ \

676 
FT1
[ ( 
Y0
 >> 8 ) & 0xFF ] ^ \

677 
FT2
[ ( 
Y1
 >> 16 ) & 0xFF ] ^ \

678 
FT3
[ ( 
Y2
 >> 24 ) & 0xFF ]; \

679 }

	)

681 
	#AES_RROUND
(
X0
,
X1
,
X2
,
X3
,
Y0
,
Y1
,
Y2
,
Y3
) \

683 
X0
 = *
RK
++ ^ 
RT0
[ ( 
Y0
 ) & 0xFF ] ^ \

684 
RT1
[ ( 
Y3
 >> 8 ) & 0xFF ] ^ \

685 
RT2
[ ( 
Y2
 >> 16 ) & 0xFF ] ^ \

686 
RT3
[ ( 
Y1
 >> 24 ) & 0xFF ]; \

688 
X1
 = *
RK
++ ^ 
RT0
[ ( 
Y1
 ) & 0xFF ] ^ \

689 
RT1
[ ( 
Y0
 >> 8 ) & 0xFF ] ^ \

690 
RT2
[ ( 
Y3
 >> 16 ) & 0xFF ] ^ \

691 
RT3
[ ( 
Y2
 >> 24 ) & 0xFF ]; \

693 
X2
 = *
RK
++ ^ 
RT0
[ ( 
Y2
 ) & 0xFF ] ^ \

694 
RT1
[ ( 
Y1
 >> 8 ) & 0xFF ] ^ \

695 
RT2
[ ( 
Y0
 >> 16 ) & 0xFF ] ^ \

696 
RT3
[ ( 
Y3
 >> 24 ) & 0xFF ]; \

698 
X3
 = *
RK
++ ^ 
RT0
[ ( 
Y3
 ) & 0xFF ] ^ \

699 
RT1
[ ( 
Y2
 >> 8 ) & 0xFF ] ^ \

700 
RT2
[ ( 
Y1
 >> 16 ) & 0xFF ] ^ \

701 
RT3
[ ( 
Y0
 >> 24 ) & 0xFF ]; \

702 }

	)

707 
	$´s_¸y±_ecb
–
´s_c⁄ãxt
 *
˘x
,

708 
mode
,

709 c⁄° 
öput
[16],

710 
ouçut
[16] )

712 
i
;

713 
uöt32_t
 *
RK
, 
X0
, 
X1
, 
X2
, 
X3
, 
Y0
, 
Y1
, 
Y2
, 
Y3
;

715 #i‡
	`deföed
(
POLARSSL_AESNI_C
Ë&& deföed(
POLARSSL_HAVE_X86_64
)

716 if–
	`´¢i_suµ‹ts
–
POLARSSL_AESNI_AES
 ) )

717 –
	`´¢i_¸y±_ecb
–
˘x
, 
mode
, 
öput
, 
ouçut
 ) );

720 #i‡
	`deföed
(
POLARSSL_PADLOCK_C
Ë&& deföed(
POLARSSL_HAVE_X86
)

721 if–
´s_∑dlock_a˚
 )

723 if–
	`∑dlock_x¸y±ecb
–
˘x
, 
mode
, 
öput
, 
ouçut
 ) == 0 )

732 
RK
 = 
˘x
->
rk
;

734 
	`GET_UINT32_LE
–
X0
, 
öput
, 0 ); X0 ^*
RK
++;

735 
	`GET_UINT32_LE
–
X1
, 
öput
, 4 ); X1 ^*
RK
++;

736 
	`GET_UINT32_LE
–
X2
, 
öput
, 8 ); X2 ^*
RK
++;

737 
	`GET_UINT32_LE
–
X3
, 
öput
, 12 ); X3 ^*
RK
++;

739 if–
mode
 =
AES_DECRYPT
 )

741  
i
 = ( 
˘x
->
ƒ
 >> 1 ) - 1; i > 0; i-- )

743 
	`AES_RROUND
–
Y0
, 
Y1
, 
Y2
, 
Y3
, 
X0
, 
X1
, 
X2
, 
X3
 );

744 
	`AES_RROUND
–
X0
, 
X1
, 
X2
, 
X3
, 
Y0
, 
Y1
, 
Y2
, 
Y3
 );

747 
	`AES_RROUND
–
Y0
, 
Y1
, 
Y2
, 
Y3
, 
X0
, 
X1
, 
X2
, 
X3
 );

749 
X0
 = *
RK
++ ^ \

750 –(
uöt32_t
Ë
RSb
[ ( 
Y0
 ) & 0xFF ] ) ^

751 –(
uöt32_t
Ë
RSb
[ ( 
Y3
 >> 8 ) & 0xFF ] << 8 ) ^

752 –(
uöt32_t
Ë
RSb
[ ( 
Y2
 >> 16 ) & 0xFF ] << 16 ) ^

753 –(
uöt32_t
Ë
RSb
[ ( 
Y1
 >> 24 ) & 0xFF ] << 24 );

755 
X1
 = *
RK
++ ^ \

756 –(
uöt32_t
Ë
RSb
[ ( 
Y1
 ) & 0xFF ] ) ^

757 –(
uöt32_t
Ë
RSb
[ ( 
Y0
 >> 8 ) & 0xFF ] << 8 ) ^

758 –(
uöt32_t
Ë
RSb
[ ( 
Y3
 >> 16 ) & 0xFF ] << 16 ) ^

759 –(
uöt32_t
Ë
RSb
[ ( 
Y2
 >> 24 ) & 0xFF ] << 24 );

761 
X2
 = *
RK
++ ^ \

762 –(
uöt32_t
Ë
RSb
[ ( 
Y2
 ) & 0xFF ] ) ^

763 –(
uöt32_t
Ë
RSb
[ ( 
Y1
 >> 8 ) & 0xFF ] << 8 ) ^

764 –(
uöt32_t
Ë
RSb
[ ( 
Y0
 >> 16 ) & 0xFF ] << 16 ) ^

765 –(
uöt32_t
Ë
RSb
[ ( 
Y3
 >> 24 ) & 0xFF ] << 24 );

767 
X3
 = *
RK
++ ^ \

768 –(
uöt32_t
Ë
RSb
[ ( 
Y3
 ) & 0xFF ] ) ^

769 –(
uöt32_t
Ë
RSb
[ ( 
Y2
 >> 8 ) & 0xFF ] << 8 ) ^

770 –(
uöt32_t
Ë
RSb
[ ( 
Y1
 >> 16 ) & 0xFF ] << 16 ) ^

771 –(
uöt32_t
Ë
RSb
[ ( 
Y0
 >> 24 ) & 0xFF ] << 24 );

775  
i
 = ( 
˘x
->
ƒ
 >> 1 ) - 1; i > 0; i-- )

777 
	`AES_FROUND
–
Y0
, 
Y1
, 
Y2
, 
Y3
, 
X0
, 
X1
, 
X2
, 
X3
 );

778 
	`AES_FROUND
–
X0
, 
X1
, 
X2
, 
X3
, 
Y0
, 
Y1
, 
Y2
, 
Y3
 );

781 
	`AES_FROUND
–
Y0
, 
Y1
, 
Y2
, 
Y3
, 
X0
, 
X1
, 
X2
, 
X3
 );

783 
X0
 = *
RK
++ ^ \

784 –(
uöt32_t
Ë
FSb
[ ( 
Y0
 ) & 0xFF ] ) ^

785 –(
uöt32_t
Ë
FSb
[ ( 
Y1
 >> 8 ) & 0xFF ] << 8 ) ^

786 –(
uöt32_t
Ë
FSb
[ ( 
Y2
 >> 16 ) & 0xFF ] << 16 ) ^

787 –(
uöt32_t
Ë
FSb
[ ( 
Y3
 >> 24 ) & 0xFF ] << 24 );

789 
X1
 = *
RK
++ ^ \

790 –(
uöt32_t
Ë
FSb
[ ( 
Y1
 ) & 0xFF ] ) ^

791 –(
uöt32_t
Ë
FSb
[ ( 
Y2
 >> 8 ) & 0xFF ] << 8 ) ^

792 –(
uöt32_t
Ë
FSb
[ ( 
Y3
 >> 16 ) & 0xFF ] << 16 ) ^

793 –(
uöt32_t
Ë
FSb
[ ( 
Y0
 >> 24 ) & 0xFF ] << 24 );

795 
X2
 = *
RK
++ ^ \

796 –(
uöt32_t
Ë
FSb
[ ( 
Y2
 ) & 0xFF ] ) ^

797 –(
uöt32_t
Ë
FSb
[ ( 
Y3
 >> 8 ) & 0xFF ] << 8 ) ^

798 –(
uöt32_t
Ë
FSb
[ ( 
Y0
 >> 16 ) & 0xFF ] << 16 ) ^

799 –(
uöt32_t
Ë
FSb
[ ( 
Y1
 >> 24 ) & 0xFF ] << 24 );

801 
X3
 = *
RK
++ ^ \

802 –(
uöt32_t
Ë
FSb
[ ( 
Y3
 ) & 0xFF ] ) ^

803 –(
uöt32_t
Ë
FSb
[ ( 
Y0
 >> 8 ) & 0xFF ] << 8 ) ^

804 –(
uöt32_t
Ë
FSb
[ ( 
Y1
 >> 16 ) & 0xFF ] << 16 ) ^

805 –(
uöt32_t
Ë
FSb
[ ( 
Y2
 >> 24 ) & 0xFF ] << 24 );

808 
	`PUT_UINT32_LE
–
X0
, 
ouçut
, 0 );

809 
	`PUT_UINT32_LE
–
X1
, 
ouçut
, 4 );

810 
	`PUT_UINT32_LE
–
X2
, 
ouçut
, 8 );

811 
	`PUT_UINT32_LE
–
X3
, 
ouçut
, 12 );

814 
	}
}

816 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

820 
	$´s_¸y±_cbc
–
´s_c⁄ãxt
 *
˘x
,

821 
mode
,

822 
size_t
 
Àngth
,

823 
iv
[16],

824 c⁄° *
öput
,

825 *
ouçut
 )

827 
i
;

828 
ãmp
[16];

830 if–
Àngth
 % 16 )

831 –
POLARSSL_ERR_AES_INVALID_INPUT_LENGTH
 );

833 #i‡
	`deföed
(
POLARSSL_PADLOCK_C
Ë&& deföed(
POLARSSL_HAVE_X86
)

834 if–
´s_∑dlock_a˚
 )

836 if–
	`∑dlock_x¸y±cbc
–
˘x
, 
mode
, 
Àngth
, 
iv
, 
öput
, 
ouçut
 ) == 0 )

845 if–
mode
 =
AES_DECRYPT
 )

847  
Àngth
 > 0 )

849 
	`mem˝y
–
ãmp
, 
öput
, 16 );

850 
	`´s_¸y±_ecb
–
˘x
, 
mode
, 
öput
, 
ouçut
 );

852  
i
 = 0; i < 16; i++ )

853 
ouçut
[
i
] = ()–ouçut[i] ^ 
iv
[i] );

855 
	`mem˝y
–
iv
, 
ãmp
, 16 );

857 
öput
 += 16;

858 
ouçut
 += 16;

859 
Àngth
 -= 16;

864  
Àngth
 > 0 )

866  
i
 = 0; i < 16; i++ )

867 
ouçut
[
i
] = ()–
öput
[i] ^ 
iv
[i] );

869 
	`´s_¸y±_ecb
–
˘x
, 
mode
, 
ouçut
, output );

870 
	`mem˝y
–
iv
, 
ouçut
, 16 );

872 
öput
 += 16;

873 
ouçut
 += 16;

874 
Àngth
 -= 16;

879 
	}
}

882 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CFB
)

886 
	$´s_¸y±_cfb128
–
´s_c⁄ãxt
 *
˘x
,

887 
mode
,

888 
size_t
 
Àngth
,

889 
size_t
 *
iv_off
,

890 
iv
[16],

891 c⁄° *
öput
,

892 *
ouçut
 )

894 
c
;

895 
size_t
 
n
 = *
iv_off
;

897 if–
mode
 =
AES_DECRYPT
 )

899  
Àngth
-- )

901 if–
n
 == 0 )

902 
	`´s_¸y±_ecb
–
˘x
, 
AES_ENCRYPT
, 
iv
, iv );

904 
c
 = *
öput
++;

905 *
ouçut
++ = ()–
c
 ^ 
iv
[
n
] );

906 
iv
[
n
] = (Ë
c
;

908 
n
 = (Ç + 1 ) & 0x0F;

913  
Àngth
-- )

915 if–
n
 == 0 )

916 
	`´s_¸y±_ecb
–
˘x
, 
AES_ENCRYPT
, 
iv
, iv );

918 
iv
[
n
] = *
ouçut
++ = ()–iv[n] ^ *
öput
++ );

920 
n
 = (Ç + 1 ) & 0x0F;

924 *
iv_off
 = 
n
;

927 
	}
}

932 
	~<°dio.h
>

933 
	$´s_¸y±_cfb8
–
´s_c⁄ãxt
 *
˘x
,

934 
mode
,

935 
size_t
 
Àngth
,

936 
iv
[16],

937 c⁄° *
öput
,

938 *
ouçut
 )

940 
c
;

941 
ov
[17];

943  
Àngth
-- )

945 
	`mem˝y
–
ov
, 
iv
, 16 );

946 
	`´s_¸y±_ecb
–
˘x
, 
AES_ENCRYPT
, 
iv
, iv );

948 if–
mode
 =
AES_DECRYPT
 )

949 
ov
[16] = *
öput
;

951 
c
 = *
ouçut
++ = ()–
iv
[0] ^ *
öput
++ );

953 if–
mode
 =
AES_ENCRYPT
 )

954 
ov
[16] = 
c
;

956 
	`mem˝y
–
iv
, 
ov
 + 1, 16 );

960 
	}
}

963 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CTR
)

967 
	$´s_¸y±_˘r
–
´s_c⁄ãxt
 *
˘x
,

968 
size_t
 
Àngth
,

969 
size_t
 *
nc_off
,

970 
n⁄˚_cou¡î
[16],

971 
°ªam_block
[16],

972 c⁄° *
öput
,

973 *
ouçut
 )

975 
c
, 
i
;

976 
size_t
 
n
 = *
nc_off
;

978  
Àngth
-- )

980 if–
n
 == 0 ) {

981 
	`´s_¸y±_ecb
–
˘x
, 
AES_ENCRYPT
, 
n⁄˚_cou¡î
, 
°ªam_block
 );

983  
i
 = 16; i > 0; i-- )

984 if–++
n⁄˚_cou¡î
[
i
 - 1] != 0 )

987 
c
 = *
öput
++;

988 *
ouçut
++ = ()–
c
 ^ 
°ªam_block
[
n
] );

990 
n
 = (Ç + 1 ) & 0x0F;

993 *
nc_off
 = 
n
;

996 
	}
}

1001 #i‡
deföed
(
POLARSSL_SELF_TEST
)

1003 
	~<°dio.h
>

1010 c⁄° 
	g´s_ã°_ecb_dec
[3][16] =

1020 c⁄° 
	g´s_ã°_ecb_íc
[3][16] =

1030 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1031 c⁄° 
	g´s_ã°_cbc_dec
[3][16] =

1041 c⁄° 
	g´s_ã°_cbc_íc
[3][16] =

1052 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CFB
)

1058 c⁄° 
	g´s_ã°_cfb128_key
[3][32] =

1071 c⁄° 
	g´s_ã°_cfb128_iv
[16] =

1077 c⁄° 
	g´s_ã°_cfb128_±
[64] =

1089 c⁄° 
	g´s_ã°_cfb128_˘
[3][64] =

1118 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CTR
)

1125 c⁄° 
	g´s_ã°_˘r_key
[3][16] =

1135 c⁄° 
	g´s_ã°_˘r_n⁄˚_cou¡î
[3][16] =

1145 c⁄° 
	g´s_ã°_˘r_±
[3][48] =

1162 c⁄° 
	g´s_ã°_˘r_˘
[3][48] =

1177 c⁄° 
	g´s_ã°_˘r_Àn
[3] =

1184 
	$´s_£lf_ã°
–
vîbo£
 )

1186 
ªt
 = 0, 
i
, 
j
, 
u
, 
v
;

1187 
key
[32];

1188 
buf
[64];

1189 
iv
[16];

1190 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1191 
¥v
[16];

1193 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CTR
Ë|| deföed(
POLARSSL_CIPHER_MODE_CFB
)

1194 
size_t
 
off£t
;

1196 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CTR
)

1197 
Àn
;

1198 
n⁄˚_cou¡î
[16];

1199 
°ªam_block
[16];

1201 
´s_c⁄ãxt
 
˘x
;

1203 
	`mem£t
–
key
, 0, 32 );

1204 
	`´s_öô
–&
˘x
 );

1209  
i
 = 0; i < 6; i++ )

1211 
u
 = 
i
 >> 1;

1212 
v
 = 
i
 & 1;

1214 if–
vîbo£
 != 0 )

1215 
	`pﬁ¨s¶_¥ötf
–" AES-ECB-%3d (%s): ", 128 + 
u
 * 64,

1216 –
v
 =
AES_DECRYPT
 ) ? "dec" : "enc" );

1218 
	`mem£t
–
buf
, 0, 16 );

1220 if–
v
 =
AES_DECRYPT
 )

1222 
	`´s_£tkey_dec
–&
˘x
, 
key
, 128 + 
u
 * 64 );

1224  
j
 = 0; j < 10000; j++ )

1225 
	`´s_¸y±_ecb
–&
˘x
, 
v
, 
buf
, buf );

1227 if–
	`memcmp
–
buf
, 
´s_ã°_ecb_dec
[
u
], 16 ) != 0 )

1229 if–
vîbo£
 != 0 )

1230 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1232 
ªt
 = 1;

1233 
exô
;

1238 
	`´s_£tkey_íc
–&
˘x
, 
key
, 128 + 
u
 * 64 );

1240  
j
 = 0; j < 10000; j++ )

1241 
	`´s_¸y±_ecb
–&
˘x
, 
v
, 
buf
, buf );

1243 if–
	`memcmp
–
buf
, 
´s_ã°_ecb_íc
[
u
], 16 ) != 0 )

1245 if–
vîbo£
 != 0 )

1246 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1248 
ªt
 = 1;

1249 
exô
;

1253 if–
vîbo£
 != 0 )

1254 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

1257 if–
vîbo£
 != 0 )

1258 
	`pﬁ¨s¶_¥ötf
( "\n" );

1260 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1264  
i
 = 0; i < 6; i++ )

1266 
u
 = 
i
 >> 1;

1267 
v
 = 
i
 & 1;

1269 if–
vîbo£
 != 0 )

1270 
	`pﬁ¨s¶_¥ötf
–" AES-CBC-%3d (%s): ", 128 + 
u
 * 64,

1271 –
v
 =
AES_DECRYPT
 ) ? "dec" : "enc" );

1273 
	`mem£t
–
iv
 , 0, 16 );

1274 
	`mem£t
–
¥v
, 0, 16 );

1275 
	`mem£t
–
buf
, 0, 16 );

1277 if–
v
 =
AES_DECRYPT
 )

1279 
	`´s_£tkey_dec
–&
˘x
, 
key
, 128 + 
u
 * 64 );

1281  
j
 = 0; j < 10000; j++ )

1282 
	`´s_¸y±_cbc
–&
˘x
, 
v
, 16, 
iv
, 
buf
, buf );

1284 if–
	`memcmp
–
buf
, 
´s_ã°_cbc_dec
[
u
], 16 ) != 0 )

1286 if–
vîbo£
 != 0 )

1287 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1289 
ªt
 = 1;

1290 
exô
;

1295 
	`´s_£tkey_íc
–&
˘x
, 
key
, 128 + 
u
 * 64 );

1297  
j
 = 0; j < 10000; j++ )

1299 
tmp
[16];

1301 
	`´s_¸y±_cbc
–&
˘x
, 
v
, 16, 
iv
, 
buf
, buf );

1303 
	`mem˝y
–
tmp
, 
¥v
, 16 );

1304 
	`mem˝y
–
¥v
, 
buf
, 16 );

1305 
	`mem˝y
–
buf
, 
tmp
, 16 );

1308 if–
	`memcmp
–
¥v
, 
´s_ã°_cbc_íc
[
u
], 16 ) != 0 )

1310 if–
vîbo£
 != 0 )

1311 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1313 
ªt
 = 1;

1314 
exô
;

1318 if–
vîbo£
 != 0 )

1319 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

1322 if–
vîbo£
 != 0 )

1323 
	`pﬁ¨s¶_¥ötf
( "\n" );

1326 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CFB
)

1330  
i
 = 0; i < 6; i++ )

1332 
u
 = 
i
 >> 1;

1333 
v
 = 
i
 & 1;

1335 if–
vîbo£
 != 0 )

1336 
	`pﬁ¨s¶_¥ötf
–" AES-CFB128-%3d (%s): ", 128 + 
u
 * 64,

1337 –
v
 =
AES_DECRYPT
 ) ? "dec" : "enc" );

1339 
	`mem˝y
–
iv
, 
´s_ã°_cfb128_iv
, 16 );

1340 
	`mem˝y
–
key
, 
´s_ã°_cfb128_key
[
u
], 16 + u * 8 );

1342 
off£t
 = 0;

1343 
	`´s_£tkey_íc
–&
˘x
, 
key
, 128 + 
u
 * 64 );

1345 if–
v
 =
AES_DECRYPT
 )

1347 
	`mem˝y
–
buf
, 
´s_ã°_cfb128_˘
[
u
], 64 );

1348 
	`´s_¸y±_cfb128
–&
˘x
, 
v
, 64, &
off£t
, 
iv
, 
buf
, buf );

1350 if–
	`memcmp
–
buf
, 
´s_ã°_cfb128_±
, 64 ) != 0 )

1352 if–
vîbo£
 != 0 )

1353 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1355 
ªt
 = 1;

1356 
exô
;

1361 
	`mem˝y
–
buf
, 
´s_ã°_cfb128_±
, 64 );

1362 
	`´s_¸y±_cfb128
–&
˘x
, 
v
, 64, &
off£t
, 
iv
, 
buf
, buf );

1364 if–
	`memcmp
–
buf
, 
´s_ã°_cfb128_˘
[
u
], 64 ) != 0 )

1366 if–
vîbo£
 != 0 )

1367 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1369 
ªt
 = 1;

1370 
exô
;

1374 if–
vîbo£
 != 0 )

1375 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

1378 if–
vîbo£
 != 0 )

1379 
	`pﬁ¨s¶_¥ötf
( "\n" );

1382 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CTR
)

1386  
i
 = 0; i < 6; i++ )

1388 
u
 = 
i
 >> 1;

1389 
v
 = 
i
 & 1;

1391 if–
vîbo£
 != 0 )

1392 
	`pﬁ¨s¶_¥ötf
( " AES-CTR-128 (%s): ",

1393 –
v
 =
AES_DECRYPT
 ) ? "dec" : "enc" );

1395 
	`mem˝y
–
n⁄˚_cou¡î
, 
´s_ã°_˘r_n⁄˚_cou¡î
[
u
], 16 );

1396 
	`mem˝y
–
key
, 
´s_ã°_˘r_key
[
u
], 16 );

1398 
off£t
 = 0;

1399 
	`´s_£tkey_íc
–&
˘x
, 
key
, 128 );

1401 if–
v
 =
AES_DECRYPT
 )

1403 
Àn
 = 
´s_ã°_˘r_Àn
[
u
];

1404 
	`mem˝y
–
buf
, 
´s_ã°_˘r_˘
[
u
], 
Àn
 );

1406 
	`´s_¸y±_˘r
–&
˘x
, 
Àn
, &
off£t
, 
n⁄˚_cou¡î
, 
°ªam_block
,

1407 
buf
, buf );

1409 if–
	`memcmp
–
buf
, 
´s_ã°_˘r_±
[
u
], 
Àn
 ) != 0 )

1411 if–
vîbo£
 != 0 )

1412 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1414 
ªt
 = 1;

1415 
exô
;

1420 
Àn
 = 
´s_ã°_˘r_Àn
[
u
];

1421 
	`mem˝y
–
buf
, 
´s_ã°_˘r_±
[
u
], 
Àn
 );

1423 
	`´s_¸y±_˘r
–&
˘x
, 
Àn
, &
off£t
, 
n⁄˚_cou¡î
, 
°ªam_block
,

1424 
buf
, buf );

1426 if–
	`memcmp
–
buf
, 
´s_ã°_˘r_˘
[
u
], 
Àn
 ) != 0 )

1428 if–
vîbo£
 != 0 )

1429 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1431 
ªt
 = 1;

1432 
exô
;

1436 if–
vîbo£
 != 0 )

1437 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

1440 if–
vîbo£
 != 0 )

1441 
	`pﬁ¨s¶_¥ötf
( "\n" );

1444 
ªt
 = 0;

1446 
exô
:

1447 
	`´s_‰ì
–&
˘x
 );

1449 –
ªt
 );

1450 
	}
}

	@polarssl/library/aesni.c

31 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

32 
	~"pﬁ¨s¶/c⁄fig.h
"

34 #ö˛udê
POLARSSL_CONFIG_FILE


37 #i‡
deföed
(
POLARSSL_AESNI_C
)

39 
	~"pﬁ¨s¶/´¢i.h
"

40 
	~<°dio.h
>

42 #i‡
deföed
(
POLARSSL_HAVE_X86_64
)

47 
	$´¢i_suµ‹ts
–
wh©
 )

49 
d⁄e
 = 0;

50 
c
 = 0;

52 if–! 
d⁄e
 )

54 
	`asm
( "movl $1, %%eax \n\t"

56 : "=c" (
c
)

59 
d⁄e
 = 1;

62 ––
c
 & 
wh©
 ) != 0 );

63 
	}
}

75 
	#AESDEC
 ".byã 0x66,0x0F,0x38,0xDE,"

	)

76 
	#AESDECLAST
 ".byã 0x66,0x0F,0x38,0xDF,"

	)

77 
	#AESENC
 ".byã 0x66,0x0F,0x38,0xDC,"

	)

78 
	#AESENCLAST
 ".byã 0x66,0x0F,0x38,0xDD,"

	)

79 
	#AESIMC
 ".byã 0x66,0x0F,0x38,0xDB,"

	)

80 
	#AESKEYGENA
 ".byã 0x66,0x0F,0x3A,0xDF,"

	)

81 
	#PCLMULQDQ
 ".byã 0x66,0x0F,0x3A,0x44,"

	)

83 
	#xmm0_xmm0
 "0xC0"

	)

84 
	#xmm0_xmm1
 "0xC8"

	)

85 
	#xmm0_xmm2
 "0xD0"

	)

86 
	#xmm0_xmm3
 "0xD8"

	)

87 
	#xmm0_xmm4
 "0xE0"

	)

88 
	#xmm1_xmm0
 "0xC1"

	)

89 
	#xmm1_xmm2
 "0xD1"

	)

94 
	$´¢i_¸y±_ecb
–
´s_c⁄ãxt
 *
˘x
,

95 
mode
,

96 c⁄° 
öput
[16],

97 
ouçut
[16] )

99 
	`asm
( "movdqu (%3), %%xmm0 \n\t"

109 
AESENC
 
xmm1_xmm0
 "\n\t"

114 
AESENCLAST
 
xmm1_xmm0
 "\n\t"

119 
AESDEC
 
xmm1_xmm0
 "\n\t"

124 
AESDECLAST
 
xmm1_xmm0
 "\n\t"

129 : "r" (
˘x
->
ƒ
), "r" (˘x->
rk
), "r" (
mode
), "r" (
öput
), "r" (
ouçut
)

134 
	}
}

140 
	$´¢i_gcm_mu…
–
c
[16],

141 c⁄° 
a
[16],

142 c⁄° 
b
[16] )

144 
Ø
[16], 
bb
[16], 
cc
[16];

145 
size_t
 
i
;

148  
i
 = 0; i < 16; i++ )

150 
Ø
[
i
] = 
a
[15 - i];

151 
bb
[
i
] = 
b
[15 - i];

154 
	`asm
( "movdqu (%0), %%xmm0 \n\t"

164 
PCLMULQDQ
 
xmm0_xmm1
 ",0x00 \n\t"

165 
PCLMULQDQ
 
xmm0_xmm2
 ",0x11 \n\t"

166 
PCLMULQDQ
 
xmm0_xmm3
 ",0x10 \n\t"

167 
PCLMULQDQ
 
xmm0_xmm4
 ",0x01 \n\t"

238 : "r" (
Ø
), "r" (
bb
), "r" (
cc
)

242  
i
 = 0; i < 16; i++ )

243 
c
[
i
] = 
cc
[15 - i];

246 
	}
}

251 
	$´¢i_övî£_key
–*
övkey
,

252 c⁄° *
fwdkey
, 
ƒ
 )

254 *
ik
 = 
övkey
;

255 c⁄° *
fk
 = 
fwdkey
 + 16 * 
ƒ
;

257 
	`mem˝y
–
ik
, 
fk
, 16 );

259  
fk
 -16, 
ik
 +16; fk > 
fwdkey
; fk -= 16, ik += 16 )

260 
	`asm
( "movdqu (%0), %%xmm0 \n\t"

261 
AESIMC
 
xmm0_xmm0
 "\n\t"

264 : "r" (
fk
), "r" (
ik
)

267 
	`mem˝y
–
ik
, 
fk
, 16 );

268 
	}
}

273 
	$´¢i_£tkey_íc_128
–*
rk
,

274 c⁄° *
key
 )

276 
	`asm
( "movdqu (%1), %%xmm0 \n\t"

305 
AESKEYGENA
 
xmm0_xmm1
 ",0x01 \n\tcall 1b \n\t"

306 
AESKEYGENA
 
xmm0_xmm1
 ",0x02 \n\tcall 1b \n\t"

307 
AESKEYGENA
 
xmm0_xmm1
 ",0x04 \n\tcall 1b \n\t"

308 
AESKEYGENA
 
xmm0_xmm1
 ",0x08 \n\tcall 1b \n\t"

309 
AESKEYGENA
 
xmm0_xmm1
 ",0x10 \n\tcall 1b \n\t"

310 
AESKEYGENA
 
xmm0_xmm1
 ",0x20 \n\tcall 1b \n\t"

311 
AESKEYGENA
 
xmm0_xmm1
 ",0x40 \n\tcall 1b \n\t"

312 
AESKEYGENA
 
xmm0_xmm1
 ",0x80 \n\tcall 1b \n\t"

313 
AESKEYGENA
 
xmm0_xmm1
 ",0x1B \n\tcall 1b \n\t"

314 
AESKEYGENA
 
xmm0_xmm1
 ",0x36 \n\tcall 1b \n\t"

316 : "r" (
rk
), "r" (
key
)

318 
	}
}

323 
	$´¢i_£tkey_íc_192
–*
rk
,

324 c⁄° *
key
 )

326 
	`asm
( "movdqu (%1), %%xmm0 \n\t"

363 
AESKEYGENA
 
xmm1_xmm2
 ",0x01 \n\tcall 1b \n\t"

364 
AESKEYGENA
 
xmm1_xmm2
 ",0x02 \n\tcall 1b \n\t"

365 
AESKEYGENA
 
xmm1_xmm2
 ",0x04 \n\tcall 1b \n\t"

366 
AESKEYGENA
 
xmm1_xmm2
 ",0x08 \n\tcall 1b \n\t"

367 
AESKEYGENA
 
xmm1_xmm2
 ",0x10 \n\tcall 1b \n\t"

368 
AESKEYGENA
 
xmm1_xmm2
 ",0x20 \n\tcall 1b \n\t"

369 
AESKEYGENA
 
xmm1_xmm2
 ",0x40 \n\tcall 1b \n\t"

370 
AESKEYGENA
 
xmm1_xmm2
 ",0x80 \n\tcall 1b \n\t"

373 : "r" (
rk
), "r" (
key
)

375 
	}
}

380 
	$´¢i_£tkey_íc_256
–*
rk
,

381 c⁄° *
key
 )

383 
	`asm
( "movdqu (%1), %%xmm0 \n\t"

413 
AESKEYGENA
 
xmm0_xmm2
 ",0x00 \n\t"

431 
AESKEYGENA
 
xmm1_xmm2
 ",0x01 \n\tcall 1b \n\t"

432 
AESKEYGENA
 
xmm1_xmm2
 ",0x02 \n\tcall 1b \n\t"

433 
AESKEYGENA
 
xmm1_xmm2
 ",0x04 \n\tcall 1b \n\t"

434 
AESKEYGENA
 
xmm1_xmm2
 ",0x08 \n\tcall 1b \n\t"

435 
AESKEYGENA
 
xmm1_xmm2
 ",0x10 \n\tcall 1b \n\t"

436 
AESKEYGENA
 
xmm1_xmm2
 ",0x20 \n\tcall 1b \n\t"

437 
AESKEYGENA
 
xmm1_xmm2
 ",0x40 \n\tcall 1b \n\t"

439 : "r" (
rk
), "r" (
key
)

441 
	}
}

446 
	$´¢i_£tkey_íc
–*
rk
,

447 c⁄° *
key
,

448 
size_t
 
bôs
 )

450  
bôs
 )

452 128: 
	`´¢i_£tkey_íc_128
–
rk
, 
key
 ); ;

453 192: 
	`´¢i_£tkey_íc_192
–
rk
, 
key
 ); ;

454 256: 
	`´¢i_£tkey_íc_256
–
rk
, 
key
 ); ;

455  : –
POLARSSL_ERR_AES_INVALID_KEY_LENGTH
 );

459 
	}
}

	@polarssl/library/arc4.c

31 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

32 
	~"pﬁ¨s¶/c⁄fig.h
"

34 #ö˛udê
POLARSSL_CONFIG_FILE


37 #i‡
deföed
(
POLARSSL_ARC4_C
)

39 
	~"pﬁ¨s¶/¨c4.h
"

41 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

42 
	~"pﬁ¨s¶/∂©f‹m.h
"

44 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

47 #i‡!
deföed
(
POLARSSL_ARC4_ALT
)

50 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

51 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

52 
	}
}

54 
	$¨c4_öô
–
¨c4_c⁄ãxt
 *
˘x
 )

56 
	`mem£t
–
˘x
, 0, –
¨c4_c⁄ãxt
 ) );

57 
	}
}

59 
	$¨c4_‰ì
–
¨c4_c⁄ãxt
 *
˘x
 )

61 if–
˘x
 =
NULL
 )

64 
	`pﬁ¨s¶_zîoize
–
˘x
, –
¨c4_c⁄ãxt
 ) );

65 
	}
}

70 
	$¨c4_£tup
–
¨c4_c⁄ãxt
 *
˘x
, c⁄° *
key
,

71 
keyÀn
 )

73 
i
, 
j
, 
a
;

74 
k
;

75 *
m
;

77 
˘x
->
x
 = 0;

78 
˘x
->
y
 = 0;

79 
m
 = 
˘x
->m;

81  
i
 = 0; i < 256; i++ )

82 
m
[
i
] = () i;

84 
j
 = 
k
 = 0;

86  
i
 = 0; i < 256; i++, 
k
++ )

88 if–
k
 >
keyÀn
 ) k = 0;

90 
a
 = 
m
[
i
];

91 
j
 = ( j + 
a
 + 
key
[
k
] ) & 0xFF;

92 
m
[
i
] = m[
j
];

93 
m
[
j
] = (Ë
a
;

95 
	}
}

100 
	$¨c4_¸y±
–
¨c4_c⁄ãxt
 *
˘x
, 
size_t
 
Àngth
, c⁄° *
öput
,

101 *
ouçut
 )

103 
x
, 
y
, 
a
, 
b
;

104 
size_t
 
i
;

105 *
m
;

107 
x
 = 
˘x
->x;

108 
y
 = 
˘x
->y;

109 
m
 = 
˘x
->m;

111  
i
 = 0; i < 
Àngth
; i++ )

113 
x
 = ( x + 1 ) & 0xFF; 
a
 = 
m
[x];

114 
y
 = ( y + 
a
 ) & 0xFF; 
b
 = 
m
[y];

116 
m
[
x
] = (Ë
b
;

117 
m
[
y
] = (Ë
a
;

119 
ouçut
[
i
] = ()

120 –
öput
[
i
] ^ 
m
[()–
a
 + 
b
 )] );

123 
˘x
->
x
 = x;

124 
˘x
->
y
 = y;

127 
	}
}

131 #i‡
deföed
(
POLARSSL_SELF_TEST
)

133 
	~<°rög.h
>

134 
	~<°dio.h
>

141 c⁄° 
	g¨c4_ã°_key
[3][8] =

148 c⁄° 
	g¨c4_ã°_±
[3][8] =

155 c⁄° 
	g¨c4_ã°_˘
[3][8] =

165 
	$¨c4_£lf_ã°
–
vîbo£
 )

167 
i
, 
ªt
 = 0;

168 
ibuf
[8];

169 
obuf
[8];

170 
¨c4_c⁄ãxt
 
˘x
;

172 
	`¨c4_öô
–&
˘x
 );

174  
i
 = 0; i < 3; i++ )

176 if–
vîbo£
 != 0 )

177 
	`pﬁ¨s¶_¥ötf
–" ARC4Åe° #%d: ", 
i
 + 1 );

179 
	`mem˝y
–
ibuf
, 
¨c4_ã°_±
[
i
], 8 );

181 
	`¨c4_£tup
–&
˘x
, 
¨c4_ã°_key
[
i
], 8 );

182 
	`¨c4_¸y±
–&
˘x
, 8, 
ibuf
, 
obuf
 );

184 if–
	`memcmp
–
obuf
, 
¨c4_ã°_˘
[
i
], 8 ) != 0 )

186 if–
vîbo£
 != 0 )

187 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

189 
ªt
 = 1;

190 
exô
;

193 if–
vîbo£
 != 0 )

194 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

197 if–
vîbo£
 != 0 )

198 
	`pﬁ¨s¶_¥ötf
( "\n" );

200 
exô
:

201 
	`¨c4_‰ì
–&
˘x
 );

203 –
ªt
 );

204 
	}
}

	@polarssl/library/asn1parse.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_ASN1_PARSE_C
)

34 
	~"pﬁ¨s¶/a¢1.h
"

36 #i‡
deföed
(
POLARSSL_BIGNUM_C
)

37 
	~"pﬁ¨s¶/bignum.h
"

40 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

41 
	~"pﬁ¨s¶/∂©f‹m.h
"

43 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

44 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

47 
	~<°rög.h
>

48 
	~<°dlib.h
>

53 
	$a¢1_gë_Àn
–**
p
,

54 c⁄° *
íd
,

55 
size_t
 *
Àn
 )

57 if––
íd
 - *
p
 ) < 1 )

58 –
POLARSSL_ERR_ASN1_OUT_OF_DATA
 );

60 if––**
p
 & 0x80 ) == 0 )

61 *
Àn
 = *(*
p
)++;

64  **
p
 & 0x7F )

67 if––
íd
 - *
p
 ) < 2 )

68 –
POLARSSL_ERR_ASN1_OUT_OF_DATA
 );

70 *
Àn
 = (*
p
)[1];

71 (*
p
) += 2;

75 if––
íd
 - *
p
 ) < 3 )

76 –
POLARSSL_ERR_ASN1_OUT_OF_DATA
 );

78 *
Àn
 = ( (*
p
)[1] << 8 ) | (*p)[2];

79 (*
p
) += 3;

83 if––
íd
 - *
p
 ) < 4 )

84 –
POLARSSL_ERR_ASN1_OUT_OF_DATA
 );

86 *
Àn
 = ( (*
p
)[1] << 16 ) | ( (*p)[2] << 8 ) | (*p)[3];

87 (*
p
) += 4;

91 if––
íd
 - *
p
 ) < 5 )

92 –
POLARSSL_ERR_ASN1_OUT_OF_DATA
 );

94 *
Àn
 = ( (*
p
)[1] << 24 ) | ( (*p)[2] << 16 ) | ( (*p)[3] << 8 ) |

95 (*
p
)[4];

96 (*
p
) += 5;

100 –
POLARSSL_ERR_ASN1_INVALID_LENGTH
 );

104 if–*
Àn
 > (
size_t
Ë–
íd
 - *
p
 ) )

105 –
POLARSSL_ERR_ASN1_OUT_OF_DATA
 );

108 
	}
}

110 
	$a¢1_gë_èg
–**
p
,

111 c⁄° *
íd
,

112 
size_t
 *
Àn
, 
èg
 )

114 if––
íd
 - *
p
 ) < 1 )

115 –
POLARSSL_ERR_ASN1_OUT_OF_DATA
 );

117 if–**
p
 !
èg
 )

118 –
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 );

120 (*
p
)++;

122 –
	`a¢1_gë_Àn
–
p
, 
íd
, 
Àn
 ) );

123 
	}
}

125 
	$a¢1_gë_boﬁ
–**
p
,

126 c⁄° *
íd
,

127 *
vÆ
 )

129 
ªt
;

130 
size_t
 
Àn
;

132 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
Àn
, 
ASN1_BOOLEAN
 ) ) != 0 )

133 –
ªt
 );

135 if–
Àn
 != 1 )

136 –
POLARSSL_ERR_ASN1_INVALID_LENGTH
 );

138 *
vÆ
 = ( **
p
 != 0 ) ? 1 : 0;

139 (*
p
)++;

142 
	}
}

144 
	$a¢1_gë_öt
–**
p
,

145 c⁄° *
íd
,

146 *
vÆ
 )

148 
ªt
;

149 
size_t
 
Àn
;

151 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
Àn
, 
ASN1_INTEGER
 ) ) != 0 )

152 –
ªt
 );

154 if–
Àn
 > –Ë|| ( **
p
 & 0x80 ) != 0 )

155 –
POLARSSL_ERR_ASN1_INVALID_LENGTH
 );

157 *
vÆ
 = 0;

159  
Àn
-- > 0 )

161 *
vÆ
 = ( *vÆ << 8 ) | **
p
;

162 (*
p
)++;

166 
	}
}

168 #i‡
deföed
(
POLARSSL_BIGNUM_C
)

169 
	$a¢1_gë_mpi
–**
p
,

170 c⁄° *
íd
,

171 
mpi
 *
X
 )

173 
ªt
;

174 
size_t
 
Àn
;

176 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
Àn
, 
ASN1_INTEGER
 ) ) != 0 )

177 –
ªt
 );

179 
ªt
 = 
	`mpi_ªad_bö¨y
–
X
, *
p
, 
Àn
 );

181 *
p
 +
Àn
;

183 –
ªt
 );

184 
	}
}

187 
	$a¢1_gë_bô°rög
–**
p
, c⁄° *
íd
,

188 
a¢1_bô°rög
 *
bs
)

190 
ªt
;

193 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
bs
->
Àn
, 
ASN1_BIT_STRING
 ) ) != 0 )

194 –
ªt
 );

197 if–
bs
->
Àn
 < 1 )

198 –
POLARSSL_ERR_ASN1_OUT_OF_DATA
 );

199 
bs
->
Àn
 -= 1;

202 
bs
->
unu£d_bôs
 = **
p
;

203 if–
bs
->
unu£d_bôs
 > 7 )

204 –
POLARSSL_ERR_ASN1_INVALID_LENGTH
 );

205 (*
p
)++;

208 
bs
->
p
 = *p;

209 *
p
 +
bs
->
Àn
;

211 if–*
p
 !
íd
 )

212 –
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

215 
	}
}

220 
	$a¢1_gë_bô°rög_nuŒ
–**
p
, c⁄° *
íd
,

221 
size_t
 *
Àn
 )

223 
ªt
;

225 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, 
Àn
, 
ASN1_BIT_STRING
 ) ) != 0 )

226 –
ªt
 );

228 if–(*
Àn
)-- < 2 || *(*
p
)++ != 0 )

229 –
POLARSSL_ERR_ASN1_INVALID_DATA
 );

232 
	}
}

239 
	$a¢1_gë_£quí˚_of
–**
p
,

240 c⁄° *
íd
,

241 
a¢1_£quí˚
 *
cur
,

242 
èg
)

244 
ªt
;

245 
size_t
 
Àn
;

246 
a¢1_buf
 *
buf
;

249 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
Àn
,

250 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

251 –
ªt
 );

253 if–*
p
 + 
Àn
 !
íd
 )

254 –
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

256  *
p
 < 
íd
 )

258 
buf
 = &(
cur
->buf);

259 
buf
->
èg
 = **
p
;

261 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
buf
->
Àn
, 
èg
 ) ) != 0 )

262 –
ªt
 );

264 
buf
->
p
 = *p;

265 *
p
 +
buf
->
Àn
;

268 if–*
p
 < 
íd
 )

270 
cur
->
√xt
 = (
a¢1_£quí˚
 *Ë
	`pﬁ¨s¶_mÆloc
(

271 –
a¢1_£quí˚
 ) );

273 if–
cur
->
√xt
 =
NULL
 )

274 –
POLARSSL_ERR_ASN1_MALLOC_FAILED
 );

276 
cur
 = cur->
√xt
;

281 
cur
->
√xt
 = 
NULL
;

283 if–*
p
 !
íd
 )

284 –
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

287 
	}
}

289 
	$a¢1_gë_Æg
–**
p
,

290 c⁄° *
íd
,

291 
a¢1_buf
 *
Æg
,á¢1_bu‡*
∑øms
 )

293 
ªt
;

294 
size_t
 
Àn
;

296 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
Àn
,

297 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

298 –
ªt
 );

300 if––
íd
 - *
p
 ) < 1 )

301 –
POLARSSL_ERR_ASN1_OUT_OF_DATA
 );

303 
Æg
->
èg
 = **
p
;

304 
íd
 = *
p
 + 
Àn
;

306 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
Æg
->
Àn
, 
ASN1_OID
 ) ) != 0 )

307 –
ªt
 );

309 
Æg
->
p
 = *p;

310 *
p
 +
Æg
->
Àn
;

312 if–*
p
 =
íd
 )

314 
	`mem£t
–
∑øms
, 0, (
a¢1_buf
) );

318 
∑øms
->
èg
 = **
p
;

319 (*
p
)++;

321 if––
ªt
 = 
	`a¢1_gë_Àn
–
p
, 
íd
, &
∑øms
->
Àn
 ) ) != 0 )

322 –
ªt
 );

324 
∑øms
->
p
 = *p;

325 *
p
 +
∑øms
->
Àn
;

327 if–*
p
 !
íd
 )

328 –
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

331 
	}
}

333 
	$a¢1_gë_Æg_nuŒ
–**
p
,

334 c⁄° *
íd
,

335 
a¢1_buf
 *
Æg
 )

337 
ªt
;

338 
a¢1_buf
 
∑øms
;

340 
	`mem£t
–&
∑øms
, 0, (
a¢1_buf
) );

342 if––
ªt
 = 
	`a¢1_gë_Æg
–
p
, 
íd
, 
Æg
, &
∑øms
 ) ) != 0 )

343 –
ªt
 );

345 if––
∑øms
.
èg
 !
ASN1_NULL
 &&Ö¨ams.èg !0 ) ||Ö¨ams.
Àn
 != 0 )

346 –
POLARSSL_ERR_ASN1_INVALID_DATA
 );

349 
	}
}

351 
	$a¢1_‰ì_«med_d©a
–
a¢1_«med_d©a
 *
cur
 )

353 if–
cur
 =
NULL
 )

356 
	`pﬁ¨s¶_‰ì
–
cur
->
oid
.
p
 );

357 
	`pﬁ¨s¶_‰ì
–
cur
->
vÆ
.
p
 );

359 
	`mem£t
–
cur
, 0, –
a¢1_«med_d©a
 ) );

360 
	}
}

362 
	$a¢1_‰ì_«med_d©a_li°
–
a¢1_«med_d©a
 **
hód
 )

364 
a¢1_«med_d©a
 *
cur
;

366  ( 
cur
 = *
hód
 ) !
NULL
 )

368 *
hód
 = 
cur
->
√xt
;

369 
	`a¢1_‰ì_«med_d©a
–
cur
 );

370 
	`pﬁ¨s¶_‰ì
–
cur
 );

372 
	}
}

374 
a¢1_«med_d©a
 *
	$a¢1_föd_«med_d©a
–
a¢1_«med_d©a
 *
li°
,

375 c⁄° *
oid
, 
size_t
 
Àn
 )

377  
li°
 !
NULL
 )

379 if–
li°
->
oid
.
Àn
 ==Üen &&

380 
	`memcmp
–
li°
->
oid
.
p
, oid, 
Àn
 ) == 0 )

385 
li°
 =Üi°->
√xt
;

388 –
li°
 );

389 
	}
}

	@polarssl/library/asn1write.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_ASN1_WRITE_C
)

34 
	~"pﬁ¨s¶/a¢1wrôe.h
"

36 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

37 
	~"pﬁ¨s¶/∂©f‹m.h
"

39 
	~<°dlib.h
>

40 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

41 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

44 
	$a¢1_wrôe_Àn
–**
p
, *
°¨t
, 
size_t
 
Àn
 )

46 if–
Àn
 < 0x80 )

48 if–*
p
 - 
°¨t
 < 1 )

49 –
POLARSSL_ERR_ASN1_BUF_TOO_SMALL
 );

51 *--(*
p
Ë(Ë
Àn
;

55 if–
Àn
 <= 0xFF )

57 if–*
p
 - 
°¨t
 < 2 )

58 –
POLARSSL_ERR_ASN1_BUF_TOO_SMALL
 );

60 *--(*
p
Ë(Ë
Àn
;

61 *--(*
p
) = 0x81;

65 if–*
p
 - 
°¨t
 < 3 )

66 –
POLARSSL_ERR_ASN1_BUF_TOO_SMALL
 );

70 *--(*
p
Ë
Àn
 % 256;

71 *--(*
p
Ë–
Àn
 / 256 ) % 256;

72 *--(*
p
) = 0x82;

75 
	}
}

77 
	$a¢1_wrôe_èg
–**
p
, *
°¨t
, 
èg
 )

79 if–*
p
 - 
°¨t
 < 1 )

80 –
POLARSSL_ERR_ASN1_BUF_TOO_SMALL
 );

82 *--(*
p
Ë
èg
;

85 
	}
}

87 
	$a¢1_wrôe_øw_buf„r
–**
p
, *
°¨t
,

88 c⁄° *
buf
, 
size_t
 
size
 )

90 
size_t
 
Àn
 = 0;

92 if–*
p
 - 
°¨t
 < (Ë
size
 )

93 –
POLARSSL_ERR_ASN1_BUF_TOO_SMALL
 );

95 
Àn
 = 
size
;

96 (*
p
Ë-
Àn
;

97 
	`mem˝y
–*
p
, 
buf
, 
Àn
 );

99 –(Ë
Àn
 );

100 
	}
}

102 #i‡
deföed
(
POLARSSL_BIGNUM_C
)

103 
	$a¢1_wrôe_mpi
–**
p
, *
°¨t
, 
mpi
 *
X
 )

105 
ªt
;

106 
size_t
 
Àn
 = 0;

110 
Àn
 = 
	`mpi_size
–
X
 );

112 if–*
p
 - 
°¨t
 < (Ë
Àn
 )

113 –
POLARSSL_ERR_ASN1_BUF_TOO_SMALL
 );

115 (*
p
Ë-
Àn
;

116 
	`MPI_CHK
–
	`mpi_wrôe_bö¨y
–
X
, *
p
, 
Àn
 ) );

121 if–
X
->
s
 ==1 && **
p
 & 0x80 )

123 if–*
p
 - 
°¨t
 < 1 )

124 –
POLARSSL_ERR_ASN1_BUF_TOO_SMALL
 );

126 *--(*
p
) = 0x00;

127 
Àn
 += 1;

130 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
,Üen ) );

131 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–
p
, 
°¨t
, 
ASN1_INTEGER
 ) );

133 
ªt
 = (Ë
Àn
;

135 
˛ónup
:

136 –
ªt
 );

137 
	}
}

140 
	$a¢1_wrôe_nuŒ
–**
p
, *
°¨t
 )

142 
ªt
;

143 
size_t
 
Àn
 = 0;

147 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
, 0) );

148 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–
p
, 
°¨t
, 
ASN1_NULL
 ) );

150 –(Ë
Àn
 );

151 
	}
}

153 
	$a¢1_wrôe_oid
–**
p
, *
°¨t
,

154 c⁄° *
oid
, 
size_t
 
oid_Àn
 )

156 
ªt
;

157 
size_t
 
Àn
 = 0;

159 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_øw_buf„r
–
p
, 
°¨t
,

160 (c⁄° *Ë
oid
, 
oid_Àn
 ) );

161 
	`ASN1_CHK_ADD
–
Àn
 , 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
,Üen ) );

162 
	`ASN1_CHK_ADD
–
Àn
 , 
	`a¢1_wrôe_èg
–
p
, 
°¨t
, 
ASN1_OID
 ) );

164 –(Ë
Àn
 );

165 
	}
}

167 
	$a¢1_wrôe_Æg‹ôhm_idítifõr
–**
p
, *
°¨t
,

168 c⁄° *
oid
, 
size_t
 
oid_Àn
,

169 
size_t
 
∑r_Àn
 )

171 
ªt
;

172 
size_t
 
Àn
 = 0;

174 if–
∑r_Àn
 == 0 )

175 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_nuŒ
–
p
, 
°¨t
 ) );

177 
Àn
 +
∑r_Àn
;

179 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_oid
–
p
, 
°¨t
, 
oid
, 
oid_Àn
 ) );

181 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
,Üen ) );

182 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–
p
, 
°¨t
,

183 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) );

185 –(Ë
Àn
 );

186 
	}
}

188 
	$a¢1_wrôe_boﬁ
–**
p
, *
°¨t
, 
boﬁón
 )

190 
ªt
;

191 
size_t
 
Àn
 = 0;

193 if–*
p
 - 
°¨t
 < 1 )

194 –
POLARSSL_ERR_ASN1_BUF_TOO_SMALL
 );

196 *--(*
p
Ë(
boﬁón
) ? 1 : 0;

197 
Àn
++;

199 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
,Üen ) );

200 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–
p
, 
°¨t
, 
ASN1_BOOLEAN
 ) );

202 –(Ë
Àn
 );

203 
	}
}

205 
	$a¢1_wrôe_öt
–**
p
, *
°¨t
, 
vÆ
 )

207 
ªt
;

208 
size_t
 
Àn
 = 0;

214 if–*
p
 - 
°¨t
 < 1 )

215 –
POLARSSL_ERR_ASN1_BUF_TOO_SMALL
 );

217 
Àn
 += 1;

218 *--(*
p
Ë
vÆ
;

220 if–
vÆ
 > 0 && **
p
 & 0x80 )

222 if–*
p
 - 
°¨t
 < 1 )

223 –
POLARSSL_ERR_ASN1_BUF_TOO_SMALL
 );

225 *--(*
p
) = 0x00;

226 
Àn
 += 1;

229 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
,Üen ) );

230 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–
p
, 
°¨t
, 
ASN1_INTEGER
 ) );

232 –(Ë
Àn
 );

233 
	}
}

235 
	$a¢1_wrôe_¥öèbÀ_°rög
–**
p
, *
°¨t
,

236 c⁄° *
ãxt
, 
size_t
 
ãxt_Àn
 )

238 
ªt
;

239 
size_t
 
Àn
 = 0;

241 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_øw_buf„r
–
p
, 
°¨t
,

242 (c⁄° *Ë
ãxt
, 
ãxt_Àn
 ) );

244 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
,Üen ) );

245 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–
p
, 
°¨t
, 
ASN1_PRINTABLE_STRING
 ) );

247 –(Ë
Àn
 );

248 
	}
}

250 
	$a¢1_wrôe_ü5_°rög
–**
p
, *
°¨t
,

251 c⁄° *
ãxt
, 
size_t
 
ãxt_Àn
 )

253 
ªt
;

254 
size_t
 
Àn
 = 0;

256 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_øw_buf„r
–
p
, 
°¨t
,

257 (c⁄° *Ë
ãxt
, 
ãxt_Àn
 ) );

259 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
,Üen ) );

260 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–
p
, 
°¨t
, 
ASN1_IA5_STRING
 ) );

262 –(Ë
Àn
 );

263 
	}
}

265 
	$a¢1_wrôe_bô°rög
–**
p
, *
°¨t
,

266 c⁄° *
buf
, 
size_t
 
bôs
 )

268 
ªt
;

269 
size_t
 
Àn
 = 0, 
size
;

271 
size
 = ( 
bôs
 / 8 ) + ( ( bits % 8 ) ? 1 : 0 );

275 if–*
p
 - 
°¨t
 < (Ë
size
 + 1 )

276 –
POLARSSL_ERR_ASN1_BUF_TOO_SMALL
 );

278 
Àn
 = 
size
 + 1;

279 (*
p
Ë-
size
;

280 
	`mem˝y
–*
p
, 
buf
, 
size
 );

284 *--(*
p
Ë(Ë(
size
 * 8 - 
bôs
);

286 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
,Üen ) );

287 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–
p
, 
°¨t
, 
ASN1_BIT_STRING
 ) );

289 –(Ë
Àn
 );

290 
	}
}

292 
	$a¢1_wrôe_o˘ë_°rög
–**
p
, *
°¨t
,

293 c⁄° *
buf
, 
size_t
 
size
 )

295 
ªt
;

296 
size_t
 
Àn
 = 0;

298 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_øw_buf„r
–
p
, 
°¨t
, 
buf
, 
size
 ) );

300 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
,Üen ) );

301 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–
p
, 
°¨t
, 
ASN1_OCTET_STRING
 ) );

303 –(Ë
Àn
 );

304 
	}
}

306 
a¢1_«med_d©a
 *
	$a¢1_°‹e_«med_d©a
–
a¢1_«med_d©a
 **
hód
,

307 c⁄° *
oid
, 
size_t
 
oid_Àn
,

308 c⁄° *
vÆ
,

309 
size_t
 
vÆ_Àn
 )

311 
a¢1_«med_d©a
 *
cur
;

313 if––
cur
 = 
	`a¢1_föd_«med_d©a
–*
hód
, 
oid
, 
oid_Àn
 ) ) =
NULL
 )

317 if––
cur
 = 
	`pﬁ¨s¶_mÆloc
–(
a¢1_«med_d©a
ËËË=
NULL
 )

318 –
NULL
 );

320 
	`mem£t
–
cur
, 0, (
a¢1_«med_d©a
) );

322 
cur
->
oid
.
Àn
 = 
oid_Àn
;

323 
cur
->
oid
.
p
 = 
	`pﬁ¨s¶_mÆloc
–
oid_Àn
 );

324 if–
cur
->
oid
.
p
 =
NULL
 )

326 
	`pﬁ¨s¶_‰ì
–
cur
 );

327 –
NULL
 );

330 
cur
->
vÆ
.
Àn
 = 
vÆ_Àn
;

331 
cur
->
vÆ
.
p
 = 
	`pﬁ¨s¶_mÆloc
–
vÆ_Àn
 );

332 if–
cur
->
vÆ
.
p
 =
NULL
 )

334 
	`pﬁ¨s¶_‰ì
–
cur
->
oid
.
p
 );

335 
	`pﬁ¨s¶_‰ì
–
cur
 );

336 –
NULL
 );

339 
	`mem˝y
–
cur
->
oid
.
p
, oid, 
oid_Àn
 );

341 
cur
->
√xt
 = *
hód
;

342 *
hód
 = 
cur
;

344 if–
cur
->
vÆ
.
Àn
 < 
vÆ_Àn
 )

348 
	`pﬁ¨s¶_‰ì
–
cur
->
vÆ
.
p
 );

349 
cur
->
vÆ
.
p
 = 
NULL
;

351 
cur
->
vÆ
.
Àn
 = 
vÆ_Àn
;

352 
cur
->
vÆ
.
p
 = 
	`pﬁ¨s¶_mÆloc
–
vÆ_Àn
 );

353 if–
cur
->
vÆ
.
p
 =
NULL
 )

355 
	`pﬁ¨s¶_‰ì
–
cur
->
oid
.
p
 );

356 
	`pﬁ¨s¶_‰ì
–
cur
 );

357 –
NULL
 );

361 if–
vÆ
 !
NULL
 )

362 
	`mem˝y
–
cur
->
vÆ
.
p
, vÆ, 
vÆ_Àn
 );

364 –
cur
 );

365 
	}
}

	@polarssl/library/base64.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_BASE64_C
)

34 
	~"pﬁ¨s¶/ba£64.h
"

36 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

37 
	~<ba£tsd.h
>

38 
UINT32
 
	tuöt32_t
;

40 
	~<öây≥s.h
>

43 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

44 
	~"pﬁ¨s¶/∂©f‹m.h
"

46 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

49 c⁄° 
	gba£64_íc_m≠
[64] =

60 c⁄° 
	gba£64_dec_m≠
[128] =

80 
	$ba£64_ícode
–*
d°
, 
size_t
 *
dÀn
,

81 c⁄° *
§c
, 
size_t
 
¶í
 )

83 
size_t
 
i
, 
n
;

84 
C1
, 
C2
, 
C3
;

85 *
p
;

87 if–
¶í
 == 0 )

90 
n
 = ( 
¶í
 << 3 ) / 6;

92  ( 
¶í
 << 3 ) - ( 
n
 * 6 ) )

94 2: 
n
 += 3; ;

95 4: 
n
 += 2; ;

99 if–*
dÀn
 < 
n
 + 1 )

101 *
dÀn
 = 
n
 + 1;

102 –
POLARSSL_ERR_BASE64_BUFFER_TOO_SMALL
 );

105 
n
 = ( 
¶í
 / 3 ) * 3;

107  
i
 = 0, 
p
 = 
d°
; i < 
n
; i += 3 )

109 
C1
 = *
§c
++;

110 
C2
 = *
§c
++;

111 
C3
 = *
§c
++;

113 *
p
++ = 
ba£64_íc_m≠
[(
C1
 >> 2) & 0x3F];

114 *
p
++ = 
ba£64_íc_m≠
[(((
C1
 & 3Ë<< 4Ë+ (
C2
 >> 4)) & 0x3F];

115 *
p
++ = 
ba£64_íc_m≠
[(((
C2
 & 15Ë<< 2Ë+ (
C3
 >> 6)) & 0x3F];

116 *
p
++ = 
ba£64_íc_m≠
[
C3
 & 0x3F];

119 if–
i
 < 
¶í
 )

121 
C1
 = *
§c
++;

122 
C2
 = ( ( 
i
 + 1 ) < 
¶í
 ) ? *
§c
++ : 0;

124 *
p
++ = 
ba£64_íc_m≠
[(
C1
 >> 2) & 0x3F];

125 *
p
++ = 
ba£64_íc_m≠
[(((
C1
 & 3Ë<< 4Ë+ (
C2
 >> 4)) & 0x3F];

127 if––
i
 + 1 ) < 
¶í
 )

128 *
p
++ = 
ba£64_íc_m≠
[((
C2
 & 15) << 2) & 0x3F];

129 *
p
++ = '=';

131 *
p
++ = '=';

134 *
dÀn
 = 
p
 - 
d°
;

135 *
p
 = 0;

138 
	}
}

143 
	$ba£64_decode
–*
d°
, 
size_t
 *
dÀn
,

144 c⁄° *
§c
, 
size_t
 
¶í
 )

146 
size_t
 
i
, 
n
;

147 
uöt32_t
 
j
, 
x
;

148 *
p
;

150  
i
 = 
n
 = 
j
 = 0; i < 
¶í
; i++ )

152 if––
¶í
 - 
i
 ) >= 2 &&

153 
§c
[
i
] == '\r' && src[i + 1] == '\n' )

156 if–
§c
[
i
] == '\n' )

159 if–
§c
[
i
] ='=' && ++
j
 > 2 )

160 –
POLARSSL_ERR_BASE64_INVALID_CHARACTER
 );

162 if–
§c
[
i
] > 127 || 
ba£64_dec_m≠
[src[i]] == 127 )

163 –
POLARSSL_ERR_BASE64_INVALID_CHARACTER
 );

165 if–
ba£64_dec_m≠
[
§c
[
i
]] < 64 && 
j
 != 0 )

166 –
POLARSSL_ERR_BASE64_INVALID_CHARACTER
 );

168 
n
++;

171 if–
n
 == 0 )

174 
n
 = ( (Ç * 6 ) + 7 ) >> 3;

175 
n
 -
j
;

177 if–
d°
 =
NULL
 || *
dÀn
 < 
n
 )

179 *
dÀn
 = 
n
;

180 –
POLARSSL_ERR_BASE64_BUFFER_TOO_SMALL
 );

183  
j
 = 3, 
n
 = 
x
 = 0, 
p
 = 
d°
; 
i
 > 0; i--, 
§c
++ )

185 if–*
§c
 == '\r' || *src == '\n' )

188 
j
 -–
ba£64_dec_m≠
[*
§c
] == 64 );

189 
x
 = ( x << 6 ) | ( 
ba£64_dec_m≠
[*
§c
] & 0x3F );

191 if–++
n
 == 4 )

193 
n
 = 0;

194 if–
j
 > 0 ) *
p
++ = ()–
x
 >> 16 );

195 if–
j
 > 1 ) *
p
++ = ()–
x
 >> 8 );

196 if–
j
 > 2 ) *
p
++ = ()–
x
 );

200 *
dÀn
 = 
p
 - 
d°
;

203 
	}
}

205 #i‡
deföed
(
POLARSSL_SELF_TEST
)

207 
	~<°rög.h
>

208 
	~<°dio.h
>

210 c⁄° 
	gba£64_ã°_dec
[64] =

222 c⁄° 
	gba£64_ã°_íc
[] =

229 
	$ba£64_£lf_ã°
–
vîbo£
 )

231 
size_t
 
Àn
;

232 c⁄° *
§c
;

233 
buf„r
[128];

235 if–
vîbo£
 != 0 )

236 
	`pﬁ¨s¶_¥ötf
( " Base64ÉncodingÅest: " );

238 
Àn
 = –
buf„r
 );

239 
§c
 = 
ba£64_ã°_dec
;

241 if–
	`ba£64_ícode
–
buf„r
, &
Àn
, 
§c
, 64 ) != 0 ||

242 
	`memcmp
–
ba£64_ã°_íc
, 
buf„r
, 88 ) != 0 )

244 if–
vîbo£
 != 0 )

245 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

250 if–
vîbo£
 != 0 )

251 
	`pﬁ¨s¶_¥ötf
( "passed\n Base64 decodingÅest: " );

253 
Àn
 = –
buf„r
 );

254 
§c
 = 
ba£64_ã°_íc
;

256 if–
	`ba£64_decode
–
buf„r
, &
Àn
, 
§c
, 88 ) != 0 ||

257 
	`memcmp
–
ba£64_ã°_dec
, 
buf„r
, 64 ) != 0 )

259 if–
vîbo£
 != 0 )

260 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

265 if–
vîbo£
 != 0 )

266 
	`pﬁ¨s¶_¥ötf
( "passed\n\n" );

269 
	}
}

	@polarssl/library/bignum.c

33 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

34 
	~"pﬁ¨s¶/c⁄fig.h
"

36 #ö˛udê
POLARSSL_CONFIG_FILE


39 #i‡
deföed
(
POLARSSL_BIGNUM_C
)

41 
	~"pﬁ¨s¶/bignum.h
"

42 
	~"pﬁ¨s¶/bn_mul.h
"

44 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

45 
	~"pﬁ¨s¶/∂©f‹m.h
"

47 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

48 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

49 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

52 
	~<°dlib.h
>

55 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

56 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

57 
	}
}

59 
	#ciL
 ((
t_uöt
)Ë

	)

60 
	#biL
 (
ciL
 << 3Ë

	)

61 
	#biH
 (
ciL
 << 2Ë

	)

66 
	#BITS_TO_LIMBS
(
i
Ë(((iË+ 
biL
 - 1Ë/ biL)

	)

67 
	#CHARS_TO_LIMBS
(
i
Ë(((iË+ 
ciL
 - 1Ë/ ciL)

	)

72 
	$mpi_öô
–
mpi
 *
X
 )

74 if–
X
 =
NULL
 )

77 
X
->
s
 = 1;

78 
X
->
n
 = 0;

79 
X
->
p
 = 
NULL
;

80 
	}
}

85 
	$mpi_‰ì
–
mpi
 *
X
 )

87 if–
X
 =
NULL
 )

90 if–
X
->
p
 !
NULL
 )

92 
	`pﬁ¨s¶_zîoize
–
X
->
p
, X->
n
 * 
ciL
 );

93 
	`pﬁ¨s¶_‰ì
–
X
->
p
 );

96 
X
->
s
 = 1;

97 
X
->
n
 = 0;

98 
X
->
p
 = 
NULL
;

99 
	}
}

104 
	$mpi_grow
–
mpi
 *
X
, 
size_t
 
nblimbs
 )

106 
t_uöt
 *
p
;

108 if–
nblimbs
 > 
POLARSSL_MPI_MAX_LIMBS
 )

109 –
POLARSSL_ERR_MPI_MALLOC_FAILED
 );

111 if–
X
->
n
 < 
nblimbs
 )

113 if––
p
 = (
t_uöt
 *Ë
	`pﬁ¨s¶_mÆloc
–
nblimbs
 * 
ciL
 ) ) =
NULL
 )

114 –
POLARSSL_ERR_MPI_MALLOC_FAILED
 );

116 
	`mem£t
–
p
, 0, 
nblimbs
 * 
ciL
 );

118 if–
X
->
p
 !
NULL
 )

120 
	`mem˝y
–
p
, 
X
->p, X->
n
 * 
ciL
 );

121 
	`pﬁ¨s¶_zîoize
–
X
->
p
, X->
n
 * 
ciL
 );

122 
	`pﬁ¨s¶_‰ì
–
X
->
p
 );

125 
X
->
n
 = 
nblimbs
;

126 
X
->
p
 =Ö;

130 
	}
}

136 
	$mpi_shrök
–
mpi
 *
X
, 
size_t
 
nblimbs
 )

138 
t_uöt
 *
p
;

139 
size_t
 
i
;

142 if–
X
->
n
 <
nblimbs
 )

143 –
	`mpi_grow
–
X
, 
nblimbs
 ) );

145  
i
 = 
X
->
n
 - 1; i > 0; i-- )

146 if–
X
->
p
[
i
] != 0 )

148 
i
++;

150 if–
i
 < 
nblimbs
 )

151 
i
 = 
nblimbs
;

153 if––
p
 = (
t_uöt
 *Ë
	`pﬁ¨s¶_mÆloc
–
i
 * 
ciL
 ) ) =
NULL
 )

154 –
POLARSSL_ERR_MPI_MALLOC_FAILED
 );

156 
	`mem£t
–
p
, 0, 
i
 * 
ciL
 );

158 if–
X
->
p
 !
NULL
 )

160 
	`mem˝y
–
p
, 
X
->p, 
i
 * 
ciL
 );

161 
	`pﬁ¨s¶_zîoize
–
X
->
p
, X->
n
 * 
ciL
 );

162 
	`pﬁ¨s¶_‰ì
–
X
->
p
 );

165 
X
->
n
 = 
i
;

166 
X
->
p
 =Ö;

169 
	}
}

174 
	$mpi_c›y
–
mpi
 *
X
, c⁄° mpò*
Y
 )

176 
ªt
;

177 
size_t
 
i
;

179 if–
X
 =
Y
 )

182 if–
Y
->
p
 =
NULL
 )

184 
	`mpi_‰ì
–
X
 );

188  
i
 = 
Y
->
n
 - 1; i > 0; i-- )

189 if–
Y
->
p
[
i
] != 0 )

191 
i
++;

193 
X
->
s
 = 
Y
->s;

195 
	`MPI_CHK
–
	`mpi_grow
–
X
, 
i
 ) );

197 
	`mem£t
–
X
->
p
, 0, X->
n
 * 
ciL
 );

198 
	`mem˝y
–
X
->
p
, 
Y
->p, 
i
 * 
ciL
 );

200 
˛ónup
:

202 –
ªt
 );

203 
	}
}

208 
	$mpi_sw≠
–
mpi
 *
X
, mpò*
Y
 )

210 
mpi
 
T
;

212 
	`mem˝y
–&
T
, 
X
, –
mpi
 ) );

213 
	`mem˝y
–
X
, 
Y
, –
mpi
 ) );

214 
	`mem˝y
–
Y
, &
T
, –
mpi
 ) );

215 
	}
}

222 
	$mpi_ß„_c⁄d_assign
–
mpi
 *
X
, c⁄° mpò*
Y
, 
assign
 )

224 
ªt
 = 0;

225 
size_t
 
i
;

228 
assign
 = (ássign != 0 );

230 
	`MPI_CHK
–
	`mpi_grow
–
X
, 
Y
->
n
 ) );

232 
X
->
s
 = X->†* ( 1 - 
assign
 ) + 
Y
->s *ássign;

234  
i
 = 0; i < 
Y
->
n
; i++ )

235 
X
->
p
[
i
] = X->p[i] * ( 1 - 
assign
 ) + 
Y
->p[i] *ássign;

237  ; 
i
 < 
X
->
n
; i++ )

238 
X
->
p
[
i
] *–1 - 
assign
 );

240 
˛ónup
:

241 –
ªt
 );

242 
	}
}

250 
	$mpi_ß„_c⁄d_sw≠
–
mpi
 *
X
, mpò*
Y
, 
sw≠
 )

252 
ªt
, 
s
;

253 
size_t
 
i
;

254 
t_uöt
 
tmp
;

256 if–
X
 =
Y
 )

260 
sw≠
 = ( swap != 0 );

262 
	`MPI_CHK
–
	`mpi_grow
–
X
, 
Y
->
n
 ) );

263 
	`MPI_CHK
–
	`mpi_grow
–
Y
, 
X
->
n
 ) );

265 
s
 = 
X
->s;

266 
X
->
s
 = X->†* ( 1 - 
sw≠
 ) + 
Y
->s * swap;

267 
Y
->
s
 = Y->†* ( 1 - 
sw≠
 ) + s * swap;

270  
i
 = 0; i < 
X
->
n
; i++ )

272 
tmp
 = 
X
->
p
[
i
];

273 
X
->
p
[
i
] = X->p[i] * ( 1 - 
sw≠
 ) + 
Y
->p[i] * swap;

274 
Y
->
p
[
i
] = Y->p[i] * ( 1 - 
sw≠
 ) + 
tmp
 * swap;

277 
˛ónup
:

278 –
ªt
 );

279 
	}
}

284 
	$mpi_l£t
–
mpi
 *
X
, 
t_söt
 
z
 )

286 
ªt
;

288 
	`MPI_CHK
–
	`mpi_grow
–
X
, 1 ) );

289 
	`mem£t
–
X
->
p
, 0, X->
n
 * 
ciL
 );

291 
X
->
p
[0] = ( 
z
 < 0 ) ? -z : z;

292 
X
->
s
 = ( 
z
 < 0 ) ? -1 : 1;

294 
˛ónup
:

296 –
ªt
 );

297 
	}
}

302 
	$mpi_gë_bô
–c⁄° 
mpi
 *
X
, 
size_t
 
pos
 )

304 if–
X
->
n
 * 
biL
 <
pos
 )

307 ––
X
->
p
[
pos
 / 
biL
] >> (Öos % biL ) ) & 0x01 );

308 
	}
}

313 
	$mpi_£t_bô
–
mpi
 *
X
, 
size_t
 
pos
, 
vÆ
 )

315 
ªt
 = 0;

316 
size_t
 
off
 = 
pos
 / 
biL
;

317 
size_t
 
idx
 = 
pos
 % 
biL
;

319 if–
vÆ
 != 0 && val != 1 )

320 –
POLARSSL_ERR_MPI_BAD_INPUT_DATA
 );

322 if–
X
->
n
 * 
biL
 <
pos
 )

324 if–
vÆ
 == 0 )

327 
	`MPI_CHK
–
	`mpi_grow
–
X
, 
off
 + 1 ) );

330 
X
->
p
[
off
] &~–(
t_uöt
Ë0x01 << 
idx
 );

331 
X
->
p
[
off
] |(
t_uöt
Ë
vÆ
 << 
idx
;

333 
˛ónup
:

335 –
ªt
 );

336 
	}
}

341 
size_t
 
	$mpi_lsb
–c⁄° 
mpi
 *
X
 )

343 
size_t
 
i
, 
j
, 
cou¡
 = 0;

345  
i
 = 0; i < 
X
->
n
; i++ )

346  
j
 = 0; j < 
biL
; j++, 
cou¡
++ )

347 if–––
X
->
p
[
i
] >> 
j
 ) & 1 ) != 0 )

348 –
cou¡
 );

351 
	}
}

356 
size_t
 
	$mpi_msb
–c⁄° 
mpi
 *
X
 )

358 
size_t
 
i
, 
j
;

360  
i
 = 
X
->
n
 - 1; i > 0; i-- )

361 if–
X
->
p
[
i
] != 0 )

364  
j
 = 
biL
; j > 0; j-- )

365 if–––
X
->
p
[
i
] >> ( 
j
 - 1 ) ) & 1 ) != 0 )

368 ––
i
 * 
biL
 ) + 
j
 );

369 
	}
}

374 
size_t
 
	$mpi_size
–c⁄° 
mpi
 *
X
 )

376 ––
	`mpi_msb
–
X
 ) + 7 ) >> 3 );

377 
	}
}

382 
	$mpi_gë_digô
–
t_uöt
 *
d
, 
ødix
, 
c
 )

384 *
d
 = 255;

386 if–
c
 >0x30 && c <0x39 ) *
d
 = c - 0x30;

387 if–
c
 >0x41 && c <0x46 ) *
d
 = c - 0x37;

388 if–
c
 >0x61 && c <0x66 ) *
d
 = c - 0x57;

390 if–*
d
 >(
t_uöt
Ë
ødix
 )

391 –
POLARSSL_ERR_MPI_INVALID_CHARACTER
 );

394 
	}
}

399 
	$mpi_ªad_°rög
–
mpi
 *
X
, 
ødix
, c⁄° *
s
 )

401 
ªt
;

402 
size_t
 
i
, 
j
, 
¶í
, 
n
;

403 
t_uöt
 
d
;

404 
mpi
 
T
;

406 if–
ødix
 < 2 ||Ñadix > 16 )

407 –
POLARSSL_ERR_MPI_BAD_INPUT_DATA
 );

409 
	`mpi_öô
–&
T
 );

411 
¶í
 = 
	`°æí
–
s
 );

413 if–
ødix
 == 16 )

415 
n
 = 
	`BITS_TO_LIMBS
–
¶í
 << 2 );

417 
	`MPI_CHK
–
	`mpi_grow
–
X
, 
n
 ) );

418 
	`MPI_CHK
–
	`mpi_l£t
–
X
, 0 ) );

420  
i
 = 
¶í
, 
j
 = 0; i > 0; i--, j++ )

422 if–
i
 =1 && 
s
[i - 1] == '-' )

424 
X
->
s
 = -1;

428 
	`MPI_CHK
–
	`mpi_gë_digô
–&
d
, 
ødix
, 
s
[
i
 - 1] ) );

429 
X
->
p
[
j
 / ( 2 * 
ciL
 )] |
d
 << ( ( j % ( 2 * ciL ) ) << 2 );

434 
	`MPI_CHK
–
	`mpi_l£t
–
X
, 0 ) );

436  
i
 = 0; i < 
¶í
; i++ )

438 if–
i
 =0 && 
s
[i] == '-' )

440 
X
->
s
 = -1;

444 
	`MPI_CHK
–
	`mpi_gë_digô
–&
d
, 
ødix
, 
s
[
i
] ) );

445 
	`MPI_CHK
–
	`mpi_mul_öt
–&
T
, 
X
, 
ødix
 ) );

447 if–
X
->
s
 == 1 )

449 
	`MPI_CHK
–
	`mpi_add_öt
–
X
, &
T
, 
d
 ) );

453 
	`MPI_CHK
–
	`mpi_sub_öt
–
X
, &
T
, 
d
 ) );

458 
˛ónup
:

460 
	`mpi_‰ì
–&
T
 );

462 –
ªt
 );

463 
	}
}

468 
	$mpi_wrôe_hÕ
–
mpi
 *
X
, 
ødix
, **
p
 )

470 
ªt
;

471 
t_uöt
 
r
;

473 if–
ødix
 < 2 ||Ñadix > 16 )

474 –
POLARSSL_ERR_MPI_BAD_INPUT_DATA
 );

476 
	`MPI_CHK
–
	`mpi_mod_öt
–&
r
, 
X
, 
ødix
 ) );

477 
	`MPI_CHK
–
	`mpi_div_öt
–
X
, 
NULL
, X, 
ødix
 ) );

479 if–
	`mpi_cmp_öt
–
X
, 0 ) != 0 )

480 
	`MPI_CHK
–
	`mpi_wrôe_hÕ
–
X
, 
ødix
, 
p
 ) );

482 if–
r
 < 10 )

483 *(*
p
)++ = ()–
r
 + 0x30 );

485 *(*
p
)++ = ()–
r
 + 0x37 );

487 
˛ónup
:

489 –
ªt
 );

490 
	}
}

495 
	$mpi_wrôe_°rög
–c⁄° 
mpi
 *
X
, 
ødix
, *
s
, 
size_t
 *
¶í
 )

497 
ªt
 = 0;

498 
size_t
 
n
;

499 *
p
;

500 
mpi
 
T
;

502 if–
ødix
 < 2 ||Ñadix > 16 )

503 –
POLARSSL_ERR_MPI_BAD_INPUT_DATA
 );

505 
n
 = 
	`mpi_msb
–
X
 );

506 if–
ødix
 >4 ) 
n
 >>= 1;

507 if–
ødix
 >16 ) 
n
 >>= 1;

508 
n
 += 3;

510 if–*
¶í
 < 
n
 )

512 *
¶í
 = 
n
;

513 –
POLARSSL_ERR_MPI_BUFFER_TOO_SMALL
 );

516 
p
 = 
s
;

517 
	`mpi_öô
–&
T
 );

519 if–
X
->
s
 == -1 )

520 *
p
++ = '-';

522 if–
ødix
 == 16 )

524 
c
;

525 
size_t
 
i
, 
j
, 
k
;

527  
i
 = 
X
->
n
, 
k
 = 0; i > 0; i-- )

529  
j
 = 
ciL
; j > 0; j-- )

531 
c
 = ( 
X
->
p
[
i
 - 1] >> ( ( 
j
 - 1 ) << 3) ) & 0xFF;

533 if–
c
 =0 && 
k
 =0 && ( 
i
 + 
j
 ) != 2 )

536 *(
p
++Ë"0123456789ABCDEF" [
c
 / 16];

537 *(
p
++Ë"0123456789ABCDEF" [
c
 % 16];

538 
k
 = 1;

544 
	`MPI_CHK
–
	`mpi_c›y
–&
T
, 
X
 ) );

546 if–
T
.
s
 == -1 )

547 
T
.
s
 = 1;

549 
	`MPI_CHK
–
	`mpi_wrôe_hÕ
–&
T
, 
ødix
, &
p
 ) );

552 *
p
++ = '\0';

553 *
¶í
 = 
p
 - 
s
;

555 
˛ónup
:

557 
	`mpi_‰ì
–&
T
 );

559 –
ªt
 );

560 
	}
}

562 #i‡
deföed
(
POLARSSL_FS_IO
)

566 
	$mpi_ªad_fûe
–
mpi
 *
X
, 
ødix
, 
FILE
 *
fö
 )

568 
t_uöt
 
d
;

569 
size_t
 
¶í
;

570 *
p
;

575 
s
[ 
POLARSSL_MPI_RW_BUFFER_SIZE
 ];

577 
	`mem£t
–
s
, 0, ( s ) );

578 if–
	`fgës
–
s
, –†Ë- 1, 
fö
 ) =
NULL
 )

579 –
POLARSSL_ERR_MPI_FILE_IO_ERROR
 );

581 
¶í
 = 
	`°æí
–
s
 );

582 if–
¶í
 =–
s
 ) - 2 )

583 –
POLARSSL_ERR_MPI_BUFFER_TOO_SMALL
 );

585 if–
s
[
¶í
 - 1] == '\n' ) { slen--; s[slen] = '\0'; }

586 if–
s
[
¶í
 - 1] == '\r' ) { slen--; s[slen] = '\0'; }

588 
p
 = 
s
 + 
¶í
;

589  --
p
 >
s
 )

590 if–
	`mpi_gë_digô
–&
d
, 
ødix
, *
p
 ) != 0 )

593 –
	`mpi_ªad_°rög
–
X
, 
ødix
, 
p
 + 1 ) );

594 
	}
}

599 
	$mpi_wrôe_fûe
–c⁄° *
p
, c⁄° 
mpi
 *
X
, 
ødix
, 
FILE
 *
fout
 )

601 
ªt
;

602 
size_t
 
n
, 
¶í
, 
∂í
;

607 
s
[ 
POLARSSL_MPI_RW_BUFFER_SIZE
 ];

609 
n
 = –
s
 );

610 
	`mem£t
–
s
, 0, 
n
 );

611 
n
 -= 2;

613 
	`MPI_CHK
–
	`mpi_wrôe_°rög
–
X
, 
ødix
, 
s
, (
size_t
 *Ë&
n
 ) );

615 if–
p
 =
NULL
 )Ö = "";

617 
∂í
 = 
	`°æí
–
p
 );

618 
¶í
 = 
	`°æí
–
s
 );

619 
s
[
¶í
++] = '\r';

620 
s
[
¶í
++] = '\n';

622 if–
fout
 !
NULL
 )

624 if–
	`fwrôe
–
p
, 1, 
∂í
, 
fout
 ) !=Ölen ||

625 
	`fwrôe
–
s
, 1, 
¶í
, 
fout
 ) != slen )

626 –
POLARSSL_ERR_MPI_FILE_IO_ERROR
 );

629 
	`pﬁ¨s¶_¥ötf
–"%s%s", 
p
, 
s
 );

631 
˛ónup
:

633 –
ªt
 );

634 
	}
}

640 
	$mpi_ªad_bö¨y
–
mpi
 *
X
, c⁄° *
buf
, 
size_t
 
buÊí
 )

642 
ªt
;

643 
size_t
 
i
, 
j
, 
n
;

645  
n
 = 0;Ç < 
buÊí
;Ç++ )

646 if–
buf
[
n
] != 0 )

649 
	`MPI_CHK
–
	`mpi_grow
–
X
, 
	`CHARS_TO_LIMBS
–
buÊí
 - 
n
 ) ) );

650 
	`MPI_CHK
–
	`mpi_l£t
–
X
, 0 ) );

652  
i
 = 
buÊí
, 
j
 = 0; i > 
n
; i--, j++ )

653 
X
->
p
[
j
 / 
ciL
] |((
t_uöt
Ë
buf
[
i
 - 1]) << ((j % ciL) << 3);

655 
˛ónup
:

657 –
ªt
 );

658 
	}
}

663 
	$mpi_wrôe_bö¨y
–c⁄° 
mpi
 *
X
, *
buf
, 
size_t
 
buÊí
 )

665 
size_t
 
i
, 
j
, 
n
;

667 
n
 = 
	`mpi_size
–
X
 );

669 if–
buÊí
 < 
n
 )

670 –
POLARSSL_ERR_MPI_BUFFER_TOO_SMALL
 );

672 
	`mem£t
–
buf
, 0, 
buÊí
 );

674  
i
 = 
buÊí
 - 1, 
j
 = 0; 
n
 > 0; i--, j++,Ç-- )

675 
buf
[
i
] = ()–
X
->
p
[
j
 / 
ciL
] >> ((j % ciL) << 3) );

678 
	}
}

683 
	$mpi_shi·_l
–
mpi
 *
X
, 
size_t
 
cou¡
 )

685 
ªt
;

686 
size_t
 
i
, 
v0
, 
t1
;

687 
t_uöt
 
r0
 = 0, 
r1
;

689 
v0
 = 
cou¡
 / (
biL
 );

690 
t1
 = 
cou¡
 & (
biL
 - 1);

692 
i
 = 
	`mpi_msb
–
X
 ) + 
cou¡
;

694 if–
X
->
n
 * 
biL
 < 
i
 )

695 
	`MPI_CHK
–
	`mpi_grow
–
X
, 
	`BITS_TO_LIMBS
–
i
 ) ) );

697 
ªt
 = 0;

702 if–
v0
 > 0 )

704  
i
 = 
X
->
n
; i > 
v0
; i-- )

705 
X
->
p
[
i
 - 1] = X->p[ò- 
v0
 - 1];

707  ; 
i
 > 0; i-- )

708 
X
->
p
[
i
 - 1] = 0;

714 if–
t1
 > 0 )

716  
i
 = 
v0
; i < 
X
->
n
; i++ )

718 
r1
 = 
X
->
p
[
i
] >> (
biL
 - 
t1
);

719 
X
->
p
[
i
] <<
t1
;

720 
X
->
p
[
i
] |
r0
;

721 
r0
 = 
r1
;

725 
˛ónup
:

727 –
ªt
 );

728 
	}
}

733 
	$mpi_shi·_r
–
mpi
 *
X
, 
size_t
 
cou¡
 )

735 
size_t
 
i
, 
v0
, 
v1
;

736 
t_uöt
 
r0
 = 0, 
r1
;

738 
v0
 = 
cou¡
 / 
biL
;

739 
v1
 = 
cou¡
 & (
biL
 - 1);

741 if–
v0
 > 
X
->
n
 || ( v0 =X->¿&& 
v1
 > 0 ) )

742  
	`mpi_l£t
–
X
, 0 );

747 if–
v0
 > 0 )

749  
i
 = 0; i < 
X
->
n
 - 
v0
; i++ )

750 
X
->
p
[
i
] = X->p[ò+ 
v0
];

752  ; 
i
 < 
X
->
n
; i++ )

753 
X
->
p
[
i
] = 0;

759 if–
v1
 > 0 )

761  
i
 = 
X
->
n
; i > 0; i-- )

763 
r1
 = 
X
->
p
[
i
 - 1] << (
biL
 - 
v1
);

764 
X
->
p
[
i
 - 1] >>
v1
;

765 
X
->
p
[
i
 - 1] |
r0
;

766 
r0
 = 
r1
;

771 
	}
}

776 
	$mpi_cmp_abs
–c⁄° 
mpi
 *
X
, c⁄° mpò*
Y
 )

778 
size_t
 
i
, 
j
;

780  
i
 = 
X
->
n
; i > 0; i-- )

781 if–
X
->
p
[
i
 - 1] != 0 )

784  
j
 = 
Y
->
n
; j > 0; j-- )

785 if–
Y
->
p
[
j
 - 1] != 0 )

788 if–
i
 =0 && 
j
 == 0 )

791 if–
i
 > 
j
 ) ( 1 );

792 if–
j
 > 
i
 ) ( -1 );

794  ; 
i
 > 0; i-- )

796 if–
X
->
p
[
i
 - 1] > 
Y
->p[i - 1] ) ( 1 );

797 if–
X
->
p
[
i
 - 1] < 
Y
->p[i - 1] ) ( -1 );

801 
	}
}

806 
	$mpi_cmp_mpi
–c⁄° 
mpi
 *
X
, c⁄° mpò*
Y
 )

808 
size_t
 
i
, 
j
;

810  
i
 = 
X
->
n
; i > 0; i-- )

811 if–
X
->
p
[
i
 - 1] != 0 )

814  
j
 = 
Y
->
n
; j > 0; j-- )

815 if–
Y
->
p
[
j
 - 1] != 0 )

818 if–
i
 =0 && 
j
 == 0 )

821 if–
i
 > 
j
 ) –
X
->
s
 );

822 if–
j
 > 
i
 ) –-
Y
->
s
 );

824 if–
X
->
s
 > 0 && 
Y
->s < 0 ) ( 1 );

825 if–
Y
->
s
 > 0 && 
X
->s < 0 ) ( -1 );

827  ; 
i
 > 0; i-- )

829 if–
X
->
p
[
i
 - 1] > 
Y
->p[ò- 1] ) –X->
s
 );

830 if–
X
->
p
[
i
 - 1] < 
Y
->p[ò- 1] ) –-X->
s
 );

834 
	}
}

839 
	$mpi_cmp_öt
–c⁄° 
mpi
 *
X
, 
t_söt
 
z
 )

841 
mpi
 
Y
;

842 
t_uöt
 
p
[1];

844 *
p
 = ( 
z
 < 0 ) ? -z : z;

845 
Y
.
s
 = ( 
z
 < 0 ) ? -1 : 1;

846 
Y
.
n
 = 1;

847 
Y
.
p
 =Ö;

849 –
	`mpi_cmp_mpi
–
X
, &
Y
 ) );

850 
	}
}

855 
	$mpi_add_abs
–
mpi
 *
X
, c⁄° mpò*
A
, c⁄° mpò*
B
 )

857 
ªt
;

858 
size_t
 
i
, 
j
;

859 
t_uöt
 *
o
, *
p
, 
c
;

861 if–
X
 =
B
 )

863 c⁄° 
mpi
 *
T
 = 
A
; A = 
X
; 
B
 = T;

866 if–
X
 !
A
 )

867 
	`MPI_CHK
–
	`mpi_c›y
–
X
, 
A
 ) );

872 
X
->
s
 = 1;

874  
j
 = 
B
->
n
; j > 0; j-- )

875 if–
B
->
p
[
j
 - 1] != 0 )

878 
	`MPI_CHK
–
	`mpi_grow
–
X
, 
j
 ) );

880 
o
 = 
B
->
p
;Ö = 
X
->p; 
c
 = 0;

882  
i
 = 0; i < 
j
; i++, 
o
++, 
p
++ )

884 *
p
 +
c
; c = ( *p < c );

885 *
p
 +*
o
; 
c
 += ( *p < *o );

888  
c
 != 0 )

890 if–
i
 >
X
->
n
 )

892 
	`MPI_CHK
–
	`mpi_grow
–
X
, 
i
 + 1 ) );

893 
p
 = 
X
->∞+ 
i
;

896 *
p
 +
c
; c = ( *∞< c ); 
i
++;Ö++;

899 
˛ónup
:

901 –
ªt
 );

902 
	}
}

907 
	$mpi_sub_hÕ
–
size_t
 
n
, 
t_uöt
 *
s
,Å_uöà*
d
 )

909 
size_t
 
i
;

910 
t_uöt
 
c
, 
z
;

912  
i
 = 
c
 = 0; i < 
n
; i++, 
s
++, 
d
++ )

914 
z
 = ( *
d
 < 
c
 ); *d -= c;

915 
c
 = ( *
d
 < *
s
 ) + 
z
; *d -= *s;

918  
c
 != 0 )

920 
z
 = ( *
d
 < 
c
 ); *d -= c;

921 
c
 = 
z
; 
i
++; 
d
++;

923 
	}
}

928 
	$mpi_sub_abs
–
mpi
 *
X
, c⁄° mpò*
A
, c⁄° mpò*
B
 )

930 
mpi
 
TB
;

931 
ªt
;

932 
size_t
 
n
;

934 if–
	`mpi_cmp_abs
–
A
, 
B
 ) < 0 )

935 –
POLARSSL_ERR_MPI_NEGATIVE_VALUE
 );

937 
	`mpi_öô
–&
TB
 );

939 if–
X
 =
B
 )

941 
	`MPI_CHK
–
	`mpi_c›y
–&
TB
, 
B
 ) );

942 
B
 = &
TB
;

945 if–
X
 !
A
 )

946 
	`MPI_CHK
–
	`mpi_c›y
–
X
, 
A
 ) );

951 
X
->
s
 = 1;

953 
ªt
 = 0;

955  
n
 = 
B
->n;Ç > 0;Ç-- )

956 if–
B
->
p
[
n
 - 1] != 0 )

959 
	`mpi_sub_hÕ
–
n
, 
B
->
p
, 
X
->p );

961 
˛ónup
:

963 
	`mpi_‰ì
–&
TB
 );

965 –
ªt
 );

966 
	}
}

971 
	$mpi_add_mpi
–
mpi
 *
X
, c⁄° mpò*
A
, c⁄° mpò*
B
 )

973 
ªt
, 
s
 = 
A
->s;

975 if–
A
->
s
 * 
B
->s < 0 )

977 if–
	`mpi_cmp_abs
–
A
, 
B
 ) >= 0 )

979 
	`MPI_CHK
–
	`mpi_sub_abs
–
X
, 
A
, 
B
 ) );

980 
X
->
s
 = s;

984 
	`MPI_CHK
–
	`mpi_sub_abs
–
X
, 
B
, 
A
 ) );

985 
X
->
s
 = -s;

990 
	`MPI_CHK
–
	`mpi_add_abs
–
X
, 
A
, 
B
 ) );

991 
X
->
s
 = s;

994 
˛ónup
:

996 –
ªt
 );

997 
	}
}

1002 
	$mpi_sub_mpi
–
mpi
 *
X
, c⁄° mpò*
A
, c⁄° mpò*
B
 )

1004 
ªt
, 
s
 = 
A
->s;

1006 if–
A
->
s
 * 
B
->s > 0 )

1008 if–
	`mpi_cmp_abs
–
A
, 
B
 ) >= 0 )

1010 
	`MPI_CHK
–
	`mpi_sub_abs
–
X
, 
A
, 
B
 ) );

1011 
X
->
s
 = s;

1015 
	`MPI_CHK
–
	`mpi_sub_abs
–
X
, 
B
, 
A
 ) );

1016 
X
->
s
 = -s;

1021 
	`MPI_CHK
–
	`mpi_add_abs
–
X
, 
A
, 
B
 ) );

1022 
X
->
s
 = s;

1025 
˛ónup
:

1027 –
ªt
 );

1028 
	}
}

1033 
	$mpi_add_öt
–
mpi
 *
X
, c⁄° mpò*
A
, 
t_söt
 
b
 )

1035 
mpi
 
_B
;

1036 
t_uöt
 
p
[1];

1038 
p
[0] = ( 
b
 < 0 ) ? -b : b;

1039 
_B
.
s
 = ( 
b
 < 0 ) ? -1 : 1;

1040 
_B
.
n
 = 1;

1041 
_B
.
p
 =Ö;

1043 –
	`mpi_add_mpi
–
X
, 
A
, &
_B
 ) );

1044 
	}
}

1049 
	$mpi_sub_öt
–
mpi
 *
X
, c⁄° mpò*
A
, 
t_söt
 
b
 )

1051 
mpi
 
_B
;

1052 
t_uöt
 
p
[1];

1054 
p
[0] = ( 
b
 < 0 ) ? -b : b;

1055 
_B
.
s
 = ( 
b
 < 0 ) ? -1 : 1;

1056 
_B
.
n
 = 1;

1057 
_B
.
p
 =Ö;

1059 –
	`mpi_sub_mpi
–
X
, 
A
, &
_B
 ) );

1060 
	}
}

1066 #i‡
deföed
(
__APPLE__
Ë&& deföed(
__¨m__
)

1071 
__©åibuã__
 ((
noölöe
))

1073 
	$mpi_mul_hÕ
–
size_t
 
i
, 
t_uöt
 *
s
,Å_uöà*
d
,Å_uöà
b
 )

1075 
t_uöt
 
c
 = 0, 
t
 = 0;

1077 #i‡
	`deföed
(
MULADDC_HUIT
)

1078  ; 
i
 >= 8; i -= 8 )

1080 
MULADDC_INIT


1081 
MULADDC_HUIT


1082 
MULADDC_STOP


1085  ; 
i
 > 0; i-- )

1087 
MULADDC_INIT


1088 
MULADDC_CORE


1089 
MULADDC_STOP


1092  ; 
i
 >= 16; i -= 16 )

1094 
MULADDC_INIT


1095 
MULADDC_CORE
 MULADDC_CORE

1096 
MULADDC_CORE
 MULADDC_CORE

1097 
MULADDC_CORE
 MULADDC_CORE

1098 
MULADDC_CORE
 MULADDC_CORE

1100 
MULADDC_CORE
 MULADDC_CORE

1101 
MULADDC_CORE
 MULADDC_CORE

1102 
MULADDC_CORE
 MULADDC_CORE

1103 
MULADDC_CORE
 MULADDC_CORE

1104 
MULADDC_STOP


1107  ; 
i
 >= 8; i -= 8 )

1109 
MULADDC_INIT


1110 
MULADDC_CORE
 MULADDC_CORE

1111 
MULADDC_CORE
 MULADDC_CORE

1113 
MULADDC_CORE
 MULADDC_CORE

1114 
MULADDC_CORE
 MULADDC_CORE

1115 
MULADDC_STOP


1118  ; 
i
 > 0; i-- )

1120 
MULADDC_INIT


1121 
MULADDC_CORE


1122 
MULADDC_STOP


1126 
t
++;

1129 *
d
 +
c
; c = ( *d < c ); d++;

1131  
c
 != 0 );

1132 
	}
}

1137 
	$mpi_mul_mpi
–
mpi
 *
X
, c⁄° mpò*
A
, c⁄° mpò*
B
 )

1139 
ªt
;

1140 
size_t
 
i
, 
j
;

1141 
mpi
 
TA
, 
TB
;

1143 
	`mpi_öô
–&
TA
 ); mpi_öô–&
TB
 );

1145 if–
X
 =
A
 ) { 
	`MPI_CHK
–
	`mpi_c›y
–&
TA
, A ) ); A = &TA; }

1146 if–
X
 =
B
 ) { 
	`MPI_CHK
–
	`mpi_c›y
–&
TB
, B ) ); B = &TB; }

1148  
i
 = 
A
->
n
; i > 0; i-- )

1149 if–
A
->
p
[
i
 - 1] != 0 )

1152  
j
 = 
B
->
n
; j > 0; j-- )

1153 if–
B
->
p
[
j
 - 1] != 0 )

1156 
	`MPI_CHK
–
	`mpi_grow
–
X
, 
i
 + 
j
 ) );

1157 
	`MPI_CHK
–
	`mpi_l£t
–
X
, 0 ) );

1159  
i
++; 
j
 > 0; j-- )

1160 
	`mpi_mul_hÕ
–
i
 - 1, 
A
->
p
, 
X
->∞+ 
j
 - 1, 
B
->p[j - 1] );

1162 
X
->
s
 = 
A
->†* 
B
->s;

1164 
˛ónup
:

1166 
	`mpi_‰ì
–&
TB
 ); mpi_‰ì–&
TA
 );

1168 –
ªt
 );

1169 
	}
}

1174 
	$mpi_mul_öt
–
mpi
 *
X
, c⁄° mpò*
A
, 
t_söt
 
b
 )

1176 
mpi
 
_B
;

1177 
t_uöt
 
p
[1];

1179 
_B
.
s
 = 1;

1180 
_B
.
n
 = 1;

1181 
_B
.
p
 =Ö;

1182 
p
[0] = 
b
;

1184 –
	`mpi_mul_mpi
–
X
, 
A
, &
_B
 ) );

1185 
	}
}

1190 
	$mpi_div_mpi
–
mpi
 *
Q
, mpò*
R
, c⁄° mpò*
A
, c⁄° mpò*
B
 )

1192 
ªt
;

1193 
size_t
 
i
, 
n
, 
t
, 
k
;

1194 
mpi
 
X
, 
Y
, 
Z
, 
T1
, 
T2
;

1196 if–
	`mpi_cmp_öt
–
B
, 0 ) == 0 )

1197 –
POLARSSL_ERR_MPI_DIVISION_BY_ZERO
 );

1199 
	`mpi_öô
–&
X
 ); mpi_öô–&
Y
 ); mpi_öô–&
Z
 );

1200 
	`mpi_öô
–&
T1
 ); mpi_öô–&
T2
 );

1202 if–
	`mpi_cmp_abs
–
A
, 
B
 ) < 0 )

1204 if–
Q
 !
NULL
 ) 
	`MPI_CHK
–
	`mpi_l£t
( Q, 0 ) );

1205 if–
R
 !
NULL
 ) 
	`MPI_CHK
–
	`mpi_c›y
–R, 
A
 ) );

1209 
	`MPI_CHK
–
	`mpi_c›y
–&
X
, 
A
 ) );

1210 
	`MPI_CHK
–
	`mpi_c›y
–&
Y
, 
B
 ) );

1211 
X
.
s
 = 
Y
.s = 1;

1213 
	`MPI_CHK
–
	`mpi_grow
–&
Z
, 
A
->
n
 + 2 ) );

1214 
	`MPI_CHK
–
	`mpi_l£t
–&
Z
, 0 ) );

1215 
	`MPI_CHK
–
	`mpi_grow
–&
T1
, 2 ) );

1216 
	`MPI_CHK
–
	`mpi_grow
–&
T2
, 3 ) );

1218 
k
 = 
	`mpi_msb
–&
Y
 ) % 
biL
;

1219 if–
k
 < 
biL
 - 1 )

1221 
k
 = 
biL
 - 1 - k;

1222 
	`MPI_CHK
–
	`mpi_shi·_l
–&
X
, 
k
 ) );

1223 
	`MPI_CHK
–
	`mpi_shi·_l
–&
Y
, 
k
 ) );

1225 
k
 = 0;

1227 
n
 = 
X
.n - 1;

1228 
t
 = 
Y
.
n
 - 1;

1229 
	`MPI_CHK
–
	`mpi_shi·_l
–&
Y
, 
biL
 * ( 
n
 - 
t
 ) ) );

1231  
	`mpi_cmp_mpi
–&
X
, &
Y
 ) >= 0 )

1233 
Z
.
p
[
n
 - 
t
]++;

1234 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
X
, &X, &
Y
 ) );

1236 
	`MPI_CHK
–
	`mpi_shi·_r
–&
Y
, 
biL
 * ( 
n
 - 
t
 ) ) );

1238  
i
 = 
n
; i > 
t
 ; i-- )

1240 if–
X
.
p
[
i
] >
Y
.p[
t
] )

1241 
Z
.
p
[
i
 - 
t
 - 1] = ~0;

1251 #i‡
	`deföed
(
POLARSSL_HAVE_UDBL
) && \

1252 ! ( 
	`deföed
(
__x86_64__
Ë&& deföed(
__APPLE__
) && \

1253 
	`deföed
(
__˛™g_maj‹__
) && __clang_major__ == 5 && \

1254 
	`deföed
(
__˛™g_mö‹__
) && __clang_minor__ == 0 )

1255 
t_udbl
 
r
;

1257 
r
 = (
t_udbl
Ë
X
.
p
[
i
] << 
biL
;

1258 
r
 |(
t_udbl
Ë
X
.
p
[
i
 - 1];

1259 
r
 /
Y
.
p
[
t
];

1260 if–
r
 > ( (
t_udbl
Ë1 << 
biL
 ) - 1 )

1261 
r
 = ( (
t_udbl
Ë1 << 
biL
 ) - 1;

1263 
Z
.
p
[
i
 - 
t
 - 1] = (
t_uöt
Ë
r
;

1268 
t_uöt
 
q0
, 
q1
, 
r0
, 
r1
;

1269 
t_uöt
 
d0
, 
d1
, 
d
, 
m
;

1271 
d
 = 
Y
.
p
[
t
];

1272 
d0
 = ( 
d
 << 
biH
 ) >> biH;

1273 
d1
 = ( 
d
 >> 
biH
 );

1275 
q1
 = 
X
.
p
[
i
] / 
d1
;

1276 
r1
 = 
X
.
p
[
i
] - 
d1
 * 
q1
;

1277 
r1
 <<
biH
;

1278 
r1
 |–
X
.
p
[
i
 - 1] >> 
biH
 );

1280 
m
 = 
q1
 * 
d0
;

1281 if–
r1
 < 
m
 )

1283 
q1
--, 
r1
 +
d
;

1284  
r1
 >
d
 &&Ñ1 < 
m
 )

1285 
q1
--, 
r1
 +
d
;

1287 
r1
 -
m
;

1289 
q0
 = 
r1
 / 
d1
;

1290 
r0
 = 
r1
 - 
d1
 * 
q0
;

1291 
r0
 <<
biH
;

1292 
r0
 |–
X
.
p
[
i
 - 1] << 
biH
 ) >> biH;

1294 
m
 = 
q0
 * 
d0
;

1295 if–
r0
 < 
m
 )

1297 
q0
--, 
r0
 +
d
;

1298  
r0
 >
d
 &&Ñ0 < 
m
 )

1299 
q0
--, 
r0
 +
d
;

1301 
r0
 -
m
;

1303 
Z
.
p
[
i
 - 
t
 - 1] = ( 
q1
 << 
biH
 ) | 
q0
;

1307 
Z
.
p
[
i
 - 
t
 - 1]++;

1310 
Z
.
p
[
i
 - 
t
 - 1]--;

1312 
	`MPI_CHK
–
	`mpi_l£t
–&
T1
, 0 ) );

1313 
T1
.
p
[0] = ( 
t
 < 1 ) ? 0 : 
Y
.p[t - 1];

1314 
T1
.
p
[1] = 
Y
.p[
t
];

1315 
	`MPI_CHK
–
	`mpi_mul_öt
–&
T1
, &T1, 
Z
.
p
[
i
 - 
t
 - 1] ) );

1317 
	`MPI_CHK
–
	`mpi_l£t
–&
T2
, 0 ) );

1318 
T2
.
p
[0] = ( 
i
 < 2 ) ? 0 : 
X
.p[i - 2];

1319 
T2
.
p
[1] = ( 
i
 < 1 ) ? 0 : 
X
.p[i - 1];

1320 
T2
.
p
[2] = 
X
.p[
i
];

1322  
	`mpi_cmp_mpi
–&
T1
, &
T2
 ) > 0 );

1324 
	`MPI_CHK
–
	`mpi_mul_öt
–&
T1
, &
Y
, 
Z
.
p
[
i
 - 
t
 - 1] ) );

1325 
	`MPI_CHK
–
	`mpi_shi·_l
–&
T1
, 
biL
 * ( 
i
 - 
t
 - 1 ) ) );

1326 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
X
, &X, &
T1
 ) );

1328 if–
	`mpi_cmp_öt
–&
X
, 0 ) < 0 )

1330 
	`MPI_CHK
–
	`mpi_c›y
–&
T1
, &
Y
 ) );

1331 
	`MPI_CHK
–
	`mpi_shi·_l
–&
T1
, 
biL
 * ( 
i
 - 
t
 - 1 ) ) );

1332 
	`MPI_CHK
–
	`mpi_add_mpi
–&
X
, &X, &
T1
 ) );

1333 
Z
.
p
[
i
 - 
t
 - 1]--;

1337 if–
Q
 !
NULL
 )

1339 
	`MPI_CHK
–
	`mpi_c›y
–
Q
, &
Z
 ) );

1340 
Q
->
s
 = 
A
->†* 
B
->s;

1343 if–
R
 !
NULL
 )

1345 
	`MPI_CHK
–
	`mpi_shi·_r
–&
X
, 
k
 ) );

1346 
X
.
s
 = 
A
->s;

1347 
	`MPI_CHK
–
	`mpi_c›y
–
R
, &
X
 ) );

1349 if–
	`mpi_cmp_öt
–
R
, 0 ) == 0 )

1350 
R
->
s
 = 1;

1353 
˛ónup
:

1355 
	`mpi_‰ì
–&
X
 ); mpi_‰ì–&
Y
 ); mpi_‰ì–&
Z
 );

1356 
	`mpi_‰ì
–&
T1
 ); mpi_‰ì–&
T2
 );

1358 –
ªt
 );

1359 
	}
}

1364 
	$mpi_div_öt
–
mpi
 *
Q
, mpò*
R
, c⁄° mpò*
A
, 
t_söt
 
b
 )

1366 
mpi
 
_B
;

1367 
t_uöt
 
p
[1];

1369 
p
[0] = ( 
b
 < 0 ) ? -b : b;

1370 
_B
.
s
 = ( 
b
 < 0 ) ? -1 : 1;

1371 
_B
.
n
 = 1;

1372 
_B
.
p
 =Ö;

1374 –
	`mpi_div_mpi
–
Q
, 
R
, 
A
, &
_B
 ) );

1375 
	}
}

1380 
	$mpi_mod_mpi
–
mpi
 *
R
, c⁄° mpò*
A
, c⁄° mpò*
B
 )

1382 
ªt
;

1384 if–
	`mpi_cmp_öt
–
B
, 0 ) < 0 )

1385 –
POLARSSL_ERR_MPI_NEGATIVE_VALUE
 );

1387 
	`MPI_CHK
–
	`mpi_div_mpi
–
NULL
, 
R
, 
A
, 
B
 ) );

1389  
	`mpi_cmp_öt
–
R
, 0 ) < 0 )

1390 
	`MPI_CHK
–
	`mpi_add_mpi
–
R
, R, 
B
 ) );

1392  
	`mpi_cmp_mpi
–
R
, 
B
 ) >= 0 )

1393 
	`MPI_CHK
–
	`mpi_sub_mpi
–
R
, R, 
B
 ) );

1395 
˛ónup
:

1397 –
ªt
 );

1398 
	}
}

1403 
	$mpi_mod_öt
–
t_uöt
 *
r
, c⁄° 
mpi
 *
A
, 
t_söt
 
b
 )

1405 
size_t
 
i
;

1406 
t_uöt
 
x
, 
y
, 
z
;

1408 if–
b
 == 0 )

1409 –
POLARSSL_ERR_MPI_DIVISION_BY_ZERO
 );

1411 if–
b
 < 0 )

1412 –
POLARSSL_ERR_MPI_NEGATIVE_VALUE
 );

1417 if–
b
 == 1 )

1419 *
r
 = 0;

1423 if–
b
 == 2 )

1425 *
r
 = 
A
->
p
[0] & 1;

1432  
i
 = 
A
->
n
, 
y
 = 0; i > 0; i-- )

1434 
x
 = 
A
->
p
[
i
 - 1];

1435 
y
 = ( y << 
biH
 ) | ( 
x
 >> biH );

1436 
z
 = 
y
 / 
b
;

1437 
y
 -
z
 * 
b
;

1439 
x
 <<
biH
;

1440 
y
 = ( y << 
biH
 ) | ( 
x
 >> biH );

1441 
z
 = 
y
 / 
b
;

1442 
y
 -
z
 * 
b
;

1449 if–
A
->
s
 < 0 && 
y
 != 0 )

1450 
y
 = 
b
 - y;

1452 *
r
 = 
y
;

1455 
	}
}

1460 
	$mpi_m⁄tg_öô
–
t_uöt
 *
mm
, c⁄° 
mpi
 *
N
 )

1462 
t_uöt
 
x
, 
m0
 = 
N
->
p
[0];

1463 
i
;

1465 
x
 = 
m0
;

1466 
x
 +––
m0
 + 2 ) & 4 ) << 1;

1468  
i
 = 
biL
; i >= 8; i /= 2 )

1469 
x
 *–2 - ( 
m0
 * x ) );

1471 *
mm
 = ~
x
 + 1;

1472 
	}
}

1477 
	$mpi_m⁄tmul
–
mpi
 *
A
, c⁄° mpò*
B
, c⁄° mpò*
N
, 
t_uöt
 
mm
,

1478 c⁄° 
mpi
 *
T
 )

1480 
size_t
 
i
, 
n
, 
m
;

1481 
t_uöt
 
u0
, 
u1
, *
d
;

1483 
	`mem£t
–
T
->
p
, 0, T->
n
 * 
ciL
 );

1485 
d
 = 
T
->
p
;

1486 
n
 = 
N
->n;

1487 
m
 = ( 
B
->
n
 <Ç ) ? B->n :Ç;

1489  
i
 = 0; i < 
n
; i++ )

1494 
u0
 = 
A
->
p
[
i
];

1495 
u1
 = ( 
d
[0] + 
u0
 * 
B
->
p
[0] ) * 
mm
;

1497 
	`mpi_mul_hÕ
–
m
, 
B
->
p
, 
d
, 
u0
 );

1498 
	`mpi_mul_hÕ
–
n
, 
N
->
p
, 
d
, 
u1
 );

1500 *
d
++ = 
u0
; d[
n
 + 1] = 0;

1503 
	`mem˝y
–
A
->
p
, 
d
, ( 
n
 + 1 ) * 
ciL
 );

1505 if–
	`mpi_cmp_abs
–
A
, 
N
 ) >= 0 )

1506 
	`mpi_sub_hÕ
–
n
, 
N
->
p
, 
A
->p );

1509 
	`mpi_sub_hÕ
–
n
, 
A
->
p
, 
T
->p );

1510 
	}
}

1515 
	$mpi_m⁄åed
–
mpi
 *
A
, c⁄° mpò*
N
, 
t_uöt
 
mm
, c⁄° mpò*
T
 )

1517 
t_uöt
 
z
 = 1;

1518 
mpi
 
U
;

1520 
U
.
n
 = U.
s
 = (Ë
z
;

1521 
U
.
p
 = &
z
;

1523 
	`mpi_m⁄tmul
–
A
, &
U
, 
N
, 
mm
, 
T
 );

1524 
	}
}

1529 
	$mpi_exp_mod
–
mpi
 *
X
, c⁄° mpò*
A
, c⁄° mpò*
E
, c⁄° mpò*
N
, mpò*
_RR
 )

1531 
ªt
;

1532 
size_t
 
wbôs
, 
wsize
, 
⁄e
 = 1;

1533 
size_t
 
i
, 
j
, 
nblimbs
;

1534 
size_t
 
bufsize
, 
nbôs
;

1535 
t_uöt
 
ei
, 
mm
, 
°©e
;

1536 
mpi
 
RR
, 
T
, 
W
[ 2 << 
POLARSSL_MPI_WINDOW_SIZE
 ], 
Apos
;

1537 
√g
;

1539 if–
	`mpi_cmp_öt
–
N
, 0 ) < 0 || ( N->
p
[0] & 1 ) == 0 )

1540 –
POLARSSL_ERR_MPI_BAD_INPUT_DATA
 );

1542 if–
	`mpi_cmp_öt
–
E
, 0 ) < 0 )

1543 –
POLARSSL_ERR_MPI_BAD_INPUT_DATA
 );

1548 
	`mpi_m⁄tg_öô
–&
mm
, 
N
 );

1549 
	`mpi_öô
–&
RR
 ); mpi_öô–&
T
 );

1550 
	`mpi_öô
–&
Apos
 );

1551 
	`mem£t
–
W
, 0, ( W ) );

1553 
i
 = 
	`mpi_msb
–
E
 );

1555 
wsize
 = ( 
i
 > 671 ) ? 6 : ( i > 239 ) ? 5 :

1556 –
i
 > 79 ) ? 4 : ( i > 23 ) ? 3 : 1;

1558 if–
wsize
 > 
POLARSSL_MPI_WINDOW_SIZE
 )

1559 
wsize
 = 
POLARSSL_MPI_WINDOW_SIZE
;

1561 
j
 = 
N
->
n
 + 1;

1562 
	`MPI_CHK
–
	`mpi_grow
–
X
, 
j
 ) );

1563 
	`MPI_CHK
–
	`mpi_grow
–&
W
[1], 
j
 ) );

1564 
	`MPI_CHK
–
	`mpi_grow
–&
T
, 
j
 * 2 ) );

1569 
√g
 = ( 
A
->
s
 == -1 );

1570 if–
√g
 )

1572 
	`MPI_CHK
–
	`mpi_c›y
–&
Apos
, 
A
 ) );

1573 
Apos
.
s
 = 1;

1574 
A
 = &
Apos
;

1580 if–
_RR
 =
NULL
 || _RR->
p
 == NULL )

1582 
	`MPI_CHK
–
	`mpi_l£t
–&
RR
, 1 ) );

1583 
	`MPI_CHK
–
	`mpi_shi·_l
–&
RR
, 
N
->
n
 * 2 * 
biL
 ) );

1584 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
RR
, &RR, 
N
 ) );

1586 if–
_RR
 !
NULL
 )

1587 
	`mem˝y
–
_RR
, &
RR
, –
mpi
 ) );

1590 
	`mem˝y
–&
RR
, 
_RR
, –
mpi
 ) );

1595 if–
	`mpi_cmp_mpi
–
A
, 
N
 ) >= 0 )

1596 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
W
[1], 
A
, 
N
 ) );

1598 
	`MPI_CHK
–
	`mpi_c›y
–&
W
[1], 
A
 ) );

1600 
	`mpi_m⁄tmul
–&
W
[1], &
RR
, 
N
, 
mm
, &
T
 );

1605 
	`MPI_CHK
–
	`mpi_c›y
–
X
, &
RR
 ) );

1606 
	`mpi_m⁄åed
–
X
, 
N
, 
mm
, &
T
 );

1608 if–
wsize
 > 1 )

1613 
j
 = 
⁄e
 << ( 
wsize
 - 1 );

1615 
	`MPI_CHK
–
	`mpi_grow
–&
W
[
j
], 
N
->
n
 + 1 ) );

1616 
	`MPI_CHK
–
	`mpi_c›y
–&
W
[
j
], &W[1] ) );

1618  
i
 = 0; i < 
wsize
 - 1; i++ )

1619 
	`mpi_m⁄tmul
–&
W
[
j
], &W[j], 
N
, 
mm
, &
T
 );

1624  
i
 = 
j
 + 1; i < ( 
⁄e
 << 
wsize
 ); i++ )

1626 
	`MPI_CHK
–
	`mpi_grow
–&
W
[
i
], 
N
->
n
 + 1 ) );

1627 
	`MPI_CHK
–
	`mpi_c›y
–&
W
[
i
], &W[i - 1] ) );

1629 
	`mpi_m⁄tmul
–&
W
[
i
], &W[1], 
N
, 
mm
, &
T
 );

1633 
nblimbs
 = 
E
->
n
;

1634 
bufsize
 = 0;

1635 
nbôs
 = 0;

1636 
wbôs
 = 0;

1637 
°©e
 = 0;

1641 if–
bufsize
 == 0 )

1643 if–
nblimbs
 == 0 )

1646 
nblimbs
--;

1648 
bufsize
 = –
t_uöt
 ) << 3;

1651 
bufsize
--;

1653 
ei
 = (
E
->
p
[
nblimbs
] >> 
bufsize
) & 1;

1658 if–
ei
 =0 && 
°©e
 == 0 )

1661 if–
ei
 =0 && 
°©e
 == 1 )

1666 
	`mpi_m⁄tmul
–
X
, X, 
N
, 
mm
, &
T
 );

1673 
°©e
 = 2;

1675 
nbôs
++;

1676 
wbôs
 |–
ei
 << ( 
wsize
 - 
nbôs
 ) );

1678 if–
nbôs
 =
wsize
 )

1683  
i
 = 0; i < 
wsize
; i++ )

1684 
	`mpi_m⁄tmul
–
X
, X, 
N
, 
mm
, &
T
 );

1689 
	`mpi_m⁄tmul
–
X
, &
W
[
wbôs
], 
N
, 
mm
, &
T
 );

1691 
°©e
--;

1692 
nbôs
 = 0;

1693 
wbôs
 = 0;

1700  
i
 = 0; i < 
nbôs
; i++ )

1702 
	`mpi_m⁄tmul
–
X
, X, 
N
, 
mm
, &
T
 );

1704 
wbôs
 <<= 1;

1706 if––
wbôs
 & ( 
⁄e
 << 
wsize
 ) ) != 0 )

1707 
	`mpi_m⁄tmul
–
X
, &
W
[1], 
N
, 
mm
, &
T
 );

1713 
	`mpi_m⁄åed
–
X
, 
N
, 
mm
, &
T
 );

1715 if–
√g
 )

1717 
X
->
s
 = -1;

1718 
	`MPI_CHK
–
	`mpi_add_mpi
–
X
, 
N
, X ) );

1721 
˛ónup
:

1723  
i
 = ( 
⁄e
 << ( 
wsize
 - 1 ) ); i < ( one << wsize ); i++ )

1724 
	`mpi_‰ì
–&
W
[
i
] );

1726 
	`mpi_‰ì
–&
W
[1] ); mpi_‰ì–&
T
 ); mpi_‰ì–&
Apos
 );

1728 if–
_RR
 =
NULL
 || _RR->
p
 == NULL )

1729 
	`mpi_‰ì
–&
RR
 );

1731 –
ªt
 );

1732 
	}
}

1737 
	$mpi_gcd
–
mpi
 *
G
, c⁄° mpò*
A
, c⁄° mpò*
B
 )

1739 
ªt
;

1740 
size_t
 
lz
, 
lzt
;

1741 
mpi
 
TG
, 
TA
, 
TB
;

1743 
	`mpi_öô
–&
TG
 ); mpi_öô–&
TA
 ); mpi_öô–&
TB
 );

1745 
	`MPI_CHK
–
	`mpi_c›y
–&
TA
, 
A
 ) );

1746 
	`MPI_CHK
–
	`mpi_c›y
–&
TB
, 
B
 ) );

1748 
lz
 = 
	`mpi_lsb
–&
TA
 );

1749 
lzt
 = 
	`mpi_lsb
–&
TB
 );

1751 if–
lzt
 < 
lz
 )

1752 
lz
 = 
lzt
;

1754 
	`MPI_CHK
–
	`mpi_shi·_r
–&
TA
, 
lz
 ) );

1755 
	`MPI_CHK
–
	`mpi_shi·_r
–&
TB
, 
lz
 ) );

1757 
TA
.
s
 = 
TB
.s = 1;

1759  
	`mpi_cmp_öt
–&
TA
, 0 ) != 0 )

1761 
	`MPI_CHK
–
	`mpi_shi·_r
–&
TA
, 
	`mpi_lsb
( &TA ) ) );

1762 
	`MPI_CHK
–
	`mpi_shi·_r
–&
TB
, 
	`mpi_lsb
( &TB ) ) );

1764 if–
	`mpi_cmp_mpi
–&
TA
, &
TB
 ) >= 0 )

1766 
	`MPI_CHK
–
	`mpi_sub_abs
–&
TA
, &TA, &
TB
 ) );

1767 
	`MPI_CHK
–
	`mpi_shi·_r
–&
TA
, 1 ) );

1771 
	`MPI_CHK
–
	`mpi_sub_abs
–&
TB
, &TB, &
TA
 ) );

1772 
	`MPI_CHK
–
	`mpi_shi·_r
–&
TB
, 1 ) );

1776 
	`MPI_CHK
–
	`mpi_shi·_l
–&
TB
, 
lz
 ) );

1777 
	`MPI_CHK
–
	`mpi_c›y
–
G
, &
TB
 ) );

1779 
˛ónup
:

1781 
	`mpi_‰ì
–&
TG
 ); mpi_‰ì–&
TA
 ); mpi_‰ì–&
TB
 );

1783 –
ªt
 );

1784 
	}
}

1793 
mpi_fûl_øndom
–
mpi
 *
X
, 
size_t
 
size
,

1794 (*
f_∫g
)(*, *, 
size_t
),

1795 *
p_∫g
 )

1797 
ªt
;

1798 
buf
[
POLARSSL_MPI_MAX_SIZE
];

1800 if–
size
 > 
POLARSSL_MPI_MAX_SIZE
 )

1801 –
POLARSSL_ERR_MPI_BAD_INPUT_DATA
 );

1803 
	`MPI_CHK
–
	`f_∫g
–
p_∫g
, 
buf
, 
size
 ) );

1804 
	`MPI_CHK
–
	`mpi_ªad_bö¨y
–
X
, 
buf
, 
size
 ) );

1806 
˛ónup
:

1807 –
ªt
 );

1808 
	}
}

1813 
	$mpi_öv_mod
–
mpi
 *
X
, c⁄° mpò*
A
, c⁄° mpò*
N
 )

1815 
ªt
;

1816 
mpi
 
G
, 
TA
, 
TU
, 
U1
, 
U2
, 
TB
, 
TV
, 
V1
, 
V2
;

1818 if–
	`mpi_cmp_öt
–
N
, 0 ) <= 0 )

1819 –
POLARSSL_ERR_MPI_BAD_INPUT_DATA
 );

1821 
	`mpi_öô
–&
TA
 ); mpi_öô–&
TU
 ); mpi_öô–&
U1
 ); mpi_öô–&
U2
 );

1822 
	`mpi_öô
–&
G
 ); mpi_öô–&
TB
 ); mpi_öô–&
TV
 );

1823 
	`mpi_öô
–&
V1
 ); mpi_öô–&
V2
 );

1825 
	`MPI_CHK
–
	`mpi_gcd
–&
G
, 
A
, 
N
 ) );

1827 if–
	`mpi_cmp_öt
–&
G
, 1 ) != 0 )

1829 
ªt
 = 
POLARSSL_ERR_MPI_NOT_ACCEPTABLE
;

1830 
˛ónup
;

1833 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
TA
, 
A
, 
N
 ) );

1834 
	`MPI_CHK
–
	`mpi_c›y
–&
TU
, &
TA
 ) );

1835 
	`MPI_CHK
–
	`mpi_c›y
–&
TB
, 
N
 ) );

1836 
	`MPI_CHK
–
	`mpi_c›y
–&
TV
, 
N
 ) );

1838 
	`MPI_CHK
–
	`mpi_l£t
–&
U1
, 1 ) );

1839 
	`MPI_CHK
–
	`mpi_l£t
–&
U2
, 0 ) );

1840 
	`MPI_CHK
–
	`mpi_l£t
–&
V1
, 0 ) );

1841 
	`MPI_CHK
–
	`mpi_l£t
–&
V2
, 1 ) );

1845  ( 
TU
.
p
[0] & 1 ) == 0 )

1847 
	`MPI_CHK
–
	`mpi_shi·_r
–&
TU
, 1 ) );

1849 if––
U1
.
p
[0] & 1 ) !0 || ( 
U2
.p[0] & 1 ) != 0 )

1851 
	`MPI_CHK
–
	`mpi_add_mpi
–&
U1
, &U1, &
TB
 ) );

1852 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
U2
, &U2, &
TA
 ) );

1855 
	`MPI_CHK
–
	`mpi_shi·_r
–&
U1
, 1 ) );

1856 
	`MPI_CHK
–
	`mpi_shi·_r
–&
U2
, 1 ) );

1859  ( 
TV
.
p
[0] & 1 ) == 0 )

1861 
	`MPI_CHK
–
	`mpi_shi·_r
–&
TV
, 1 ) );

1863 if––
V1
.
p
[0] & 1 ) !0 || ( 
V2
.p[0] & 1 ) != 0 )

1865 
	`MPI_CHK
–
	`mpi_add_mpi
–&
V1
, &V1, &
TB
 ) );

1866 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
V2
, &V2, &
TA
 ) );

1869 
	`MPI_CHK
–
	`mpi_shi·_r
–&
V1
, 1 ) );

1870 
	`MPI_CHK
–
	`mpi_shi·_r
–&
V2
, 1 ) );

1873 if–
	`mpi_cmp_mpi
–&
TU
, &
TV
 ) >= 0 )

1875 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
TU
, &TU, &
TV
 ) );

1876 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
U1
, &U1, &
V1
 ) );

1877 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
U2
, &U2, &
V2
 ) );

1881 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
TV
, &TV, &
TU
 ) );

1882 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
V1
, &V1, &
U1
 ) );

1883 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
V2
, &V2, &
U2
 ) );

1886  
	`mpi_cmp_öt
–&
TU
, 0 ) != 0 );

1888  
	`mpi_cmp_öt
–&
V1
, 0 ) < 0 )

1889 
	`MPI_CHK
–
	`mpi_add_mpi
–&
V1
, &V1, 
N
 ) );

1891  
	`mpi_cmp_mpi
–&
V1
, 
N
 ) >= 0 )

1892 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
V1
, &V1, 
N
 ) );

1894 
	`MPI_CHK
–
	`mpi_c›y
–
X
, &
V1
 ) );

1896 
˛ónup
:

1898 
	`mpi_‰ì
–&
TA
 ); mpi_‰ì–&
TU
 ); mpi_‰ì–&
U1
 ); mpi_‰ì–&
U2
 );

1899 
	`mpi_‰ì
–&
G
 ); mpi_‰ì–&
TB
 ); mpi_‰ì–&
TV
 );

1900 
	`mpi_‰ì
–&
V1
 ); mpi_‰ì–&
V2
 );

1902 –
ªt
 );

1903 
	}
}

1905 #i‡
deföed
(
POLARSSL_GENPRIME
)

1907 c⁄° 
	gsmÆl_¥ime
[] =

1941 
	$mpi_check_smÆl_Á˘‹s
–c⁄° 
mpi
 *
X
 )

1943 
ªt
 = 0;

1944 
size_t
 
i
;

1945 
t_uöt
 
r
;

1947 if––
X
->
p
[0] & 1 ) == 0 )

1948 –
POLARSSL_ERR_MPI_NOT_ACCEPTABLE
 );

1950  
i
 = 0; 
smÆl_¥ime
[i] > 0; i++ )

1952 if–
	`mpi_cmp_öt
–
X
, 
smÆl_¥ime
[
i
] ) <= 0 )

1955 
	`MPI_CHK
–
	`mpi_mod_öt
–&
r
, 
X
, 
smÆl_¥ime
[
i
] ) );

1957 if–
r
 == 0 )

1958 –
POLARSSL_ERR_MPI_NOT_ACCEPTABLE
 );

1961 
˛ónup
:

1962 –
ªt
 );

1963 
	}
}

1968 
mpi_mûÀr_øbö
–c⁄° 
mpi
 *
X
,

1969 (*
f_∫g
)(*, *, 
size_t
),

1970 *
p_∫g
 )

1972 
ªt
;

1973 
size_t
 
i
, 
j
, 
n
, 
s
;

1974 
mpi
 
W
, 
R
, 
T
, 
A
, 
RR
;

1976 
	`mpi_öô
–&
W
 ); mpi_öô–&
R
 ); mpi_öô–&
T
 ); mpi_öô–&
A
 );

1977 
	`mpi_öô
–&
RR
 );

1983 
	`MPI_CHK
–
	`mpi_sub_öt
–&
W
, 
X
, 1 ) );

1984 
s
 = 
	`mpi_lsb
–&
W
 );

1985 
	`MPI_CHK
–
	`mpi_c›y
–&
R
, &
W
 ) );

1986 
	`MPI_CHK
–
	`mpi_shi·_r
–&
R
, 
s
 ) );

1988 
i
 = 
	`mpi_msb
–
X
 );

1992 
n
 = ( ( 
i
 >= 1300 ) ? 2 : ( i >= 850 ) ? 3 :

1993 –
i
 >= 650 ) ? 4 : ( i >= 350 ) ? 8 :

1994 –
i
 >= 250 ) ? 12 : ( i >= 150 ) ? 18 : 27 );

1996  
i
 = 0; i < 
n
; i++ )

2001 
	`MPI_CHK
–
	`mpi_fûl_øndom
–&
A
, 
X
->
n
 * 
ciL
, 
f_∫g
, 
p_∫g
 ) );

2003 if–
	`mpi_cmp_mpi
–&
A
, &
W
 ) >= 0 )

2005 
j
 = 
	`mpi_msb
–&
A
 ) - mpi_msb–&
W
 );

2006 
	`MPI_CHK
–
	`mpi_shi·_r
–&
A
, 
j
 + 1 ) );

2008 
A
.
p
[0] |= 3;

2013 
	`MPI_CHK
–
	`mpi_exp_mod
–&
A
, &A, &
R
, 
X
, &
RR
 ) );

2015 if–
	`mpi_cmp_mpi
–&
A
, &
W
 ) == 0 ||

2016 
	`mpi_cmp_öt
–&
A
, 1 ) == 0 )

2019 
j
 = 1;

2020  
j
 < 
s
 && 
	`mpi_cmp_mpi
–&
A
, &
W
 ) != 0 )

2025 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T
, &
A
, &A ) );

2026 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
A
, &
T
, 
X
 ) );

2028 if–
	`mpi_cmp_öt
–&
A
, 1 ) == 0 )

2031 
j
++;

2037 if–
	`mpi_cmp_mpi
–&
A
, &
W
 ) != 0 ||

2038 
	`mpi_cmp_öt
–&
A
, 1 ) == 0 )

2040 
ªt
 = 
POLARSSL_ERR_MPI_NOT_ACCEPTABLE
;

2045 
˛ónup
:

2046 
	`mpi_‰ì
–&
W
 ); mpi_‰ì–&
R
 ); mpi_‰ì–&
T
 ); mpi_‰ì–&
A
 );

2047 
	`mpi_‰ì
–&
RR
 );

2049 –
ªt
 );

2050 
	}
}

2055 
mpi_is_¥ime
–
mpi
 *
X
,

2056 (*
f_∫g
)(*, *, 
size_t
),

2057 *
p_∫g
 )

2059 
ªt
;

2060 c⁄° 
mpi
 
XX
 = { 1, 
X
->
n
, X->
p
 };

2062 if–
	`mpi_cmp_öt
–&
XX
, 0 ) == 0 ||

2063 
	`mpi_cmp_öt
–&
XX
, 1 ) == 0 )

2064 –
POLARSSL_ERR_MPI_NOT_ACCEPTABLE
 );

2066 if–
	`mpi_cmp_öt
–&
XX
, 2 ) == 0 )

2069 if––
ªt
 = 
	`mpi_check_smÆl_Á˘‹s
–&
XX
 ) ) != 0 )

2071 if–
ªt
 == 1 )

2074 –
ªt
 );

2077 –
	`mpi_mûÀr_øbö
–&
XX
, 
f_∫g
, 
p_∫g
 ) );

2078 
	}
}

2083 
mpi_gí_¥ime
–
mpi
 *
X
, 
size_t
 
nbôs
, 
dh_Êag
,

2084 (*
f_∫g
)(*, *, 
size_t
),

2085 *
p_∫g
 )

2087 
ªt
;

2088 
size_t
 
k
, 
n
;

2089 
t_uöt
 
r
;

2090 
mpi
 
Y
;

2092 if–
nbôs
 < 3 ||Çbô†> 
POLARSSL_MPI_MAX_BITS
 )

2093 –
POLARSSL_ERR_MPI_BAD_INPUT_DATA
 );

2095 
	`mpi_öô
–&
Y
 );

2097 
n
 = 
	`BITS_TO_LIMBS
–
nbôs
 );

2099 
	`MPI_CHK
–
	`mpi_fûl_øndom
–
X
, 
n
 * 
ciL
, 
f_∫g
, 
p_∫g
 ) );

2101 
k
 = 
	`mpi_msb
–
X
 );

2102 if–
k
 < 
nbôs
 ) 
	`MPI_CHK
–
	`mpi_shi·_l
–
X
,Çbits - k ) );

2103 if–
k
 > 
nbôs
 ) 
	`MPI_CHK
–
	`mpi_shi·_r
–
X
, k -Çbits ) );

2105 
X
->
p
[0] |= 3;

2107 if–
dh_Êag
 == 0 )

2109  ( 
ªt
 = 
	`mpi_is_¥ime
–
X
, 
f_∫g
, 
p_∫g
 ) ) != 0 )

2111 if–
ªt
 !
POLARSSL_ERR_MPI_NOT_ACCEPTABLE
 )

2112 
˛ónup
;

2114 
	`MPI_CHK
–
	`mpi_add_öt
–
X
, X, 2 ) );

2124 
	`MPI_CHK
–
	`mpi_mod_öt
–&
r
, 
X
, 3 ) );

2125 if–
r
 == 0 )

2126 
	`MPI_CHK
–
	`mpi_add_öt
–
X
, X, 8 ) );

2127 if–
r
 == 1 )

2128 
	`MPI_CHK
–
	`mpi_add_öt
–
X
, X, 4 ) );

2131 
	`MPI_CHK
–
	`mpi_c›y
–&
Y
, 
X
 ) );

2132 
	`MPI_CHK
–
	`mpi_shi·_r
–&
Y
, 1 ) );

2140 if––
ªt
 = 
	`mpi_check_smÆl_Á˘‹s
–
X
 ) ) == 0 &&

2141 –
ªt
 = 
	`mpi_check_smÆl_Á˘‹s
–&
Y
 ) ) == 0 &&

2142 –
ªt
 = 
	`mpi_mûÀr_øbö
–
X
, 
f_∫g
, 
p_∫g
 ) ) == 0 &&

2143 –
ªt
 = 
	`mpi_mûÀr_øbö
–&
Y
, 
f_∫g
, 
p_∫g
 ) ) == 0 )

2148 if–
ªt
 !
POLARSSL_ERR_MPI_NOT_ACCEPTABLE
 )

2149 
˛ónup
;

2156 
	`MPI_CHK
–
	`mpi_add_öt
–
X
, X, 12 ) );

2157 
	`MPI_CHK
–
	`mpi_add_öt
–&
Y
, &Y, 6 ) );

2161 
˛ónup
:

2163 
	`mpi_‰ì
–&
Y
 );

2165 –
ªt
 );

2166 
	}
}

2170 #i‡
deföed
(
POLARSSL_SELF_TEST
)

2172 
	#GCD_PAIR_COUNT
 3

	)

2174 c⁄° 
	ggcd_∑ús
[
GCD_PAIR_COUNT
][3] =

2184 
	$mpi_£lf_ã°
–
vîbo£
 )

2186 
ªt
, 
i
;

2187 
mpi
 
A
, 
E
, 
N
, 
X
, 
Y
, 
U
, 
V
;

2189 
	`mpi_öô
–&
A
 ); mpi_öô–&
E
 ); mpi_öô–&
N
 ); mpi_öô–&
X
 );

2190 
	`mpi_öô
–&
Y
 ); mpi_öô–&
U
 ); mpi_öô–&
V
 );

2192 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
A
, 16,

2198 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
E
, 16,

2204 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
N
, 16,

2209 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
X
, &
A
, &
N
 ) );

2211 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
U
, 16,

2220 if–
vîbo£
 != 0 )

2221 
	`pﬁ¨s¶_¥ötf
( " MPIÅest #1 (mul_mpi): " );

2223 if–
	`mpi_cmp_mpi
–&
X
, &
U
 ) != 0 )

2225 if–
vîbo£
 != 0 )

2226 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

2228 
ªt
 = 1;

2229 
˛ónup
;

2232 if–
vîbo£
 != 0 )

2233 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

2235 
	`MPI_CHK
–
	`mpi_div_mpi
–&
X
, &
Y
, &
A
, &
N
 ) );

2237 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
U
, 16,

2240 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
V
, 16,

2245 if–
vîbo£
 != 0 )

2246 
	`pﬁ¨s¶_¥ötf
( " MPIÅest #2 (div_mpi): " );

2248 if–
	`mpi_cmp_mpi
–&
X
, &
U
 ) != 0 ||

2249 
	`mpi_cmp_mpi
–&
Y
, &
V
 ) != 0 )

2251 if–
vîbo£
 != 0 )

2252 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

2254 
ªt
 = 1;

2255 
˛ónup
;

2258 if–
vîbo£
 != 0 )

2259 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

2261 
	`MPI_CHK
–
	`mpi_exp_mod
–&
X
, &
A
, &
E
, &
N
, 
NULL
 ) );

2263 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
U
, 16,

2268 if–
vîbo£
 != 0 )

2269 
	`pﬁ¨s¶_¥ötf
( " MPIÅest #3 (exp_mod): " );

2271 if–
	`mpi_cmp_mpi
–&
X
, &
U
 ) != 0 )

2273 if–
vîbo£
 != 0 )

2274 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

2276 
ªt
 = 1;

2277 
˛ónup
;

2280 if–
vîbo£
 != 0 )

2281 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

2283 
	`MPI_CHK
–
	`mpi_öv_mod
–&
X
, &
A
, &
N
 ) );

2285 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
U
, 16,

2290 if–
vîbo£
 != 0 )

2291 
	`pﬁ¨s¶_¥ötf
( " MPIÅest #4 (inv_mod): " );

2293 if–
	`mpi_cmp_mpi
–&
X
, &
U
 ) != 0 )

2295 if–
vîbo£
 != 0 )

2296 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

2298 
ªt
 = 1;

2299 
˛ónup
;

2302 if–
vîbo£
 != 0 )

2303 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

2305 if–
vîbo£
 != 0 )

2306 
	`pﬁ¨s¶_¥ötf
( " MPIÅest #5 (simple gcd): " );

2308  
i
 = 0; i < 
GCD_PAIR_COUNT
; i++ )

2310 
	`MPI_CHK
–
	`mpi_l£t
–&
X
, 
gcd_∑ús
[
i
][0] ) );

2311 
	`MPI_CHK
–
	`mpi_l£t
–&
Y
, 
gcd_∑ús
[
i
][1] ) );

2313 
	`MPI_CHK
–
	`mpi_gcd
–&
A
, &
X
, &
Y
 ) );

2315 if–
	`mpi_cmp_öt
–&
A
, 
gcd_∑ús
[
i
][2] ) != 0 )

2317 if–
vîbo£
 != 0 )

2318 
	`pﬁ¨s¶_¥ötf
–"Áûedáà%d\n", 
i
 );

2320 
ªt
 = 1;

2321 
˛ónup
;

2325 if–
vîbo£
 != 0 )

2326 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

2328 
˛ónup
:

2330 if–
ªt
 !0 && 
vîbo£
 != 0 )

2331 
	`pﬁ¨s¶_¥ötf
–"U√x≥˘edÉº‹,Ñëu∫ codê%08X\n", 
ªt
 );

2333 
	`mpi_‰ì
–&
A
 ); mpi_‰ì–&
E
 ); mpi_‰ì–&
N
 ); mpi_‰ì–&
X
 );

2334 
	`mpi_‰ì
–&
Y
 ); mpi_‰ì–&
U
 ); mpi_‰ì–&
V
 );

2336 if–
vîbo£
 != 0 )

2337 
	`pﬁ¨s¶_¥ötf
( "\n" );

2339 –
ªt
 );

2340 
	}
}

	@polarssl/library/blowfish.c

32 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

33 
	~"pﬁ¨s¶/c⁄fig.h
"

35 #ö˛udê
POLARSSL_CONFIG_FILE


38 #i‡
deföed
(
POLARSSL_BLOWFISH_C
)

40 
	~"pﬁ¨s¶/blowfish.h
"

42 #i‡!
deföed
(
POLARSSL_BLOWFISH_ALT
)

45 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

46 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

47 
	}
}

52 #i‚de‡
GET_UINT32_BE


53 
	#GET_UINT32_BE
(
n
,
b
,
i
) \

55 (
n
Ë–(
uöt32_t
Ë(
b
)[(
i
) ] << 24 ) \

56 | ( (
uöt32_t
Ë(
b
)[(
i
) + 1] << 16 ) \

57 | ( (
uöt32_t
Ë(
b
)[(
i
) + 2] << 8 ) \

58 | ( (
uöt32_t
Ë(
b
)[(
i
) + 3] ); \

59 }

	)

62 #i‚de‡
PUT_UINT32_BE


63 
	#PUT_UINT32_BE
(
n
,
b
,
i
) \

65 (
b
)[(
i
Ë] = (Ë–(
n
) >> 24 ); \

66 (
b
)[(
i
Ë+ 1] = (Ë–(
n
) >> 16 ); \

67 (
b
)[(
i
Ë+ 2] = (Ë–(
n
) >> 8 ); \

68 (
b
)[(
i
Ë+ 3] = (Ë–(
n
) ); \

69 }

	)

72 c⁄° 
uöt32_t
 
	gP
[
BLOWFISH_ROUNDS
 + 2] = {

81 c⁄° 
uöt32_t
 
	gS
[4][256];

83 
uöt32_t
 
	$F
–
blowfish_c⁄ãxt
 *
˘x
, 
uöt32_t
 
x
 )

85 
a
, 
b
, 
c
, 
d
;

86 
uöt32_t
 
y
;

88 
d
 = ()(
x
 & 0xFF);

89 
x
 >>= 8;

90 
c
 = ()(
x
 & 0xFF);

91 
x
 >>= 8;

92 
b
 = ()(
x
 & 0xFF);

93 
x
 >>= 8;

94 
a
 = ()(
x
 & 0xFF);

95 
y
 = 
˘x
->
S
[0][
a
] + ctx->S[1][
b
];

96 
y
 = y ^ 
˘x
->
S
[2][
c
];

97 
y
 = y + 
˘x
->
S
[3][
d
];

99 –
y
 );

100 
	}
}

102 
	$blowfish_íc
–
blowfish_c⁄ãxt
 *
˘x
, 
uöt32_t
 *
xl
, uöt32_à*
xr
 )

104 
uöt32_t
 
Xl
, 
Xr
, 
ãmp
;

105 
i
;

107 
Xl
 = *
xl
;

108 
Xr
 = *
xr
;

110  
i
 = 0; i < 
BLOWFISH_ROUNDS
; ++i )

112 
Xl
 = X»^ 
˘x
->
P
[
i
];

113 
Xr
 = 
	`F
–
˘x
, 
Xl
 ) ^ Xr;

115 
ãmp
 = 
Xl
;

116 
Xl
 = 
Xr
;

117 
Xr
 = 
ãmp
;

120 
ãmp
 = 
Xl
;

121 
Xl
 = 
Xr
;

122 
Xr
 = 
ãmp
;

124 
Xr
 = X∏^ 
˘x
->
P
[
BLOWFISH_ROUNDS
];

125 
Xl
 = X»^ 
˘x
->
P
[
BLOWFISH_ROUNDS
 + 1];

127 *
xl
 = 
Xl
;

128 *
xr
 = 
Xr
;

129 
	}
}

131 
	$blowfish_dec
–
blowfish_c⁄ãxt
 *
˘x
, 
uöt32_t
 *
xl
, uöt32_à*
xr
 )

133 
uöt32_t
 
Xl
, 
Xr
, 
ãmp
;

134 
i
;

136 
Xl
 = *
xl
;

137 
Xr
 = *
xr
;

139  
i
 = 
BLOWFISH_ROUNDS
 + 1; i > 1; --i )

141 
Xl
 = X»^ 
˘x
->
P
[
i
];

142 
Xr
 = 
	`F
–
˘x
, 
Xl
 ) ^ Xr;

144 
ãmp
 = 
Xl
;

145 
Xl
 = 
Xr
;

146 
Xr
 = 
ãmp
;

149 
ãmp
 = 
Xl
;

150 
Xl
 = 
Xr
;

151 
Xr
 = 
ãmp
;

153 
Xr
 = X∏^ 
˘x
->
P
[1];

154 
Xl
 = X»^ 
˘x
->
P
[0];

156 *
xl
 = 
Xl
;

157 *
xr
 = 
Xr
;

158 
	}
}

160 
	$blowfish_öô
–
blowfish_c⁄ãxt
 *
˘x
 )

162 
	`mem£t
–
˘x
, 0, –
blowfish_c⁄ãxt
 ) );

163 
	}
}

165 
	$blowfish_‰ì
–
blowfish_c⁄ãxt
 *
˘x
 )

167 if–
˘x
 =
NULL
 )

170 
	`pﬁ¨s¶_zîoize
–
˘x
, –
blowfish_c⁄ãxt
 ) );

171 
	}
}

176 
	$blowfish_£tkey
–
blowfish_c⁄ãxt
 *
˘x
, c⁄° *
key
,

177 
keysize
 )

179 
i
, 
j
, 
k
;

180 
uöt32_t
 
d©a
, 
d©Æ
, 
d©¨
;

182 if–
keysize
 < 
BLOWFISH_MIN_KEY
 || keysizê> 
BLOWFISH_MAX_KEY
 ||

183 –
keysize
 % 8 ) )

185 –
POLARSSL_ERR_BLOWFISH_INVALID_KEY_LENGTH
 );

188 
keysize
 >>= 3;

190  
i
 = 0; i < 4; i++ )

192  
j
 = 0; j < 256; j++ )

193 
˘x
->
S
[
i
][
j
] = S[i][j];

196 
j
 = 0;

197  
i
 = 0; i < 
BLOWFISH_ROUNDS
 + 2; ++i )

199 
d©a
 = 0x00000000;

200  
k
 = 0; k < 4; ++k )

202 
d©a
 = ( d©®<< 8 ) | 
key
[
j
++];

203 if–
j
 >
keysize
 )

204 
j
 = 0;

206 
˘x
->
P
[
i
] = P[i] ^ 
d©a
;

209 
d©Æ
 = 0x00000000;

210 
d©¨
 = 0x00000000;

212  
i
 = 0; i < 
BLOWFISH_ROUNDS
 + 2; i += 2 )

214 
	`blowfish_íc
–
˘x
, &
d©Æ
, &
d©¨
 );

215 
˘x
->
P
[
i
] = 
d©Æ
;

216 
˘x
->
P
[
i
 + 1] = 
d©¨
;

219  
i
 = 0; i < 4; i++ )

221  
j
 = 0; j < 256; j += 2 )

223 
	`blowfish_íc
–
˘x
, &
d©Æ
, &
d©¨
 );

224 
˘x
->
S
[
i
][
j
] = 
d©Æ
;

225 
˘x
->
S
[
i
][
j
 + 1] = 
d©¨
;

229 
	}
}

234 
	$blowfish_¸y±_ecb
–
blowfish_c⁄ãxt
 *
˘x
,

235 
mode
,

236 c⁄° 
öput
[
BLOWFISH_BLOCKSIZE
],

237 
ouçut
[
BLOWFISH_BLOCKSIZE
] )

239 
uöt32_t
 
X0
, 
X1
;

241 
	`GET_UINT32_BE
–
X0
, 
öput
, 0 );

242 
	`GET_UINT32_BE
–
X1
, 
öput
, 4 );

244 if–
mode
 =
BLOWFISH_DECRYPT
 )

246 
	`blowfish_dec
–
˘x
, &
X0
, &
X1
 );

250 
	`blowfish_íc
–
˘x
, &
X0
, &
X1
 );

253 
	`PUT_UINT32_BE
–
X0
, 
ouçut
, 0 );

254 
	`PUT_UINT32_BE
–
X1
, 
ouçut
, 4 );

257 
	}
}

259 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

263 
	$blowfish_¸y±_cbc
–
blowfish_c⁄ãxt
 *
˘x
,

264 
mode
,

265 
size_t
 
Àngth
,

266 
iv
[
BLOWFISH_BLOCKSIZE
],

267 c⁄° *
öput
,

268 *
ouçut
 )

270 
i
;

271 
ãmp
[
BLOWFISH_BLOCKSIZE
];

273 if–
Àngth
 % 
BLOWFISH_BLOCKSIZE
 )

274 –
POLARSSL_ERR_BLOWFISH_INVALID_INPUT_LENGTH
 );

276 if–
mode
 =
BLOWFISH_DECRYPT
 )

278  
Àngth
 > 0 )

280 
	`mem˝y
–
ãmp
, 
öput
, 
BLOWFISH_BLOCKSIZE
 );

281 
	`blowfish_¸y±_ecb
–
˘x
, 
mode
, 
öput
, 
ouçut
 );

283  
i
 = 0; i < 
BLOWFISH_BLOCKSIZE
;i++ )

284 
ouçut
[
i
] = ()–ouçut[i] ^ 
iv
[i] );

286 
	`mem˝y
–
iv
, 
ãmp
, 
BLOWFISH_BLOCKSIZE
 );

288 
öput
 +
BLOWFISH_BLOCKSIZE
;

289 
ouçut
 +
BLOWFISH_BLOCKSIZE
;

290 
Àngth
 -
BLOWFISH_BLOCKSIZE
;

295  
Àngth
 > 0 )

297  
i
 = 0; i < 
BLOWFISH_BLOCKSIZE
; i++ )

298 
ouçut
[
i
] = ()–
öput
[i] ^ 
iv
[i] );

300 
	`blowfish_¸y±_ecb
–
˘x
, 
mode
, 
ouçut
, output );

301 
	`mem˝y
–
iv
, 
ouçut
, 
BLOWFISH_BLOCKSIZE
 );

303 
öput
 +
BLOWFISH_BLOCKSIZE
;

304 
ouçut
 +
BLOWFISH_BLOCKSIZE
;

305 
Àngth
 -
BLOWFISH_BLOCKSIZE
;

310 
	}
}

313 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CFB
)

317 
	$blowfish_¸y±_cfb64
–
blowfish_c⁄ãxt
 *
˘x
,

318 
mode
,

319 
size_t
 
Àngth
,

320 
size_t
 *
iv_off
,

321 
iv
[
BLOWFISH_BLOCKSIZE
],

322 c⁄° *
öput
,

323 *
ouçut
 )

325 
c
;

326 
size_t
 
n
 = *
iv_off
;

328 if–
mode
 =
BLOWFISH_DECRYPT
 )

330  
Àngth
-- )

332 if–
n
 == 0 )

333 
	`blowfish_¸y±_ecb
–
˘x
, 
BLOWFISH_ENCRYPT
, 
iv
, iv );

335 
c
 = *
öput
++;

336 *
ouçut
++ = ()–
c
 ^ 
iv
[
n
] );

337 
iv
[
n
] = (Ë
c
;

339 
n
 = (Ç + 1 ) % 
BLOWFISH_BLOCKSIZE
;

344  
Àngth
-- )

346 if–
n
 == 0 )

347 
	`blowfish_¸y±_ecb
–
˘x
, 
BLOWFISH_ENCRYPT
, 
iv
, iv );

349 
iv
[
n
] = *
ouçut
++ = ()–iv[n] ^ *
öput
++ );

351 
n
 = (Ç + 1 ) % 
BLOWFISH_BLOCKSIZE
;

355 *
iv_off
 = 
n
;

358 
	}
}

361 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CTR
)

365 
	$blowfish_¸y±_˘r
–
blowfish_c⁄ãxt
 *
˘x
,

366 
size_t
 
Àngth
,

367 
size_t
 *
nc_off
,

368 
n⁄˚_cou¡î
[
BLOWFISH_BLOCKSIZE
],

369 
°ªam_block
[
BLOWFISH_BLOCKSIZE
],

370 c⁄° *
öput
,

371 *
ouçut
 )

373 
c
, 
i
;

374 
size_t
 
n
 = *
nc_off
;

376  
Àngth
-- )

378 if–
n
 == 0 ) {

379 
	`blowfish_¸y±_ecb
–
˘x
, 
BLOWFISH_ENCRYPT
, 
n⁄˚_cou¡î
,

380 
°ªam_block
 );

382  
i
 = 
BLOWFISH_BLOCKSIZE
; i > 0; i-- )

383 if–++
n⁄˚_cou¡î
[
i
 - 1] != 0 )

386 
c
 = *
öput
++;

387 *
ouçut
++ = ()–
c
 ^ 
°ªam_block
[
n
] );

389 
n
 = (Ç + 1 ) % 
BLOWFISH_BLOCKSIZE
;

392 *
nc_off
 = 
n
;

395 
	}
}

398 c⁄° 
uöt32_t
 
	gS
[4][256] = {

	@polarssl/library/camellia.c

32 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

33 
	~"pﬁ¨s¶/c⁄fig.h
"

35 #ö˛udê
POLARSSL_CONFIG_FILE


38 #i‡
deföed
(
POLARSSL_CAMELLIA_C
)

40 
	~"pﬁ¨s¶/ˇmñlü.h
"

42 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

43 
	~"pﬁ¨s¶/∂©f‹m.h
"

45 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

48 #i‡!
deföed
(
POLARSSL_CAMELLIA_ALT
)

51 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

52 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

53 
	}
}

58 #i‚de‡
GET_UINT32_BE


59 
	#GET_UINT32_BE
(
n
,
b
,
i
) \

61 (
n
Ë–(
uöt32_t
Ë(
b
)[(
i
) ] << 24 ) \

62 | ( (
uöt32_t
Ë(
b
)[(
i
) + 1] << 16 ) \

63 | ( (
uöt32_t
Ë(
b
)[(
i
) + 2] << 8 ) \

64 | ( (
uöt32_t
Ë(
b
)[(
i
) + 3] ); \

65 }

	)

68 #i‚de‡
PUT_UINT32_BE


69 
	#PUT_UINT32_BE
(
n
,
b
,
i
) \

71 (
b
)[(
i
Ë] = (Ë–(
n
) >> 24 ); \

72 (
b
)[(
i
Ë+ 1] = (Ë–(
n
) >> 16 ); \

73 (
b
)[(
i
Ë+ 2] = (Ë–(
n
) >> 8 ); \

74 (
b
)[(
i
Ë+ 3] = (Ë–(
n
) ); \

75 }

	)

78 c⁄° 
	gSIGMA_CHARS
[6][8] =

88 #i‡
deföed
(
POLARSSL_CAMELLIA_SMALL_MEMORY
)

90 c⁄° 
	gFSb
[256] =

110 
	#SBOX1
(
n
Ë
FSb
[“)]

	)

111 
	#SBOX2
(
n
Ë()((
FSb
[“)] >> 7 ^ FSb[“)] << 1Ë& 0xff)

	)

112 
	#SBOX3
(
n
Ë()((
FSb
[“)] >> 1 ^ FSb[“)] << 7Ë& 0xff)

	)

113 
	#SBOX4
(
n
Ë
FSb
[(“Ë<< 1 ^ (nË>> 7Ë&0xff]

	)

117 c⁄° 
	gFSb
[256] =

137 c⁄° 
	gFSb2
[256] =

157 c⁄° 
	gFSb3
[256] =

177 c⁄° 
	gFSb4
[256] =

197 
	#SBOX1
(
n
Ë
FSb
[“)]

	)

198 
	#SBOX2
(
n
Ë
FSb2
[“)]

	)

199 
	#SBOX3
(
n
Ë
FSb3
[“)]

	)

200 
	#SBOX4
(
n
Ë
FSb4
[“)]

	)

204 c⁄° 
	gshi·s
[2][4][4] =

220 c⁄° sig√d 
	gödexes
[2][4][20] =

244 c⁄° sig√d 
	gå™•o£s
[2][20] =

263 
	#ROTL
(
DEST
, 
SRC
, 
SHIFT
) \

265 (
DEST
)[0] = (
SRC
)[0] << (
SHIFT
) ^ (SRC)[1] >> (32 - (SHIFT)); \

266 (
DEST
)[1] = (
SRC
)[1] << (
SHIFT
) ^ (SRC)[2] >> (32 - (SHIFT)); \

267 (
DEST
)[2] = (
SRC
)[2] << (
SHIFT
) ^ (SRC)[3] >> (32 - (SHIFT)); \

268 (
DEST
)[3] = (
SRC
)[3] << (
SHIFT
) ^ (SRC)[0] >> (32 - (SHIFT)); \

269 }

	)

271 
	#FL
(
XL
, 
XR
, 
KL
, 
KR
) \

273 (
XR
Ë((((
XL
Ë& (
KL
)) << 1) | (((XL) & (KL)) >> 31)) ^ (XR); \

274 (
XL
Ë((
XR
Ë| (
KR
)) ^ (XL); \

275 }

	)

277 
	#FLInv
(
YL
, 
YR
, 
KL
, 
KR
) \

279 (
YL
Ë((
YR
Ë| (
KR
)) ^ (YL); \

280 (
YR
Ë((((
YL
Ë& (
KL
)) << 1) | (((YL) & (KL)) >> 31)) ^ (YR); \

281 }

	)

283 
	#SHIFT_AND_PLACE
(
INDEX
, 
OFFSET
) \

285 
TK
[0] = 
KC
[(
OFFSET
) * 4 + 0]; \

286 
TK
[1] = 
KC
[(
OFFSET
) * 4 + 1]; \

287 
TK
[2] = 
KC
[(
OFFSET
) * 4 + 2]; \

288 
TK
[3] = 
KC
[(
OFFSET
) * 4 + 3]; \

290  
i
 = 1; i <= 4; i++ ) \

291 if–
shi·s
[(
INDEX
)][(
OFFSET
)][
i
 -1] ) \

292 
	`ROTL
(
TK
 + 
i
 * 4, TK, ( 15 * i ) % 32); \

294  
i
 = 0; i < 20; i++ ) \

295 if–
ödexes
[(
INDEX
)][(
OFFSET
)][
i
] != -1 ) { \

296 
RK
[
ödexes
[(
INDEX
)][(
OFFSET
)][
i
]] = 
TK
[ i ]; \

298 }

	)

300 
	$ˇmñlü_„i°ñ
–c⁄° 
uöt32_t
 
x
[2], c⁄° uöt32_à
k
[2],

301 
uöt32_t
 
z
[2])

303 
uöt32_t
 
I0
, 
I1
;

304 
I0
 = 
x
[0] ^ 
k
[0];

305 
I1
 = 
x
[1] ^ 
k
[1];

307 
I0
 = (
	`SBOX1
((I0 >> 24) & 0xFF) << 24) |

308 (
	`SBOX2
((
I0
 >> 16) & 0xFF) << 16) |

309 (
	`SBOX3
((
I0
 >> 8) & 0xFF) << 8) |

310 (
	`SBOX4
((
I0
 ) & 0xFF) );

311 
I1
 = (
	`SBOX2
((I1 >> 24) & 0xFF) << 24) |

312 (
	`SBOX3
((
I1
 >> 16) & 0xFF) << 16) |

313 (
	`SBOX4
((
I1
 >> 8) & 0xFF) << 8) |

314 (
	`SBOX1
((
I1
 ) & 0xFF) );

316 
I0
 ^(
I1
 << 8) | (I1 >> 24);

317 
I1
 ^(
I0
 << 16) | (I0 >> 16);

318 
I0
 ^(
I1
 >> 8) | (I1 << 24);

319 
I1
 ^(
I0
 >> 8) | (I0 << 24);

321 
z
[0] ^
I1
;

322 
z
[1] ^
I0
;

323 
	}
}

325 
	$ˇmñlü_öô
–
ˇmñlü_c⁄ãxt
 *
˘x
 )

327 
	`mem£t
–
˘x
, 0, –
ˇmñlü_c⁄ãxt
 ) );

328 
	}
}

330 
	$ˇmñlü_‰ì
–
ˇmñlü_c⁄ãxt
 *
˘x
 )

332 if–
˘x
 =
NULL
 )

335 
	`pﬁ¨s¶_zîoize
–
˘x
, –
ˇmñlü_c⁄ãxt
 ) );

336 
	}
}

341 
	$ˇmñlü_£tkey_íc
–
ˇmñlü_c⁄ãxt
 *
˘x
, c⁄° *
key
,

342 
keysize
 )

344 
idx
;

345 
size_t
 
i
;

346 
uöt32_t
 *
RK
;

347 
t
[64];

348 
uöt32_t
 
SIGMA
[6][2];

349 
uöt32_t
 
KC
[16];

350 
uöt32_t
 
TK
[20];

352 
RK
 = 
˘x
->
rk
;

354 
	`mem£t
–
t
, 0, 64 );

355 
	`mem£t
–
RK
, 0, (
˘x
->
rk
) );

357  
keysize
 )

359 128: 
˘x
->
ƒ
 = 3; 
idx
 = 0; ;

361 256: 
˘x
->
ƒ
 = 4; 
idx
 = 1; ;

362  : –
POLARSSL_ERR_CAMELLIA_INVALID_KEY_LENGTH
 );

365  
i
 = 0; i < 
keysize
 / 8; ++i )

366 
t
[
i
] = 
key
[i];

368 if–
keysize
 == 192 ) {

369  
i
 = 0; i < 8; i++ )

370 
t
[24 + 
i
] = ~t[16 + i];

376  
i
 = 0; i < 6; i++ ) {

377 
	`GET_UINT32_BE
–
SIGMA
[
i
][0], 
SIGMA_CHARS
[i], 0 );

378 
	`GET_UINT32_BE
–
SIGMA
[
i
][1], 
SIGMA_CHARS
[i], 4 );

385 
	`mem£t
–
KC
, 0, (KC) );

388  
i
 = 0; i < 8; i++ )

389 
	`GET_UINT32_BE
–
KC
[
i
], 
t
, i * 4 );

392  
i
 = 0; i < 4; ++i )

393 
KC
[8 + 
i
] = KC[i] ^ KC[4 + i];

395 
	`ˇmñlü_„i°ñ
–
KC
 + 8, 
SIGMA
[0], KC + 10 );

396 
	`ˇmñlü_„i°ñ
–
KC
 + 10, 
SIGMA
[1], KC + 8 );

398  
i
 = 0; i < 4; ++i )

399 
KC
[8 + 
i
] ^= KC[i];

401 
	`ˇmñlü_„i°ñ
–
KC
 + 8, 
SIGMA
[2], KC + 10 );

402 
	`ˇmñlü_„i°ñ
–
KC
 + 10, 
SIGMA
[3], KC + 8 );

404 if–
keysize
 > 128 ) {

406  
i
 = 0; i < 4; ++i )

407 
KC
[12 + 
i
] = KC[4 + i] ^ KC[8 + i];

409 
	`ˇmñlü_„i°ñ
–
KC
 + 12, 
SIGMA
[4], KC + 14 );

410 
	`ˇmñlü_„i°ñ
–
KC
 + 14, 
SIGMA
[5], KC + 12 );

418 
	`SHIFT_AND_PLACE
–
idx
, 0 );

421 if–
keysize
 > 128 ) {

422 
	`SHIFT_AND_PLACE
–
idx
, 1 );

426 
	`SHIFT_AND_PLACE
–
idx
, 2 );

429 if–
keysize
 > 128 ) {

430 
	`SHIFT_AND_PLACE
–
idx
, 3 );

434  
i
 = 0; i < 20; i++ ) {

435 if–
å™•o£s
[
idx
][
i
] != -1 ) {

436 
RK
[32 + 12 * 
idx
 + 
i
] = RK[
å™•o£s
[idx][i]];

441 
	}
}

446 
	$ˇmñlü_£tkey_dec
–
ˇmñlü_c⁄ãxt
 *
˘x
, c⁄° *
key
,

447 
keysize
 )

449 
idx
, 
ªt
;

450 
size_t
 
i
;

451 
ˇmñlü_c⁄ãxt
 
˘y
;

452 
uöt32_t
 *
RK
;

453 
uöt32_t
 *
SK
;

455 
	`ˇmñlü_öô
–&
˘y
 );

458 if––
ªt
 = 
	`ˇmñlü_£tkey_íc
–&
˘y
, 
key
, 
keysize
 ) ) )

459 
exô
;

461 
˘x
->
ƒ
 = 
˘y
.nr;

462 
idx
 = ( 
˘x
->
ƒ
 == 4 );

464 
RK
 = 
˘x
->
rk
;

465 
SK
 = 
˘y
.
rk
 + 24 * 2 + 8 * 
idx
 * 2;

467 *
RK
++ = *
SK
++;

468 *
RK
++ = *
SK
++;

469 *
RK
++ = *
SK
++;

470 *
RK
++ = *
SK
++;

472  
i
 = 22 + 8 * 
idx
, 
SK
 -= 6; i > 0; i--, SK -= 4 )

474 *
RK
++ = *
SK
++;

475 *
RK
++ = *
SK
++;

478 
SK
 -= 2;

480 *
RK
++ = *
SK
++;

481 *
RK
++ = *
SK
++;

482 *
RK
++ = *
SK
++;

483 *
RK
++ = *
SK
++;

485 
exô
:

486 
	`ˇmñlü_‰ì
–&
˘y
 );

488 –
ªt
 );

489 
	}
}

494 
	$ˇmñlü_¸y±_ecb
–
ˇmñlü_c⁄ãxt
 *
˘x
,

495 
mode
,

496 c⁄° 
öput
[16],

497 
ouçut
[16] )

499 
NR
;

500 
uöt32_t
 *
RK
, 
X
[4];

502 –(Ë
mode
 );

504 
NR
 = 
˘x
->
ƒ
;

505 
RK
 = 
˘x
->
rk
;

507 
	`GET_UINT32_BE
–
X
[0], 
öput
, 0 );

508 
	`GET_UINT32_BE
–
X
[1], 
öput
, 4 );

509 
	`GET_UINT32_BE
–
X
[2], 
öput
, 8 );

510 
	`GET_UINT32_BE
–
X
[3], 
öput
, 12 );

512 
X
[0] ^*
RK
++;

513 
X
[1] ^*
RK
++;

514 
X
[2] ^*
RK
++;

515 
X
[3] ^*
RK
++;

517  
NR
 ) {

518 --
NR
;

519 
	`ˇmñlü_„i°ñ
–
X
, 
RK
, X + 2 );

520 
RK
 += 2;

521 
	`ˇmñlü_„i°ñ
–
X
 + 2, 
RK
, X );

522 
RK
 += 2;

523 
	`ˇmñlü_„i°ñ
–
X
, 
RK
, X + 2 );

524 
RK
 += 2;

525 
	`ˇmñlü_„i°ñ
–
X
 + 2, 
RK
, X );

526 
RK
 += 2;

527 
	`ˇmñlü_„i°ñ
–
X
, 
RK
, X + 2 );

528 
RK
 += 2;

529 
	`ˇmñlü_„i°ñ
–
X
 + 2, 
RK
, X );

530 
RK
 += 2;

532 if–
NR
 ) {

533 
	`FL
(
X
[0], X[1], 
RK
[0], RK[1]);

534 
RK
 += 2;

535 
	`FLInv
(
X
[2], X[3], 
RK
[0], RK[1]);

536 
RK
 += 2;

540 
X
[2] ^*
RK
++;

541 
X
[3] ^*
RK
++;

542 
X
[0] ^*
RK
++;

543 
X
[1] ^*
RK
++;

545 
	`PUT_UINT32_BE
–
X
[2], 
ouçut
, 0 );

546 
	`PUT_UINT32_BE
–
X
[3], 
ouçut
, 4 );

547 
	`PUT_UINT32_BE
–
X
[0], 
ouçut
, 8 );

548 
	`PUT_UINT32_BE
–
X
[1], 
ouçut
, 12 );

551 
	}
}

553 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

557 
	$ˇmñlü_¸y±_cbc
–
ˇmñlü_c⁄ãxt
 *
˘x
,

558 
mode
,

559 
size_t
 
Àngth
,

560 
iv
[16],

561 c⁄° *
öput
,

562 *
ouçut
 )

564 
i
;

565 
ãmp
[16];

567 if–
Àngth
 % 16 )

568 –
POLARSSL_ERR_CAMELLIA_INVALID_INPUT_LENGTH
 );

570 if–
mode
 =
CAMELLIA_DECRYPT
 )

572  
Àngth
 > 0 )

574 
	`mem˝y
–
ãmp
, 
öput
, 16 );

575 
	`ˇmñlü_¸y±_ecb
–
˘x
, 
mode
, 
öput
, 
ouçut
 );

577  
i
 = 0; i < 16; i++ )

578 
ouçut
[
i
] = ()–ouçut[i] ^ 
iv
[i] );

580 
	`mem˝y
–
iv
, 
ãmp
, 16 );

582 
öput
 += 16;

583 
ouçut
 += 16;

584 
Àngth
 -= 16;

589  
Àngth
 > 0 )

591  
i
 = 0; i < 16; i++ )

592 
ouçut
[
i
] = ()–
öput
[i] ^ 
iv
[i] );

594 
	`ˇmñlü_¸y±_ecb
–
˘x
, 
mode
, 
ouçut
, output );

595 
	`mem˝y
–
iv
, 
ouçut
, 16 );

597 
öput
 += 16;

598 
ouçut
 += 16;

599 
Àngth
 -= 16;

604 
	}
}

607 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CFB
)

611 
	$ˇmñlü_¸y±_cfb128
–
ˇmñlü_c⁄ãxt
 *
˘x
,

612 
mode
,

613 
size_t
 
Àngth
,

614 
size_t
 *
iv_off
,

615 
iv
[16],

616 c⁄° *
öput
,

617 *
ouçut
 )

619 
c
;

620 
size_t
 
n
 = *
iv_off
;

622 if–
mode
 =
CAMELLIA_DECRYPT
 )

624  
Àngth
-- )

626 if–
n
 == 0 )

627 
	`ˇmñlü_¸y±_ecb
–
˘x
, 
CAMELLIA_ENCRYPT
, 
iv
, iv );

629 
c
 = *
öput
++;

630 *
ouçut
++ = ()–
c
 ^ 
iv
[
n
] );

631 
iv
[
n
] = (Ë
c
;

633 
n
 = (Ç + 1 ) & 0x0F;

638  
Àngth
-- )

640 if–
n
 == 0 )

641 
	`ˇmñlü_¸y±_ecb
–
˘x
, 
CAMELLIA_ENCRYPT
, 
iv
, iv );

643 
iv
[
n
] = *
ouçut
++ = ()–iv[n] ^ *
öput
++ );

645 
n
 = (Ç + 1 ) & 0x0F;

649 *
iv_off
 = 
n
;

652 
	}
}

655 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CTR
)

659 
	$ˇmñlü_¸y±_˘r
–
ˇmñlü_c⁄ãxt
 *
˘x
,

660 
size_t
 
Àngth
,

661 
size_t
 *
nc_off
,

662 
n⁄˚_cou¡î
[16],

663 
°ªam_block
[16],

664 c⁄° *
öput
,

665 *
ouçut
 )

667 
c
, 
i
;

668 
size_t
 
n
 = *
nc_off
;

670  
Àngth
-- )

672 if–
n
 == 0 ) {

673 
	`ˇmñlü_¸y±_ecb
–
˘x
, 
CAMELLIA_ENCRYPT
, 
n⁄˚_cou¡î
,

674 
°ªam_block
 );

676  
i
 = 16; i > 0; i-- )

677 if–++
n⁄˚_cou¡î
[
i
 - 1] != 0 )

680 
c
 = *
öput
++;

681 *
ouçut
++ = ()–
c
 ^ 
°ªam_block
[
n
] );

683 
n
 = (Ç + 1 ) & 0x0F;

686 *
nc_off
 = 
n
;

689 
	}
}

693 #i‡
deföed
(
POLARSSL_SELF_TEST
)

695 
	~<°dio.h
>

705 
	#CAMELLIA_TESTS_ECB
 2

	)

707 c⁄° 
	gˇmñlü_ã°_ecb_key
[3][
CAMELLIA_TESTS_ECB
][32] =

735 c⁄° 
	gˇmñlü_ã°_ecb_∂aö
[
CAMELLIA_TESTS_ECB
][16] =

743 c⁄° 
	gˇmñlü_ã°_ecb_cùhî
[3][
CAMELLIA_TESTS_ECB
][16] =

765 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

766 
	#CAMELLIA_TESTS_CBC
 3

	)

768 c⁄° 
	gˇmñlü_ã°_cbc_key
[3][32] =

783 c⁄° 
	gˇmñlü_ã°_cbc_iv
[16] =

789 c⁄° 
	gˇmñlü_ã°_cbc_∂aö
[
CAMELLIA_TESTS_CBC
][16] =

800 c⁄° 
	gˇmñlü_ã°_cbc_cùhî
[3][
CAMELLIA_TESTS_CBC
][16] =

829 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CTR
)

836 c⁄° 
	gˇmñlü_ã°_˘r_key
[3][16] =

846 c⁄° 
	gˇmñlü_ã°_˘r_n⁄˚_cou¡î
[3][16] =

856 c⁄° 
	gˇmñlü_ã°_˘r_±
[3][48] =

873 c⁄° 
	gˇmñlü_ã°_˘r_˘
[3][48] =

888 c⁄° 
	gˇmñlü_ã°_˘r_Àn
[3] =

895 
	$ˇmñlü_£lf_ã°
–
vîbo£
 )

897 
i
, 
j
, 
u
, 
v
;

898 
key
[32];

899 
buf
[64];

900 
§c
[16];

901 
d°
[16];

902 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
)

903 
iv
[16];

905 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CTR
)

906 
size_t
 
off£t
, 
Àn
;

907 
n⁄˚_cou¡î
[16];

908 
°ªam_block
[16];

911 
ˇmñlü_c⁄ãxt
 
˘x
;

913 
	`mem£t
–
key
, 0, 32 );

915  
j
 = 0; j < 6; j++ ) {

916 
u
 = 
j
 >> 1;

917 
v
 = 
j
 & 1;

919 if–
vîbo£
 != 0 )

920 
	`pﬁ¨s¶_¥ötf
–" CAMELLIA-ECB-%3d (%s): ", 128 + 
u
 * 64,

921 (
v
 =
CAMELLIA_DECRYPT
) ? "dec" : "enc");

923  
i
 = 0; i < 
CAMELLIA_TESTS_ECB
; i++ ) {

924 
	`mem˝y
–
key
, 
ˇmñlü_ã°_ecb_key
[
u
][
i
], 16 + 8 * u );

926 if–
v
 =
CAMELLIA_DECRYPT
 ) {

927 
	`ˇmñlü_£tkey_dec
–&
˘x
, 
key
, 128 + 
u
 * 64 );

928 
	`mem˝y
–
§c
, 
ˇmñlü_ã°_ecb_cùhî
[
u
][
i
], 16 );

929 
	`mem˝y
–
d°
, 
ˇmñlü_ã°_ecb_∂aö
[
i
], 16 );

931 
	`ˇmñlü_£tkey_íc
–&
˘x
, 
key
, 128 + 
u
 * 64 );

932 
	`mem˝y
–
§c
, 
ˇmñlü_ã°_ecb_∂aö
[
i
], 16 );

933 
	`mem˝y
–
d°
, 
ˇmñlü_ã°_ecb_cùhî
[
u
][
i
], 16 );

936 
	`ˇmñlü_¸y±_ecb
–&
˘x
, 
v
, 
§c
, 
buf
 );

938 if–
	`memcmp
–
buf
, 
d°
, 16 ) != 0 )

940 if–
vîbo£
 != 0 )

941 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

947 if–
vîbo£
 != 0 )

948 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

951 if–
vîbo£
 != 0 )

952 
	`pﬁ¨s¶_¥ötf
( "\n" );

954 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
)

958  
j
 = 0; j < 6; j++ )

960 
u
 = 
j
 >> 1;

961 
v
 = 
j
 & 1;

963 if–
vîbo£
 != 0 )

964 
	`pﬁ¨s¶_¥ötf
–" CAMELLIA-CBC-%3d (%s): ", 128 + 
u
 * 64,

965 –
v
 =
CAMELLIA_DECRYPT
 ) ? "dec" : "enc" );

967 
	`mem˝y
–
§c
, 
ˇmñlü_ã°_cbc_iv
, 16 );

968 
	`mem˝y
–
d°
, 
ˇmñlü_ã°_cbc_iv
, 16 );

969 
	`mem˝y
–
key
, 
ˇmñlü_ã°_cbc_key
[
u
], 16 + 8 * u );

971 if–
v
 =
CAMELLIA_DECRYPT
 ) {

972 
	`ˇmñlü_£tkey_dec
–&
˘x
, 
key
, 128 + 
u
 * 64 );

974 
	`ˇmñlü_£tkey_íc
–&
˘x
, 
key
, 128 + 
u
 * 64 );

977  
i
 = 0; i < 
CAMELLIA_TESTS_CBC
; i++ ) {

979 if–
v
 =
CAMELLIA_DECRYPT
 ) {

980 
	`mem˝y
–
iv
 , 
§c
, 16 );

981 
	`mem˝y
–
§c
, 
ˇmñlü_ã°_cbc_cùhî
[
u
][
i
], 16 );

982 
	`mem˝y
–
d°
, 
ˇmñlü_ã°_cbc_∂aö
[
i
], 16 );

984 
	`mem˝y
–
iv
 , 
d°
, 16 );

985 
	`mem˝y
–
§c
, 
ˇmñlü_ã°_cbc_∂aö
[
i
], 16 );

986 
	`mem˝y
–
d°
, 
ˇmñlü_ã°_cbc_cùhî
[
u
][
i
], 16 );

989 
	`ˇmñlü_¸y±_cbc
–&
˘x
, 
v
, 16, 
iv
, 
§c
, 
buf
 );

991 if–
	`memcmp
–
buf
, 
d°
, 16 ) != 0 )

993 if–
vîbo£
 != 0 )

994 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1000 if–
vîbo£
 != 0 )

1001 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

1005 if–
vîbo£
 != 0 )

1006 
	`pﬁ¨s¶_¥ötf
( "\n" );

1008 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CTR
)

1012  
i
 = 0; i < 6; i++ )

1014 
u
 = 
i
 >> 1;

1015 
v
 = 
i
 & 1;

1017 if–
vîbo£
 != 0 )

1018 
	`pﬁ¨s¶_¥ötf
( " CAMELLIA-CTR-128 (%s): ",

1019 –
v
 =
CAMELLIA_DECRYPT
 ) ? "dec" : "enc" );

1021 
	`mem˝y
–
n⁄˚_cou¡î
, 
ˇmñlü_ã°_˘r_n⁄˚_cou¡î
[
u
], 16 );

1022 
	`mem˝y
–
key
, 
ˇmñlü_ã°_˘r_key
[
u
], 16 );

1024 
off£t
 = 0;

1025 
	`ˇmñlü_£tkey_íc
–&
˘x
, 
key
, 128 );

1027 if–
v
 =
CAMELLIA_DECRYPT
 )

1029 
Àn
 = 
ˇmñlü_ã°_˘r_Àn
[
u
];

1030 
	`mem˝y
–
buf
, 
ˇmñlü_ã°_˘r_˘
[
u
], 
Àn
 );

1032 
	`ˇmñlü_¸y±_˘r
–&
˘x
, 
Àn
, &
off£t
, 
n⁄˚_cou¡î
, 
°ªam_block
,

1033 
buf
, buf );

1035 if–
	`memcmp
–
buf
, 
ˇmñlü_ã°_˘r_±
[
u
], 
Àn
 ) != 0 )

1037 if–
vîbo£
 != 0 )

1038 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1045 
Àn
 = 
ˇmñlü_ã°_˘r_Àn
[
u
];

1046 
	`mem˝y
–
buf
, 
ˇmñlü_ã°_˘r_±
[
u
], 
Àn
 );

1048 
	`ˇmñlü_¸y±_˘r
–&
˘x
, 
Àn
, &
off£t
, 
n⁄˚_cou¡î
, 
°ªam_block
,

1049 
buf
, buf );

1051 if–
	`memcmp
–
buf
, 
ˇmñlü_ã°_˘r_˘
[
u
], 
Àn
 ) != 0 )

1053 if–
vîbo£
 != 0 )

1054 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1060 if–
vîbo£
 != 0 )

1061 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

1064 if–
vîbo£
 != 0 )

1065 
	`pﬁ¨s¶_¥ötf
( "\n" );

1069 
	}
}

	@polarssl/library/ccm.c

35 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

36 
	~"pﬁ¨s¶/c⁄fig.h
"

38 #ö˛udê
POLARSSL_CONFIG_FILE


41 #i‡
deföed
(
POLARSSL_CCM_C
)

43 
	~"pﬁ¨s¶/ccm.h
"

46 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

47 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

48 
	}
}

50 
	#CCM_ENCRYPT
 0

	)

51 
	#CCM_DECRYPT
 1

	)

56 
	$ccm_öô
–
ccm_c⁄ãxt
 *
˘x
, 
cùhî_id_t
 
cùhî
,

57 c⁄° *
key
, 
keysize
 )

59 
ªt
;

60 c⁄° 
cùhî_öfo_t
 *
cùhî_öfo
;

62 
	`mem£t
–
˘x
, 0, –
ccm_c⁄ãxt
 ) );

64 
	`cùhî_öô
–&
˘x
->
cùhî_˘x
 );

66 
cùhî_öfo
 = 
	`cùhî_öfo_‰om_vÆues
–
cùhî
, 
keysize
, 
POLARSSL_MODE_ECB
 );

67 if–
cùhî_öfo
 =
NULL
 )

68 –
POLARSSL_ERR_CCM_BAD_INPUT
 );

70 if–
cùhî_öfo
->
block_size
 != 16 )

71 –
POLARSSL_ERR_CCM_BAD_INPUT
 );

73 if––
ªt
 = 
	`cùhî_öô_˘x
–&
˘x
->
cùhî_˘x
, 
cùhî_öfo
 ) ) != 0 )

74 –
ªt
 );

76 if––
ªt
 = 
	`cùhî_£tkey
–&
˘x
->
cùhî_˘x
, 
key
, 
keysize
,

77 
POLARSSL_ENCRYPT
 ) ) != 0 )

79 –
ªt
 );

83 
	}
}

88 
	$ccm_‰ì
–
ccm_c⁄ãxt
 *
˘x
 )

90 
	`cùhî_‰ì
–&
˘x
->
cùhî_˘x
 );

91 
	`pﬁ¨s¶_zîoize
–
˘x
, –
ccm_c⁄ãxt
 ) );

92 
	}
}

103 
	#UPDATE_CBC_MAC
 \

104  
i
 = 0; i < 16; i++ ) \

105 
y
[
i
] ^
b
[i]; \

107 if––
ªt
 = 
	`cùhî_upd©e
–&
˘x
->
cùhî_˘x
, 
y
, 16, y, &
ﬁí
 ) ) != 0 ) \

108 –
ªt
 );

	)

115 
	#CTR_CRYPT
–
d°
, 
§c
, 
Àn
 ) \

116 if––
ªt
 = 
	`cùhî_upd©e
–&
˘x
->
cùhî_˘x
, 
˘r
, 16, 
b
, &
ﬁí
 ) ) != 0 ) \

117 –
ªt
 ); \

119  
i
 = 0; i < 
Àn
; i++ ) \

120 
d°
[
i
] = 
§c
[i] ^ 
b
[i];

	)

125 
	$ccm_auth_¸y±
–
ccm_c⁄ãxt
 *
˘x
, 
mode
, 
size_t
 
Àngth
,

126 c⁄° *
iv
, 
size_t
 
iv_Àn
,

127 c⁄° *
add
, 
size_t
 
add_Àn
,

128 c⁄° *
öput
, *
ouçut
,

129 *
èg
, 
size_t
 
èg_Àn
 )

131 
ªt
;

132 
i
;

133 
q
 = 16 - 1 - 
iv_Àn
;

134 
size_t
 
Àn_À·
, 
ﬁí
;

135 
b
[16];

136 
y
[16];

137 
˘r
[16];

138 c⁄° *
§c
;

139 *
d°
;

146 if–
èg_Àn
 < 4 ||Åag_len > 16 ||Åag_len % 2 != 0 )

147 –
POLARSSL_ERR_CCM_BAD_INPUT
 );

150 if–
iv_Àn
 < 7 || iv_len > 13 )

151 –
POLARSSL_ERR_CCM_BAD_INPUT
 );

153 if–
add_Àn
 > 0xFF00 )

154 –
POLARSSL_ERR_CCM_BAD_INPUT
 );

168 
b
[0] = 0;

169 
b
[0] |–
add_Àn
 > 0 ) << 6;

170 
b
[0] |––
èg_Àn
 - 2 ) / 2 ) << 3;

171 
b
[0] |
q
 - 1;

173 
	`mem˝y
–
b
 + 1, 
iv
, 
iv_Àn
 );

175  
i
 = 0, 
Àn_À·
 = 
Àngth
; i < 
q
; i++,Üen_left >>= 8 )

176 
b
[15-
i
] = ()–
Àn_À·
 & 0xFF );

178 if–
Àn_À·
 > 0 )

179 –
POLARSSL_ERR_CCM_BAD_INPUT
 );

183 
	`mem£t
–
y
, 0, 16 );

184 
UPDATE_CBC_MAC
;

190 if–
add_Àn
 > 0 )

192 
size_t
 
u£_Àn
;

193 
Àn_À·
 = 
add_Àn
;

194 
§c
 = 
add
;

196 
	`mem£t
–
b
, 0, 16 );

197 
b
[0] = ()––
add_Àn
 >> 8 ) & 0xFF );

198 
b
[1] = ()––
add_Àn
 ) & 0xFF );

200 
u£_Àn
 = 
Àn_À·
 < 16 - 2 ?Üen_left : 16 - 2;

201 
	`mem˝y
–
b
 + 2, 
§c
, 
u£_Àn
 );

202 
Àn_À·
 -
u£_Àn
;

203 
§c
 +
u£_Àn
;

205 
UPDATE_CBC_MAC
;

207  
Àn_À·
 > 0 )

209 
u£_Àn
 = 
Àn_À·
 > 16 ? 16 :Üen_left;

211 
	`mem£t
–
b
, 0, 16 );

212 
	`mem˝y
–
b
, 
§c
, 
u£_Àn
 );

213 
UPDATE_CBC_MAC
;

215 
Àn_À·
 -
u£_Àn
;

216 
§c
 +
u£_Àn
;

230 
˘r
[0] = 
q
 - 1;

231 
	`mem˝y
–
˘r
 + 1, 
iv
, 
iv_Àn
 );

232 
	`mem£t
–
˘r
 + 1 + 
iv_Àn
, 0, 
q
 );

233 
˘r
[15] = 1;

241 
Àn_À·
 = 
Àngth
;

242 
§c
 = 
öput
;

243 
d°
 = 
ouçut
;

245  
Àn_À·
 > 0 )

247 
u£_Àn
 = 
Àn_À·
 > 16 ? 16 :Üen_left;

249 if–
mode
 =
CCM_ENCRYPT
 )

251 
	`mem£t
–
b
, 0, 16 );

252 
	`mem˝y
–
b
, 
§c
, 
u£_Àn
 );

253 
UPDATE_CBC_MAC
;

256 
	`CTR_CRYPT
–
d°
, 
§c
, 
u£_Àn
 );

258 if–
mode
 =
CCM_DECRYPT
 )

260 
	`mem£t
–
b
, 0, 16 );

261 
	`mem˝y
–
b
, 
d°
, 
u£_Àn
 );

262 
UPDATE_CBC_MAC
;

265 
d°
 +
u£_Àn
;

266 
§c
 +
u£_Àn
;

267 
Àn_À·
 -
u£_Àn
;

273  
i
 = 0; i < 
q
; i++ )

274 if–++
˘r
[15-
i
] != 0 )

281  
i
 = 0; i < 
q
; i++ )

282 
˘r
[15-
i
] = 0;

284 
	`CTR_CRYPT
–
y
, y, 16 );

285 
	`mem˝y
–
èg
, 
y
, 
èg_Àn
 );

288 
	}
}

293 
	$ccm_í¸y±_™d_èg
–
ccm_c⁄ãxt
 *
˘x
, 
size_t
 
Àngth
,

294 c⁄° *
iv
, 
size_t
 
iv_Àn
,

295 c⁄° *
add
, 
size_t
 
add_Àn
,

296 c⁄° *
öput
, *
ouçut
,

297 *
èg
, 
size_t
 
èg_Àn
 )

299 –
	`ccm_auth_¸y±
–
˘x
, 
CCM_ENCRYPT
, 
Àngth
, 
iv
, 
iv_Àn
,

300 
add
, 
add_Àn
, 
öput
, 
ouçut
, 
èg
, 
èg_Àn
 ) );

301 
	}
}

306 
	$ccm_auth_de¸y±
–
ccm_c⁄ãxt
 *
˘x
, 
size_t
 
Àngth
,

307 c⁄° *
iv
, 
size_t
 
iv_Àn
,

308 c⁄° *
add
, 
size_t
 
add_Àn
,

309 c⁄° *
öput
, *
ouçut
,

310 c⁄° *
èg
, 
size_t
 
èg_Àn
 )

312 
ªt
;

313 
check_èg
[16];

314 
i
;

315 
diff
;

317 if––
ªt
 = 
	`ccm_auth_¸y±
–
˘x
, 
CCM_DECRYPT
, 
Àngth
,

318 
iv
, 
iv_Àn
, 
add
, 
add_Àn
,

319 
öput
, 
ouçut
, 
check_èg
, 
èg_Àn
 ) ) != 0 )

321 –
ªt
 );

325  
diff
 = 0, 
i
 = 0; i < 
èg_Àn
; i++ )

326 
diff
 |
èg
[
i
] ^ 
check_èg
[i];

328 if–
diff
 != 0 )

330 
	`pﬁ¨s¶_zîoize
–
ouçut
, 
Àngth
 );

331 –
POLARSSL_ERR_CCM_AUTH_FAILED
 );

335 
	}
}

338 #i‡
deföed
(
POLARSSL_SELF_TEST
Ë&& deföed(
POLARSSL_AES_C
)

340 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

341 
	~"pﬁ¨s¶/∂©f‹m.h
"

343 
	~<°dio.h
>

344 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

351 
	#NB_TESTS
 3

	)

356 c⁄° 
	gkey
[] = {

361 c⁄° 
	giv
[] = {

366 c⁄° 
	gad
[] = {

372 c⁄° 
	gmsg
[] = {

378 c⁄° 
size_t
 
	giv_Àn
 [
NB_TESTS
] = { 7, 8, 12 };

379 c⁄° 
size_t
 
	gadd_Àn
[
NB_TESTS
] = { 8, 16, 20 };

380 c⁄° 
size_t
 
	gmsg_Àn
[
NB_TESTS
] = { 4, 16, 24 };

381 c⁄° 
size_t
 
	gèg_Àn
[
NB_TESTS
] = { 4, 6, 8 };

383 c⁄° 
	gªs
[
NB_TESTS
][32] = {

394 
	$ccm_£lf_ã°
–
vîbo£
 )

396 
ccm_c⁄ãxt
 
˘x
;

397 
out
[32];

398 
size_t
 
i
;

399 
ªt
;

401 if–
	`ccm_öô
–&
˘x
, 
POLARSSL_CIPHER_ID_AES
, 
key
, 8 *  key ) != 0 )

403 if–
vîbo£
 != 0 )

404 
	`pﬁ¨s¶_¥ötf
( " CCM: setup failed" );

409  
i
 = 0; i < 
NB_TESTS
; i++ )

411 if–
vîbo£
 != 0 )

412 
	`pﬁ¨s¶_¥ötf
–" CCM-AES #%u: ", (Ë
i
 + 1 );

414 
ªt
 = 
	`ccm_í¸y±_™d_èg
–&
˘x
, 
msg_Àn
[
i
],

415 
iv
, 
iv_Àn
[
i
], 
ad
, 
add_Àn
[i],

416 
msg
, 
out
,

417 
out
 + 
msg_Àn
[
i
], 
èg_Àn
[i] );

419 if–
ªt
 != 0 ||

420 
	`memcmp
–
out
, 
ªs
[
i
], 
msg_Àn
[i] + 
èg_Àn
[i] ) != 0 )

422 if–
vîbo£
 != 0 )

423 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

428 
ªt
 = 
	`ccm_auth_de¸y±
–&
˘x
, 
msg_Àn
[
i
],

429 
iv
, 
iv_Àn
[
i
], 
ad
, 
add_Àn
[i],

430 
ªs
[
i
], 
out
,

431 
ªs
[
i
] + 
msg_Àn
[i], 
èg_Àn
[i] );

433 if–
ªt
 != 0 ||

434 
	`memcmp
–
out
, 
msg
, 
msg_Àn
[
i
] ) != 0 )

436 if–
vîbo£
 != 0 )

437 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

442 if–
vîbo£
 != 0 )

443 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

446 
	`ccm_‰ì
–&
˘x
 );

448 if–
vîbo£
 != 0 )

449 
	`pﬁ¨s¶_¥ötf
( "\n" );

452 
	}
}

	@polarssl/library/certs.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_CERTS_C
)

34 #i‡
deföed
(
POLARSSL_ECDSA_C
)

35 
	#TEST_CA_CRT_EC
 \

50 "-----END CERTIFICATE-----\r\n"

	)

51 c⁄° 
	gã°_ˇ_¸t_ec
[] = 
TEST_CA_CRT_EC
;

53 c⁄° 
	gã°_ˇ_key_ec
[] =

64 c⁄° 
	gã°_ˇ_pwd_ec
[] = "PolarSSLTest";

66 c⁄° 
	gã°_§v_¸t_ec
[] =

82 c⁄° 
	gã°_§v_key_ec
[] =

89 c⁄° 
	gã°_˛i_¸t_ec
[] =

105 c⁄° 
	gã°_˛i_key_ec
[] =

112 
	#TEST_CA_CRT_EC


	)

115 #i‡
deföed
(
POLARSSL_RSA_C
)

116 
	#TEST_CA_CRT_RSA
 \

137 "-----END CERTIFICATE-----\r\n"

	)

138 c⁄° 
	gã°_ˇ_¸t_rß
[] = 
TEST_CA_CRT_RSA
;

140 c⁄° 
	gã°_ˇ_key_rß
[] =

172 c⁄° 
	gã°_ˇ_pwd_rß
[] = "PolarSSLTest";

174 c⁄° 
	gã°_§v_¸t_rß
[] =

196 c⁄° 
	gã°_§v_key_rß
[] =

226 c⁄° 
	gã°_˛i_¸t_rß
[] =

248 c⁄° 
	gã°_˛i_key_rß
[] =

277 
	#TEST_CA_CRT_RSA


	)

280 #i‡
deföed
(
POLARSSL_DHM_C
)

281 c⁄° 
	gã°_dhm_∑øms
[] =

290 c⁄° 
	gã°_ˇ_li°
[] = 
TEST_CA_CRT_RSA
 
TEST_CA_CRT_EC
;

292 #i‡
deföed
(
POLARSSL_RSA_C
)

293 c⁄° *
	gã°_ˇ_¸t
 = 
ã°_ˇ_¸t_rß
;

294 c⁄° *
	gã°_ˇ_key
 = 
ã°_ˇ_key_rß
;

295 c⁄° *
	gã°_ˇ_pwd
 = 
ã°_ˇ_pwd_rß
;

296 c⁄° *
	gã°_§v_¸t
 = 
ã°_§v_¸t_rß
;

297 c⁄° *
	gã°_§v_key
 = 
ã°_§v_key_rß
;

298 c⁄° *
	gã°_˛i_¸t
 = 
ã°_˛i_¸t_rß
;

299 c⁄° *
	gã°_˛i_key
 = 
ã°_˛i_key_rß
;

301 c⁄° *
	gã°_ˇ_¸t
 = 
ã°_ˇ_¸t_ec
;

302 c⁄° *
	gã°_ˇ_key
 = 
ã°_ˇ_key_ec
;

303 c⁄° *
	gã°_ˇ_pwd
 = 
ã°_ˇ_pwd_ec
;

304 c⁄° *
	gã°_§v_¸t
 = 
ã°_§v_¸t_ec
;

305 c⁄° *
	gã°_§v_key
 = 
ã°_§v_key_ec
;

306 c⁄° *
	gã°_˛i_¸t
 = 
ã°_˛i_¸t_ec
;

307 c⁄° *
	gã°_˛i_key
 = 
ã°_˛i_key_ec
;

	@polarssl/library/cipher.c

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"pﬁ¨s¶/c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 #i‡
deföed
(
POLARSSL_CIPHER_C
)

38 
	~"pﬁ¨s¶/cùhî.h
"

39 
	~"pﬁ¨s¶/cùhî_wøp.h
"

41 #i‡
deföed
(
POLARSSL_GCM_C
)

42 
	~"pﬁ¨s¶/gcm.h
"

45 #i‡
deföed
(
POLARSSL_CCM_C
)

46 
	~"pﬁ¨s¶/ccm.h
"

49 
	~<°dlib.h
>

51 #i‡
deföed
(
POLARSSL_ARC4_C
Ë|| deföed(
POLARSSL_CIPHER_NULL_CIPHER
)

52 
	#POLARSSL_CIPHER_MODE_STREAM


	)

55 #i‡
deföed
(
_MSC_VER
Ë&& !deföed 
°rˇ£cmp
 && !deföed(
EFIX64
) && \

56 !
	$deföed
(
EFI32
)

57 
	#°rˇ£cmp
 
_°ricmp


	)

61 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

62 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

63 
	}
}

65 
	gsuµ‹ãd_öô
 = 0;

67 c⁄° *
	$cùhî_li°
( )

69 c⁄° 
cùhî_deföôi⁄_t
 *
def
;

70 *
ty≥
;

72 if–! 
suµ‹ãd_öô
 )

74 
def
 = 
cùhî_deföôi⁄s
;

75 
ty≥
 = 
suµ‹ãd_cùhîs
;

77  
def
->
ty≥
 != 0 )

78 *
ty≥
++ = (*
def
++).type;

80 *
ty≥
 = 0;

82 
suµ‹ãd_öô
 = 1;

85 –
suµ‹ãd_cùhîs
 );

86 
	}
}

88 c⁄° 
cùhî_öfo_t
 *
	$cùhî_öfo_‰om_ty≥
–c⁄° 
cùhî_ty≥_t
 
cùhî_ty≥
 )

90 c⁄° 
cùhî_deföôi⁄_t
 *
def
;

92  
def
 = 
cùhî_deföôi⁄s
; def->
öfo
 !
NULL
; def++ )

93 if–
def
->
ty≥
 =
cùhî_ty≥
 )

94 –
def
->
öfo
 );

96 –
NULL
 );

97 
	}
}

99 c⁄° 
cùhî_öfo_t
 *
	$cùhî_öfo_‰om_°rög
–c⁄° *
cùhî_«me
 )

101 c⁄° 
cùhî_deföôi⁄_t
 *
def
;

103 if–
NULL
 =
cùhî_«me
 )

104 –
NULL
 );

106  
def
 = 
cùhî_deföôi⁄s
; def->
öfo
 !
NULL
; def++ )

107 if–! 
	`°rˇ£cmp
–
def
->
öfo
->
«me
, 
cùhî_«me
 ) )

108 –
def
->
öfo
 );

110 –
NULL
 );

111 
	}
}

113 c⁄° 
cùhî_öfo_t
 *
	$cùhî_öfo_‰om_vÆues
–c⁄° 
cùhî_id_t
 
cùhî_id
,

114 
key_Àngth
,

115 c⁄° 
cùhî_mode_t
 
mode
 )

117 c⁄° 
cùhî_deföôi⁄_t
 *
def
;

119  
def
 = 
cùhî_deföôi⁄s
; def->
öfo
 !
NULL
; def++ )

120 if–
def
->
öfo
->
ba£
->
cùhî
 =
cùhî_id
 &&

121 
def
->
öfo
->
key_Àngth
 == () key_length &&

122 
def
->
öfo
->
mode
 == mode )

123 –
def
->
öfo
 );

125 –
NULL
 );

126 
	}
}

128 
	$cùhî_öô
–
cùhî_c⁄ãxt_t
 *
˘x
 )

130 
	`mem£t
–
˘x
, 0, –
cùhî_c⁄ãxt_t
 ) );

131 
	}
}

133 
	$cùhî_‰ì
–
cùhî_c⁄ãxt_t
 *
˘x
 )

135 if–
˘x
 =
NULL
 )

138 if–
˘x
->
cùhî_˘x
 )

139 
˘x
->
cùhî_öfo
->
ba£
->
	`˘x_‰ì_func
–˘x->
cùhî_˘x
 );

141 
	`pﬁ¨s¶_zîoize
–
˘x
, (
cùhî_c⁄ãxt_t
) );

142 
	}
}

144 
	$cùhî_öô_˘x
–
cùhî_c⁄ãxt_t
 *
˘x
, c⁄° 
cùhî_öfo_t
 *
cùhî_öfo
 )

146 if–
NULL
 =
cùhî_öfo
 || NULL =
˘x
 )

147 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

149 
	`mem£t
–
˘x
, 0, –
cùhî_c⁄ãxt_t
 ) );

151 if–
NULL
 =–
˘x
->
cùhî_˘x
 = 
cùhî_öfo
->
ba£
->
	`˘x_Æloc_func
() ) )

152 –
POLARSSL_ERR_CIPHER_ALLOC_FAILED
 );

154 
˘x
->
cùhî_öfo
 = cipher_info;

156 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_WITH_PADDING
)

160 #i‡
	`deföed
(
POLARSSL_CIPHER_PADDING_PKCS7
)

161 (Ë
	`cùhî_£t_∑ddög_mode
–
˘x
, 
POLARSSL_PADDING_PKCS7
 );

163 (Ë
	`cùhî_£t_∑ddög_mode
–
˘x
, 
POLARSSL_PADDING_NONE
 );

168 
	}
}

171 
	$cùhî_‰ì_˘x
–
cùhî_c⁄ãxt_t
 *
˘x
 )

173 
	`cùhî_‰ì
–
˘x
 );

176 
	}
}

178 
	$cùhî_£tkey
–
cùhî_c⁄ãxt_t
 *
˘x
, c⁄° *
key
,

179 
key_Àngth
, c⁄° 
›î©i⁄_t
 
›î©i⁄
 )

181 if–
NULL
 =
˘x
 || NULL =˘x->
cùhî_öfo
 )

182 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

184 if––
˘x
->
cùhî_öfo
->
Êags
 & 
POLARSSL_CIPHER_VARIABLE_KEY_LEN
 ) == 0 &&

185 (Ë
˘x
->
cùhî_öfo
->
key_Àngth
 != key_length )

187 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

190 
˘x
->
key_Àngth
 = key_length;

191 
˘x
->
›î©i⁄
 = operation;

196 if–
POLARSSL_ENCRYPT
 =
›î©i⁄
 ||

197 
POLARSSL_MODE_CFB
 =
˘x
->
cùhî_öfo
->
mode
 ||

198 
POLARSSL_MODE_CTR
 =
˘x
->
cùhî_öfo
->
mode
 )

200  
˘x
->
cùhî_öfo
->
ba£
->
	`£tkey_íc_func
–˘x->
cùhî_˘x
, 
key
,

201 
˘x
->
key_Àngth
 );

204 if–
POLARSSL_DECRYPT
 =
›î©i⁄
 )

205  
˘x
->
cùhî_öfo
->
ba£
->
	`£tkey_dec_func
–˘x->
cùhî_˘x
, 
key
,

206 
˘x
->
key_Àngth
 );

208 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

209 
	}
}

211 
	$cùhî_£t_iv
–
cùhî_c⁄ãxt_t
 *
˘x
,

212 c⁄° *
iv
, 
size_t
 
iv_Àn
 )

214 
size_t
 
a˘uÆ_iv_size
;

216 if–
NULL
 =
˘x
 || NULL =˘x->
cùhî_öfo
 || NULL =
iv
 )

217 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

220 if–
iv_Àn
 > 
POLARSSL_MAX_IV_LENGTH
 )

221 –
POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE
 );

223 if––
˘x
->
cùhî_öfo
->
Êags
 & 
POLARSSL_CIPHER_VARIABLE_IV_LEN
 ) != 0 )

224 
a˘uÆ_iv_size
 = 
iv_Àn
;

227 
a˘uÆ_iv_size
 = 
˘x
->
cùhî_öfo
->
iv_size
;

230 if–
a˘uÆ_iv_size
 > 
iv_Àn
 )

231 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

234 
	`mem˝y
–
˘x
->
iv
, iv, 
a˘uÆ_iv_size
 );

235 
˘x
->
iv_size
 = 
a˘uÆ_iv_size
;

238 
	}
}

240 
	$cùhî_ª£t
–
cùhî_c⁄ãxt_t
 *
˘x
 )

242 if–
NULL
 =
˘x
 || NULL =˘x->
cùhî_öfo
 )

243 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

245 
˘x
->
u≈ro˚s£d_Àn
 = 0;

248 
	}
}

250 #i‡
deföed
(
POLARSSL_GCM_C
)

251 
	$cùhî_upd©e_ad
–
cùhî_c⁄ãxt_t
 *
˘x
,

252 c⁄° *
ad
, 
size_t
 
ad_Àn
 )

254 if–
NULL
 =
˘x
 || NULL =˘x->
cùhî_öfo
 )

255 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

257 if–
POLARSSL_MODE_GCM
 =
˘x
->
cùhî_öfo
->
mode
 )

259  
	`gcm_°¨ts
–(
gcm_c⁄ãxt
 *Ë
˘x
->
cùhî_˘x
, ctx->
›î©i⁄
,

260 
˘x
->
iv
, ctx->
iv_size
, 
ad
, 
ad_Àn
 );

264 
	}
}

267 
	$cùhî_upd©e
–
cùhî_c⁄ãxt_t
 *
˘x
, c⁄° *
öput
,

268 
size_t
 
ûí
, *
ouçut
, size_à*
ﬁí
 )

270 
ªt
;

272 if–
NULL
 =
˘x
 || NULL =˘x->
cùhî_öfo
 || NULL =
ﬁí
 )

274 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

277 *
ﬁí
 = 0;

279 if–
˘x
->
cùhî_öfo
->
mode
 =
POLARSSL_MODE_ECB
 )

281 if–
ûí
 !
	`cùhî_gë_block_size
–
˘x
 ) )

282 –
POLARSSL_ERR_CIPHER_FULL_BLOCK_EXPECTED
 );

284 *
ﬁí
 = 
ûí
;

286 if–0 !–
ªt
 = 
˘x
->
cùhî_öfo
->
ba£
->
	`ecb_func
–˘x->
cùhî_˘x
,

287 
˘x
->
›î©i⁄
, 
öput
, 
ouçut
 ) ) )

289 –
ªt
 );

295 #i‡
	`deföed
(
POLARSSL_GCM_C
)

296 if–
˘x
->
cùhî_öfo
->
mode
 =
POLARSSL_MODE_GCM
 )

298 *
ﬁí
 = 
ûí
;

299  
	`gcm_upd©e
–(
gcm_c⁄ãxt
 *Ë
˘x
->
cùhî_˘x
, 
ûí
, 
öput
,

300 
ouçut
 );

304 if–
öput
 =
ouçut
 &&

305 –
˘x
->
u≈ro˚s£d_Àn
 !0 || 
ûí
 % 
	`cùhî_gë_block_size
( ctx ) ) )

307 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

310 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
)

311 if–
˘x
->
cùhî_öfo
->
mode
 =
POLARSSL_MODE_CBC
 )

313 
size_t
 
c›y_Àn
 = 0;

318 if––
˘x
->
›î©i⁄
 =
POLARSSL_DECRYPT
 &&

319 
ûí
 + 
˘x
->
u≈ro˚s£d_Àn
 <
	`cùhî_gë_block_size
( ctx ) ) ||

320 –
˘x
->
›î©i⁄
 =
POLARSSL_ENCRYPT
 &&

321 
ûí
 + 
˘x
->
u≈ro˚s£d_Àn
 < 
	`cùhî_gë_block_size
( ctx ) ) )

323 
	`mem˝y
–&–
˘x
->
u≈ro˚s£d_d©a
[˘x->
u≈ro˚s£d_Àn
] ), 
öput
,

324 
ûí
 );

326 
˘x
->
u≈ro˚s£d_Àn
 +
ûí
;

333 if–
˘x
->
u≈ro˚s£d_Àn
 != 0 )

335 
c›y_Àn
 = 
	`cùhî_gë_block_size
–
˘x
 ) - ctx->
u≈ro˚s£d_Àn
;

337 
	`mem˝y
–&–
˘x
->
u≈ro˚s£d_d©a
[˘x->
u≈ro˚s£d_Àn
] ), 
öput
,

338 
c›y_Àn
 );

340 if–0 !–
ªt
 = 
˘x
->
cùhî_öfo
->
ba£
->
	`cbc_func
–˘x->
cùhî_˘x
,

341 
˘x
->
›î©i⁄
, 
	`cùhî_gë_block_size
–˘x ), ctx->
iv
,

342 
˘x
->
u≈ro˚s£d_d©a
, 
ouçut
 ) ) )

344 –
ªt
 );

347 *
ﬁí
 +
	`cùhî_gë_block_size
–
˘x
 );

348 
ouçut
 +
	`cùhî_gë_block_size
–
˘x
 );

349 
˘x
->
u≈ro˚s£d_Àn
 = 0;

351 
öput
 +
c›y_Àn
;

352 
ûí
 -
c›y_Àn
;

358 if–0 !
ûí
 )

360 
c›y_Àn
 = 
ûí
 % 
	`cùhî_gë_block_size
–
˘x
 );

361 if–
c›y_Àn
 =0 && 
˘x
->
›î©i⁄
 =
POLARSSL_DECRYPT
 )

362 
c›y_Àn
 = 
	`cùhî_gë_block_size
–
˘x
 );

364 
	`mem˝y
–
˘x
->
u≈ro˚s£d_d©a
, &–
öput
[
ûí
 - 
c›y_Àn
] ),

365 
c›y_Àn
 );

367 
˘x
->
u≈ro˚s£d_Àn
 +
c›y_Àn
;

368 
ûí
 -
c›y_Àn
;

374 if–
ûí
 )

376 if–0 !–
ªt
 = 
˘x
->
cùhî_öfo
->
ba£
->
	`cbc_func
–˘x->
cùhî_˘x
,

377 
˘x
->
›î©i⁄
, 
ûí
, ctx->
iv
, 
öput
, 
ouçut
 ) ) )

379 –
ªt
 );

382 *
ﬁí
 +
ûí
;

389 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CFB
)

390 if–
˘x
->
cùhî_öfo
->
mode
 =
POLARSSL_MODE_CFB
 )

392 if–0 !–
ªt
 = 
˘x
->
cùhî_öfo
->
ba£
->
	`cfb_func
–˘x->
cùhî_˘x
,

393 
˘x
->
›î©i⁄
, 
ûí
, &˘x->
u≈ro˚s£d_Àn
, ctx->
iv
,

394 
öput
, 
ouçut
 ) ) )

396 –
ªt
 );

399 *
ﬁí
 = 
ûí
;

405 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CTR
)

406 if–
˘x
->
cùhî_öfo
->
mode
 =
POLARSSL_MODE_CTR
 )

408 if–0 !–
ªt
 = 
˘x
->
cùhî_öfo
->
ba£
->
	`˘r_func
–˘x->
cùhî_˘x
,

409 
ûí
, &
˘x
->
u≈ro˚s£d_Àn
, ctx->
iv
,

410 
˘x
->
u≈ro˚s£d_d©a
, 
öput
, 
ouçut
 ) ) )

412 –
ªt
 );

415 *
ﬁí
 = 
ûí
;

421 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_STREAM
)

422 if–
˘x
->
cùhî_öfo
->
mode
 =
POLARSSL_MODE_STREAM
 )

424 if–0 !–
ªt
 = 
˘x
->
cùhî_öfo
->
ba£
->
	`°ªam_func
–˘x->
cùhî_˘x
,

425 
ûí
, 
öput
, 
ouçut
 ) ) )

427 –
ªt
 );

430 *
ﬁí
 = 
ûí
;

436 –
POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE
 );

437 
	}
}

439 #i‡
deföed
(
POLARSSL_CIPHER_MODE_WITH_PADDING
)

440 #i‡
deföed
(
POLARSSL_CIPHER_PADDING_PKCS7
)

444 
	$add_pkcs_∑ddög
–*
ouçut
, 
size_t
 
ouçut_Àn
,

445 
size_t
 
d©a_Àn
 )

447 
size_t
 
∑ddög_Àn
 = 
ouçut_Àn
 - 
d©a_Àn
;

448 
i
;

450  
i
 = 0; i < 
∑ddög_Àn
; i++ )

451 
ouçut
[
d©a_Àn
 + 
i
] = (Ë
∑ddög_Àn
;

452 
	}
}

454 
	$gë_pkcs_∑ddög
–*
öput
, 
size_t
 
öput_Àn
,

455 
size_t
 *
d©a_Àn
 )

457 
size_t
 
i
, 
∑d_idx
;

458 
∑ddög_Àn
, 
bad
 = 0;

460 if–
NULL
 =
öput
 || NULL =
d©a_Àn
 )

461 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

463 
∑ddög_Àn
 = 
öput
[
öput_Àn
 - 1];

464 *
d©a_Àn
 = 
öput_Àn
 - 
∑ddög_Àn
;

467 
bad
 |
∑ddög_Àn
 > 
öput_Àn
;

468 
bad
 |
∑ddög_Àn
 == 0;

472 
∑d_idx
 = 
öput_Àn
 - 
∑ddög_Àn
;

473  
i
 = 0; i < 
öput_Àn
; i++ )

474 
bad
 |–
öput
[
i
] ^ 
∑ddög_Àn
 ) * ( i >
∑d_idx
 );

476 –
POLARSSL_ERR_CIPHER_INVALID_PADDING
 * ( 
bad
 != 0 ) );

477 
	}
}

480 #i‡
deföed
(
POLARSSL_CIPHER_PADDING_ONE_AND_ZEROS
)

484 
	$add_⁄e_™d_zîos_∑ddög
–*
ouçut
,

485 
size_t
 
ouçut_Àn
, size_à
d©a_Àn
 )

487 
size_t
 
∑ddög_Àn
 = 
ouçut_Àn
 - 
d©a_Àn
;

488 
i
 = 0;

490 
ouçut
[
d©a_Àn
] = 0x80;

491  
i
 = 1; i < 
∑ddög_Àn
; i++ )

492 
ouçut
[
d©a_Àn
 + 
i
] = 0x00;

493 
	}
}

495 
	$gë_⁄e_™d_zîos_∑ddög
–*
öput
, 
size_t
 
öput_Àn
,

496 
size_t
 *
d©a_Àn
 )

498 
size_t
 
i
;

499 
d⁄e
 = 0, 
¥ev_d⁄e
, 
bad
;

501 if–
NULL
 =
öput
 || NULL =
d©a_Àn
 )

502 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

504 
bad
 = 0xFF;

505 *
d©a_Àn
 = 0;

506  
i
 = 
öput_Àn
; i > 0; i-- )

508 
¥ev_d⁄e
 = 
d⁄e
;

509 
d⁄e
 |–
öput
[
i
-1] != 0 );

510 *
d©a_Àn
 |–
i
 - 1 ) * ( 
d⁄e
 !
¥ev_d⁄e
 );

511 
bad
 &–
öput
[
i
-1] ^ 0x80 ) | ( 
d⁄e
 =
¥ev_d⁄e
 );

514 –
POLARSSL_ERR_CIPHER_INVALID_PADDING
 * ( 
bad
 != 0 ) );

516 
	}
}

519 #i‡
deföed
(
POLARSSL_CIPHER_PADDING_ZEROS_AND_LEN
)

523 
	$add_zîos_™d_Àn_∑ddög
–*
ouçut
,

524 
size_t
 
ouçut_Àn
, size_à
d©a_Àn
 )

526 
size_t
 
∑ddög_Àn
 = 
ouçut_Àn
 - 
d©a_Àn
;

527 
i
 = 0;

529  
i
 = 1; i < 
∑ddög_Àn
; i++ )

530 
ouçut
[
d©a_Àn
 + 
i
 - 1] = 0x00;

531 
ouçut
[
ouçut_Àn
 - 1] = (Ë
∑ddög_Àn
;

532 
	}
}

534 
	$gë_zîos_™d_Àn_∑ddög
–*
öput
, 
size_t
 
öput_Àn
,

535 
size_t
 *
d©a_Àn
 )

537 
size_t
 
i
, 
∑d_idx
;

538 
∑ddög_Àn
, 
bad
 = 0;

540 if–
NULL
 =
öput
 || NULL =
d©a_Àn
 )

541 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

543 
∑ddög_Àn
 = 
öput
[
öput_Àn
 - 1];

544 *
d©a_Àn
 = 
öput_Àn
 - 
∑ddög_Àn
;

547 
bad
 |
∑ddög_Àn
 > 
öput_Àn
;

548 
bad
 |
∑ddög_Àn
 == 0;

551 
∑d_idx
 = 
öput_Àn
 - 
∑ddög_Àn
;

552  
i
 = 0; i < 
öput_Àn
 - 1; i++ )

553 
bad
 |
öput
[
i
] * ( i >
∑d_idx
 );

555 –
POLARSSL_ERR_CIPHER_INVALID_PADDING
 * ( 
bad
 != 0 ) );

556 
	}
}

559 #i‡
deföed
(
POLARSSL_CIPHER_PADDING_ZEROS
)

563 
	$add_zîos_∑ddög
–*
ouçut
,

564 
size_t
 
ouçut_Àn
, size_à
d©a_Àn
 )

566 
size_t
 
i
;

568  
i
 = 
d©a_Àn
; i < 
ouçut_Àn
; i++ )

569 
ouçut
[
i
] = 0x00;

570 
	}
}

572 
	$gë_zîos_∑ddög
–*
öput
, 
size_t
 
öput_Àn
,

573 
size_t
 *
d©a_Àn
 )

575 
size_t
 
i
;

576 
d⁄e
 = 0, 
¥ev_d⁄e
;

578 if–
NULL
 =
öput
 || NULL =
d©a_Àn
 )

579 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

581 *
d©a_Àn
 = 0;

582  
i
 = 
öput_Àn
; i > 0; i-- )

584 
¥ev_d⁄e
 = 
d⁄e
;

585 
d⁄e
 |–
öput
[
i
-1] != 0 );

586 *
d©a_Àn
 |
i
 * ( 
d⁄e
 !
¥ev_d⁄e
 );

590 
	}
}

599 
	$gë_no_∑ddög
–*
öput
, 
size_t
 
öput_Àn
,

600 
size_t
 *
d©a_Àn
 )

602 if–
NULL
 =
öput
 || NULL =
d©a_Àn
 )

603 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

605 *
d©a_Àn
 = 
öput_Àn
;

608 
	}
}

611 
	$cùhî_föish
–
cùhî_c⁄ãxt_t
 *
˘x
,

612 *
ouçut
, 
size_t
 *
ﬁí
 )

614 if–
NULL
 =
˘x
 || NULL =˘x->
cùhî_öfo
 || NULL =
ﬁí
 )

615 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

617 *
ﬁí
 = 0;

619 if–
POLARSSL_MODE_CFB
 =
˘x
->
cùhî_öfo
->
mode
 ||

620 
POLARSSL_MODE_CTR
 =
˘x
->
cùhî_öfo
->
mode
 ||

621 
POLARSSL_MODE_GCM
 =
˘x
->
cùhî_öfo
->
mode
 ||

622 
POLARSSL_MODE_STREAM
 =
˘x
->
cùhî_öfo
->
mode
 )

627 if–
POLARSSL_MODE_ECB
 =
˘x
->
cùhî_öfo
->
mode
 )

629 if–
˘x
->
u≈ro˚s£d_Àn
 != 0 )

630 –
POLARSSL_ERR_CIPHER_FULL_BLOCK_EXPECTED
 );

635 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
)

636 if–
POLARSSL_MODE_CBC
 =
˘x
->
cùhî_öfo
->
mode
 )

638 
ªt
 = 0;

640 if–
POLARSSL_ENCRYPT
 =
˘x
->
›î©i⁄
 )

643 if–
NULL
 =
˘x
->
add_∑ddög
 )

645 if–0 !
˘x
->
u≈ro˚s£d_Àn
 )

646 –
POLARSSL_ERR_CIPHER_FULL_BLOCK_EXPECTED
 );

651 
˘x
->
	`add_∑ddög
–˘x->
u≈ro˚s£d_d©a
, 
	`cùhî_gë_iv_size
( ctx ),

652 
˘x
->
u≈ro˚s£d_Àn
 );

654 if–
	`cùhî_gë_block_size
–
˘x
 ) !˘x->
u≈ro˚s£d_Àn
 )

660 if–
NULL
 =
˘x
->
add_∑ddög
 && 0 =˘x->
u≈ro˚s£d_Àn
 )

663 –
POLARSSL_ERR_CIPHER_FULL_BLOCK_EXPECTED
 );

667 if–0 !–
ªt
 = 
˘x
->
cùhî_öfo
->
ba£
->
	`cbc_func
–˘x->
cùhî_˘x
,

668 
˘x
->
›î©i⁄
, 
	`cùhî_gë_block_size
–˘x ), ctx->
iv
,

669 
˘x
->
u≈ro˚s£d_d©a
, 
ouçut
 ) ) )

671 –
ªt
 );

675 if–
POLARSSL_DECRYPT
 =
˘x
->
›î©i⁄
 )

676  
˘x
->
	`gë_∑ddög
–
ouçut
, 
	`cùhî_gë_block_size
( ctx ),

677 
ﬁí
 );

680 *
ﬁí
 = 
	`cùhî_gë_block_size
–
˘x
 );

684 ((Ë
ouçut
);

687 –
POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE
 );

688 
	}
}

690 #i‡
deföed
(
POLARSSL_CIPHER_MODE_WITH_PADDING
)

691 
	$cùhî_£t_∑ddög_mode
–
cùhî_c⁄ãxt_t
 *
˘x
, 
cùhî_∑ddög_t
 
mode
 )

693 if–
NULL
 =
˘x
 ||

694 
POLARSSL_MODE_CBC
 !
˘x
->
cùhî_öfo
->
mode
 )

696 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

699  
mode
 )

701 #i‡
	`deföed
(
POLARSSL_CIPHER_PADDING_PKCS7
)

702 
POLARSSL_PADDING_PKCS7
:

703 
˘x
->
add_∑ddög
 = 
add_pkcs_∑ddög
;

704 
˘x
->
gë_∑ddög
 = 
gë_pkcs_∑ddög
;

707 #i‡
	`deföed
(
POLARSSL_CIPHER_PADDING_ONE_AND_ZEROS
)

708 
POLARSSL_PADDING_ONE_AND_ZEROS
:

709 
˘x
->
add_∑ddög
 = 
add_⁄e_™d_zîos_∑ddög
;

710 
˘x
->
gë_∑ddög
 = 
gë_⁄e_™d_zîos_∑ddög
;

713 #i‡
	`deföed
(
POLARSSL_CIPHER_PADDING_ZEROS_AND_LEN
)

714 
POLARSSL_PADDING_ZEROS_AND_LEN
:

715 
˘x
->
add_∑ddög
 = 
add_zîos_™d_Àn_∑ddög
;

716 
˘x
->
gë_∑ddög
 = 
gë_zîos_™d_Àn_∑ddög
;

719 #i‡
	`deföed
(
POLARSSL_CIPHER_PADDING_ZEROS
)

720 
POLARSSL_PADDING_ZEROS
:

721 
˘x
->
add_∑ddög
 = 
add_zîos_∑ddög
;

722 
˘x
->
gë_∑ddög
 = 
gë_zîos_∑ddög
;

725 
POLARSSL_PADDING_NONE
:

726 
˘x
->
add_∑ddög
 = 
NULL
;

727 
˘x
->
gë_∑ddög
 = 
gë_no_∑ddög
;

731 –
POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE
 );

735 
	}
}

738 #i‡
deföed
(
POLARSSL_GCM_C
)

739 
	$cùhî_wrôe_èg
–
cùhî_c⁄ãxt_t
 *
˘x
,

740 *
èg
, 
size_t
 
èg_Àn
 )

742 if–
NULL
 =
˘x
 || NULL =˘x->
cùhî_öfo
 || NULL =
èg
 )

743 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

745 if–
POLARSSL_ENCRYPT
 !
˘x
->
›î©i⁄
 )

746 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

748 if–
POLARSSL_MODE_GCM
 =
˘x
->
cùhî_öfo
->
mode
 )

749  
	`gcm_föish
–(
gcm_c⁄ãxt
 *Ë
˘x
->
cùhî_˘x
, 
èg
, 
èg_Àn
 );

752 
	}
}

754 
	$cùhî_check_èg
–
cùhî_c⁄ãxt_t
 *
˘x
,

755 c⁄° *
èg
, 
size_t
 
èg_Àn
 )

757 
ªt
;

759 if–
NULL
 =
˘x
 || NULL =˘x->
cùhî_öfo
 ||

760 
POLARSSL_DECRYPT
 !
˘x
->
›î©i⁄
 )

762 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

765 if–
POLARSSL_MODE_GCM
 =
˘x
->
cùhî_öfo
->
mode
 )

767 
check_èg
[16];

768 
size_t
 
i
;

769 
diff
;

771 if–
èg_Àn
 > –
check_èg
 ) )

772 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

774 if–0 !–
ªt
 = 
	`gcm_föish
–(
gcm_c⁄ãxt
 *Ë
˘x
->
cùhî_˘x
,

775 
check_èg
, 
èg_Àn
 ) ) )

777 –
ªt
 );

781  
diff
 = 0, 
i
 = 0; i < 
èg_Àn
; i++ )

782 
diff
 |
èg
[
i
] ^ 
check_èg
[i];

784 if–
diff
 != 0 )

785 –
POLARSSL_ERR_CIPHER_AUTH_FAILED
 );

791 
	}
}

797 
	$cùhî_¸y±
–
cùhî_c⁄ãxt_t
 *
˘x
,

798 c⁄° *
iv
, 
size_t
 
iv_Àn
,

799 c⁄° *
öput
, 
size_t
 
ûí
,

800 *
ouçut
, 
size_t
 *
ﬁí
 )

802 
ªt
;

803 
size_t
 
föish_ﬁí
;

805 if––
ªt
 = 
	`cùhî_£t_iv
–
˘x
, 
iv
, 
iv_Àn
 ) ) != 0 )

806 –
ªt
 );

808 if––
ªt
 = 
	`cùhî_ª£t
–
˘x
 ) ) != 0 )

809 –
ªt
 );

811 if––
ªt
 = 
	`cùhî_upd©e
–
˘x
, 
öput
, 
ûí
, 
ouçut
, 
ﬁí
 ) ) != 0 )

812 –
ªt
 );

814 if––
ªt
 = 
	`cùhî_föish
–
˘x
, 
ouçut
 + *
ﬁí
, &
föish_ﬁí
 ) ) != 0 )

815 –
ªt
 );

817 *
ﬁí
 +
föish_ﬁí
;

820 
	}
}

822 #i‡
deföed
(
POLARSSL_CIPHER_MODE_AEAD
)

826 
	$cùhî_auth_í¸y±
–
cùhî_c⁄ãxt_t
 *
˘x
,

827 c⁄° *
iv
, 
size_t
 
iv_Àn
,

828 c⁄° *
ad
, 
size_t
 
ad_Àn
,

829 c⁄° *
öput
, 
size_t
 
ûí
,

830 *
ouçut
, 
size_t
 *
ﬁí
,

831 *
èg
, 
size_t
 
èg_Àn
 )

833 #i‡
	`deföed
(
POLARSSL_GCM_C
)

834 if–
POLARSSL_MODE_GCM
 =
˘x
->
cùhî_öfo
->
mode
 )

836 *
ﬁí
 = 
ûí
;

837 –
	`gcm_¸y±_™d_èg
–
˘x
->
cùhî_˘x
, 
GCM_ENCRYPT
, 
ûí
,

838 
iv
, 
iv_Àn
, 
ad
, 
ad_Àn
, 
öput
, 
ouçut
,

839 
èg_Àn
, 
èg
 ) );

842 #i‡
	`deföed
(
POLARSSL_CCM_C
)

843 if–
POLARSSL_MODE_CCM
 =
˘x
->
cùhî_öfo
->
mode
 )

845 *
ﬁí
 = 
ûí
;

846 –
	`ccm_í¸y±_™d_èg
–
˘x
->
cùhî_˘x
, 
ûí
,

847 
iv
, 
iv_Àn
, 
ad
, 
ad_Àn
, 
öput
, 
ouçut
,

848 
èg
, 
èg_Àn
 ) );

852 –
POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE
 );

853 
	}
}

858 
	$cùhî_auth_de¸y±
–
cùhî_c⁄ãxt_t
 *
˘x
,

859 c⁄° *
iv
, 
size_t
 
iv_Àn
,

860 c⁄° *
ad
, 
size_t
 
ad_Àn
,

861 c⁄° *
öput
, 
size_t
 
ûí
,

862 *
ouçut
, 
size_t
 *
ﬁí
,

863 c⁄° *
èg
, 
size_t
 
èg_Àn
 )

865 #i‡
	`deföed
(
POLARSSL_GCM_C
)

866 if–
POLARSSL_MODE_GCM
 =
˘x
->
cùhî_öfo
->
mode
 )

868 
ªt
;

870 *
ﬁí
 = 
ûí
;

871 
ªt
 = 
	`gcm_auth_de¸y±
–
˘x
->
cùhî_˘x
, 
ûí
,

872 
iv
, 
iv_Àn
, 
ad
, 
ad_Àn
,

873 
èg
, 
èg_Àn
, 
öput
, 
ouçut
 );

875 if–
ªt
 =
POLARSSL_ERR_GCM_AUTH_FAILED
 )

876 
ªt
 = 
POLARSSL_ERR_CIPHER_AUTH_FAILED
;

878 –
ªt
 );

881 #i‡
	`deföed
(
POLARSSL_CCM_C
)

882 if–
POLARSSL_MODE_CCM
 =
˘x
->
cùhî_öfo
->
mode
 )

884 
ªt
;

886 *
ﬁí
 = 
ûí
;

887 
ªt
 = 
	`ccm_auth_de¸y±
–
˘x
->
cùhî_˘x
, 
ûí
,

888 
iv
, 
iv_Àn
, 
ad
, 
ad_Àn
,

889 
öput
, 
ouçut
, 
èg
, 
èg_Àn
 );

891 if–
ªt
 =
POLARSSL_ERR_CCM_AUTH_FAILED
 )

892 
ªt
 = 
POLARSSL_ERR_CIPHER_AUTH_FAILED
;

894 –
ªt
 );

898 –
POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE
 );

899 
	}
}

903 #i‡
deföed
(
POLARSSL_SELF_TEST
)

908 
	$cùhî_£lf_ã°
–
vîbo£
 )

910 ((Ë
vîbo£
);

913 
	}
}

	@polarssl/library/cipher_wrap.c

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"pﬁ¨s¶/c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 #i‡
deföed
(
POLARSSL_CIPHER_C
)

38 
	~"pﬁ¨s¶/cùhî_wøp.h
"

40 #i‡
deföed
(
POLARSSL_AES_C
)

41 
	~"pﬁ¨s¶/´s.h
"

44 #i‡
deföed
(
POLARSSL_ARC4_C
)

45 
	~"pﬁ¨s¶/¨c4.h
"

48 #i‡
deföed
(
POLARSSL_CAMELLIA_C
)

49 
	~"pﬁ¨s¶/ˇmñlü.h
"

52 #i‡
deföed
(
POLARSSL_DES_C
)

53 
	~"pﬁ¨s¶/des.h
"

56 #i‡
deföed
(
POLARSSL_BLOWFISH_C
)

57 
	~"pﬁ¨s¶/blowfish.h
"

60 #i‡
deföed
(
POLARSSL_GCM_C
)

61 
	~"pﬁ¨s¶/gcm.h
"

64 #i‡
deföed
(
POLARSSL_CCM_C
)

65 
	~"pﬁ¨s¶/ccm.h
"

68 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

69 
	~"pﬁ¨s¶/∂©f‹m.h
"

71 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

72 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

75 
	~<°dlib.h
>

77 #i‡
deföed
(
POLARSSL_GCM_C
)

79 *
	$gcm_˘x_Æloc
( )

81  
	`pﬁ¨s¶_mÆloc
––
gcm_c⁄ãxt
 ) );

82 
	}
}

84 
	$gcm_˘x_‰ì
–*
˘x
 )

86 
	`gcm_‰ì
–
˘x
 );

87 
	`pﬁ¨s¶_‰ì
–
˘x
 );

88 
	}
}

91 #i‡
deföed
(
POLARSSL_CCM_C
)

93 *
	$ccm_˘x_Æloc
( )

95  
	`pﬁ¨s¶_mÆloc
––
ccm_c⁄ãxt
 ) );

96 
	}
}

98 
	$ccm_˘x_‰ì
–*
˘x
 )

100 
	`ccm_‰ì
–
˘x
 );

101 
	`pﬁ¨s¶_‰ì
–
˘x
 );

102 
	}
}

105 #i‡
deföed
(
POLARSSL_AES_C
)

107 
	$´s_¸y±_ecb_wøp
–*
˘x
, 
›î©i⁄_t
 
›î©i⁄
,

108 c⁄° *
öput
, *
ouçut
 )

110  
	`´s_¸y±_ecb
–(
´s_c⁄ãxt
 *Ë
˘x
, 
›î©i⁄
, 
öput
, 
ouçut
 );

111 
	}
}

113 
	$´s_¸y±_cbc_wøp
–*
˘x
, 
›î©i⁄_t
 
›î©i⁄
, 
size_t
 
Àngth
,

114 *
iv
, c⁄° *
öput
, *
ouçut
 )

116 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
)

117  
	`´s_¸y±_cbc
–(
´s_c⁄ãxt
 *Ë
˘x
, 
›î©i⁄
, 
Àngth
, 
iv
, 
öput
,

118 
ouçut
 );

120 ((Ë
˘x
);

121 ((Ë
›î©i⁄
);

122 ((Ë
Àngth
);

123 ((Ë
iv
);

124 ((Ë
öput
);

125 ((Ë
ouçut
);

127 –
POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE
 );

129 
	}
}

131 
	$´s_¸y±_cfb128_wøp
–*
˘x
, 
›î©i⁄_t
 
›î©i⁄
,

132 
size_t
 
Àngth
, size_à*
iv_off
, *
iv
,

133 c⁄° *
öput
, *
ouçut
 )

135 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CFB
)

136  
	`´s_¸y±_cfb128
–(
´s_c⁄ãxt
 *Ë
˘x
, 
›î©i⁄
, 
Àngth
, 
iv_off
, 
iv
,

137 
öput
, 
ouçut
 );

139 ((Ë
˘x
);

140 ((Ë
›î©i⁄
);

141 ((Ë
Àngth
);

142 ((Ë
iv_off
);

143 ((Ë
iv
);

144 ((Ë
öput
);

145 ((Ë
ouçut
);

147 –
POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE
 );

149 
	}
}

151 
	$´s_¸y±_˘r_wøp
–*
˘x
, 
size_t
 
Àngth
, size_à*
nc_off
,

152 *
n⁄˚_cou¡î
, *
°ªam_block
,

153 c⁄° *
öput
, *
ouçut
 )

155 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CTR
)

156  
	`´s_¸y±_˘r
–(
´s_c⁄ãxt
 *Ë
˘x
, 
Àngth
, 
nc_off
, 
n⁄˚_cou¡î
,

157 
°ªam_block
, 
öput
, 
ouçut
 );

159 ((Ë
˘x
);

160 ((Ë
Àngth
);

161 ((Ë
nc_off
);

162 ((Ë
n⁄˚_cou¡î
);

163 ((Ë
°ªam_block
);

164 ((Ë
öput
);

165 ((Ë
ouçut
);

167 –
POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE
 );

169 
	}
}

171 
	$´s_£tkey_dec_wøp
–*
˘x
, c⁄° *
key
,

172 
key_Àngth
 )

174  
	`´s_£tkey_dec
–(
´s_c⁄ãxt
 *Ë
˘x
, 
key
, 
key_Àngth
 );

175 
	}
}

177 
	$´s_£tkey_íc_wøp
–*
˘x
, c⁄° *
key
,

178 
key_Àngth
 )

180  
	`´s_£tkey_íc
–(
´s_c⁄ãxt
 *Ë
˘x
, 
key
, 
key_Àngth
 );

181 
	}
}

183 * 
	$´s_˘x_Æloc
( )

185 
´s_c⁄ãxt
 *
´s
 = (´s_c⁄ãxà*Ë
	`pﬁ¨s¶_mÆloc
( (áes_context ) );

187 if–
´s
 =
NULL
 )

188 –
NULL
 );

190 
	`´s_öô
–
´s
 );

192 –
´s
 );

193 
	}
}

195 
	$´s_˘x_‰ì
–*
˘x
 )

197 
	`´s_‰ì
–(
´s_c⁄ãxt
 *Ë
˘x
 );

198 
	`pﬁ¨s¶_‰ì
–
˘x
 );

199 
	}
}

201 c⁄° 
cùhî_ba£_t
 
	g´s_öfo
 = {

202 
POLARSSL_CIPHER_ID_AES
,

203 
´s_¸y±_ecb_wøp
,

204 
´s_¸y±_cbc_wøp
,

205 
´s_¸y±_cfb128_wøp
,

206 
´s_¸y±_˘r_wøp
,

207 
NULL
,

208 
´s_£tkey_íc_wøp
,

209 
´s_£tkey_dec_wøp
,

210 
´s_˘x_Æloc
,

211 
´s_˘x_‰ì


214 c⁄° 
cùhî_öfo_t
 
	g´s_128_ecb_öfo
 = {

215 
POLARSSL_CIPHER_AES_128_ECB
,

216 
POLARSSL_MODE_ECB
,

222 &
´s_öfo


225 c⁄° 
cùhî_öfo_t
 
	g´s_192_ecb_öfo
 = {

226 
POLARSSL_CIPHER_AES_192_ECB
,

227 
POLARSSL_MODE_ECB
,

233 &
´s_öfo


236 c⁄° 
cùhî_öfo_t
 
	g´s_256_ecb_öfo
 = {

237 
POLARSSL_CIPHER_AES_256_ECB
,

238 
POLARSSL_MODE_ECB
,

244 &
´s_öfo


247 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

248 c⁄° 
cùhî_öfo_t
 
	g´s_128_cbc_öfo
 = {

249 
POLARSSL_CIPHER_AES_128_CBC
,

250 
POLARSSL_MODE_CBC
,

256 &
´s_öfo


259 c⁄° 
cùhî_öfo_t
 
	g´s_192_cbc_öfo
 = {

260 
POLARSSL_CIPHER_AES_192_CBC
,

261 
POLARSSL_MODE_CBC
,

267 &
´s_öfo


270 c⁄° 
cùhî_öfo_t
 
	g´s_256_cbc_öfo
 = {

271 
POLARSSL_CIPHER_AES_256_CBC
,

272 
POLARSSL_MODE_CBC
,

278 &
´s_öfo


282 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CFB
)

283 c⁄° 
cùhî_öfo_t
 
	g´s_128_cfb128_öfo
 = {

284 
POLARSSL_CIPHER_AES_128_CFB128
,

285 
POLARSSL_MODE_CFB
,

291 &
´s_öfo


294 c⁄° 
cùhî_öfo_t
 
	g´s_192_cfb128_öfo
 = {

295 
POLARSSL_CIPHER_AES_192_CFB128
,

296 
POLARSSL_MODE_CFB
,

302 &
´s_öfo


305 c⁄° 
cùhî_öfo_t
 
	g´s_256_cfb128_öfo
 = {

306 
POLARSSL_CIPHER_AES_256_CFB128
,

307 
POLARSSL_MODE_CFB
,

313 &
´s_öfo


317 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CTR
)

318 c⁄° 
cùhî_öfo_t
 
	g´s_128_˘r_öfo
 = {

319 
POLARSSL_CIPHER_AES_128_CTR
,

320 
POLARSSL_MODE_CTR
,

326 &
´s_öfo


329 c⁄° 
cùhî_öfo_t
 
	g´s_192_˘r_öfo
 = {

330 
POLARSSL_CIPHER_AES_192_CTR
,

331 
POLARSSL_MODE_CTR
,

337 &
´s_öfo


340 c⁄° 
cùhî_öfo_t
 
	g´s_256_˘r_öfo
 = {

341 
POLARSSL_CIPHER_AES_256_CTR
,

342 
POLARSSL_MODE_CTR
,

348 &
´s_öfo


352 #i‡
deföed
(
POLARSSL_GCM_C
)

353 
	$gcm_´s_£tkey_wøp
–*
˘x
, c⁄° *
key
,

354 
key_Àngth
 )

356  
	`gcm_öô
–(
gcm_c⁄ãxt
 *Ë
˘x
, 
POLARSSL_CIPHER_ID_AES
,

357 
key
, 
key_Àngth
 );

358 
	}
}

360 c⁄° 
cùhî_ba£_t
 
	ggcm_´s_öfo
 = {

361 
POLARSSL_CIPHER_ID_AES
,

362 
NULL
,

363 
NULL
,

364 
NULL
,

365 
NULL
,

366 
NULL
,

367 
gcm_´s_£tkey_wøp
,

368 
gcm_´s_£tkey_wøp
,

369 
gcm_˘x_Æloc
,

370 
gcm_˘x_‰ì
,

373 c⁄° 
cùhî_öfo_t
 
	g´s_128_gcm_öfo
 = {

374 
POLARSSL_CIPHER_AES_128_GCM
,

375 
POLARSSL_MODE_GCM
,

379 
POLARSSL_CIPHER_VARIABLE_IV_LEN
,

381 &
gcm_´s_öfo


384 c⁄° 
cùhî_öfo_t
 
	g´s_192_gcm_öfo
 = {

385 
POLARSSL_CIPHER_AES_192_GCM
,

386 
POLARSSL_MODE_GCM
,

390 
POLARSSL_CIPHER_VARIABLE_IV_LEN
,

392 &
gcm_´s_öfo


395 c⁄° 
cùhî_öfo_t
 
	g´s_256_gcm_öfo
 = {

396 
POLARSSL_CIPHER_AES_256_GCM
,

397 
POLARSSL_MODE_GCM
,

401 
POLARSSL_CIPHER_VARIABLE_IV_LEN
,

403 &
gcm_´s_öfo


407 #i‡
deföed
(
POLARSSL_CCM_C
)

408 
	$ccm_´s_£tkey_wøp
–*
˘x
, c⁄° *
key
,

409 
key_Àngth
 )

411  
	`ccm_öô
–(
ccm_c⁄ãxt
 *Ë
˘x
, 
POLARSSL_CIPHER_ID_AES
,

412 
key
, 
key_Àngth
 );

413 
	}
}

415 c⁄° 
cùhî_ba£_t
 
	gccm_´s_öfo
 = {

416 
POLARSSL_CIPHER_ID_AES
,

417 
NULL
,

418 
NULL
,

419 
NULL
,

420 
NULL
,

421 
NULL
,

422 
ccm_´s_£tkey_wøp
,

423 
ccm_´s_£tkey_wøp
,

424 
ccm_˘x_Æloc
,

425 
ccm_˘x_‰ì
,

428 c⁄° 
cùhî_öfo_t
 
	g´s_128_ccm_öfo
 = {

429 
POLARSSL_CIPHER_AES_128_CCM
,

430 
POLARSSL_MODE_CCM
,

434 
POLARSSL_CIPHER_VARIABLE_IV_LEN
,

436 &
ccm_´s_öfo


439 c⁄° 
cùhî_öfo_t
 
	g´s_192_ccm_öfo
 = {

440 
POLARSSL_CIPHER_AES_192_CCM
,

441 
POLARSSL_MODE_CCM
,

445 
POLARSSL_CIPHER_VARIABLE_IV_LEN
,

447 &
ccm_´s_öfo


450 c⁄° 
cùhî_öfo_t
 
	g´s_256_ccm_öfo
 = {

451 
POLARSSL_CIPHER_AES_256_CCM
,

452 
POLARSSL_MODE_CCM
,

456 
POLARSSL_CIPHER_VARIABLE_IV_LEN
,

458 &
ccm_´s_öfo


464 #i‡
deföed
(
POLARSSL_CAMELLIA_C
)

466 
	$ˇmñlü_¸y±_ecb_wøp
–*
˘x
, 
›î©i⁄_t
 
›î©i⁄
,

467 c⁄° *
öput
, *
ouçut
 )

469  
	`ˇmñlü_¸y±_ecb
–(
ˇmñlü_c⁄ãxt
 *Ë
˘x
, 
›î©i⁄
, 
öput
,

470 
ouçut
 );

471 
	}
}

473 
	$ˇmñlü_¸y±_cbc_wøp
–*
˘x
, 
›î©i⁄_t
 
›î©i⁄
,

474 
size_t
 
Àngth
, *
iv
,

475 c⁄° *
öput
, *
ouçut
 )

477 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
)

478  
	`ˇmñlü_¸y±_cbc
–(
ˇmñlü_c⁄ãxt
 *Ë
˘x
, 
›î©i⁄
, 
Àngth
, 
iv
,

479 
öput
, 
ouçut
 );

481 ((Ë
˘x
);

482 ((Ë
›î©i⁄
);

483 ((Ë
Àngth
);

484 ((Ë
iv
);

485 ((Ë
öput
);

486 ((Ë
ouçut
);

488 –
POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE
 );

490 
	}
}

492 
	$ˇmñlü_¸y±_cfb128_wøp
–*
˘x
, 
›î©i⁄_t
 
›î©i⁄
,

493 
size_t
 
Àngth
, size_à*
iv_off
, *
iv
,

494 c⁄° *
öput
, *
ouçut
 )

496 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CFB
)

497  
	`ˇmñlü_¸y±_cfb128
–(
ˇmñlü_c⁄ãxt
 *Ë
˘x
, 
›î©i⁄
, 
Àngth
,

498 
iv_off
, 
iv
, 
öput
, 
ouçut
 );

500 ((Ë
˘x
);

501 ((Ë
›î©i⁄
);

502 ((Ë
Àngth
);

503 ((Ë
iv_off
);

504 ((Ë
iv
);

505 ((Ë
öput
);

506 ((Ë
ouçut
);

508 –
POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE
 );

510 
	}
}

512 
	$ˇmñlü_¸y±_˘r_wøp
–*
˘x
, 
size_t
 
Àngth
, size_à*
nc_off
,

513 *
n⁄˚_cou¡î
, *
°ªam_block
,

514 c⁄° *
öput
, *
ouçut
 )

516 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CTR
)

517  
	`ˇmñlü_¸y±_˘r
–(
ˇmñlü_c⁄ãxt
 *Ë
˘x
, 
Àngth
, 
nc_off
,

518 
n⁄˚_cou¡î
, 
°ªam_block
, 
öput
, 
ouçut
 );

520 ((Ë
˘x
);

521 ((Ë
Àngth
);

522 ((Ë
nc_off
);

523 ((Ë
n⁄˚_cou¡î
);

524 ((Ë
°ªam_block
);

525 ((Ë
öput
);

526 ((Ë
ouçut
);

528 –
POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE
 );

530 
	}
}

532 
	$ˇmñlü_£tkey_dec_wøp
–*
˘x
, c⁄° *
key
,

533 
key_Àngth
 )

535  
	`ˇmñlü_£tkey_dec
–(
ˇmñlü_c⁄ãxt
 *Ë
˘x
, 
key
, 
key_Àngth
 );

536 
	}
}

538 
	$ˇmñlü_£tkey_íc_wøp
–*
˘x
, c⁄° *
key
,

539 
key_Àngth
 )

541  
	`ˇmñlü_£tkey_íc
–(
ˇmñlü_c⁄ãxt
 *Ë
˘x
, 
key
, 
key_Àngth
 );

542 
	}
}

544 * 
	$ˇmñlü_˘x_Æloc
( )

546 
ˇmñlü_c⁄ãxt
 *
˘x
;

547 
˘x
 = (
ˇmñlü_c⁄ãxt
 *Ë
	`pﬁ¨s¶_mÆloc
( ( camellia_context ) );

549 if–
˘x
 =
NULL
 )

550 –
NULL
 );

552 
	`ˇmñlü_öô
–
˘x
 );

554 –
˘x
 );

555 
	}
}

557 
	$ˇmñlü_˘x_‰ì
–*
˘x
 )

559 
	`ˇmñlü_‰ì
–(
ˇmñlü_c⁄ãxt
 *Ë
˘x
 );

560 
	`pﬁ¨s¶_‰ì
–
˘x
 );

561 
	}
}

563 c⁄° 
cùhî_ba£_t
 
	gˇmñlü_öfo
 = {

564 
POLARSSL_CIPHER_ID_CAMELLIA
,

565 
ˇmñlü_¸y±_ecb_wøp
,

566 
ˇmñlü_¸y±_cbc_wøp
,

567 
ˇmñlü_¸y±_cfb128_wøp
,

568 
ˇmñlü_¸y±_˘r_wøp
,

569 
NULL
,

570 
ˇmñlü_£tkey_íc_wøp
,

571 
ˇmñlü_£tkey_dec_wøp
,

572 
ˇmñlü_˘x_Æloc
,

573 
ˇmñlü_˘x_‰ì


576 c⁄° 
cùhî_öfo_t
 
	gˇmñlü_128_ecb_öfo
 = {

577 
POLARSSL_CIPHER_CAMELLIA_128_ECB
,

578 
POLARSSL_MODE_ECB
,

584 &
ˇmñlü_öfo


587 c⁄° 
cùhî_öfo_t
 
	gˇmñlü_192_ecb_öfo
 = {

588 
POLARSSL_CIPHER_CAMELLIA_192_ECB
,

589 
POLARSSL_MODE_ECB
,

595 &
ˇmñlü_öfo


598 c⁄° 
cùhî_öfo_t
 
	gˇmñlü_256_ecb_öfo
 = {

599 
POLARSSL_CIPHER_CAMELLIA_256_ECB
,

600 
POLARSSL_MODE_ECB
,

606 &
ˇmñlü_öfo


609 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

610 c⁄° 
cùhî_öfo_t
 
	gˇmñlü_128_cbc_öfo
 = {

611 
POLARSSL_CIPHER_CAMELLIA_128_CBC
,

612 
POLARSSL_MODE_CBC
,

618 &
ˇmñlü_öfo


621 c⁄° 
cùhî_öfo_t
 
	gˇmñlü_192_cbc_öfo
 = {

622 
POLARSSL_CIPHER_CAMELLIA_192_CBC
,

623 
POLARSSL_MODE_CBC
,

629 &
ˇmñlü_öfo


632 c⁄° 
cùhî_öfo_t
 
	gˇmñlü_256_cbc_öfo
 = {

633 
POLARSSL_CIPHER_CAMELLIA_256_CBC
,

634 
POLARSSL_MODE_CBC
,

640 &
ˇmñlü_öfo


644 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CFB
)

645 c⁄° 
cùhî_öfo_t
 
	gˇmñlü_128_cfb128_öfo
 = {

646 
POLARSSL_CIPHER_CAMELLIA_128_CFB128
,

647 
POLARSSL_MODE_CFB
,

653 &
ˇmñlü_öfo


656 c⁄° 
cùhî_öfo_t
 
	gˇmñlü_192_cfb128_öfo
 = {

657 
POLARSSL_CIPHER_CAMELLIA_192_CFB128
,

658 
POLARSSL_MODE_CFB
,

664 &
ˇmñlü_öfo


667 c⁄° 
cùhî_öfo_t
 
	gˇmñlü_256_cfb128_öfo
 = {

668 
POLARSSL_CIPHER_CAMELLIA_256_CFB128
,

669 
POLARSSL_MODE_CFB
,

675 &
ˇmñlü_öfo


679 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CTR
)

680 c⁄° 
cùhî_öfo_t
 
	gˇmñlü_128_˘r_öfo
 = {

681 
POLARSSL_CIPHER_CAMELLIA_128_CTR
,

682 
POLARSSL_MODE_CTR
,

688 &
ˇmñlü_öfo


691 c⁄° 
cùhî_öfo_t
 
	gˇmñlü_192_˘r_öfo
 = {

692 
POLARSSL_CIPHER_CAMELLIA_192_CTR
,

693 
POLARSSL_MODE_CTR
,

699 &
ˇmñlü_öfo


702 c⁄° 
cùhî_öfo_t
 
	gˇmñlü_256_˘r_öfo
 = {

703 
POLARSSL_CIPHER_CAMELLIA_256_CTR
,

704 
POLARSSL_MODE_CTR
,

710 &
ˇmñlü_öfo


714 #i‡
deföed
(
POLARSSL_GCM_C
)

715 
	$gcm_ˇmñlü_£tkey_wøp
–*
˘x
, c⁄° *
key
,

716 
key_Àngth
 )

718  
	`gcm_öô
–(
gcm_c⁄ãxt
 *Ë
˘x
, 
POLARSSL_CIPHER_ID_CAMELLIA
,

719 
key
, 
key_Àngth
 );

720 
	}
}

722 c⁄° 
cùhî_ba£_t
 
	ggcm_ˇmñlü_öfo
 = {

723 
POLARSSL_CIPHER_ID_CAMELLIA
,

724 
NULL
,

725 
NULL
,

726 
NULL
,

727 
NULL
,

728 
NULL
,

729 
gcm_ˇmñlü_£tkey_wøp
,

730 
gcm_ˇmñlü_£tkey_wøp
,

731 
gcm_˘x_Æloc
,

732 
gcm_˘x_‰ì
,

735 c⁄° 
cùhî_öfo_t
 
	gˇmñlü_128_gcm_öfo
 = {

736 
POLARSSL_CIPHER_CAMELLIA_128_GCM
,

737 
POLARSSL_MODE_GCM
,

741 
POLARSSL_CIPHER_VARIABLE_IV_LEN
,

743 &
gcm_ˇmñlü_öfo


746 c⁄° 
cùhî_öfo_t
 
	gˇmñlü_192_gcm_öfo
 = {

747 
POLARSSL_CIPHER_CAMELLIA_192_GCM
,

748 
POLARSSL_MODE_GCM
,

752 
POLARSSL_CIPHER_VARIABLE_IV_LEN
,

754 &
gcm_ˇmñlü_öfo


757 c⁄° 
cùhî_öfo_t
 
	gˇmñlü_256_gcm_öfo
 = {

758 
POLARSSL_CIPHER_CAMELLIA_256_GCM
,

759 
POLARSSL_MODE_GCM
,

763 
POLARSSL_CIPHER_VARIABLE_IV_LEN
,

765 &
gcm_ˇmñlü_öfo


769 #i‡
deföed
(
POLARSSL_CCM_C
)

770 
	$ccm_ˇmñlü_£tkey_wøp
–*
˘x
, c⁄° *
key
,

771 
key_Àngth
 )

773  
	`ccm_öô
–(
ccm_c⁄ãxt
 *Ë
˘x
, 
POLARSSL_CIPHER_ID_CAMELLIA
,

774 
key
, 
key_Àngth
 );

775 
	}
}

777 c⁄° 
cùhî_ba£_t
 
	gccm_ˇmñlü_öfo
 = {

778 
POLARSSL_CIPHER_ID_CAMELLIA
,

779 
NULL
,

780 
NULL
,

781 
NULL
,

782 
NULL
,

783 
NULL
,

784 
ccm_ˇmñlü_£tkey_wøp
,

785 
ccm_ˇmñlü_£tkey_wøp
,

786 
ccm_˘x_Æloc
,

787 
ccm_˘x_‰ì
,

790 c⁄° 
cùhî_öfo_t
 
	gˇmñlü_128_ccm_öfo
 = {

791 
POLARSSL_CIPHER_CAMELLIA_128_CCM
,

792 
POLARSSL_MODE_CCM
,

796 
POLARSSL_CIPHER_VARIABLE_IV_LEN
,

798 &
ccm_ˇmñlü_öfo


801 c⁄° 
cùhî_öfo_t
 
	gˇmñlü_192_ccm_öfo
 = {

802 
POLARSSL_CIPHER_CAMELLIA_192_CCM
,

803 
POLARSSL_MODE_CCM
,

807 
POLARSSL_CIPHER_VARIABLE_IV_LEN
,

809 &
ccm_ˇmñlü_öfo


812 c⁄° 
cùhî_öfo_t
 
	gˇmñlü_256_ccm_öfo
 = {

813 
POLARSSL_CIPHER_CAMELLIA_256_CCM
,

814 
POLARSSL_MODE_CCM
,

818 
POLARSSL_CIPHER_VARIABLE_IV_LEN
,

820 &
ccm_ˇmñlü_öfo


826 #i‡
deföed
(
POLARSSL_DES_C
)

828 
	$des_¸y±_ecb_wøp
–*
˘x
, 
›î©i⁄_t
 
›î©i⁄
,

829 c⁄° *
öput
, *
ouçut
 )

831 ((Ë
›î©i⁄
);

832  
	`des_¸y±_ecb
–(
des_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ouçut
 );

833 
	}
}

835 
	$des3_¸y±_ecb_wøp
–*
˘x
, 
›î©i⁄_t
 
›î©i⁄
,

836 c⁄° *
öput
, *
ouçut
 )

838 ((Ë
›î©i⁄
);

839  
	`des3_¸y±_ecb
–(
des3_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ouçut
 );

840 
	}
}

842 
	$des_¸y±_cbc_wøp
–*
˘x
, 
›î©i⁄_t
 
›î©i⁄
, 
size_t
 
Àngth
,

843 *
iv
, c⁄° *
öput
, *
ouçut
 )

845 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
)

846  
	`des_¸y±_cbc
–(
des_c⁄ãxt
 *Ë
˘x
, 
›î©i⁄
, 
Àngth
, 
iv
, 
öput
,

847 
ouçut
 );

849 ((Ë
˘x
);

850 ((Ë
›î©i⁄
);

851 ((Ë
Àngth
);

852 ((Ë
iv
);

853 ((Ë
öput
);

854 ((Ë
ouçut
);

856 –
POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE
 );

858 
	}
}

860 
	$des3_¸y±_cbc_wøp
–*
˘x
, 
›î©i⁄_t
 
›î©i⁄
, 
size_t
 
Àngth
,

861 *
iv
, c⁄° *
öput
, *
ouçut
 )

863 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
)

864  
	`des3_¸y±_cbc
–(
des3_c⁄ãxt
 *Ë
˘x
, 
›î©i⁄
, 
Àngth
, 
iv
, 
öput
,

865 
ouçut
 );

867 ((Ë
˘x
);

868 ((Ë
›î©i⁄
);

869 ((Ë
Àngth
);

870 ((Ë
iv
);

871 ((Ë
öput
);

872 ((Ë
ouçut
);

874 –
POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE
 );

876 
	}
}

878 
	$des_£tkey_dec_wøp
–*
˘x
, c⁄° *
key
,

879 
key_Àngth
 )

881 ((Ë
key_Àngth
);

883  
	`des_£tkey_dec
–(
des_c⁄ãxt
 *Ë
˘x
, 
key
 );

884 
	}
}

886 
	$des_£tkey_íc_wøp
–*
˘x
, c⁄° *
key
,

887 
key_Àngth
 )

889 ((Ë
key_Àngth
);

891  
	`des_£tkey_íc
–(
des_c⁄ãxt
 *Ë
˘x
, 
key
 );

892 
	}
}

894 
	$des3_£t2key_dec_wøp
–*
˘x
, c⁄° *
key
,

895 
key_Àngth
 )

897 ((Ë
key_Àngth
);

899  
	`des3_£t2key_dec
–(
des3_c⁄ãxt
 *Ë
˘x
, 
key
 );

900 
	}
}

902 
	$des3_£t2key_íc_wøp
–*
˘x
, c⁄° *
key
,

903 
key_Àngth
 )

905 ((Ë
key_Àngth
);

907  
	`des3_£t2key_íc
–(
des3_c⁄ãxt
 *Ë
˘x
, 
key
 );

908 
	}
}

910 
	$des3_£t3key_dec_wøp
–*
˘x
, c⁄° *
key
,

911 
key_Àngth
 )

913 ((Ë
key_Àngth
);

915  
	`des3_£t3key_dec
–(
des3_c⁄ãxt
 *Ë
˘x
, 
key
 );

916 
	}
}

918 
	$des3_£t3key_íc_wøp
–*
˘x
, c⁄° *
key
,

919 
key_Àngth
 )

921 ((Ë
key_Àngth
);

923  
	`des3_£t3key_íc
–(
des3_c⁄ãxt
 *Ë
˘x
, 
key
 );

924 
	}
}

926 * 
	$des_˘x_Æloc
( )

928 
des_c⁄ãxt
 *
des
 = (des_c⁄ãxà*Ë
	`pﬁ¨s¶_mÆloc
( ( des_context ) );

930 if–
des
 =
NULL
 )

931 –
NULL
 );

933 
	`des_öô
–
des
 );

935 –
des
 );

936 
	}
}

938 
	$des_˘x_‰ì
–*
˘x
 )

940 
	`des_‰ì
–(
des_c⁄ãxt
 *Ë
˘x
 );

941 
	`pﬁ¨s¶_‰ì
–
˘x
 );

942 
	}
}

944 * 
	$des3_˘x_Æloc
( )

946 
des3_c⁄ãxt
 *
des3
;

947 
des3
 = (
des3_c⁄ãxt
 *Ë
	`pﬁ¨s¶_mÆloc
( ( des3_context ) );

949 if–
des3
 =
NULL
 )

950 –
NULL
 );

952 
	`des3_öô
–
des3
 );

954 –
des3
 );

955 
	}
}

957 
	$des3_˘x_‰ì
–*
˘x
 )

959 
	`des3_‰ì
–(
des3_c⁄ãxt
 *Ë
˘x
 );

960 
	`pﬁ¨s¶_‰ì
–
˘x
 );

961 
	}
}

963 c⁄° 
cùhî_ba£_t
 
	gdes_öfo
 = {

964 
POLARSSL_CIPHER_ID_DES
,

965 
des_¸y±_ecb_wøp
,

966 
des_¸y±_cbc_wøp
,

967 
NULL
,

968 
NULL
,

969 
NULL
,

970 
des_£tkey_íc_wøp
,

971 
des_£tkey_dec_wøp
,

972 
des_˘x_Æloc
,

973 
des_˘x_‰ì


976 c⁄° 
cùhî_öfo_t
 
	gdes_ecb_öfo
 = {

977 
POLARSSL_CIPHER_DES_ECB
,

978 
POLARSSL_MODE_ECB
,

979 
POLARSSL_KEY_LENGTH_DES
,

984 &
des_öfo


987 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

988 c⁄° 
cùhî_öfo_t
 
	gdes_cbc_öfo
 = {

989 
POLARSSL_CIPHER_DES_CBC
,

990 
POLARSSL_MODE_CBC
,

991 
POLARSSL_KEY_LENGTH_DES
,

996 &
des_öfo


1000 c⁄° 
cùhî_ba£_t
 
	gdes_ede_öfo
 = {

1001 
POLARSSL_CIPHER_ID_DES
,

1002 
des3_¸y±_ecb_wøp
,

1003 
des3_¸y±_cbc_wøp
,

1004 
NULL
,

1005 
NULL
,

1006 
NULL
,

1007 
des3_£t2key_íc_wøp
,

1008 
des3_£t2key_dec_wøp
,

1009 
des3_˘x_Æloc
,

1010 
des3_˘x_‰ì


1013 c⁄° 
cùhî_öfo_t
 
	gdes_ede_ecb_öfo
 = {

1014 
POLARSSL_CIPHER_DES_EDE_ECB
,

1015 
POLARSSL_MODE_ECB
,

1016 
POLARSSL_KEY_LENGTH_DES_EDE
,

1021 &
des_ede_öfo


1024 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1025 c⁄° 
cùhî_öfo_t
 
	gdes_ede_cbc_öfo
 = {

1026 
POLARSSL_CIPHER_DES_EDE_CBC
,

1027 
POLARSSL_MODE_CBC
,

1028 
POLARSSL_KEY_LENGTH_DES_EDE
,

1033 &
des_ede_öfo


1037 c⁄° 
cùhî_ba£_t
 
	gdes_ede3_öfo
 = {

1038 
POLARSSL_CIPHER_ID_DES
,

1039 
des3_¸y±_ecb_wøp
,

1040 
des3_¸y±_cbc_wøp
,

1041 
NULL
,

1042 
NULL
,

1043 
NULL
,

1044 
des3_£t3key_íc_wøp
,

1045 
des3_£t3key_dec_wøp
,

1046 
des3_˘x_Æloc
,

1047 
des3_˘x_‰ì


1050 c⁄° 
cùhî_öfo_t
 
	gdes_ede3_ecb_öfo
 = {

1051 
POLARSSL_CIPHER_DES_EDE3_ECB
,

1052 
POLARSSL_MODE_ECB
,

1053 
POLARSSL_KEY_LENGTH_DES_EDE3
,

1058 &
des_ede3_öfo


1060 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1061 c⁄° 
cùhî_öfo_t
 
	gdes_ede3_cbc_öfo
 = {

1062 
POLARSSL_CIPHER_DES_EDE3_CBC
,

1063 
POLARSSL_MODE_CBC
,

1064 
POLARSSL_KEY_LENGTH_DES_EDE3
,

1069 &
des_ede3_öfo


1074 #i‡
deföed
(
POLARSSL_BLOWFISH_C
)

1076 
	$blowfish_¸y±_ecb_wøp
–*
˘x
, 
›î©i⁄_t
 
›î©i⁄
,

1077 c⁄° *
öput
, *
ouçut
 )

1079  
	`blowfish_¸y±_ecb
–(
blowfish_c⁄ãxt
 *Ë
˘x
, 
›î©i⁄
, 
öput
,

1080 
ouçut
 );

1081 
	}
}

1083 
	$blowfish_¸y±_cbc_wøp
–*
˘x
, 
›î©i⁄_t
 
›î©i⁄
,

1084 
size_t
 
Àngth
, *
iv
, c⁄° *
öput
,

1085 *
ouçut
 )

1087 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1088  
	`blowfish_¸y±_cbc
–(
blowfish_c⁄ãxt
 *Ë
˘x
, 
›î©i⁄
, 
Àngth
, 
iv
,

1089 
öput
, 
ouçut
 );

1091 ((Ë
˘x
);

1092 ((Ë
›î©i⁄
);

1093 ((Ë
Àngth
);

1094 ((Ë
iv
);

1095 ((Ë
öput
);

1096 ((Ë
ouçut
);

1098 –
POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE
 );

1100 
	}
}

1102 
	$blowfish_¸y±_cfb64_wøp
–*
˘x
, 
›î©i⁄_t
 
›î©i⁄
,

1103 
size_t
 
Àngth
, size_à*
iv_off
, *
iv
,

1104 c⁄° *
öput
, *
ouçut
 )

1106 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CFB
)

1107  
	`blowfish_¸y±_cfb64
–(
blowfish_c⁄ãxt
 *Ë
˘x
, 
›î©i⁄
, 
Àngth
,

1108 
iv_off
, 
iv
, 
öput
, 
ouçut
 );

1110 ((Ë
˘x
);

1111 ((Ë
›î©i⁄
);

1112 ((Ë
Àngth
);

1113 ((Ë
iv_off
);

1114 ((Ë
iv
);

1115 ((Ë
öput
);

1116 ((Ë
ouçut
);

1118 –
POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE
 );

1120 
	}
}

1122 
	$blowfish_¸y±_˘r_wøp
–*
˘x
, 
size_t
 
Àngth
, size_à*
nc_off
,

1123 *
n⁄˚_cou¡î
, *
°ªam_block
,

1124 c⁄° *
öput
, *
ouçut
 )

1126 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CTR
)

1127  
	`blowfish_¸y±_˘r
–(
blowfish_c⁄ãxt
 *Ë
˘x
, 
Àngth
, 
nc_off
,

1128 
n⁄˚_cou¡î
, 
°ªam_block
, 
öput
, 
ouçut
 );

1130 ((Ë
˘x
);

1131 ((Ë
Àngth
);

1132 ((Ë
nc_off
);

1133 ((Ë
n⁄˚_cou¡î
);

1134 ((Ë
°ªam_block
);

1135 ((Ë
öput
);

1136 ((Ë
ouçut
);

1138 –
POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE
 );

1140 
	}
}

1142 
	$blowfish_£tkey_wøp
–*
˘x
, c⁄° *
key
,

1143 
key_Àngth
 )

1145  
	`blowfish_£tkey
–(
blowfish_c⁄ãxt
 *Ë
˘x
, 
key
, 
key_Àngth
 );

1146 
	}
}

1148 * 
	$blowfish_˘x_Æloc
( )

1150 
blowfish_c⁄ãxt
 *
˘x
;

1151 
˘x
 = (
blowfish_c⁄ãxt
 *Ë
	`pﬁ¨s¶_mÆloc
( ( blowfish_context ) );

1153 if–
˘x
 =
NULL
 )

1154 –
NULL
 );

1156 
	`blowfish_öô
–
˘x
 );

1158 –
˘x
 );

1159 
	}
}

1161 
	$blowfish_˘x_‰ì
–*
˘x
 )

1163 
	`blowfish_‰ì
–(
blowfish_c⁄ãxt
 *Ë
˘x
 );

1164 
	`pﬁ¨s¶_‰ì
–
˘x
 );

1165 
	}
}

1167 c⁄° 
cùhî_ba£_t
 
	gblowfish_öfo
 = {

1168 
POLARSSL_CIPHER_ID_BLOWFISH
,

1169 
blowfish_¸y±_ecb_wøp
,

1170 
blowfish_¸y±_cbc_wøp
,

1171 
blowfish_¸y±_cfb64_wøp
,

1172 
blowfish_¸y±_˘r_wøp
,

1173 
NULL
,

1174 
blowfish_£tkey_wøp
,

1175 
blowfish_£tkey_wøp
,

1176 
blowfish_˘x_Æloc
,

1177 
blowfish_˘x_‰ì


1180 c⁄° 
cùhî_öfo_t
 
	gblowfish_ecb_öfo
 = {

1181 
POLARSSL_CIPHER_BLOWFISH_ECB
,

1182 
POLARSSL_MODE_ECB
,

1186 
POLARSSL_CIPHER_VARIABLE_KEY_LEN
,

1188 &
blowfish_öfo


1191 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1192 c⁄° 
cùhî_öfo_t
 
	gblowfish_cbc_öfo
 = {

1193 
POLARSSL_CIPHER_BLOWFISH_CBC
,

1194 
POLARSSL_MODE_CBC
,

1198 
POLARSSL_CIPHER_VARIABLE_KEY_LEN
,

1200 &
blowfish_öfo


1204 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CFB
)

1205 c⁄° 
cùhî_öfo_t
 
	gblowfish_cfb64_öfo
 = {

1206 
POLARSSL_CIPHER_BLOWFISH_CFB64
,

1207 
POLARSSL_MODE_CFB
,

1211 
POLARSSL_CIPHER_VARIABLE_KEY_LEN
,

1213 &
blowfish_öfo


1217 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CTR
)

1218 c⁄° 
cùhî_öfo_t
 
	gblowfish_˘r_öfo
 = {

1219 
POLARSSL_CIPHER_BLOWFISH_CTR
,

1220 
POLARSSL_MODE_CTR
,

1224 
POLARSSL_CIPHER_VARIABLE_KEY_LEN
,

1226 &
blowfish_öfo


1231 #i‡
deföed
(
POLARSSL_ARC4_C
)

1232 
	$¨c4_¸y±_°ªam_wøp
–*
˘x
, 
size_t
 
Àngth
,

1233 c⁄° *
öput
,

1234 *
ouçut
 )

1236 –
	`¨c4_¸y±
–(
¨c4_c⁄ãxt
 *Ë
˘x
, 
Àngth
, 
öput
, 
ouçut
 ) );

1237 
	}
}

1239 
	$¨c4_£tkey_wøp
–*
˘x
, c⁄° *
key
,

1240 
key_Àngth
 )

1243 if–
key_Àngth
 % 8 != 0 )

1244 –
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
 );

1246 
	`¨c4_£tup
–(
¨c4_c⁄ãxt
 *Ë
˘x
, 
key
, 
key_Àngth
 / 8 );

1248 
	}
}

1250 * 
	$¨c4_˘x_Æloc
( )

1252 
¨c4_c⁄ãxt
 *
˘x
;

1253 
˘x
 = (
¨c4_c⁄ãxt
 *Ë
	`pﬁ¨s¶_mÆloc
( (árc4_context ) );

1255 if–
˘x
 =
NULL
 )

1256 –
NULL
 );

1258 
	`¨c4_öô
–
˘x
 );

1260 –
˘x
 );

1261 
	}
}

1263 
	$¨c4_˘x_‰ì
–*
˘x
 )

1265 
	`¨c4_‰ì
–(
¨c4_c⁄ãxt
 *Ë
˘x
 );

1266 
	`pﬁ¨s¶_‰ì
–
˘x
 );

1267 
	}
}

1269 c⁄° 
cùhî_ba£_t
 
	g¨c4_ba£_öfo
 = {

1270 
POLARSSL_CIPHER_ID_ARC4
,

1271 
NULL
,

1272 
NULL
,

1273 
NULL
,

1274 
NULL
,

1275 
¨c4_¸y±_°ªam_wøp
,

1276 
¨c4_£tkey_wøp
,

1277 
¨c4_£tkey_wøp
,

1278 
¨c4_˘x_Æloc
,

1279 
¨c4_˘x_‰ì


1282 c⁄° 
cùhî_öfo_t
 
	g¨c4_128_öfo
 = {

1283 
POLARSSL_CIPHER_ARC4_128
,

1284 
POLARSSL_MODE_STREAM
,

1290 &
¨c4_ba£_öfo


1294 #i‡
deföed
(
POLARSSL_CIPHER_NULL_CIPHER
)

1295 
	$nuŒ_¸y±_°ªam
–*
˘x
, 
size_t
 
Àngth
,

1296 c⁄° *
öput
,

1297 *
ouçut
 )

1299 ((Ë
˘x
);

1300 
	`memmove
–
ouçut
, 
öput
, 
Àngth
 );

1302 
	}
}

1304 
	$nuŒ_£tkey
–*
˘x
, c⁄° *
key
,

1305 
key_Àngth
 )

1307 ((Ë
˘x
);

1308 ((Ë
key
);

1309 ((Ë
key_Àngth
);

1312 
	}
}

1314 * 
	$nuŒ_˘x_Æloc
( )

1317 
	}
}

1319 
	$nuŒ_˘x_‰ì
–*
˘x
 )

1321 ((Ë
˘x
);

1322 
	}
}

1324 c⁄° 
cùhî_ba£_t
 
	gnuŒ_ba£_öfo
 = {

1325 
POLARSSL_CIPHER_ID_NULL
,

1326 
NULL
,

1327 
NULL
,

1328 
NULL
,

1329 
NULL
,

1330 
nuŒ_¸y±_°ªam
,

1331 
nuŒ_£tkey
,

1332 
nuŒ_£tkey
,

1333 
nuŒ_˘x_Æloc
,

1334 
nuŒ_˘x_‰ì


1337 c⁄° 
cùhî_öfo_t
 
	gnuŒ_cùhî_öfo
 = {

1338 
POLARSSL_CIPHER_NULL
,

1339 
POLARSSL_MODE_STREAM
,

1345 &
nuŒ_ba£_öfo


1349 c⁄° 
cùhî_deföôi⁄_t
 
	gcùhî_deföôi⁄s
[] =

1351 #i‡
deföed
(
POLARSSL_AES_C
)

1352 { 
POLARSSL_CIPHER_AES_128_ECB
, &
´s_128_ecb_öfo
 },

1353 { 
POLARSSL_CIPHER_AES_192_ECB
, &
´s_192_ecb_öfo
 },

1354 { 
POLARSSL_CIPHER_AES_256_ECB
, &
´s_256_ecb_öfo
 },

1355 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1356 { 
POLARSSL_CIPHER_AES_128_CBC
, &
´s_128_cbc_öfo
 },

1357 { 
POLARSSL_CIPHER_AES_192_CBC
, &
´s_192_cbc_öfo
 },

1358 { 
POLARSSL_CIPHER_AES_256_CBC
, &
´s_256_cbc_öfo
 },

1360 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CFB
)

1361 { 
POLARSSL_CIPHER_AES_128_CFB128
, &
´s_128_cfb128_öfo
 },

1362 { 
POLARSSL_CIPHER_AES_192_CFB128
, &
´s_192_cfb128_öfo
 },

1363 { 
POLARSSL_CIPHER_AES_256_CFB128
, &
´s_256_cfb128_öfo
 },

1365 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CTR
)

1366 { 
POLARSSL_CIPHER_AES_128_CTR
, &
´s_128_˘r_öfo
 },

1367 { 
POLARSSL_CIPHER_AES_192_CTR
, &
´s_192_˘r_öfo
 },

1368 { 
POLARSSL_CIPHER_AES_256_CTR
, &
´s_256_˘r_öfo
 },

1370 #i‡
deföed
(
POLARSSL_GCM_C
)

1371 { 
POLARSSL_CIPHER_AES_128_GCM
, &
´s_128_gcm_öfo
 },

1372 { 
POLARSSL_CIPHER_AES_192_GCM
, &
´s_192_gcm_öfo
 },

1373 { 
POLARSSL_CIPHER_AES_256_GCM
, &
´s_256_gcm_öfo
 },

1375 #i‡
deföed
(
POLARSSL_CCM_C
)

1376 { 
POLARSSL_CIPHER_AES_128_CCM
, &
´s_128_ccm_öfo
 },

1377 { 
POLARSSL_CIPHER_AES_192_CCM
, &
´s_192_ccm_öfo
 },

1378 { 
POLARSSL_CIPHER_AES_256_CCM
, &
´s_256_ccm_öfo
 },

1382 #i‡
deföed
(
POLARSSL_ARC4_C
)

1383 { 
POLARSSL_CIPHER_ARC4_128
, &
¨c4_128_öfo
 },

1386 #i‡
deföed
(
POLARSSL_BLOWFISH_C
)

1387 { 
POLARSSL_CIPHER_BLOWFISH_ECB
, &
blowfish_ecb_öfo
 },

1388 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1389 { 
POLARSSL_CIPHER_BLOWFISH_CBC
, &
blowfish_cbc_öfo
 },

1391 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CFB
)

1392 { 
POLARSSL_CIPHER_BLOWFISH_CFB64
, &
blowfish_cfb64_öfo
 },

1394 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CTR
)

1395 { 
POLARSSL_CIPHER_BLOWFISH_CTR
, &
blowfish_˘r_öfo
 },

1399 #i‡
deföed
(
POLARSSL_CAMELLIA_C
)

1400 { 
POLARSSL_CIPHER_CAMELLIA_128_ECB
, &
ˇmñlü_128_ecb_öfo
 },

1401 { 
POLARSSL_CIPHER_CAMELLIA_192_ECB
, &
ˇmñlü_192_ecb_öfo
 },

1402 { 
POLARSSL_CIPHER_CAMELLIA_256_ECB
, &
ˇmñlü_256_ecb_öfo
 },

1403 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1404 { 
POLARSSL_CIPHER_CAMELLIA_128_CBC
, &
ˇmñlü_128_cbc_öfo
 },

1405 { 
POLARSSL_CIPHER_CAMELLIA_192_CBC
, &
ˇmñlü_192_cbc_öfo
 },

1406 { 
POLARSSL_CIPHER_CAMELLIA_256_CBC
, &
ˇmñlü_256_cbc_öfo
 },

1408 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CFB
)

1409 { 
POLARSSL_CIPHER_CAMELLIA_128_CFB128
, &
ˇmñlü_128_cfb128_öfo
 },

1410 { 
POLARSSL_CIPHER_CAMELLIA_192_CFB128
, &
ˇmñlü_192_cfb128_öfo
 },

1411 { 
POLARSSL_CIPHER_CAMELLIA_256_CFB128
, &
ˇmñlü_256_cfb128_öfo
 },

1413 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CTR
)

1414 { 
POLARSSL_CIPHER_CAMELLIA_128_CTR
, &
ˇmñlü_128_˘r_öfo
 },

1415 { 
POLARSSL_CIPHER_CAMELLIA_192_CTR
, &
ˇmñlü_192_˘r_öfo
 },

1416 { 
POLARSSL_CIPHER_CAMELLIA_256_CTR
, &
ˇmñlü_256_˘r_öfo
 },

1418 #i‡
deföed
(
POLARSSL_GCM_C
)

1419 { 
POLARSSL_CIPHER_CAMELLIA_128_GCM
, &
ˇmñlü_128_gcm_öfo
 },

1420 { 
POLARSSL_CIPHER_CAMELLIA_192_GCM
, &
ˇmñlü_192_gcm_öfo
 },

1421 { 
POLARSSL_CIPHER_CAMELLIA_256_GCM
, &
ˇmñlü_256_gcm_öfo
 },

1423 #i‡
deföed
(
POLARSSL_CCM_C
)

1424 { 
POLARSSL_CIPHER_CAMELLIA_128_CCM
, &
ˇmñlü_128_ccm_öfo
 },

1425 { 
POLARSSL_CIPHER_CAMELLIA_192_CCM
, &
ˇmñlü_192_ccm_öfo
 },

1426 { 
POLARSSL_CIPHER_CAMELLIA_256_CCM
, &
ˇmñlü_256_ccm_öfo
 },

1430 #i‡
deföed
(
POLARSSL_DES_C
)

1431 { 
POLARSSL_CIPHER_DES_ECB
, &
des_ecb_öfo
 },

1432 { 
POLARSSL_CIPHER_DES_EDE_ECB
, &
des_ede_ecb_öfo
 },

1433 { 
POLARSSL_CIPHER_DES_EDE3_ECB
, &
des_ede3_ecb_öfo
 },

1434 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1435 { 
POLARSSL_CIPHER_DES_CBC
, &
des_cbc_öfo
 },

1436 { 
POLARSSL_CIPHER_DES_EDE_CBC
, &
des_ede_cbc_öfo
 },

1437 { 
POLARSSL_CIPHER_DES_EDE3_CBC
, &
des_ede3_cbc_öfo
 },

1441 #i‡
deföed
(
POLARSSL_CIPHER_NULL_CIPHER
)

1442 { 
POLARSSL_CIPHER_NULL
, &
nuŒ_cùhî_öfo
 },

1445 { 0, 
NULL
 }

1448 
	#NUM_CIPHERS
  
cùhî_deföôi⁄s
 /  cùhî_deföôi⁄s[0]

	)

1449 
	gsuµ‹ãd_cùhîs
[
NUM_CIPHERS
];

	@polarssl/library/ctr_drbg.c

31 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

32 
	~"pﬁ¨s¶/c⁄fig.h
"

34 #ö˛udê
POLARSSL_CONFIG_FILE


37 #i‡
deföed
(
POLARSSL_CTR_DRBG_C
)

39 
	~"pﬁ¨s¶/˘r_drbg.h
"

41 #i‡
deföed
(
POLARSSL_FS_IO
)

42 
	~<°dio.h
>

45 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

46 
	~"pﬁ¨s¶/∂©f‹m.h
"

48 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

52 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

53 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

54 
	}
}

60 
˘r_drbg_öô_íå›y_Àn
(

61 
˘r_drbg_c⁄ãxt
 *
˘x
,

62 (*
f_íå›y
)(*, *, 
size_t
),

63 *
p_íå›y
,

64 c⁄° *
cu°om
,

65 
size_t
 
Àn
,

66 
size_t
 
íå›y_Àn
 )

68 
ªt
;

69 
key
[
CTR_DRBG_KEYSIZE
];

71 
	`mem£t
–
˘x
, 0, (
˘r_drbg_c⁄ãxt
) );

72 
	`mem£t
–
key
, 0, 
CTR_DRBG_KEYSIZE
 );

74 
	`´s_öô
–&
˘x
->
´s_˘x
 );

76 
˘x
->
f_íå›y
 = f_entropy;

77 
˘x
->
p_íå›y
 =Ö_entropy;

79 
˘x
->
íå›y_Àn
 =Éntropy_len;

80 
˘x
->
ª£ed_öãrvÆ
 = 
CTR_DRBG_RESEED_INTERVAL
;

85 
	`´s_£tkey_íc
–&
˘x
->
´s_˘x
, 
key
, 
CTR_DRBG_KEYBITS
 );

87 if––
ªt
 = 
	`˘r_drbg_ª£ed
–
˘x
, 
cu°om
, 
Àn
 ) ) != 0 )

88 –
ªt
 );

91 
	}
}

93 
˘r_drbg_öô
–
˘r_drbg_c⁄ãxt
 *
˘x
,

94 (*
f_íå›y
)(*, *, 
size_t
),

95 *
p_íå›y
,

96 c⁄° *
cu°om
,

97 
size_t
 
Àn
 )

99 –
	`˘r_drbg_öô_íå›y_Àn
–
˘x
, 
f_íå›y
, 
p_íå›y
, 
cu°om
, 
Àn
,

100 
CTR_DRBG_ENTROPY_LEN
 ) );

101 
	}
}

103 
	$˘r_drbg_‰ì
–
˘r_drbg_c⁄ãxt
 *
˘x
 )

105 if–
˘x
 =
NULL
 )

108 
	`´s_‰ì
–&
˘x
->
´s_˘x
 );

109 
	`pﬁ¨s¶_zîoize
–
˘x
, –
˘r_drbg_c⁄ãxt
 ) );

110 
	}
}

112 
	$˘r_drbg_£t_¥edi˘i⁄_ªsi°™˚
–
˘r_drbg_c⁄ãxt
 *
˘x
, 
ªsi°™˚
 )

114 
˘x
->
¥edi˘i⁄_ªsi°™˚
 = 
ªsi°™˚
;

115 
	}
}

117 
	$˘r_drbg_£t_íå›y_Àn
–
˘r_drbg_c⁄ãxt
 *
˘x
, 
size_t
 
Àn
 )

119 
˘x
->
íå›y_Àn
 = 
Àn
;

120 
	}
}

122 
	$˘r_drbg_£t_ª£ed_öãrvÆ
–
˘r_drbg_c⁄ãxt
 *
˘x
, 
öãrvÆ
 )

124 
˘x
->
ª£ed_öãrvÆ
 = 
öãrvÆ
;

125 
	}
}

127 
	$block_cùhî_df
–*
ouçut
,

128 c⁄° *
d©a
, 
size_t
 
d©a_Àn
 )

130 
buf
[
CTR_DRBG_MAX_SEED_INPUT
 + 
CTR_DRBG_BLOCKSIZE
 + 16];

131 
tmp
[
CTR_DRBG_SEEDLEN
];

132 
key
[
CTR_DRBG_KEYSIZE
];

133 
chaö
[
CTR_DRBG_BLOCKSIZE
];

134 *
p
, *
iv
;

135 
´s_c⁄ãxt
 
´s_˘x
;

137 
i
, 
j
;

138 
size_t
 
buf_Àn
, 
u£_Àn
;

140 
	`mem£t
–
buf
, 0, 
CTR_DRBG_MAX_SEED_INPUT
 + 
CTR_DRBG_BLOCKSIZE
 + 16 );

141 
	`´s_öô
–&
´s_˘x
 );

150 
p
 = 
buf
 + 
CTR_DRBG_BLOCKSIZE
;

151 *
p
++ = ( 
d©a_Àn
 >> 24 ) & 0xff;

152 *
p
++ = ( 
d©a_Àn
 >> 16 ) & 0xff;

153 *
p
++ = ( 
d©a_Àn
 >> 8 ) & 0xff;

154 *
p
++ = ( 
d©a_Àn
 ) & 0xff;

155 
p
 += 3;

156 *
p
++ = 
CTR_DRBG_SEEDLEN
;

157 
	`mem˝y
–
p
, 
d©a
, 
d©a_Àn
 );

158 
p
[
d©a_Àn
] = 0x80;

160 
buf_Àn
 = 
CTR_DRBG_BLOCKSIZE
 + 8 + 
d©a_Àn
 + 1;

162  
i
 = 0; i < 
CTR_DRBG_KEYSIZE
; i++ )

163 
key
[
i
] = i;

165 
	`´s_£tkey_íc
–&
´s_˘x
, 
key
, 
CTR_DRBG_KEYBITS
 );

170  
j
 = 0; j < 
CTR_DRBG_SEEDLEN
; j +
CTR_DRBG_BLOCKSIZE
 )

172 
p
 = 
buf
;

173 
	`mem£t
–
chaö
, 0, 
CTR_DRBG_BLOCKSIZE
 );

174 
u£_Àn
 = 
buf_Àn
;

176  
u£_Àn
 > 0 )

178  
i
 = 0; i < 
CTR_DRBG_BLOCKSIZE
; i++ )

179 
chaö
[
i
] ^
p
[i];

180 
p
 +
CTR_DRBG_BLOCKSIZE
;

181 
u£_Àn
 -–u£_À¿>
CTR_DRBG_BLOCKSIZE
 ) ?

182 
CTR_DRBG_BLOCKSIZE
 : 
u£_Àn
;

184 
	`´s_¸y±_ecb
–&
´s_˘x
, 
AES_ENCRYPT
, 
chaö
, chain );

187 
	`mem˝y
–
tmp
 + 
j
, 
chaö
, 
CTR_DRBG_BLOCKSIZE
 );

192 
buf
[3]++;

198 
	`´s_£tkey_íc
–&
´s_˘x
, 
tmp
, 
CTR_DRBG_KEYBITS
 );

199 
iv
 = 
tmp
 + 
CTR_DRBG_KEYSIZE
;

200 
p
 = 
ouçut
;

202  
j
 = 0; j < 
CTR_DRBG_SEEDLEN
; j +
CTR_DRBG_BLOCKSIZE
 )

204 
	`´s_¸y±_ecb
–&
´s_˘x
, 
AES_ENCRYPT
, 
iv
, iv );

205 
	`mem˝y
–
p
, 
iv
, 
CTR_DRBG_BLOCKSIZE
 );

206 
p
 +
CTR_DRBG_BLOCKSIZE
;

209 
	`´s_‰ì
–&
´s_˘x
 );

212 
	}
}

214 
	$˘r_drbg_upd©e_öã∫Æ
–
˘r_drbg_c⁄ãxt
 *
˘x
,

215 c⁄° 
d©a
[
CTR_DRBG_SEEDLEN
] )

217 
tmp
[
CTR_DRBG_SEEDLEN
];

218 *
p
 = 
tmp
;

219 
i
, 
j
;

221 
	`mem£t
–
tmp
, 0, 
CTR_DRBG_SEEDLEN
 );

223  
j
 = 0; j < 
CTR_DRBG_SEEDLEN
; j +
CTR_DRBG_BLOCKSIZE
 )

228  
i
 = 
CTR_DRBG_BLOCKSIZE
; i > 0; i-- )

229 if–++
˘x
->
cou¡î
[
i
 - 1] != 0 )

235 
	`´s_¸y±_ecb
–&
˘x
->
´s_˘x
, 
AES_ENCRYPT
, ctx->
cou¡î
, 
p
 );

237 
p
 +
CTR_DRBG_BLOCKSIZE
;

240  
i
 = 0; i < 
CTR_DRBG_SEEDLEN
; i++ )

241 
tmp
[
i
] ^
d©a
[i];

246 
	`´s_£tkey_íc
–&
˘x
->
´s_˘x
, 
tmp
, 
CTR_DRBG_KEYBITS
 );

247 
	`mem˝y
–
˘x
->
cou¡î
, 
tmp
 + 
CTR_DRBG_KEYSIZE
, 
CTR_DRBG_BLOCKSIZE
 );

250 
	}
}

252 
	$˘r_drbg_upd©e
–
˘r_drbg_c⁄ãxt
 *
˘x
,

253 c⁄° *
addôi⁄Æ
, 
size_t
 
add_Àn
 )

255 
add_öput
[
CTR_DRBG_SEEDLEN
];

257 if–
add_Àn
 > 0 )

259 
	`block_cùhî_df
–
add_öput
, 
addôi⁄Æ
, 
add_Àn
 );

260 
	`˘r_drbg_upd©e_öã∫Æ
–
˘x
, 
add_öput
 );

262 
	}
}

264 
	$˘r_drbg_ª£ed
–
˘r_drbg_c⁄ãxt
 *
˘x
,

265 c⁄° *
addôi⁄Æ
, 
size_t
 
Àn
 )

267 
£ed
[
CTR_DRBG_MAX_SEED_INPUT
];

268 
size_t
 
£edÀn
 = 0;

270 if–
˘x
->
íå›y_Àn
 + 
Àn
 > 
CTR_DRBG_MAX_SEED_INPUT
 )

271 –
POLARSSL_ERR_CTR_DRBG_INPUT_TOO_BIG
 );

273 
	`mem£t
–
£ed
, 0, 
CTR_DRBG_MAX_SEED_INPUT
 );

278 if–0 !
˘x
->
	`f_íå›y
–˘x->
p_íå›y
, 
£ed
,

279 
˘x
->
íå›y_Àn
 ) )

281 –
POLARSSL_ERR_CTR_DRBG_ENTROPY_SOURCE_FAILED
 );

284 
£edÀn
 +
˘x
->
íå›y_Àn
;

289 if–
addôi⁄Æ
 && 
Àn
 )

291 
	`mem˝y
–
£ed
 + 
£edÀn
, 
addôi⁄Æ
, 
Àn
 );

292 
£edÀn
 +
Àn
;

298 
	`block_cùhî_df
–
£ed
, sìd, 
£edÀn
 );

303 
	`˘r_drbg_upd©e_öã∫Æ
–
˘x
, 
£ed
 );

304 
˘x
->
ª£ed_cou¡î
 = 1;

307 
	}
}

309 
	$˘r_drbg_øndom_wôh_add
–*
p_∫g
,

310 *
ouçut
, 
size_t
 
ouçut_Àn
,

311 c⁄° *
addôi⁄Æ
, 
size_t
 
add_Àn
 )

313 
ªt
 = 0;

314 
˘r_drbg_c⁄ãxt
 *
˘x
 = (˘r_drbg_c⁄ãxà*Ë
p_∫g
;

315 
add_öput
[
CTR_DRBG_SEEDLEN
];

316 *
p
 = 
ouçut
;

317 
tmp
[
CTR_DRBG_BLOCKSIZE
];

318 
i
;

319 
size_t
 
u£_Àn
;

321 if–
ouçut_Àn
 > 
CTR_DRBG_MAX_REQUEST
 )

322 –
POLARSSL_ERR_CTR_DRBG_REQUEST_TOO_BIG
 );

324 if–
add_Àn
 > 
CTR_DRBG_MAX_INPUT
 )

325 –
POLARSSL_ERR_CTR_DRBG_INPUT_TOO_BIG
 );

327 
	`mem£t
–
add_öput
, 0, 
CTR_DRBG_SEEDLEN
 );

329 if–
˘x
->
ª£ed_cou¡î
 > ctx->
ª£ed_öãrvÆ
 ||

330 
˘x
->
¥edi˘i⁄_ªsi°™˚
 )

332 if––
ªt
 = 
	`˘r_drbg_ª£ed
–
˘x
, 
addôi⁄Æ
, 
add_Àn
 ) ) != 0 )

333 –
ªt
 );

335 
add_Àn
 = 0;

338 if–
add_Àn
 > 0 )

340 
	`block_cùhî_df
–
add_öput
, 
addôi⁄Æ
, 
add_Àn
 );

341 
	`˘r_drbg_upd©e_öã∫Æ
–
˘x
, 
add_öput
 );

344  
ouçut_Àn
 > 0 )

349  
i
 = 
CTR_DRBG_BLOCKSIZE
; i > 0; i-- )

350 if–++
˘x
->
cou¡î
[
i
 - 1] != 0 )

356 
	`´s_¸y±_ecb
–&
˘x
->
´s_˘x
, 
AES_ENCRYPT
, ctx->
cou¡î
, 
tmp
 );

358 
u£_Àn
 = ( 
ouçut_Àn
 > 
CTR_DRBG_BLOCKSIZE
 ) ? CTR_DRBG_BLOCKSIZE :

359 
ouçut_Àn
;

363 
	`mem˝y
–
p
, 
tmp
, 
u£_Àn
 );

364 
p
 +
u£_Àn
;

365 
ouçut_Àn
 -
u£_Àn
;

368 
	`˘r_drbg_upd©e_öã∫Æ
–
˘x
, 
add_öput
 );

370 
˘x
->
ª£ed_cou¡î
++;

373 
	}
}

375 
	$˘r_drbg_øndom
–*
p_∫g
, *
ouçut
, 
size_t
 
ouçut_Àn
 )

377  
	`˘r_drbg_øndom_wôh_add
–
p_∫g
, 
ouçut
, 
ouçut_Àn
, 
NULL
, 0 );

378 
	}
}

380 #i‡
deföed
(
POLARSSL_FS_IO
)

381 
	$˘r_drbg_wrôe_£ed_fûe
–
˘r_drbg_c⁄ãxt
 *
˘x
, c⁄° *
∑th
 )

383 
ªt
 = 
POLARSSL_ERR_CTR_DRBG_FILE_IO_ERROR
;

384 
FILE
 *
f
;

385 
buf
[ 
CTR_DRBG_MAX_INPUT
 ];

387 if––
f
 = 
	`f›í
–
∑th
, "wb" ) ) =
NULL
 )

388 –
POLARSSL_ERR_CTR_DRBG_FILE_IO_ERROR
 );

390 if––
ªt
 = 
	`˘r_drbg_øndom
–
˘x
, 
buf
, 
CTR_DRBG_MAX_INPUT
 ) ) != 0 )

391 
exô
;

393 if–
	`fwrôe
–
buf
, 1, 
CTR_DRBG_MAX_INPUT
, 
f
 ) != CTR_DRBG_MAX_INPUT )

395 
ªt
 = 
POLARSSL_ERR_CTR_DRBG_FILE_IO_ERROR
;

396 
exô
;

399 
ªt
 = 0;

401 
exô
:

402 
	`f˛o£
–
f
 );

403 –
ªt
 );

404 
	}
}

406 
	$˘r_drbg_upd©e_£ed_fûe
–
˘r_drbg_c⁄ãxt
 *
˘x
, c⁄° *
∑th
 )

408 
FILE
 *
f
;

409 
size_t
 
n
;

410 
buf
[ 
CTR_DRBG_MAX_INPUT
 ];

412 if––
f
 = 
	`f›í
–
∑th
, "rb" ) ) =
NULL
 )

413 –
POLARSSL_ERR_CTR_DRBG_FILE_IO_ERROR
 );

415 
	`f£ek
–
f
, 0, 
SEEK_END
 );

416 
n
 = (
size_t
Ë
	`·ñl
–
f
 );

417 
	`f£ek
–
f
, 0, 
SEEK_SET
 );

419 if–
n
 > 
CTR_DRBG_MAX_INPUT
 )

421 
	`f˛o£
–
f
 );

422 –
POLARSSL_ERR_CTR_DRBG_INPUT_TOO_BIG
 );

425 if–
	`‰ód
–
buf
, 1, 
n
, 
f
 ) !=Ç )

427 
	`f˛o£
–
f
 );

428 –
POLARSSL_ERR_CTR_DRBG_FILE_IO_ERROR
 );

431 
	`f˛o£
–
f
 );

433 
	`˘r_drbg_upd©e
–
˘x
, 
buf
, 
n
 );

435 –
	`˘r_drbg_wrôe_£ed_fûe
–
˘x
, 
∑th
 ) );

436 
	}
}

439 #i‡
deföed
(
POLARSSL_SELF_TEST
)

441 
	~<°dio.h
>

443 
	gíå›y_sour˚_¥
[96] =

457 
	gíå›y_sour˚_n›r
[64] =

467 c⁄° 
	gn⁄˚_≥rs_¥
[16] =

471 c⁄° 
	gn⁄˚_≥rs_n›r
[16] =

475 c⁄° 
	gªsu…_¥
[16] =

479 c⁄° 
	gªsu…_n›r
[16] =

483 
size_t
 
	gã°_off£t
;

484 
	$˘r_drbg_£lf_ã°_íå›y
–*
d©a
, *
buf
,

485 
size_t
 
Àn
 )

487 c⁄° *
p
 = 
d©a
;

488 
	`mem˝y
–
buf
, 
p
 + 
ã°_off£t
, 
Àn
 );

489 
ã°_off£t
 +
Àn
;

491 
	}
}

493 
	#CHK
–
c
 ) if( (c) != 0 ) \

495 if–
vîbo£
 != 0 ) \

496 
	`pﬁ¨s¶_¥ötf
( "failed\n" ); \

498 }

	)

503 
	$˘r_drbg_£lf_ã°
–
vîbo£
 )

505 
˘r_drbg_c⁄ãxt
 
˘x
;

506 
buf
[16];

511 if–
vîbo£
 != 0 )

512 
	`pﬁ¨s¶_¥ötf
( " CTR_DRBG (PR = TRUE) : " );

514 
ã°_off£t
 = 0;

515 
	`CHK
–
	`˘r_drbg_öô_íå›y_Àn
–&
˘x
, 
˘r_drbg_£lf_ã°_íå›y
,

516 
íå›y_sour˚_¥
, 
n⁄˚_≥rs_¥
, 16, 32 ) );

517 
	`˘r_drbg_£t_¥edi˘i⁄_ªsi°™˚
–&
˘x
, 
CTR_DRBG_PR_ON
 );

518 
	`CHK
–
	`˘r_drbg_øndom
–&
˘x
, 
buf
, 
CTR_DRBG_BLOCKSIZE
 ) );

519 
	`CHK
–
	`˘r_drbg_øndom
–&
˘x
, 
buf
, 
CTR_DRBG_BLOCKSIZE
 ) );

520 
	`CHK
–
	`memcmp
–
buf
, 
ªsu…_¥
, 
CTR_DRBG_BLOCKSIZE
 ) );

522 if–
vîbo£
 != 0 )

523 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

528 if–
vîbo£
 != 0 )

529 
	`pﬁ¨s¶_¥ötf
( " CTR_DRBG (PR = FALSE): " );

531 
ã°_off£t
 = 0;

532 
	`CHK
–
	`˘r_drbg_öô_íå›y_Àn
–&
˘x
, 
˘r_drbg_£lf_ã°_íå›y
,

533 
íå›y_sour˚_n›r
, 
n⁄˚_≥rs_n›r
, 16, 32 ) );

534 
	`CHK
–
	`˘r_drbg_øndom
–&
˘x
, 
buf
, 16 ) );

535 
	`CHK
–
	`˘r_drbg_ª£ed
–&
˘x
, 
NULL
, 0 ) );

536 
	`CHK
–
	`˘r_drbg_øndom
–&
˘x
, 
buf
, 16 ) );

537 
	`CHK
–
	`memcmp
–
buf
, 
ªsu…_n›r
, 16 ) );

539 if–
vîbo£
 != 0 )

540 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

542 if–
vîbo£
 != 0 )

543 
	`pﬁ¨s¶_¥ötf
( "\n" );

546 
	}
}

	@polarssl/library/debug.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_DEBUG_C
)

34 
	~"pﬁ¨s¶/debug.h
"

36 
	~<°d¨g.h
>

37 
	~<°dlib.h
>

39 #i‡
deföed
(
EFIX64
Ë|| deföed(
EFI32
)

40 
	~<°dio.h
>

43 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

44 #i‡!
deföed
 
¢¥ötf


45 
	#¢¥ötf
 
_¢¥ötf


	)

48 #i‡!
deföed
 
v¢¥ötf


49 
	#v¢¥ötf
 
_v¢¥ötf


	)

53 
	gdebug_log_mode
 = 
POLARSSL_DEBUG_DFL_MODE
;

54 
	gdebug_thªshﬁd
 = 0;

56 
	$debug_£t_log_mode
–
log_mode
 )

58 
debug_log_mode
 = 
log_mode
;

59 
	}
}

61 
	$debug_£t_thªshﬁd
–
thªshﬁd
 )

63 
debug_thªshﬁd
 = 
thªshﬁd
;

64 
	}
}

66 *
	$debug_fmt
–c⁄° *
f‹m©
, ... )

68 
va_li°
 
¨gp
;

69 
°r
[512];

70 
maxÀn
 = –
°r
 ) - 1;

72 
	`va_°¨t
–
¨gp
, 
f‹m©
 );

73 
	`v¢¥ötf
–
°r
, 
maxÀn
, 
f‹m©
, 
¨gp
 );

74 
	`va_íd
–
¨gp
 );

76 
°r
[
maxÀn
] = '\0';

77 –
°r
 );

78 
	}
}

80 
	$debug_¥öt_msg
–c⁄° 
s¶_c⁄ãxt
 *
s¶
, 
Àvñ
,

81 c⁄° *
fûe
, 
löe
, c⁄° *
ãxt
 )

83 
°r
[512];

84 
maxÀn
 = –
°r
 ) - 1;

86 if–
s¶
->
f_dbg
 =
NULL
 || 
Àvñ
 > 
debug_thªshﬁd
 )

89 if–
debug_log_mode
 =
POLARSSL_DEBUG_LOG_RAW
 )

91 
s¶
->
	`f_dbg
–s¶->
p_dbg
, 
Àvñ
, 
ãxt
 );

95 
	`¢¥ötf
–
°r
, 
maxÀn
, "%s(%04d): %s\n", 
fûe
, 
löe
, 
ãxt
 );

96 
°r
[
maxÀn
] = '\0';

97 
s¶
->
	`f_dbg
–s¶->
p_dbg
, 
Àvñ
, 
°r
 );

98 
	}
}

100 
	$debug_¥öt_ªt
–c⁄° 
s¶_c⁄ãxt
 *
s¶
, 
Àvñ
,

101 c⁄° *
fûe
, 
löe
,

102 c⁄° *
ãxt
, 
ªt
 )

104 
°r
[512];

105 
maxÀn
 = –
°r
 ) - 1;

106 
size_t
 
idx
 = 0;

108 if–
s¶
->
f_dbg
 =
NULL
 || 
Àvñ
 > 
debug_thªshﬁd
 )

111 if–
debug_log_mode
 =
POLARSSL_DEBUG_LOG_FULL
 )

112 
idx
 = 
	`¢¥ötf
–
°r
, 
maxÀn
, "%s(%04d): ", 
fûe
, 
löe
 );

114 
	`¢¥ötf
–
°r
 + 
idx
, 
maxÀn
 - idx, "%s()Ñeturned %d (-0x%04x)\n",

115 
ãxt
, 
ªt
, -ret );

117 
°r
[
maxÀn
] = '\0';

118 
s¶
->
	`f_dbg
–s¶->
p_dbg
, 
Àvñ
, 
°r
 );

119 
	}
}

121 
	$debug_¥öt_buf
–c⁄° 
s¶_c⁄ãxt
 *
s¶
, 
Àvñ
,

122 c⁄° *
fûe
, 
löe
, c⁄° *
ãxt
,

123 *
buf
, 
size_t
 
Àn
 )

125 
°r
[512];

126 
size_t
 
i
, 
maxÀn
 = –
°r
 ) - 1, 
idx
 = 0;

128 if–
s¶
->
f_dbg
 =
NULL
 || 
Àvñ
 > 
debug_thªshﬁd
 )

131 if–
debug_log_mode
 =
POLARSSL_DEBUG_LOG_FULL
 )

132 
idx
 = 
	`¢¥ötf
–
°r
, 
maxÀn
, "%s(%04d): ", 
fûe
, 
löe
 );

134 
	`¢¥ötf
–
°r
 + 
idx
, 
maxÀn
 - idx, "dumping '%s' (%u bytes)\n",

135 
ãxt
, (Ë
Àn
 );

137 
°r
[
maxÀn
] = '\0';

138 
s¶
->
	`f_dbg
–s¶->
p_dbg
, 
Àvñ
, 
°r
 );

140 
idx
 = 0;

141  
i
 = 0; i < 
Àn
; i++ )

143 if–
i
 >= 4096 )

146 if–
i
 % 16 == 0 )

148 if–
i
 > 0 )

150 
	`¢¥ötf
–
°r
 + 
idx
, 
maxÀn
 - idx, "\n" );

151 
s¶
->
	`f_dbg
–s¶->
p_dbg
, 
Àvñ
, 
°r
 );

152 
idx
 = 0;

155 if–
debug_log_mode
 =
POLARSSL_DEBUG_LOG_FULL
 )

156 
idx
 = 
	`¢¥ötf
–
°r
, 
maxÀn
, "%s(%04d): ", 
fûe
, 
löe
 );

158 
idx
 +
	`¢¥ötf
–
°r
 + idx, 
maxÀn
 - idx, "%04x: ",

159 (Ë
i
 );

163 
idx
 +
	`¢¥ötf
–
°r
 + idx, 
maxÀn
 - idx, " %02x",

164 (Ë
buf
[
i
] );

167 if–
Àn
 > 0 )

169 
	`¢¥ötf
–
°r
 + 
idx
, 
maxÀn
 - idx, "\n" );

170 
s¶
->
	`f_dbg
–s¶->
p_dbg
, 
Àvñ
, 
°r
 );

172 
	}
}

174 #i‡
deföed
(
POLARSSL_ECP_C
)

175 
	$debug_¥öt_e˝
–c⁄° 
s¶_c⁄ãxt
 *
s¶
, 
Àvñ
,

176 c⁄° *
fûe
, 
löe
,

177 c⁄° *
ãxt
, c⁄° 
e˝_poöt
 *
X
 )

179 
°r
[512];

180 
maxÀn
 = –
°r
 ) - 1;

182 if–
s¶
->
f_dbg
 =
NULL
 || 
Àvñ
 > 
debug_thªshﬁd
 )

185 
	`¢¥ötf
–
°r
, 
maxÀn
, "%s(X)", 
ãxt
 );

186 
°r
[
maxÀn
] = '\0';

187 
	`debug_¥öt_mpi
–
s¶
, 
Àvñ
, 
fûe
, 
löe
, 
°r
, &
X
->X );

189 
	`¢¥ötf
–
°r
, 
maxÀn
, "%s(Y)", 
ãxt
 );

190 
°r
[
maxÀn
] = '\0';

191 
	`debug_¥öt_mpi
–
s¶
, 
Àvñ
, 
fûe
, 
löe
, 
°r
, &
X
->
Y
 );

192 
	}
}

195 #i‡
deföed
(
POLARSSL_BIGNUM_C
)

196 
	$debug_¥öt_mpi
–c⁄° 
s¶_c⁄ãxt
 *
s¶
, 
Àvñ
,

197 c⁄° *
fûe
, 
löe
,

198 c⁄° *
ãxt
, c⁄° 
mpi
 *
X
 )

200 
°r
[512];

201 
j
, 
k
, 
maxÀn
 = –
°r
 ) - 1, 
zîos
 = 1;

202 
size_t
 
i
, 
n
, 
idx
 = 0;

204 if–
s¶
->
f_dbg
 =
NULL
 || 
X
 =NULL || 
Àvñ
 > 
debug_thªshﬁd
 )

207  
n
 = 
X
->n - 1;Ç > 0;Ç-- )

208 if–
X
->
p
[
n
] != 0 )

211  
j
 = ( (
t_uöt
) << 3 ) - 1; j >= 0; j-- )

212 if–––
X
->
p
[
n
] >> 
j
 ) & 1 ) != 0 )

215 if–
debug_log_mode
 =
POLARSSL_DEBUG_LOG_FULL
 )

216 
idx
 = 
	`¢¥ötf
–
°r
, 
maxÀn
, "%s(%04d): ", 
fûe
, 
löe
 );

218 
	`¢¥ötf
–
°r
 + 
idx
, 
maxÀn
 - idx, "value of '%s' (%d bits) is:\n",

219 
ãxt
, (Ë––
n
 * ( (
t_uöt
Ë<< 3 ) ) + 
j
 + 1 ) );

221 
°r
[
maxÀn
] = '\0';

222 
s¶
->
	`f_dbg
–s¶->
p_dbg
, 
Àvñ
, 
°r
 );

224 
idx
 = 0;

225  
i
 = 
n
 + 1, 
j
 = 0; i > 0; i-- )

227 if–
zîos
 && 
X
->
p
[
i
 - 1] == 0 )

230  
k
 = –
t_uöt
 ) - 1; k >= 0; k-- )

232 if–
zîos
 && ( ( 
X
->
p
[
i
 - 1] >> ( 
k
 << 3 ) ) & 0xFF ) == 0 )

235 
zîos
 = 0;

237 if–
j
 % 16 == 0 )

239 if–
j
 > 0 )

241 
	`¢¥ötf
–
°r
 + 
idx
, 
maxÀn
 - idx, "\n" );

242 
s¶
->
	`f_dbg
–s¶->
p_dbg
, 
Àvñ
, 
°r
 );

243 
idx
 = 0;

246 if–
debug_log_mode
 =
POLARSSL_DEBUG_LOG_FULL
 )

247 
idx
 = 
	`¢¥ötf
–
°r
, 
maxÀn
, "%s(%04d): ", 
fûe
, 
löe
 );

250 
idx
 +
	`¢¥ötf
–
°r
 + idx, 
maxÀn
 - idx, " %02x", ()

251 –
X
->
p
[
i
 - 1] >> ( 
k
 << 3 ) ) & 0xFF );

253 
j
++;

258 if–
zîos
 == 1 )

260 if–
debug_log_mode
 =
POLARSSL_DEBUG_LOG_FULL
 )

262 
idx
 = 
	`¢¥ötf
–
°r
, 
maxÀn
, "%s(%04d): ", 
fûe
, 
löe
 );

265 
idx
 +
	`¢¥ötf
–
°r
 + idx, 
maxÀn
 - idx, " 00" );

268 
	`¢¥ötf
–
°r
 + 
idx
, 
maxÀn
 - idx, "\n" );

269 
s¶
->
	`f_dbg
–s¶->
p_dbg
, 
Àvñ
, 
°r
 );

270 
	}
}

273 #i‡
deföed
(
POLARSSL_X509_CRT_PARSE_C
)

274 
	$debug_¥öt_pk
–c⁄° 
s¶_c⁄ãxt
 *
s¶
, 
Àvñ
,

275 c⁄° *
fûe
, 
löe
,

276 c⁄° *
ãxt
, c⁄° 
pk_c⁄ãxt
 *
pk
 )

278 
size_t
 
i
;

279 
pk_debug_ôem
 
ôems
[
POLARSSL_PK_DEBUG_MAX_ITEMS
];

280 
«me
[16];

282 
	`mem£t
–
ôems
, 0, ( items ) );

284 if–
	`pk_debug
–
pk
, 
ôems
 ) != 0 )

286 
	`debug_¥öt_msg
–
s¶
, 
Àvñ
, 
fûe
, 
löe
, "invalid PK context" );

290  
i
 = 0; i < 
POLARSSL_PK_DEBUG_MAX_ITEMS
; i++ )

292 if–
ôems
[
i
].
ty≥
 =
POLARSSL_PK_DEBUG_NONE
 )

295 
	`¢¥ötf
–
«me
, –«mê), "%s%s", 
ãxt
, 
ôems
[
i
].name );

296 
«me
[(Çame ) - 1] = '\0';

298 if–
ôems
[
i
].
ty≥
 =
POLARSSL_PK_DEBUG_MPI
 )

299 
	`debug_¥öt_mpi
–
s¶
, 
Àvñ
, 
fûe
, 
löe
, 
«me
, 
ôems
[
i
].
vÆue
 );

301 #i‡
	`deföed
(
POLARSSL_ECP_C
)

302 if–
ôems
[
i
].
ty≥
 =
POLARSSL_PK_DEBUG_ECP
 )

303 
	`debug_¥öt_e˝
–
s¶
, 
Àvñ
, 
fûe
, 
löe
, 
«me
, 
ôems
[
i
].
vÆue
 );

306 
	`debug_¥öt_msg
–
s¶
, 
Àvñ
, 
fûe
, 
löe
, "shouldÇot happen" );

308 
	}
}

310 
	$debug_¥öt_¸t
–c⁄° 
s¶_c⁄ãxt
 *
s¶
, 
Àvñ
,

311 c⁄° *
fûe
, 
löe
,

312 c⁄° *
ãxt
, c⁄° 
x509_¸t
 *
¸t
 )

314 
°r
[1024], 
¥efix
[64];

315 
i
 = 0, 
maxÀn
 = –
¥efix
 ) - 1, 
idx
 = 0;

317 if–
s¶
->
f_dbg
 =
NULL
 || 
¸t
 =NULL || 
Àvñ
 > 
debug_thªshﬁd
 )

320 if–
debug_log_mode
 =
POLARSSL_DEBUG_LOG_FULL
 )

322 
	`¢¥ötf
–
¥efix
, 
maxÀn
, "%s(%04d): ", 
fûe
, 
löe
 );

323 
¥efix
[
maxÀn
] = '\0';

326 
¥efix
[0] = '\0';

328 
maxÀn
 = –
°r
 ) - 1;

330  
¸t
 !
NULL
 )

332 
buf
[1024];

333 
	`x509_¸t_öfo
–
buf
, –bu‡Ë- 1, 
¥efix
, 
¸t
 );

335 if–
debug_log_mode
 =
POLARSSL_DEBUG_LOG_FULL
 )

336 
idx
 = 
	`¢¥ötf
–
°r
, 
maxÀn
, "%s(%04d): ", 
fûe
, 
löe
 );

338 
	`¢¥ötf
–
°r
 + 
idx
, 
maxÀn
 - idx, "%s #%d:\n%s",

339 
ãxt
, ++
i
, 
buf
 );

341 
°r
[
maxÀn
] = '\0';

342 
s¶
->
	`f_dbg
–s¶->
p_dbg
, 
Àvñ
, 
°r
 );

344 
	`debug_¥öt_pk
–
s¶
, 
Àvñ
, 
fûe
, 
löe
, "¸t->", &
¸t
->
pk
 );

346 
¸t
 = cπ->
√xt
;

348 
	}
}

	@polarssl/library/des.c

32 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

33 
	~"pﬁ¨s¶/c⁄fig.h
"

35 #ö˛udê
POLARSSL_CONFIG_FILE


38 #i‡
deföed
(
POLARSSL_DES_C
)

40 
	~"pﬁ¨s¶/des.h
"

42 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

43 
	~"pﬁ¨s¶/∂©f‹m.h
"

45 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

48 #i‡!
deföed
(
POLARSSL_DES_ALT
)

51 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

52 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

53 
	}
}

58 #i‚de‡
GET_UINT32_BE


59 
	#GET_UINT32_BE
(
n
,
b
,
i
) \

61 (
n
Ë–(
uöt32_t
Ë(
b
)[(
i
) ] << 24 ) \

62 | ( (
uöt32_t
Ë(
b
)[(
i
) + 1] << 16 ) \

63 | ( (
uöt32_t
Ë(
b
)[(
i
) + 2] << 8 ) \

64 | ( (
uöt32_t
Ë(
b
)[(
i
) + 3] ); \

65 }

	)

68 #i‚de‡
PUT_UINT32_BE


69 
	#PUT_UINT32_BE
(
n
,
b
,
i
) \

71 (
b
)[(
i
Ë] = (Ë–(
n
) >> 24 ); \

72 (
b
)[(
i
Ë+ 1] = (Ë–(
n
) >> 16 ); \

73 (
b
)[(
i
Ë+ 2] = (Ë–(
n
) >> 8 ); \

74 (
b
)[(
i
Ë+ 3] = (Ë–(
n
) ); \

75 }

	)

81 c⁄° 
uöt32_t
 
	gSB1
[64] =

101 c⁄° 
uöt32_t
 
	gSB2
[64] =

121 c⁄° 
uöt32_t
 
	gSB3
[64] =

141 c⁄° 
uöt32_t
 
	gSB4
[64] =

161 c⁄° 
uöt32_t
 
	gSB5
[64] =

181 c⁄° 
uöt32_t
 
	gSB6
[64] =

201 c⁄° 
uöt32_t
 
	gSB7
[64] =

221 c⁄° 
uöt32_t
 
	gSB8
[64] =

244 c⁄° 
uöt32_t
 
	gLHs
[16] =

252 c⁄° 
uöt32_t
 
	gRHs
[16] =

263 
	#DES_IP
(
X
,
Y
) \

265 
T
 = ((
X
 >> 4Ë^ 
Y
) & 0x0F0F0F0F; Y ^= T; X ^= (T << 4); \

266 
T
 = ((
X
 >> 16Ë^ 
Y
) & 0x0000FFFF; Y ^= T; X ^= (T << 16); \

267 
T
 = ((
Y
 >> 2Ë^ 
X
) & 0x33333333; X ^= T; Y ^= (T << 2); \

268 
T
 = ((
Y
 >> 8Ë^ 
X
) & 0x00FF00FF; X ^= T; Y ^= (T << 8); \

269 
Y
 = ((Y << 1) | (Y >> 31)) & 0xFFFFFFFF; \

270 
T
 = (
X
 ^ 
Y
) & 0xAAAAAAAA; Y ^= T; X ^= T; \

271 
X
 = ((X << 1) | (X >> 31)) & 0xFFFFFFFF; \

272 }

	)

277 
	#DES_FP
(
X
,
Y
) \

279 
X
 = ((X << 31) | (X >> 1)) & 0xFFFFFFFF; \

280 
T
 = (
X
 ^ 
Y
) & 0xAAAAAAAA; X ^= T; Y ^= T; \

281 
Y
 = ((Y << 31) | (Y >> 1)) & 0xFFFFFFFF; \

282 
T
 = ((
Y
 >> 8Ë^ 
X
) & 0x00FF00FF; X ^= T; Y ^= (T << 8); \

283 
T
 = ((
Y
 >> 2Ë^ 
X
) & 0x33333333; X ^= T; Y ^= (T << 2); \

284 
T
 = ((
X
 >> 16Ë^ 
Y
) & 0x0000FFFF; Y ^= T; X ^= (T << 16); \

285 
T
 = ((
X
 >> 4Ë^ 
Y
) & 0x0F0F0F0F; Y ^= T; X ^= (T << 4); \

286 }

	)

291 
	#DES_ROUND
(
X
,
Y
) \

293 
T
 = *
SK
++ ^ 
X
; \

294 
Y
 ^
SB8
[ (
T
 ) & 0x3F ] ^ \

295 
SB6
[ (
T
 >> 8) & 0x3F ] ^ \

296 
SB4
[ (
T
 >> 16) & 0x3F ] ^ \

297 
SB2
[ (
T
 >> 24) & 0x3F ]; \

299 
T
 = *
SK
++ ^ ((
X
 << 28) | (X >> 4)); \

300 
Y
 ^
SB7
[ (
T
 ) & 0x3F ] ^ \

301 
SB5
[ (
T
 >> 8) & 0x3F ] ^ \

302 
SB3
[ (
T
 >> 16) & 0x3F ] ^ \

303 
SB1
[ (
T
 >> 24) & 0x3F ]; \

304 }

	)

306 
	#SWAP
(
a
,
b
Ë{ 
uöt32_t
 
t
 =á;á = b; b =Å;Å = 0; }

	)

308 
	$des_öô
–
des_c⁄ãxt
 *
˘x
 )

310 
	`mem£t
–
˘x
, 0, –
des_c⁄ãxt
 ) );

311 
	}
}

313 
	$des_‰ì
–
des_c⁄ãxt
 *
˘x
 )

315 if–
˘x
 =
NULL
 )

318 
	`pﬁ¨s¶_zîoize
–
˘x
, –
des_c⁄ãxt
 ) );

319 
	}
}

321 
	$des3_öô
–
des3_c⁄ãxt
 *
˘x
 )

323 
	`mem£t
–
˘x
, 0, –
des3_c⁄ãxt
 ) );

324 
	}
}

326 
	$des3_‰ì
–
des3_c⁄ãxt
 *
˘x
 )

328 if–
˘x
 =
NULL
 )

331 
	`pﬁ¨s¶_zîoize
–
˘x
, –
des3_c⁄ãxt
 ) );

332 
	}
}

334 c⁄° 
	godd_∑rôy_èbÀ
[128] = { 1, 2, 4, 7, 8,

345 
	$des_key_£t_∑rôy
–
key
[
DES_KEY_SIZE
] )

347 
i
;

349  
i
 = 0; i < 
DES_KEY_SIZE
; i++ )

350 
key
[
i
] = 
odd_∑rôy_èbÀ
[key[i] / 2];

351 
	}
}

356 
	$des_key_check_key_∑rôy
–c⁄° 
key
[
DES_KEY_SIZE
] )

358 
i
;

360  
i
 = 0; i < 
DES_KEY_SIZE
; i++ )

361 if–
key
[
i
] !
odd_∑rôy_èbÀ
[key[i] / 2] )

365 
	}
}

388 
	#WEAK_KEY_COUNT
 16

	)

390 c⁄° 
	gwók_key_èbÀ
[
WEAK_KEY_COUNT
][
DES_KEY_SIZE
] =

411 
	$des_key_check_wók
–c⁄° 
key
[
DES_KEY_SIZE
] )

413 
i
;

415  
i
 = 0; i < 
WEAK_KEY_COUNT
; i++ )

416 if–
	`memcmp
–
wók_key_èbÀ
[
i
], 
key
, 
DES_KEY_SIZE
) == 0 )

420 
	}
}

422 
	$des_£tkey
–
uöt32_t
 
SK
[32], c⁄° 
key
[
DES_KEY_SIZE
] )

424 
i
;

425 
uöt32_t
 
X
, 
Y
, 
T
;

427 
	`GET_UINT32_BE
–
X
, 
key
, 0 );

428 
	`GET_UINT32_BE
–
Y
, 
key
, 4 );

433 
T
 = ((
Y
 >> 4Ë^ 
X
) & 0x0F0F0F0F; X ^= T; Y ^= (T << 4);

434 
T
 = ((
Y
 ) ^ 
X
) & 0x10101010; X ^= T; Y ^= (T );

436 
X
 = (
LHs
[ (X ) & 0xF] << 3) | (LHs[ (X >> 8) & 0xF ] << 2)

437 | (
LHs
[ (
X
 >> 16) & 0xF] << 1) | (LHs[ (X >> 24) & 0xF ] )

438 | (
LHs
[ (
X
 >> 5) & 0xF] << 7) | (LHs[ (X >> 13) & 0xF ] << 6)

439 | (
LHs
[ (
X
 >> 21) & 0xF] << 5) | (LHs[ (X >> 29) & 0xF ] << 4);

441 
Y
 = (
RHs
[ (Y >> 1) & 0xF] << 3) | (RHs[ (Y >> 9) & 0xF ] << 2)

442 | (
RHs
[ (
Y
 >> 17) & 0xF] << 1) | (RHs[ (Y >> 25) & 0xF ] )

443 | (
RHs
[ (
Y
 >> 4) & 0xF] << 7) | (RHs[ (Y >> 12) & 0xF ] << 6)

444 | (
RHs
[ (
Y
 >> 20) & 0xF] << 5) | (RHs[ (Y >> 28) & 0xF ] << 4);

446 
X
 &= 0x0FFFFFFF;

447 
Y
 &= 0x0FFFFFFF;

452  
i
 = 0; i < 16; i++ )

454 if–
i
 < 2 || i == 8 || i == 15 )

456 
X
 = ((X << 1) | (X >> 27)) & 0x0FFFFFFF;

457 
Y
 = ((Y << 1) | (Y >> 27)) & 0x0FFFFFFF;

461 
X
 = ((X << 2) | (X >> 26)) & 0x0FFFFFFF;

462 
Y
 = ((Y << 2) | (Y >> 26)) & 0x0FFFFFFF;

465 *
SK
++ = ((
X
 << 4) & 0x24000000) | ((X << 28) & 0x10000000)

466 | ((
X
 << 14) & 0x08000000) | ((X << 18) & 0x02080000)

467 | ((
X
 << 6) & 0x01000000) | ((X << 9) & 0x00200000)

468 | ((
X
 >> 1) & 0x00100000) | ((X << 10) & 0x00040000)

469 | ((
X
 << 2) & 0x00020000) | ((X >> 10) & 0x00010000)

470 | ((
Y
 >> 13) & 0x00002000) | ((Y >> 4) & 0x00001000)

471 | ((
Y
 << 6) & 0x00000800) | ((Y >> 1) & 0x00000400)

472 | ((
Y
 >> 14) & 0x00000200) | ((Y ) & 0x00000100)

473 | ((
Y
 >> 5) & 0x00000020) | ((Y >> 10) & 0x00000010)

474 | ((
Y
 >> 3) & 0x00000008) | ((Y >> 18) & 0x00000004)

475 | ((
Y
 >> 26) & 0x00000002) | ((Y >> 24) & 0x00000001);

477 *
SK
++ = ((
X
 << 15) & 0x20000000) | ((X << 17) & 0x10000000)

478 | ((
X
 << 10) & 0x08000000) | ((X << 22) & 0x04000000)

479 | ((
X
 >> 2) & 0x02000000) | ((X << 1) & 0x01000000)

480 | ((
X
 << 16) & 0x00200000) | ((X << 11) & 0x00100000)

481 | ((
X
 << 3) & 0x00080000) | ((X >> 6) & 0x00040000)

482 | ((
X
 << 15) & 0x00020000) | ((X >> 4) & 0x00010000)

483 | ((
Y
 >> 2) & 0x00002000) | ((Y << 8) & 0x00001000)

484 | ((
Y
 >> 14) & 0x00000808) | ((Y >> 9) & 0x00000400)

485 | ((
Y
 ) & 0x00000200) | ((Y << 7) & 0x00000100)

486 | ((
Y
 >> 7) & 0x00000020) | ((Y >> 3) & 0x00000011)

487 | ((
Y
 << 2) & 0x00000004) | ((Y >> 21) & 0x00000002);

489 
	}
}

494 
	$des_£tkey_íc
–
des_c⁄ãxt
 *
˘x
, c⁄° 
key
[
DES_KEY_SIZE
] )

496 
	`des_£tkey
–
˘x
->
sk
, 
key
 );

499 
	}
}

504 
	$des_£tkey_dec
–
des_c⁄ãxt
 *
˘x
, c⁄° 
key
[
DES_KEY_SIZE
] )

506 
i
;

508 
	`des_£tkey
–
˘x
->
sk
, 
key
 );

510  
i
 = 0; i < 16; i += 2 )

512 
	`SWAP
–
˘x
->
sk
[
i
 ], ctx->sk[30 - i] );

513 
	`SWAP
–
˘x
->
sk
[
i
 + 1], ctx->sk[31 - i] );

517 
	}
}

519 
	$des3_£t2key
–
uöt32_t
 
esk
[96],

520 
uöt32_t
 
dsk
[96],

521 c⁄° 
key
[
DES_KEY_SIZE
*2] )

523 
i
;

525 
	`des_£tkey
–
esk
, 
key
 );

526 
	`des_£tkey
–
dsk
 + 32, 
key
 + 8 );

528  
i
 = 0; i < 32; i += 2 )

530 
dsk
[
i
 ] = 
esk
[30 - i];

531 
dsk
[
i
 + 1] = 
esk
[31 - i];

533 
esk
[
i
 + 32] = 
dsk
[62 - i];

534 
esk
[
i
 + 33] = 
dsk
[63 - i];

536 
esk
[
i
 + 64] =Ésk[i ];

537 
esk
[
i
 + 65] =Ésk[i + 1];

539 
dsk
[
i
 + 64] = dsk[i ];

540 
dsk
[
i
 + 65] = dsk[i + 1];

542 
	}
}

547 
	$des3_£t2key_íc
–
des3_c⁄ãxt
 *
˘x
,

548 c⁄° 
key
[
DES_KEY_SIZE
 * 2] )

550 
uöt32_t
 
sk
[96];

552 
	`des3_£t2key
–
˘x
->
sk
, sk, 
key
 );

553 
	`pﬁ¨s¶_zîoize
–
sk
, ( sk ) );

556 
	}
}

561 
	$des3_£t2key_dec
–
des3_c⁄ãxt
 *
˘x
,

562 c⁄° 
key
[
DES_KEY_SIZE
 * 2] )

564 
uöt32_t
 
sk
[96];

566 
	`des3_£t2key
–
sk
, 
˘x
->sk, 
key
 );

567 
	`pﬁ¨s¶_zîoize
–
sk
, ( sk ) );

570 
	}
}

572 
	$des3_£t3key
–
uöt32_t
 
esk
[96],

573 
uöt32_t
 
dsk
[96],

574 c⁄° 
key
[24] )

576 
i
;

578 
	`des_£tkey
–
esk
, 
key
 );

579 
	`des_£tkey
–
dsk
 + 32, 
key
 + 8 );

580 
	`des_£tkey
–
esk
 + 64, 
key
 + 16 );

582  
i
 = 0; i < 32; i += 2 )

584 
dsk
[
i
 ] = 
esk
[94 - i];

585 
dsk
[
i
 + 1] = 
esk
[95 - i];

587 
esk
[
i
 + 32] = 
dsk
[62 - i];

588 
esk
[
i
 + 33] = 
dsk
[63 - i];

590 
dsk
[
i
 + 64] = 
esk
[30 - i];

591 
dsk
[
i
 + 65] = 
esk
[31 - i];

593 
	}
}

598 
	$des3_£t3key_íc
–
des3_c⁄ãxt
 *
˘x
,

599 c⁄° 
key
[
DES_KEY_SIZE
 * 3] )

601 
uöt32_t
 
sk
[96];

603 
	`des3_£t3key
–
˘x
->
sk
, sk, 
key
 );

604 
	`pﬁ¨s¶_zîoize
–
sk
, ( sk ) );

607 
	}
}

612 
	$des3_£t3key_dec
–
des3_c⁄ãxt
 *
˘x
,

613 c⁄° 
key
[
DES_KEY_SIZE
 * 3] )

615 
uöt32_t
 
sk
[96];

617 
	`des3_£t3key
–
sk
, 
˘x
->sk, 
key
 );

618 
	`pﬁ¨s¶_zîoize
–
sk
, ( sk ) );

621 
	}
}

626 
	$des_¸y±_ecb
–
des_c⁄ãxt
 *
˘x
,

627 c⁄° 
öput
[8],

628 
ouçut
[8] )

630 
i
;

631 
uöt32_t
 
X
, 
Y
, 
T
, *
SK
;

633 
SK
 = 
˘x
->
sk
;

635 
	`GET_UINT32_BE
–
X
, 
öput
, 0 );

636 
	`GET_UINT32_BE
–
Y
, 
öput
, 4 );

638 
	`DES_IP
–
X
, 
Y
 );

640  
i
 = 0; i < 8; i++ )

642 
	`DES_ROUND
–
Y
, 
X
 );

643 
	`DES_ROUND
–
X
, 
Y
 );

646 
	`DES_FP
–
Y
, 
X
 );

648 
	`PUT_UINT32_BE
–
Y
, 
ouçut
, 0 );

649 
	`PUT_UINT32_BE
–
X
, 
ouçut
, 4 );

652 
	}
}

654 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

658 
	$des_¸y±_cbc
–
des_c⁄ãxt
 *
˘x
,

659 
mode
,

660 
size_t
 
Àngth
,

661 
iv
[8],

662 c⁄° *
öput
,

663 *
ouçut
 )

665 
i
;

666 
ãmp
[8];

668 if–
Àngth
 % 8 )

669 –
POLARSSL_ERR_DES_INVALID_INPUT_LENGTH
 );

671 if–
mode
 =
DES_ENCRYPT
 )

673  
Àngth
 > 0 )

675  
i
 = 0; i < 8; i++ )

676 
ouçut
[
i
] = ()–
öput
[i] ^ 
iv
[i] );

678 
	`des_¸y±_ecb
–
˘x
, 
ouçut
, output );

679 
	`mem˝y
–
iv
, 
ouçut
, 8 );

681 
öput
 += 8;

682 
ouçut
 += 8;

683 
Àngth
 -= 8;

688  
Àngth
 > 0 )

690 
	`mem˝y
–
ãmp
, 
öput
, 8 );

691 
	`des_¸y±_ecb
–
˘x
, 
öput
, 
ouçut
 );

693  
i
 = 0; i < 8; i++ )

694 
ouçut
[
i
] = ()–ouçut[i] ^ 
iv
[i] );

696 
	`mem˝y
–
iv
, 
ãmp
, 8 );

698 
öput
 += 8;

699 
ouçut
 += 8;

700 
Àngth
 -= 8;

705 
	}
}

711 
	$des3_¸y±_ecb
–
des3_c⁄ãxt
 *
˘x
,

712 c⁄° 
öput
[8],

713 
ouçut
[8] )

715 
i
;

716 
uöt32_t
 
X
, 
Y
, 
T
, *
SK
;

718 
SK
 = 
˘x
->
sk
;

720 
	`GET_UINT32_BE
–
X
, 
öput
, 0 );

721 
	`GET_UINT32_BE
–
Y
, 
öput
, 4 );

723 
	`DES_IP
–
X
, 
Y
 );

725  
i
 = 0; i < 8; i++ )

727 
	`DES_ROUND
–
Y
, 
X
 );

728 
	`DES_ROUND
–
X
, 
Y
 );

731  
i
 = 0; i < 8; i++ )

733 
	`DES_ROUND
–
X
, 
Y
 );

734 
	`DES_ROUND
–
Y
, 
X
 );

737  
i
 = 0; i < 8; i++ )

739 
	`DES_ROUND
–
Y
, 
X
 );

740 
	`DES_ROUND
–
X
, 
Y
 );

743 
	`DES_FP
–
Y
, 
X
 );

745 
	`PUT_UINT32_BE
–
Y
, 
ouçut
, 0 );

746 
	`PUT_UINT32_BE
–
X
, 
ouçut
, 4 );

749 
	}
}

751 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

755 
	$des3_¸y±_cbc
–
des3_c⁄ãxt
 *
˘x
,

756 
mode
,

757 
size_t
 
Àngth
,

758 
iv
[8],

759 c⁄° *
öput
,

760 *
ouçut
 )

762 
i
;

763 
ãmp
[8];

765 if–
Àngth
 % 8 )

766 –
POLARSSL_ERR_DES_INVALID_INPUT_LENGTH
 );

768 if–
mode
 =
DES_ENCRYPT
 )

770  
Àngth
 > 0 )

772  
i
 = 0; i < 8; i++ )

773 
ouçut
[
i
] = ()–
öput
[i] ^ 
iv
[i] );

775 
	`des3_¸y±_ecb
–
˘x
, 
ouçut
, output );

776 
	`mem˝y
–
iv
, 
ouçut
, 8 );

778 
öput
 += 8;

779 
ouçut
 += 8;

780 
Àngth
 -= 8;

785  
Àngth
 > 0 )

787 
	`mem˝y
–
ãmp
, 
öput
, 8 );

788 
	`des3_¸y±_ecb
–
˘x
, 
öput
, 
ouçut
 );

790  
i
 = 0; i < 8; i++ )

791 
ouçut
[
i
] = ()–ouçut[i] ^ 
iv
[i] );

793 
	`mem˝y
–
iv
, 
ãmp
, 8 );

795 
öput
 += 8;

796 
ouçut
 += 8;

797 
Àngth
 -= 8;

802 
	}
}

807 #i‡
deföed
(
POLARSSL_SELF_TEST
)

809 
	~<°dio.h
>

816 c⁄° 
	gdes3_ã°_keys
[24] =

823 c⁄° 
	gdes3_ã°_buf
[8] =

828 c⁄° 
	gdes3_ã°_ecb_dec
[3][8] =

835 c⁄° 
	gdes3_ã°_ecb_íc
[3][8] =

842 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

843 c⁄° 
	gdes3_ã°_iv
[8] =

848 c⁄° 
	gdes3_ã°_cbc_dec
[3][8] =

855 c⁄° 
	gdes3_ã°_cbc_íc
[3][8] =

866 
	$des_£lf_ã°
–
vîbo£
 )

868 
i
, 
j
, 
u
, 
v
, 
ªt
 = 0;

869 
des_c⁄ãxt
 
˘x
;

870 
des3_c⁄ãxt
 
˘x3
;

871 
buf
[8];

872 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
)

873 
¥v
[8];

874 
iv
[8];

877 
	`des_öô
–&
˘x
 );

878 
	`des3_öô
–&
˘x3
 );

882  
i
 = 0; i < 6; i++ )

884 
u
 = 
i
 >> 1;

885 
v
 = 
i
 & 1;

887 if–
vîbo£
 != 0 )

888 
	`pﬁ¨s¶_¥ötf
( " DES%c-ECB-%3d (%s): ",

889 –
u
 == 0 ) ? ' ' : '3', 56 + u * 56,

890 –
v
 =
DES_DECRYPT
 ) ? "dec" : "enc" );

892 
	`mem˝y
–
buf
, 
des3_ã°_buf
, 8 );

894  
i
 )

897 
	`des_£tkey_dec
–&
˘x
, 
des3_ã°_keys
 );

901 
	`des_£tkey_íc
–&
˘x
, 
des3_ã°_keys
 );

905 
	`des3_£t2key_dec
–&
˘x3
, 
des3_ã°_keys
 );

909 
	`des3_£t2key_íc
–&
˘x3
, 
des3_ã°_keys
 );

913 
	`des3_£t3key_dec
–&
˘x3
, 
des3_ã°_keys
 );

917 
	`des3_£t3key_íc
–&
˘x3
, 
des3_ã°_keys
 );

924  
j
 = 0; j < 10000; j++ )

926 if–
u
 == 0 )

927 
	`des_¸y±_ecb
–&
˘x
, 
buf
, buf );

929 
	`des3_¸y±_ecb
–&
˘x3
, 
buf
, buf );

932 if––
v
 =
DES_DECRYPT
 &&

933 
	`memcmp
–
buf
, 
des3_ã°_ecb_dec
[
u
], 8 ) != 0 ) ||

934 –
v
 !
DES_DECRYPT
 &&

935 
	`memcmp
–
buf
, 
des3_ã°_ecb_íc
[
u
], 8 ) != 0 ) )

937 if–
vîbo£
 != 0 )

938 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

940 
ªt
 = 1;

941 
exô
;

944 if–
vîbo£
 != 0 )

945 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

948 if–
vîbo£
 != 0 )

949 
	`pﬁ¨s¶_¥ötf
( "\n" );

951 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
)

955  
i
 = 0; i < 6; i++ )

957 
u
 = 
i
 >> 1;

958 
v
 = 
i
 & 1;

960 if–
vîbo£
 != 0 )

961 
	`pﬁ¨s¶_¥ötf
( " DES%c-CBC-%3d (%s): ",

962 –
u
 == 0 ) ? ' ' : '3', 56 + u * 56,

963 –
v
 =
DES_DECRYPT
 ) ? "dec" : "enc" );

965 
	`mem˝y
–
iv
, 
des3_ã°_iv
, 8 );

966 
	`mem˝y
–
¥v
, 
des3_ã°_iv
, 8 );

967 
	`mem˝y
–
buf
, 
des3_ã°_buf
, 8 );

969  
i
 )

972 
	`des_£tkey_dec
–&
˘x
, 
des3_ã°_keys
 );

976 
	`des_£tkey_íc
–&
˘x
, 
des3_ã°_keys
 );

980 
	`des3_£t2key_dec
–&
˘x3
, 
des3_ã°_keys
 );

984 
	`des3_£t2key_íc
–&
˘x3
, 
des3_ã°_keys
 );

988 
	`des3_£t3key_dec
–&
˘x3
, 
des3_ã°_keys
 );

992 
	`des3_£t3key_íc
–&
˘x3
, 
des3_ã°_keys
 );

999 if–
v
 =
DES_DECRYPT
 )

1001  
j
 = 0; j < 10000; j++ )

1003 if–
u
 == 0 )

1004 
	`des_¸y±_cbc
–&
˘x
, 
v
, 8, 
iv
, 
buf
, buf );

1006 
	`des3_¸y±_cbc
–&
˘x3
, 
v
, 8, 
iv
, 
buf
, buf );

1011  
j
 = 0; j < 10000; j++ )

1013 
tmp
[8];

1015 if–
u
 == 0 )

1016 
	`des_¸y±_cbc
–&
˘x
, 
v
, 8, 
iv
, 
buf
, buf );

1018 
	`des3_¸y±_cbc
–&
˘x3
, 
v
, 8, 
iv
, 
buf
, buf );

1020 
	`mem˝y
–
tmp
, 
¥v
, 8 );

1021 
	`mem˝y
–
¥v
, 
buf
, 8 );

1022 
	`mem˝y
–
buf
, 
tmp
, 8 );

1025 
	`mem˝y
–
buf
, 
¥v
, 8 );

1028 if––
v
 =
DES_DECRYPT
 &&

1029 
	`memcmp
–
buf
, 
des3_ã°_cbc_dec
[
u
], 8 ) != 0 ) ||

1030 –
v
 !
DES_DECRYPT
 &&

1031 
	`memcmp
–
buf
, 
des3_ã°_cbc_íc
[
u
], 8 ) != 0 ) )

1033 if–
vîbo£
 != 0 )

1034 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1036 
ªt
 = 1;

1037 
exô
;

1040 if–
vîbo£
 != 0 )

1041 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

1045 if–
vîbo£
 != 0 )

1046 
	`pﬁ¨s¶_¥ötf
( "\n" );

1048 
exô
:

1049 
	`des_‰ì
–&
˘x
 );

1050 
	`des3_‰ì
–&
˘x3
 );

1052 –
ªt
 );

1053 
	}
}

	@polarssl/library/dhm.c

31 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

32 
	~"pﬁ¨s¶/c⁄fig.h
"

34 #ö˛udê
POLARSSL_CONFIG_FILE


37 #i‡
deföed
(
POLARSSL_DHM_C
)

39 
	~"pﬁ¨s¶/dhm.h
"

41 #i‡
deföed
(
POLARSSL_PEM_PARSE_C
)

42 
	~"pﬁ¨s¶/≥m.h
"

45 #i‡
deföed
(
POLARSSL_ASN1_PARSE_C
)

46 
	~"pﬁ¨s¶/a¢1.h
"

49 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

50 
	~"pﬁ¨s¶/∂©f‹m.h
"

52 
	~<°dlib.h
>

53 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

54 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

55 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

59 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

60 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

61 
	}
}

66 
	$dhm_ªad_bignum
–
mpi
 *
X
,

67 **
p
,

68 c⁄° *
íd
 )

70 
ªt
, 
n
;

72 if–
íd
 - *
p
 < 2 )

73 –
POLARSSL_ERR_DHM_BAD_INPUT_DATA
 );

75 
n
 = ( (*
p
)[0] << 8 ) | (*p)[1];

76 (*
p
) += 2;

78 if–()–
íd
 - *
p
 ) < 
n
 )

79 –
POLARSSL_ERR_DHM_BAD_INPUT_DATA
 );

81 if––
ªt
 = 
	`mpi_ªad_bö¨y
–
X
, *
p
, 
n
 ) ) != 0 )

82 –
POLARSSL_ERR_DHM_READ_PARAMS_FAILED
 + 
ªt
 );

84 (*
p
Ë+
n
;

87 
	}
}

98 
	$dhm_check_ønge
–c⁄° 
mpi
 *
∑øm
, c⁄° mpò*
P
 )

100 
mpi
 
L
, 
U
;

101 
ªt
 = 
POLARSSL_ERR_DHM_BAD_INPUT_DATA
;

103 
	`mpi_öô
–&
L
 ); mpi_öô–&
U
 );

105 
	`MPI_CHK
–
	`mpi_l£t
–&
L
, 2 ) );

106 
	`MPI_CHK
–
	`mpi_sub_öt
–&
U
, 
P
, 2 ) );

108 if–
	`mpi_cmp_mpi
–
∑øm
, &
L
 ) >= 0 &&

109 
	`mpi_cmp_mpi
–
∑øm
, &
U
 ) <= 0 )

111 
ªt
 = 0;

114 
˛ónup
:

115 
	`mpi_‰ì
–&
L
 ); mpi_‰ì–&
U
 );

116 –
ªt
 );

117 
	}
}

119 
	$dhm_öô
–
dhm_c⁄ãxt
 *
˘x
 )

121 
	`mem£t
–
˘x
, 0, –
dhm_c⁄ãxt
 ) );

122 
	}
}

127 
	$dhm_ªad_∑øms
–
dhm_c⁄ãxt
 *
˘x
,

128 **
p
,

129 c⁄° *
íd
 )

131 
ªt
;

133 if––
ªt
 = 
	`dhm_ªad_bignum
–&
˘x
->
P
, 
p
, 
íd
 ) ) != 0 ||

134 –
ªt
 = 
	`dhm_ªad_bignum
–&
˘x
->
G
, 
p
, 
íd
 ) ) != 0 ||

135 –
ªt
 = 
	`dhm_ªad_bignum
–&
˘x
->
GY
, 
p
, 
íd
 ) ) != 0 )

136 –
ªt
 );

138 if––
ªt
 = 
	`dhm_check_ønge
–&
˘x
->
GY
, &˘x->
P
 ) ) != 0 )

139 –
ªt
 );

141 
˘x
->
Àn
 = 
	`mpi_size
–&˘x->
P
 );

144 
	}
}

149 
dhm_make_∑øms
–
dhm_c⁄ãxt
 *
˘x
, 
x_size
,

150 *
ouçut
, 
size_t
 *
ﬁí
,

151 (*
f_∫g
)(*, *, 
size_t
),

152 *
p_∫g
 )

154 
ªt
, 
cou¡
 = 0;

155 
size_t
 
n1
, 
n2
, 
n3
;

156 *
p
;

158 if–
	`mpi_cmp_öt
–&
˘x
->
P
, 0 ) == 0 )

159 –
POLARSSL_ERR_DHM_BAD_INPUT_DATA
 );

166 
	`mpi_fûl_øndom
–&
˘x
->
X
, 
x_size
, 
f_∫g
, 
p_∫g
 );

168  
	`mpi_cmp_mpi
–&
˘x
->
X
, &˘x->
P
 ) >= 0 )

169 
	`MPI_CHK
–
	`mpi_shi·_r
–&
˘x
->
X
, 1 ) );

171 if–
cou¡
++ > 10 )

172 –
POLARSSL_ERR_DHM_MAKE_PARAMS_FAILED
 );

174  
	`dhm_check_ønge
–&
˘x
->
X
, &˘x->
P
 ) != 0 );

179 
	`MPI_CHK
–
	`mpi_exp_mod
–&
˘x
->
GX
, &˘x->
G
, &˘x->
X
,

180 &
˘x
->
P
 , &˘x->
RP
 ) );

182 if––
ªt
 = 
	`dhm_check_ønge
–&
˘x
->
GX
, &˘x->
P
 ) ) != 0 )

183 –
ªt
 );

188 
	#DHM_MPI_EXPORT
(
X
,
n
) \

189 
	`MPI_CHK
–
	`mpi_wrôe_bö¨y
–
X
, 
p
 + 2, 
n
 ) ); \

190 *
p
++ = ()–
n
 >> 8 ); \

191 *
p
++ = ()–
n
 );Ö +n;

	)

193 
n1
 = 
	`mpi_size
–&
˘x
->
P
 );

194 
n2
 = 
	`mpi_size
–&
˘x
->
G
 );

195 
n3
 = 
	`mpi_size
–&
˘x
->
GX
 );

197 
p
 = 
ouçut
;

198 
	`DHM_MPI_EXPORT
–&
˘x
->
P
 , 
n1
 );

199 
	`DHM_MPI_EXPORT
–&
˘x
->
G
 , 
n2
 );

200 
	`DHM_MPI_EXPORT
–&
˘x
->
GX
, 
n3
 );

202 *
ﬁí
 = 
p
 - 
ouçut
;

204 
˘x
->
Àn
 = 
n1
;

206 
˛ónup
:

208 if–
ªt
 != 0 )

209 –
POLARSSL_ERR_DHM_MAKE_PARAMS_FAILED
 + 
ªt
 );

212 
	}
}

217 
	$dhm_ªad_public
–
dhm_c⁄ãxt
 *
˘x
,

218 c⁄° *
öput
, 
size_t
 
ûí
 )

220 
ªt
;

222 if–
˘x
 =
NULL
 || 
ûí
 < 1 || iÀ¿> ctx->
Àn
 )

223 –
POLARSSL_ERR_DHM_BAD_INPUT_DATA
 );

225 if––
ªt
 = 
	`mpi_ªad_bö¨y
–&
˘x
->
GY
, 
öput
, 
ûí
 ) ) != 0 )

226 –
POLARSSL_ERR_DHM_READ_PUBLIC_FAILED
 + 
ªt
 );

229 
	}
}

234 
dhm_make_public
–
dhm_c⁄ãxt
 *
˘x
, 
x_size
,

235 *
ouçut
, 
size_t
 
ﬁí
,

236 (*
f_∫g
)(*, *, 
size_t
),

237 *
p_∫g
 )

239 
ªt
, 
cou¡
 = 0;

241 if–
˘x
 =
NULL
 || 
ﬁí
 < 1 || oÀ¿> ctx->
Àn
 )

242 –
POLARSSL_ERR_DHM_BAD_INPUT_DATA
 );

244 if–
	`mpi_cmp_öt
–&
˘x
->
P
, 0 ) == 0 )

245 –
POLARSSL_ERR_DHM_BAD_INPUT_DATA
 );

252 
	`mpi_fûl_øndom
–&
˘x
->
X
, 
x_size
, 
f_∫g
, 
p_∫g
 );

254  
	`mpi_cmp_mpi
–&
˘x
->
X
, &˘x->
P
 ) >= 0 )

255 
	`MPI_CHK
–
	`mpi_shi·_r
–&
˘x
->
X
, 1 ) );

257 if–
cou¡
++ > 10 )

258 –
POLARSSL_ERR_DHM_MAKE_PUBLIC_FAILED
 );

260  
	`dhm_check_ønge
–&
˘x
->
X
, &˘x->
P
 ) != 0 );

262 
	`MPI_CHK
–
	`mpi_exp_mod
–&
˘x
->
GX
, &˘x->
G
, &˘x->
X
,

263 &
˘x
->
P
 , &˘x->
RP
 ) );

265 if––
ªt
 = 
	`dhm_check_ønge
–&
˘x
->
GX
, &˘x->
P
 ) ) != 0 )

266 –
ªt
 );

268 
	`MPI_CHK
–
	`mpi_wrôe_bö¨y
–&
˘x
->
GX
, 
ouçut
, 
ﬁí
 ) );

270 
˛ónup
:

272 if–
ªt
 != 0 )

273 –
POLARSSL_ERR_DHM_MAKE_PUBLIC_FAILED
 + 
ªt
 );

276 
	}
}

284 
dhm_upd©e_blödög
–
dhm_c⁄ãxt
 *
˘x
,

285 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 )

287 
ªt
, 
cou¡
;

293 if–
	`mpi_cmp_mpi
–&
˘x
->
X
, &˘x->
pX
 ) != 0 )

295 
	`MPI_CHK
–
	`mpi_c›y
–&
˘x
->
pX
, &˘x->
X
 ) );

296 
	`MPI_CHK
–
	`mpi_l£t
–&
˘x
->
Vi
, 1 ) );

297 
	`MPI_CHK
–
	`mpi_l£t
–&
˘x
->
Vf
, 1 ) );

306 if–
	`mpi_cmp_öt
–&
˘x
->
Vi
, 1 ) != 0 )

308 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
˘x
->
Vi
, &ctx->Vi, &ctx->Vi ) );

309 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
˘x
->
Vi
, &˘x->Vi, &˘x->
P
 ) );

311 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
˘x
->
Vf
, &ctx->Vf, &ctx->Vf ) );

312 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
˘x
->
Vf
, &˘x->Vf, &˘x->
P
 ) );

322 
cou¡
 = 0;

325 
	`mpi_fûl_øndom
–&
˘x
->
Vi
, 
	`mpi_size
–&˘x->
P
 ), 
f_∫g
, 
p_∫g
 );

327  
	`mpi_cmp_mpi
–&
˘x
->
Vi
, &˘x->
P
 ) >= 0 )

328 
	`MPI_CHK
–
	`mpi_shi·_r
–&
˘x
->
Vi
, 1 ) );

330 if–
cou¡
++ > 10 )

331 –
POLARSSL_ERR_MPI_NOT_ACCEPTABLE
 );

333  
	`mpi_cmp_öt
–&
˘x
->
Vi
, 1 ) <= 0 );

336 
	`MPI_CHK
–
	`mpi_öv_mod
–&
˘x
->
Vf
, &˘x->
Vi
, &˘x->
P
 ) );

337 
	`MPI_CHK
–
	`mpi_exp_mod
–&
˘x
->
Vf
, &˘x->Vf, &˘x->
X
, &˘x->
P
, &˘x->
RP
 ) );

339 
˛ónup
:

340 –
ªt
 );

341 
	}
}

346 
dhm_ˇlc_£¸ë
–
dhm_c⁄ãxt
 *
˘x
,

347 *
ouçut
, 
size_t
 *
ﬁí
,

348 (*
f_∫g
)(*, *, 
size_t
),

349 *
p_∫g
 )

351 
ªt
;

352 
mpi
 
GYb
;

354 if–
˘x
 =
NULL
 || *
ﬁí
 < ctx->
Àn
 )

355 –
POLARSSL_ERR_DHM_BAD_INPUT_DATA
 );

357 if––
ªt
 = 
	`dhm_check_ønge
–&
˘x
->
GY
, &˘x->
P
 ) ) != 0 )

358 –
ªt
 );

360 
	`mpi_öô
–&
GYb
 );

363 if–
f_∫g
 !
NULL
 )

365 
	`MPI_CHK
–
	`dhm_upd©e_blödög
–
˘x
, 
f_∫g
, 
p_∫g
 ) );

366 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
GYb
, &
˘x
->
GY
, &˘x->
Vi
 ) );

367 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
GYb
, &GYb, &
˘x
->
P
 ) );

370 
	`MPI_CHK
–
	`mpi_c›y
–&
GYb
, &
˘x
->
GY
 ) );

373 
	`MPI_CHK
–
	`mpi_exp_mod
–&
˘x
->
K
, &
GYb
, &˘x->
X
,

374 &
˘x
->
P
, &˘x->
RP
 ) );

377 if–
f_∫g
 !
NULL
 )

379 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
˘x
->
K
, &˘x->K, &˘x->
Vf
 ) );

380 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
˘x
->
K
, &˘x->K, &˘x->
P
 ) );

383 *
ﬁí
 = 
	`mpi_size
–&
˘x
->
K
 );

385 
	`MPI_CHK
–
	`mpi_wrôe_bö¨y
–&
˘x
->
K
, 
ouçut
, *
ﬁí
 ) );

387 
˛ónup
:

388 
	`mpi_‰ì
–&
GYb
 );

390 if–
ªt
 != 0 )

391 –
POLARSSL_ERR_DHM_CALC_SECRET_FAILED
 + 
ªt
 );

394 
	}
}

399 
	$dhm_‰ì
–
dhm_c⁄ãxt
 *
˘x
 )

401 
	`mpi_‰ì
–&
˘x
->
pX
); mpi_‰ì–&˘x->
Vf
 ); mpi_‰ì–&˘x->
Vi
 );

402 
	`mpi_‰ì
–&
˘x
->
RP
 ); mpi_‰ì–&˘x->
K
 ); mpi_‰ì–&˘x->
GY
 );

403 
	`mpi_‰ì
–&
˘x
->
GX
 ); mpi_‰ì–&˘x->
X
 ); mpi_‰ì–&˘x->
G
 );

404 
	`mpi_‰ì
–&
˘x
->
P
 );

406 
	`pﬁ¨s¶_zîoize
–
˘x
, –
dhm_c⁄ãxt
 ) );

407 
	}
}

409 #i‡
deföed
(
POLARSSL_ASN1_PARSE_C
)

413 
	$dhm_∑r£_dhm
–
dhm_c⁄ãxt
 *
dhm
, c⁄° *
dhmö
,

414 
size_t
 
dhmöÀn
 )

416 
ªt
;

417 
size_t
 
Àn
;

418 *
p
, *
íd
;

419 #i‡
	`deföed
(
POLARSSL_PEM_PARSE_C
)

420 
≥m_c⁄ãxt
 
≥m
;

422 
	`≥m_öô
–&
≥m
 );

424 
ªt
 = 
	`≥m_ªad_buf„r
–&
≥m
,

427 
dhmö
, 
NULL
, 0, &
dhmöÀn
 );

429 if–
ªt
 == 0 )

434 
dhmöÀn
 = 
≥m
.
buÊí
;

436 if–
ªt
 !
POLARSSL_ERR_PEM_NO_HEADER_FOOTER_PRESENT
 )

437 
exô
;

439 
p
 = ( 
ªt
 =0 ) ? 
≥m
.
buf
 : (*Ë
dhmö
;

441 
p
 = (*Ë
dhmö
;

443 
íd
 = 
p
 + 
dhmöÀn
;

451 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

452 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

454 
ªt
 = 
POLARSSL_ERR_DHM_INVALID_FORMAT
 +Ñet;

455 
exô
;

458 
íd
 = 
p
 + 
Àn
;

460 if––
ªt
 = 
	`a¢1_gë_mpi
–&
p
, 
íd
, &
dhm
->
P
 ) ) != 0 ||

461 –
ªt
 = 
	`a¢1_gë_mpi
–&
p
, 
íd
, &
dhm
->
G
 ) ) != 0 )

463 
ªt
 = 
POLARSSL_ERR_DHM_INVALID_FORMAT
 +Ñet;

464 
exô
;

467 if–
p
 !
íd
 )

469 
ªt
 = 
POLARSSL_ERR_DHM_INVALID_FORMAT
 +

470 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
;

471 
exô
;

474 
ªt
 = 0;

476 
dhm
->
Àn
 = 
	`mpi_size
–&dhm->
P
 );

478 
exô
:

479 #i‡
	`deföed
(
POLARSSL_PEM_PARSE_C
)

480 
	`≥m_‰ì
–&
≥m
 );

482 if–
ªt
 != 0 )

483 
	`dhm_‰ì
–
dhm
 );

485 –
ªt
 );

486 
	}
}

488 #i‡
deföed
(
POLARSSL_FS_IO
)

492 
	$lﬂd_fûe
–c⁄° *
∑th
, **
buf
, 
size_t
 *
n
 )

494 
FILE
 *
f
;

495 
size
;

497 if––
f
 = 
	`f›í
–
∑th
, "rb" ) ) =
NULL
 )

498 –
POLARSSL_ERR_DHM_FILE_IO_ERROR
 );

500 
	`f£ek
–
f
, 0, 
SEEK_END
 );

501 if––
size
 = 
	`·ñl
–
f
 ) ) == -1 )

503 
	`f˛o£
–
f
 );

504 –
POLARSSL_ERR_DHM_FILE_IO_ERROR
 );

506 
	`f£ek
–
f
, 0, 
SEEK_SET
 );

508 *
n
 = (
size_t
Ë
size
;

510 if–*
n
 + 1 == 0 ||

511 –*
buf
 = (*Ë
	`pﬁ¨s¶_mÆloc
–*
n
 + 1 ) ) =
NULL
 )

513 
	`f˛o£
–
f
 );

514 –
POLARSSL_ERR_DHM_MALLOC_FAILED
 );

517 if–
	`‰ód
–*
buf
, 1, *
n
, 
f
 ) != *n )

519 
	`f˛o£
–
f
 );

520 
	`pﬁ¨s¶_‰ì
–*
buf
 );

521 –
POLARSSL_ERR_DHM_FILE_IO_ERROR
 );

524 
	`f˛o£
–
f
 );

526 (*
buf
)[*
n
] = '\0';

529 
	}
}

534 
	$dhm_∑r£_dhmfûe
–
dhm_c⁄ãxt
 *
dhm
, c⁄° *
∑th
 )

536 
ªt
;

537 
size_t
 
n
;

538 *
buf
;

540 if––
ªt
 = 
	`lﬂd_fûe
–
∑th
, &
buf
, &
n
 ) ) != 0 )

541 –
ªt
 );

543 
ªt
 = 
	`dhm_∑r£_dhm
–
dhm
, 
buf
, 
n
 );

545 
	`pﬁ¨s¶_zîoize
–
buf
, 
n
 + 1 );

546 
	`pﬁ¨s¶_‰ì
–
buf
 );

548 –
ªt
 );

549 
	}
}

553 #i‡
deföed
(
POLARSSL_SELF_TEST
)

555 
	~"pﬁ¨s¶/˚πs.h
"

560 
	$dhm_£lf_ã°
–
vîbo£
 )

562 #i‡
	`deföed
(
POLARSSL_CERTS_C
)

563 
ªt
;

564 
dhm_c⁄ãxt
 
dhm
;

566 
	`dhm_öô
–&
dhm
 );

568 if–
vîbo£
 != 0 )

569 
	`pﬁ¨s¶_¥ötf
( " DHMÖarameterÜoad: " );

571 if––
ªt
 = 
	`dhm_∑r£_dhm
–&
dhm
, (c⁄° *Ë
ã°_dhm_∑øms
,

572 
	`°æí
–
ã°_dhm_∑øms
 ) ) ) != 0 )

574 if–
vîbo£
 != 0 )

575 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

577 
ªt
 = 1;

578 
exô
;

581 if–
vîbo£
 != 0 )

582 
	`pﬁ¨s¶_¥ötf
( "passed\n\n" );

584 
exô
:

585 
	`dhm_‰ì
–&
dhm
 );

587 –
ªt
 );

589 if–
vîbo£
 != 0 )

590 
	`pﬁ¨s¶_¥ötf
( " DHMÖarameterÜoad: skipped\n" );

594 
	}
}

	@polarssl/library/ecdh.c

33 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

34 
	~"pﬁ¨s¶/c⁄fig.h
"

36 #ö˛udê
POLARSSL_CONFIG_FILE


39 #i‡
deföed
(
POLARSSL_ECDH_C
)

41 
	~"pﬁ¨s¶/ecdh.h
"

46 
ecdh_gí_public
–
e˝_group
 *
gΩ
, 
mpi
 *
d
, 
e˝_poöt
 *
Q
,

47 (*
f_∫g
)(*, *, 
size_t
),

48 *
p_∫g
 )

50  
	`e˝_gí_key∑ú
–
gΩ
, 
d
, 
Q
, 
f_∫g
, 
p_∫g
 );

51 
	}
}

56 
ecdh_compuã_sh¨ed
–
e˝_group
 *
gΩ
, 
mpi
 *
z
,

57 c⁄° 
e˝_poöt
 *
Q
, c⁄° 
mpi
 *
d
,

58 (*
f_∫g
)(*, *, 
size_t
),

59 *
p_∫g
 )

61 
ªt
;

62 
e˝_poöt
 
P
;

64 
	`e˝_poöt_öô
–&
P
 );

69 
	`MPI_CHK
–
	`e˝_check_pubkey
–
gΩ
, 
Q
 ) );

71 
	`MPI_CHK
–
	`e˝_mul
–
gΩ
, &
P
, 
d
, 
Q
, 
f_∫g
, 
p_∫g
 ) );

73 if–
	`e˝_is_zîo
–&
P
 ) )

75 
ªt
 = 
POLARSSL_ERR_ECP_BAD_INPUT_DATA
;

76 
˛ónup
;

79 
	`MPI_CHK
–
	`mpi_c›y
–
z
, &
P
.
X
 ) );

81 
˛ónup
:

82 
	`e˝_poöt_‰ì
–&
P
 );

84 –
ªt
 );

85 
	}
}

90 
	$ecdh_öô
–
ecdh_c⁄ãxt
 *
˘x
 )

92 
	`mem£t
–
˘x
, 0, –
ecdh_c⁄ãxt
 ) );

93 
	}
}

98 
	$ecdh_‰ì
–
ecdh_c⁄ãxt
 *
˘x
 )

100 if–
˘x
 =
NULL
 )

103 
	`e˝_group_‰ì
–&
˘x
->
gΩ
 );

104 
	`e˝_poöt_‰ì
–&
˘x
->
Q
 );

105 
	`e˝_poöt_‰ì
–&
˘x
->
Qp
 );

106 
	`e˝_poöt_‰ì
–&
˘x
->
Vi
 );

107 
	`e˝_poöt_‰ì
–&
˘x
->
Vf
 );

108 
	`mpi_‰ì
–&
˘x
->
d
 );

109 
	`mpi_‰ì
–&
˘x
->
z
 );

110 
	`mpi_‰ì
–&
˘x
->
_d
 );

111 
	}
}

120 
ecdh_make_∑øms
–
ecdh_c⁄ãxt
 *
˘x
, 
size_t
 *
ﬁí
,

121 *
buf
, 
size_t
 
bÀn
,

122 (*
f_∫g
)(*, *, 
size_t
),

123 *
p_∫g
 )

125 
ªt
;

126 
size_t
 
gΩ_Àn
, 
±_Àn
;

128 if–
˘x
 =
NULL
 || ctx->
gΩ
.
pbôs
 == 0 )

129 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

131 if––
ªt
 = 
	`ecdh_gí_public
–&
˘x
->
gΩ
, &˘x->
d
, &˘x->
Q
, 
f_∫g
, 
p_∫g
 ) )

133 –
ªt
 );

135 if––
ªt
 = 
	`e˝_és_wrôe_group
–&
˘x
->
gΩ
, &
gΩ_Àn
, 
buf
, 
bÀn
 ) )

137 –
ªt
 );

139 
buf
 +
gΩ_Àn
;

140 
bÀn
 -
gΩ_Àn
;

142 if––
ªt
 = 
	`e˝_és_wrôe_poöt
–&
˘x
->
gΩ
, &˘x->
Q
, ctx->
poöt_f‹m©
,

143 &
±_Àn
, 
buf
, 
bÀn
 ) ) != 0 )

144 –
ªt
 );

146 *
ﬁí
 = 
gΩ_Àn
 + 
±_Àn
;

148 
	}
}

157 
	$ecdh_ªad_∑øms
–
ecdh_c⁄ãxt
 *
˘x
,

158 c⁄° **
buf
, c⁄° *
íd
 )

160 
ªt
;

162 if––
ªt
 = 
	`e˝_és_ªad_group
–&
˘x
->
gΩ
, 
buf
, 
íd
 - *buf ) ) != 0 )

163 –
ªt
 );

165 if––
ªt
 = 
	`e˝_és_ªad_poöt
–&
˘x
->
gΩ
, &˘x->
Qp
, 
buf
, 
íd
 - *buf ) )

167 –
ªt
 );

170 
	}
}

175 
	$ecdh_gë_∑øms
–
ecdh_c⁄ãxt
 *
˘x
, c⁄° 
e˝_key∑ú
 *
key
,

176 
ecdh_side
 
side
 )

178 
ªt
;

180 if––
ªt
 = 
	`e˝_group_c›y
–&
˘x
->
gΩ
, &
key
->grp ) ) != 0 )

181 –
ªt
 );

184 if–
side
 =
POLARSSL_ECDH_THEIRS
 )

185 –
	`e˝_c›y
–&
˘x
->
Qp
, &
key
->
Q
 ) );

188 if–
side
 !
POLARSSL_ECDH_OURS
 )

189 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

191 if––
ªt
 = 
	`e˝_c›y
–&
˘x
->
Q
, &
key
->Q ) ) != 0 ||

192 –
ªt
 = 
	`mpi_c›y
–&
˘x
->
d
, &
key
->d ) ) != 0 )

193 –
ªt
 );

196 
	}
}

201 
ecdh_make_public
–
ecdh_c⁄ãxt
 *
˘x
, 
size_t
 *
ﬁí
,

202 *
buf
, 
size_t
 
bÀn
,

203 (*
f_∫g
)(*, *, 
size_t
),

204 *
p_∫g
 )

206 
ªt
;

208 if–
˘x
 =
NULL
 || ctx->
gΩ
.
pbôs
 == 0 )

209 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

211 if––
ªt
 = 
	`ecdh_gí_public
–&
˘x
->
gΩ
, &˘x->
d
, &˘x->
Q
, 
f_∫g
, 
p_∫g
 ) )

213 –
ªt
 );

215  
	`e˝_és_wrôe_poöt
–&
˘x
->
gΩ
, &˘x->
Q
, ctx->
poöt_f‹m©
,

216 
ﬁí
, 
buf
, 
bÀn
 );

217 
	}
}

222 
	$ecdh_ªad_public
–
ecdh_c⁄ãxt
 *
˘x
,

223 c⁄° *
buf
, 
size_t
 
bÀn
 )

225 
ªt
;

226 c⁄° *
p
 = 
buf
;

228 if–
˘x
 =
NULL
 )

229 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

231 if––
ªt
 = 
	`e˝_és_ªad_poöt
–&
˘x
->
gΩ
, &˘x->
Qp
, &
p
, 
bÀn
 ) ) != 0 )

232 –
ªt
 );

234 if–(
size_t
)–
p
 - 
buf
 ) !
bÀn
 )

235 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

238 
	}
}

243 
ecdh_ˇlc_£¸ë
–
ecdh_c⁄ãxt
 *
˘x
, 
size_t
 *
ﬁí
,

244 *
buf
, 
size_t
 
bÀn
,

245 (*
f_∫g
)(*, *, 
size_t
),

246 *
p_∫g
 )

248 
ªt
;

250 if–
˘x
 =
NULL
 )

251 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

253 if––
ªt
 = 
	`ecdh_compuã_sh¨ed
–&
˘x
->
gΩ
, &˘x->
z
, &˘x->
Qp
, &˘x->
d
,

254 
f_∫g
, 
p_∫g
 ) ) != 0 )

256 –
ªt
 );

259 if–
	`mpi_size
–&
˘x
->
z
 ) > 
bÀn
 )

260 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

262 *
ﬁí
 = 
˘x
->
gΩ
.
pbôs
 / 8 + ( ( ctx->grp.pbits % 8 ) != 0 );

263  
	`mpi_wrôe_bö¨y
–&
˘x
->
z
, 
buf
, *
ﬁí
 );

264 
	}
}

267 #i‡
deföed
(
POLARSSL_SELF_TEST
)

272 
	$ecdh_£lf_ã°
–
vîbo£
 )

274 ((Ë
vîbo£
 );

276 
	}
}

	@polarssl/library/ecdsa.c

32 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

33 
	~"pﬁ¨s¶/c⁄fig.h
"

35 #ö˛udê
POLARSSL_CONFIG_FILE


38 #i‡
deföed
(
POLARSSL_ECDSA_C
)

40 
	~"pﬁ¨s¶/ecdß.h
"

41 
	~"pﬁ¨s¶/a¢1wrôe.h
"

43 #i‡
deföed
(
POLARSSL_ECDSA_DETERMINISTIC
)

44 
	~"pﬁ¨s¶/hmac_drbg.h
"

47 #i‡
deföed
(
POLARSSL_ECDSA_DETERMINISTIC
)

56 c⁄° 
md_öfo_t
 *
	$md_öfo_by_size
–
size_t
 
mö_size
 )

58 c⁄° 
md_öfo_t
 *
md_cur
, *
md_picked
 = 
NULL
;

59 c⁄° *
md_Æg
;

61  
md_Æg
 = 
	`md_li°
(); *md_alg != 0; md_alg++ )

63 if––
md_cur
 = 
	`md_öfo_‰om_ty≥
–*
md_Æg
 ) ) =
NULL
 ||

64 (
size_t
Ë
md_cur
->
size
 < 
mö_size
 ||

65 –
md_picked
 !
NULL
 && 
md_cur
->
size
 > md_picked->size ) )

68 
md_picked
 = 
md_cur
;

71 –
md_picked
 );

72 
	}
}

79 
	$dîive_mpi
–c⁄° 
e˝_group
 *
gΩ
, 
mpi
 *
x
,

80 c⁄° *
buf
, 
size_t
 
bÀn
 )

82 
ªt
;

83 
size_t
 
n_size
 = ( 
gΩ
->
nbôs
 + 7 ) / 8;

84 
size_t
 
u£_size
 = 
bÀn
 > 
n_size
 ?Ç_size : blen;

86 
	`MPI_CHK
–
	`mpi_ªad_bö¨y
–
x
, 
buf
, 
u£_size
 ) );

87 if–
u£_size
 * 8 > 
gΩ
->
nbôs
 )

88 
	`MPI_CHK
–
	`mpi_shi·_r
–
x
, 
u£_size
 * 8 - 
gΩ
->
nbôs
 ) );

91 if–
	`mpi_cmp_mpi
–
x
, &
gΩ
->
N
 ) >= 0 )

92 
	`MPI_CHK
–
	`mpi_sub_mpi
–
x
, x, &
gΩ
->
N
 ) );

94 
˛ónup
:

95 –
ªt
 );

96 
	}
}

102 
ecdß_sign
–
e˝_group
 *
gΩ
, 
mpi
 *
r
, mpò*
s
,

103 c⁄° 
mpi
 *
d
, c⁄° *
buf
, 
size_t
 
bÀn
,

104 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 )

106 
ªt
, 
key_åõs
, 
sign_åõs
, 
blöd_åõs
;

107 
e˝_poöt
 
R
;

108 
mpi
 
k
, 
e
, 
t
;

111 if–
gΩ
->
N
.
p
 =
NULL
 )

112 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

114 
	`e˝_poöt_öô
–&
R
 );

115 
	`mpi_öô
–&
k
 ); mpi_öô–&
e
 ); mpi_öô–&
t
 );

117 
sign_åõs
 = 0;

124 
key_åõs
 = 0;

127 
	`MPI_CHK
–
	`e˝_gí_key∑ú
–
gΩ
, &
k
, &
R
, 
f_∫g
, 
p_∫g
 ) );

128 
	`MPI_CHK
–
	`mpi_mod_mpi
–
r
, &
R
.
X
, &
gΩ
->
N
 ) );

130 if–
key_åõs
++ > 10 )

132 
ªt
 = 
POLARSSL_ERR_ECP_RANDOM_FAILED
;

133 
˛ónup
;

136  
	`mpi_cmp_öt
–
r
, 0 ) == 0 );

141 
	`MPI_CHK
–
	`dîive_mpi
–
gΩ
, &
e
, 
buf
, 
bÀn
 ) );

147 
blöd_åõs
 = 0;

150 
size_t
 
n_size
 = ( 
gΩ
->
nbôs
 + 7 ) / 8;

151 
	`MPI_CHK
–
	`mpi_fûl_øndom
–&
t
, 
n_size
, 
f_∫g
, 
p_∫g
 ) );

152 
	`MPI_CHK
–
	`mpi_shi·_r
–&
t
, 8 * 
n_size
 - 
gΩ
->
nbôs
 ) );

155 if–++
blöd_åõs
 > 30 )

156 –
POLARSSL_ERR_ECP_RANDOM_FAILED
 );

158  
	`mpi_cmp_öt
–&
t
, 1 ) < 0 ||

159 
	`mpi_cmp_mpi
–&
t
, &
gΩ
->
N
 ) >= 0 );

164 
	`MPI_CHK
–
	`mpi_mul_mpi
–
s
, 
r
, 
d
 ) );

165 
	`MPI_CHK
–
	`mpi_add_mpi
–&
e
, &e, 
s
 ) );

166 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
e
, &e, &
t
 ) );

167 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
k
, &k, &
t
 ) );

168 
	`MPI_CHK
–
	`mpi_öv_mod
–
s
, &
k
, &
gΩ
->
N
 ) );

169 
	`MPI_CHK
–
	`mpi_mul_mpi
–
s
, s, &
e
 ) );

170 
	`MPI_CHK
–
	`mpi_mod_mpi
–
s
, s, &
gΩ
->
N
 ) );

172 if–
sign_åõs
++ > 10 )

174 
ªt
 = 
POLARSSL_ERR_ECP_RANDOM_FAILED
;

175 
˛ónup
;

178  
	`mpi_cmp_öt
–
s
, 0 ) == 0 );

180 
˛ónup
:

181 
	`e˝_poöt_‰ì
–&
R
 );

182 
	`mpi_‰ì
–&
k
 ); mpi_‰ì–&
e
 ); mpi_‰ì–&
t
 );

184 –
ªt
 );

185 
	}
}

187 #i‡
deföed
(
POLARSSL_ECDSA_DETERMINISTIC
)

191 
	$ecdß_sign_dë
–
e˝_group
 *
gΩ
, 
mpi
 *
r
, mpò*
s
,

192 c⁄° 
mpi
 *
d
, c⁄° *
buf
, 
size_t
 
bÀn
,

193 
md_ty≥_t
 
md_Æg
 )

195 
ªt
;

196 
hmac_drbg_c⁄ãxt
 
∫g_˘x
;

197 
d©a
[2 * 
POLARSSL_ECP_MAX_BYTES
];

198 
size_t
 
gΩ_Àn
 = ( 
gΩ
->
nbôs
 + 7 ) / 8;

199 c⁄° 
md_öfo_t
 *
md_öfo
;

200 
mpi
 
h
;

203 if–
md_Æg
 =
POLARSSL_MD_NONE
 )

204 
md_öfo
 = 
	`md_öfo_by_size
–
bÀn
 );

206 
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
md_Æg
 );

208 if–
md_öfo
 =
NULL
 )

209 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

211 
	`mpi_öô
–&
h
 );

212 
	`mem£t
–&
∫g_˘x
, 0, –
hmac_drbg_c⁄ãxt
 ) );

215 
	`MPI_CHK
–
	`mpi_wrôe_bö¨y
–
d
, 
d©a
, 
gΩ_Àn
 ) );

216 
	`MPI_CHK
–
	`dîive_mpi
–
gΩ
, &
h
, 
buf
, 
bÀn
 ) );

217 
	`MPI_CHK
–
	`mpi_wrôe_bö¨y
–&
h
, 
d©a
 + 
gΩ_Àn
, grp_len ) );

218 
	`hmac_drbg_öô_buf
–&
∫g_˘x
, 
md_öfo
, 
d©a
, 2 * 
gΩ_Àn
 );

220 
ªt
 = 
	`ecdß_sign
–
gΩ
, 
r
, 
s
, 
d
, 
buf
, 
bÀn
,

221 
hmac_drbg_øndom
, &
∫g_˘x
 );

223 
˛ónup
:

224 
	`hmac_drbg_‰ì
–&
∫g_˘x
 );

225 
	`mpi_‰ì
–&
h
 );

227 –
ªt
 );

228 
	}
}

235 
	$ecdß_vîify
–
e˝_group
 *
gΩ
,

236 c⁄° *
buf
, 
size_t
 
bÀn
,

237 c⁄° 
e˝_poöt
 *
Q
, c⁄° 
mpi
 *
r
, c⁄° mpò*
s
)

239 
ªt
;

240 
mpi
 
e
, 
s_öv
, 
u1
, 
u2
;

241 
e˝_poöt
 
R
, 
P
;

243 
	`e˝_poöt_öô
–&
R
 );É˝_poöt_öô–&
P
 );

244 
	`mpi_öô
–&
e
 ); mpi_öô–&
s_öv
 ); mpi_öô–&
u1
 ); mpi_öô–&
u2
 );

247 if–
gΩ
->
N
.
p
 =
NULL
 )

248 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

253 if–
	`mpi_cmp_öt
–
r
, 1 ) < 0 || 
	`mpi_cmp_mpi
–r, &
gΩ
->
N
 ) >= 0 ||

254 
	`mpi_cmp_öt
–
s
, 1 ) < 0 || 
	`mpi_cmp_mpi
–s, &
gΩ
->
N
 ) >= 0 )

256 
ªt
 = 
POLARSSL_ERR_ECP_VERIFY_FAILED
;

257 
˛ónup
;

263 
	`MPI_CHK
–
	`e˝_check_pubkey
–
gΩ
, 
Q
 ) );

268 
	`MPI_CHK
–
	`dîive_mpi
–
gΩ
, &
e
, 
buf
, 
bÀn
 ) );

273 
	`MPI_CHK
–
	`mpi_öv_mod
–&
s_öv
, 
s
, &
gΩ
->
N
 ) );

275 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
u1
, &
e
, &
s_öv
 ) );

276 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
u1
, &u1, &
gΩ
->
N
 ) );

278 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
u2
, 
r
, &
s_öv
 ) );

279 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
u2
, &u2, &
gΩ
->
N
 ) );

287 
	`MPI_CHK
–
	`e˝_mul
–
gΩ
, &
R
, &
u1
, &gΩ->
G
, 
NULL
, NULL ) );

288 
	`MPI_CHK
–
	`e˝_mul
–
gΩ
, &
P
, &
u2
, 
Q
, 
NULL
, NULL ) );

289 
	`MPI_CHK
–
	`e˝_add
–
gΩ
, &
R
, &R, &
P
 ) );

291 if–
	`e˝_is_zîo
–&
R
 ) )

293 
ªt
 = 
POLARSSL_ERR_ECP_VERIFY_FAILED
;

294 
˛ónup
;

301 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
R
.
X
, &R.X, &
gΩ
->
N
 ) );

306 if–
	`mpi_cmp_mpi
–&
R
.
X
, 
r
 ) != 0 )

308 
ªt
 = 
POLARSSL_ERR_ECP_VERIFY_FAILED
;

309 
˛ónup
;

312 
˛ónup
:

313 
	`e˝_poöt_‰ì
–&
R
 );É˝_poöt_‰ì–&
P
 );

314 
	`mpi_‰ì
–&
e
 ); mpi_‰ì–&
s_öv
 ); mpi_‰ì–&
u1
 ); mpi_‰ì–&
u2
 );

316 –
ªt
 );

317 
	}
}

333 #i‡
POLARSSL_ECP_MAX_BYTES
 > 124

336 
	#MAX_SIG_LEN
 ( 3 + 2 * ( 2 + 
POLARSSL_ECP_MAX_BYTES
 ) )

	)

341 
	$ecdß_sig«tuª_to_a¢1
–
ecdß_c⁄ãxt
 *
˘x
,

342 *
sig
, 
size_t
 *
¶í
 )

344 
ªt
;

345 
buf
[
MAX_SIG_LEN
];

346 *
p
 = 
buf
 + ( buf );

347 
size_t
 
Àn
 = 0;

349 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_mpi
–&
p
, 
buf
, &
˘x
->
s
 ) );

350 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_mpi
–&
p
, 
buf
, &
˘x
->
r
 ) );

352 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
p
, 
buf
,Üen ) );

353 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
p
, 
buf
,

354 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) );

356 
	`mem˝y
–
sig
, 
p
, 
Àn
 );

357 *
¶í
 = 
Àn
;

360 
	}
}

365 
ecdß_wrôe_sig«tuª
–
ecdß_c⁄ãxt
 *
˘x
,

366 c⁄° *
hash
, 
size_t
 
hÀn
,

367 *
sig
, 
size_t
 *
¶í
,

368 (*
f_∫g
)(*, *, 
size_t
),

369 *
p_∫g
 )

371 
ªt
;

373 if––
ªt
 = 
	`ecdß_sign
–&
˘x
->
gΩ
, &˘x->
r
, &˘x->
s
, &˘x->
d
,

374 
hash
, 
hÀn
, 
f_∫g
, 
p_∫g
 ) ) != 0 )

376 –
ªt
 );

379 –
	`ecdß_sig«tuª_to_a¢1
–
˘x
, 
sig
, 
¶í
 ) );

380 
	}
}

382 #i‡
deföed
(
POLARSSL_ECDSA_DETERMINISTIC
)

386 
	$ecdß_wrôe_sig«tuª_dë
–
ecdß_c⁄ãxt
 *
˘x
,

387 c⁄° *
hash
, 
size_t
 
hÀn
,

388 *
sig
, 
size_t
 *
¶í
,

389 
md_ty≥_t
 
md_Æg
 )

391 
ªt
;

393 if––
ªt
 = 
	`ecdß_sign_dë
–&
˘x
->
gΩ
, &˘x->
r
, &˘x->
s
, &˘x->
d
,

394 
hash
, 
hÀn
, 
md_Æg
 ) ) != 0 )

396 –
ªt
 );

399 –
	`ecdß_sig«tuª_to_a¢1
–
˘x
, 
sig
, 
¶í
 ) );

400 
	}
}

406 
	$ecdß_ªad_sig«tuª
–
ecdß_c⁄ãxt
 *
˘x
,

407 c⁄° *
hash
, 
size_t
 
hÀn
,

408 c⁄° *
sig
, 
size_t
 
¶í
 )

410 
ªt
;

411 *
p
 = (*Ë
sig
;

412 c⁄° *
íd
 = 
sig
 + 
¶í
;

413 
size_t
 
Àn
;

415 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

416 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

418 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 + 
ªt
 );

421 if–
p
 + 
Àn
 !
íd
 )

422 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 +

423 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

425 if––
ªt
 = 
	`a¢1_gë_mpi
–&
p
, 
íd
, &
˘x
->
r
 ) ) != 0 ||

426 –
ªt
 = 
	`a¢1_gë_mpi
–&
p
, 
íd
, &
˘x
->
s
 ) ) != 0 )

427 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 + 
ªt
 );

429 if––
ªt
 = 
	`ecdß_vîify
–&
˘x
->
gΩ
, 
hash
, 
hÀn
,

430 &
˘x
->
Q
, &˘x->
r
, &˘x->
s
 ) ) != 0 )

431 –
ªt
 );

433 if–
p
 !
íd
 )

434 –
POLARSSL_ERR_ECP_SIG_LEN_MISMATCH
 );

437 
	}
}

442 
ecdß_gíkey
–
ecdß_c⁄ãxt
 *
˘x
, 
e˝_group_id
 
gid
,

443 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 )

445 –
	`e˝_u£_known_dp
–&
˘x
->
gΩ
, 
gid
 ) ||

446 
	`e˝_gí_key∑ú
–&
˘x
->
gΩ
, &˘x->
d
, &˘x->
Q
, 
f_∫g
, 
p_∫g
 ) );

447 
	}
}

452 
	$ecdß_‰om_key∑ú
–
ecdß_c⁄ãxt
 *
˘x
, c⁄° 
e˝_key∑ú
 *
key
 )

454 
ªt
;

456 if––
ªt
 = 
	`e˝_group_c›y
–&
˘x
->
gΩ
, &
key
->grp ) ) != 0 ||

457 –
ªt
 = 
	`mpi_c›y
–&
˘x
->
d
, &
key
->d ) ) != 0 ||

458 –
ªt
 = 
	`e˝_c›y
–&
˘x
->
Q
, &
key
->Q ) ) != 0 )

460 
	`ecdß_‰ì
–
˘x
 );

463 –
ªt
 );

464 
	}
}

469 
	$ecdß_öô
–
ecdß_c⁄ãxt
 *
˘x
 )

471 
	`e˝_group_öô
–&
˘x
->
gΩ
 );

472 
	`mpi_öô
–&
˘x
->
d
 );

473 
	`e˝_poöt_öô
–&
˘x
->
Q
 );

474 
	`mpi_öô
–&
˘x
->
r
 );

475 
	`mpi_öô
–&
˘x
->
s
 );

476 
	}
}

481 
	$ecdß_‰ì
–
ecdß_c⁄ãxt
 *
˘x
 )

483 
	`e˝_group_‰ì
–&
˘x
->
gΩ
 );

484 
	`mpi_‰ì
–&
˘x
->
d
 );

485 
	`e˝_poöt_‰ì
–&
˘x
->
Q
 );

486 
	`mpi_‰ì
–&
˘x
->
r
 );

487 
	`mpi_‰ì
–&
˘x
->
s
 );

488 
	}
}

490 #i‡
deföed
(
POLARSSL_SELF_TEST
)

495 
	$ecdß_£lf_ã°
–
vîbo£
 )

497 ((Ë
vîbo£
 );

499 
	}
}

	@polarssl/library/ecp.c

47 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

48 
	~"pﬁ¨s¶/c⁄fig.h
"

50 #ö˛udê
POLARSSL_CONFIG_FILE


53 #i‡
deföed
(
POLARSSL_ECP_C
)

55 
	~"pﬁ¨s¶/e˝.h
"

57 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

58 
	~"pﬁ¨s¶/∂©f‹m.h
"

60 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

61 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

62 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

65 
	~<°dlib.h
>

67 #i‡
deföed
(
_MSC_VER
Ë&& !deföed 
°rˇ£cmp
 && !deföed(
EFIX64
) && \

68 !
	$deföed
(
EFI32
)

69 
	#°rˇ£cmp
 
_°ricmp


	)

72 #i‡
	`deföed
(
_MSC_VER
Ë&& !deföed(
ölöe
)

73 
	#ölöe
 
_ölöe


	)

75 #i‡
	`deföed
(
__ARMCC_VERSION
Ë&& !deföed(
ölöe
)

76 
	#ölöe
 
__ölöe


	)

81 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

82 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

83 
	}
}

85 #i‡
deföed
(
POLARSSL_SELF_TEST
)

90 
	gadd_cou¡
, 
	gdbl_cou¡
, 
	gmul_cou¡
;

93 #i‡
deföed
(
POLARSSL_ECP_DP_SECP192R1_ENABLED
) || \

94 
deföed
(
POLARSSL_ECP_DP_SECP224R1_ENABLED
) || \

95 
deföed
(
POLARSSL_ECP_DP_SECP256R1_ENABLED
) || \

96 
deföed
(
POLARSSL_ECP_DP_SECP384R1_ENABLED
) || \

97 
deföed
(
POLARSSL_ECP_DP_SECP521R1_ENABLED
) || \

98 
deföed
(
POLARSSL_ECP_DP_BP256R1_ENABLED
) || \

99 
deföed
(
POLARSSL_ECP_DP_BP384R1_ENABLED
) || \

100 
deföed
(
POLARSSL_ECP_DP_BP512R1_ENABLED
) || \

101 
deföed
(
POLARSSL_ECP_DP_SECP192K1_ENABLED
) || \

102 
deföed
(
POLARSSL_ECP_DP_SECP224K1_ENABLED
) || \

103 
	$deföed
(
POLARSSL_ECP_DP_SECP256K1_ENABLED
)

104 
	#POLARSSL_ECP_SHORT_WEIERSTRASS


	)

107 #i‡
	`deföed
(
POLARSSL_ECP_DP_M221_ENABLED
) || \

108 
	`deföed
(
POLARSSL_ECP_DP_M255_ENABLED
) || \

109 
	`deföed
(
POLARSSL_ECP_DP_M383_ENABLED
) || \

110 
	$deföed
(
POLARSSL_ECP_DP_M511_ENABLED
)

111 
	#POLARSSL_ECP_MONTGOMERY


	)

119 
POLARSSL_ECP_TYPE_NONE
 = 0,

120 
POLARSSL_ECP_TYPE_SHORT_WEIERSTRASS
,

121 
POLARSSL_ECP_TYPE_MONTGOMERY
,

122 } 
	te˝_curve_ty≥
;

134 c⁄° 
e˝_curve_öfo
 
e˝_suµ‹ãd_curves
[] =

136 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP521R1_ENABLED
)

137 { 
POLARSSL_ECP_DP_SECP521R1
, 25, 521, "secp521r1" },

139 #i‡
	`deföed
(
POLARSSL_ECP_DP_BP512R1_ENABLED
)

140 { 
POLARSSL_ECP_DP_BP512R1
, 28, 512, "brainpoolP512r1" },

142 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP384R1_ENABLED
)

143 { 
POLARSSL_ECP_DP_SECP384R1
, 24, 384, "secp384r1" },

145 #i‡
	`deföed
(
POLARSSL_ECP_DP_BP384R1_ENABLED
)

146 { 
POLARSSL_ECP_DP_BP384R1
, 27, 384, "brainpoolP384r1" },

148 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP256R1_ENABLED
)

149 { 
POLARSSL_ECP_DP_SECP256R1
, 23, 256, "secp256r1" },

151 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP256K1_ENABLED
)

152 { 
POLARSSL_ECP_DP_SECP256K1
, 22, 256, "secp256k1" },

154 #i‡
	`deföed
(
POLARSSL_ECP_DP_BP256R1_ENABLED
)

155 { 
POLARSSL_ECP_DP_BP256R1
, 26, 256, "brainpoolP256r1" },

157 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP224R1_ENABLED
)

158 { 
POLARSSL_ECP_DP_SECP224R1
, 21, 224, "secp224r1" },

160 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP224K1_ENABLED
)

161 { 
POLARSSL_ECP_DP_SECP224K1
, 20, 224, "secp224k1" },

163 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP192R1_ENABLED
)

164 { 
POLARSSL_ECP_DP_SECP192R1
, 19, 192, "secp192r1" },

166 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP192K1_ENABLED
)

167 { 
POLARSSL_ECP_DP_SECP192K1
, 18, 192, "secp192k1" },

169 { 
POLARSSL_ECP_DP_NONE
, 0, 0, 
NULL
 },

170 
	}
};

172 
	#ECP_NB_CURVES
 –
e˝_suµ‹ãd_curves
 ) / \

173 –
e˝_suµ‹ãd_curves
[0] )

	)

175 
e˝_group_id
 
	ge˝_suµ‹ãd_gΩ_id
[
ECP_NB_CURVES
];

180 c⁄° 
e˝_curve_öfo
 *
	$e˝_curve_li°
( )

182 –
e˝_suµ‹ãd_curves
 );

183 
	}
}

188 c⁄° 
e˝_group_id
 *
	$e˝_gΩ_id_li°
( )

190 
öô_d⁄e
 = 0;

192 if–! 
öô_d⁄e
 )

194 
size_t
 
i
 = 0;

195 c⁄° 
e˝_curve_öfo
 *
curve_öfo
;

197  
curve_öfo
 = 
	`e˝_curve_li°
();

198 
curve_öfo
->
gΩ_id
 !
POLARSSL_ECP_DP_NONE
;

199 
curve_öfo
++ )

201 
e˝_suµ‹ãd_gΩ_id
[
i
++] = 
curve_öfo
->
gΩ_id
;

203 
e˝_suµ‹ãd_gΩ_id
[
i
] = 
POLARSSL_ECP_DP_NONE
;

205 
öô_d⁄e
 = 1;

208 –
e˝_suµ‹ãd_gΩ_id
 );

209 
	}
}

214 c⁄° 
e˝_curve_öfo
 *
	$e˝_curve_öfo_‰om_gΩ_id
–
e˝_group_id
 
gΩ_id
 )

216 c⁄° 
e˝_curve_öfo
 *
curve_öfo
;

218  
curve_öfo
 = 
	`e˝_curve_li°
();

219 
curve_öfo
->
gΩ_id
 !
POLARSSL_ECP_DP_NONE
;

220 
curve_öfo
++ )

222 if–
curve_öfo
->
gΩ_id
 == grp_id )

223 –
curve_öfo
 );

226 –
NULL
 );

227 
	}
}

232 c⁄° 
e˝_curve_öfo
 *
	$e˝_curve_öfo_‰om_és_id
–
uöt16_t
 
és_id
 )

234 c⁄° 
e˝_curve_öfo
 *
curve_öfo
;

236  
curve_öfo
 = 
	`e˝_curve_li°
();

237 
curve_öfo
->
gΩ_id
 !
POLARSSL_ECP_DP_NONE
;

238 
curve_öfo
++ )

240 if–
curve_öfo
->
és_id
 ==Åls_id )

241 –
curve_öfo
 );

244 –
NULL
 );

245 
	}
}

250 c⁄° 
e˝_curve_öfo
 *
	$e˝_curve_öfo_‰om_«me
–c⁄° *
«me
 )

252 c⁄° 
e˝_curve_öfo
 *
curve_öfo
;

254  
curve_öfo
 = 
	`e˝_curve_li°
();

255 
curve_öfo
->
gΩ_id
 !
POLARSSL_ECP_DP_NONE
;

256 
curve_öfo
++ )

258 if–
	`°rˇ£cmp
–
curve_öfo
->
«me
,Çame ) == 0 )

259 –
curve_öfo
 );

262 –
NULL
 );

263 
	}
}

268 
ölöe
 
e˝_curve_ty≥
 
	$e˝_gë_ty≥
–c⁄° 
e˝_group
 *
gΩ
 )

270 if–
gΩ
->
G
.
X
.
p
 =
NULL
 )

271 –
POLARSSL_ECP_TYPE_NONE
 );

273 if–
gΩ
->
G
.
Y
.
p
 =
NULL
 )

274 –
POLARSSL_ECP_TYPE_MONTGOMERY
 );

276 –
POLARSSL_ECP_TYPE_SHORT_WEIERSTRASS
 );

277 
	}
}

282 
	$e˝_poöt_öô
–
e˝_poöt
 *
±
 )

284 if–
±
 =
NULL
 )

287 
	`mpi_öô
–&
±
->
X
 );

288 
	`mpi_öô
–&
±
->
Y
 );

289 
	`mpi_öô
–&
±
->
Z
 );

290 
	}
}

295 
	$e˝_group_öô
–
e˝_group
 *
gΩ
 )

297 if–
gΩ
 =
NULL
 )

300 
	`mem£t
–
gΩ
, 0, –
e˝_group
 ) );

301 
	}
}

306 
	$e˝_key∑ú_öô
–
e˝_key∑ú
 *
key
 )

308 if–
key
 =
NULL
 )

311 
	`e˝_group_öô
–&
key
->
gΩ
 );

312 
	`mpi_öô
–&
key
->
d
 );

313 
	`e˝_poöt_öô
–&
key
->
Q
 );

314 
	}
}

319 
	$e˝_poöt_‰ì
–
e˝_poöt
 *
±
 )

321 if–
±
 =
NULL
 )

324 
	`mpi_‰ì
–&–
±
->
X
 ) );

325 
	`mpi_‰ì
–&–
±
->
Y
 ) );

326 
	`mpi_‰ì
–&–
±
->
Z
 ) );

327 
	}
}

332 
	$e˝_group_‰ì
–
e˝_group
 *
gΩ
 )

334 
size_t
 
i
;

336 if–
gΩ
 =
NULL
 )

339 if–
gΩ
->
h
 != 1 )

341 
	`mpi_‰ì
–&
gΩ
->
P
 );

342 
	`mpi_‰ì
–&
gΩ
->
A
 );

343 
	`mpi_‰ì
–&
gΩ
->
B
 );

344 
	`e˝_poöt_‰ì
–&
gΩ
->
G
 );

345 
	`mpi_‰ì
–&
gΩ
->
N
 );

348 if–
gΩ
->
T
 !
NULL
 )

350  
i
 = 0; i < 
gΩ
->
T_size
; i++ )

351 
	`e˝_poöt_‰ì
–&
gΩ
->
T
[
i
] );

352 
	`pﬁ¨s¶_‰ì
–
gΩ
->
T
 );

355 
	`pﬁ¨s¶_zîoize
–
gΩ
, –
e˝_group
 ) );

356 
	}
}

361 
	$e˝_key∑ú_‰ì
–
e˝_key∑ú
 *
key
 )

363 if–
key
 =
NULL
 )

366 
	`e˝_group_‰ì
–&
key
->
gΩ
 );

367 
	`mpi_‰ì
–&
key
->
d
 );

368 
	`e˝_poöt_‰ì
–&
key
->
Q
 );

369 
	}
}

374 
	$e˝_c›y
–
e˝_poöt
 *
P
, c⁄°É˝_poöà*
Q
 )

376 
ªt
;

378 
	`MPI_CHK
–
	`mpi_c›y
–&
P
->
X
, &
Q
->X ) );

379 
	`MPI_CHK
–
	`mpi_c›y
–&
P
->
Y
, &
Q
->Y ) );

380 
	`MPI_CHK
–
	`mpi_c›y
–&
P
->
Z
, &
Q
->Z ) );

382 
˛ónup
:

383 –
ªt
 );

384 
	}
}

389 
	$e˝_group_c›y
–
e˝_group
 *
d°
, c⁄°É˝_grou∞*
§c
 )

391  
	`e˝_u£_known_dp
–
d°
, 
§c
->
id
 );

392 
	}
}

397 
	$e˝_£t_zîo
–
e˝_poöt
 *
±
 )

399 
ªt
;

401 
	`MPI_CHK
–
	`mpi_l£t
–&
±
->
X
 , 1 ) );

402 
	`MPI_CHK
–
	`mpi_l£t
–&
±
->
Y
 , 1 ) );

403 
	`MPI_CHK
–
	`mpi_l£t
–&
±
->
Z
 , 0 ) );

405 
˛ónup
:

406 –
ªt
 );

407 
	}
}

412 
	$e˝_is_zîo
–
e˝_poöt
 *
±
 )

414 –
	`mpi_cmp_öt
–&
±
->
Z
, 0 ) == 0 );

415 
	}
}

420 
	$e˝_poöt_ªad_°rög
–
e˝_poöt
 *
P
, 
ødix
,

421 c⁄° *
x
, c⁄° *
y
 )

423 
ªt
;

425 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
P
->
X
, 
ødix
, 
x
 ) );

426 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
P
->
Y
, 
ødix
, 
y
 ) );

427 
	`MPI_CHK
–
	`mpi_l£t
–&
P
->
Z
, 1 ) );

429 
˛ónup
:

430 –
ªt
 );

431 
	}
}

436 
	$e˝_poöt_wrôe_bö¨y
–c⁄° 
e˝_group
 *
gΩ
, c⁄° 
e˝_poöt
 *
P
,

437 
f‹m©
, 
size_t
 *
ﬁí
,

438 *
buf
, 
size_t
 
buÊí
 )

440 
ªt
 = 0;

441 
size_t
 
∂í
;

443 if–
f‹m©
 !
POLARSSL_ECP_PF_UNCOMPRESSED
 &&

444 
f‹m©
 !
POLARSSL_ECP_PF_COMPRESSED
 )

445 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

450 if–
	`mpi_cmp_öt
–&
P
->
Z
, 0 ) == 0 )

452 if–
buÊí
 < 1 )

453 –
POLARSSL_ERR_ECP_BUFFER_TOO_SMALL
 );

455 
buf
[0] = 0x00;

456 *
ﬁí
 = 1;

461 
∂í
 = 
	`mpi_size
–&
gΩ
->
P
 );

463 if–
f‹m©
 =
POLARSSL_ECP_PF_UNCOMPRESSED
 )

465 *
ﬁí
 = 2 * 
∂í
 + 1;

467 if–
buÊí
 < *
ﬁí
 )

468 –
POLARSSL_ERR_ECP_BUFFER_TOO_SMALL
 );

470 
buf
[0] = 0x04;

471 
	`MPI_CHK
–
	`mpi_wrôe_bö¨y
–&
P
->
X
, 
buf
 + 1, 
∂í
 ) );

472 
	`MPI_CHK
–
	`mpi_wrôe_bö¨y
–&
P
->
Y
, 
buf
 + 1 + 
∂í
,Ölen ) );

474 if–
f‹m©
 =
POLARSSL_ECP_PF_COMPRESSED
 )

476 *
ﬁí
 = 
∂í
 + 1;

478 if–
buÊí
 < *
ﬁí
 )

479 –
POLARSSL_ERR_ECP_BUFFER_TOO_SMALL
 );

481 
buf
[0] = 0x02 + 
	`mpi_gë_bô
–&
P
->
Y
, 0 );

482 
	`MPI_CHK
–
	`mpi_wrôe_bö¨y
–&
P
->
X
, 
buf
 + 1, 
∂í
 ) );

485 
˛ónup
:

486 –
ªt
 );

487 
	}
}

492 
	$e˝_poöt_ªad_bö¨y
–c⁄° 
e˝_group
 *
gΩ
, 
e˝_poöt
 *
±
,

493 c⁄° *
buf
, 
size_t
 
ûí
 )

495 
ªt
;

496 
size_t
 
∂í
;

498 i‡–
ûí
 < 1 )

499 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

501 if–
buf
[0] == 0x00 )

503 if–
ûí
 == 1 )

504 –
	`e˝_£t_zîo
–
±
 ) );

506 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

509 
∂í
 = 
	`mpi_size
–&
gΩ
->
P
 );

511 if–
buf
[0] != 0x04 )

512 –
POLARSSL_ERR_ECP_FEATURE_UNAVAILABLE
 );

514 if–
ûí
 !2 * 
∂í
 + 1 )

515 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

517 
	`MPI_CHK
–
	`mpi_ªad_bö¨y
–&
±
->
X
, 
buf
 + 1, 
∂í
 ) );

518 
	`MPI_CHK
–
	`mpi_ªad_bö¨y
–&
±
->
Y
, 
buf
 + 1 + 
∂í
,Ölen ) );

519 
	`MPI_CHK
–
	`mpi_l£t
–&
±
->
Z
, 1 ) );

521 
˛ónup
:

522 –
ªt
 );

523 
	}
}

531 
	$e˝_és_ªad_poöt
–c⁄° 
e˝_group
 *
gΩ
, 
e˝_poöt
 *
±
,

532 c⁄° **
buf
, 
size_t
 
buf_Àn
 )

534 
d©a_Àn
;

535 c⁄° *
buf_°¨t
;

540 if–
buf_Àn
 < 2 )

541 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

543 
d©a_Àn
 = *(*
buf
)++;

544 if–
d©a_Àn
 < 1 || d©a_À¿> 
buf_Àn
 - 1 )

545 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

550 
buf_°¨t
 = *
buf
;

551 *
buf
 +
d©a_Àn
;

553  
	`e˝_poöt_ªad_bö¨y
–
gΩ
, 
±
, 
buf_°¨t
, 
d©a_Àn
 );

554 
	}
}

562 
	$e˝_és_wrôe_poöt
–c⁄° 
e˝_group
 *
gΩ
, c⁄° 
e˝_poöt
 *
±
,

563 
f‹m©
, 
size_t
 *
ﬁí
,

564 *
buf
, 
size_t
 
bÀn
 )

566 
ªt
;

571 if–
bÀn
 < 1 )

572 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

574 if––
ªt
 = 
	`e˝_poöt_wrôe_bö¨y
–
gΩ
, 
±
, 
f‹m©
,

575 
ﬁí
, 
buf
 + 1, 
bÀn
 - 1) ) != 0 )

576 –
ªt
 );

581 
buf
[0] = (Ë*
ﬁí
;

582 ++*
ﬁí
;

585 
	}
}

590 
	$e˝_group_ªad_°rög
–
e˝_group
 *
gΩ
, 
ødix
,

591 c⁄° *
p
, c⁄° *
b
,

592 c⁄° *
gx
, c⁄° *
gy
, c⁄° *
n
)

594 
ªt
;

596 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
gΩ
->
P
, 
ødix
, 
p
 ) );

597 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
gΩ
->
B
, 
ødix
, 
b
 ) );

598 
	`MPI_CHK
–
	`e˝_poöt_ªad_°rög
–&
gΩ
->
G
, 
ødix
, 
gx
, 
gy
 ) );

599 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
gΩ
->
N
, 
ødix
, 
n
 ) );

601 
gΩ
->
pbôs
 = 
	`mpi_msb
–&gΩ->
P
 );

602 
gΩ
->
nbôs
 = 
	`mpi_msb
–&gΩ->
N
 );

604 
˛ónup
:

605 if–
ªt
 != 0 )

606 
	`e˝_group_‰ì
–
gΩ
 );

608 –
ªt
 );

609 
	}
}

614 
	$e˝_és_ªad_group
–
e˝_group
 *
gΩ
, c⁄° **
buf
, 
size_t
 
Àn
 )

616 
uöt16_t
 
és_id
;

617 c⁄° 
e˝_curve_öfo
 *
curve_öfo
;

622 if–
Àn
 < 3 )

623 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

628 if–*(*
buf
)++ !
POLARSSL_ECP_TLS_NAMED_CURVE
 )

629 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

634 
és_id
 = *(*
buf
)++;

635 
és_id
 <<= 8;

636 
és_id
 |*(*
buf
)++;

638 if––
curve_öfo
 = 
	`e˝_curve_öfo_‰om_és_id
–
és_id
 ) ) =
NULL
 )

639 –
POLARSSL_ERR_ECP_FEATURE_UNAVAILABLE
 );

641  
	`e˝_u£_known_dp
–
gΩ
, 
curve_öfo
->
gΩ_id
 );

642 
	}
}

647 
	$e˝_és_wrôe_group
–c⁄° 
e˝_group
 *
gΩ
, 
size_t
 *
ﬁí
,

648 *
buf
, 
size_t
 
bÀn
 )

650 c⁄° 
e˝_curve_öfo
 *
curve_öfo
;

652 if––
curve_öfo
 = 
	`e˝_curve_öfo_‰om_gΩ_id
–
gΩ
->
id
 ) ) =
NULL
 )

653 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

658 *
ﬁí
 = 3;

659 if–
bÀn
 < *
ﬁí
 )

660 –
POLARSSL_ERR_ECP_BUFFER_TOO_SMALL
 );

665 *
buf
++ = 
POLARSSL_ECP_TLS_NAMED_CURVE
;

670 
buf
[0] = 
curve_öfo
->
és_id
 >> 8;

671 
buf
[1] = 
curve_öfo
->
és_id
 & 0xFF;

674 
	}
}

682 
	$e˝_modp
–
mpi
 *
N
, c⁄° 
e˝_group
 *
gΩ
 )

684 
ªt
;

686 if–
gΩ
->
modp
 =
NULL
 )

687 –
	`mpi_mod_mpi
–
N
, N, &
gΩ
->
P
 ) );

690 if––
N
->
s
 < 0 && 
	`mpi_cmp_öt
( N, 0 ) != 0 ) ||

691 
	`mpi_msb
–
N
 ) > 2 * 
gΩ
->
pbôs
 )

693 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

696 
	`MPI_CHK
–
gΩ
->
	`modp
–
N
 ) );

699  
N
->
s
 < 0 && 
	`mpi_cmp_öt
( N, 0 ) != 0 )

700 
	`MPI_CHK
–
	`mpi_add_mpi
–
N
, N, &
gΩ
->
P
 ) );

702  
	`mpi_cmp_mpi
–
N
, &
gΩ
->
P
 ) >= 0 )

704 
	`MPI_CHK
–
	`mpi_sub_abs
–
N
, N, &
gΩ
->
P
 ) );

706 
˛ónup
:

707 –
ªt
 );

708 
	}
}

723 #i‡
deföed
(
POLARSSL_SELF_TEST
)

724 
	#INC_MUL_COUNT
 
mul_cou¡
++;

	)

726 
	#INC_MUL_COUNT


	)

729 
	#MOD_MUL
–
N
 ) dÿ{ 
	`MPI_CHK
–
	`e˝_modp
–&N, 
gΩ
 ) ); 
INC_MUL_COUNT
 } \

730  0 )

	)

736 
	#MOD_SUB
–
N
 ) \

737  
N
.
s
 < 0 && 
	`mpi_cmp_öt
( &N, 0 ) != 0 ) \

738 
	`MPI_CHK
–
	`mpi_add_mpi
–&
N
, &N, &
gΩ
->
P
 ) )

	)

745 
	#MOD_ADD
–
N
 ) \

746  
	`mpi_cmp_mpi
–&
N
, &
gΩ
->
P
 ) >= 0 ) \

747 
	`MPI_CHK
–
	`mpi_sub_abs
–&
N
, &N, &
gΩ
->
P
 ) )

	)

749 #i‡
deföed
(
POLARSSL_ECP_SHORT_WEIERSTRASS
)

762 
	$e˝_n‹mÆize_jac
–c⁄° 
e˝_group
 *
gΩ
, 
e˝_poöt
 *
±
 )

764 
ªt
;

765 
mpi
 
Zi
, 
ZZi
;

767 if–
	`mpi_cmp_öt
–&
±
->
Z
, 0 ) == 0 )

770 
	`mpi_öô
–&
Zi
 ); mpi_öô–&
ZZi
 );

775 
	`MPI_CHK
–
	`mpi_öv_mod
–&
Zi
, &
±
->
Z
, &
gΩ
->
P
 ) );

776 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
ZZi
, &
Zi
, &ZòË); 
	`MOD_MUL
( ZZi );

777 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
±
->
X
, &±->X, &
ZZi
 ) ); 
	`MOD_MUL
(Öt->X );

782 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
±
->
Y
, &±->Y, &
ZZi
 ) ); 
	`MOD_MUL
(Öt->Y );

783 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
±
->
Y
, &±->Y, &
Zi
 ) ); 
	`MOD_MUL
(Öt->Y );

788 
	`MPI_CHK
–
	`mpi_l£t
–&
±
->
Z
, 1 ) );

790 
˛ónup
:

792 
	`mpi_‰ì
–&
Zi
 ); mpi_‰ì–&
ZZi
 );

794 –
ªt
 );

795 
	}
}

808 
	$e˝_n‹mÆize_jac_m™y
–c⁄° 
e˝_group
 *
gΩ
,

809 
e˝_poöt
 *
T
[], 
size_t
 
t_Àn
 )

811 
ªt
;

812 
size_t
 
i
;

813 
mpi
 *
c
, 
u
, 
Zi
, 
ZZi
;

815 if–
t_Àn
 < 2 )

816 –
	`e˝_n‹mÆize_jac
–
gΩ
, *
T
 ) );

818 if––
c
 = (
mpi
 *Ë
	`pﬁ¨s¶_mÆloc
–
t_Àn
 * –mpòËËË=
NULL
 )

819 –
POLARSSL_ERR_ECP_MALLOC_FAILED
 );

821 
	`mpi_öô
–&
u
 ); mpi_öô–&
Zi
 ); mpi_öô–&
ZZi
 );

822  
i
 = 0; i < 
t_Àn
; i++ )

823 
	`mpi_öô
–&
c
[
i
] );

828 
	`MPI_CHK
–
	`mpi_c›y
–&
c
[0], &
T
[0]->
Z
 ) );

829  
i
 = 1; i < 
t_Àn
; i++ )

831 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
c
[
i
], &c[i-1], &
T
[i]->
Z
 ) );

832 
	`MOD_MUL
–
c
[
i
] );

838 
	`MPI_CHK
–
	`mpi_öv_mod
–&
u
, &
c
[
t_Àn
-1], &
gΩ
->
P
 ) );

840  
i
 = 
t_Àn
 - 1; ; i-- )

846 if–
i
 == 0 ) {

847 
	`MPI_CHK
–
	`mpi_c›y
–&
Zi
, &
u
 ) );

851 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
Zi
, &
u
, &
c
[
i
-1] ) ); 
	`MOD_MUL
( Zi );

852 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
u
, &u, &
T
[
i
]->
Z
 ) ); 
	`MOD_MUL
( u );

858 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
ZZi
, &
Zi
, &ZòË); 
	`MOD_MUL
( ZZi );

859 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T
[
i
]->
X
, &T[i]->X, &
ZZi
 ) ); 
	`MOD_MUL
( T[i]->X );

860 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T
[
i
]->
Y
, &T[i]->Y, &
ZZi
 ) ); 
	`MOD_MUL
( T[i]->Y );

861 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T
[
i
]->
Y
, &T[i]->Y, &
Zi
 ) ); 
	`MOD_MUL
( T[i]->Y );

869 
	`MPI_CHK
–
	`mpi_shrök
–&
T
[
i
]->
X
, 
gΩ
->
P
.
n
 ) );

870 
	`MPI_CHK
–
	`mpi_shrök
–&
T
[
i
]->
Y
, 
gΩ
->
P
.
n
 ) );

871 
	`mpi_‰ì
–&
T
[
i
]->
Z
 );

873 if–
i
 == 0 )

877 
˛ónup
:

879 
	`mpi_‰ì
–&
u
 ); mpi_‰ì–&
Zi
 ); mpi_‰ì–&
ZZi
 );

880  
i
 = 0; i < 
t_Àn
; i++ )

881 
	`mpi_‰ì
–&
c
[
i
] );

882 
	`pﬁ¨s¶_‰ì
–
c
 );

884 –
ªt
 );

885 
	}
}

891 
	$e˝_ß„_övît_jac
–c⁄° 
e˝_group
 *
gΩ
,

892 
e˝_poöt
 *
Q
,

893 
öv
 )

895 
ªt
;

896 
n⁄zîo
;

897 
mpi
 
mQY
;

899 
	`mpi_öô
–&
mQY
 );

902 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
mQY
, &
gΩ
->
P
, &
Q
->
Y
 ) );

903 
n⁄zîo
 = 
	`mpi_cmp_öt
–&
Q
->
Y
, 0 ) != 0;

904 
	`MPI_CHK
–
	`mpi_ß„_c⁄d_assign
–&
Q
->
Y
, &
mQY
, 
öv
 & 
n⁄zîo
 ) );

906 
˛ónup
:

907 
	`mpi_‰ì
–&
mQY
 );

909 –
ªt
 );

910 
	}
}

922 
	$e˝_doubÀ_jac
–c⁄° 
e˝_group
 *
gΩ
, 
e˝_poöt
 *
R
,

923 c⁄° 
e˝_poöt
 *
P
 )

925 
ªt
;

926 
mpi
 
T1
, 
T2
, 
T3
, 
X3
, 
Y3
, 
Z3
;

928 #i‡
	`deföed
(
POLARSSL_SELF_TEST
)

929 
dbl_cou¡
++;

932 
	`mpi_öô
–&
T1
 ); mpi_öô–&
T2
 ); mpi_öô–&
T3
 );

933 
	`mpi_öô
–&
X3
 ); mpi_öô–&
Y3
 ); mpi_öô–&
Z3
 );

935 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T3
, &
P
->
X
, &P->X ) ); 
	`MOD_MUL
( T3 );

936 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T2
, &
P
->
Y
, &P->Y ) ); 
	`MOD_MUL
( T2 );

937 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
Y3
, &
T2
, &T2 ) ); 
	`MOD_MUL
( Y3 );

938 
	`MPI_CHK
–
	`mpi_add_mpi
–&
X3
, &
P
->
X
, &
T2
 ) ); 
	`MOD_ADD
( X3 );

939 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
X3
, &X3, &X3 ) ); 
	`MOD_MUL
( X3 );

940 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
X3
, &X3, &
Y3
 ) ); 
	`MOD_SUB
( X3 );

941 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
X3
, &X3, &
T3
 ) ); 
	`MOD_SUB
( X3 );

942 
	`MPI_CHK
–
	`mpi_mul_öt
–&
T1
, &
X3
, 2 ) ); 
	`MOD_ADD
( T1 );

943 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
Z3
, &
P
->
Z
, &P->Z ) ); 
	`MOD_MUL
( Z3 );

944 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
X3
, &
Z3
, &Z3 ) ); 
	`MOD_MUL
( X3 );

945 
	`MPI_CHK
–
	`mpi_mul_öt
–&
T3
, &T3, 3 ) ); 
	`MOD_ADD
( T3 );

948 if–
gΩ
->
A
.
p
 =
NULL
 )

950 
	`MPI_CHK
–
	`mpi_mul_öt
–&
X3
, &X3, 3 ) );

951 
X3
.
s
 = -1;

952 
	`MOD_SUB
–
X3
 );

955 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
X3
, &X3, &
gΩ
->
A
 ) ); 
	`MOD_MUL
( X3 );

957 
	`MPI_CHK
–
	`mpi_add_mpi
–&
T3
, &T3, &
X3
 ) ); 
	`MOD_ADD
( T3 );

958 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
X3
, &
T3
, &T3 ) ); 
	`MOD_MUL
( X3 );

959 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
X3
, &X3, &
T1
 ) ); 
	`MOD_SUB
( X3 );

960 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
X3
, &X3, &
T1
 ) ); 
	`MOD_SUB
( X3 );

961 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
T1
, &T1, &
X3
 ) ); 
	`MOD_SUB
( T1 );

962 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T1
, &
T3
, &T1 ) ); 
	`MOD_MUL
( T1 );

963 
	`MPI_CHK
–
	`mpi_mul_öt
–&
T3
, &
Y3
, 8 ) ); 
	`MOD_ADD
( T3 );

964 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
Y3
, &
T1
, &
T3
 ) ); 
	`MOD_SUB
( Y3 );

965 
	`MPI_CHK
–
	`mpi_add_mpi
–&
T1
, &
P
->
Y
, &P->
Z
 ) ); 
	`MOD_ADD
( T1 );

966 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T1
, &T1, &T1 ) ); 
	`MOD_MUL
( T1 );

967 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
T1
, &T1, &
T2
 ) ); 
	`MOD_SUB
( T1 );

968 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
Z3
, &
T1
, &Z3 ) ); 
	`MOD_SUB
( Z3 );

970 
	`MPI_CHK
–
	`mpi_c›y
–&
R
->
X
, &
X3
 ) );

971 
	`MPI_CHK
–
	`mpi_c›y
–&
R
->
Y
, &
Y3
 ) );

972 
	`MPI_CHK
–
	`mpi_c›y
–&
R
->
Z
, &
Z3
 ) );

974 
˛ónup
:

975 
	`mpi_‰ì
–&
T1
 ); mpi_‰ì–&
T2
 ); mpi_‰ì–&
T3
 );

976 
	`mpi_‰ì
–&
X3
 ); mpi_‰ì–&
Y3
 ); mpi_‰ì–&
Z3
 );

978 –
ªt
 );

979 
	}
}

999 
	$e˝_add_mixed
–c⁄° 
e˝_group
 *
gΩ
, 
e˝_poöt
 *
R
,

1000 c⁄° 
e˝_poöt
 *
P
, c⁄°É˝_poöà*
Q
 )

1002 
ªt
;

1003 
mpi
 
T1
, 
T2
, 
T3
, 
T4
, 
X
, 
Y
, 
Z
;

1005 #i‡
	`deföed
(
POLARSSL_SELF_TEST
)

1006 
add_cou¡
++;

1012 if–
	`mpi_cmp_öt
–&
P
->
Z
, 0 ) == 0 )

1013 –
	`e˝_c›y
–
R
, 
Q
 ) );

1015 if–
Q
->
Z
.
p
 !
NULL
 && 
	`mpi_cmp_öt
( &Q->Z, 0 ) == 0 )

1016 –
	`e˝_c›y
–
R
, 
P
 ) );

1021 if–
Q
->
Z
.
p
 !
NULL
 && 
	`mpi_cmp_öt
( &Q->Z, 1 ) != 0 )

1022 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

1024 
	`mpi_öô
–&
T1
 ); mpi_öô–&
T2
 ); mpi_öô–&
T3
 ); mpi_öô–&
T4
 );

1025 
	`mpi_öô
–&
X
 ); mpi_öô–&
Y
 ); mpi_öô–&
Z
 );

1027 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T1
, &
P
->
Z
, &P->Z ) ); 
	`MOD_MUL
( T1 );

1028 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T2
, &
T1
, &
P
->
Z
 ) ); 
	`MOD_MUL
( T2 );

1029 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T1
, &T1, &
Q
->
X
 ) ); 
	`MOD_MUL
( T1 );

1030 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T2
, &T2, &
Q
->
Y
 ) ); 
	`MOD_MUL
( T2 );

1031 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
T1
, &T1, &
P
->
X
 ) ); 
	`MOD_SUB
( T1 );

1032 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
T2
, &T2, &
P
->
Y
 ) ); 
	`MOD_SUB
( T2 );

1035 if–
	`mpi_cmp_öt
–&
T1
, 0 ) == 0 )

1037 if–
	`mpi_cmp_öt
–&
T2
, 0 ) == 0 )

1039 
ªt
 = 
	`e˝_doubÀ_jac
–
gΩ
, 
R
, 
P
 );

1040 
˛ónup
;

1044 
ªt
 = 
	`e˝_£t_zîo
–
R
 );

1045 
˛ónup
;

1049 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
Z
, &
P
->Z, &
T1
 ) ); 
	`MOD_MUL
( Z );

1050 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T3
, &
T1
, &T1 ) ); 
	`MOD_MUL
( T3 );

1051 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T4
, &
T3
, &
T1
 ) ); 
	`MOD_MUL
( T4 );

1052 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T3
, &T3, &
P
->
X
 ) ); 
	`MOD_MUL
( T3 );

1053 
	`MPI_CHK
–
	`mpi_mul_öt
–&
T1
, &
T3
, 2 ) ); 
	`MOD_ADD
( T1 );

1054 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
X
, &
T2
, &T2 ) ); 
	`MOD_MUL
( X );

1055 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
X
, &X, &
T1
 ) ); 
	`MOD_SUB
( X );

1056 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
X
, &X, &
T4
 ) ); 
	`MOD_SUB
( X );

1057 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
T3
, &T3, &
X
 ) ); 
	`MOD_SUB
( T3 );

1058 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T3
, &T3, &
T2
 ) ); 
	`MOD_MUL
( T3 );

1059 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T4
, &T4, &
P
->
Y
 ) ); 
	`MOD_MUL
( T4 );

1060 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
Y
, &
T3
, &
T4
 ) ); 
	`MOD_SUB
( Y );

1062 
	`MPI_CHK
–
	`mpi_c›y
–&
R
->
X
, &X ) );

1063 
	`MPI_CHK
–
	`mpi_c›y
–&
R
->
Y
, &Y ) );

1064 
	`MPI_CHK
–
	`mpi_c›y
–&
R
->
Z
, &Z ) );

1066 
˛ónup
:

1068 
	`mpi_‰ì
–&
T1
 ); mpi_‰ì–&
T2
 ); mpi_‰ì–&
T3
 ); mpi_‰ì–&
T4
 );

1069 
	`mpi_‰ì
–&
X
 ); mpi_‰ì–&
Y
 ); mpi_‰ì–&
Z
 );

1071 –
ªt
 );

1072 
	}
}

1077 
	$e˝_add
–c⁄° 
e˝_group
 *
gΩ
, 
e˝_poöt
 *
R
,

1078 c⁄° 
e˝_poöt
 *
P
, c⁄°É˝_poöà*
Q
 )

1080 
ªt
;

1082 if–
	`e˝_gë_ty≥
–
gΩ
 ) !
POLARSSL_ECP_TYPE_SHORT_WEIERSTRASS
 )

1083 –
POLARSSL_ERR_ECP_FEATURE_UNAVAILABLE
 );

1085 
	`MPI_CHK
–
	`e˝_add_mixed
–
gΩ
, 
R
, 
P
, 
Q
 ) );

1086 
	`MPI_CHK
–
	`e˝_n‹mÆize_jac
–
gΩ
, 
R
 ) );

1088 
˛ónup
:

1089 –
ªt
 );

1090 
	}
}

1095 
	$e˝_sub
–c⁄° 
e˝_group
 *
gΩ
, 
e˝_poöt
 *
R
,

1096 c⁄° 
e˝_poöt
 *
P
, c⁄°É˝_poöà*
Q
 )

1098 
ªt
;

1099 
e˝_poöt
 
mQ
;

1101 
	`e˝_poöt_öô
–&
mQ
 );

1103 if–
	`e˝_gë_ty≥
–
gΩ
 ) !
POLARSSL_ECP_TYPE_SHORT_WEIERSTRASS
 )

1104 –
POLARSSL_ERR_ECP_FEATURE_UNAVAILABLE
 );

1107 
	`MPI_CHK
–
	`e˝_c›y
–&
mQ
, 
Q
 ) );

1108 if–
	`mpi_cmp_öt
–&
mQ
.
Y
, 0 ) != 0 )

1109 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
mQ
.
Y
, &
gΩ
->
P
, &mQ.Y ) );

1111 
	`MPI_CHK
–
	`e˝_add_mixed
–
gΩ
, 
R
, 
P
, &
mQ
 ) );

1112 
	`MPI_CHK
–
	`e˝_n‹mÆize_jac
–
gΩ
, 
R
 ) );

1114 
˛ónup
:

1115 
	`e˝_poöt_‰ì
–&
mQ
 );

1117 –
ªt
 );

1118 
	}
}

1127 
e˝_øndomize_jac
–c⁄° 
e˝_group
 *
gΩ
, 
e˝_poöt
 *
±
,

1128 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 )

1130 
ªt
;

1131 
mpi
 
l
, 
Œ
;

1132 
size_t
 
p_size
 = ( 
gΩ
->
pbôs
 + 7 ) / 8;

1133 
cou¡
 = 0;

1135 
	`mpi_öô
–&
l
 ); mpi_öô–&
Œ
 );

1140 
	`mpi_fûl_øndom
–&
l
, 
p_size
, 
f_∫g
, 
p_∫g
 );

1142  
	`mpi_cmp_mpi
–&
l
, &
gΩ
->
P
 ) >= 0 )

1143 
	`MPI_CHK
–
	`mpi_shi·_r
–&
l
, 1 ) );

1145 if–
cou¡
++ > 10 )

1146 –
POLARSSL_ERR_ECP_RANDOM_FAILED
 );

1148  
	`mpi_cmp_öt
–&
l
, 1 ) <= 0 );

1151 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
±
->
Z
, &±->Z, &
l
 ) ); 
	`MOD_MUL
(Öt->Z );

1154 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
Œ
, &
l
, &»Ë); 
	`MOD_MUL
(Ül );

1155 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
±
->
X
, &±->X, &
Œ
 ) ); 
	`MOD_MUL
(Öt->X );

1158 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
Œ
, &Œ, &
l
 ) ); 
	`MOD_MUL
(Ül );

1159 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
±
->
Y
, &±->Y, &
Œ
 ) ); 
	`MOD_MUL
(Öt->Y );

1161 
˛ónup
:

1162 
	`mpi_‰ì
–&
l
 ); mpi_‰ì–&
Œ
 );

1164 –
ªt
 );

1165 
	}
}

1170 #i‡
POLARSSL_ECP_WINDOW_SIZE
 < 2 || POLARSSL_ECP_WINDOW_SIZE > 7

1175 
	#COMB_MAX_D
 ( 
POLARSSL_ECP_MAX_BITS
 + 1 ) / 2

	)

1178 
	#COMB_MAX_PRE
 ( 1 << ( 
POLARSSL_ECP_WINDOW_SIZE
 - 1 ) )

	)

1200 
	$e˝_comb_fixed
–
x
[], 
size_t
 
d
,

1201 
w
, c⁄° 
mpi
 *
m
 )

1203 
size_t
 
i
, 
j
;

1204 
c
, 
cc
, 
adju°
;

1206 
	`mem£t
–
x
, 0, 
d
+1 );

1209  
i
 = 0; i < 
d
; i++ )

1210  
j
 = 0; j < 
w
; j++ )

1211 
x
[
i
] |
	`mpi_gë_bô
–
m
, i + 
d
 * 
j
 ) << j;

1214 
c
 = 0;

1215  
i
 = 1; i <
d
; i++ )

1218 
cc
 = 
x
[
i
] & 
c
;

1219 
x
[
i
] = x[i] ^ 
c
;

1220 
c
 = 
cc
;

1223 
adju°
 = 1 - ( 
x
[
i
] & 0x01 );

1224 
c
 |
x
[
i
] & ( x[i-1] * 
adju°
 );

1225 
x
[
i
] = x[i] ^ ( x[i-1] * 
adju°
 );

1226 
x
[
i
-1] |
adju°
 << 7;

1228 
	}
}

1240 
	$e˝_¥ecompuã_comb
–c⁄° 
e˝_group
 *
gΩ
,

1241 
e˝_poöt
 
T
[], c⁄°É˝_poöà*
P
,

1242 
w
, 
size_t
 
d
 )

1244 
ªt
;

1245 
i
, 
k
;

1246 
size_t
 
j
;

1247 
e˝_poöt
 *
cur
, *
TT
[
COMB_MAX_PRE
 - 1];

1253 
	`MPI_CHK
–
	`e˝_c›y
–&
T
[0], 
P
 ) );

1255 
k
 = 0;

1256  
i
 = 1; i < ( 1U << ( 
w
 - 1 ) ); i <<= 1 )

1258 
cur
 = 
T
 + 
i
;

1259 
	`MPI_CHK
–
	`e˝_c›y
–
cur
, 
T
 + ( 
i
 >> 1 ) ) );

1260  
j
 = 0; j < 
d
; j++ )

1261 
	`MPI_CHK
–
	`e˝_doubÀ_jac
–
gΩ
, 
cur
, cur ) );

1263 
TT
[
k
++] = 
cur
;

1266 
	`MPI_CHK
–
	`e˝_n‹mÆize_jac_m™y
–
gΩ
, 
TT
, 
k
 ) );

1272 
k
 = 0;

1273  
i
 = 1; i < ( 1U << ( 
w
 - 1 ) ); i <<= 1 )

1275 
j
 = 
i
;

1276  
j
-- )

1278 
	`MPI_CHK
–
	`e˝_add_mixed
–
gΩ
, &
T
[
i
 + 
j
], &T[j], &T[i] ) );

1279 
TT
[
k
++] = &
T
[
i
 + 
j
];

1283 
	`MPI_CHK
–
	`e˝_n‹mÆize_jac_m™y
–
gΩ
, 
TT
, 
k
 ) );

1285 
˛ónup
:

1286 –
ªt
 );

1287 
	}
}

1292 
	$e˝_£À˘_comb
–c⁄° 
e˝_group
 *
gΩ
, 
e˝_poöt
 *
R
,

1293 c⁄° 
e˝_poöt
 
T
[], 
t_Àn
,

1294 
i
 )

1296 
ªt
;

1297 
ii
, 
j
;

1300 
ii
 = ( 
i
 & 0x7Fu ) >> 1;

1303  
j
 = 0; j < 
t_Àn
; j++ )

1305 
	`MPI_CHK
–
	`mpi_ß„_c⁄d_assign
–&
R
->
X
, &
T
[
j
].X, j =
ii
 ) );

1306 
	`MPI_CHK
–
	`mpi_ß„_c⁄d_assign
–&
R
->
Y
, &
T
[
j
].Y, j =
ii
 ) );

1310 
	`MPI_CHK
–
	`e˝_ß„_övît_jac
–
gΩ
, 
R
, 
i
 >> 7 ) );

1312 
˛ónup
:

1313 –
ªt
 );

1314 
	}
}

1322 
e˝_mul_comb_c‹e
–c⁄° 
e˝_group
 *
gΩ
, 
e˝_poöt
 *
R
,

1323 c⁄° 
e˝_poöt
 
T
[], 
t_Àn
,

1324 c⁄° 
x
[], 
size_t
 
d
,

1325 (*
f_∫g
)(*, *, 
size_t
),

1326 *
p_∫g
 )

1328 
ªt
;

1329 
e˝_poöt
 
Txi
;

1330 
size_t
 
i
;

1332 
	`e˝_poöt_öô
–&
Txi
 );

1335 
i
 = 
d
;

1336 
	`MPI_CHK
–
	`e˝_£À˘_comb
–
gΩ
, 
R
, 
T
, 
t_Àn
, 
x
[
i
] ) );

1337 
	`MPI_CHK
–
	`mpi_l£t
–&
R
->
Z
, 1 ) );

1338 if–
f_∫g
 != 0 )

1339 
	`MPI_CHK
–
	`e˝_øndomize_jac
–
gΩ
, 
R
, 
f_∫g
, 
p_∫g
 ) );

1341  
i
-- != 0 )

1343 
	`MPI_CHK
–
	`e˝_doubÀ_jac
–
gΩ
, 
R
, R ) );

1344 
	`MPI_CHK
–
	`e˝_£À˘_comb
–
gΩ
, &
Txi
, 
T
, 
t_Àn
, 
x
[
i
] ) );

1345 
	`MPI_CHK
–
	`e˝_add_mixed
–
gΩ
, 
R
, R, &
Txi
 ) );

1348 
˛ónup
:

1349 
	`e˝_poöt_‰ì
–&
Txi
 );

1351 –
ªt
 );

1352 
	}
}

1358 
e˝_mul_comb
–
e˝_group
 *
gΩ
, 
e˝_poöt
 *
R
,

1359 c⁄° 
mpi
 *
m
, c⁄° 
e˝_poöt
 *
P
,

1360 (*
f_∫g
)(*, *, 
size_t
),

1361 *
p_∫g
 )

1363 
ªt
;

1364 
w
, 
m_is_odd
, 
p_eq_g
, 
¥e_Àn
, 
i
;

1365 
size_t
 
d
;

1366 
k
[
COMB_MAX_D
 + 1];

1367 
e˝_poöt
 *
T
;

1368 
mpi
 
M
, 
mm
;

1370 
	`mpi_öô
–&
M
 );

1371 
	`mpi_öô
–&
mm
 );

1374 if–
	`mpi_gë_bô
–&
gΩ
->
N
, 0 ) != 1 )

1375 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

1382 
w
 = 
gΩ
->
nbôs
 >= 384 ? 5 : 4;

1389 #i‡
POLARSSL_ECP_FIXED_POINT_OPTIM
 == 1

1390 
p_eq_g
 = ( 
	`mpi_cmp_mpi
–&
P
->
Y
, &
gΩ
->
G
.Y ) == 0 &&

1391 
	`mpi_cmp_mpi
–&
P
->
X
, &
gΩ
->
G
.X ) == 0 );

1392 if–
p_eq_g
 )

1393 
w
++;

1395 
p_eq_g
 = 0;

1402 if–
w
 > 
POLARSSL_ECP_WINDOW_SIZE
 )

1403 
w
 = 
POLARSSL_ECP_WINDOW_SIZE
;

1404 if–
w
 >
gΩ
->
nbôs
 )

1405 
w
 = 2;

1408 
¥e_Àn
 = 1U << ( 
w
 - 1 );

1409 
d
 = ( 
gΩ
->
nbôs
 + 
w
 - 1 ) / w;

1415 
T
 = 
p_eq_g
 ? 
gΩ
->T : 
NULL
;

1417 if–
T
 =
NULL
 )

1419 
T
 = (
e˝_poöt
 *Ë
	`pﬁ¨s¶_mÆloc
–
¥e_Àn
 * (Écp_point ) );

1420 if–
T
 =
NULL
 )

1422 
ªt
 = 
POLARSSL_ERR_ECP_MALLOC_FAILED
;

1423 
˛ónup
;

1426  
i
 = 0; i < 
¥e_Àn
; i++ )

1427 
	`e˝_poöt_öô
–&
T
[
i
] );

1429 
	`MPI_CHK
–
	`e˝_¥ecompuã_comb
–
gΩ
, 
T
, 
P
, 
w
, 
d
 ) );

1431 if–
p_eq_g
 )

1433 
gΩ
->
T
 = T;

1434 
gΩ
->
T_size
 = 
¥e_Àn
;

1442 
m_is_odd
 = ( 
	`mpi_gë_bô
–
m
, 0 ) == 1 );

1443 
	`MPI_CHK
–
	`mpi_c›y
–&
M
, 
m
 ) );

1444 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
mm
, &
gΩ
->
N
, 
m
 ) );

1445 
	`MPI_CHK
–
	`mpi_ß„_c⁄d_assign
–&
M
, &
mm
, ! 
m_is_odd
 ) );

1450 
	`e˝_comb_fixed
–
k
, 
d
, 
w
, &
M
 );

1451 
	`MPI_CHK
–
	`e˝_mul_comb_c‹e
–
gΩ
, 
R
, 
T
, 
¥e_Àn
, 
k
, 
d
, 
f_∫g
, 
p_∫g
 ) );

1456 
	`MPI_CHK
–
	`e˝_ß„_övît_jac
–
gΩ
, 
R
, ! 
m_is_odd
 ) );

1457 
	`MPI_CHK
–
	`e˝_n‹mÆize_jac
–
gΩ
, 
R
 ) );

1459 
˛ónup
:

1461 if–
T
 !
NULL
 && ! 
p_eq_g
 )

1463  
i
 = 0; i < 
¥e_Àn
; i++ )

1464 
	`e˝_poöt_‰ì
–&
T
[
i
] );

1465 
	`pﬁ¨s¶_‰ì
–
T
 );

1468 
	`mpi_‰ì
–&
M
 );

1469 
	`mpi_‰ì
–&
mm
 );

1471 if–
ªt
 != 0 )

1472 
	`e˝_poöt_‰ì
–
R
 );

1474 –
ªt
 );

1475 
	}
}

1479 #i‡
deföed
(
POLARSSL_ECP_MONTGOMERY
)

1492 
	$e˝_n‹mÆize_mxz
–c⁄° 
e˝_group
 *
gΩ
, 
e˝_poöt
 *
P
 )

1494 
ªt
;

1496 
	`MPI_CHK
–
	`mpi_öv_mod
–&
P
->
Z
, &P->Z, &
gΩ
->P ) );

1497 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
P
->
X
, &P->X, &P->
Z
 ) ); 
	`MOD_MUL
( P->X );

1498 
	`MPI_CHK
–
	`mpi_l£t
–&
P
->
Z
, 1 ) );

1500 
˛ónup
:

1501 –
ªt
 );

1502 
	}
}

1512 
e˝_øndomize_mxz
–c⁄° 
e˝_group
 *
gΩ
, 
e˝_poöt
 *
P
,

1513 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 )

1515 
ªt
;

1516 
mpi
 
l
;

1517 
size_t
 
p_size
 = ( 
gΩ
->
pbôs
 + 7 ) / 8;

1518 
cou¡
 = 0;

1520 
	`mpi_öô
–&
l
 );

1525 
	`mpi_fûl_øndom
–&
l
, 
p_size
, 
f_∫g
, 
p_∫g
 );

1527  
	`mpi_cmp_mpi
–&
l
, &
gΩ
->
P
 ) >= 0 )

1528 
	`MPI_CHK
–
	`mpi_shi·_r
–&
l
, 1 ) );

1530 if–
cou¡
++ > 10 )

1531 –
POLARSSL_ERR_ECP_RANDOM_FAILED
 );

1533  
	`mpi_cmp_öt
–&
l
, 1 ) <= 0 );

1535 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
P
->
X
, &P->X, &
l
 ) ); 
	`MOD_MUL
( P->X );

1536 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
P
->
Z
, &P->Z, &
l
 ) ); 
	`MOD_MUL
( P->Z );

1538 
˛ónup
:

1539 
	`mpi_‰ì
–&
l
 );

1541 –
ªt
 );

1542 
	}
}

1559 
	$e˝_doubÀ_add_mxz
–c⁄° 
e˝_group
 *
gΩ
,

1560 
e˝_poöt
 *
R
,É˝_poöà*
S
,

1561 c⁄° 
e˝_poöt
 *
P
, c⁄°É˝_poöà*
Q
,

1562 c⁄° 
mpi
 *
d
 )

1564 
ªt
;

1565 
mpi
 
A
, 
AA
, 
B
, 
BB
, 
E
, 
C
, 
D
, 
DA
, 
CB
;

1567 
	`mpi_öô
–&
A
 ); mpi_öô–&
AA
 ); mpi_öô–&
B
 );

1568 
	`mpi_öô
–&
BB
 ); mpi_öô–&
E
 ); mpi_öô–&
C
 );

1569 
	`mpi_öô
–&
D
 ); mpi_öô–&
DA
 ); mpi_öô–&
CB
 );

1571 
	`MPI_CHK
–
	`mpi_add_mpi
–&
A
, &
P
->
X
, &P->
Z
 ) ); 
	`MOD_ADD
( A );

1572 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
AA
, &
A
, &A ) ); 
	`MOD_MUL
( AA );

1573 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
B
, &
P
->
X
, &P->
Z
 ) ); 
	`MOD_SUB
( B );

1574 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
BB
, &
B
, &B ) ); 
	`MOD_MUL
( BB );

1575 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
E
, &
AA
, &
BB
 ) ); 
	`MOD_SUB
( E );

1576 
	`MPI_CHK
–
	`mpi_add_mpi
–&
C
, &
Q
->
X
, &Q->
Z
 ) ); 
	`MOD_ADD
( C );

1577 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
D
, &
Q
->
X
, &Q->
Z
 ) ); 
	`MOD_SUB
( D );

1578 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
DA
, &
D
, &
A
 ) ); 
	`MOD_MUL
( DA );

1579 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
CB
, &
C
, &
B
 ) ); 
	`MOD_MUL
( CB );

1580 
	`MPI_CHK
–
	`mpi_add_mpi
–&
S
->
X
, &
DA
, &
CB
 ) ); 
	`MOD_MUL
( S->X );

1581 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
S
->
X
, &S->X, &S->X ) ); 
	`MOD_MUL
( S->X );

1582 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
S
->
Z
, &
DA
, &
CB
 ) ); 
	`MOD_SUB
( S->Z );

1583 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
S
->
Z
, &S->Z, &S->Z ) ); 
	`MOD_MUL
( S->Z );

1584 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
S
->
Z
, 
d
, &S->Z ) ); 
	`MOD_MUL
( S->Z );

1585 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
R
->
X
, &
AA
, &
BB
 ) ); 
	`MOD_MUL
( R->X );

1586 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
R
->
Z
, &
gΩ
->
A
, &
E
 ) ); 
	`MOD_MUL
( R->Z );

1587 
	`MPI_CHK
–
	`mpi_add_mpi
–&
R
->
Z
, &
BB
, &R->Z ) ); 
	`MOD_ADD
( R->Z );

1588 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
R
->
Z
, &
E
, &R->Z ) ); 
	`MOD_MUL
( R->Z );

1590 
˛ónup
:

1591 
	`mpi_‰ì
–&
A
 ); mpi_‰ì–&
AA
 ); mpi_‰ì–&
B
 );

1592 
	`mpi_‰ì
–&
BB
 ); mpi_‰ì–&
E
 ); mpi_‰ì–&
C
 );

1593 
	`mpi_‰ì
–&
D
 ); mpi_‰ì–&
DA
 ); mpi_‰ì–&
CB
 );

1595 –
ªt
 );

1596 
	}
}

1602 
e˝_mul_mxz
–
e˝_group
 *
gΩ
, 
e˝_poöt
 *
R
,

1603 c⁄° 
mpi
 *
m
, c⁄° 
e˝_poöt
 *
P
,

1604 (*
f_∫g
)(*, *, 
size_t
),

1605 *
p_∫g
 )

1607 
ªt
;

1608 
size_t
 
i
;

1609 
b
;

1610 
e˝_poöt
 
RP
;

1611 
mpi
 
PX
;

1613 
	`e˝_poöt_öô
–&
RP
 ); 
	`mpi_öô
–&
PX
 );

1616 
	`MPI_CHK
–
	`mpi_c›y
–&
PX
, &
P
->
X
 ) );

1617 
	`MPI_CHK
–
	`e˝_c›y
–&
RP
, 
P
 ) );

1620 
	`MPI_CHK
–
	`mpi_l£t
–&
R
->
X
, 1 ) );

1621 
	`MPI_CHK
–
	`mpi_l£t
–&
R
->
Z
, 0 ) );

1622 
	`mpi_‰ì
–&
R
->
Y
 );

1625 
	`MOD_ADD
–
RP
.
X
 );

1628 if–
f_∫g
 !
NULL
 )

1629 
	`MPI_CHK
–
	`e˝_øndomize_mxz
–
gΩ
, &
RP
, 
f_∫g
, 
p_∫g
 ) );

1632 
i
 = 
	`mpi_msb
–
m
 );

1633  
i
-- > 0 )

1635 
b
 = 
	`mpi_gë_bô
–
m
, 
i
 );

1643 
	`MPI_CHK
–
	`mpi_ß„_c⁄d_sw≠
–&
R
->
X
, &
RP
.X, 
b
 ) );

1644 
	`MPI_CHK
–
	`mpi_ß„_c⁄d_sw≠
–&
R
->
Z
, &
RP
.Z, 
b
 ) );

1645 
	`MPI_CHK
–
	`e˝_doubÀ_add_mxz
–
gΩ
, 
R
, &
RP
, R, &RP, &
PX
 ) );

1646 
	`MPI_CHK
–
	`mpi_ß„_c⁄d_sw≠
–&
R
->
X
, &
RP
.X, 
b
 ) );

1647 
	`MPI_CHK
–
	`mpi_ß„_c⁄d_sw≠
–&
R
->
Z
, &
RP
.Z, 
b
 ) );

1650 
	`MPI_CHK
–
	`e˝_n‹mÆize_mxz
–
gΩ
, 
R
 ) );

1652 
˛ónup
:

1653 
	`e˝_poöt_‰ì
–&
RP
 ); 
	`mpi_‰ì
–&
PX
 );

1655 –
ªt
 );

1656 
	}
}

1663 
e˝_mul
–
e˝_group
 *
gΩ
, 
e˝_poöt
 *
R
,

1664 c⁄° 
mpi
 *
m
, c⁄° 
e˝_poöt
 *
P
,

1665 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 )

1667 
ªt
;

1670 if–
	`mpi_cmp_öt
–&
P
->
Z
, 1 ) != 0 )

1671 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

1673 if––
ªt
 = 
	`e˝_check_¥ivkey
–
gΩ
, 
m
 ) ) != 0 ||

1674 –
ªt
 = 
	`e˝_check_pubkey
–
gΩ
, 
P
 ) ) != 0 )

1675 –
ªt
 );

1677 #i‡
	`deföed
(
POLARSSL_ECP_MONTGOMERY
)

1678 if–
	`e˝_gë_ty≥
–
gΩ
 ) =
POLARSSL_ECP_TYPE_MONTGOMERY
 )

1679 –
	`e˝_mul_mxz
–
gΩ
, 
R
, 
m
, 
P
, 
f_∫g
, 
p_∫g
 ) );

1681 #i‡
	`deföed
(
POLARSSL_ECP_SHORT_WEIERSTRASS
)

1682 if–
	`e˝_gë_ty≥
–
gΩ
 ) =
POLARSSL_ECP_TYPE_SHORT_WEIERSTRASS
 )

1683 –
	`e˝_mul_comb
–
gΩ
, 
R
, 
m
, 
P
, 
f_∫g
, 
p_∫g
 ) );

1685 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

1686 
	}
}

1688 #i‡
deföed
(
POLARSSL_ECP_SHORT_WEIERSTRASS
)

1693 
	$e˝_check_pubkey_sw
–c⁄° 
e˝_group
 *
gΩ
, c⁄° 
e˝_poöt
 *
±
 )

1695 
ªt
;

1696 
mpi
 
YY
, 
RHS
;

1699 if–
	`mpi_cmp_öt
–&
±
->
X
, 0 ) < 0 ||

1700 
	`mpi_cmp_öt
–&
±
->
Y
, 0 ) < 0 ||

1701 
	`mpi_cmp_mpi
–&
±
->
X
, &
gΩ
->
P
 ) >= 0 ||

1702 
	`mpi_cmp_mpi
–&
±
->
Y
, &
gΩ
->
P
 ) >= 0 )

1703 –
POLARSSL_ERR_ECP_INVALID_KEY
 );

1705 
	`mpi_öô
–&
YY
 ); mpi_öô–&
RHS
 );

1711 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
YY
, &
±
->
Y
, &±->Y ) ); 
	`MOD_MUL
( YY );

1712 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
RHS
, &
±
->
X
, &±->X ) ); 
	`MOD_MUL
( RHS );

1715 if–
gΩ
->
A
.
p
 =
NULL
 )

1717 
	`MPI_CHK
–
	`mpi_sub_öt
–&
RHS
, &RHS, 3 ) ); 
	`MOD_SUB
( RHS );

1721 
	`MPI_CHK
–
	`mpi_add_mpi
–&
RHS
, &RHS, &
gΩ
->
A
 ) ); 
	`MOD_ADD
( RHS );

1724 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
RHS
, &RHS, &
±
->
X
 ) ); 
	`MOD_MUL
( RHS );

1725 
	`MPI_CHK
–
	`mpi_add_mpi
–&
RHS
, &RHS, &
gΩ
->
B
 ) ); 
	`MOD_ADD
( RHS );

1727 if–
	`mpi_cmp_mpi
–&
YY
, &
RHS
 ) != 0 )

1728 
ªt
 = 
POLARSSL_ERR_ECP_INVALID_KEY
;

1730 
˛ónup
:

1732 
	`mpi_‰ì
–&
YY
 ); mpi_‰ì–&
RHS
 );

1734 –
ªt
 );

1735 
	}
}

1739 #i‡
deföed
(
POLARSSL_ECP_MONTGOMERY
)

1743 
	$e˝_check_pubkey_mx
–c⁄° 
e˝_group
 *
gΩ
, c⁄° 
e˝_poöt
 *
±
 )

1746 if–
	`mpi_size
–&
±
->
X
 ) > ( 
gΩ
->
nbôs
 + 7 ) / 8 )

1747 –
POLARSSL_ERR_ECP_INVALID_KEY
 );

1750 
	}
}

1756 
	$e˝_check_pubkey
–c⁄° 
e˝_group
 *
gΩ
, c⁄° 
e˝_poöt
 *
±
 )

1759 if–
	`mpi_cmp_öt
–&
±
->
Z
, 1 ) != 0 )

1760 –
POLARSSL_ERR_ECP_INVALID_KEY
 );

1762 #i‡
	`deföed
(
POLARSSL_ECP_MONTGOMERY
)

1763 if–
	`e˝_gë_ty≥
–
gΩ
 ) =
POLARSSL_ECP_TYPE_MONTGOMERY
 )

1764 –
	`e˝_check_pubkey_mx
–
gΩ
, 
±
 ) );

1766 #i‡
	`deföed
(
POLARSSL_ECP_SHORT_WEIERSTRASS
)

1767 if–
	`e˝_gë_ty≥
–
gΩ
 ) =
POLARSSL_ECP_TYPE_SHORT_WEIERSTRASS
 )

1768 –
	`e˝_check_pubkey_sw
–
gΩ
, 
±
 ) );

1770 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

1771 
	}
}

1776 
	$e˝_check_¥ivkey
–c⁄° 
e˝_group
 *
gΩ
, c⁄° 
mpi
 *
d
 )

1778 #i‡
	`deföed
(
POLARSSL_ECP_MONTGOMERY
)

1779 if–
	`e˝_gë_ty≥
–
gΩ
 ) =
POLARSSL_ECP_TYPE_MONTGOMERY
 )

1782 if–
	`mpi_gë_bô
–
d
, 0 ) != 0 ||

1783 
	`mpi_gë_bô
–
d
, 1 ) != 0 ||

1784 
	`mpi_gë_bô
–
d
, 2 ) != 0 ||

1785 
	`mpi_msb
–
d
 ) - 1 !
gΩ
->
nbôs
 )

1786 –
POLARSSL_ERR_ECP_INVALID_KEY
 );

1791 #i‡
	`deföed
(
POLARSSL_ECP_SHORT_WEIERSTRASS
)

1792 if–
	`e˝_gë_ty≥
–
gΩ
 ) =
POLARSSL_ECP_TYPE_SHORT_WEIERSTRASS
 )

1795 if–
	`mpi_cmp_öt
–
d
, 1 ) < 0 ||

1796 
	`mpi_cmp_mpi
–
d
, &
gΩ
->
N
 ) >= 0 )

1797 –
POLARSSL_ERR_ECP_INVALID_KEY
 );

1803 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

1804 
	}
}

1809 
e˝_gí_key∑ú
–
e˝_group
 *
gΩ
, 
mpi
 *
d
, 
e˝_poöt
 *
Q
,

1810 (*
f_∫g
)(*, *, 
size_t
),

1811 *
p_∫g
 )

1813 
ªt
;

1814 
size_t
 
n_size
 = ( 
gΩ
->
nbôs
 + 7 ) / 8;

1816 #i‡
	`deföed
(
POLARSSL_ECP_MONTGOMERY
)

1817 if–
	`e˝_gë_ty≥
–
gΩ
 ) =
POLARSSL_ECP_TYPE_MONTGOMERY
 )

1820 
size_t
 
b
;

1822 
	`MPI_CHK
–
	`mpi_fûl_øndom
–
d
, 
n_size
, 
f_∫g
, 
p_∫g
 ) );

1825 
b
 = 
	`mpi_msb
–
d
 ) - 1;

1826 if–
b
 > 
gΩ
->
nbôs
 )

1827 
	`MPI_CHK
–
	`mpi_shi·_r
–
d
, 
b
 - 
gΩ
->
nbôs
 ) );

1829 
	`MPI_CHK
–
	`mpi_£t_bô
–
d
, 
gΩ
->
nbôs
, 1 ) );

1832 
	`MPI_CHK
–
	`mpi_£t_bô
–
d
, 0, 0 ) );

1833 
	`MPI_CHK
–
	`mpi_£t_bô
–
d
, 1, 0 ) );

1834 
	`MPI_CHK
–
	`mpi_£t_bô
–
d
, 2, 0 ) );

1838 #i‡
	`deföed
(
POLARSSL_ECP_SHORT_WEIERSTRASS
)

1839 if–
	`e˝_gë_ty≥
–
gΩ
 ) =
POLARSSL_ECP_TYPE_SHORT_WEIERSTRASS
 )

1842 
cou¡
 = 0;

1843 
∫d
[
POLARSSL_ECP_MAX_BYTES
];

1854 
	`MPI_CHK
–
	`f_∫g
–
p_∫g
, 
∫d
, 
n_size
 ) );

1855 
	`MPI_CHK
–
	`mpi_ªad_bö¨y
–
d
, 
∫d
, 
n_size
 ) );

1856 
	`MPI_CHK
–
	`mpi_shi·_r
–
d
, 8 * 
n_size
 - 
gΩ
->
nbôs
 ) );

1867 if–++
cou¡
 > 30 )

1868 –
POLARSSL_ERR_ECP_RANDOM_FAILED
 );

1870  
	`mpi_cmp_öt
–
d
, 1 ) < 0 ||

1871 
	`mpi_cmp_mpi
–
d
, &
gΩ
->
N
 ) >= 0 );

1875 –
POLARSSL_ERR_ECP_BAD_INPUT_DATA
 );

1877 
˛ónup
:

1878 if–
ªt
 != 0 )

1879 –
ªt
 );

1881 –
	`e˝_mul
–
gΩ
, 
Q
, 
d
, &gΩ->
G
, 
f_∫g
, 
p_∫g
 ) );

1882 
	}
}

1887 
e˝_gí_key
–
e˝_group_id
 
gΩ_id
, 
e˝_key∑ú
 *
key
,

1888 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 )

1890 
ªt
;

1892 if––
ªt
 = 
	`e˝_u£_known_dp
–&
key
->
gΩ
, 
gΩ_id
 ) ) != 0 )

1893 –
ªt
 );

1895 –
	`e˝_gí_key∑ú
–&
key
->
gΩ
, &key->
d
, &key->
Q
, 
f_∫g
, 
p_∫g
 ) );

1896 
	}
}

1898 #i‡
deföed
(
POLARSSL_SELF_TEST
)

1903 
	$e˝_£lf_ã°
–
vîbo£
 )

1905 
ªt
;

1906 
size_t
 
i
;

1907 
e˝_group
 
gΩ
;

1908 
e˝_poöt
 
R
, 
P
;

1909 
mpi
 
m
;

1910 
add_c_¥ev
, 
dbl_c_¥ev
, 
mul_c_¥ev
;

1912 c⁄° *
exp⁄íts
[] =

1922 
	`e˝_group_öô
–&
gΩ
 );

1923 
	`e˝_poöt_öô
–&
R
 );

1924 
	`e˝_poöt_öô
–&
P
 );

1925 
	`mpi_öô
–&
m
 );

1928 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP192R1_ENABLED
)

1929 
	`MPI_CHK
–
	`e˝_u£_known_dp
–&
gΩ
, 
POLARSSL_ECP_DP_SECP192R1
 ) );

1931 
	`MPI_CHK
–
	`e˝_u£_known_dp
–&
gΩ
, 
	`e˝_curve_li°
()->
gΩ_id
 ) );

1934 if–
vîbo£
 != 0 )

1935 
	`pﬁ¨s¶_¥ötf
( " ECPÅest #1 (constant op_count, baseÖoint G): " );

1938 
	`MPI_CHK
–
	`mpi_l£t
–&
m
, 2 ) );

1939 
	`MPI_CHK
–
	`e˝_mul
–&
gΩ
, &
P
, &
m
, &gΩ.
G
, 
NULL
, NULL ) );

1941 
add_cou¡
 = 0;

1942 
dbl_cou¡
 = 0;

1943 
mul_cou¡
 = 0;

1944 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
m
, 16, 
exp⁄íts
[0] ) );

1945 
	`MPI_CHK
–
	`e˝_mul
–&
gΩ
, &
R
, &
m
, &gΩ.
G
, 
NULL
, NULL ) );

1947  
i
 = 1; i < –
exp⁄íts
 ) / (Éxponents[0] ); i++ )

1949 
add_c_¥ev
 = 
add_cou¡
;

1950 
dbl_c_¥ev
 = 
dbl_cou¡
;

1951 
mul_c_¥ev
 = 
mul_cou¡
;

1952 
add_cou¡
 = 0;

1953 
dbl_cou¡
 = 0;

1954 
mul_cou¡
 = 0;

1956 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
m
, 16, 
exp⁄íts
[
i
] ) );

1957 
	`MPI_CHK
–
	`e˝_mul
–&
gΩ
, &
R
, &
m
, &gΩ.
G
, 
NULL
, NULL ) );

1959 if–
add_cou¡
 !
add_c_¥ev
 ||

1960 
dbl_cou¡
 !
dbl_c_¥ev
 ||

1961 
mul_cou¡
 !
mul_c_¥ev
 )

1963 if–
vîbo£
 != 0 )

1964 
	`pﬁ¨s¶_¥ötf
–"Áûed (%u)\n", (Ë
i
 );

1966 
ªt
 = 1;

1967 
˛ónup
;

1971 if–
vîbo£
 != 0 )

1972 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

1974 if–
vîbo£
 != 0 )

1975 
	`pﬁ¨s¶_¥ötf
( " ECPÅest #2 (constant op_count, otherÖoint): " );

1978 
add_cou¡
 = 0;

1979 
dbl_cou¡
 = 0;

1980 
mul_cou¡
 = 0;

1981 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
m
, 16, 
exp⁄íts
[0] ) );

1982 
	`MPI_CHK
–
	`e˝_mul
–&
gΩ
, &
R
, &
m
, &
P
, 
NULL
, NULL ) );

1984  
i
 = 1; i < –
exp⁄íts
 ) / (Éxponents[0] ); i++ )

1986 
add_c_¥ev
 = 
add_cou¡
;

1987 
dbl_c_¥ev
 = 
dbl_cou¡
;

1988 
mul_c_¥ev
 = 
mul_cou¡
;

1989 
add_cou¡
 = 0;

1990 
dbl_cou¡
 = 0;

1991 
mul_cou¡
 = 0;

1993 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
m
, 16, 
exp⁄íts
[
i
] ) );

1994 
	`MPI_CHK
–
	`e˝_mul
–&
gΩ
, &
R
, &
m
, &
P
, 
NULL
, NULL ) );

1996 if–
add_cou¡
 !
add_c_¥ev
 ||

1997 
dbl_cou¡
 !
dbl_c_¥ev
 ||

1998 
mul_cou¡
 !
mul_c_¥ev
 )

2000 if–
vîbo£
 != 0 )

2001 
	`pﬁ¨s¶_¥ötf
–"Áûed (%u)\n", (Ë
i
 );

2003 
ªt
 = 1;

2004 
˛ónup
;

2008 if–
vîbo£
 != 0 )

2009 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

2011 
˛ónup
:

2013 if–
ªt
 < 0 && 
vîbo£
 != 0 )

2014 
	`pﬁ¨s¶_¥ötf
–"U√x≥˘edÉº‹,Ñëu∫ codê%08X\n", 
ªt
 );

2016 
	`e˝_group_‰ì
–&
gΩ
 );

2017 
	`e˝_poöt_‰ì
–&
R
 );

2018 
	`e˝_poöt_‰ì
–&
P
 );

2019 
	`mpi_‰ì
–&
m
 );

2021 if–
vîbo£
 != 0 )

2022 
	`pﬁ¨s¶_¥ötf
( "\n" );

2024 –
ªt
 );

2025 
	}
}

	@polarssl/library/ecp_curves.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_ECP_C
)

34 
	~"pﬁ¨s¶/e˝.h
"

36 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
ölöe
)

37 
	#ölöe
 
_ölöe


	)

39 #i‡
deföed
(
__ARMCC_VERSION
Ë&& !deföed(
ölöe
)

40 
	#ölöe
 
__ölöe


	)

48 #i‡
deföed
(
POLARSSL_HAVE_INT8
)

50 
	#BYTES_TO_T_UINT_8
–
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
 ) \

51 
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h


	)

53 
	#BYTES_TO_T_UINT_4
–
a
, 
b
, 
c
, 
d
 ) \

54 
a
, 
b
, 
c
, 
d


	)

56 
	#BYTES_TO_T_UINT_2
–
a
, 
b
 ) \

57 
a
, 
b


	)

59 #ñi‡
deföed
(
POLARSSL_HAVE_INT16
)

61 
	#BYTES_TO_T_UINT_2
–
a
, 
b
 ) \

62 –(
t_uöt
Ë
a
 << 0 ) | \

63 –(
t_uöt
Ë
b
 << 8 )

	)

65 
	#BYTES_TO_T_UINT_4
–
a
, 
b
, 
c
, 
d
 ) \

66 
	`BYTES_TO_T_UINT_2
–
a
, 
b
 ), \

67 
	`BYTES_TO_T_UINT_2
–
c
, 
d
 )

	)

69 
	#BYTES_TO_T_UINT_8
–
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
 ) \

70 
	`BYTES_TO_T_UINT_2
–
a
, 
b
 ), \

71 
	`BYTES_TO_T_UINT_2
–
c
, 
d
 ), \

72 
	`BYTES_TO_T_UINT_2
–
e
, 
f
 ), \

73 
	`BYTES_TO_T_UINT_2
–
g
, 
h
 )

	)

75 #ñi‡
deföed
(
POLARSSL_HAVE_INT32
)

77 
	#BYTES_TO_T_UINT_4
–
a
, 
b
, 
c
, 
d
 ) \

78 –(
t_uöt
Ë
a
 << 0 ) | \

79 –(
t_uöt
Ë
b
 << 8 ) | \

80 –(
t_uöt
Ë
c
 << 16 ) | \

81 –(
t_uöt
Ë
d
 << 24 )

	)

83 
	#BYTES_TO_T_UINT_2
–
a
, 
b
 ) \

84 
	`BYTES_TO_T_UINT_4
–
a
, 
b
, 0, 0 )

	)

86 
	#BYTES_TO_T_UINT_8
–
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
 ) \

87 
	`BYTES_TO_T_UINT_4
–
a
, 
b
, 
c
, 
d
 ), \

88 
	`BYTES_TO_T_UINT_4
–
e
, 
f
, 
g
, 
h
 )

	)

92 
	#BYTES_TO_T_UINT_8
–
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
 ) \

93 –(
t_uöt
Ë
a
 << 0 ) | \

94 –(
t_uöt
Ë
b
 << 8 ) | \

95 –(
t_uöt
Ë
c
 << 16 ) | \

96 –(
t_uöt
Ë
d
 << 24 ) | \

97 –(
t_uöt
Ë
e
 << 32 ) | \

98 –(
t_uöt
Ë
f
 << 40 ) | \

99 –(
t_uöt
Ë
g
 << 48 ) | \

100 –(
t_uöt
Ë
h
 << 56 )

	)

102 
	#BYTES_TO_T_UINT_4
–
a
, 
b
, 
c
, 
d
 ) \

103 
	`BYTES_TO_T_UINT_8
–
a
, 
b
, 
c
, 
d
, 0, 0, 0, 0 )

	)

105 
	#BYTES_TO_T_UINT_2
–
a
, 
b
 ) \

106 
	`BYTES_TO_T_UINT_8
–
a
, 
b
, 0, 0, 0, 0, 0, 0 )

	)

118 #i‡
deföed
(
POLARSSL_ECP_DP_SECP192R1_ENABLED
)

119 c⁄° 
t_uöt
 
	g£˝192r1_p
[] = {

120 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

121 
BYTES_TO_T_UINT_8
( 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

122 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

124 c⁄° 
t_uöt
 
	g£˝192r1_b
[] = {

125 
BYTES_TO_T_UINT_8
( 0xB1, 0xB9, 0x46, 0xC1, 0xEC, 0xDE, 0xB8, 0xFE ),

126 
BYTES_TO_T_UINT_8
( 0x49, 0x30, 0x24, 0x72, 0xAB, 0xE9, 0xA7, 0x0F ),

127 
BYTES_TO_T_UINT_8
( 0xE7, 0x80, 0x9C, 0xE5, 0x19, 0x05, 0x21, 0x64 ),

129 c⁄° 
t_uöt
 
	g£˝192r1_gx
[] = {

130 
BYTES_TO_T_UINT_8
( 0x12, 0x10, 0xFF, 0x82, 0xFD, 0x0A, 0xFF, 0xF4 ),

131 
BYTES_TO_T_UINT_8
( 0x00, 0x88, 0xA1, 0x43, 0xEB, 0x20, 0xBF, 0x7C ),

132 
BYTES_TO_T_UINT_8
( 0xF6, 0x90, 0x30, 0xB0, 0x0E, 0xA8, 0x8D, 0x18 ),

134 c⁄° 
t_uöt
 
	g£˝192r1_gy
[] = {

135 
BYTES_TO_T_UINT_8
( 0x11, 0x48, 0x79, 0x1E, 0xA1, 0x77, 0xF9, 0x73 ),

136 
BYTES_TO_T_UINT_8
( 0xD5, 0xCD, 0x24, 0x6B, 0xED, 0x11, 0x10, 0x63 ),

137 
BYTES_TO_T_UINT_8
( 0x78, 0xDA, 0xC8, 0xFF, 0x95, 0x2B, 0x19, 0x07 ),

139 c⁄° 
t_uöt
 
	g£˝192r1_n
[] = {

140 
BYTES_TO_T_UINT_8
( 0x31, 0x28, 0xD2, 0xB4, 0xB1, 0xC9, 0x6B, 0x14 ),

141 
BYTES_TO_T_UINT_8
( 0x36, 0xF8, 0xDE, 0x99, 0xFF, 0xFF, 0xFF, 0xFF ),

142 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

149 #i‡
deföed
(
POLARSSL_ECP_DP_SECP224R1_ENABLED
)

150 c⁄° 
t_uöt
 
	g£˝224r1_p
[] = {

151 
BYTES_TO_T_UINT_8
( 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ),

152 
BYTES_TO_T_UINT_8
( 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF ),

153 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

154 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00 ),

156 c⁄° 
t_uöt
 
	g£˝224r1_b
[] = {

157 
BYTES_TO_T_UINT_8
( 0xB4, 0xFF, 0x55, 0x23, 0x43, 0x39, 0x0B, 0x27 ),

158 
BYTES_TO_T_UINT_8
( 0xBA, 0xD8, 0xBF, 0xD7, 0xB7, 0xB0, 0x44, 0x50 ),

159 
BYTES_TO_T_UINT_8
( 0x56, 0x32, 0x41, 0xF5, 0xAB, 0xB3, 0x04, 0x0C ),

160 
BYTES_TO_T_UINT_4
( 0x85, 0x0A, 0x05, 0xB4 ),

162 c⁄° 
t_uöt
 
	g£˝224r1_gx
[] = {

163 
BYTES_TO_T_UINT_8
( 0x21, 0x1D, 0x5C, 0x11, 0xD6, 0x80, 0x32, 0x34 ),

164 
BYTES_TO_T_UINT_8
( 0x22, 0x11, 0xC2, 0x56, 0xD3, 0xC1, 0x03, 0x4A ),

165 
BYTES_TO_T_UINT_8
( 0xB9, 0x90, 0x13, 0x32, 0x7F, 0xBF, 0xB4, 0x6B ),

166 
BYTES_TO_T_UINT_4
( 0xBD, 0x0C, 0x0E, 0xB7 ),

168 c⁄° 
t_uöt
 
	g£˝224r1_gy
[] = {

169 
BYTES_TO_T_UINT_8
( 0x34, 0x7E, 0x00, 0x85, 0x99, 0x81, 0xD5, 0x44 ),

170 
BYTES_TO_T_UINT_8
( 0x64, 0x47, 0x07, 0x5A, 0xA0, 0x75, 0x43, 0xCD ),

171 
BYTES_TO_T_UINT_8
( 0xE6, 0xDF, 0x22, 0x4C, 0xFB, 0x23, 0xF7, 0xB5 ),

172 
BYTES_TO_T_UINT_4
( 0x88, 0x63, 0x37, 0xBD ),

174 c⁄° 
t_uöt
 
	g£˝224r1_n
[] = {

175 
BYTES_TO_T_UINT_8
( 0x3D, 0x2A, 0x5C, 0x5C, 0x45, 0x29, 0xDD, 0x13 ),

176 
BYTES_TO_T_UINT_8
( 0x3E, 0xF0, 0xB8, 0xE0, 0xA2, 0x16, 0xFF, 0xFF ),

177 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

178 
BYTES_TO_T_UINT_4
( 0xFF, 0xFF, 0xFF, 0xFF ),

185 #i‡
deföed
(
POLARSSL_ECP_DP_SECP256R1_ENABLED
)

186 c⁄° 
t_uöt
 
	g£˝256r1_p
[] = {

187 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

188 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00 ),

189 
BYTES_TO_T_UINT_8
( 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ),

190 
BYTES_TO_T_UINT_8
( 0x01, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF ),

192 c⁄° 
t_uöt
 
	g£˝256r1_b
[] = {

193 
BYTES_TO_T_UINT_8
( 0x4B, 0x60, 0xD2, 0x27, 0x3E, 0x3C, 0xCE, 0x3B ),

194 
BYTES_TO_T_UINT_8
( 0xF6, 0xB0, 0x53, 0xCC, 0xB0, 0x06, 0x1D, 0x65 ),

195 
BYTES_TO_T_UINT_8
( 0xBC, 0x86, 0x98, 0x76, 0x55, 0xBD, 0xEB, 0xB3 ),

196 
BYTES_TO_T_UINT_8
( 0xE7, 0x93, 0x3A, 0xAA, 0xD8, 0x35, 0xC6, 0x5A ),

198 c⁄° 
t_uöt
 
	g£˝256r1_gx
[] = {

199 
BYTES_TO_T_UINT_8
( 0x96, 0xC2, 0x98, 0xD8, 0x45, 0x39, 0xA1, 0xF4 ),

200 
BYTES_TO_T_UINT_8
( 0xA0, 0x33, 0xEB, 0x2D, 0x81, 0x7D, 0x03, 0x77 ),

201 
BYTES_TO_T_UINT_8
( 0xF2, 0x40, 0xA4, 0x63, 0xE5, 0xE6, 0xBC, 0xF8 ),

202 
BYTES_TO_T_UINT_8
( 0x47, 0x42, 0x2C, 0xE1, 0xF2, 0xD1, 0x17, 0x6B ),

204 c⁄° 
t_uöt
 
	g£˝256r1_gy
[] = {

205 
BYTES_TO_T_UINT_8
( 0xF5, 0x51, 0xBF, 0x37, 0x68, 0x40, 0xB6, 0xCB ),

206 
BYTES_TO_T_UINT_8
( 0xCE, 0x5E, 0x31, 0x6B, 0x57, 0x33, 0xCE, 0x2B ),

207 
BYTES_TO_T_UINT_8
( 0x16, 0x9E, 0x0F, 0x7C, 0x4A, 0xEB, 0xE7, 0x8E ),

208 
BYTES_TO_T_UINT_8
( 0x9B, 0x7F, 0x1A, 0xFE, 0xE2, 0x42, 0xE3, 0x4F ),

210 c⁄° 
t_uöt
 
	g£˝256r1_n
[] = {

211 
BYTES_TO_T_UINT_8
( 0x51, 0x25, 0x63, 0xFC, 0xC2, 0xCA, 0xB9, 0xF3 ),

212 
BYTES_TO_T_UINT_8
( 0x84, 0x9E, 0x17, 0xA7, 0xAD, 0xFA, 0xE6, 0xBC ),

213 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

214 
BYTES_TO_T_UINT_8
( 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF ),

221 #i‡
deföed
(
POLARSSL_ECP_DP_SECP384R1_ENABLED
)

222 c⁄° 
t_uöt
 
	g£˝384r1_p
[] = {

223 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00 ),

224 
BYTES_TO_T_UINT_8
( 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF ),

225 
BYTES_TO_T_UINT_8
( 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

226 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

227 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

228 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

230 c⁄° 
t_uöt
 
	g£˝384r1_b
[] = {

231 
BYTES_TO_T_UINT_8
( 0xEF, 0x2A, 0xEC, 0xD3, 0xED, 0xC8, 0x85, 0x2A ),

232 
BYTES_TO_T_UINT_8
( 0x9D, 0xD1, 0x2E, 0x8A, 0x8D, 0x39, 0x56, 0xC6 ),

233 
BYTES_TO_T_UINT_8
( 0x5A, 0x87, 0x13, 0x50, 0x8F, 0x08, 0x14, 0x03 ),

234 
BYTES_TO_T_UINT_8
( 0x12, 0x41, 0x81, 0xFE, 0x6E, 0x9C, 0x1D, 0x18 ),

235 
BYTES_TO_T_UINT_8
( 0x19, 0x2D, 0xF8, 0xE3, 0x6B, 0x05, 0x8E, 0x98 ),

236 
BYTES_TO_T_UINT_8
( 0xE4, 0xE7, 0x3E, 0xE2, 0xA7, 0x2F, 0x31, 0xB3 ),

238 c⁄° 
t_uöt
 
	g£˝384r1_gx
[] = {

239 
BYTES_TO_T_UINT_8
( 0xB7, 0x0A, 0x76, 0x72, 0x38, 0x5E, 0x54, 0x3A ),

240 
BYTES_TO_T_UINT_8
( 0x6C, 0x29, 0x55, 0xBF, 0x5D, 0xF2, 0x02, 0x55 ),

241 
BYTES_TO_T_UINT_8
( 0x38, 0x2A, 0x54, 0x82, 0xE0, 0x41, 0xF7, 0x59 ),

242 
BYTES_TO_T_UINT_8
( 0x98, 0x9B, 0xA7, 0x8B, 0x62, 0x3B, 0x1D, 0x6E ),

243 
BYTES_TO_T_UINT_8
( 0x74, 0xAD, 0x20, 0xF3, 0x1E, 0xC7, 0xB1, 0x8E ),

244 
BYTES_TO_T_UINT_8
( 0x37, 0x05, 0x8B, 0xBE, 0x22, 0xCA, 0x87, 0xAA ),

246 c⁄° 
t_uöt
 
	g£˝384r1_gy
[] = {

247 
BYTES_TO_T_UINT_8
( 0x5F, 0x0E, 0xEA, 0x90, 0x7C, 0x1D, 0x43, 0x7A ),

248 
BYTES_TO_T_UINT_8
( 0x9D, 0x81, 0x7E, 0x1D, 0xCE, 0xB1, 0x60, 0x0A ),

249 
BYTES_TO_T_UINT_8
( 0xC0, 0xB8, 0xF0, 0xB5, 0x13, 0x31, 0xDA, 0xE9 ),

250 
BYTES_TO_T_UINT_8
( 0x7C, 0x14, 0x9A, 0x28, 0xBD, 0x1D, 0xF4, 0xF8 ),

251 
BYTES_TO_T_UINT_8
( 0x29, 0xDC, 0x92, 0x92, 0xBF, 0x98, 0x9E, 0x5D ),

252 
BYTES_TO_T_UINT_8
( 0x6F, 0x2C, 0x26, 0x96, 0x4A, 0xDE, 0x17, 0x36 ),

254 c⁄° 
t_uöt
 
	g£˝384r1_n
[] = {

255 
BYTES_TO_T_UINT_8
( 0x73, 0x29, 0xC5, 0xCC, 0x6A, 0x19, 0xEC, 0xEC ),

256 
BYTES_TO_T_UINT_8
( 0x7A, 0xA7, 0xB0, 0x48, 0xB2, 0x0D, 0x1A, 0x58 ),

257 
BYTES_TO_T_UINT_8
( 0xDF, 0x2D, 0x37, 0xF4, 0x81, 0x4D, 0x63, 0xC7 ),

258 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

259 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

260 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

267 #i‡
deföed
(
POLARSSL_ECP_DP_SECP521R1_ENABLED
)

268 c⁄° 
t_uöt
 
	g£˝521r1_p
[] = {

269 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

270 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

271 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

272 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

273 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

274 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

275 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

276 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

277 
BYTES_TO_T_UINT_2
( 0xFF, 0x01 ),

279 c⁄° 
t_uöt
 
	g£˝521r1_b
[] = {

280 
BYTES_TO_T_UINT_8
( 0x00, 0x3F, 0x50, 0x6B, 0xD4, 0x1F, 0x45, 0xEF ),

281 
BYTES_TO_T_UINT_8
( 0xF1, 0x34, 0x2C, 0x3D, 0x88, 0xDF, 0x73, 0x35 ),

282 
BYTES_TO_T_UINT_8
( 0x07, 0xBF, 0xB1, 0x3B, 0xBD, 0xC0, 0x52, 0x16 ),

283 
BYTES_TO_T_UINT_8
( 0x7B, 0x93, 0x7E, 0xEC, 0x51, 0x39, 0x19, 0x56 ),

284 
BYTES_TO_T_UINT_8
( 0xE1, 0x09, 0xF1, 0x8E, 0x91, 0x89, 0xB4, 0xB8 ),

285 
BYTES_TO_T_UINT_8
( 0xF3, 0x15, 0xB3, 0x99, 0x5B, 0x72, 0xDA, 0xA2 ),

286 
BYTES_TO_T_UINT_8
( 0xEE, 0x40, 0x85, 0xB6, 0xA0, 0x21, 0x9A, 0x92 ),

287 
BYTES_TO_T_UINT_8
( 0x1F, 0x9A, 0x1C, 0x8E, 0x61, 0xB9, 0x3E, 0x95 ),

288 
BYTES_TO_T_UINT_2
( 0x51, 0x00 ),

290 c⁄° 
t_uöt
 
	g£˝521r1_gx
[] = {

291 
BYTES_TO_T_UINT_8
( 0x66, 0xBD, 0xE5, 0xC2, 0x31, 0x7E, 0x7E, 0xF9 ),

292 
BYTES_TO_T_UINT_8
( 0x9B, 0x42, 0x6A, 0x85, 0xC1, 0xB3, 0x48, 0x33 ),

293 
BYTES_TO_T_UINT_8
( 0xDE, 0xA8, 0xFF, 0xA2, 0x27, 0xC1, 0x1D, 0xFE ),

294 
BYTES_TO_T_UINT_8
( 0x28, 0x59, 0xE7, 0xEF, 0x77, 0x5E, 0x4B, 0xA1 ),

295 
BYTES_TO_T_UINT_8
( 0xBA, 0x3D, 0x4D, 0x6B, 0x60, 0xAF, 0x28, 0xF8 ),

296 
BYTES_TO_T_UINT_8
( 0x21, 0xB5, 0x3F, 0x05, 0x39, 0x81, 0x64, 0x9C ),

297 
BYTES_TO_T_UINT_8
( 0x42, 0xB4, 0x95, 0x23, 0x66, 0xCB, 0x3E, 0x9E ),

298 
BYTES_TO_T_UINT_8
( 0xCD, 0xE9, 0x04, 0x04, 0xB7, 0x06, 0x8E, 0x85 ),

299 
BYTES_TO_T_UINT_2
( 0xC6, 0x00 ),

301 c⁄° 
t_uöt
 
	g£˝521r1_gy
[] = {

302 
BYTES_TO_T_UINT_8
( 0x50, 0x66, 0xD1, 0x9F, 0x76, 0x94, 0xBE, 0x88 ),

303 
BYTES_TO_T_UINT_8
( 0x40, 0xC2, 0x72, 0xA2, 0x86, 0x70, 0x3C, 0x35 ),

304 
BYTES_TO_T_UINT_8
( 0x61, 0x07, 0xAD, 0x3F, 0x01, 0xB9, 0x50, 0xC5 ),

305 
BYTES_TO_T_UINT_8
( 0x40, 0x26, 0xF4, 0x5E, 0x99, 0x72, 0xEE, 0x97 ),

306 
BYTES_TO_T_UINT_8
( 0x2C, 0x66, 0x3E, 0x27, 0x17, 0xBD, 0xAF, 0x17 ),

307 
BYTES_TO_T_UINT_8
( 0x68, 0x44, 0x9B, 0x57, 0x49, 0x44, 0xF5, 0x98 ),

308 
BYTES_TO_T_UINT_8
( 0xD9, 0x1B, 0x7D, 0x2C, 0xB4, 0x5F, 0x8A, 0x5C ),

309 
BYTES_TO_T_UINT_8
( 0x04, 0xC0, 0x3B, 0x9A, 0x78, 0x6A, 0x29, 0x39 ),

310 
BYTES_TO_T_UINT_2
( 0x18, 0x01 ),

312 c⁄° 
t_uöt
 
	g£˝521r1_n
[] = {

313 
BYTES_TO_T_UINT_8
( 0x09, 0x64, 0x38, 0x91, 0x1E, 0xB7, 0x6F, 0xBB ),

314 
BYTES_TO_T_UINT_8
( 0xAE, 0x47, 0x9C, 0x89, 0xB8, 0xC9, 0xB5, 0x3B ),

315 
BYTES_TO_T_UINT_8
( 0xD0, 0xA5, 0x09, 0xF7, 0x48, 0x01, 0xCC, 0x7F ),

316 
BYTES_TO_T_UINT_8
( 0x6B, 0x96, 0x2F, 0xBF, 0x83, 0x87, 0x86, 0x51 ),

317 
BYTES_TO_T_UINT_8
( 0xFA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

318 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

319 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

320 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

321 
BYTES_TO_T_UINT_2
( 0xFF, 0x01 ),

325 #i‡
deföed
(
POLARSSL_ECP_DP_SECP192K1_ENABLED
)

326 c⁄° 
t_uöt
 
	g£˝192k1_p
[] = {

327 
BYTES_TO_T_UINT_8
( 0x37, 0xEE, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF ),

328 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

329 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

331 c⁄° 
t_uöt
 
	g£˝192k1_a
[] = {

332 
BYTES_TO_T_UINT_2
( 0x00, 0x00 ),

334 c⁄° 
t_uöt
 
	g£˝192k1_b
[] = {

335 
BYTES_TO_T_UINT_2
( 0x03, 0x00 ),

337 c⁄° 
t_uöt
 
	g£˝192k1_gx
[] = {

338 
BYTES_TO_T_UINT_8
( 0x7D, 0x6C, 0xE0, 0xEA, 0xB1, 0xD1, 0xA5, 0x1D ),

339 
BYTES_TO_T_UINT_8
( 0x34, 0xF4, 0xB7, 0x80, 0x02, 0x7D, 0xB0, 0x26 ),

340 
BYTES_TO_T_UINT_8
( 0xAE, 0xE9, 0x57, 0xC0, 0x0E, 0xF1, 0x4F, 0xDB ),

342 c⁄° 
t_uöt
 
	g£˝192k1_gy
[] = {

343 
BYTES_TO_T_UINT_8
( 0x9D, 0x2F, 0x5E, 0xD9, 0x88, 0xAA, 0x82, 0x40 ),

344 
BYTES_TO_T_UINT_8
( 0x34, 0x86, 0xBE, 0x15, 0xD0, 0x63, 0x41, 0x84 ),

345 
BYTES_TO_T_UINT_8
( 0xA7, 0x28, 0x56, 0x9C, 0x6D, 0x2F, 0x2F, 0x9B ),

347 c⁄° 
t_uöt
 
	g£˝192k1_n
[] = {

348 
BYTES_TO_T_UINT_8
( 0x8D, 0xFD, 0xDE, 0x74, 0x6A, 0x46, 0x69, 0x0F ),

349 
BYTES_TO_T_UINT_8
( 0x17, 0xFC, 0xF2, 0x26, 0xFE, 0xFF, 0xFF, 0xFF ),

350 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

354 #i‡
deföed
(
POLARSSL_ECP_DP_SECP224K1_ENABLED
)

355 c⁄° 
t_uöt
 
	g£˝224k1_p
[] = {

356 
BYTES_TO_T_UINT_8
( 0x6D, 0xE5, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF ),

357 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

358 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

359 
BYTES_TO_T_UINT_4
( 0xFF, 0xFF, 0xFF, 0xFF ),

361 c⁄° 
t_uöt
 
	g£˝224k1_a
[] = {

362 
BYTES_TO_T_UINT_2
( 0x00, 0x00 ),

364 c⁄° 
t_uöt
 
	g£˝224k1_b
[] = {

365 
BYTES_TO_T_UINT_2
( 0x05, 0x00 ),

367 c⁄° 
t_uöt
 
	g£˝224k1_gx
[] = {

368 
BYTES_TO_T_UINT_8
( 0x5C, 0xA4, 0xB7, 0xB6, 0x0E, 0x65, 0x7E, 0x0F ),

369 
BYTES_TO_T_UINT_8
( 0xA9, 0x75, 0x70, 0xE4, 0xE9, 0x67, 0xA4, 0x69 ),

370 
BYTES_TO_T_UINT_8
( 0xA1, 0x28, 0xFC, 0x30, 0xDF, 0x99, 0xF0, 0x4D ),

371 
BYTES_TO_T_UINT_4
( 0x33, 0x5B, 0x45, 0xA1 ),

373 c⁄° 
t_uöt
 
	g£˝224k1_gy
[] = {

374 
BYTES_TO_T_UINT_8
( 0xA5, 0x61, 0x6D, 0x55, 0xDB, 0x4B, 0xCA, 0xE2 ),

375 
BYTES_TO_T_UINT_8
( 0x59, 0xBD, 0xB0, 0xC0, 0xF7, 0x19, 0xE3, 0xF7 ),

376 
BYTES_TO_T_UINT_8
( 0xD6, 0xFB, 0xCA, 0x82, 0x42, 0x34, 0xBA, 0x7F ),

377 
BYTES_TO_T_UINT_4
( 0xED, 0x9F, 0x08, 0x7E ),

379 c⁄° 
t_uöt
 
	g£˝224k1_n
[] = {

380 
BYTES_TO_T_UINT_8
( 0xF7, 0xB1, 0x9F, 0x76, 0x71, 0xA9, 0xF0, 0xCA ),

381 
BYTES_TO_T_UINT_8
( 0x84, 0x61, 0xEC, 0xD2, 0xE8, 0xDC, 0x01, 0x00 ),

382 
BYTES_TO_T_UINT_8
( 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ),

383 
BYTES_TO_T_UINT_8
( 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00 ),

387 #i‡
deföed
(
POLARSSL_ECP_DP_SECP256K1_ENABLED
)

388 c⁄° 
t_uöt
 
	g£˝256k1_p
[] = {

389 
BYTES_TO_T_UINT_8
( 0x2F, 0xFC, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF ),

390 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

391 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

392 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

394 c⁄° 
t_uöt
 
	g£˝256k1_a
[] = {

395 
BYTES_TO_T_UINT_2
( 0x00, 0x00 ),

397 c⁄° 
t_uöt
 
	g£˝256k1_b
[] = {

398 
BYTES_TO_T_UINT_2
( 0x07, 0x00 ),

400 c⁄° 
t_uöt
 
	g£˝256k1_gx
[] = {

401 
BYTES_TO_T_UINT_8
( 0x98, 0x17, 0xF8, 0x16, 0x5B, 0x81, 0xF2, 0x59 ),

402 
BYTES_TO_T_UINT_8
( 0xD9, 0x28, 0xCE, 0x2D, 0xDB, 0xFC, 0x9B, 0x02 ),

403 
BYTES_TO_T_UINT_8
( 0x07, 0x0B, 0x87, 0xCE, 0x95, 0x62, 0xA0, 0x55 ),

404 
BYTES_TO_T_UINT_8
( 0xAC, 0xBB, 0xDC, 0xF9, 0x7E, 0x66, 0xBE, 0x79 ),

406 c⁄° 
t_uöt
 
	g£˝256k1_gy
[] = {

407 
BYTES_TO_T_UINT_8
( 0xB8, 0xD4, 0x10, 0xFB, 0x8F, 0xD0, 0x47, 0x9C ),

408 
BYTES_TO_T_UINT_8
( 0x19, 0x54, 0x85, 0xA6, 0x48, 0xB4, 0x17, 0xFD ),

409 
BYTES_TO_T_UINT_8
( 0xA8, 0x08, 0x11, 0x0E, 0xFC, 0xFB, 0xA4, 0x5D ),

410 
BYTES_TO_T_UINT_8
( 0x65, 0xC4, 0xA3, 0x26, 0x77, 0xDA, 0x3A, 0x48 ),

412 c⁄° 
t_uöt
 
	g£˝256k1_n
[] = {

413 
BYTES_TO_T_UINT_8
( 0x41, 0x41, 0x36, 0xD0, 0x8C, 0x5E, 0xD2, 0xBF ),

414 
BYTES_TO_T_UINT_8
( 0x3B, 0xA0, 0x48, 0xAF, 0xE6, 0xDC, 0xAE, 0xBA ),

415 
BYTES_TO_T_UINT_8
( 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

416 
BYTES_TO_T_UINT_8
( 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF ),

423 #i‡
deföed
(
POLARSSL_ECP_DP_BP256R1_ENABLED
)

424 c⁄° 
t_uöt
 
	gbøöpoﬁP256r1_p
[] = {

425 
BYTES_TO_T_UINT_8
( 0x77, 0x53, 0x6E, 0x1F, 0x1D, 0x48, 0x13, 0x20 ),

426 
BYTES_TO_T_UINT_8
( 0x28, 0x20, 0x26, 0xD5, 0x23, 0xF6, 0x3B, 0x6E ),

427 
BYTES_TO_T_UINT_8
( 0x72, 0x8D, 0x83, 0x9D, 0x90, 0x0A, 0x66, 0x3E ),

428 
BYTES_TO_T_UINT_8
( 0xBC, 0xA9, 0xEE, 0xA1, 0xDB, 0x57, 0xFB, 0xA9 ),

430 c⁄° 
t_uöt
 
	gbøöpoﬁP256r1_a
[] = {

431 
BYTES_TO_T_UINT_8
( 0xD9, 0xB5, 0x30, 0xF3, 0x44, 0x4B, 0x4A, 0xE9 ),

432 
BYTES_TO_T_UINT_8
( 0x6C, 0x5C, 0xDC, 0x26, 0xC1, 0x55, 0x80, 0xFB ),

433 
BYTES_TO_T_UINT_8
( 0xE7, 0xFF, 0x7A, 0x41, 0x30, 0x75, 0xF6, 0xEE ),

434 
BYTES_TO_T_UINT_8
( 0x57, 0x30, 0x2C, 0xFC, 0x75, 0x09, 0x5A, 0x7D ),

436 c⁄° 
t_uöt
 
	gbøöpoﬁP256r1_b
[] = {

437 
BYTES_TO_T_UINT_8
( 0xB6, 0x07, 0x8C, 0xFF, 0x18, 0xDC, 0xCC, 0x6B ),

438 
BYTES_TO_T_UINT_8
( 0xCE, 0xE1, 0xF7, 0x5C, 0x29, 0x16, 0x84, 0x95 ),

439 
BYTES_TO_T_UINT_8
( 0xBF, 0x7C, 0xD7, 0xBB, 0xD9, 0xB5, 0x30, 0xF3 ),

440 
BYTES_TO_T_UINT_8
( 0x44, 0x4B, 0x4A, 0xE9, 0x6C, 0x5C, 0xDC, 0x26 ),

442 c⁄° 
t_uöt
 
	gbøöpoﬁP256r1_gx
[] = {

443 
BYTES_TO_T_UINT_8
( 0x62, 0x32, 0xCE, 0x9A, 0xBD, 0x53, 0x44, 0x3A ),

444 
BYTES_TO_T_UINT_8
( 0xC2, 0x23, 0xBD, 0xE3, 0xE1, 0x27, 0xDE, 0xB9 ),

445 
BYTES_TO_T_UINT_8
( 0xAF, 0xB7, 0x81, 0xFC, 0x2F, 0x48, 0x4B, 0x2C ),

446 
BYTES_TO_T_UINT_8
( 0xCB, 0x57, 0x7E, 0xCB, 0xB9, 0xAE, 0xD2, 0x8B ),

448 c⁄° 
t_uöt
 
	gbøöpoﬁP256r1_gy
[] = {

449 
BYTES_TO_T_UINT_8
( 0x97, 0x69, 0x04, 0x2F, 0xC7, 0x54, 0x1D, 0x5C ),

450 
BYTES_TO_T_UINT_8
( 0x54, 0x8E, 0xED, 0x2D, 0x13, 0x45, 0x77, 0xC2 ),

451 
BYTES_TO_T_UINT_8
( 0xC9, 0x1D, 0x61, 0x14, 0x1A, 0x46, 0xF8, 0x97 ),

452 
BYTES_TO_T_UINT_8
( 0xFD, 0xC4, 0xDA, 0xC3, 0x35, 0xF8, 0x7E, 0x54 ),

454 c⁄° 
t_uöt
 
	gbøöpoﬁP256r1_n
[] = {

455 
BYTES_TO_T_UINT_8
( 0xA7, 0x56, 0x48, 0x97, 0x82, 0x0E, 0x1E, 0x90 ),

456 
BYTES_TO_T_UINT_8
( 0xF7, 0xA6, 0x61, 0xB5, 0xA3, 0x7A, 0x39, 0x8C ),

457 
BYTES_TO_T_UINT_8
( 0x71, 0x8D, 0x83, 0x9D, 0x90, 0x0A, 0x66, 0x3E ),

458 
BYTES_TO_T_UINT_8
( 0xBC, 0xA9, 0xEE, 0xA1, 0xDB, 0x57, 0xFB, 0xA9 ),

465 #i‡
deföed
(
POLARSSL_ECP_DP_BP384R1_ENABLED
)

466 c⁄° 
t_uöt
 
	gbøöpoﬁP384r1_p
[] = {

467 
BYTES_TO_T_UINT_8
( 0x53, 0xEC, 0x07, 0x31, 0x13, 0x00, 0x47, 0x87 ),

468 
BYTES_TO_T_UINT_8
( 0x71, 0x1A, 0x1D, 0x90, 0x29, 0xA7, 0xD3, 0xAC ),

469 
BYTES_TO_T_UINT_8
( 0x23, 0x11, 0xB7, 0x7F, 0x19, 0xDA, 0xB1, 0x12 ),

470 
BYTES_TO_T_UINT_8
( 0xB4, 0x56, 0x54, 0xED, 0x09, 0x71, 0x2F, 0x15 ),

471 
BYTES_TO_T_UINT_8
( 0xDF, 0x41, 0xE6, 0x50, 0x7E, 0x6F, 0x5D, 0x0F ),

472 
BYTES_TO_T_UINT_8
( 0x28, 0x6D, 0x38, 0xA3, 0x82, 0x1E, 0xB9, 0x8C ),

474 c⁄° 
t_uöt
 
	gbøöpoﬁP384r1_a
[] = {

475 
BYTES_TO_T_UINT_8
( 0x26, 0x28, 0xCE, 0x22, 0xDD, 0xC7, 0xA8, 0x04 ),

476 
BYTES_TO_T_UINT_8
( 0xEB, 0xD4, 0x3A, 0x50, 0x4A, 0x81, 0xA5, 0x8A ),

477 
BYTES_TO_T_UINT_8
( 0x0F, 0xF9, 0x91, 0xBA, 0xEF, 0x65, 0x91, 0x13 ),

478 
BYTES_TO_T_UINT_8
( 0x87, 0x27, 0xB2, 0x4F, 0x8E, 0xA2, 0xBE, 0xC2 ),

479 
BYTES_TO_T_UINT_8
( 0xA0, 0xAF, 0x05, 0xCE, 0x0A, 0x08, 0x72, 0x3C ),

480 
BYTES_TO_T_UINT_8
( 0x0C, 0x15, 0x8C, 0x3D, 0xC6, 0x82, 0xC3, 0x7B ),

482 c⁄° 
t_uöt
 
	gbøöpoﬁP384r1_b
[] = {

483 
BYTES_TO_T_UINT_8
( 0x11, 0x4C, 0x50, 0xFA, 0x96, 0x86, 0xB7, 0x3A ),

484 
BYTES_TO_T_UINT_8
( 0x94, 0xC9, 0xDB, 0x95, 0x02, 0x39, 0xB4, 0x7C ),

485 
BYTES_TO_T_UINT_8
( 0xD5, 0x62, 0xEB, 0x3E, 0xA5, 0x0E, 0x88, 0x2E ),

486 
BYTES_TO_T_UINT_8
( 0xA6, 0xD2, 0xDC, 0x07, 0xE1, 0x7D, 0xB7, 0x2F ),

487 
BYTES_TO_T_UINT_8
( 0x7C, 0x44, 0xF0, 0x16, 0x54, 0xB5, 0x39, 0x8B ),

488 
BYTES_TO_T_UINT_8
( 0x26, 0x28, 0xCE, 0x22, 0xDD, 0xC7, 0xA8, 0x04 ),

490 c⁄° 
t_uöt
 
	gbøöpoﬁP384r1_gx
[] = {

491 
BYTES_TO_T_UINT_8
( 0x1E, 0xAF, 0xD4, 0x47, 0xE2, 0xB2, 0x87, 0xEF ),

492 
BYTES_TO_T_UINT_8
( 0xAA, 0x46, 0xD6, 0x36, 0x34, 0xE0, 0x26, 0xE8 ),

493 
BYTES_TO_T_UINT_8
( 0xE8, 0x10, 0xBD, 0x0C, 0xFE, 0xCA, 0x7F, 0xDB ),

494 
BYTES_TO_T_UINT_8
( 0xE3, 0x4F, 0xF1, 0x7E, 0xE7, 0xA3, 0x47, 0x88 ),

495 
BYTES_TO_T_UINT_8
( 0x6B, 0x3F, 0xC1, 0xB7, 0x81, 0x3A, 0xA6, 0xA2 ),

496 
BYTES_TO_T_UINT_8
( 0xFF, 0x45, 0xCF, 0x68, 0xF0, 0x64, 0x1C, 0x1D ),

498 c⁄° 
t_uöt
 
	gbøöpoﬁP384r1_gy
[] = {

499 
BYTES_TO_T_UINT_8
( 0x15, 0x53, 0x3C, 0x26, 0x41, 0x03, 0x82, 0x42 ),

500 
BYTES_TO_T_UINT_8
( 0x11, 0x81, 0x91, 0x77, 0x21, 0x46, 0x46, 0x0E ),

501 
BYTES_TO_T_UINT_8
( 0x28, 0x29, 0x91, 0xF9, 0x4F, 0x05, 0x9C, 0xE1 ),

502 
BYTES_TO_T_UINT_8
( 0x64, 0x58, 0xEC, 0xFE, 0x29, 0x0B, 0xB7, 0x62 ),

503 
BYTES_TO_T_UINT_8
( 0x52, 0xD5, 0xCF, 0x95, 0x8E, 0xEB, 0xB1, 0x5C ),

504 
BYTES_TO_T_UINT_8
( 0xA4, 0xC2, 0xF9, 0x20, 0x75, 0x1D, 0xBE, 0x8A ),

506 c⁄° 
t_uöt
 
	gbøöpoﬁP384r1_n
[] = {

507 
BYTES_TO_T_UINT_8
( 0x65, 0x65, 0x04, 0xE9, 0x02, 0x32, 0x88, 0x3B ),

508 
BYTES_TO_T_UINT_8
( 0x10, 0xC3, 0x7F, 0x6B, 0xAF, 0xB6, 0x3A, 0xCF ),

509 
BYTES_TO_T_UINT_8
( 0xA7, 0x25, 0x04, 0xAC, 0x6C, 0x6E, 0x16, 0x1F ),

510 
BYTES_TO_T_UINT_8
( 0xB3, 0x56, 0x54, 0xED, 0x09, 0x71, 0x2F, 0x15 ),

511 
BYTES_TO_T_UINT_8
( 0xDF, 0x41, 0xE6, 0x50, 0x7E, 0x6F, 0x5D, 0x0F ),

512 
BYTES_TO_T_UINT_8
( 0x28, 0x6D, 0x38, 0xA3, 0x82, 0x1E, 0xB9, 0x8C ),

519 #i‡
deföed
(
POLARSSL_ECP_DP_BP512R1_ENABLED
)

520 c⁄° 
t_uöt
 
	gbøöpoﬁP512r1_p
[] = {

521 
BYTES_TO_T_UINT_8
( 0xF3, 0x48, 0x3A, 0x58, 0x56, 0x60, 0xAA, 0x28 ),

522 
BYTES_TO_T_UINT_8
( 0x85, 0xC6, 0x82, 0x2D, 0x2F, 0xFF, 0x81, 0x28 ),

523 
BYTES_TO_T_UINT_8
( 0xE6, 0x80, 0xA3, 0xE6, 0x2A, 0xA1, 0xCD, 0xAE ),

524 
BYTES_TO_T_UINT_8
( 0x42, 0x68, 0xC6, 0x9B, 0x00, 0x9B, 0x4D, 0x7D ),

525 
BYTES_TO_T_UINT_8
( 0x71, 0x08, 0x33, 0x70, 0xCA, 0x9C, 0x63, 0xD6 ),

526 
BYTES_TO_T_UINT_8
( 0x0E, 0xD2, 0xC9, 0xB3, 0xB3, 0x8D, 0x30, 0xCB ),

527 
BYTES_TO_T_UINT_8
( 0x07, 0xFC, 0xC9, 0x33, 0xAE, 0xE6, 0xD4, 0x3F ),

528 
BYTES_TO_T_UINT_8
( 0x8B, 0xC4, 0xE9, 0xDB, 0xB8, 0x9D, 0xDD, 0xAA ),

530 c⁄° 
t_uöt
 
	gbøöpoﬁP512r1_a
[] = {

531 
BYTES_TO_T_UINT_8
( 0xCA, 0x94, 0xFC, 0x77, 0x4D, 0xAC, 0xC1, 0xE7 ),

532 
BYTES_TO_T_UINT_8
( 0xB9, 0xC7, 0xF2, 0x2B, 0xA7, 0x17, 0x11, 0x7F ),

533 
BYTES_TO_T_UINT_8
( 0xB5, 0xC8, 0x9A, 0x8B, 0xC9, 0xF1, 0x2E, 0x0A ),

534 
BYTES_TO_T_UINT_8
( 0xA1, 0x3A, 0x25, 0xA8, 0x5A, 0x5D, 0xED, 0x2D ),

535 
BYTES_TO_T_UINT_8
( 0xBC, 0x63, 0x98, 0xEA, 0xCA, 0x41, 0x34, 0xA8 ),

536 
BYTES_TO_T_UINT_8
( 0x10, 0x16, 0xF9, 0x3D, 0x8D, 0xDD, 0xCB, 0x94 ),

537 
BYTES_TO_T_UINT_8
( 0xC5, 0x4C, 0x23, 0xAC, 0x45, 0x71, 0x32, 0xE2 ),

538 
BYTES_TO_T_UINT_8
( 0x89, 0x3B, 0x60, 0x8B, 0x31, 0xA3, 0x30, 0x78 ),

540 c⁄° 
t_uöt
 
	gbøöpoﬁP512r1_b
[] = {

541 
BYTES_TO_T_UINT_8
( 0x23, 0xF7, 0x16, 0x80, 0x63, 0xBD, 0x09, 0x28 ),

542 
BYTES_TO_T_UINT_8
( 0xDD, 0xE5, 0xBA, 0x5E, 0xB7, 0x50, 0x40, 0x98 ),

543 
BYTES_TO_T_UINT_8
( 0x67, 0x3E, 0x08, 0xDC, 0xCA, 0x94, 0xFC, 0x77 ),

544 
BYTES_TO_T_UINT_8
( 0x4D, 0xAC, 0xC1, 0xE7, 0xB9, 0xC7, 0xF2, 0x2B ),

545 
BYTES_TO_T_UINT_8
( 0xA7, 0x17, 0x11, 0x7F, 0xB5, 0xC8, 0x9A, 0x8B ),

546 
BYTES_TO_T_UINT_8
( 0xC9, 0xF1, 0x2E, 0x0A, 0xA1, 0x3A, 0x25, 0xA8 ),

547 
BYTES_TO_T_UINT_8
( 0x5A, 0x5D, 0xED, 0x2D, 0xBC, 0x63, 0x98, 0xEA ),

548 
BYTES_TO_T_UINT_8
( 0xCA, 0x41, 0x34, 0xA8, 0x10, 0x16, 0xF9, 0x3D ),

550 c⁄° 
t_uöt
 
	gbøöpoﬁP512r1_gx
[] = {

551 
BYTES_TO_T_UINT_8
( 0x22, 0xF8, 0xB9, 0xBC, 0x09, 0x22, 0x35, 0x8B ),

552 
BYTES_TO_T_UINT_8
( 0x68, 0x5E, 0x6A, 0x40, 0x47, 0x50, 0x6D, 0x7C ),

553 
BYTES_TO_T_UINT_8
( 0x5F, 0x7D, 0xB9, 0x93, 0x7B, 0x68, 0xD1, 0x50 ),

554 
BYTES_TO_T_UINT_8
( 0x8D, 0xD4, 0xD0, 0xE2, 0x78, 0x1F, 0x3B, 0xFF ),

555 
BYTES_TO_T_UINT_8
( 0x8E, 0x09, 0xD0, 0xF4, 0xEE, 0x62, 0x3B, 0xB4 ),

556 
BYTES_TO_T_UINT_8
( 0xC1, 0x16, 0xD9, 0xB5, 0x70, 0x9F, 0xED, 0x85 ),

557 
BYTES_TO_T_UINT_8
( 0x93, 0x6A, 0x4C, 0x9C, 0x2E, 0x32, 0x21, 0x5A ),

558 
BYTES_TO_T_UINT_8
( 0x64, 0xD9, 0x2E, 0xD8, 0xBD, 0xE4, 0xAE, 0x81 ),

560 c⁄° 
t_uöt
 
	gbøöpoﬁP512r1_gy
[] = {

561 
BYTES_TO_T_UINT_8
( 0x92, 0x08, 0xD8, 0x3A, 0x0F, 0x1E, 0xCD, 0x78 ),

562 
BYTES_TO_T_UINT_8
( 0x06, 0x54, 0xF0, 0xA8, 0x2F, 0x2B, 0xCA, 0xD1 ),

563 
BYTES_TO_T_UINT_8
( 0xAE, 0x63, 0x27, 0x8A, 0xD8, 0x4B, 0xCA, 0x5B ),

564 
BYTES_TO_T_UINT_8
( 0x5E, 0x48, 0x5F, 0x4A, 0x49, 0xDE, 0xDC, 0xB2 ),

565 
BYTES_TO_T_UINT_8
( 0x11, 0x81, 0x1F, 0x88, 0x5B, 0xC5, 0x00, 0xA0 ),

566 
BYTES_TO_T_UINT_8
( 0x1A, 0x7B, 0xA5, 0x24, 0x00, 0xF7, 0x09, 0xF2 ),

567 
BYTES_TO_T_UINT_8
( 0xFD, 0x22, 0x78, 0xCF, 0xA9, 0xBF, 0xEA, 0xC0 ),

568 
BYTES_TO_T_UINT_8
( 0xEC, 0x32, 0x63, 0x56, 0x5D, 0x38, 0xDE, 0x7D ),

570 c⁄° 
t_uöt
 
	gbøöpoﬁP512r1_n
[] = {

571 
BYTES_TO_T_UINT_8
( 0x69, 0x00, 0xA9, 0x9C, 0x82, 0x96, 0x87, 0xB5 ),

572 
BYTES_TO_T_UINT_8
( 0xDD, 0xDA, 0x5D, 0x08, 0x81, 0xD3, 0xB1, 0x1D ),

573 
BYTES_TO_T_UINT_8
( 0x47, 0x10, 0xAC, 0x7F, 0x19, 0x61, 0x86, 0x41 ),

574 
BYTES_TO_T_UINT_8
( 0x19, 0x26, 0xA9, 0x4C, 0x41, 0x5C, 0x3E, 0x55 ),

575 
BYTES_TO_T_UINT_8
( 0x70, 0x08, 0x33, 0x70, 0xCA, 0x9C, 0x63, 0xD6 ),

576 
BYTES_TO_T_UINT_8
( 0x0E, 0xD2, 0xC9, 0xB3, 0xB3, 0x8D, 0x30, 0xCB ),

577 
BYTES_TO_T_UINT_8
( 0x07, 0xFC, 0xC9, 0x33, 0xAE, 0xE6, 0xD4, 0x3F ),

578 
BYTES_TO_T_UINT_8
( 0x8B, 0xC4, 0xE9, 0xDB, 0xB8, 0x9D, 0xDD, 0xAA ),

586 
ölöe
 
	$e˝_mpi_lﬂd
–
mpi
 *
X
, c⁄° 
t_uöt
 *
p
, 
size_t
 
Àn
 )

588 
X
->
s
 = 1;

589 
X
->
n
 = 
Àn
 / –
t_uöt
 );

590 
X
->
p
 = (
t_uöt
 *)Ö;

591 
	}
}

596 
ölöe
 
	$e˝_mpi_£t1
–
mpi
 *
X
 )

598 
t_uöt
 
⁄e
[] = { 1 };

599 
X
->
s
 = 1;

600 
X
->
n
 = 1;

601 
X
->
p
 = 
⁄e
;

602 
	}
}

607 
	$e˝_group_lﬂd
–
e˝_group
 *
gΩ
,

608 c⁄° 
t_uöt
 *
p
, 
size_t
 
∂í
,

609 c⁄° 
t_uöt
 *
a
, 
size_t
 
Æí
,

610 c⁄° 
t_uöt
 *
b
, 
size_t
 
bÀn
,

611 c⁄° 
t_uöt
 *
gx
, 
size_t
 
gxÀn
,

612 c⁄° 
t_uöt
 *
gy
, 
size_t
 
gyÀn
,

613 c⁄° 
t_uöt
 *
n
, 
size_t
 
∆í
)

615 
	`e˝_mpi_lﬂd
–&
gΩ
->
P
, 
p
, 
∂í
 );

616 if–
a
 !
NULL
 )

617 
	`e˝_mpi_lﬂd
–&
gΩ
->
A
, 
a
, 
Æí
 );

618 
	`e˝_mpi_lﬂd
–&
gΩ
->
B
, 
b
, 
bÀn
 );

619 
	`e˝_mpi_lﬂd
–&
gΩ
->
N
, 
n
, 
∆í
 );

621 
	`e˝_mpi_lﬂd
–&
gΩ
->
G
.
X
, 
gx
, 
gxÀn
 );

622 
	`e˝_mpi_lﬂd
–&
gΩ
->
G
.
Y
, 
gy
, 
gyÀn
 );

623 
	`e˝_mpi_£t1
–&
gΩ
->
G
.
Z
 );

625 
gΩ
->
pbôs
 = 
	`mpi_msb
–&gΩ->
P
 );

626 
gΩ
->
nbôs
 = 
	`mpi_msb
–&gΩ->
N
 );

628 
gΩ
->
h
 = 1;

631 
	}
}

633 #i‡
deföed
(
POLARSSL_ECP_NIST_OPTIM
)

635 #i‡
deföed
(
POLARSSL_ECP_DP_SECP192R1_ENABLED
)

636 
e˝_mod_p192
–
mpi
 * );

638 #i‡
deföed
(
POLARSSL_ECP_DP_SECP224R1_ENABLED
)

639 
e˝_mod_p224
–
mpi
 * );

641 #i‡
deföed
(
POLARSSL_ECP_DP_SECP256R1_ENABLED
)

642 
e˝_mod_p256
–
mpi
 * );

644 #i‡
deföed
(
POLARSSL_ECP_DP_SECP384R1_ENABLED
)

645 
e˝_mod_p384
–
mpi
 * );

647 #i‡
deföed
(
POLARSSL_ECP_DP_SECP521R1_ENABLED
)

648 
e˝_mod_p521
–
mpi
 * );

651 
	#NIST_MODP
–
P
 ) 
gΩ
->
modp
 = 
e˝_mod_
 ## P;

	)

653 
	#NIST_MODP
–
P
 )

	)

657 #i‡
deföed
(
POLARSSL_ECP_DP_M255_ENABLED
)

658 
e˝_mod_p255
–
mpi
 * );

660 #i‡
deföed
(
POLARSSL_ECP_DP_SECP192K1_ENABLED
)

661 
e˝_mod_p192k1
–
mpi
 * );

663 #i‡
deföed
(
POLARSSL_ECP_DP_SECP224K1_ENABLED
)

664 
e˝_mod_p224k1
–
mpi
 * );

666 #i‡
deföed
(
POLARSSL_ECP_DP_SECP256K1_ENABLED
)

667 
e˝_mod_p256k1
–
mpi
 * );

670 
	#LOAD_GROUP_A
–
G
 ) 
	`e˝_group_lﬂd
–
gΩ
, \

671 
G
 ## 
_p
, ( G ## _p ), \

672 
G
 ## 
_a
, ( G ## _a ), \

673 
G
 ## 
_b
, ( G ## _b ), \

674 
G
 ## 
_gx
, ( G ## _gx ), \

675 
G
 ## 
_gy
, ( G ## _gy ), \

676 
G
 ## 
_n
, –G ## _¿Ë)

	)

678 
	#LOAD_GROUP
–
G
 ) 
	`e˝_group_lﬂd
–
gΩ
, \

679 
G
 ## 
_p
, ( G ## _p ), \

680 
NULL
, 0, \

681 
G
 ## 
_b
, ( G ## _b ), \

682 
G
 ## 
_gx
, ( G ## _gx ), \

683 
G
 ## 
_gy
, ( G ## _gy ), \

684 
G
 ## 
_n
, –G ## _¿Ë)

	)

686 #i‡
deföed
(
POLARSSL_ECP_DP_M255_ENABLED
)

690 
	$e˝_u£_curve25519
–
e˝_group
 *
gΩ
 )

692 
ªt
;

695 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
gΩ
->
A
, 16, "01DB42" ) );

698 
	`MPI_CHK
–
	`mpi_l£t
–&
gΩ
->
P
, 1 ) );

699 
	`MPI_CHK
–
	`mpi_shi·_l
–&
gΩ
->
P
, 255 ) );

700 
	`MPI_CHK
–
	`mpi_sub_öt
–&
gΩ
->
P
, &grp->P, 19 ) );

701 
gΩ
->
pbôs
 = 
	`mpi_msb
–&gΩ->
P
 );

705 
	`MPI_CHK
–
	`mpi_l£t
–&
gΩ
->
G
.
X
, 9 ) );

706 
	`MPI_CHK
–
	`mpi_l£t
–&
gΩ
->
G
.
Z
, 1 ) );

707 
	`mpi_‰ì
–&
gΩ
->
G
.
Y
 );

710 
gΩ
->
nbôs
 = 254;

712 
˛ónup
:

713 if–
ªt
 != 0 )

714 
	`e˝_group_‰ì
–
gΩ
 );

716 –
ªt
 );

717 
	}
}

723 
	$e˝_u£_known_dp
–
e˝_group
 *
gΩ
, 
e˝_group_id
 
id
 )

725 
	`e˝_group_‰ì
–
gΩ
 );

727 
gΩ
->
id
 = id;

729  
id
 )

731 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP192R1_ENABLED
)

732 
POLARSSL_ECP_DP_SECP192R1
:

733 
	`NIST_MODP
–
p192
 );

734 –
	`LOAD_GROUP
–
£˝192r1
 ) );

737 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP224R1_ENABLED
)

738 
POLARSSL_ECP_DP_SECP224R1
:

739 
	`NIST_MODP
–
p224
 );

740 –
	`LOAD_GROUP
–
£˝224r1
 ) );

743 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP256R1_ENABLED
)

744 
POLARSSL_ECP_DP_SECP256R1
:

745 
	`NIST_MODP
–
p256
 );

746 –
	`LOAD_GROUP
–
£˝256r1
 ) );

749 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP384R1_ENABLED
)

750 
POLARSSL_ECP_DP_SECP384R1
:

751 
	`NIST_MODP
–
p384
 );

752 –
	`LOAD_GROUP
–
£˝384r1
 ) );

755 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP521R1_ENABLED
)

756 
POLARSSL_ECP_DP_SECP521R1
:

757 
	`NIST_MODP
–
p521
 );

758 –
	`LOAD_GROUP
–
£˝521r1
 ) );

761 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP192K1_ENABLED
)

762 
POLARSSL_ECP_DP_SECP192K1
:

763 
gΩ
->
modp
 = 
e˝_mod_p192k1
;

764 –
	`LOAD_GROUP_A
–
£˝192k1
 ) );

767 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP224K1_ENABLED
)

768 
POLARSSL_ECP_DP_SECP224K1
:

769 
gΩ
->
modp
 = 
e˝_mod_p224k1
;

770 –
	`LOAD_GROUP_A
–
£˝224k1
 ) );

773 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP256K1_ENABLED
)

774 
POLARSSL_ECP_DP_SECP256K1
:

775 
gΩ
->
modp
 = 
e˝_mod_p256k1
;

776 –
	`LOAD_GROUP_A
–
£˝256k1
 ) );

779 #i‡
	`deföed
(
POLARSSL_ECP_DP_BP256R1_ENABLED
)

780 
POLARSSL_ECP_DP_BP256R1
:

781 –
	`LOAD_GROUP_A
–
bøöpoﬁP256r1
 ) );

784 #i‡
	`deföed
(
POLARSSL_ECP_DP_BP384R1_ENABLED
)

785 
POLARSSL_ECP_DP_BP384R1
:

786 –
	`LOAD_GROUP_A
–
bøöpoﬁP384r1
 ) );

789 #i‡
	`deföed
(
POLARSSL_ECP_DP_BP512R1_ENABLED
)

790 
POLARSSL_ECP_DP_BP512R1
:

791 –
	`LOAD_GROUP_A
–
bøöpoﬁP512r1
 ) );

794 #i‡
	`deföed
(
POLARSSL_ECP_DP_M255_ENABLED
)

795 
POLARSSL_ECP_DP_M255
:

796 
gΩ
->
modp
 = 
e˝_mod_p255
;

797 –
	`e˝_u£_curve25519
–
gΩ
 ) );

801 
	`e˝_group_‰ì
–
gΩ
 );

802 –
POLARSSL_ERR_ECP_FEATURE_UNAVAILABLE
 );

804 
	}
}

806 #i‡
deföed
(
POLARSSL_ECP_NIST_OPTIM
)

817 #i‡
deföed
(
POLARSSL_ECP_DP_SECP192R1_ENABLED
)

831 
ölöe
 
	$add64
–
t_uöt
 *
d°
,Å_uöà*
§c
,Å_uöà*
ˇºy
 )

833 
i
;

834 
t_uöt
 
c
 = 0;

835  
i
 = 0; i < 8 / –
t_uöt
 ); i++, 
d°
++, 
§c
++ )

837 *
d°
 +
c
; c = ( *dst < c );

838 *
d°
 +*
§c
; 
c
 += ( *dst < *src );

840 *
ˇºy
 +
c
;

841 
	}
}

844 
ölöe
 
	$ˇºy64
–
t_uöt
 *
d°
,Å_uöà*
ˇºy
 )

846 
i
;

847  
i
 = 0; i < 8 / –
t_uöt
 ); i++, 
d°
++ )

849 *
d°
 +*
ˇºy
;

850 *
ˇºy
 = ( *
d°
 < *carry );

852 
	}
}

854 
	#WIDTH
 8 / –
t_uöt
 )

	)

855 
	#A
–
i
 ) 
N
->
p
 + i * 
WIDTH


	)

856 
	#ADD
–
i
 ) 
	`add64
–
p
, 
	`A
–ò), &
c
 )

	)

857 
	#NEXT
 
p
 +
WIDTH
; 
	`ˇºy64
–p, &
c
 )

	)

858 
	#LAST
 
p
 +
WIDTH
; *∞
c
;  ++∞< 
íd
 ) *∞0

	)

863 
	$e˝_mod_p192
–
mpi
 *
N
 )

865 
ªt
;

866 
t_uöt
 
c
 = 0;

867 
t_uöt
 *
p
, *
íd
;

870 
	`MPI_CHK
–
	`mpi_grow
–
N
, 6 * 
WIDTH
 ) );

872 
p
 = 
N
->p;

873 
íd
 = 
p
 + 
N
->
n
;

875 
	`ADD
–3 ); ADD–5 ); 
NEXT
;

876 
	`ADD
–3 ); ADD–4 ); ADD–5 ); 
NEXT
;

877 
	`ADD
–4 ); ADD–5 ); 
LAST
;

879 
˛ónup
:

880 –
ªt
 );

881 
	}
}

883 #unde‡
WIDTH


884 #unde‡
A


885 #unde‡
ADD


886 #unde‡
NEXT


887 #unde‡
LAST


890 #i‡
deföed
(
POLARSSL_ECP_DP_SECP224R1_ENABLED
) || \

891 
deföed
(
POLARSSL_ECP_DP_SECP256R1_ENABLED
) || \

892 
	$deföed
(
POLARSSL_ECP_DP_SECP384R1_ENABLED
)

909 
	#LOAD32
 
cur
 = 
	`A
–
i
 );

	)

911 #i‡
	`deföed
(
POLARSSL_HAVE_INT8
)

913 
	#MAX32
 
N
->
n
 / 4

	)

914 
	#A
–
j
 ) (
uöt32_t
)–
N
->
p
[4*j+0] ) | \

915 –
N
->
p
[4*
j
+1] << 8 ) | \

916 –
N
->
p
[4*
j
+2] << 16 ) | \

917 –
N
->
p
[4*
j
+3] << 24 )

	)

918 
	#STORE32
 
N
->
p
[4*
i
+0] = (
t_uöt
)–
cur
 ); \

919 
N
->
p
[4*
i
+1] = (
t_uöt
)–
cur
 >> 8 ); \

920 
N
->
p
[4*
i
+2] = (
t_uöt
)–
cur
 >> 16 ); \

921 
N
->
p
[4*
i
+3] = (
t_uöt
)–
cur
 >> 24 );

	)

923 #ñi‡
	`deföed
(
POLARSSL_HAVE_INT16
)

925 
	#MAX32
 
N
->
n
 / 2

	)

926 
	#A
–
j
 ) (
uöt32_t
)–
N
->
p
[2*j] ) | ( N->p[2*j+1] << 16 )

	)

927 
	#STORE32
 
N
->
p
[2*
i
+0] = (
t_uöt
)–
cur
 ); \

928 
N
->
p
[2*
i
+1] = (
t_uöt
)–
cur
 >> 16 );

	)

930 #ñi‡
	`deföed
(
POLARSSL_HAVE_INT32
)

932 
	#MAX32
 
N
->
n


	)

933 
	#A
–
j
 ) 
N
->
p
[j]

	)

934 
	#STORE32
 
N
->
p
[
i
] = 
cur
;

	)

938 
	#MAX32
 
N
->
n
 * 2

	)

939 
	#A
–
j
 ) j % 2 ? (
uöt32_t
)–
N
->
p
[j/2] >> 32 ) : (uöt32_t)–N->p[j/2] )

	)

940 
	#STORE32
 \

941 if–
i
 % 2 ) { \

942 
N
->
p
[
i
/2] &= 0x00000000FFFFFFFF; \

943 
N
->
p
[
i
/2] |((
t_uöt
Ë
cur
) << 32; \

944 
	}
} { \

945 
N
->
p
[
i
/2] &= 0xFFFFFFFF00000000; \

946 
N
->
p
[
i
/2] |(
t_uöt
Ë
cur
; \

947 }

	)

954 
ölöe
 
	$add32
–
uöt32_t
 *
d°
, uöt32_à
§c
, sig√d *
ˇºy
 )

956 *
d°
 +
§c
;

957 *
ˇºy
 +–*
d°
 < 
§c
 );

958 
	}
}

960 
ölöe
 
	$sub32
–
uöt32_t
 *
d°
, uöt32_à
§c
, sig√d *
ˇºy
 )

962 *
ˇºy
 -–*
d°
 < 
§c
 );

963 *
d°
 -
§c
;

964 
	}
}

966 
	#ADD
–
j
 ) 
	`add32
–&
cur
, 
	`A
–j ), &
c
 );

	)

967 
	#SUB
–
j
 ) 
	`sub32
–&
cur
, 
	`A
–j ), &
c
 );

	)

973 
	#INIT
–
b
 ) \

974 
ªt
; \

975 sig√d 
c
 = 0, 
cc
; \

976 
uöt32_t
 
cur
; \

977 
size_t
 
i
 = 0, 
bôs
 = 
b
; \

978 
mpi
 
C
; \

979 
t_uöt
 
Cp
[ 
b
 / 8 / (Å_uint) + 1 ]; \

981 
C
.
s
 = 1; \

982 
C
.
n
 = 
b
 / 8 / –
t_uöt
) + 1; \

983 
C
.
p
 = 
Cp
; \

984 
	`mem£t
–
Cp
, 0, 
C
.
n
 * –
t_uöt
 ) ); \

986 
	`MPI_CHK
–
	`mpi_grow
–
N
, 
b
 * 2 / 8 / –
t_uöt
 ) ) ); \

987 
LOAD32
;

	)

989 
	#NEXT
 \

990 
STORE32
; 
i
++; 
LOAD32
; \

991 
cc
 = 
c
; c = 0; \

992 if–
cc
 < 0 ) \

993 
	`sub32
–&
cur
, -
cc
, &
c
 ); \

995 
	`add32
–&
cur
, 
cc
, &
c
 ); \

996 

	)

997 
	#LAST
 \

998 
STORE32
; 
i
++; \

999 
cur
 = 
c
 > 0 ? c : 0; 
STORE32
; \

1000 
cur
 = 0;  ++
i
 < 
MAX32
 ) { 
STORE32
; } \

1001 if–
c
 < 0 ) 
	`fix_√g©ive
–
N
, c, &
C
, 
bôs
 );

	)

1007 
ölöe
 
	$fix_√g©ive
–
mpi
 *
N
, sig√d 
c
, mpò*
C
, 
size_t
 
bôs
 )

1009 
ªt
;

1012 #i‡!
	`deföed
(
POLARSSL_HAVE_INT64
)

1013 ((Ë
bôs
);

1015 if–
bôs
 == 224 )

1016 
C
->
p
[ C->
n
 - 1 ] = ((
t_uöt
Ë-
c
) << 32;

1019 
C
->
p
[ C->
n
 - 1 ] = (
t_uöt
Ë-
c
;

1022 
	`MPI_CHK
–
	`mpi_sub_abs
–
N
, 
C
, N ) );

1023 
N
->
s
 = -1;

1025 
˛ónup
:

1027 –
ªt
 );

1028 
	}
}

1030 #i‡
deföed
(
POLARSSL_ECP_DP_SECP224R1_ENABLED
)

1034 
	$e˝_mod_p224
–
mpi
 *
N
 )

1036 
	`INIT
( 224 );

1038 
	`SUB
–7 ); SUB–11 ); 
NEXT
;

1039 
	`SUB
–8 ); SUB–12 ); 
NEXT
;

1040 
	`SUB
–9 ); SUB–13 ); 
NEXT
;

1041 
	`SUB
–10 ); 
	`ADD
–7 ); ADD–11 ); 
NEXT
;

1042 
	`SUB
–11 ); 
	`ADD
–8 ); ADD–12 ); 
NEXT
;

1043 
	`SUB
–12 ); 
	`ADD
–9 ); ADD–13 ); 
NEXT
;

1044 
	`SUB
–13 ); 
	`ADD
–10 ); 
LAST
;

1046 
˛ónup
:

1047 –
ªt
 );

1048 
	}
}

1051 #i‡
deföed
(
POLARSSL_ECP_DP_SECP256R1_ENABLED
)

1055 
	$e˝_mod_p256
–
mpi
 *
N
 )

1057 
	`INIT
( 256 );

1059 
	`ADD
( 8 ); ADD( 9 );

1060 
	`SUB
–11 ); SUB–12 ); SUB–13 ); SUB–14 ); 
NEXT
;

1062 
	`ADD
( 9 ); ADD( 10 );

1063 
	`SUB
–12 ); SUB–13 ); SUB–14 ); SUB–15 ); 
NEXT
;

1065 
	`ADD
( 10 ); ADD( 11 );

1066 
	`SUB
–13 ); SUB–14 ); SUB–15 ); 
NEXT
;

1068 
	`ADD
( 11 ); ADD( 11 ); ADD( 12 ); ADD( 12 ); ADD( 13 );

1069 
	`SUB
–15 ); SUB–8 ); SUB–9 ); 
NEXT
;

1071 
	`ADD
( 12 ); ADD( 12 ); ADD( 13 ); ADD( 13 ); ADD( 14 );

1072 
	`SUB
–9 ); SUB–10 ); 
NEXT
;

1074 
	`ADD
( 13 ); ADD( 13 ); ADD( 14 ); ADD( 14 ); ADD( 15 );

1075 
	`SUB
–10 ); SUB–11 ); 
NEXT
;

1077 
	`ADD
( 14 ); ADD( 14 ); ADD( 15 ); ADD( 15 ); ADD( 14 ); ADD( 13 );

1078 
	`SUB
–8 ); SUB–9 ); 
NEXT
;

1080 
	`ADD
( 15 ); ADD( 15 ); ADD( 15 ); ADD( 8 );

1081 
	`SUB
–10 ); SUB–11 ); SUB–12 ); SUB–13 ); 
LAST
;

1083 
˛ónup
:

1084 –
ªt
 );

1085 
	}
}

1088 #i‡
deföed
(
POLARSSL_ECP_DP_SECP384R1_ENABLED
)

1092 
	$e˝_mod_p384
–
mpi
 *
N
 )

1094 
	`INIT
( 384 );

1096 
	`ADD
( 12 ); ADD( 21 ); ADD( 20 );

1097 
	`SUB
–23 ); 
NEXT
;

1099 
	`ADD
( 13 ); ADD( 22 ); ADD( 23 );

1100 
	`SUB
–12 ); SUB–20 ); 
NEXT
;

1102 
	`ADD
( 14 ); ADD( 23 );

1103 
	`SUB
–13 ); SUB–21 ); 
NEXT
;

1105 
	`ADD
( 15 ); ADD( 12 ); ADD( 20 ); ADD( 21 );

1106 
	`SUB
–14 ); SUB–22 ); SUB–23 ); 
NEXT
;

1108 
	`ADD
( 21 ); ADD( 21 ); ADD( 16 ); ADD( 13 ); ADD( 12 ); ADD( 20 ); ADD( 22 );

1109 
	`SUB
–15 ); SUB–23 ); SUB–23 ); 
NEXT
;

1111 
	`ADD
( 22 ); ADD( 22 ); ADD( 17 ); ADD( 14 ); ADD( 13 ); ADD( 21 ); ADD( 23 );

1112 
	`SUB
–16 ); 
NEXT
;

1114 
	`ADD
( 23 ); ADD( 23 ); ADD( 18 ); ADD( 15 ); ADD( 14 ); ADD( 22 );

1115 
	`SUB
–17 ); 
NEXT
;

1117 
	`ADD
( 19 ); ADD( 16 ); ADD( 15 ); ADD( 23 );

1118 
	`SUB
–18 ); 
NEXT
;

1120 
	`ADD
( 20 ); ADD( 17 ); ADD( 16 );

1121 
	`SUB
–19 ); 
NEXT
;

1123 
	`ADD
( 21 ); ADD( 18 ); ADD( 17 );

1124 
	`SUB
–20 ); 
NEXT
;

1126 
	`ADD
( 22 ); ADD( 19 ); ADD( 18 );

1127 
	`SUB
–21 ); 
NEXT
;

1129 
	`ADD
( 23 ); ADD( 20 ); ADD( 19 );

1130 
	`SUB
–22 ); 
LAST
;

1132 
˛ónup
:

1133 –
ªt
 );

1134 
	}
}

1137 #unde‡
A


1138 #unde‡
LOAD32


1139 #unde‡
STORE32


1140 #unde‡
MAX32


1141 #unde‡
INIT


1142 #unde‡
NEXT


1143 #unde‡
LAST


1146 
	gPOLARSSL_ECP_DP_SECP256R1_ENABLED
 ||

1147 
	gPOLARSSL_ECP_DP_SECP384R1_ENABLED
 */

1149 #i‡
deföed
(
POLARSSL_ECP_DP_SECP521R1_ENABLED
)

1156 
	#P521_WIDTH
 ( 521 / 8 / –
t_uöt
 ) + 1 )

	)

1159 #i‡
deföed
(
POLARSSL_HAVE_INT8
)

1160 
	#P521_MASK
 0x01

	)

1162 
	#P521_MASK
 0x01FF

	)

1169 
	$e˝_mod_p521
–
mpi
 *
N
 )

1171 
ªt
;

1172 
size_t
 
i
;

1173 
mpi
 
M
;

1174 
t_uöt
 
Mp
[
P521_WIDTH
 + 1];

1179 if–
N
->
n
 < 
P521_WIDTH
 )

1183 
M
.
s
 = 1;

1184 
M
.
n
 = 
N
->¿- ( 
P521_WIDTH
 - 1 );

1185 if–
M
.
n
 > 
P521_WIDTH
 + 1 )

1186 
M
.
n
 = 
P521_WIDTH
 + 1;

1187 
M
.
p
 = 
Mp
;

1188 
	`mem˝y
–
Mp
, 
N
->
p
 + 
P521_WIDTH
 - 1, 
M
.
n
 * –
t_uöt
 ) );

1189 
	`MPI_CHK
–
	`mpi_shi·_r
–&
M
, 521 % ( 8 * –
t_uöt
 ) ) ) );

1192 
N
->
p
[
P521_WIDTH
 - 1] &
P521_MASK
;

1193  
i
 = 
P521_WIDTH
; i < 
N
->
n
; i++ )

1194 
N
->
p
[
i
] = 0;

1197 
	`MPI_CHK
–
	`mpi_add_abs
–
N
, N, &
M
 ) );

1199 
˛ónup
:

1200 –
ªt
 );

1201 
	}
}

1203 #unde‡
P521_WIDTH


1204 #unde‡
P521_MASK


1209 #i‡
deföed
(
POLARSSL_ECP_DP_M255_ENABLED
)

1212 
	#P255_WIDTH
 ( 255 / 8 / –
t_uöt
 ) + 1 )

	)

1218 
	$e˝_mod_p255
–
mpi
 *
N
 )

1220 
ªt
;

1221 
size_t
 
i
;

1222 
mpi
 
M
;

1223 
t_uöt
 
Mp
[
P255_WIDTH
 + 2];

1225 if–
N
->
n
 < 
P255_WIDTH
 )

1229 
M
.
s
 = 1;

1230 
M
.
n
 = 
N
->¿- ( 
P255_WIDTH
 - 1 );

1231 if–
M
.
n
 > 
P255_WIDTH
 + 1 )

1232 
M
.
n
 = 
P255_WIDTH
 + 1;

1233 
M
.
p
 = 
Mp
;

1234 
	`mem£t
–
Mp
, 0,  Mp );

1235 
	`mem˝y
–
Mp
, 
N
->
p
 + 
P255_WIDTH
 - 1, 
M
.
n
 * –
t_uöt
 ) );

1236 
	`MPI_CHK
–
	`mpi_shi·_r
–&
M
, 255 % ( 8 * –
t_uöt
 ) ) ) );

1237 
M
.
n
++;

1240 
	`MPI_CHK
–
	`mpi_£t_bô
–
N
, 255, 0 ) );

1241  
i
 = 
P255_WIDTH
; i < 
N
->
n
; i++ )

1242 
N
->
p
[
i
] = 0;

1245 
	`MPI_CHK
–
	`mpi_mul_öt
–&
M
, &M, 19 ) );

1246 
	`MPI_CHK
–
	`mpi_add_abs
–
N
, N, &
M
 ) );

1248 
˛ónup
:

1249 –
ªt
 );

1250 
	}
}

1253 #i‡
deföed
(
POLARSSL_ECP_DP_SECP192K1_ENABLED
) || \

1254 
deföed
(
POLARSSL_ECP_DP_SECP224K1_ENABLED
) || \

1255 
	$deföed
(
POLARSSL_ECP_DP_SECP256K1_ENABLED
)

1263 
	#P_KOBLITZ_MAX
 ( 256 / 8 / –
t_uöt
 ) )

1264 
	#P_KOBLITZ_R
 ( 8 / –
t_uöt
 ) )

1265 
ölöe
 
	`e˝_mod_koblôz
–
mpi
 *
N
, 
t_uöt
 *
Rp
, 
size_t
 
p_limbs
,

	)

1266 
size_t
 
adju°
, size_à
shi·
, 
t_uöt
 
mask
 )

1268 
ªt
;

1269 
size_t
 
i
;

1270 
mpi
 
M
, 
R
;

1271 
t_uöt
 
Mp
[
P_KOBLITZ_MAX
 + 
P_KOBLITZ_R
];

1273 if–
N
->
n
 < 
p_limbs
 )

1277 
R
.
s
 = 1;

1278 
R
.
p
 = 
Rp
;

1279 
R
.
n
 = 
P_KOBLITZ_R
;

1282 
M
.
s
 = 1;

1283 
M
.
p
 = 
Mp
;

1286 
M
.
n
 = 
N
->¿- ( 
p_limbs
 - 
adju°
 );

1287 if–
M
.
n
 > 
p_limbs
 + 
adju°
 )

1288 
M
.
n
 = 
p_limbs
 + 
adju°
;

1289 
	`mem£t
–
Mp
, 0,  Mp );

1290 
	`mem˝y
–
Mp
, 
N
->
p
 + 
p_limbs
 - 
adju°
, 
M
.
n
 * –
t_uöt
 ) );

1291 if–
shi·
 != 0 )

1292 
	`MPI_CHK
–
	`mpi_shi·_r
–&
M
, 
shi·
 ) );

1293 
M
.
n
 +
R
.¿- 
adju°
;

1296 if–
mask
 != 0 )

1297 
N
->
p
[
p_limbs
 - 1] &
mask
;

1298  
i
 = 
p_limbs
; i < 
N
->
n
; i++ )

1299 
N
->
p
[
i
] = 0;

1302 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
M
, &M, &
R
 ) );

1303 
	`MPI_CHK
–
	`mpi_add_abs
–
N
, N, &
M
 ) );

1308 
M
.
n
 = 
N
->¿- ( 
p_limbs
 - 
adju°
 );

1309 if–
M
.
n
 > 
p_limbs
 + 
adju°
 )

1310 
M
.
n
 = 
p_limbs
 + 
adju°
;

1311 
	`mem£t
–
Mp
, 0,  Mp );

1312 
	`mem˝y
–
Mp
, 
N
->
p
 + 
p_limbs
 - 
adju°
, 
M
.
n
 * –
t_uöt
 ) );

1313 if–
shi·
 != 0 )

1314 
	`MPI_CHK
–
	`mpi_shi·_r
–&
M
, 
shi·
 ) );

1315 
M
.
n
 +
R
.¿- 
adju°
;

1318 if–
mask
 != 0 )

1319 
N
->
p
[
p_limbs
 - 1] &
mask
;

1320  
i
 = 
p_limbs
; i < 
N
->
n
; i++ )

1321 
N
->
p
[
i
] = 0;

1324 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
M
, &M, &
R
 ) );

1325 
	`MPI_CHK
–
	`mpi_add_abs
–
N
, N, &
M
 ) );

1327 
˛ónup
:

1328 –
ªt
 );

1329 
	}
}

1331 
	gPOLARSSL_ECP_DP_SECP224K1_ENABLED
) ||

1332 
	gPOLARSSL_ECP_DP_SECP256K1_ENABLED
) */

1334 #i‡
deföed
(
POLARSSL_ECP_DP_SECP192K1_ENABLED
)

1339 
	$e˝_mod_p192k1
–
mpi
 *
N
 )

1341 
t_uöt
 
Rp
[] = {

1342 
	`BYTES_TO_T_UINT_8
( 0xC9, 0x11, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00 ) };

1344 –
	`e˝_mod_koblôz
–
N
, 
Rp
, 192 / 8 / –
t_uöt
 ), 0, 0, 0 ) );

1345 
	}
}

1348 #i‡
deföed
(
POLARSSL_ECP_DP_SECP224K1_ENABLED
)

1353 
	$e˝_mod_p224k1
–
mpi
 *
N
 )

1355 
t_uöt
 
Rp
[] = {

1356 
	`BYTES_TO_T_UINT_8
( 0x93, 0x1A, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00 ) };

1358 #i‡
	`deföed
(
POLARSSL_HAVE_INT64
)

1359 –
	`e˝_mod_koblôz
–
N
, 
Rp
, 4, 1, 32, 0xFFFFFFFF ) );

1361 –
	`e˝_mod_koblôz
–
N
, 
Rp
, 224 / 8 / –
t_uöt
 ), 0, 0, 0 ) );

1363 
	}
}

1367 #i‡
deföed
(
POLARSSL_ECP_DP_SECP256K1_ENABLED
)

1372 
	$e˝_mod_p256k1
–
mpi
 *
N
 )

1374 
t_uöt
 
Rp
[] = {

1375 
	`BYTES_TO_T_UINT_8
( 0xD1, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00 ) };

1376 –
	`e˝_mod_koblôz
–
N
, 
Rp
, 256 / 8 / –
t_uöt
 ), 0, 0, 0 ) );

1377 
	}
}

	@polarssl/library/entropy.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_ENTROPY_C
)

34 
	~"pﬁ¨s¶/íå›y.h
"

35 
	~"pﬁ¨s¶/íå›y_pﬁl.h
"

37 #i‡
deföed
(
POLARSSL_FS_IO
)

38 
	~<°dio.h
>

41 #i‡
deföed
(
POLARSSL_HAVEGE_C
)

42 
	~"pﬁ¨s¶/havege.h
"

46 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

47 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

48 
	}
}

50 
	#ENTROPY_MAX_LOOP
 256

	)

52 
	$íå›y_öô
–
íå›y_c⁄ãxt
 *
˘x
 )

54 
	`mem£t
–
˘x
, 0, (
íå›y_c⁄ãxt
) );

56 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

57 
	`pﬁ¨s¶_muãx_öô
–&
˘x
->
muãx
 );

60 #i‡
	`deföed
(
POLARSSL_ENTROPY_SHA512_ACCUMULATOR
)

61 
	`sha512_°¨ts
–&
˘x
->
accumuœt‹
, 0 );

63 
	`sha256_°¨ts
–&
˘x
->
accumuœt‹
, 0 );

65 #i‡
	`deföed
(
POLARSSL_HAVEGE_C
)

66 
	`havege_öô
–&
˘x
->
havege_d©a
 );

69 #i‡!
	`deföed
(
POLARSSL_NO_DEFAULT_ENTROPY_SOURCES
)

70 #i‡!
	`deföed
(
POLARSSL_NO_PLATFORM_ENTROPY
)

71 
	`íå›y_add_sour˚
–
˘x
, 
∂©f‹m_íå›y_pﬁl
, 
NULL
,

72 
ENTROPY_MIN_PLATFORM
 );

74 #i‡
	`deföed
(
POLARSSL_TIMING_C
)

75 
	`íå›y_add_sour˚
–
˘x
, 
h¨d˛ock_pﬁl
, 
NULL
, 
ENTROPY_MIN_HARDCLOCK
 );

77 #i‡
	`deföed
(
POLARSSL_HAVEGE_C
)

78 
	`íå›y_add_sour˚
–
˘x
, 
havege_pﬁl
, &˘x->
havege_d©a
,

79 
ENTROPY_MIN_HAVEGE
 );

82 
	}
}

84 
	$íå›y_‰ì
–
íå›y_c⁄ãxt
 *
˘x
 )

86 #i‡
	`deföed
(
POLARSSL_HAVEGE_C
)

87 
	`havege_‰ì
–&
˘x
->
havege_d©a
 );

89 
	`pﬁ¨s¶_zîoize
–
˘x
, –
íå›y_c⁄ãxt
 ) );

90 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

91 
	`pﬁ¨s¶_muãx_‰ì
–&
˘x
->
muãx
 );

93 
	}
}

95 
	$íå›y_add_sour˚
–
íå›y_c⁄ãxt
 *
˘x
,

96 
f_sour˚_±r
 
f_sour˚
, *
p_sour˚
,

97 
size_t
 
thªshﬁd
 )

99 
ödex
, 
ªt
 = 0;

101 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

102 if––
ªt
 = 
	`pﬁ¨s¶_muãx_lock
–&
˘x
->
muãx
 ) ) != 0 )

103 –
ªt
 );

106 
ödex
 = 
˘x
->
sour˚_cou¡
;

107 if–
ödex
 >
ENTROPY_MAX_SOURCES
 )

109 
ªt
 = 
POLARSSL_ERR_ENTROPY_MAX_SOURCES
;

110 
exô
;

113 
˘x
->
sour˚
[
ödex
].
f_sour˚
 = f_source;

114 
˘x
->
sour˚
[
ödex
].
p_sour˚
 =Ö_source;

115 
˘x
->
sour˚
[
ödex
].
thªshﬁd
 =Åhreshold;

117 
˘x
->
sour˚_cou¡
++;

119 
exô
:

120 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

121 if–
	`pﬁ¨s¶_muãx_u∆ock
–&
˘x
->
muãx
 ) != 0 )

122 –
POLARSSL_ERR_THREADING_MUTEX_ERROR
 );

125 –
ªt
 );

126 
	}
}

131 
	$íå›y_upd©e
–
íå›y_c⁄ãxt
 *
˘x
, 
sour˚_id
,

132 c⁄° *
d©a
, 
size_t
 
Àn
 )

134 
hódî
[2];

135 
tmp
[
ENTROPY_BLOCK_SIZE
];

136 
size_t
 
u£_Àn
 = 
Àn
;

137 c⁄° *
p
 = 
d©a
;

139 if–
u£_Àn
 > 
ENTROPY_BLOCK_SIZE
 )

141 #i‡
	`deföed
(
POLARSSL_ENTROPY_SHA512_ACCUMULATOR
)

142 
	`sha512
–
d©a
, 
Àn
, 
tmp
, 0 );

144 
	`sha256
–
d©a
, 
Àn
, 
tmp
, 0 );

146 
p
 = 
tmp
;

147 
u£_Àn
 = 
ENTROPY_BLOCK_SIZE
;

150 
hódî
[0] = 
sour˚_id
;

151 
hódî
[1] = 
u£_Àn
 & 0xFF;

153 #i‡
	`deföed
(
POLARSSL_ENTROPY_SHA512_ACCUMULATOR
)

154 
	`sha512_upd©e
–&
˘x
->
accumuœt‹
, 
hódî
, 2 );

155 
	`sha512_upd©e
–&
˘x
->
accumuœt‹
, 
p
, 
u£_Àn
 );

157 
	`sha256_upd©e
–&
˘x
->
accumuœt‹
, 
hódî
, 2 );

158 
	`sha256_upd©e
–&
˘x
->
accumuœt‹
, 
p
, 
u£_Àn
 );

162 
	}
}

164 
	$íå›y_upd©e_m™uÆ
–
íå›y_c⁄ãxt
 *
˘x
,

165 c⁄° *
d©a
, 
size_t
 
Àn
 )

167 
ªt
;

169 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

170 if––
ªt
 = 
	`pﬁ¨s¶_muãx_lock
–&
˘x
->
muãx
 ) ) != 0 )

171 –
ªt
 );

174 
ªt
 = 
	`íå›y_upd©e
–
˘x
, 
ENTROPY_SOURCE_MANUAL
, 
d©a
, 
Àn
 );

176 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

177 if–
	`pﬁ¨s¶_muãx_u∆ock
–&
˘x
->
muãx
 ) != 0 )

178 –
POLARSSL_ERR_THREADING_MUTEX_ERROR
 );

181 –
ªt
 );

182 
	}
}

187 
	$íå›y_g©hî_öã∫Æ
–
íå›y_c⁄ãxt
 *
˘x
 )

189 
ªt
, 
i
;

190 
buf
[
ENTROPY_MAX_GATHER
];

191 
size_t
 
ﬁí
;

193 if–
˘x
->
sour˚_cou¡
 == 0 )

194 –
POLARSSL_ERR_ENTROPY_NO_SOURCES_DEFINED
 );

199  
i
 = 0; i < 
˘x
->
sour˚_cou¡
; i++ )

201 
ﬁí
 = 0;

202 if––
ªt
 = 
˘x
->
sour˚
[
i
].
	`f_sour˚
–˘x->sour˚[i].
p_sour˚
,

203 
buf
, 
ENTROPY_MAX_GATHER
, &
ﬁí
 ) ) != 0 )

205 –
ªt
 );

211 if–
ﬁí
 > 0 )

213 
	`íå›y_upd©e
–
˘x
, (Ë
i
, 
buf
, 
ﬁí
 );

214 
˘x
->
sour˚
[
i
].
size
 +
ﬁí
;

219 
	}
}

224 
	$íå›y_g©hî
–
íå›y_c⁄ãxt
 *
˘x
 )

226 
ªt
;

228 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

229 if––
ªt
 = 
	`pﬁ¨s¶_muãx_lock
–&
˘x
->
muãx
 ) ) != 0 )

230 –
ªt
 );

233 
ªt
 = 
	`íå›y_g©hî_öã∫Æ
–
˘x
 );

235 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

236 if–
	`pﬁ¨s¶_muãx_u∆ock
–&
˘x
->
muãx
 ) != 0 )

237 –
POLARSSL_ERR_THREADING_MUTEX_ERROR
 );

240 –
ªt
 );

241 
	}
}

243 
	$íå›y_func
–*
d©a
, *
ouçut
, 
size_t
 
Àn
 )

245 
ªt
, 
cou¡
 = 0, 
i
, 
ªached
;

246 
íå›y_c⁄ãxt
 *
˘x
 = (íå›y_c⁄ãxà*Ë
d©a
;

247 
buf
[
ENTROPY_BLOCK_SIZE
];

249 if–
Àn
 > 
ENTROPY_BLOCK_SIZE
 )

250 –
POLARSSL_ERR_ENTROPY_SOURCE_FAILED
 );

252 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

253 if––
ªt
 = 
	`pﬁ¨s¶_muãx_lock
–&
˘x
->
muãx
 ) ) != 0 )

254 –
ªt
 );

262 if–
cou¡
++ > 
ENTROPY_MAX_LOOP
 )

264 
ªt
 = 
POLARSSL_ERR_ENTROPY_SOURCE_FAILED
;

265 
exô
;

268 if––
ªt
 = 
	`íå›y_g©hî_öã∫Æ
–
˘x
 ) ) != 0 )

269 
exô
;

271 
ªached
 = 0;

273  
i
 = 0; i < 
˘x
->
sour˚_cou¡
; i++ )

274 if–
˘x
->
sour˚
[
i
].
size
 >˘x->sour˚[i].
thªshﬁd
 )

275 
ªached
++;

277  
ªached
 !
˘x
->
sour˚_cou¡
 );

279 
	`mem£t
–
buf
, 0, 
ENTROPY_BLOCK_SIZE
 );

281 #i‡
	`deföed
(
POLARSSL_ENTROPY_SHA512_ACCUMULATOR
)

282 
	`sha512_föish
–&
˘x
->
accumuœt‹
, 
buf
 );

287 
	`mem£t
–&
˘x
->
accumuœt‹
, 0, –
sha512_c⁄ãxt
 ) );

288 
	`sha512_°¨ts
–&
˘x
->
accumuœt‹
, 0 );

289 
	`sha512_upd©e
–&
˘x
->
accumuœt‹
, 
buf
, 
ENTROPY_BLOCK_SIZE
 );

294 
	`sha512
–
buf
, 
ENTROPY_BLOCK_SIZE
, buf, 0 );

296 
	`sha256_föish
–&
˘x
->
accumuœt‹
, 
buf
 );

301 
	`mem£t
–&
˘x
->
accumuœt‹
, 0, –
sha256_c⁄ãxt
 ) );

302 
	`sha256_°¨ts
–&
˘x
->
accumuœt‹
, 0 );

303 
	`sha256_upd©e
–&
˘x
->
accumuœt‹
, 
buf
, 
ENTROPY_BLOCK_SIZE
 );

308 
	`sha256
–
buf
, 
ENTROPY_BLOCK_SIZE
, buf, 0 );

311  
i
 = 0; i < 
˘x
->
sour˚_cou¡
; i++ )

312 
˘x
->
sour˚
[
i
].
size
 = 0;

314 
	`mem˝y
–
ouçut
, 
buf
, 
Àn
 );

316 
ªt
 = 0;

318 
exô
:

319 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

320 if–
	`pﬁ¨s¶_muãx_u∆ock
–&
˘x
->
muãx
 ) != 0 )

321 –
POLARSSL_ERR_THREADING_MUTEX_ERROR
 );

324 –
ªt
 );

325 
	}
}

327 #i‡
deföed
(
POLARSSL_FS_IO
)

328 
	$íå›y_wrôe_£ed_fûe
–
íå›y_c⁄ãxt
 *
˘x
, c⁄° *
∑th
 )

330 
ªt
 = 
POLARSSL_ERR_ENTROPY_FILE_IO_ERROR
;

331 
FILE
 *
f
;

332 
buf
[
ENTROPY_BLOCK_SIZE
];

334 if––
f
 = 
	`f›í
–
∑th
, "wb" ) ) =
NULL
 )

335 –
POLARSSL_ERR_ENTROPY_FILE_IO_ERROR
 );

337 if––
ªt
 = 
	`íå›y_func
–
˘x
, 
buf
, 
ENTROPY_BLOCK_SIZE
 ) ) != 0 )

338 
exô
;

340 if–
	`fwrôe
–
buf
, 1, 
ENTROPY_BLOCK_SIZE
, 
f
 ) != ENTROPY_BLOCK_SIZE )

342 
ªt
 = 
POLARSSL_ERR_ENTROPY_FILE_IO_ERROR
;

343 
exô
;

346 
ªt
 = 0;

348 
exô
:

349 
	`f˛o£
–
f
 );

350 –
ªt
 );

351 
	}
}

353 
	$íå›y_upd©e_£ed_fûe
–
íå›y_c⁄ãxt
 *
˘x
, c⁄° *
∑th
 )

355 
FILE
 *
f
;

356 
size_t
 
n
;

357 
buf
[ 
ENTROPY_MAX_SEED_SIZE
 ];

359 if––
f
 = 
	`f›í
–
∑th
, "rb" ) ) =
NULL
 )

360 –
POLARSSL_ERR_ENTROPY_FILE_IO_ERROR
 );

362 
	`f£ek
–
f
, 0, 
SEEK_END
 );

363 
n
 = (
size_t
Ë
	`·ñl
–
f
 );

364 
	`f£ek
–
f
, 0, 
SEEK_SET
 );

366 if–
n
 > 
ENTROPY_MAX_SEED_SIZE
 )

367 
n
 = 
ENTROPY_MAX_SEED_SIZE
;

369 if–
	`‰ód
–
buf
, 1, 
n
, 
f
 ) !=Ç )

371 
	`f˛o£
–
f
 );

372 –
POLARSSL_ERR_ENTROPY_FILE_IO_ERROR
 );

375 
	`f˛o£
–
f
 );

377 
	`íå›y_upd©e_m™uÆ
–
˘x
, 
buf
, 
n
 );

379 –
	`íå›y_wrôe_£ed_fûe
–
˘x
, 
∑th
 ) );

380 
	}
}

383 #i‡
deföed
(
POLARSSL_SELF_TEST
)

385 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

386 
	~"pﬁ¨s¶/∂©f‹m.h
"

388 
	~<°dio.h
>

389 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

395 
	$íå›y_dummy_sour˚
–*
d©a
, *
ouçut
,

396 
size_t
 
Àn
, size_à*
ﬁí
 )

398 ((Ë
d©a
);

400 
	`mem£t
–
ouçut
, 0x2a, 
Àn
 );

401 *
ﬁí
 = 
Àn
;

404 
	}
}

411 
	$íå›y_£lf_ã°
–
vîbo£
 )

413 
ªt
 = 0;

414 
íå›y_c⁄ãxt
 
˘x
;

415 
buf
[
ENTROPY_BLOCK_SIZE
] = { 0 };

416 
acc
[
ENTROPY_BLOCK_SIZE
] = { 0 };

417 
size_t
 
i
, 
j
;

419 if–
vîbo£
 != 0 )

420 
	`pﬁ¨s¶_¥ötf
( " ENTROPYÅest: " );

422 
	`íå›y_öô
–&
˘x
 );

424 
ªt
 = 
	`íå›y_add_sour˚
–&
˘x
, 
íå›y_dummy_sour˚
, 
NULL
, 16 );

425 if–
ªt
 != 0 )

426 
˛ónup
;

428 if––
ªt
 = 
	`íå›y_g©hî
–&
˘x
 ) ) != 0 )

429 
˛ónup
;

431 if––
ªt
 = 
	`íå›y_upd©e_m™uÆ
–&
˘x
, 
buf
,  buf ) ) != 0 )

432 
˛ónup
;

442  
i
 = 0; i < 8; i++ )

444 if––
ªt
 = 
	`íå›y_func
–&
˘x
, 
buf
, ( buf ) ) ) != 0 )

445 
˛ónup
;

447  
j
 = 0; j < –
buf
 ); j++ )

448 
acc
[
j
] |
buf
[j];

451  
j
 = 0; j < –
buf
 ); j++ )

453 if–
acc
[
j
] == 0 )

455 
ªt
 = 1;

456 
˛ónup
;

460 
˛ónup
:

461 
	`íå›y_‰ì
–&
˘x
 );

463 if–
vîbo£
 != 0 )

465 if–
ªt
 != 0 )

466 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

468 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

470 
	`pﬁ¨s¶_¥ötf
( "\n" );

473 –
ªt
 != 0 );

474 
	}
}

	@polarssl/library/entropy_poll.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_ENTROPY_C
)

34 
	~"pﬁ¨s¶/íå›y.h
"

35 
	~"pﬁ¨s¶/íå›y_pﬁl.h
"

37 #i‡
deföed
(
POLARSSL_TIMING_C
)

38 
	~"pﬁ¨s¶/timög.h
"

40 #i‡
deföed
(
POLARSSL_HAVEGE_C
)

41 
	~"pﬁ¨s¶/havege.h
"

44 #i‡!
deföed
(
POLARSSL_NO_PLATFORM_ENTROPY
)

45 #i‡
deföed
(
_WIN32
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

47 #i‡!
deföed
(
_WIN32_WINNT
)

48 
	#_WIN32_WINNT
 0x0400

	)

50 
	~<wödows.h
>

51 
	~<wö¸y±.h
>

53 
	$∂©f‹m_íå›y_pﬁl
–*
d©a
, *
ouçut
, 
size_t
 
Àn
,

54 
size_t
 *
ﬁí
 )

56 
HCRYPTPROV
 
¥ovidî
;

57 ((Ë
d©a
);

58 *
ﬁí
 = 0;

60 if–
	`Cry±AcquúeC⁄ãxt
–&
¥ovidî
, 
NULL
, NULL,

61 
PROV_RSA_FULL
, 
CRYPT_VERIFYCONTEXT
 ) =
FALSE
 )

63 –
POLARSSL_ERR_ENTROPY_SOURCE_FAILED
 );

66 if–
	`Cry±GíR™dom
–
¥ovidî
, (
DWORD
Ë
Àn
, 
ouçut
 ) =
FALSE
 )

67 –
POLARSSL_ERR_ENTROPY_SOURCE_FAILED
 );

69 
	`Cry±Rñó£C⁄ãxt
–
¥ovidî
, 0 );

70 *
ﬁí
 = 
Àn
;

73 
	}
}

76 
	~<°dio.h
>

78 
	$∂©f‹m_íå›y_pﬁl
–*
d©a
,

79 *
ouçut
, 
size_t
 
Àn
, size_à*
ﬁí
 )

81 
FILE
 *
fûe
;

82 
size_t
 
ªt
;

83 ((Ë
d©a
);

85 *
ﬁí
 = 0;

87 
fûe
 = 
	`f›í
( "/dev/urandom", "rb" );

88 if–
fûe
 =
NULL
 )

89 –
POLARSSL_ERR_ENTROPY_SOURCE_FAILED
 );

91 
ªt
 = 
	`‰ód
–
ouçut
, 1, 
Àn
, 
fûe
 );

92 if–
ªt
 !
Àn
 )

94 
	`f˛o£
–
fûe
 );

95 –
POLARSSL_ERR_ENTROPY_SOURCE_FAILED
 );

98 
	`f˛o£
–
fûe
 );

99 *
ﬁí
 = 
Àn
;

102 
	}
}

106 #i‡
deföed
(
POLARSSL_TIMING_C
)

107 
	$h¨d˛ock_pﬁl
–*
d©a
,

108 *
ouçut
, 
size_t
 
Àn
, size_à*
ﬁí
 )

110 
timî
 = 
	`h¨d˛ock
();

111 ((Ë
d©a
);

112 *
ﬁí
 = 0;

114 if–
Àn
 < () )

117 
	`mem˝y
–
ouçut
, &
timî
, () );

118 *
ﬁí
 = ();

121 
	}
}

124 #i‡
deföed
(
POLARSSL_HAVEGE_C
)

125 
	$havege_pﬁl
–*
d©a
,

126 *
ouçut
, 
size_t
 
Àn
, size_à*
ﬁí
 )

128 
havege_°©e
 *
hs
 = (havege_°©ê*Ë
d©a
;

129 *
ﬁí
 = 0;

131 if–
	`havege_øndom
–
hs
, 
ouçut
, 
Àn
 ) != 0 )

132 –
POLARSSL_ERR_ENTROPY_SOURCE_FAILED
 );

134 *
ﬁí
 = 
Àn
;

137 
	}
}

	@polarssl/library/error.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_ERROR_C
Ë|| deföed(
POLARSSL_ERROR_STRERROR_DUMMY
)

33 
	~"pﬁ¨s¶/îr‹.h
"

36 #i‡
deföed
(
POLARSSL_ERROR_C
)

38 #i‡
deföed
(
POLARSSL_AES_C
)

39 
	~"pﬁ¨s¶/´s.h
"

42 #i‡
deföed
(
POLARSSL_BASE64_C
)

43 
	~"pﬁ¨s¶/ba£64.h
"

46 #i‡
deföed
(
POLARSSL_BIGNUM_C
)

47 
	~"pﬁ¨s¶/bignum.h
"

50 #i‡
deföed
(
POLARSSL_BLOWFISH_C
)

51 
	~"pﬁ¨s¶/blowfish.h
"

54 #i‡
deföed
(
POLARSSL_CAMELLIA_C
)

55 
	~"pﬁ¨s¶/ˇmñlü.h
"

58 #i‡
deföed
(
POLARSSL_CCM_C
)

59 
	~"pﬁ¨s¶/ccm.h
"

62 #i‡
deföed
(
POLARSSL_CIPHER_C
)

63 
	~"pﬁ¨s¶/cùhî.h
"

66 #i‡
deföed
(
POLARSSL_CTR_DRBG_C
)

67 
	~"pﬁ¨s¶/˘r_drbg.h
"

70 #i‡
deföed
(
POLARSSL_DES_C
)

71 
	~"pﬁ¨s¶/des.h
"

74 #i‡
deföed
(
POLARSSL_DHM_C
)

75 
	~"pﬁ¨s¶/dhm.h
"

78 #i‡
deföed
(
POLARSSL_ECP_C
)

79 
	~"pﬁ¨s¶/e˝.h
"

82 #i‡
deföed
(
POLARSSL_ENTROPY_C
)

83 
	~"pﬁ¨s¶/íå›y.h
"

86 #i‡
deföed
(
POLARSSL_GCM_C
)

87 
	~"pﬁ¨s¶/gcm.h
"

90 #i‡
deföed
(
POLARSSL_HMAC_DRBG_C
)

91 
	~"pﬁ¨s¶/hmac_drbg.h
"

94 #i‡
deföed
(
POLARSSL_MD_C
)

95 
	~"pﬁ¨s¶/md.h
"

98 #i‡
deföed
(
POLARSSL_MD2_C
)

99 
	~"pﬁ¨s¶/md2.h
"

102 #i‡
deföed
(
POLARSSL_MD4_C
)

103 
	~"pﬁ¨s¶/md4.h
"

106 #i‡
deföed
(
POLARSSL_MD5_C
)

107 
	~"pﬁ¨s¶/md5.h
"

110 #i‡
deföed
(
POLARSSL_NET_C
)

111 
	~"pﬁ¨s¶/√t.h
"

114 #i‡
deföed
(
POLARSSL_OID_C
)

115 
	~"pﬁ¨s¶/oid.h
"

118 #i‡
deföed
(
POLARSSL_PADLOCK_C
)

119 
	~"pﬁ¨s¶/∑dlock.h
"

122 #i‡
deföed
(
POLARSSL_PBKDF2_C
)

123 
	~"pﬁ¨s¶/pbkdf2.h
"

126 #i‡
deföed
(
POLARSSL_PEM_PARSE_C
Ë|| deföed(
POLARSSL_PEM_WRITE_C
)

127 
	~"pﬁ¨s¶/≥m.h
"

130 #i‡
deföed
(
POLARSSL_PK_C
)

131 
	~"pﬁ¨s¶/pk.h
"

134 #i‡
deföed
(
POLARSSL_PKCS12_C
)

135 
	~"pﬁ¨s¶/pkcs12.h
"

138 #i‡
deföed
(
POLARSSL_PKCS5_C
)

139 
	~"pﬁ¨s¶/pkcs5.h
"

142 #i‡
deföed
(
POLARSSL_RIPEMD160_C
)

143 
	~"pﬁ¨s¶/rùemd160.h
"

146 #i‡
deföed
(
POLARSSL_RSA_C
)

147 
	~"pﬁ¨s¶/rß.h
"

150 #i‡
deföed
(
POLARSSL_SHA1_C
)

151 
	~"pﬁ¨s¶/sha1.h
"

154 #i‡
deföed
(
POLARSSL_SHA256_C
)

155 
	~"pﬁ¨s¶/sha256.h
"

158 #i‡
deföed
(
POLARSSL_SHA512_C
)

159 
	~"pﬁ¨s¶/sha512.h
"

162 #i‡
deföed
(
POLARSSL_SSL_TLS_C
)

163 
	~"pﬁ¨s¶/s¶.h
"

166 #i‡
deföed
(
POLARSSL_THREADING_C
)

167 
	~"pﬁ¨s¶/thªadög.h
"

170 #i‡
deföed
(
POLARSSL_X509_USE_C
Ë|| deföed(
POLARSSL_X509_CREATE_C
)

171 
	~"pﬁ¨s¶/x509.h
"

174 #i‡
deföed
(
POLARSSL_XTEA_C
)

175 
	~"pﬁ¨s¶/xãa.h
"

179 
	~<°rög.h
>

181 #i‡
deföed
(
_MSC_VER
Ë&& !deföed 
¢¥ötf
 && !deföed(
EFIX64
) && \

182 !
	$deföed
(
EFI32
)

183 
	#¢¥ötf
 
_¢¥ötf


	)

186 
	$pﬁ¨s¶_°ªº‹
–
ªt
, *
buf
, 
size_t
 
buÊí
 )

188 
size_t
 
Àn
;

189 
u£_ªt
;

191 if–
buÊí
 == 0 )

194 
	`mem£t
–
buf
, 0x00, 
buÊí
 );

196 
buÊí
 -= 1;

198 if–
ªt
 < 0 )

199 
ªt
 = -ret;

201 if–
ªt
 & 0xFF80 )

203 
u£_ªt
 = 
ªt
 & 0xFF80;

208 #i‡
	`deföed
(
POLARSSL_CIPHER_C
)

209 if–
u£_ªt
 =-(
POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE
) )

210 
	`¢¥ötf
–
buf
, 
buÊí
, "CIPHER - The selected feature isÇotávailable" );

211 if–
u£_ªt
 =-(
POLARSSL_ERR_CIPHER_BAD_INPUT_DATA
) )

212 
	`¢¥ötf
–
buf
, 
buÊí
, "CIPHER - Bad inputÖarametersÅo function" );

213 if–
u£_ªt
 =-(
POLARSSL_ERR_CIPHER_ALLOC_FAILED
) )

214 
	`¢¥ötf
–
buf
, 
buÊí
, "CIPHER - FailedÅoállocate memory" );

215 if–
u£_ªt
 =-(
POLARSSL_ERR_CIPHER_INVALID_PADDING
) )

216 
	`¢¥ötf
–
buf
, 
buÊí
, "CIPHER - Input data contains invalidÖaddingánd isÑejected" );

217 if–
u£_ªt
 =-(
POLARSSL_ERR_CIPHER_FULL_BLOCK_EXPECTED
) )

218 
	`¢¥ötf
–
buf
, 
buÊí
, "CIPHER - Decryption of blockÑequiresá full block" );

219 if–
u£_ªt
 =-(
POLARSSL_ERR_CIPHER_AUTH_FAILED
) )

220 
	`¢¥ötf
–
buf
, 
buÊí
, "CIPHER - Authentication failed (for AEAD modes)" );

223 #i‡
	`deföed
(
POLARSSL_DHM_C
)

224 if–
u£_ªt
 =-(
POLARSSL_ERR_DHM_BAD_INPUT_DATA
) )

225 
	`¢¥ötf
–
buf
, 
buÊí
, "DHM - Bad inputÖarametersÅo function" );

226 if–
u£_ªt
 =-(
POLARSSL_ERR_DHM_READ_PARAMS_FAILED
) )

227 
	`¢¥ötf
–
buf
, 
buÊí
, "DHM - Reading ofÅhe DHMÖarameters failed" );

228 if–
u£_ªt
 =-(
POLARSSL_ERR_DHM_MAKE_PARAMS_FAILED
) )

229 
	`¢¥ötf
–
buf
, 
buÊí
, "DHM - Making ofÅhe DHMÖarameters failed" );

230 if–
u£_ªt
 =-(
POLARSSL_ERR_DHM_READ_PUBLIC_FAILED
) )

231 
	`¢¥ötf
–
buf
, 
buÊí
, "DHM - Reading ofÅheÖublic values failed" );

232 if–
u£_ªt
 =-(
POLARSSL_ERR_DHM_MAKE_PUBLIC_FAILED
) )

233 
	`¢¥ötf
–
buf
, 
buÊí
, "DHM - Making ofÅheÖublic value failed" );

234 if–
u£_ªt
 =-(
POLARSSL_ERR_DHM_CALC_SECRET_FAILED
) )

235 
	`¢¥ötf
–
buf
, 
buÊí
, "DHM - Calculation ofÅhe DHM secret failed" );

236 if–
u£_ªt
 =-(
POLARSSL_ERR_DHM_INVALID_FORMAT
) )

237 
	`¢¥ötf
–
buf
, 
buÊí
, "DHM - The ASN.1 data isÇot formatted correctly" );

238 if–
u£_ªt
 =-(
POLARSSL_ERR_DHM_MALLOC_FAILED
) )

239 
	`¢¥ötf
–
buf
, 
buÊí
, "DHM - Allocation of memory failed" );

240 if–
u£_ªt
 =-(
POLARSSL_ERR_DHM_FILE_IO_ERROR
) )

241 
	`¢¥ötf
–
buf
, 
buÊí
, "DHM - Read/write of file failed" );

244 #i‡
	`deföed
(
POLARSSL_ECP_C
)

245 if–
u£_ªt
 =-(
POLARSSL_ERR_ECP_BAD_INPUT_DATA
) )

246 
	`¢¥ötf
–
buf
, 
buÊí
, "ECP - Bad inputÖarametersÅo function" );

247 if–
u£_ªt
 =-(
POLARSSL_ERR_ECP_BUFFER_TOO_SMALL
) )

248 
	`¢¥ötf
–
buf
, 
buÊí
, "ECP - The buffer isÅoo smallÅo writeÅo" );

249 if–
u£_ªt
 =-(
POLARSSL_ERR_ECP_FEATURE_UNAVAILABLE
) )

250 
	`¢¥ötf
–
buf
, 
buÊí
, "ECP - Requested curveÇotávailable" );

251 if–
u£_ªt
 =-(
POLARSSL_ERR_ECP_VERIFY_FAILED
) )

252 
	`¢¥ötf
–
buf
, 
buÊí
, "ECP - The signature isÇot valid" );

253 if–
u£_ªt
 =-(
POLARSSL_ERR_ECP_MALLOC_FAILED
) )

254 
	`¢¥ötf
–
buf
, 
buÊí
, "ECP - Memoryállocation failed" );

255 if–
u£_ªt
 =-(
POLARSSL_ERR_ECP_RANDOM_FAILED
) )

256 
	`¢¥ötf
–
buf
, 
buÊí
, "ECP - Generation ofÑandom value, suchás (ephemeral) key, failed" );

257 if–
u£_ªt
 =-(
POLARSSL_ERR_ECP_INVALID_KEY
) )

258 
	`¢¥ötf
–
buf
, 
buÊí
, "ECP - InvalidÖrivate orÖublic key" );

259 if–
u£_ªt
 =-(
POLARSSL_ERR_ECP_SIG_LEN_MISMATCH
) )

260 
	`¢¥ötf
–
buf
, 
buÊí
, "ECP - Signature is valid but shorterÅhanÅhe user-suppliedÜength" );

263 #i‡
	`deföed
(
POLARSSL_MD_C
)

264 if–
u£_ªt
 =-(
POLARSSL_ERR_MD_FEATURE_UNAVAILABLE
) )

265 
	`¢¥ötf
–
buf
, 
buÊí
, "MD - The selected feature isÇotávailable" );

266 if–
u£_ªt
 =-(
POLARSSL_ERR_MD_BAD_INPUT_DATA
) )

267 
	`¢¥ötf
–
buf
, 
buÊí
, "MD - Bad inputÖarametersÅo function" );

268 if–
u£_ªt
 =-(
POLARSSL_ERR_MD_ALLOC_FAILED
) )

269 
	`¢¥ötf
–
buf
, 
buÊí
, "MD - FailedÅoállocate memory" );

270 if–
u£_ªt
 =-(
POLARSSL_ERR_MD_FILE_IO_ERROR
) )

271 
	`¢¥ötf
–
buf
, 
buÊí
, "MD - Opening orÑeading of file failed" );

274 #i‡
	`deföed
(
POLARSSL_PEM_PARSE_C
Ë|| deföed(
POLARSSL_PEM_WRITE_C
)

275 if–
u£_ªt
 =-(
POLARSSL_ERR_PEM_NO_HEADER_FOOTER_PRESENT
) )

276 
	`¢¥ötf
–
buf
, 
buÊí
, "PEM - No PEM header or footer found" );

277 if–
u£_ªt
 =-(
POLARSSL_ERR_PEM_INVALID_DATA
) )

278 
	`¢¥ötf
–
buf
, 
buÊí
, "PEM - PEM string isÇotásÉxpected" );

279 if–
u£_ªt
 =-(
POLARSSL_ERR_PEM_MALLOC_FAILED
) )

280 
	`¢¥ötf
–
buf
, 
buÊí
, "PEM - FailedÅoállocate memory" );

281 if–
u£_ªt
 =-(
POLARSSL_ERR_PEM_INVALID_ENC_IV
) )

282 
	`¢¥ötf
–
buf
, 
buÊí
, "PEM - RSA IV isÇot in hex-format" );

283 if–
u£_ªt
 =-(
POLARSSL_ERR_PEM_UNKNOWN_ENC_ALG
) )

284 
	`¢¥ötf
–
buf
, 
buÊí
, "PEM - Unsupported keyÉncryptionálgorithm" );

285 if–
u£_ªt
 =-(
POLARSSL_ERR_PEM_PASSWORD_REQUIRED
) )

286 
	`¢¥ötf
–
buf
, 
buÊí
, "PEM - Private keyÖassword can't beÉmpty" );

287 if–
u£_ªt
 =-(
POLARSSL_ERR_PEM_PASSWORD_MISMATCH
) )

288 
	`¢¥ötf
–
buf
, 
buÊí
, "PEM - GivenÖrivate keyÖassword doesÇotállow for correct decryption" );

289 if–
u£_ªt
 =-(
POLARSSL_ERR_PEM_FEATURE_UNAVAILABLE
) )

290 
	`¢¥ötf
–
buf
, 
buÊí
, "PEM - Unavailable feature,É.g. hashing/encryption combination" );

291 if–
u£_ªt
 =-(
POLARSSL_ERR_PEM_BAD_INPUT_DATA
) )

292 
	`¢¥ötf
–
buf
, 
buÊí
, "PEM - Bad inputÖarametersÅo function" );

295 #i‡
	`deföed
(
POLARSSL_PK_C
)

296 if–
u£_ªt
 =-(
POLARSSL_ERR_PK_MALLOC_FAILED
) )

297 
	`¢¥ötf
–
buf
, 
buÊí
, "PK - Memoryálloation failed" );

298 if–
u£_ªt
 =-(
POLARSSL_ERR_PK_TYPE_MISMATCH
) )

299 
	`¢¥ötf
–
buf
, 
buÊí
, "PK - Type mismatch,ÉgáttemptÅoÉncrypt withán ECDSA key" );

300 if–
u£_ªt
 =-(
POLARSSL_ERR_PK_BAD_INPUT_DATA
) )

301 
	`¢¥ötf
–
buf
, 
buÊí
, "PK - Bad inputÖarametersÅo function" );

302 if–
u£_ªt
 =-(
POLARSSL_ERR_PK_FILE_IO_ERROR
) )

303 
	`¢¥ötf
–
buf
, 
buÊí
, "PK - Read/write of file failed" );

304 if–
u£_ªt
 =-(
POLARSSL_ERR_PK_KEY_INVALID_VERSION
) )

305 
	`¢¥ötf
–
buf
, 
buÊí
, "PK - Unsupported key version" );

306 if–
u£_ªt
 =-(
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
) )

307 
	`¢¥ötf
–
buf
, 
buÊí
, "PK - Invalid keyÅag or value" );

308 if–
u£_ªt
 =-(
POLARSSL_ERR_PK_UNKNOWN_PK_ALG
) )

309 
	`¢¥ötf
–
buf
, 
buÊí
, "PK - Keyálgorithm is unsupported (only RSAánd ECáre supported)" );

310 if–
u£_ªt
 =-(
POLARSSL_ERR_PK_PASSWORD_REQUIRED
) )

311 
	`¢¥ötf
–
buf
, 
buÊí
, "PK - Private keyÖassword can't beÉmpty" );

312 if–
u£_ªt
 =-(
POLARSSL_ERR_PK_PASSWORD_MISMATCH
) )

313 
	`¢¥ötf
–
buf
, 
buÊí
, "PK - GivenÖrivate keyÖassword doesÇotállow for correct decryption" );

314 if–
u£_ªt
 =-(
POLARSSL_ERR_PK_INVALID_PUBKEY
) )

315 
	`¢¥ötf
–
buf
, 
buÊí
, "PK - TheÖubkeyÅag or value is invalid (only RSAánd ECáre supported)" );

316 if–
u£_ªt
 =-(
POLARSSL_ERR_PK_INVALID_ALG
) )

317 
	`¢¥ötf
–
buf
, 
buÊí
, "PK - TheálgorithmÅag or value is invalid" );

318 if–
u£_ªt
 =-(
POLARSSL_ERR_PK_UNKNOWN_NAMED_CURVE
) )

319 
	`¢¥ötf
–
buf
, 
buÊí
, "PK - Elliptic curve is unsupported (only NIST curvesáre supported)" );

320 if–
u£_ªt
 =-(
POLARSSL_ERR_PK_FEATURE_UNAVAILABLE
) )

321 
	`¢¥ötf
–
buf
, 
buÊí
, "PK - Unavailable feature,É.g. RSA disabled for RSA key" );

322 if–
u£_ªt
 =-(
POLARSSL_ERR_PK_SIG_LEN_MISMATCH
) )

323 
	`¢¥ötf
–
buf
, 
buÊí
, "PK - The signature is valid but itsÜength isÜessÅhanÉxpected" );

326 #i‡
	`deföed
(
POLARSSL_PKCS12_C
)

327 if–
u£_ªt
 =-(
POLARSSL_ERR_PKCS12_BAD_INPUT_DATA
) )

328 
	`¢¥ötf
–
buf
, 
buÊí
, "PKCS12 - Bad inputÖarametersÅo function" );

329 if–
u£_ªt
 =-(
POLARSSL_ERR_PKCS12_FEATURE_UNAVAILABLE
) )

330 
	`¢¥ötf
–
buf
, 
buÊí
, "PKCS12 - FeatureÇotávailable,É.g. unsupportedÉncryption scheme" );

331 if–
u£_ªt
 =-(
POLARSSL_ERR_PKCS12_PBE_INVALID_FORMAT
) )

332 
	`¢¥ötf
–
buf
, 
buÊí
, "PKCS12 - PBE ASN.1 dataÇotásÉxpected" );

333 if–
u£_ªt
 =-(
POLARSSL_ERR_PKCS12_PASSWORD_MISMATCH
) )

334 
	`¢¥ötf
–
buf
, 
buÊí
, "PKCS12 - GivenÖrivate keyÖassword doesÇotállow for correct decryption" );

337 #i‡
	`deföed
(
POLARSSL_PKCS5_C
)

338 if–
u£_ªt
 =-(
POLARSSL_ERR_PKCS5_BAD_INPUT_DATA
) )

339 
	`¢¥ötf
–
buf
, 
buÊí
, "PKCS5 - Bad inputÖarametersÅo function" );

340 if–
u£_ªt
 =-(
POLARSSL_ERR_PKCS5_INVALID_FORMAT
) )

341 
	`¢¥ötf
–
buf
, 
buÊí
, "PKCS5 - Unexpected ASN.1 data" );

342 if–
u£_ªt
 =-(
POLARSSL_ERR_PKCS5_FEATURE_UNAVAILABLE
) )

343 
	`¢¥ötf
–
buf
, 
buÊí
, "PKCS5 - RequestedÉncryption or digestálgÇotávailable" );

344 if–
u£_ªt
 =-(
POLARSSL_ERR_PKCS5_PASSWORD_MISMATCH
) )

345 
	`¢¥ötf
–
buf
, 
buÊí
, "PKCS5 - GivenÖrivate keyÖassword doesÇotállow for correct decryption" );

348 #i‡
	`deföed
(
POLARSSL_RSA_C
)

349 if–
u£_ªt
 =-(
POLARSSL_ERR_RSA_BAD_INPUT_DATA
) )

350 
	`¢¥ötf
–
buf
, 
buÊí
, "RSA - Bad inputÖarametersÅo function" );

351 if–
u£_ªt
 =-(
POLARSSL_ERR_RSA_INVALID_PADDING
) )

352 
	`¢¥ötf
–
buf
, 
buÊí
, "RSA - Input data contains invalidÖaddingánd isÑejected" );

353 if–
u£_ªt
 =-(
POLARSSL_ERR_RSA_KEY_GEN_FAILED
) )

354 
	`¢¥ötf
–
buf
, 
buÊí
, "RSA - Something failed during generation ofá key" );

355 if–
u£_ªt
 =-(
POLARSSL_ERR_RSA_KEY_CHECK_FAILED
) )

356 
	`¢¥ötf
–
buf
, 
buÊí
, "RSA - Key failedÅoÖassÅheÜibraries validity check" );

357 if–
u£_ªt
 =-(
POLARSSL_ERR_RSA_PUBLIC_FAILED
) )

358 
	`¢¥ötf
–
buf
, 
buÊí
, "RSA - TheÖublic key operation failed" );

359 if–
u£_ªt
 =-(
POLARSSL_ERR_RSA_PRIVATE_FAILED
) )

360 
	`¢¥ötf
–
buf
, 
buÊí
, "RSA - TheÖrivate key operation failed" );

361 if–
u£_ªt
 =-(
POLARSSL_ERR_RSA_VERIFY_FAILED
) )

362 
	`¢¥ötf
–
buf
, 
buÊí
, "RSA - The PKCS#1 verification failed" );

363 if–
u£_ªt
 =-(
POLARSSL_ERR_RSA_OUTPUT_TOO_LARGE
) )

364 
	`¢¥ötf
–
buf
, 
buÊí
, "RSA - The output buffer for decryption isÇotÜargeÉnough" );

365 if–
u£_ªt
 =-(
POLARSSL_ERR_RSA_RNG_FAILED
) )

366 
	`¢¥ötf
–
buf
, 
buÊí
, "RSA - TheÑandom generator failedÅo generateÇon-zeros" );

369 #i‡
	`deföed
(
POLARSSL_SSL_TLS_C
)

370 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_FEATURE_UNAVAILABLE
) )

371 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - TheÑequested feature isÇotávailable" );

372 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_BAD_INPUT_DATA
) )

373 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Bad inputÖarametersÅo function" );

374 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_INVALID_MAC
) )

375 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Verification ofÅhe message MAC failed" );

376 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_INVALID_RECORD
) )

377 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - An invalid SSLÑecord wasÑeceived" );

378 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_CONN_EOF
) )

379 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - The connection indicatedán EOF" );

380 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_UNKNOWN_CIPHER
) )

381 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - An unknown cipher wasÑeceived" );

382 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_NO_CIPHER_CHOSEN
) )

383 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - The server hasÇo ciphersuites in common withÅhe client" );

384 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_NO_RNG
) )

385 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - No RNG wasÖrovidedÅoÅhe SSL module" );

386 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_NO_CLIENT_CERTIFICATE
) )

387 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - No client certificationÑeceived fromÅhe client, butÑequired byÅheáuthentication mode" );

388 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_CERTIFICATE_TOO_LARGE
) )

389 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - DESCRIPTION MISSING" );

390 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_CERTIFICATE_REQUIRED
) )

391 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - The own certificate isÇot set, butÇeeded byÅhe server" );

392 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_PRIVATE_KEY_REQUIRED
) )

393 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - The ownÖrivate key orÖre-shared key isÇot set, butÇeeded" );

394 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_CA_CHAIN_REQUIRED
) )

395 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - No CA Chain is set, butÑequiredÅo operate" );

396 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_UNEXPECTED_MESSAGE
) )

397 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - An unexpected message wasÑeceived from ourÖeer" );

398 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_FATAL_ALERT_MESSAGE
) )

400 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - A fatalálert message wasÑeceived from ourÖeer" );

403 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_PEER_VERIFY_FAILED
) )

404 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Verification of ourÖeer failed" );

405 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_PEER_CLOSE_NOTIFY
) )

406 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - TheÖeerÇotified usÅhatÅhe connection is goingÅo be closed" );

407 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
) )

408 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Processing ofÅhe ClientHello handshake message failed" );

409 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
) )

410 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Processing ofÅhe ServerHello handshake message failed" );

411 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE
) )

412 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Processing ofÅhe Certificate handshake message failed" );

413 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE_REQUEST
) )

414 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Processing ofÅhe CertificateRequest handshake message failed" );

415 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE
) )

416 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Processing ofÅhe ServerKeyExchange handshake message failed" );

417 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO_DONE
) )

418 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Processing ofÅhe ServerHelloDone handshake message failed" );

419 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE
) )

420 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Processing ofÅhe ClientKeyExchange handshake message failed" );

421 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE_RP
) )

422 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Processing ofÅhe ClientKeyExchange handshake message failed in DHM / ECDH Read Public" );

423 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE_CS
) )

424 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Processing ofÅhe ClientKeyExchange handshake message failed in DHM / ECDH Calculate Secret" );

425 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE_VERIFY
) )

426 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Processing ofÅhe CertificateVerify handshake message failed" );

427 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_BAD_HS_CHANGE_CIPHER_SPEC
) )

428 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Processing ofÅhe ChangeCipherSpec handshake message failed" );

429 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_BAD_HS_FINISHED
) )

430 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Processing ofÅhe Finished handshake message failed" );

431 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_MALLOC_FAILED
) )

432 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Memoryállocation failed" );

433 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_HW_ACCEL_FAILED
) )

434 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Hardwareácceleration functionÑeturned withÉrror" );

435 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_HW_ACCEL_FALLTHROUGH
) )

436 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Hardwareácceleration function skipped /Üeftálone data" );

437 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_COMPRESSION_FAILED
) )

438 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Processing ofÅhe compression / decompression failed" );

439 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_BAD_HS_PROTOCOL_VERSION
) )

440 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - HandshakeÖrotocolÇot within min/max boundaries" );

441 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_BAD_HS_NEW_SESSION_TICKET
) )

442 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Processing ofÅhe NewSessionTicket handshake message failed" );

443 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_SESSION_TICKET_EXPIRED
) )

444 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - SessionÅicket hasÉxpired" );

445 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_PK_TYPE_MISMATCH
) )

446 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Public keyÅype mismatch (eg,ásked for RSA keyÉxchangeándÖresented EC key)" );

447 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_UNKNOWN_IDENTITY
) )

448 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - Unknown identityÑeceived (eg, PSK identity)" );

449 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_INTERNAL_ERROR
) )

450 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - InternalÉrror (eg, unexpected failure inÜower-level module)" );

451 if–
u£_ªt
 =-(
POLARSSL_ERR_SSL_COUNTER_WRAPPING
) )

452 
	`¢¥ötf
–
buf
, 
buÊí
, "SSL - A counter would wrap (eg,Åoo many messagesÉxchanged)" );

455 #i‡
	`deföed
(
POLARSSL_X509_USE_C
Ë|| deföed(
POLARSSL_X509_CREATE_C
)

456 if–
u£_ªt
 =-(
POLARSSL_ERR_X509_FEATURE_UNAVAILABLE
) )

457 
	`¢¥ötf
–
buf
, 
buÊí
, "X509 - Unavailable feature,É.g. RSA hashing/encryption combination" );

458 if–
u£_ªt
 =-(
POLARSSL_ERR_X509_UNKNOWN_OID
) )

459 
	`¢¥ötf
–
buf
, 
buÊí
, "X509 - Requested OID is unknown" );

460 if–
u£_ªt
 =-(
POLARSSL_ERR_X509_INVALID_FORMAT
) )

461 
	`¢¥ötf
–
buf
, 
buÊí
, "X509 - The CRT/CRL/CSR format is invalid,É.g. differentÅypeÉxpected" );

462 if–
u£_ªt
 =-(
POLARSSL_ERR_X509_INVALID_VERSION
) )

463 
	`¢¥ötf
–
buf
, 
buÊí
, "X509 - The CRT/CRL/CSR versionÉlement is invalid" );

464 if–
u£_ªt
 =-(
POLARSSL_ERR_X509_INVALID_SERIAL
) )

465 
	`¢¥ötf
–
buf
, 
buÊí
, "X509 - The serialÅag or value is invalid" );

466 if–
u£_ªt
 =-(
POLARSSL_ERR_X509_INVALID_ALG
) )

467 
	`¢¥ötf
–
buf
, 
buÊí
, "X509 - TheálgorithmÅag or value is invalid" );

468 if–
u£_ªt
 =-(
POLARSSL_ERR_X509_INVALID_NAME
) )

469 
	`¢¥ötf
–
buf
, 
buÊí
, "X509 - TheÇameÅag or value is invalid" );

470 if–
u£_ªt
 =-(
POLARSSL_ERR_X509_INVALID_DATE
) )

471 
	`¢¥ötf
–
buf
, 
buÊí
, "X509 - The dateÅag or value is invalid" );

472 if–
u£_ªt
 =-(
POLARSSL_ERR_X509_INVALID_SIGNATURE
) )

473 
	`¢¥ötf
–
buf
, 
buÊí
, "X509 - The signatureÅag or value invalid" );

474 if–
u£_ªt
 =-(
POLARSSL_ERR_X509_INVALID_EXTENSIONS
) )

475 
	`¢¥ötf
–
buf
, 
buÊí
, "X509 - TheÉxtensionÅag or value is invalid" );

476 if–
u£_ªt
 =-(
POLARSSL_ERR_X509_UNKNOWN_VERSION
) )

477 
	`¢¥ötf
–
buf
, 
buÊí
, "X509 - CRT/CRL/CSR hasán unsupported versionÇumber" );

478 if–
u£_ªt
 =-(
POLARSSL_ERR_X509_UNKNOWN_SIG_ALG
) )

479 
	`¢¥ötf
–
buf
, 
buÊí
, "X509 - Signatureálgorithm (oid) is unsupported" );

480 if–
u£_ªt
 =-(
POLARSSL_ERR_X509_SIG_MISMATCH
) )

481 
	`¢¥ötf
–
buf
, 
buÊí
, "X509 - Signatureálgorithms doÇot match. (see \\c ::x509_crt sig_oid)" );

482 if–
u£_ªt
 =-(
POLARSSL_ERR_X509_CERT_VERIFY_FAILED
) )

483 
	`¢¥ötf
–
buf
, 
buÊí
, "X509 - Certificate verification failed,É.g. CRL, CA or signature check failed" );

484 if–
u£_ªt
 =-(
POLARSSL_ERR_X509_CERT_UNKNOWN_FORMAT
) )

485 
	`¢¥ötf
–
buf
, 
buÊí
, "X509 - FormatÇotÑecognizedás DER or PEM" );

486 if–
u£_ªt
 =-(
POLARSSL_ERR_X509_BAD_INPUT_DATA
) )

487 
	`¢¥ötf
–
buf
, 
buÊí
, "X509 - Input invalid" );

488 if–
u£_ªt
 =-(
POLARSSL_ERR_X509_MALLOC_FAILED
) )

489 
	`¢¥ötf
–
buf
, 
buÊí
, "X509 - Allocation of memory failed" );

490 if–
u£_ªt
 =-(
POLARSSL_ERR_X509_FILE_IO_ERROR
) )

491 
	`¢¥ötf
–
buf
, 
buÊí
, "X509 - Read/write of file failed" );

495 if–
	`°æí
–
buf
 ) == 0 )

496 
	`¢¥ötf
–
buf
, 
buÊí
, "UNKNOWN ERROR CODE (%04X)", 
u£_ªt
 );

499 
u£_ªt
 = 
ªt
 & ~0xFF80;

501 if–
u£_ªt
 == 0 )

507 
Àn
 = 
	`°æí
–
buf
 );

509 if–
Àn
 > 0 )

511 if–
buÊí
 - 
Àn
 < 5 )

514 
	`¢¥ötf
–
buf
 + 
Àn
, 
buÊí
 -Üen, " : " );

516 
buf
 +
Àn
 + 3;

517 
buÊí
 -
Àn
 + 3;

523 #i‡
	`deföed
(
POLARSSL_AES_C
)

524 if–
u£_ªt
 =-(
POLARSSL_ERR_AES_INVALID_KEY_LENGTH
) )

525 
	`¢¥ötf
–
buf
, 
buÊí
, "AES - Invalid keyÜength" );

526 if–
u£_ªt
 =-(
POLARSSL_ERR_AES_INVALID_INPUT_LENGTH
) )

527 
	`¢¥ötf
–
buf
, 
buÊí
, "AES - Invalid data inputÜength" );

530 #i‡
	`deföed
(
POLARSSL_ASN1_PARSE_C
)

531 if–
u£_ªt
 =-(
POLARSSL_ERR_ASN1_OUT_OF_DATA
) )

532 
	`¢¥ötf
–
buf
, 
buÊí
, "ASN1 - Out of data whenÖarsingán ASN1 data structure" );

533 if–
u£_ªt
 =-(
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
) )

534 
	`¢¥ötf
–
buf
, 
buÊí
, "ASN1 - ASN1Åag was ofán unexpected value" );

535 if–
u£_ªt
 =-(
POLARSSL_ERR_ASN1_INVALID_LENGTH
) )

536 
	`¢¥ötf
–
buf
, 
buÊí
, "ASN1 - Error whenÅryingÅo determineÅheÜength or invalidÜength" );

537 if–
u£_ªt
 =-(
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
) )

538 
	`¢¥ötf
–
buf
, 
buÊí
, "ASN1 - ActualÜength differs fromÉxpectedÜength" );

539 if–
u£_ªt
 =-(
POLARSSL_ERR_ASN1_INVALID_DATA
) )

540 
	`¢¥ötf
–
buf
, 
buÊí
, "ASN1 - Data is invalid. (not used)" );

541 if–
u£_ªt
 =-(
POLARSSL_ERR_ASN1_MALLOC_FAILED
) )

542 
	`¢¥ötf
–
buf
, 
buÊí
, "ASN1 - Memoryállocation failed" );

543 if–
u£_ªt
 =-(
POLARSSL_ERR_ASN1_BUF_TOO_SMALL
) )

544 
	`¢¥ötf
–
buf
, 
buÊí
, "ASN1 - BufferÅoo small when writing ASN.1 data structure" );

547 #i‡
	`deföed
(
POLARSSL_BASE64_C
)

548 if–
u£_ªt
 =-(
POLARSSL_ERR_BASE64_BUFFER_TOO_SMALL
) )

549 
	`¢¥ötf
–
buf
, 
buÊí
, "BASE64 - Output bufferÅoo small" );

550 if–
u£_ªt
 =-(
POLARSSL_ERR_BASE64_INVALID_CHARACTER
) )

551 
	`¢¥ötf
–
buf
, 
buÊí
, "BASE64 - Invalid character in input" );

554 #i‡
	`deföed
(
POLARSSL_BIGNUM_C
)

555 if–
u£_ªt
 =-(
POLARSSL_ERR_MPI_FILE_IO_ERROR
) )

556 
	`¢¥ötf
–
buf
, 
buÊí
, "BIGNUM - AnÉrror occurred whileÑeading from or writingÅoá file" );

557 if–
u£_ªt
 =-(
POLARSSL_ERR_MPI_BAD_INPUT_DATA
) )

558 
	`¢¥ötf
–
buf
, 
buÊí
, "BIGNUM - Bad inputÖarametersÅo function" );

559 if–
u£_ªt
 =-(
POLARSSL_ERR_MPI_INVALID_CHARACTER
) )

560 
	`¢¥ötf
–
buf
, 
buÊí
, "BIGNUM - There isán invalid character inÅhe digit string" );

561 if–
u£_ªt
 =-(
POLARSSL_ERR_MPI_BUFFER_TOO_SMALL
) )

562 
	`¢¥ötf
–
buf
, 
buÊí
, "BIGNUM - The buffer isÅoo smallÅo writeÅo" );

563 if–
u£_ªt
 =-(
POLARSSL_ERR_MPI_NEGATIVE_VALUE
) )

564 
	`¢¥ötf
–
buf
, 
buÊí
, "BIGNUM - The inputárgumentsáreÇegative orÑesult in illegal output" );

565 if–
u£_ªt
 =-(
POLARSSL_ERR_MPI_DIVISION_BY_ZERO
) )

566 
	`¢¥ötf
–
buf
, 
buÊí
, "BIGNUM - The inputárgument for division is zero, which isÇotállowed" );

567 if–
u£_ªt
 =-(
POLARSSL_ERR_MPI_NOT_ACCEPTABLE
) )

568 
	`¢¥ötf
–
buf
, 
buÊí
, "BIGNUM - The inputárgumentsáreÇotácceptable" );

569 if–
u£_ªt
 =-(
POLARSSL_ERR_MPI_MALLOC_FAILED
) )

570 
	`¢¥ötf
–
buf
, 
buÊí
, "BIGNUM - Memoryállocation failed" );

573 #i‡
	`deföed
(
POLARSSL_BLOWFISH_C
)

574 if–
u£_ªt
 =-(
POLARSSL_ERR_BLOWFISH_INVALID_KEY_LENGTH
) )

575 
	`¢¥ötf
–
buf
, 
buÊí
, "BLOWFISH - Invalid keyÜength" );

576 if–
u£_ªt
 =-(
POLARSSL_ERR_BLOWFISH_INVALID_INPUT_LENGTH
) )

577 
	`¢¥ötf
–
buf
, 
buÊí
, "BLOWFISH - Invalid data inputÜength" );

580 #i‡
	`deföed
(
POLARSSL_CAMELLIA_C
)

581 if–
u£_ªt
 =-(
POLARSSL_ERR_CAMELLIA_INVALID_KEY_LENGTH
) )

582 
	`¢¥ötf
–
buf
, 
buÊí
, "CAMELLIA - Invalid keyÜength" );

583 if–
u£_ªt
 =-(
POLARSSL_ERR_CAMELLIA_INVALID_INPUT_LENGTH
) )

584 
	`¢¥ötf
–
buf
, 
buÊí
, "CAMELLIA - Invalid data inputÜength" );

587 #i‡
	`deföed
(
POLARSSL_CCM_C
)

588 if–
u£_ªt
 =-(
POLARSSL_ERR_CCM_BAD_INPUT
) )

589 
	`¢¥ötf
–
buf
, 
buÊí
, "CCM - Bad inputÖarametersÅo function" );

590 if–
u£_ªt
 =-(
POLARSSL_ERR_CCM_AUTH_FAILED
) )

591 
	`¢¥ötf
–
buf
, 
buÊí
, "CCM - Authenticated decryption failed" );

594 #i‡
	`deföed
(
POLARSSL_CTR_DRBG_C
)

595 if–
u£_ªt
 =-(
POLARSSL_ERR_CTR_DRBG_ENTROPY_SOURCE_FAILED
) )

596 
	`¢¥ötf
–
buf
, 
buÊí
, "CTR_DRBG - TheÉntropy source failed" );

597 if–
u£_ªt
 =-(
POLARSSL_ERR_CTR_DRBG_REQUEST_TOO_BIG
) )

598 
	`¢¥ötf
–
buf
, 
buÊí
, "CTR_DRBG - Too manyÑandomÑequested in single call" );

599 if–
u£_ªt
 =-(
POLARSSL_ERR_CTR_DRBG_INPUT_TOO_BIG
) )

600 
	`¢¥ötf
–
buf
, 
buÊí
, "CTR_DRBG - InputÅooÜarge (Entropy +ádditional)" );

601 if–
u£_ªt
 =-(
POLARSSL_ERR_CTR_DRBG_FILE_IO_ERROR
) )

602 
	`¢¥ötf
–
buf
, 
buÊí
, "CTR_DRBG - Read/writeÉrror in file" );

605 #i‡
	`deföed
(
POLARSSL_DES_C
)

606 if–
u£_ªt
 =-(
POLARSSL_ERR_DES_INVALID_INPUT_LENGTH
) )

607 
	`¢¥ötf
–
buf
, 
buÊí
, "DES - The data input hasán invalidÜength" );

610 #i‡
	`deföed
(
POLARSSL_ENTROPY_C
)

611 if–
u£_ªt
 =-(
POLARSSL_ERR_ENTROPY_SOURCE_FAILED
) )

612 
	`¢¥ötf
–
buf
, 
buÊí
, "ENTROPY - CriticalÉntropy source failure" );

613 if–
u£_ªt
 =-(
POLARSSL_ERR_ENTROPY_MAX_SOURCES
) )

614 
	`¢¥ötf
–
buf
, 
buÊí
, "ENTROPY - No more sources can beádded" );

615 if–
u£_ªt
 =-(
POLARSSL_ERR_ENTROPY_NO_SOURCES_DEFINED
) )

616 
	`¢¥ötf
–
buf
, 
buÊí
, "ENTROPY - No sources have beenáddedÅoÖoll" );

617 if–
u£_ªt
 =-(
POLARSSL_ERR_ENTROPY_FILE_IO_ERROR
) )

618 
	`¢¥ötf
–
buf
, 
buÊí
, "ENTROPY - Read/writeÉrror in file" );

621 #i‡
	`deföed
(
POLARSSL_GCM_C
)

622 if–
u£_ªt
 =-(
POLARSSL_ERR_GCM_AUTH_FAILED
) )

623 
	`¢¥ötf
–
buf
, 
buÊí
, "GCM - Authenticated decryption failed" );

624 if–
u£_ªt
 =-(
POLARSSL_ERR_GCM_BAD_INPUT
) )

625 
	`¢¥ötf
–
buf
, 
buÊí
, "GCM - Bad inputÖarametersÅo function" );

628 #i‡
	`deföed
(
POLARSSL_HMAC_DRBG_C
)

629 if–
u£_ªt
 =-(
POLARSSL_ERR_HMAC_DRBG_REQUEST_TOO_BIG
) )

630 
	`¢¥ötf
–
buf
, 
buÊí
, "HMAC_DRBG - Too manyÑandomÑequested in single call" );

631 if–
u£_ªt
 =-(
POLARSSL_ERR_HMAC_DRBG_INPUT_TOO_BIG
) )

632 
	`¢¥ötf
–
buf
, 
buÊí
, "HMAC_DRBG - InputÅooÜarge (Entropy +ádditional)" );

633 if–
u£_ªt
 =-(
POLARSSL_ERR_HMAC_DRBG_FILE_IO_ERROR
) )

634 
	`¢¥ötf
–
buf
, 
buÊí
, "HMAC_DRBG - Read/writeÉrror in file" );

635 if–
u£_ªt
 =-(
POLARSSL_ERR_HMAC_DRBG_ENTROPY_SOURCE_FAILED
) )

636 
	`¢¥ötf
–
buf
, 
buÊí
, "HMAC_DRBG - TheÉntropy source failed" );

639 #i‡
	`deföed
(
POLARSSL_MD2_C
)

640 if–
u£_ªt
 =-(
POLARSSL_ERR_MD2_FILE_IO_ERROR
) )

641 
	`¢¥ötf
–
buf
, 
buÊí
, "MD2 - Read/writeÉrror in file" );

644 #i‡
	`deföed
(
POLARSSL_MD4_C
)

645 if–
u£_ªt
 =-(
POLARSSL_ERR_MD4_FILE_IO_ERROR
) )

646 
	`¢¥ötf
–
buf
, 
buÊí
, "MD4 - Read/writeÉrror in file" );

649 #i‡
	`deföed
(
POLARSSL_MD5_C
)

650 if–
u£_ªt
 =-(
POLARSSL_ERR_MD5_FILE_IO_ERROR
) )

651 
	`¢¥ötf
–
buf
, 
buÊí
, "MD5 - Read/writeÉrror in file" );

654 #i‡
	`deföed
(
POLARSSL_NET_C
)

655 if–
u£_ªt
 =-(
POLARSSL_ERR_NET_UNKNOWN_HOST
) )

656 
	`¢¥ötf
–
buf
, 
buÊí
, "NET - FailedÅo getán IPáddress forÅhe given hostname" );

657 if–
u£_ªt
 =-(
POLARSSL_ERR_NET_SOCKET_FAILED
) )

658 
	`¢¥ötf
–
buf
, 
buÊí
, "NET - FailedÅo opená socket" );

659 if–
u£_ªt
 =-(
POLARSSL_ERR_NET_CONNECT_FAILED
) )

660 
	`¢¥ötf
–
buf
, 
buÊí
, "NET - The connectionÅoÅhe given server /Öort failed" );

661 if–
u£_ªt
 =-(
POLARSSL_ERR_NET_BIND_FAILED
) )

662 
	`¢¥ötf
–
buf
, 
buÊí
, "NET - Binding ofÅhe socket failed" );

663 if–
u£_ªt
 =-(
POLARSSL_ERR_NET_LISTEN_FAILED
) )

664 
	`¢¥ötf
–
buf
, 
buÊí
, "NET - CouldÇotÜisten onÅhe socket" );

665 if–
u£_ªt
 =-(
POLARSSL_ERR_NET_ACCEPT_FAILED
) )

666 
	`¢¥ötf
–
buf
, 
buÊí
, "NET - CouldÇotácceptÅhe incoming connection" );

667 if–
u£_ªt
 =-(
POLARSSL_ERR_NET_RECV_FAILED
) )

668 
	`¢¥ötf
–
buf
, 
buÊí
, "NET - Reading information fromÅhe socket failed" );

669 if–
u£_ªt
 =-(
POLARSSL_ERR_NET_SEND_FAILED
) )

670 
	`¢¥ötf
–
buf
, 
buÊí
, "NET - Sending informationÅhroughÅhe socket failed" );

671 if–
u£_ªt
 =-(
POLARSSL_ERR_NET_CONN_RESET
) )

672 
	`¢¥ötf
–
buf
, 
buÊí
, "NET - Connection wasÑeset byÖeer" );

673 if–
u£_ªt
 =-(
POLARSSL_ERR_NET_WANT_READ
) )

674 
	`¢¥ötf
–
buf
, 
buÊí
, "NET - ConnectionÑequiresáÑead call" );

675 if–
u£_ªt
 =-(
POLARSSL_ERR_NET_WANT_WRITE
) )

676 
	`¢¥ötf
–
buf
, 
buÊí
, "NET - ConnectionÑequiresá write call" );

679 #i‡
	`deföed
(
POLARSSL_OID_C
)

680 if–
u£_ªt
 =-(
POLARSSL_ERR_OID_NOT_FOUND
) )

681 
	`¢¥ötf
–
buf
, 
buÊí
, "OID - OID isÇot found" );

682 if–
u£_ªt
 =-(
POLARSSL_ERR_OID_BUF_TOO_SMALL
) )

683 
	`¢¥ötf
–
buf
, 
buÊí
, "OID - output buffer isÅoo small" );

686 #i‡
	`deföed
(
POLARSSL_PADLOCK_C
)

687 if–
u£_ªt
 =-(
POLARSSL_ERR_PADLOCK_DATA_MISALIGNED
) )

688 
	`¢¥ötf
–
buf
, 
buÊí
, "PADLOCK - Input data should beáligned" );

691 #i‡
	`deföed
(
POLARSSL_PBKDF2_C
)

692 if–
u£_ªt
 =-(
POLARSSL_ERR_PBKDF2_BAD_INPUT_DATA
) )

693 
	`¢¥ötf
–
buf
, 
buÊí
, "PBKDF2 - Bad inputÖarametersÅo function" );

696 #i‡
	`deföed
(
POLARSSL_RIPEMD160_C
)

697 if–
u£_ªt
 =-(
POLARSSL_ERR_RIPEMD160_FILE_IO_ERROR
) )

698 
	`¢¥ötf
–
buf
, 
buÊí
, "RIPEMD160 - Read/writeÉrror in file" );

701 #i‡
	`deföed
(
POLARSSL_SHA1_C
)

702 if–
u£_ªt
 =-(
POLARSSL_ERR_SHA1_FILE_IO_ERROR
) )

703 
	`¢¥ötf
–
buf
, 
buÊí
, "SHA1 - Read/writeÉrror in file" );

706 #i‡
	`deföed
(
POLARSSL_SHA256_C
)

707 if–
u£_ªt
 =-(
POLARSSL_ERR_SHA256_FILE_IO_ERROR
) )

708 
	`¢¥ötf
–
buf
, 
buÊí
, "SHA256 - Read/writeÉrror in file" );

711 #i‡
	`deföed
(
POLARSSL_SHA512_C
)

712 if–
u£_ªt
 =-(
POLARSSL_ERR_SHA512_FILE_IO_ERROR
) )

713 
	`¢¥ötf
–
buf
, 
buÊí
, "SHA512 - Read/writeÉrror in file" );

716 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

717 if–
u£_ªt
 =-(
POLARSSL_ERR_THREADING_FEATURE_UNAVAILABLE
) )

718 
	`¢¥ötf
–
buf
, 
buÊí
, "THREADING - The selected feature isÇotávailable" );

719 if–
u£_ªt
 =-(
POLARSSL_ERR_THREADING_BAD_INPUT_DATA
) )

720 
	`¢¥ötf
–
buf
, 
buÊí
, "THREADING - Bad inputÖarametersÅo function" );

721 if–
u£_ªt
 =-(
POLARSSL_ERR_THREADING_MUTEX_ERROR
) )

722 
	`¢¥ötf
–
buf
, 
buÊí
, "THREADING - Locking / unlocking / free failed withÉrror code" );

725 #i‡
	`deföed
(
POLARSSL_XTEA_C
)

726 if–
u£_ªt
 =-(
POLARSSL_ERR_XTEA_INVALID_INPUT_LENGTH
) )

727 
	`¢¥ötf
–
buf
, 
buÊí
, "XTEA - The data input hasán invalidÜength" );

731 if–
	`°æí
–
buf
 ) != 0 )

734 
	`¢¥ötf
–
buf
, 
buÊí
, "UNKNOWN ERROR CODE (%04X)", 
u£_ªt
 );

735 
	}
}

737 #i‡
deföed
(
POLARSSL_ERROR_STRERROR_BC
)

738 
	$îr‹_°ªº‹
–
ªt
, *
buf
, 
size_t
 
buÊí
 )

740 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 
buÊí
 );

741 
	}
}

746 #i‡
deföed
(
POLARSSL_ERROR_STRERROR_DUMMY
)

748 
	~<°rög.h
>

753 
	$pﬁ¨s¶_°ªº‹
–
ªt
, *
buf
, 
size_t
 
buÊí
 )

755 ((Ë
ªt
);

757 if–
buÊí
 > 0 )

758 
buf
[0] = '\0';

759 
	}
}

761 #i‡
deföed
(
POLARSSL_ERROR_STRERROR_BC
)

762 
	$îr‹_°ªº‹
–
ªt
, *
buf
, 
size_t
 
buÊí
 )

764 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 
buÊí
 );

765 
	}
}

	@polarssl/library/gcm.c

36 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

37 
	~"pﬁ¨s¶/c⁄fig.h
"

39 #ö˛udê
POLARSSL_CONFIG_FILE


42 #i‡
deföed
(
POLARSSL_GCM_C
)

44 
	~"pﬁ¨s¶/gcm.h
"

46 #i‡
deföed
(
POLARSSL_AESNI_C
)

47 
	~"pﬁ¨s¶/´¢i.h
"

50 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

51 
	~"pﬁ¨s¶/∂©f‹m.h
"

53 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

59 #i‚de‡
GET_UINT32_BE


60 
	#GET_UINT32_BE
(
n
,
b
,
i
) \

62 (
n
Ë–(
uöt32_t
Ë(
b
)[(
i
) ] << 24 ) \

63 | ( (
uöt32_t
Ë(
b
)[(
i
) + 1] << 16 ) \

64 | ( (
uöt32_t
Ë(
b
)[(
i
) + 2] << 8 ) \

65 | ( (
uöt32_t
Ë(
b
)[(
i
) + 3] ); \

66 }

	)

69 #i‚de‡
PUT_UINT32_BE


70 
	#PUT_UINT32_BE
(
n
,
b
,
i
) \

72 (
b
)[(
i
Ë] = (Ë–(
n
) >> 24 ); \

73 (
b
)[(
i
Ë+ 1] = (Ë–(
n
) >> 16 ); \

74 (
b
)[(
i
Ë+ 2] = (Ë–(
n
) >> 8 ); \

75 (
b
)[(
i
Ë+ 3] = (Ë–(
n
) ); \

76 }

	)

80 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

81 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

82 
	}
}

92 
	$gcm_gí_èbÀ
–
gcm_c⁄ãxt
 *
˘x
 )

94 
ªt
, 
i
, 
j
;

95 
uöt64_t
 
hi
, 
lo
;

96 
uöt64_t
 
vl
, 
vh
;

97 
h
[16];

98 
size_t
 
ﬁí
 = 0;

100 
	`mem£t
–
h
, 0, 16 );

101 if––
ªt
 = 
	`cùhî_upd©e
–&
˘x
->
cùhî_˘x
, 
h
, 16, h, &
ﬁí
 ) ) != 0 )

102 –
ªt
 );

105 
	`GET_UINT32_BE
–
hi
, 
h
, 0 );

106 
	`GET_UINT32_BE
–
lo
, 
h
, 4 );

107 
vh
 = (
uöt64_t
Ë
hi
 << 32 | 
lo
;

109 
	`GET_UINT32_BE
–
hi
, 
h
, 8 );

110 
	`GET_UINT32_BE
–
lo
, 
h
, 12 );

111 
vl
 = (
uöt64_t
Ë
hi
 << 32 | 
lo
;

114 
˘x
->
HL
[8] = 
vl
;

115 
˘x
->
HH
[8] = 
vh
;

117 #i‡
	`deföed
(
POLARSSL_AESNI_C
Ë&& deföed(
POLARSSL_HAVE_X86_64
)

119 if–
	`´¢i_suµ‹ts
–
POLARSSL_AESNI_CLMUL
 ) )

124 
˘x
->
HH
[0] = 0;

125 
˘x
->
HL
[0] = 0;

127  
i
 = 4; i > 0; i >>= 1 )

129 
uöt32_t
 
T
 = ( 
vl
 & 1 ) * 0xe1000000U;

130 
vl
 = ( 
vh
 << 63 ) | ( vl >> 1 );

131 
vh
 = ( vh >> 1 ) ^ ( (
uöt64_t
Ë
T
 << 32);

133 
˘x
->
HL
[
i
] = 
vl
;

134 
˘x
->
HH
[
i
] = 
vh
;

137  
i
 = 2; i < 16; i <<= 1 )

139 
uöt64_t
 *
HiL
 = 
˘x
->
HL
 + 
i
, *
HiH
 = ctx->
HH
 + i;

140 
vh
 = *
HiH
;

141 
vl
 = *
HiL
;

142  
j
 = 1; j < 
i
; j++ )

144 
HiH
[
j
] = 
vh
 ^ 
˘x
->
HH
[j];

145 
HiL
[
j
] = 
vl
 ^ 
˘x
->
HL
[j];

150 
	}
}

152 
	$gcm_öô
–
gcm_c⁄ãxt
 *
˘x
, 
cùhî_id_t
 
cùhî
, c⁄° *
key
,

153 
keysize
 )

155 
ªt
;

156 c⁄° 
cùhî_öfo_t
 *
cùhî_öfo
;

158 
	`mem£t
–
˘x
, 0, (
gcm_c⁄ãxt
) );

160 
	`cùhî_öô
–&
˘x
->
cùhî_˘x
 );

162 
cùhî_öfo
 = 
	`cùhî_öfo_‰om_vÆues
–
cùhî
, 
keysize
, 
POLARSSL_MODE_ECB
 );

163 if–
cùhî_öfo
 =
NULL
 )

164 –
POLARSSL_ERR_GCM_BAD_INPUT
 );

166 if–
cùhî_öfo
->
block_size
 != 16 )

167 –
POLARSSL_ERR_GCM_BAD_INPUT
 );

169 if––
ªt
 = 
	`cùhî_öô_˘x
–&
˘x
->
cùhî_˘x
, 
cùhî_öfo
 ) ) != 0 )

170 –
ªt
 );

172 if––
ªt
 = 
	`cùhî_£tkey
–&
˘x
->
cùhî_˘x
, 
key
, 
keysize
,

173 
POLARSSL_ENCRYPT
 ) ) != 0 )

175 –
ªt
 );

178 if––
ªt
 = 
	`gcm_gí_èbÀ
–
˘x
 ) ) != 0 )

179 –
ªt
 );

182 
	}
}

189 c⁄° 
uöt64_t
 
	gœ°4
[16] =

201 
	$gcm_mu…
–
gcm_c⁄ãxt
 *
˘x
, c⁄° 
x
[16],

202 
ouçut
[16] )

204 
i
 = 0;

205 
lo
, 
hi
, 
ªm
;

206 
uöt64_t
 
zh
, 
zl
;

208 #i‡
	`deföed
(
POLARSSL_AESNI_C
Ë&& deföed(
POLARSSL_HAVE_X86_64
)

209 if–
	`´¢i_suµ‹ts
–
POLARSSL_AESNI_CLMUL
 ) ) {

210 
h
[16];

212 
	`PUT_UINT32_BE
–
˘x
->
HH
[8] >> 32, 
h
, 0 );

213 
	`PUT_UINT32_BE
–
˘x
->
HH
[8], 
h
, 4 );

214 
	`PUT_UINT32_BE
–
˘x
->
HL
[8] >> 32, 
h
, 8 );

215 
	`PUT_UINT32_BE
–
˘x
->
HL
[8], 
h
, 12 );

217 
	`´¢i_gcm_mu…
–
ouçut
, 
x
, 
h
 );

222 
lo
 = 
x
[15] & 0xf;

223 
hi
 = 
x
[15] >> 4;

225 
zh
 = 
˘x
->
HH
[
lo
];

226 
zl
 = 
˘x
->
HL
[
lo
];

228  
i
 = 15; i >= 0; i-- )

230 
lo
 = 
x
[
i
] & 0xf;

231 
hi
 = 
x
[
i
] >> 4;

233 if–
i
 != 15 )

235 
ªm
 = (Ë
zl
 & 0xf;

236 
zl
 = ( 
zh
 << 60 ) | ( zl >> 4 );

237 
zh
 = ( zh >> 4 );

238 
zh
 ^(
uöt64_t
Ë
œ°4
[
ªm
] << 48;

239 
zh
 ^
˘x
->
HH
[
lo
];

240 
zl
 ^
˘x
->
HL
[
lo
];

244 
ªm
 = (Ë
zl
 & 0xf;

245 
zl
 = ( 
zh
 << 60 ) | ( zl >> 4 );

246 
zh
 = ( zh >> 4 );

247 
zh
 ^(
uöt64_t
Ë
œ°4
[
ªm
] << 48;

248 
zh
 ^
˘x
->
HH
[
hi
];

249 
zl
 ^
˘x
->
HL
[
hi
];

252 
	`PUT_UINT32_BE
–
zh
 >> 32, 
ouçut
, 0 );

253 
	`PUT_UINT32_BE
–
zh
, 
ouçut
, 4 );

254 
	`PUT_UINT32_BE
–
zl
 >> 32, 
ouçut
, 8 );

255 
	`PUT_UINT32_BE
–
zl
, 
ouçut
, 12 );

256 
	}
}

258 
	$gcm_°¨ts
–
gcm_c⁄ãxt
 *
˘x
,

259 
mode
,

260 c⁄° *
iv
,

261 
size_t
 
iv_Àn
,

262 c⁄° *
add
,

263 
size_t
 
add_Àn
 )

265 
ªt
;

266 
w‹k_buf
[16];

267 
size_t
 
i
;

268 c⁄° *
p
;

269 
size_t
 
u£_Àn
, 
ﬁí
 = 0;

272 if––(
uöt64_t
Ë
iv_Àn
 ) >> 61 != 0 ||

273 –(
uöt64_t
Ë
add_Àn
 ) >> 61 != 0 )

275 –
POLARSSL_ERR_GCM_BAD_INPUT
 );

278 
	`mem£t
–
˘x
->
y
, 0x00, (ctx->y) );

279 
	`mem£t
–
˘x
->
buf
, 0x00, (ctx->buf) );

281 
˘x
->
mode
 = mode;

282 
˘x
->
Àn
 = 0;

283 
˘x
->
add_Àn
 = 0;

285 if–
iv_Àn
 == 12 )

287 
	`mem˝y
–
˘x
->
y
, 
iv
, 
iv_Àn
 );

288 
˘x
->
y
[15] = 1;

292 
	`mem£t
–
w‹k_buf
, 0x00, 16 );

293 
	`PUT_UINT32_BE
–
iv_Àn
 * 8, 
w‹k_buf
, 12 );

295 
p
 = 
iv
;

296  
iv_Àn
 > 0 )

298 
u£_Àn
 = ( 
iv_Àn
 < 16 ) ? iv_len : 16;

300  
i
 = 0; i < 
u£_Àn
; i++ )

301 
˘x
->
y
[
i
] ^
p
[i];

303 
	`gcm_mu…
–
˘x
, ctx->
y
, ctx->y );

305 
iv_Àn
 -
u£_Àn
;

306 
p
 +
u£_Àn
;

309  
i
 = 0; i < 16; i++ )

310 
˘x
->
y
[
i
] ^
w‹k_buf
[i];

312 
	`gcm_mu…
–
˘x
, ctx->
y
, ctx->y );

315 if––
ªt
 = 
	`cùhî_upd©e
–&
˘x
->
cùhî_˘x
, ctx->
y
, 16, ctx->
ba£_e˘r
,

316 &
ﬁí
 ) ) != 0 )

318 –
ªt
 );

321 
˘x
->
add_Àn
 =ádd_len;

322 
p
 = 
add
;

323  
add_Àn
 > 0 )

325 
u£_Àn
 = ( 
add_Àn
 < 16 ) ?ádd_len : 16;

327  
i
 = 0; i < 
u£_Àn
; i++ )

328 
˘x
->
buf
[
i
] ^
p
[i];

330 
	`gcm_mu…
–
˘x
, ctx->
buf
, ctx->buf );

332 
add_Àn
 -
u£_Àn
;

333 
p
 +
u£_Àn
;

337 
	}
}

339 
	$gcm_upd©e
–
gcm_c⁄ãxt
 *
˘x
,

340 
size_t
 
Àngth
,

341 c⁄° *
öput
,

342 *
ouçut
 )

344 
ªt
;

345 
e˘r
[16];

346 
size_t
 
i
;

347 c⁄° *
p
;

348 *
out_p
 = 
ouçut
;

349 
size_t
 
u£_Àn
, 
ﬁí
 = 0;

351 if–
ouçut
 > 
öput
 && (
size_t
Ë–ouçuà- i≈uàË< 
Àngth
 )

352 –
POLARSSL_ERR_GCM_BAD_INPUT
 );

356 if–
˘x
->
Àn
 + 
Àngth
 < ctx->len ||

357 (
uöt64_t
Ë
˘x
->
Àn
 + 
Àngth
 > 0x03FFFFE0llu )

359 –
POLARSSL_ERR_GCM_BAD_INPUT
 );

362 
˘x
->
Àn
 +
Àngth
;

364 
p
 = 
öput
;

365  
Àngth
 > 0 )

367 
u£_Àn
 = ( 
Àngth
 < 16 ) ?Üength : 16;

369  
i
 = 16; i > 12; i-- )

370 if–++
˘x
->
y
[
i
 - 1] != 0 )

373 if––
ªt
 = 
	`cùhî_upd©e
–&
˘x
->
cùhî_˘x
, ctx->
y
, 16, 
e˘r
,

374 &
ﬁí
 ) ) != 0 )

376 –
ªt
 );

379  
i
 = 0; i < 
u£_Àn
; i++ )

381 if–
˘x
->
mode
 =
GCM_DECRYPT
 )

382 
˘x
->
buf
[
i
] ^
p
[i];

383 
out_p
[
i
] = 
e˘r
[i] ^ 
p
[i];

384 if–
˘x
->
mode
 =
GCM_ENCRYPT
 )

385 
˘x
->
buf
[
i
] ^
out_p
[i];

388 
	`gcm_mu…
–
˘x
, ctx->
buf
, ctx->buf );

390 
Àngth
 -
u£_Àn
;

391 
p
 +
u£_Àn
;

392 
out_p
 +
u£_Àn
;

396 
	}
}

398 
	$gcm_föish
–
gcm_c⁄ãxt
 *
˘x
,

399 *
èg
,

400 
size_t
 
èg_Àn
 )

402 
w‹k_buf
[16];

403 
size_t
 
i
;

404 
uöt64_t
 
‹ig_Àn
 = 
˘x
->
Àn
 * 8;

405 
uöt64_t
 
‹ig_add_Àn
 = 
˘x
->
add_Àn
 * 8;

407 if–
èg_Àn
 > 16 ||Åag_len < 4 )

408 –
POLARSSL_ERR_GCM_BAD_INPUT
 );

410 if–
èg_Àn
 != 0 )

411 
	`mem˝y
–
èg
, 
˘x
->
ba£_e˘r
, 
èg_Àn
 );

413 if–
‹ig_Àn
 || 
‹ig_add_Àn
 )

415 
	`mem£t
–
w‹k_buf
, 0x00, 16 );

417 
	`PUT_UINT32_BE
––
‹ig_add_Àn
 >> 32 ), 
w‹k_buf
, 0 );

418 
	`PUT_UINT32_BE
––
‹ig_add_Àn
 ), 
w‹k_buf
, 4 );

419 
	`PUT_UINT32_BE
––
‹ig_Àn
 >> 32 ), 
w‹k_buf
, 8 );

420 
	`PUT_UINT32_BE
––
‹ig_Àn
 ), 
w‹k_buf
, 12 );

422  
i
 = 0; i < 16; i++ )

423 
˘x
->
buf
[
i
] ^
w‹k_buf
[i];

425 
	`gcm_mu…
–
˘x
, ctx->
buf
, ctx->buf );

427  
i
 = 0; i < 
èg_Àn
; i++ )

428 
èg
[
i
] ^
˘x
->
buf
[i];

432 
	}
}

434 
	$gcm_¸y±_™d_èg
–
gcm_c⁄ãxt
 *
˘x
,

435 
mode
,

436 
size_t
 
Àngth
,

437 c⁄° *
iv
,

438 
size_t
 
iv_Àn
,

439 c⁄° *
add
,

440 
size_t
 
add_Àn
,

441 c⁄° *
öput
,

442 *
ouçut
,

443 
size_t
 
èg_Àn
,

444 *
èg
 )

446 
ªt
;

448 if––
ªt
 = 
	`gcm_°¨ts
–
˘x
, 
mode
, 
iv
, 
iv_Àn
, 
add
, 
add_Àn
 ) ) != 0 )

449 –
ªt
 );

451 if––
ªt
 = 
	`gcm_upd©e
–
˘x
, 
Àngth
, 
öput
, 
ouçut
 ) ) != 0 )

452 –
ªt
 );

454 if––
ªt
 = 
	`gcm_föish
–
˘x
, 
èg
, 
èg_Àn
 ) ) != 0 )

455 –
ªt
 );

458 
	}
}

460 
	$gcm_auth_de¸y±
–
gcm_c⁄ãxt
 *
˘x
,

461 
size_t
 
Àngth
,

462 c⁄° *
iv
,

463 
size_t
 
iv_Àn
,

464 c⁄° *
add
,

465 
size_t
 
add_Àn
,

466 c⁄° *
èg
,

467 
size_t
 
èg_Àn
,

468 c⁄° *
öput
,

469 *
ouçut
 )

471 
ªt
;

472 
check_èg
[16];

473 
size_t
 
i
;

474 
diff
;

476 if––
ªt
 = 
	`gcm_¸y±_™d_èg
–
˘x
, 
GCM_DECRYPT
, 
Àngth
,

477 
iv
, 
iv_Àn
, 
add
, 
add_Àn
,

478 
öput
, 
ouçut
, 
èg_Àn
, 
check_èg
 ) ) != 0 )

480 –
ªt
 );

484  
diff
 = 0, 
i
 = 0; i < 
èg_Àn
; i++ )

485 
diff
 |
èg
[
i
] ^ 
check_èg
[i];

487 if–
diff
 != 0 )

489 
	`pﬁ¨s¶_zîoize
–
ouçut
, 
Àngth
 );

490 –
POLARSSL_ERR_GCM_AUTH_FAILED
 );

494 
	}
}

496 
	$gcm_‰ì
–
gcm_c⁄ãxt
 *
˘x
 )

498 
	`cùhî_‰ì
–&
˘x
->
cùhî_˘x
 );

499 
	`pﬁ¨s¶_zîoize
–
˘x
, –
gcm_c⁄ãxt
 ) );

500 
	}
}

502 #i‡
deföed
(
POLARSSL_SELF_TEST
Ë&& deföed(
POLARSSL_AES_C
)

504 
	~<°dio.h
>

511 
	#MAX_TESTS
 6

	)

513 
	gkey_ödex
[
MAX_TESTS
] =

516 
	gkey
[
MAX_TESTS
][32] =

528 
size_t
 
	giv_Àn
[
MAX_TESTS
] =

531 
	giv_ödex
[
MAX_TESTS
] =

534 
	giv
[
MAX_TESTS
][64] =

550 
size_t
 
	gadd_Àn
[
MAX_TESTS
] =

553 
	gadd_ödex
[
MAX_TESTS
] =

556 
	gaddôi⁄Æ
[
MAX_TESTS
][64] =

564 
size_t
 
	g±_Àn
[
MAX_TESTS
] =

567 
	g±_ödex
[
MAX_TESTS
] =

570 
	g±
[
MAX_TESTS
][64] =

584 
	g˘
[
MAX_TESTS
 * 3][64] =

693 
	gèg
[
MAX_TESTS
 * 3][16] =

733 
	$gcm_£lf_ã°
–
vîbo£
 )

735 
gcm_c⁄ãxt
 
˘x
;

736 
buf
[64];

737 
èg_buf
[16];

738 
i
, 
j
, 
ªt
;

739 
cùhî_id_t
 
cùhî
 = 
POLARSSL_CIPHER_ID_AES
;

741  
j
 = 0; j < 3; j++ )

743 
key_Àn
 = 128 + 64 * 
j
;

745  
i
 = 0; i < 
MAX_TESTS
; i++ )

747 if–
vîbo£
 != 0 )

748 
	`pﬁ¨s¶_¥ötf
( " AES-GCM-%3d #%d (%s): ",

749 
key_Àn
, 
i
, "enc" );

751 
	`gcm_öô
–&
˘x
, 
cùhî
, 
key
[
key_ödex
[
i
]], 
key_Àn
 );

753 
ªt
 = 
	`gcm_¸y±_™d_èg
–&
˘x
, 
GCM_ENCRYPT
,

754 
±_Àn
[
i
],

755 
iv
[
iv_ödex
[
i
]], 
iv_Àn
[i],

756 
addôi⁄Æ
[
add_ödex
[
i
]], 
add_Àn
[i],

757 
±
[
±_ödex
[
i
]], 
buf
, 16, 
èg_buf
 );

759 if–
ªt
 != 0 ||

760 
	`memcmp
–
buf
, 
˘
[
j
 * 6 + 
i
], 
±_Àn
[i] ) != 0 ||

761 
	`memcmp
–
èg_buf
, 
èg
[
j
 * 6 + 
i
], 16 ) != 0 )

763 if–
vîbo£
 != 0 )

764 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

769 
	`gcm_‰ì
–&
˘x
 );

771 if–
vîbo£
 != 0 )

772 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

774 if–
vîbo£
 != 0 )

775 
	`pﬁ¨s¶_¥ötf
( " AES-GCM-%3d #%d (%s): ",

776 
key_Àn
, 
i
, "dec" );

778 
	`gcm_öô
–&
˘x
, 
cùhî
, 
key
[
key_ödex
[
i
]], 
key_Àn
 );

780 
ªt
 = 
	`gcm_¸y±_™d_èg
–&
˘x
, 
GCM_DECRYPT
,

781 
±_Àn
[
i
],

782 
iv
[
iv_ödex
[
i
]], 
iv_Àn
[i],

783 
addôi⁄Æ
[
add_ödex
[
i
]], 
add_Àn
[i],

784 
˘
[
j
 * 6 + 
i
], 
buf
, 16, 
èg_buf
 );

786 if–
ªt
 != 0 ||

787 
	`memcmp
–
buf
, 
±
[
±_ödex
[
i
]], 
±_Àn
[i] ) != 0 ||

788 
	`memcmp
–
èg_buf
, 
èg
[
j
 * 6 + 
i
], 16 ) != 0 )

790 if–
vîbo£
 != 0 )

791 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

796 
	`gcm_‰ì
–&
˘x
 );

798 if–
vîbo£
 != 0 )

799 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

801 if–
vîbo£
 != 0 )

802 
	`pﬁ¨s¶_¥ötf
( " AES-GCM-%3d #%d split (%s): ",

803 
key_Àn
, 
i
, "enc" );

805 
	`gcm_öô
–&
˘x
, 
cùhî
, 
key
[
key_ödex
[
i
]], 
key_Àn
 );

807 
ªt
 = 
	`gcm_°¨ts
–&
˘x
, 
GCM_ENCRYPT
,

808 
iv
[
iv_ödex
[
i
]], 
iv_Àn
[i],

809 
addôi⁄Æ
[
add_ödex
[
i
]], 
add_Àn
[i] );

810 if–
ªt
 != 0 )

812 if–
vîbo£
 != 0 )

813 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

818 if–
±_Àn
[
i
] > 32 )

820 
size_t
 
ª°_Àn
 = 
±_Àn
[
i
] - 32;

821 
ªt
 = 
	`gcm_upd©e
–&
˘x
, 32, 
±
[
±_ödex
[
i
]], 
buf
 );

822 if–
ªt
 != 0 )

824 if–
vîbo£
 != 0 )

825 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

830 
ªt
 = 
	`gcm_upd©e
–&
˘x
, 
ª°_Àn
, 
±
[
±_ödex
[
i
]] + 32,

831 
buf
 + 32 );

832 if–
ªt
 != 0 )

834 if–
vîbo£
 != 0 )

835 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

842 
ªt
 = 
	`gcm_upd©e
–&
˘x
, 
±_Àn
[
i
], 
±
[
±_ödex
[i]], 
buf
 );

843 if–
ªt
 != 0 )

845 if–
vîbo£
 != 0 )

846 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

852 
ªt
 = 
	`gcm_föish
–&
˘x
, 
èg_buf
, 16 );

853 if–
ªt
 != 0 ||

854 
	`memcmp
–
buf
, 
˘
[
j
 * 6 + 
i
], 
±_Àn
[i] ) != 0 ||

855 
	`memcmp
–
èg_buf
, 
èg
[
j
 * 6 + 
i
], 16 ) != 0 )

857 if–
vîbo£
 != 0 )

858 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

863 
	`gcm_‰ì
–&
˘x
 );

865 if–
vîbo£
 != 0 )

866 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

868 if–
vîbo£
 != 0 )

869 
	`pﬁ¨s¶_¥ötf
( " AES-GCM-%3d #%d split (%s): ",

870 
key_Àn
, 
i
, "dec" );

872 
	`gcm_öô
–&
˘x
, 
cùhî
, 
key
[
key_ödex
[
i
]], 
key_Àn
 );

874 
ªt
 = 
	`gcm_°¨ts
–&
˘x
, 
GCM_DECRYPT
,

875 
iv
[
iv_ödex
[
i
]], 
iv_Àn
[i],

876 
addôi⁄Æ
[
add_ödex
[
i
]], 
add_Àn
[i] );

877 if–
ªt
 != 0 )

879 if–
vîbo£
 != 0 )

880 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

885 if–
±_Àn
[
i
] > 32 )

887 
size_t
 
ª°_Àn
 = 
±_Àn
[
i
] - 32;

888 
ªt
 = 
	`gcm_upd©e
–&
˘x
, 32, 
˘
[
j
 * 6 + 
i
], 
buf
 );

889 if–
ªt
 != 0 )

891 if–
vîbo£
 != 0 )

892 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

897 
ªt
 = 
	`gcm_upd©e
–&
˘x
, 
ª°_Àn
, 
˘
[
j
 * 6 + 
i
] + 32,

898 
buf
 + 32 );

899 if–
ªt
 != 0 )

901 if–
vîbo£
 != 0 )

902 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

909 
ªt
 = 
	`gcm_upd©e
–&
˘x
, 
±_Àn
[
i
], 
˘
[
j
 * 6 + i], 
buf
 );

910 if–
ªt
 != 0 )

912 if–
vîbo£
 != 0 )

913 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

919 
ªt
 = 
	`gcm_föish
–&
˘x
, 
èg_buf
, 16 );

920 if–
ªt
 != 0 ||

921 
	`memcmp
–
buf
, 
±
[
±_ödex
[
i
]], 
±_Àn
[i] ) != 0 ||

922 
	`memcmp
–
èg_buf
, 
èg
[
j
 * 6 + 
i
], 16 ) != 0 )

924 if–
vîbo£
 != 0 )

925 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

930 
	`gcm_‰ì
–&
˘x
 );

932 if–
vîbo£
 != 0 )

933 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

938 if–
vîbo£
 != 0 )

939 
	`pﬁ¨s¶_¥ötf
( "\n" );

942 
	}
}

	@polarssl/library/havege.c

33 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

34 
	~"pﬁ¨s¶/c⁄fig.h
"

36 #ö˛udê
POLARSSL_CONFIG_FILE


39 #i‡
deföed
(
POLARSSL_HAVEGE_C
)

41 
	~"pﬁ¨s¶/havege.h
"

42 
	~"pﬁ¨s¶/timög.h
"

44 
	~<°rög.h
>

47 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

48 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

49 
	}
}

65 
	#SWAP
(
X
,
Y
Ë{ *
T
 = X; X = Y; Y = T; }

	)

67 
	#TST1_ENTER
 if–
PTEST
 & 1 ) { PTEST ^3; PTEST >>1;

	)

68 
	#TST2_ENTER
 if–
PTEST
 & 1 ) { PTEST ^3; PTEST >>1;

	)

70 
	#TST1_LEAVE
 
U1
++; }

	)

71 
	#TST2_LEAVE
 
U2
++; }

	)

73 
	#ONE_ITERATION
 \

75 
PTEST
 = 
PT1
 >> 20; \

77 
TST1_ENTER
 TST1_ENTER TST1_ENTER TST1_ENTER \

78 
TST1_ENTER
 TST1_ENTER TST1_ENTER TST1_ENTER \

79 
TST1_ENTER
 TST1_ENTER TST1_ENTER TST1_ENTER \

81 
TST1_LEAVE
 TST1_LEAVE TST1_LEAVE TST1_LEAVE \

82 
TST1_LEAVE
 TST1_LEAVE TST1_LEAVE TST1_LEAVE \

83 
TST1_LEAVE
 TST1_LEAVE TST1_LEAVE TST1_LEAVE \

85 
PTX
 = (
PT1
 >> 18) & 7; \

86 
PT1
 &= 0x1FFF; \

87 
PT2
 &= 0x1FFF; \

88 
CLK
 = (Ë
	`h¨d˛ock
(); \

90 
i
 = 0; \

91 
A
 = &
WALK
[
PT1
 ]; 
RES
[
i
++] ^= *A; \

92 
B
 = &
WALK
[
PT2
 ]; 
RES
[
i
++] ^= *B; \

93 
C
 = &
WALK
[
PT1
 ^ 1]; 
RES
[
i
++] ^= *C; \

94 
D
 = &
WALK
[
PT2
 ^ 4]; 
RES
[
i
++] ^= *D; \

96 
IN
 = (*
A
 >> (1)Ë^ (*A << (31)Ë^ 
CLK
; \

97 *
A
 = (*
B
 >> (2)Ë^ (*B << (30)Ë^ 
CLK
; \

98 *
B
 = 
IN
 ^ 
U1
; \

99 *
C
 = (*C >> (3)Ë^ (*C << (29)Ë^ 
CLK
; \

100 *
D
 = (*D >> (4)Ë^ (*D << (28)Ë^ 
CLK
; \

102 
A
 = &
WALK
[
PT1
 ^ 2]; 
RES
[
i
++] ^= *A; \

103 
B
 = &
WALK
[
PT2
 ^ 2]; 
RES
[
i
++] ^= *B; \

104 
C
 = &
WALK
[
PT1
 ^ 3]; 
RES
[
i
++] ^= *C; \

105 
D
 = &
WALK
[
PT2
 ^ 6]; 
RES
[
i
++] ^= *D; \

107 if–
PTEST
 & 1 ) 
	`SWAP
–
A
, 
C
 ); \

109 
IN
 = (*
A
 >> (5)Ë^ (*A << (27)Ë^ 
CLK
; \

110 *
A
 = (*
B
 >> (6)Ë^ (*B << (26)Ë^ 
CLK
; \

111 *
B
 = 
IN
; 
CLK
 = (Ë
	`h¨d˛ock
(); \

112 *
C
 = (*C >> (7)Ë^ (*C << (25)Ë^ 
CLK
; \

113 *
D
 = (*D >> (8)Ë^ (*D << (24)Ë^ 
CLK
; \

115 
A
 = &
WALK
[
PT1
 ^ 4]; \

116 
B
 = &
WALK
[
PT2
 ^ 1]; \

118 
PTEST
 = 
PT2
 >> 1; \

120 
PT2
 = (
RES
[(
i
 - 8Ë^ 
PTY
] ^ 
WALK
[PT2 ^ PTY ^ 7]); \

121 
PT2
 = ((PT2 & 0x1FFFË& (~8)Ë^ ((
PT1
 ^ 8) & 0x8); \

122 
PTY
 = (
PT2
 >> 10) & 7; \

124 
TST2_ENTER
 TST2_ENTER TST2_ENTER TST2_ENTER \

125 
TST2_ENTER
 TST2_ENTER TST2_ENTER TST2_ENTER \

126 
TST2_ENTER
 TST2_ENTER TST2_ENTER TST2_ENTER \

128 
TST2_LEAVE
 TST2_LEAVE TST2_LEAVE TST2_LEAVE \

129 
TST2_LEAVE
 TST2_LEAVE TST2_LEAVE TST2_LEAVE \

130 
TST2_LEAVE
 TST2_LEAVE TST2_LEAVE TST2_LEAVE \

132 
C
 = &
WALK
[
PT1
 ^ 5]; \

133 
D
 = &
WALK
[
PT2
 ^ 5]; \

135 
RES
[
i
++] ^*
A
; \

136 
RES
[
i
++] ^*
B
; \

137 
RES
[
i
++] ^*
C
; \

138 
RES
[
i
++] ^*
D
; \

140 
IN
 = (*
A
 >> ( 9)Ë^ (*A << (23)Ë^ 
CLK
; \

141 *
A
 = (*
B
 >> (10)Ë^ (*B << (22)Ë^ 
CLK
; \

142 *
B
 = 
IN
 ^ 
U2
; \

143 *
C
 = (*C >> (11)Ë^ (*C << (21)Ë^ 
CLK
; \

144 *
D
 = (*D >> (12)Ë^ (*D << (20)Ë^ 
CLK
; \

146 
A
 = &
WALK
[
PT1
 ^ 6]; 
RES
[
i
++] ^= *A; \

147 
B
 = &
WALK
[
PT2
 ^ 3]; 
RES
[
i
++] ^= *B; \

148 
C
 = &
WALK
[
PT1
 ^ 7]; 
RES
[
i
++] ^= *C; \

149 
D
 = &
WALK
[
PT2
 ^ 7]; 
RES
[
i
++] ^= *D; \

151 
IN
 = (*
A
 >> (13)Ë^ (*A << (19)Ë^ 
CLK
; \

152 *
A
 = (*
B
 >> (14)Ë^ (*B << (18)Ë^ 
CLK
; \

153 *
B
 = 
IN
; \

154 *
C
 = (*C >> (15)Ë^ (*C << (17)Ë^ 
CLK
; \

155 *
D
 = (*D >> (16)Ë^ (*D << (16)Ë^ 
CLK
; \

157 
PT1
 = ( 
RES
[–
i
 - 8 ) ^ 
PTX
] ^ \

158 
WALK
[
PT1
 ^ 
PTX
 ^ 7] ) & (~1); \

159 
PT1
 ^(
PT2
 ^ 0x10) & 0x10; \

161  
n
++, 
i
 = 0; i < 16; i++ ) \

162 
hs
->
poﬁ
[
n
 % 
COLLECT_SIZE
] ^
RES
[
i
];

	)

167 
	$havege_fûl
–
havege_°©e
 *
hs
 )

169 
i
, 
n
 = 0;

170 
U1
, 
U2
, *
A
, *
B
, *
C
, *
D
;

171 
PT1
, 
PT2
, *
WALK
, 
RES
[16];

172 
PTX
, 
PTY
, 
CLK
, 
PTEST
, 
IN
;

174 
WALK
 = 
hs
->WALK;

175 
PT1
 = 
hs
->PT1;

176 
PT2
 = 
hs
->PT2;

178 
PTX
 = 
U1
 = 0;

179 
PTY
 = 
U2
 = 0;

181 
	`mem£t
–
RES
, 0, ( RES ) );

183  
n
 < 
COLLECT_SIZE
 * 4 )

185 
ONE_ITERATION


186 
ONE_ITERATION


187 
ONE_ITERATION


188 
ONE_ITERATION


191 
hs
->
PT1
 = PT1;

192 
hs
->
PT2
 = PT2;

194 
hs
->
off£t
[0] = 0;

195 
hs
->
off£t
[1] = 
COLLECT_SIZE
 / 2;

196 
	}
}

201 
	$havege_öô
–
havege_°©e
 *
hs
 )

203 
	`mem£t
–
hs
, 0, –
havege_°©e
 ) );

205 
	`havege_fûl
–
hs
 );

206 
	}
}

208 
	$havege_‰ì
–
havege_°©e
 *
hs
 )

210 if–
hs
 =
NULL
 )

213 
	`pﬁ¨s¶_zîoize
–
hs
, –
havege_°©e
 ) );

214 
	}
}

219 
	$havege_øndom
–*
p_∫g
, *
buf
, 
size_t
 
Àn
 )

221 
vÆ
;

222 
size_t
 
u£_Àn
;

223 
havege_°©e
 *
hs
 = (havege_°©ê*Ë
p_∫g
;

224 *
p
 = 
buf
;

226  
Àn
 > 0 )

228 
u£_Àn
 = 
Àn
;

229 if–
u£_Àn
 > () )

230 
u£_Àn
 = ();

232 if–
hs
->
off£t
[1] >
COLLECT_SIZE
 )

233 
	`havege_fûl
–
hs
 );

235 
vÆ
 = 
hs
->
poﬁ
[hs->
off£t
[0]++];

236 
vÆ
 ^
hs
->
poﬁ
[hs->
off£t
[1]++];

238 
	`mem˝y
–
p
, &
vÆ
, 
u£_Àn
 );

240 
Àn
 -
u£_Àn
;

241 
p
 +
u£_Àn
;

245 
	}
}

	@polarssl/library/hmac_drbg.c

32 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

33 
	~"pﬁ¨s¶/c⁄fig.h
"

35 #ö˛udê
POLARSSL_CONFIG_FILE


38 #i‡
deföed
(
POLARSSL_HMAC_DRBG_C
)

40 
	~"pﬁ¨s¶/hmac_drbg.h
"

42 #i‡
deföed
(
POLARSSL_FS_IO
)

43 
	~<°dio.h
>

46 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

47 
	~"pﬁ¨s¶/∂©f‹m.h
"

49 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

53 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

54 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

55 
	}
}

60 
	$hmac_drbg_upd©e
–
hmac_drbg_c⁄ãxt
 *
˘x
,

61 c⁄° *
addôi⁄Æ
, 
size_t
 
add_Àn
 )

63 
size_t
 
md_Àn
 = 
˘x
->
md_˘x
.
md_öfo
->
size
;

64 
rounds
 = ( 
addôi⁄Æ
 !
NULL
 && 
add_Àn
 != 0 ) ? 2 : 1;

65 
£p
[1];

66 
K
[
POLARSSL_MD_MAX_SIZE
];

68  
£p
[0] = 0; sï[0] < 
rounds
; sep[0]++ )

71 
	`md_hmac_ª£t
–&
˘x
->
md_˘x
 );

72 
	`md_hmac_upd©e
–&
˘x
->
md_˘x
, ctx->
V
, 
md_Àn
 );

73 
	`md_hmac_upd©e
–&
˘x
->
md_˘x
, 
£p
, 1 );

74 if–
rounds
 == 2 )

75 
	`md_hmac_upd©e
–&
˘x
->
md_˘x
, 
addôi⁄Æ
, 
add_Àn
 );

76 
	`md_hmac_föish
–&
˘x
->
md_˘x
, 
K
 );

79 
	`md_hmac_°¨ts
–&
˘x
->
md_˘x
, 
K
, 
md_Àn
 );

80 
	`md_hmac_upd©e
–&
˘x
->
md_˘x
, ctx->
V
, 
md_Àn
 );

81 
	`md_hmac_föish
–&
˘x
->
md_˘x
, ctx->
V
 );

83 
	}
}

88 
	$hmac_drbg_öô_buf
–
hmac_drbg_c⁄ãxt
 *
˘x
,

89 c⁄° 
md_öfo_t
 * 
md_öfo
,

90 c⁄° *
d©a
, 
size_t
 
d©a_Àn
 )

92 
ªt
;

94 
	`mem£t
–
˘x
, 0, –
hmac_drbg_c⁄ãxt
 ) );

96 
	`md_öô
–&
˘x
->
md_˘x
 );

98 if––
ªt
 = 
	`md_öô_˘x
–&
˘x
->
md_˘x
, 
md_öfo
 ) ) != 0 )

99 –
ªt
 );

106 
	`md_hmac_°¨ts
–&
˘x
->
md_˘x
, ctx->
V
, 
md_öfo
->
size
 );

107 
	`mem£t
–
˘x
->
V
, 0x01, 
md_öfo
->
size
 );

109 
	`hmac_drbg_upd©e
–
˘x
, 
d©a
, 
d©a_Àn
 );

112 
	}
}

117 
	$hmac_drbg_ª£ed
–
hmac_drbg_c⁄ãxt
 *
˘x
,

118 c⁄° *
addôi⁄Æ
, 
size_t
 
Àn
 )

120 
£ed
[
POLARSSL_HMAC_DRBG_MAX_SEED_INPUT
];

121 
size_t
 
£edÀn
;

124 if–
Àn
 > 
POLARSSL_HMAC_DRBG_MAX_INPUT
 ||

125 
˘x
->
íå›y_Àn
 + 
Àn
 > 
POLARSSL_HMAC_DRBG_MAX_SEED_INPUT
 )

127 –
POLARSSL_ERR_HMAC_DRBG_INPUT_TOO_BIG
 );

130 
	`mem£t
–
£ed
, 0, 
POLARSSL_HMAC_DRBG_MAX_SEED_INPUT
 );

133 if–
˘x
->
	`f_íå›y
–˘x->
p_íå›y
, 
£ed
, ctx->
íå›y_Àn
 ) != 0 )

134 –
POLARSSL_ERR_HMAC_DRBG_ENTROPY_SOURCE_FAILED
 );

136 
£edÀn
 = 
˘x
->
íå›y_Àn
;

139 if–
addôi⁄Æ
 !
NULL
 && 
Àn
 != 0 )

141 
	`mem˝y
–
£ed
 + 
£edÀn
, 
addôi⁄Æ
, 
Àn
 );

142 
£edÀn
 +
Àn
;

146 
	`hmac_drbg_upd©e
–
˘x
, 
£ed
, 
£edÀn
 );

149 
˘x
->
ª£ed_cou¡î
 = 1;

153 
	}
}

158 
hmac_drbg_öô
–
hmac_drbg_c⁄ãxt
 *
˘x
,

159 c⁄° 
md_öfo_t
 * 
md_öfo
,

160 (*
f_íå›y
)(*, *, 
size_t
),

161 *
p_íå›y
,

162 c⁄° *
cu°om
,

163 
size_t
 
Àn
 )

165 
ªt
;

166 
size_t
 
íå›y_Àn
;

168 
	`mem£t
–
˘x
, 0, –
hmac_drbg_c⁄ãxt
 ) );

170 
	`md_öô
–&
˘x
->
md_˘x
 );

172 if––
ªt
 = 
	`md_öô_˘x
–&
˘x
->
md_˘x
, 
md_öfo
 ) ) != 0 )

173 –
ªt
 );

180 
	`md_hmac_°¨ts
–&
˘x
->
md_˘x
, ctx->
V
, 
md_öfo
->
size
 );

181 
	`mem£t
–
˘x
->
V
, 0x01, 
md_öfo
->
size
 );

183 
˘x
->
f_íå›y
 = f_entropy;

184 
˘x
->
p_íå›y
 =Ö_entropy;

186 
˘x
->
ª£ed_öãrvÆ
 = 
POLARSSL_HMAC_DRBG_RESEED_INTERVAL
;

195 
íå›y_Àn
 = 
md_öfo
->
size
 <= 20 ? 16 :

196 
md_öfo
->
size
 <= 28 ? 24 :

203 
˘x
->
íå›y_Àn
 =Éntropy_len * 3 / 2;

205 if––
ªt
 = 
	`hmac_drbg_ª£ed
–
˘x
, 
cu°om
, 
Àn
 ) ) != 0 )

206 –
ªt
 );

208 
˘x
->
íå›y_Àn
 =Éntropy_len;

211 
	}
}

216 
	$hmac_drbg_£t_¥edi˘i⁄_ªsi°™˚
–
hmac_drbg_c⁄ãxt
 *
˘x
,

217 
ªsi°™˚
 )

219 
˘x
->
¥edi˘i⁄_ªsi°™˚
 = 
ªsi°™˚
;

220 
	}
}

225 
	$hmac_drbg_£t_íå›y_Àn
–
hmac_drbg_c⁄ãxt
 *
˘x
, 
size_t
 
Àn
 )

227 
˘x
->
íå›y_Àn
 = 
Àn
;

228 
	}
}

233 
	$hmac_drbg_£t_ª£ed_öãrvÆ
–
hmac_drbg_c⁄ãxt
 *
˘x
, 
öãrvÆ
 )

235 
˘x
->
ª£ed_öãrvÆ
 = 
öãrvÆ
;

236 
	}
}

242 
	$hmac_drbg_øndom_wôh_add
–*
p_∫g
,

243 *
ouçut
, 
size_t
 
out_Àn
,

244 c⁄° *
addôi⁄Æ
, 
size_t
 
add_Àn
 )

246 
ªt
;

247 
hmac_drbg_c⁄ãxt
 *
˘x
 = (hmac_drbg_c⁄ãxà*Ë
p_∫g
;

248 
size_t
 
md_Àn
 = 
	`md_gë_size
–
˘x
->
md_˘x
.
md_öfo
 );

249 
size_t
 
À·
 = 
out_Àn
;

250 *
out
 = 
ouçut
;

253 if–
out_Àn
 > 
POLARSSL_HMAC_DRBG_MAX_REQUEST
 )

254 –
POLARSSL_ERR_HMAC_DRBG_REQUEST_TOO_BIG
 );

257 if–
add_Àn
 > 
POLARSSL_HMAC_DRBG_MAX_INPUT
 )

258 –
POLARSSL_ERR_HMAC_DRBG_INPUT_TOO_BIG
 );

261 if–
˘x
->
f_íå›y
 !
NULL
 &&

262 –
˘x
->
¥edi˘i⁄_ªsi°™˚
 =
POLARSSL_HMAC_DRBG_PR_ON
 ||

263 
˘x
->
ª£ed_cou¡î
 > ctx->
ª£ed_öãrvÆ
 ) )

265 if––
ªt
 = 
	`hmac_drbg_ª£ed
–
˘x
, 
addôi⁄Æ
, 
add_Àn
 ) ) != 0 )

266 –
ªt
 );

268 
add_Àn
 = 0;

272 if–
addôi⁄Æ
 !
NULL
 && 
add_Àn
 != 0 )

273 
	`hmac_drbg_upd©e
–
˘x
, 
addôi⁄Æ
, 
add_Àn
 );

276  
À·
 != 0 )

278 
size_t
 
u£_Àn
 = 
À·
 > 
md_Àn
 ? md_len :Üeft;

280 
	`md_hmac_ª£t
–&
˘x
->
md_˘x
 );

281 
	`md_hmac_upd©e
–&
˘x
->
md_˘x
, ctx->
V
, 
md_Àn
 );

282 
	`md_hmac_föish
–&
˘x
->
md_˘x
, ctx->
V
 );

284 
	`mem˝y
–
out
, 
˘x
->
V
, 
u£_Àn
 );

285 
out
 +
u£_Àn
;

286 
À·
 -
u£_Àn
;

290 
	`hmac_drbg_upd©e
–
˘x
, 
addôi⁄Æ
, 
add_Àn
 );

293 
˘x
->
ª£ed_cou¡î
++;

297 
	}
}

302 
	$hmac_drbg_øndom
–*
p_∫g
, *
ouçut
, 
size_t
 
out_Àn
 )

304 –
	`hmac_drbg_øndom_wôh_add
–
p_∫g
, 
ouçut
, 
out_Àn
, 
NULL
, 0 ) );

305 
	}
}

310 
	$hmac_drbg_‰ì
–
hmac_drbg_c⁄ãxt
 *
˘x
 )

312 if–
˘x
 =
NULL
 )

315 
	`md_‰ì_˘x
–&
˘x
->
md_˘x
 );

317 
	`pﬁ¨s¶_zîoize
–
˘x
, –
hmac_drbg_c⁄ãxt
 ) );

318 
	}
}

320 #i‡
deföed
(
POLARSSL_FS_IO
)

321 
	$hmac_drbg_wrôe_£ed_fûe
–
hmac_drbg_c⁄ãxt
 *
˘x
, c⁄° *
∑th
 )

323 
ªt
;

324 
FILE
 *
f
;

325 
buf
[ 
POLARSSL_HMAC_DRBG_MAX_INPUT
 ];

327 if––
f
 = 
	`f›í
–
∑th
, "wb" ) ) =
NULL
 )

328 –
POLARSSL_ERR_HMAC_DRBG_FILE_IO_ERROR
 );

330 if––
ªt
 = 
	`hmac_drbg_øndom
–
˘x
, 
buf
, ( buf ) ) ) != 0 )

331 
exô
;

333 if–
	`fwrôe
–
buf
, 1, –bu‡), 
f
 ) != ( buf ) )

335 
ªt
 = 
POLARSSL_ERR_HMAC_DRBG_FILE_IO_ERROR
;

336 
exô
;

339 
ªt
 = 0;

341 
exô
:

342 
	`f˛o£
–
f
 );

343 –
ªt
 );

344 
	}
}

346 
	$hmac_drbg_upd©e_£ed_fûe
–
hmac_drbg_c⁄ãxt
 *
˘x
, c⁄° *
∑th
 )

348 
FILE
 *
f
;

349 
size_t
 
n
;

350 
buf
[ 
POLARSSL_HMAC_DRBG_MAX_INPUT
 ];

352 if––
f
 = 
	`f›í
–
∑th
, "rb" ) ) =
NULL
 )

353 –
POLARSSL_ERR_HMAC_DRBG_FILE_IO_ERROR
 );

355 
	`f£ek
–
f
, 0, 
SEEK_END
 );

356 
n
 = (
size_t
Ë
	`·ñl
–
f
 );

357 
	`f£ek
–
f
, 0, 
SEEK_SET
 );

359 if–
n
 > 
POLARSSL_HMAC_DRBG_MAX_INPUT
 )

361 
	`f˛o£
–
f
 );

362 –
POLARSSL_ERR_HMAC_DRBG_INPUT_TOO_BIG
 );

365 if–
	`‰ód
–
buf
, 1, 
n
, 
f
 ) !=Ç )

367 
	`f˛o£
–
f
 );

368 –
POLARSSL_ERR_HMAC_DRBG_FILE_IO_ERROR
 );

371 
	`f˛o£
–
f
 );

373 
	`hmac_drbg_upd©e
–
˘x
, 
buf
, 
n
 );

375 –
	`hmac_drbg_wrôe_£ed_fûe
–
˘x
, 
∑th
 ) );

376 
	}
}

380 #i‡
deföed
(
POLARSSL_SELF_TEST
)

382 
	~<°dio.h
>

384 #i‡!
deföed
(
POLARSSL_SHA1_C
)

386 
	$hmac_drbg_£lf_ã°
–
vîbo£
 )

389 if–
vîbo£
 != 0 )

390 
	`pﬁ¨s¶_¥ötf
( "\n" );

393 
	}
}

396 
	#OUTPUT_LEN
 80

	)

399 
	gíå›y_¥
[] = {

405 c⁄° 
	gªsu…_¥
[
OUTPUT_LEN
] = {

415 
	gíå›y_n›r
[] = {

420 c⁄° 
	gªsu…_n›r
[
OUTPUT_LEN
] = {

430 
size_t
 
	gã°_off£t
;

431 
	$hmac_drbg_£lf_ã°_íå›y
–*
d©a
,

432 *
buf
, 
size_t
 
Àn
 )

434 c⁄° *
p
 = 
d©a
;

435 
	`mem˝y
–
buf
, 
p
 + 
ã°_off£t
, 
Àn
 );

436 
ã°_off£t
 +
Àn
;

438 
	}
}

440 
	#CHK
–
c
 ) if( (c) != 0 ) \

442 if–
vîbo£
 != 0 ) \

443 
	`pﬁ¨s¶_¥ötf
( "failed\n" ); \

445 }

	)

450 
	$hmac_drbg_£lf_ã°
–
vîbo£
 )

452 
hmac_drbg_c⁄ãxt
 
˘x
;

453 
buf
[
OUTPUT_LEN
];

454 c⁄° 
md_öfo_t
 *
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
POLARSSL_MD_SHA1
 );

459 if–
vîbo£
 != 0 )

460 
	`pﬁ¨s¶_¥ötf
( " HMAC_DRBG (PR = True) : " );

462 
ã°_off£t
 = 0;

463 
	`CHK
–
	`hmac_drbg_öô
–&
˘x
, 
md_öfo
,

464 
hmac_drbg_£lf_ã°_íå›y
, 
íå›y_¥
,

465 
NULL
, 0 ) );

466 
	`hmac_drbg_£t_¥edi˘i⁄_ªsi°™˚
–&
˘x
, 
POLARSSL_HMAC_DRBG_PR_ON
 );

467 
	`CHK
–
	`hmac_drbg_øndom
–&
˘x
, 
buf
, 
OUTPUT_LEN
 ) );

468 
	`CHK
–
	`hmac_drbg_øndom
–&
˘x
, 
buf
, 
OUTPUT_LEN
 ) );

469 
	`CHK
–
	`memcmp
–
buf
, 
ªsu…_¥
, 
OUTPUT_LEN
 ) );

470 
	`hmac_drbg_‰ì
–&
˘x
 );

472 if–
vîbo£
 != 0 )

473 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

478 if–
vîbo£
 != 0 )

479 
	`pﬁ¨s¶_¥ötf
( " HMAC_DRBG (PR = False) : " );

481 
ã°_off£t
 = 0;

482 
	`CHK
–
	`hmac_drbg_öô
–&
˘x
, 
md_öfo
,

483 
hmac_drbg_£lf_ã°_íå›y
, 
íå›y_n›r
,

484 
NULL
, 0 ) );

485 
	`CHK
–
	`hmac_drbg_ª£ed
–&
˘x
, 
NULL
, 0 ) );

486 
	`CHK
–
	`hmac_drbg_øndom
–&
˘x
, 
buf
, 
OUTPUT_LEN
 ) );

487 
	`CHK
–
	`hmac_drbg_øndom
–&
˘x
, 
buf
, 
OUTPUT_LEN
 ) );

488 
	`CHK
–
	`memcmp
–
buf
, 
ªsu…_n›r
, 
OUTPUT_LEN
 ) );

489 
	`hmac_drbg_‰ì
–&
˘x
 );

491 if–
vîbo£
 != 0 )

492 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

494 if–
vîbo£
 != 0 )

495 
	`pﬁ¨s¶_¥ötf
( "\n" );

498 
	}
}

	@polarssl/library/md.c

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"pﬁ¨s¶/c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 #i‡
deföed
(
POLARSSL_MD_C
)

38 
	~"pﬁ¨s¶/md.h
"

39 
	~"pﬁ¨s¶/md_wøp.h
"

41 
	~<°dlib.h
>

43 #i‡
deföed
(
_MSC_VER
Ë&& !deföed 
°rˇ£cmp
 && !deföed(
EFIX64
) && \

44 !
	$deföed
(
EFI32
)

45 
	#°rˇ£cmp
 
_°ricmp


	)

49 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

50 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

51 
	}
}

53 c⁄° 
	gsuµ‹ãd_dige°s
[] = {

55 #i‡
deföed
(
POLARSSL_SHA512_C
)

56 
POLARSSL_MD_SHA384
,

57 
POLARSSL_MD_SHA512
,

60 #i‡
deföed
(
POLARSSL_SHA256_C
)

61 
POLARSSL_MD_SHA224
,

62 
POLARSSL_MD_SHA256
,

65 #i‡
deföed
(
POLARSSL_SHA1_C
)

66 
POLARSSL_MD_SHA1
,

69 #i‡
deföed
(
POLARSSL_RIPEMD160_C
)

70 
POLARSSL_MD_RIPEMD160
,

73 #i‡
deföed
(
POLARSSL_MD5_C
)

74 
POLARSSL_MD_MD5
,

77 #i‡
deföed
(
POLARSSL_MD4_C
)

78 
POLARSSL_MD_MD4
,

81 #i‡
deföed
(
POLARSSL_MD2_C
)

82 
POLARSSL_MD_MD2
,

85 
POLARSSL_MD_NONE


88 c⁄° *
	$md_li°
( )

90 –
suµ‹ãd_dige°s
 );

91 
	}
}

93 c⁄° 
md_öfo_t
 *
	$md_öfo_‰om_°rög
–c⁄° *
md_«me
 )

95 if–
NULL
 =
md_«me
 )

96 –
NULL
 );

99 #i‡
	`deföed
(
POLARSSL_MD2_C
)

100 if–!
	`°rˇ£cmp
–"MD2", 
md_«me
 ) )

101  
	`md_öfo_‰om_ty≥
–
POLARSSL_MD_MD2
 );

103 #i‡
	`deföed
(
POLARSSL_MD4_C
)

104 if–!
	`°rˇ£cmp
–"MD4", 
md_«me
 ) )

105  
	`md_öfo_‰om_ty≥
–
POLARSSL_MD_MD4
 );

107 #i‡
	`deföed
(
POLARSSL_MD5_C
)

108 if–!
	`°rˇ£cmp
–"MD5", 
md_«me
 ) )

109  
	`md_öfo_‰om_ty≥
–
POLARSSL_MD_MD5
 );

111 #i‡
	`deföed
(
POLARSSL_RIPEMD160_C
)

112 if–!
	`°rˇ£cmp
–"RIPEMD160", 
md_«me
 ) )

113  
	`md_öfo_‰om_ty≥
–
POLARSSL_MD_RIPEMD160
 );

115 #i‡
	`deföed
(
POLARSSL_SHA1_C
)

116 if–!
	`°rˇ£cmp
–"SHA1", 
md_«me
 ) || !strcasecmp( "SHA", md_name ) )

117  
	`md_öfo_‰om_ty≥
–
POLARSSL_MD_SHA1
 );

119 #i‡
	`deföed
(
POLARSSL_SHA256_C
)

120 if–!
	`°rˇ£cmp
–"SHA224", 
md_«me
 ) )

121  
	`md_öfo_‰om_ty≥
–
POLARSSL_MD_SHA224
 );

122 if–!
	`°rˇ£cmp
–"SHA256", 
md_«me
 ) )

123  
	`md_öfo_‰om_ty≥
–
POLARSSL_MD_SHA256
 );

125 #i‡
	`deföed
(
POLARSSL_SHA512_C
)

126 if–!
	`°rˇ£cmp
–"SHA384", 
md_«me
 ) )

127  
	`md_öfo_‰om_ty≥
–
POLARSSL_MD_SHA384
 );

128 if–!
	`°rˇ£cmp
–"SHA512", 
md_«me
 ) )

129  
	`md_öfo_‰om_ty≥
–
POLARSSL_MD_SHA512
 );

131 –
NULL
 );

132 
	}
}

134 c⁄° 
md_öfo_t
 *
	$md_öfo_‰om_ty≥
–
md_ty≥_t
 
md_ty≥
 )

136  
md_ty≥
 )

138 #i‡
	`deföed
(
POLARSSL_MD2_C
)

139 
POLARSSL_MD_MD2
:

140 –&
md2_öfo
 );

142 #i‡
	`deföed
(
POLARSSL_MD4_C
)

143 
POLARSSL_MD_MD4
:

144 –&
md4_öfo
 );

146 #i‡
	`deföed
(
POLARSSL_MD5_C
)

147 
POLARSSL_MD_MD5
:

148 –&
md5_öfo
 );

150 #i‡
	`deföed
(
POLARSSL_RIPEMD160_C
)

151 
POLARSSL_MD_RIPEMD160
:

152 –&
rùemd160_öfo
 );

154 #i‡
	`deföed
(
POLARSSL_SHA1_C
)

155 
POLARSSL_MD_SHA1
:

156 –&
sha1_öfo
 );

158 #i‡
	`deföed
(
POLARSSL_SHA256_C
)

159 
POLARSSL_MD_SHA224
:

160 –&
sha224_öfo
 );

161 
POLARSSL_MD_SHA256
:

162 –&
sha256_öfo
 );

164 #i‡
	`deföed
(
POLARSSL_SHA512_C
)

165 
POLARSSL_MD_SHA384
:

166 –&
sha384_öfo
 );

167 
POLARSSL_MD_SHA512
:

168 –&
sha512_öfo
 );

171 –
NULL
 );

173 
	}
}

175 
	$md_öô
–
md_c⁄ãxt_t
 *
˘x
 )

177 
	`mem£t
–
˘x
, 0, –
md_c⁄ãxt_t
 ) );

178 
	}
}

180 
	$md_‰ì
–
md_c⁄ãxt_t
 *
˘x
 )

182 if–
˘x
 =
NULL
 )

185 if–
˘x
->
md_˘x
 )

186 
˘x
->
md_öfo
->
	`˘x_‰ì_func
–˘x->
md_˘x
 );

188 
	`pﬁ¨s¶_zîoize
–
˘x
, –
md_c⁄ãxt_t
 ) );

189 
	}
}

191 
	$md_öô_˘x
–
md_c⁄ãxt_t
 *
˘x
, c⁄° 
md_öfo_t
 *
md_öfo
 )

193 if–
md_öfo
 =
NULL
 || 
˘x
 == NULL )

194 –
POLARSSL_ERR_MD_BAD_INPUT_DATA
 );

196 
	`mem£t
–
˘x
, 0, –
md_c⁄ãxt_t
 ) );

198 if––
˘x
->
md_˘x
 = 
md_öfo
->
	`˘x_Æloc_func
(ËË=
NULL
 )

199 –
POLARSSL_ERR_MD_ALLOC_FAILED
 );

201 
˘x
->
md_öfo
 = md_info;

203 
md_öfo
->
	`°¨ts_func
–
˘x
->
md_˘x
 );

206 
	}
}

208 
	$md_‰ì_˘x
–
md_c⁄ãxt_t
 *
˘x
 )

210 
	`md_‰ì
–
˘x
 );

213 
	}
}

215 
	$md_°¨ts
–
md_c⁄ãxt_t
 *
˘x
 )

217 if–
˘x
 =
NULL
 || ctx->
md_öfo
 == NULL )

218 –
POLARSSL_ERR_MD_BAD_INPUT_DATA
 );

220 
˘x
->
md_öfo
->
	`°¨ts_func
–˘x->
md_˘x
 );

223 
	}
}

225 
	$md_upd©e
–
md_c⁄ãxt_t
 *
˘x
, c⁄° *
öput
, 
size_t
 
ûí
 )

227 if–
˘x
 =
NULL
 || ctx->
md_öfo
 == NULL )

228 –
POLARSSL_ERR_MD_BAD_INPUT_DATA
 );

230 
˘x
->
md_öfo
->
	`upd©e_func
–˘x->
md_˘x
, 
öput
, 
ûí
 );

233 
	}
}

235 
	$md_föish
–
md_c⁄ãxt_t
 *
˘x
, *
ouçut
 )

237 if–
˘x
 =
NULL
 || ctx->
md_öfo
 == NULL )

238 –
POLARSSL_ERR_MD_BAD_INPUT_DATA
 );

240 
˘x
->
md_öfo
->
	`föish_func
–˘x->
md_˘x
, 
ouçut
 );

243 
	}
}

245 
	$md
–c⁄° 
md_öfo_t
 *
md_öfo
, c⁄° *
öput
, 
size_t
 
ûí
,

246 *
ouçut
 )

248 if–
md_öfo
 =
NULL
 )

249 –
POLARSSL_ERR_MD_BAD_INPUT_DATA
 );

251 
md_öfo
->
	`dige°_func
–
öput
, 
ûí
, 
ouçut
 );

254 
	}
}

256 
	$md_fûe
–c⁄° 
md_öfo_t
 *
md_öfo
, c⁄° *
∑th
, *
ouçut
 )

258 #i‡
	`deföed
(
POLARSSL_FS_IO
)

259 
ªt
;

262 if–
md_öfo
 =
NULL
 )

263 –
POLARSSL_ERR_MD_BAD_INPUT_DATA
 );

265 #i‡
	`deföed
(
POLARSSL_FS_IO
)

266 
ªt
 = 
md_öfo
->
	`fûe_func
–
∑th
, 
ouçut
 );

267 if–
ªt
 != 0 )

268 –
POLARSSL_ERR_MD_FILE_IO_ERROR
 + 
ªt
 );

270 –
ªt
 );

272 ((Ë
∑th
);

273 ((Ë
ouçut
);

275 –
POLARSSL_ERR_MD_FEATURE_UNAVAILABLE
 );

277 
	}
}

279 
	$md_hmac_°¨ts
–
md_c⁄ãxt_t
 *
˘x
, c⁄° *
key
, 
size_t
 
keyÀn
 )

281 if–
˘x
 =
NULL
 || ctx->
md_öfo
 == NULL )

282 –
POLARSSL_ERR_MD_BAD_INPUT_DATA
 );

284 
˘x
->
md_öfo
->
	`hmac_°¨ts_func
–˘x->
md_˘x
, 
key
, 
keyÀn
 );

287 
	}
}

289 
	$md_hmac_upd©e
–
md_c⁄ãxt_t
 *
˘x
, c⁄° *
öput
, 
size_t
 
ûí
 )

291 if–
˘x
 =
NULL
 || ctx->
md_öfo
 == NULL )

292 –
POLARSSL_ERR_MD_BAD_INPUT_DATA
 );

294 
˘x
->
md_öfo
->
	`hmac_upd©e_func
–˘x->
md_˘x
, 
öput
, 
ûí
 );

297 
	}
}

299 
	$md_hmac_föish
–
md_c⁄ãxt_t
 *
˘x
, *
ouçut
 )

301 if–
˘x
 =
NULL
 || ctx->
md_öfo
 == NULL )

302 –
POLARSSL_ERR_MD_BAD_INPUT_DATA
 );

304 
˘x
->
md_öfo
->
	`hmac_föish_func
–˘x->
md_˘x
, 
ouçut
 );

307 
	}
}

309 
	$md_hmac_ª£t
–
md_c⁄ãxt_t
 *
˘x
 )

311 if–
˘x
 =
NULL
 || ctx->
md_öfo
 == NULL )

312 –
POLARSSL_ERR_MD_BAD_INPUT_DATA
 );

314 
˘x
->
md_öfo
->
	`hmac_ª£t_func
–˘x->
md_˘x
 );

317 
	}
}

319 
	$md_hmac
–c⁄° 
md_öfo_t
 *
md_öfo
, c⁄° *
key
, 
size_t
 
keyÀn
,

320 c⁄° *
öput
, 
size_t
 
ûí
,

321 *
ouçut
 )

323 if–
md_öfo
 =
NULL
 )

324 –
POLARSSL_ERR_MD_BAD_INPUT_DATA
 );

326 
md_öfo
->
	`hmac_func
–
key
, 
keyÀn
, 
öput
, 
ûí
, 
ouçut
 );

329 
	}
}

331 
	$md_¥o˚ss
–
md_c⁄ãxt_t
 *
˘x
, c⁄° *
d©a
 )

333 if–
˘x
 =
NULL
 || ctx->
md_öfo
 == NULL )

334 –
POLARSSL_ERR_MD_BAD_INPUT_DATA
 );

336 
˘x
->
md_öfo
->
	`¥o˚ss_func
–˘x->
md_˘x
, 
d©a
 );

339 
	}
}

	@polarssl/library/md2.c

32 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

33 
	~"pﬁ¨s¶/c⁄fig.h
"

35 #ö˛udê
POLARSSL_CONFIG_FILE


38 #i‡
deföed
(
POLARSSL_MD2_C
)

40 
	~"pﬁ¨s¶/md2.h
"

42 #i‡
deföed
(
POLARSSL_FS_IO
Ë|| deföed(
POLARSSL_SELF_TEST
)

43 
	~<°dio.h
>

46 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

47 
	~"pﬁ¨s¶/∂©f‹m.h
"

49 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

53 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

54 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

55 
	}
}

57 #i‡!
deföed
(
POLARSSL_MD2_ALT
)

59 c⁄° 
	gPI_SUBST
[256] =

89 
	$md2_öô
–
md2_c⁄ãxt
 *
˘x
 )

91 
	`mem£t
–
˘x
, 0, –
md2_c⁄ãxt
 ) );

92 
	}
}

94 
	$md2_‰ì
–
md2_c⁄ãxt
 *
˘x
 )

96 if–
˘x
 =
NULL
 )

99 
	`pﬁ¨s¶_zîoize
–
˘x
, –
md2_c⁄ãxt
 ) );

100 
	}
}

105 
	$md2_°¨ts
–
md2_c⁄ãxt
 *
˘x
 )

107 
	`mem£t
–
˘x
->
cksum
, 0, 16 );

108 
	`mem£t
–
˘x
->
°©e
, 0, 46 );

109 
	`mem£t
–
˘x
->
buf„r
, 0, 16 );

110 
˘x
->
À·
 = 0;

111 
	}
}

113 
	$md2_¥o˚ss
–
md2_c⁄ãxt
 *
˘x
 )

115 
i
, 
j
;

116 
t
 = 0;

118  
i
 = 0; i < 16; i++ )

120 
˘x
->
°©e
[
i
 + 16] = ctx->
buf„r
[i];

121 
˘x
->
°©e
[
i
 + 32] =

122 ()–
˘x
->
buf„r
[
i
] ^ ctx->
°©e
[i]);

125  
i
 = 0; i < 18; i++ )

127  
j
 = 0; j < 48; j++ )

129 
˘x
->
°©e
[
j
] = ()

130 –
˘x
->
°©e
[
j
] ^ 
PI_SUBST
[
t
] );

131 
t
 = 
˘x
->
°©e
[
j
];

134 
t
 = ()–à+ 
i
 );

137 
t
 = 
˘x
->
cksum
[15];

139  
i
 = 0; i < 16; i++ )

141 
˘x
->
cksum
[
i
] = ()

142 –
˘x
->
cksum
[
i
] ^ 
PI_SUBST
[˘x->
buf„r
[i] ^ 
t
] );

143 
t
 = 
˘x
->
cksum
[
i
];

145 
	}
}

150 
	$md2_upd©e
–
md2_c⁄ãxt
 *
˘x
, c⁄° *
öput
, 
size_t
 
ûí
 )

152 
size_t
 
fûl
;

154  
ûí
 > 0 )

156 if–
˘x
->
À·
 + 
ûí
 > 16 )

157 
fûl
 = 16 - 
˘x
->
À·
;

159 
fûl
 = 
ûí
;

161 
	`mem˝y
–
˘x
->
buf„r
 + ctx->
À·
, 
öput
, 
fûl
 );

163 
˘x
->
À·
 +
fûl
;

164 
öput
 +
fûl
;

165 
ûí
 -
fûl
;

167 if–
˘x
->
À·
 == 16 )

169 
˘x
->
À·
 = 0;

170 
	`md2_¥o˚ss
–
˘x
 );

173 
	}
}

178 
	$md2_föish
–
md2_c⁄ãxt
 *
˘x
, 
ouçut
[16] )

180 
size_t
 
i
;

181 
x
;

183 
x
 = ()–16 - 
˘x
->
À·
 );

185  
i
 = 
˘x
->
À·
; i < 16; i++ )

186 
˘x
->
buf„r
[
i
] = 
x
;

188 
	`md2_¥o˚ss
–
˘x
 );

190 
	`mem˝y
–
˘x
->
buf„r
, ctx->
cksum
, 16 );

191 
	`md2_¥o˚ss
–
˘x
 );

193 
	`mem˝y
–
ouçut
, 
˘x
->
°©e
, 16 );

194 
	}
}

201 
	$md2
–c⁄° *
öput
, 
size_t
 
ûí
, 
ouçut
[16] )

203 
md2_c⁄ãxt
 
˘x
;

205 
	`md2_öô
–&
˘x
 );

206 
	`md2_°¨ts
–&
˘x
 );

207 
	`md2_upd©e
–&
˘x
, 
öput
, 
ûí
 );

208 
	`md2_föish
–&
˘x
, 
ouçut
 );

209 
	`md2_‰ì
–&
˘x
 );

210 
	}
}

212 #i‡
deföed
(
POLARSSL_FS_IO
)

216 
	$md2_fûe
–c⁄° *
∑th
, 
ouçut
[16] )

218 
FILE
 *
f
;

219 
size_t
 
n
;

220 
md2_c⁄ãxt
 
˘x
;

221 
buf
[1024];

223 if––
f
 = 
	`f›í
–
∑th
, "rb" ) ) =
NULL
 )

224 –
POLARSSL_ERR_MD2_FILE_IO_ERROR
 );

226 
	`md2_öô
–&
˘x
 );

227 
	`md2_°¨ts
–&
˘x
 );

229  ( 
n
 = 
	`‰ód
–
buf
, 1, –bu‡), 
f
 ) ) > 0 )

230 
	`md2_upd©e
–&
˘x
, 
buf
, 
n
 );

232 
	`md2_föish
–&
˘x
, 
ouçut
 );

233 
	`md2_‰ì
–&
˘x
 );

235 if–
	`„º‹
–
f
 ) != 0 )

237 
	`f˛o£
–
f
 );

238 –
POLARSSL_ERR_MD2_FILE_IO_ERROR
 );

241 
	`f˛o£
–
f
 );

243 
	}
}

249 
	$md2_hmac_°¨ts
–
md2_c⁄ãxt
 *
˘x
, c⁄° *
key
,

250 
size_t
 
keyÀn
 )

252 
size_t
 
i
;

253 
sum
[16];

255 if–
keyÀn
 > 16 )

257 
	`md2
–
key
, 
keyÀn
, 
sum
 );

258 
keyÀn
 = 16;

259 
key
 = 
sum
;

262 
	`mem£t
–
˘x
->
ùad
, 0x36, 16 );

263 
	`mem£t
–
˘x
->
›ad
, 0x5C, 16 );

265  
i
 = 0; i < 
keyÀn
; i++ )

267 
˘x
->
ùad
[
i
] = ()–˘x->ùad[i] ^ 
key
[i] );

268 
˘x
->
›ad
[
i
] = ()–˘x->›ad[i] ^ 
key
[i] );

271 
	`md2_°¨ts
–
˘x
 );

272 
	`md2_upd©e
–
˘x
, ctx->
ùad
, 16 );

274 
	`pﬁ¨s¶_zîoize
–
sum
, ( sum ) );

275 
	}
}

280 
	$md2_hmac_upd©e
–
md2_c⁄ãxt
 *
˘x
, c⁄° *
öput
,

281 
size_t
 
ûí
 )

283 
	`md2_upd©e
–
˘x
, 
öput
, 
ûí
 );

284 
	}
}

289 
	$md2_hmac_föish
–
md2_c⁄ãxt
 *
˘x
, 
ouçut
[16] )

291 
tmpbuf
[16];

293 
	`md2_föish
–
˘x
, 
tmpbuf
 );

294 
	`md2_°¨ts
–
˘x
 );

295 
	`md2_upd©e
–
˘x
, ctx->
›ad
, 16 );

296 
	`md2_upd©e
–
˘x
, 
tmpbuf
, 16 );

297 
	`md2_föish
–
˘x
, 
ouçut
 );

299 
	`pﬁ¨s¶_zîoize
–
tmpbuf
, (Åmpbuf ) );

300 
	}
}

305 
	$md2_hmac_ª£t
–
md2_c⁄ãxt
 *
˘x
 )

307 
	`md2_°¨ts
–
˘x
 );

308 
	`md2_upd©e
–
˘x
, ctx->
ùad
, 16 );

309 
	}
}

314 
	$md2_hmac
–c⁄° *
key
, 
size_t
 
keyÀn
,

315 c⁄° *
öput
, 
size_t
 
ûí
,

316 
ouçut
[16] )

318 
md2_c⁄ãxt
 
˘x
;

320 
	`md2_öô
–&
˘x
 );

321 
	`md2_hmac_°¨ts
–&
˘x
, 
key
, 
keyÀn
 );

322 
	`md2_hmac_upd©e
–&
˘x
, 
öput
, 
ûí
 );

323 
	`md2_hmac_föish
–&
˘x
, 
ouçut
 );

324 
	`md2_‰ì
–&
˘x
 );

325 
	}
}

327 #i‡
deföed
(
POLARSSL_SELF_TEST
)

332 c⁄° 
	gmd2_ã°_°r
[7][81] =

344 c⁄° 
	gmd2_ã°_sum
[7][16] =

365 
	$md2_£lf_ã°
–
vîbo£
 )

367 
i
;

368 
md2sum
[16];

370  
i
 = 0; i < 7; i++ )

372 if–
vîbo£
 != 0 )

373 
	`pﬁ¨s¶_¥ötf
–" MD2Åe° #%d: ", 
i
 + 1 );

375 
	`md2
–(*Ë
md2_ã°_°r
[
i
],

376 
	`°æí
–
md2_ã°_°r
[
i
] ), 
md2sum
 );

378 if–
	`memcmp
–
md2sum
, 
md2_ã°_sum
[
i
], 16 ) != 0 )

380 if–
vîbo£
 != 0 )

381 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

386 if–
vîbo£
 != 0 )

387 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

390 if–
vîbo£
 != 0 )

391 
	`pﬁ¨s¶_¥ötf
( "\n" );

394 
	}
}

	@polarssl/library/md4.c

32 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

33 
	~"pﬁ¨s¶/c⁄fig.h
"

35 #ö˛udê
POLARSSL_CONFIG_FILE


38 #i‡
deföed
(
POLARSSL_MD4_C
)

40 
	~"pﬁ¨s¶/md4.h
"

42 #i‡
deföed
(
POLARSSL_FS_IO
Ë|| deföed(
POLARSSL_SELF_TEST
)

43 
	~<°dio.h
>

46 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

47 
	~"pﬁ¨s¶/∂©f‹m.h
"

49 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

53 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

54 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

55 
	}
}

57 #i‡!
deföed
(
POLARSSL_MD4_ALT
)

62 #i‚de‡
GET_UINT32_LE


63 
	#GET_UINT32_LE
(
n
,
b
,
i
) \

65 (
n
Ë–(
uöt32_t
Ë(
b
)[(
i
) ] ) \

66 | ( (
uöt32_t
Ë(
b
)[(
i
) + 1] << 8 ) \

67 | ( (
uöt32_t
Ë(
b
)[(
i
) + 2] << 16 ) \

68 | ( (
uöt32_t
Ë(
b
)[(
i
) + 3] << 24 ); \

69 }

	)

72 #i‚de‡
PUT_UINT32_LE


73 
	#PUT_UINT32_LE
(
n
,
b
,
i
) \

75 (
b
)[(
i
Ë] = (Ë–(
n
) ); \

76 (
b
)[(
i
Ë+ 1] = (Ë–(
n
) >> 8 ); \

77 (
b
)[(
i
Ë+ 2] = (Ë–(
n
) >> 16 ); \

78 (
b
)[(
i
Ë+ 3] = (Ë–(
n
) >> 24 ); \

79 }

	)

82 
	$md4_öô
–
md4_c⁄ãxt
 *
˘x
 )

84 
	`mem£t
–
˘x
, 0, –
md4_c⁄ãxt
 ) );

85 
	}
}

87 
	$md4_‰ì
–
md4_c⁄ãxt
 *
˘x
 )

89 if–
˘x
 =
NULL
 )

92 
	`pﬁ¨s¶_zîoize
–
˘x
, –
md4_c⁄ãxt
 ) );

93 
	}
}

98 
	$md4_°¨ts
–
md4_c⁄ãxt
 *
˘x
 )

100 
˘x
->
tŸÆ
[0] = 0;

101 
˘x
->
tŸÆ
[1] = 0;

103 
˘x
->
°©e
[0] = 0x67452301;

104 
˘x
->
°©e
[1] = 0xEFCDAB89;

105 
˘x
->
°©e
[2] = 0x98BADCFE;

106 
˘x
->
°©e
[3] = 0x10325476;

107 
	}
}

109 
	$md4_¥o˚ss
–
md4_c⁄ãxt
 *
˘x
, c⁄° 
d©a
[64] )

111 
uöt32_t
 
X
[16], 
A
, 
B
, 
C
, 
D
;

113 
	`GET_UINT32_LE
–
X
[ 0], 
d©a
, 0 );

114 
	`GET_UINT32_LE
–
X
[ 1], 
d©a
, 4 );

115 
	`GET_UINT32_LE
–
X
[ 2], 
d©a
, 8 );

116 
	`GET_UINT32_LE
–
X
[ 3], 
d©a
, 12 );

117 
	`GET_UINT32_LE
–
X
[ 4], 
d©a
, 16 );

118 
	`GET_UINT32_LE
–
X
[ 5], 
d©a
, 20 );

119 
	`GET_UINT32_LE
–
X
[ 6], 
d©a
, 24 );

120 
	`GET_UINT32_LE
–
X
[ 7], 
d©a
, 28 );

121 
	`GET_UINT32_LE
–
X
[ 8], 
d©a
, 32 );

122 
	`GET_UINT32_LE
–
X
[ 9], 
d©a
, 36 );

123 
	`GET_UINT32_LE
–
X
[10], 
d©a
, 40 );

124 
	`GET_UINT32_LE
–
X
[11], 
d©a
, 44 );

125 
	`GET_UINT32_LE
–
X
[12], 
d©a
, 48 );

126 
	`GET_UINT32_LE
–
X
[13], 
d©a
, 52 );

127 
	`GET_UINT32_LE
–
X
[14], 
d©a
, 56 );

128 
	`GET_UINT32_LE
–
X
[15], 
d©a
, 60 );

130 
	#S
(
x
,
n
Ë((x <<ÇË| ((x & 0xFFFFFFFFË>> (32 -Ç)))

	)

132 
A
 = 
˘x
->
°©e
[0];

133 
B
 = 
˘x
->
°©e
[1];

134 
C
 = 
˘x
->
°©e
[2];

135 
D
 = 
˘x
->
°©e
[3];

137 
	#F
(
x
, 
y
, 
z
Ë((x & yË| ((~xË& z))

	)

138 
	#P
(
a
,
b
,
c
,
d
,
x
,
s
Ë{á +
	`F
(b,c,dË+ x;á = 
	`S
◊,s); }

	)

140 
	`P
–
A
, 
B
, 
C
, 
D
, 
X
[ 0], 3 );

141 
	`P
–
D
, 
A
, 
B
, 
C
, 
X
[ 1], 7 );

142 
	`P
–
C
, 
D
, 
A
, 
B
, 
X
[ 2], 11 );

143 
	`P
–
B
, 
C
, 
D
, 
A
, 
X
[ 3], 19 );

144 
	`P
–
A
, 
B
, 
C
, 
D
, 
X
[ 4], 3 );

145 
	`P
–
D
, 
A
, 
B
, 
C
, 
X
[ 5], 7 );

146 
	`P
–
C
, 
D
, 
A
, 
B
, 
X
[ 6], 11 );

147 
	`P
–
B
, 
C
, 
D
, 
A
, 
X
[ 7], 19 );

148 
	`P
–
A
, 
B
, 
C
, 
D
, 
X
[ 8], 3 );

149 
	`P
–
D
, 
A
, 
B
, 
C
, 
X
[ 9], 7 );

150 
	`P
–
C
, 
D
, 
A
, 
B
, 
X
[10], 11 );

151 
	`P
–
B
, 
C
, 
D
, 
A
, 
X
[11], 19 );

152 
	`P
–
A
, 
B
, 
C
, 
D
, 
X
[12], 3 );

153 
	`P
–
D
, 
A
, 
B
, 
C
, 
X
[13], 7 );

154 
	`P
–
C
, 
D
, 
A
, 
B
, 
X
[14], 11 );

155 
	`P
–
B
, 
C
, 
D
, 
A
, 
X
[15], 19 );

157 #unde‡
P


158 #unde‡
F


160 
	#F
(
x
,
y
,
z
Ë((x & yË| (x & zË| (y & z))

	)

161 
	#P
(
a
,
b
,
c
,
d
,
x
,
s
Ë{á +
	`F
(b,c,dË+ x + 0x5A827999;á = 
	`S
◊,s); }

	)

163 
	`P
–
A
, 
B
, 
C
, 
D
, 
X
[ 0], 3 );

164 
	`P
–
D
, 
A
, 
B
, 
C
, 
X
[ 4], 5 );

165 
	`P
–
C
, 
D
, 
A
, 
B
, 
X
[ 8], 9 );

166 
	`P
–
B
, 
C
, 
D
, 
A
, 
X
[12], 13 );

167 
	`P
–
A
, 
B
, 
C
, 
D
, 
X
[ 1], 3 );

168 
	`P
–
D
, 
A
, 
B
, 
C
, 
X
[ 5], 5 );

169 
	`P
–
C
, 
D
, 
A
, 
B
, 
X
[ 9], 9 );

170 
	`P
–
B
, 
C
, 
D
, 
A
, 
X
[13], 13 );

171 
	`P
–
A
, 
B
, 
C
, 
D
, 
X
[ 2], 3 );

172 
	`P
–
D
, 
A
, 
B
, 
C
, 
X
[ 6], 5 );

173 
	`P
–
C
, 
D
, 
A
, 
B
, 
X
[10], 9 );

174 
	`P
–
B
, 
C
, 
D
, 
A
, 
X
[14], 13 );

175 
	`P
–
A
, 
B
, 
C
, 
D
, 
X
[ 3], 3 );

176 
	`P
–
D
, 
A
, 
B
, 
C
, 
X
[ 7], 5 );

177 
	`P
–
C
, 
D
, 
A
, 
B
, 
X
[11], 9 );

178 
	`P
–
B
, 
C
, 
D
, 
A
, 
X
[15], 13 );

180 #unde‡
P


181 #unde‡
F


183 
	#F
(
x
,
y
,
z
Ë(x ^ y ^ z)

	)

184 
	#P
(
a
,
b
,
c
,
d
,
x
,
s
Ë{á +
	`F
(b,c,dË+ x + 0x6ED9EBA1;á = 
	`S
◊,s); }

	)

186 
	`P
–
A
, 
B
, 
C
, 
D
, 
X
[ 0], 3 );

187 
	`P
–
D
, 
A
, 
B
, 
C
, 
X
[ 8], 9 );

188 
	`P
–
C
, 
D
, 
A
, 
B
, 
X
[ 4], 11 );

189 
	`P
–
B
, 
C
, 
D
, 
A
, 
X
[12], 15 );

190 
	`P
–
A
, 
B
, 
C
, 
D
, 
X
[ 2], 3 );

191 
	`P
–
D
, 
A
, 
B
, 
C
, 
X
[10], 9 );

192 
	`P
–
C
, 
D
, 
A
, 
B
, 
X
[ 6], 11 );

193 
	`P
–
B
, 
C
, 
D
, 
A
, 
X
[14], 15 );

194 
	`P
–
A
, 
B
, 
C
, 
D
, 
X
[ 1], 3 );

195 
	`P
–
D
, 
A
, 
B
, 
C
, 
X
[ 9], 9 );

196 
	`P
–
C
, 
D
, 
A
, 
B
, 
X
[ 5], 11 );

197 
	`P
–
B
, 
C
, 
D
, 
A
, 
X
[13], 15 );

198 
	`P
–
A
, 
B
, 
C
, 
D
, 
X
[ 3], 3 );

199 
	`P
–
D
, 
A
, 
B
, 
C
, 
X
[11], 9 );

200 
	`P
–
C
, 
D
, 
A
, 
B
, 
X
[ 7], 11 );

201 
	`P
–
B
, 
C
, 
D
, 
A
, 
X
[15], 15 );

203 #unde‡
F


204 #unde‡
P


206 
˘x
->
°©e
[0] +
A
;

207 
˘x
->
°©e
[1] +
B
;

208 
˘x
->
°©e
[2] +
C
;

209 
˘x
->
°©e
[3] +
D
;

210 
	}
}

215 
	$md4_upd©e
–
md4_c⁄ãxt
 *
˘x
, c⁄° *
öput
, 
size_t
 
ûí
 )

217 
size_t
 
fûl
;

218 
uöt32_t
 
À·
;

220 if–
ûí
 == 0 )

223 
À·
 = 
˘x
->
tŸÆ
[0] & 0x3F;

224 
fûl
 = 64 - 
À·
;

226 
˘x
->
tŸÆ
[0] +(
uöt32_t
Ë
ûí
;

227 
˘x
->
tŸÆ
[0] &= 0xFFFFFFFF;

229 if–
˘x
->
tŸÆ
[0] < (
uöt32_t
Ë
ûí
 )

230 
˘x
->
tŸÆ
[1]++;

232 if–
À·
 && 
ûí
 >
fûl
 )

234 
	`mem˝y
–(*Ë(
˘x
->
buf„r
 + 
À·
),

235 (*Ë
öput
, 
fûl
 );

236 
	`md4_¥o˚ss
–
˘x
, ctx->
buf„r
 );

237 
öput
 +
fûl
;

238 
ûí
 -
fûl
;

239 
À·
 = 0;

242  
ûí
 >= 64 )

244 
	`md4_¥o˚ss
–
˘x
, 
öput
 );

245 
öput
 += 64;

246 
ûí
 -= 64;

249 if–
ûí
 > 0 )

251 
	`mem˝y
–(*Ë(
˘x
->
buf„r
 + 
À·
),

252 (*Ë
öput
, 
ûí
 );

254 
	}
}

256 c⁄° 
	gmd4_∑ddög
[64] =

267 
	$md4_föish
–
md4_c⁄ãxt
 *
˘x
, 
ouçut
[16] )

269 
uöt32_t
 
œ°
, 
∑dn
;

270 
uöt32_t
 
high
, 
low
;

271 
msgÀn
[8];

273 
high
 = ( 
˘x
->
tŸÆ
[0] >> 29 )

274 | ( 
˘x
->
tŸÆ
[1] << 3 );

275 
low
 = ( 
˘x
->
tŸÆ
[0] << 3 );

277 
	`PUT_UINT32_LE
–
low
, 
msgÀn
, 0 );

278 
	`PUT_UINT32_LE
–
high
, 
msgÀn
, 4 );

280 
œ°
 = 
˘x
->
tŸÆ
[0] & 0x3F;

281 
∑dn
 = ( 
œ°
 < 56 ) ? ( 56 -Üast ) : ( 120 -Üast );

283 
	`md4_upd©e
–
˘x
, (*Ë
md4_∑ddög
, 
∑dn
 );

284 
	`md4_upd©e
–
˘x
, 
msgÀn
, 8 );

286 
	`PUT_UINT32_LE
–
˘x
->
°©e
[0], 
ouçut
, 0 );

287 
	`PUT_UINT32_LE
–
˘x
->
°©e
[1], 
ouçut
, 4 );

288 
	`PUT_UINT32_LE
–
˘x
->
°©e
[2], 
ouçut
, 8 );

289 
	`PUT_UINT32_LE
–
˘x
->
°©e
[3], 
ouçut
, 12 );

290 
	}
}

297 
	$md4
–c⁄° *
öput
, 
size_t
 
ûí
, 
ouçut
[16] )

299 
md4_c⁄ãxt
 
˘x
;

301 
	`md4_öô
–&
˘x
 );

302 
	`md4_°¨ts
–&
˘x
 );

303 
	`md4_upd©e
–&
˘x
, 
öput
, 
ûí
 );

304 
	`md4_föish
–&
˘x
, 
ouçut
 );

305 
	`md4_‰ì
–&
˘x
 );

306 
	}
}

308 #i‡
deföed
(
POLARSSL_FS_IO
)

312 
	$md4_fûe
–c⁄° *
∑th
, 
ouçut
[16] )

314 
FILE
 *
f
;

315 
size_t
 
n
;

316 
md4_c⁄ãxt
 
˘x
;

317 
buf
[1024];

319 if––
f
 = 
	`f›í
–
∑th
, "rb" ) ) =
NULL
 )

320 –
POLARSSL_ERR_MD4_FILE_IO_ERROR
 );

322 
	`md4_öô
–&
˘x
 );

323 
	`md4_°¨ts
–&
˘x
 );

325  ( 
n
 = 
	`‰ód
–
buf
, 1, –bu‡), 
f
 ) ) > 0 )

326 
	`md4_upd©e
–&
˘x
, 
buf
, 
n
 );

328 
	`md4_föish
–&
˘x
, 
ouçut
 );

329 
	`md4_‰ì
–&
˘x
 );

331 if–
	`„º‹
–
f
 ) != 0 )

333 
	`f˛o£
–
f
 );

334 –
POLARSSL_ERR_MD4_FILE_IO_ERROR
 );

337 
	`f˛o£
–
f
 );

339 
	}
}

345 
	$md4_hmac_°¨ts
–
md4_c⁄ãxt
 *
˘x
, c⁄° *
key
,

346 
size_t
 
keyÀn
 )

348 
size_t
 
i
;

349 
sum
[16];

351 if–
keyÀn
 > 64 )

353 
	`md4
–
key
, 
keyÀn
, 
sum
 );

354 
keyÀn
 = 16;

355 
key
 = 
sum
;

358 
	`mem£t
–
˘x
->
ùad
, 0x36, 64 );

359 
	`mem£t
–
˘x
->
›ad
, 0x5C, 64 );

361  
i
 = 0; i < 
keyÀn
; i++ )

363 
˘x
->
ùad
[
i
] = ()–˘x->ùad[i] ^ 
key
[i] );

364 
˘x
->
›ad
[
i
] = ()–˘x->›ad[i] ^ 
key
[i] );

367 
	`md4_°¨ts
–
˘x
 );

368 
	`md4_upd©e
–
˘x
, ctx->
ùad
, 64 );

370 
	`pﬁ¨s¶_zîoize
–
sum
, ( sum ) );

371 
	}
}

376 
	$md4_hmac_upd©e
–
md4_c⁄ãxt
 *
˘x
, c⁄° *
öput
,

377 
size_t
 
ûí
 )

379 
	`md4_upd©e
–
˘x
, 
öput
, 
ûí
 );

380 
	}
}

385 
	$md4_hmac_föish
–
md4_c⁄ãxt
 *
˘x
, 
ouçut
[16] )

387 
tmpbuf
[16];

389 
	`md4_föish
–
˘x
, 
tmpbuf
 );

390 
	`md4_°¨ts
–
˘x
 );

391 
	`md4_upd©e
–
˘x
, ctx->
›ad
, 64 );

392 
	`md4_upd©e
–
˘x
, 
tmpbuf
, 16 );

393 
	`md4_föish
–
˘x
, 
ouçut
 );

395 
	`pﬁ¨s¶_zîoize
–
tmpbuf
, (Åmpbuf ) );

396 
	}
}

401 
	$md4_hmac_ª£t
–
md4_c⁄ãxt
 *
˘x
 )

403 
	`md4_°¨ts
–
˘x
 );

404 
	`md4_upd©e
–
˘x
, ctx->
ùad
, 64 );

405 
	}
}

410 
	$md4_hmac
–c⁄° *
key
, 
size_t
 
keyÀn
,

411 c⁄° *
öput
, 
size_t
 
ûí
,

412 
ouçut
[16] )

414 
md4_c⁄ãxt
 
˘x
;

416 
	`md4_öô
–&
˘x
 );

417 
	`md4_hmac_°¨ts
–&
˘x
, 
key
, 
keyÀn
 );

418 
	`md4_hmac_upd©e
–&
˘x
, 
öput
, 
ûí
 );

419 
	`md4_hmac_föish
–&
˘x
, 
ouçut
 );

420 
	`md4_‰ì
–&
˘x
 );

421 
	}
}

423 #i‡
deföed
(
POLARSSL_SELF_TEST
)

428 c⁄° 
	gmd4_ã°_°r
[7][81] =

440 c⁄° 
	gmd4_ã°_sum
[7][16] =

461 
	$md4_£lf_ã°
–
vîbo£
 )

463 
i
;

464 
md4sum
[16];

466  
i
 = 0; i < 7; i++ )

468 if–
vîbo£
 != 0 )

469 
	`pﬁ¨s¶_¥ötf
–" MD4Åe° #%d: ", 
i
 + 1 );

471 
	`md4
–(*Ë
md4_ã°_°r
[
i
],

472 
	`°æí
–
md4_ã°_°r
[
i
] ), 
md4sum
 );

474 if–
	`memcmp
–
md4sum
, 
md4_ã°_sum
[
i
], 16 ) != 0 )

476 if–
vîbo£
 != 0 )

477 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

482 if–
vîbo£
 != 0 )

483 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

486 if–
vîbo£
 != 0 )

487 
	`pﬁ¨s¶_¥ötf
( "\n" );

490 
	}
}

	@polarssl/library/md5.c

31 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

32 
	~"pﬁ¨s¶/c⁄fig.h
"

34 #ö˛udê
POLARSSL_CONFIG_FILE


37 #i‡
deföed
(
POLARSSL_MD5_C
)

39 
	~"pﬁ¨s¶/md5.h
"

41 #i‡
deföed
(
POLARSSL_FS_IO
Ë|| deföed(
POLARSSL_SELF_TEST
)

42 
	~<°dio.h
>

45 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

46 
	~"pﬁ¨s¶/∂©f‹m.h
"

48 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

52 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

53 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

54 
	}
}

56 #i‡!
deföed
(
POLARSSL_MD5_ALT
)

61 #i‚de‡
GET_UINT32_LE


62 
	#GET_UINT32_LE
(
n
,
b
,
i
) \

64 (
n
Ë–(
uöt32_t
Ë(
b
)[(
i
) ] ) \

65 | ( (
uöt32_t
Ë(
b
)[(
i
) + 1] << 8 ) \

66 | ( (
uöt32_t
Ë(
b
)[(
i
) + 2] << 16 ) \

67 | ( (
uöt32_t
Ë(
b
)[(
i
) + 3] << 24 ); \

68 }

	)

71 #i‚de‡
PUT_UINT32_LE


72 
	#PUT_UINT32_LE
(
n
,
b
,
i
) \

74 (
b
)[(
i
Ë] = (Ë–(
n
) ); \

75 (
b
)[(
i
Ë+ 1] = (Ë–(
n
) >> 8 ); \

76 (
b
)[(
i
Ë+ 2] = (Ë–(
n
) >> 16 ); \

77 (
b
)[(
i
Ë+ 3] = (Ë–(
n
) >> 24 ); \

78 }

	)

81 
	$md5_öô
–
md5_c⁄ãxt
 *
˘x
 )

83 
	`mem£t
–
˘x
, 0, –
md5_c⁄ãxt
 ) );

84 
	}
}

86 
	$md5_‰ì
–
md5_c⁄ãxt
 *
˘x
 )

88 if–
˘x
 =
NULL
 )

91 
	`pﬁ¨s¶_zîoize
–
˘x
, –
md5_c⁄ãxt
 ) );

92 
	}
}

97 
	$md5_°¨ts
–
md5_c⁄ãxt
 *
˘x
 )

99 
˘x
->
tŸÆ
[0] = 0;

100 
˘x
->
tŸÆ
[1] = 0;

102 
˘x
->
°©e
[0] = 0x67452301;

103 
˘x
->
°©e
[1] = 0xEFCDAB89;

104 
˘x
->
°©e
[2] = 0x98BADCFE;

105 
˘x
->
°©e
[3] = 0x10325476;

106 
	}
}

108 
	$md5_¥o˚ss
–
md5_c⁄ãxt
 *
˘x
, c⁄° 
d©a
[64] )

110 
uöt32_t
 
X
[16], 
A
, 
B
, 
C
, 
D
;

112 
	`GET_UINT32_LE
–
X
[ 0], 
d©a
, 0 );

113 
	`GET_UINT32_LE
–
X
[ 1], 
d©a
, 4 );

114 
	`GET_UINT32_LE
–
X
[ 2], 
d©a
, 8 );

115 
	`GET_UINT32_LE
–
X
[ 3], 
d©a
, 12 );

116 
	`GET_UINT32_LE
–
X
[ 4], 
d©a
, 16 );

117 
	`GET_UINT32_LE
–
X
[ 5], 
d©a
, 20 );

118 
	`GET_UINT32_LE
–
X
[ 6], 
d©a
, 24 );

119 
	`GET_UINT32_LE
–
X
[ 7], 
d©a
, 28 );

120 
	`GET_UINT32_LE
–
X
[ 8], 
d©a
, 32 );

121 
	`GET_UINT32_LE
–
X
[ 9], 
d©a
, 36 );

122 
	`GET_UINT32_LE
–
X
[10], 
d©a
, 40 );

123 
	`GET_UINT32_LE
–
X
[11], 
d©a
, 44 );

124 
	`GET_UINT32_LE
–
X
[12], 
d©a
, 48 );

125 
	`GET_UINT32_LE
–
X
[13], 
d©a
, 52 );

126 
	`GET_UINT32_LE
–
X
[14], 
d©a
, 56 );

127 
	`GET_UINT32_LE
–
X
[15], 
d©a
, 60 );

129 
	#S
(
x
,
n
Ë((x <<ÇË| ((x & 0xFFFFFFFFË>> (32 -Ç)))

	)

131 
	#P
(
a
,
b
,
c
,
d
,
k
,
s
,
t
) \

133 
a
 +
	`F
(
b
,
c
,
d
Ë+ 
X
[
k
] + 
t
;á = 
	`S
◊,
s
) + b; \

134 }

	)

136 
A
 = 
˘x
->
°©e
[0];

137 
B
 = 
˘x
->
°©e
[1];

138 
C
 = 
˘x
->
°©e
[2];

139 
D
 = 
˘x
->
°©e
[3];

141 
	#F
(
x
,
y
,
z
Ë(z ^ (x & (y ^ z)))

	)

143 
	`P
–
A
, 
B
, 
C
, 
D
, 0, 7, 0xD76AA478 );

144 
	`P
–
D
, 
A
, 
B
, 
C
, 1, 12, 0xE8C7B756 );

145 
	`P
–
C
, 
D
, 
A
, 
B
, 2, 17, 0x242070DB );

146 
	`P
–
B
, 
C
, 
D
, 
A
, 3, 22, 0xC1BDCEEE );

147 
	`P
–
A
, 
B
, 
C
, 
D
, 4, 7, 0xF57C0FAF );

148 
	`P
–
D
, 
A
, 
B
, 
C
, 5, 12, 0x4787C62A );

149 
	`P
–
C
, 
D
, 
A
, 
B
, 6, 17, 0xA8304613 );

150 
	`P
–
B
, 
C
, 
D
, 
A
, 7, 22, 0xFD469501 );

151 
	`P
–
A
, 
B
, 
C
, 
D
, 8, 7, 0x698098D8 );

152 
	`P
–
D
, 
A
, 
B
, 
C
, 9, 12, 0x8B44F7AF );

153 
	`P
–
C
, 
D
, 
A
, 
B
, 10, 17, 0xFFFF5BB1 );

154 
	`P
–
B
, 
C
, 
D
, 
A
, 11, 22, 0x895CD7BE );

155 
	`P
–
A
, 
B
, 
C
, 
D
, 12, 7, 0x6B901122 );

156 
	`P
–
D
, 
A
, 
B
, 
C
, 13, 12, 0xFD987193 );

157 
	`P
–
C
, 
D
, 
A
, 
B
, 14, 17, 0xA679438E );

158 
	`P
–
B
, 
C
, 
D
, 
A
, 15, 22, 0x49B40821 );

160 #unde‡
F


162 
	#F
(
x
,
y
,
z
Ë(y ^ (z & (x ^ y)))

	)

164 
	`P
–
A
, 
B
, 
C
, 
D
, 1, 5, 0xF61E2562 );

165 
	`P
–
D
, 
A
, 
B
, 
C
, 6, 9, 0xC040B340 );

166 
	`P
–
C
, 
D
, 
A
, 
B
, 11, 14, 0x265E5A51 );

167 
	`P
–
B
, 
C
, 
D
, 
A
, 0, 20, 0xE9B6C7AA );

168 
	`P
–
A
, 
B
, 
C
, 
D
, 5, 5, 0xD62F105D );

169 
	`P
–
D
, 
A
, 
B
, 
C
, 10, 9, 0x02441453 );

170 
	`P
–
C
, 
D
, 
A
, 
B
, 15, 14, 0xD8A1E681 );

171 
	`P
–
B
, 
C
, 
D
, 
A
, 4, 20, 0xE7D3FBC8 );

172 
	`P
–
A
, 
B
, 
C
, 
D
, 9, 5, 0x21E1CDE6 );

173 
	`P
–
D
, 
A
, 
B
, 
C
, 14, 9, 0xC33707D6 );

174 
	`P
–
C
, 
D
, 
A
, 
B
, 3, 14, 0xF4D50D87 );

175 
	`P
–
B
, 
C
, 
D
, 
A
, 8, 20, 0x455A14ED );

176 
	`P
–
A
, 
B
, 
C
, 
D
, 13, 5, 0xA9E3E905 );

177 
	`P
–
D
, 
A
, 
B
, 
C
, 2, 9, 0xFCEFA3F8 );

178 
	`P
–
C
, 
D
, 
A
, 
B
, 7, 14, 0x676F02D9 );

179 
	`P
–
B
, 
C
, 
D
, 
A
, 12, 20, 0x8D2A4C8A );

181 #unde‡
F


183 
	#F
(
x
,
y
,
z
Ë(x ^ y ^ z)

	)

185 
	`P
–
A
, 
B
, 
C
, 
D
, 5, 4, 0xFFFA3942 );

186 
	`P
–
D
, 
A
, 
B
, 
C
, 8, 11, 0x8771F681 );

187 
	`P
–
C
, 
D
, 
A
, 
B
, 11, 16, 0x6D9D6122 );

188 
	`P
–
B
, 
C
, 
D
, 
A
, 14, 23, 0xFDE5380C );

189 
	`P
–
A
, 
B
, 
C
, 
D
, 1, 4, 0xA4BEEA44 );

190 
	`P
–
D
, 
A
, 
B
, 
C
, 4, 11, 0x4BDECFA9 );

191 
	`P
–
C
, 
D
, 
A
, 
B
, 7, 16, 0xF6BB4B60 );

192 
	`P
–
B
, 
C
, 
D
, 
A
, 10, 23, 0xBEBFBC70 );

193 
	`P
–
A
, 
B
, 
C
, 
D
, 13, 4, 0x289B7EC6 );

194 
	`P
–
D
, 
A
, 
B
, 
C
, 0, 11, 0xEAA127FA );

195 
	`P
–
C
, 
D
, 
A
, 
B
, 3, 16, 0xD4EF3085 );

196 
	`P
–
B
, 
C
, 
D
, 
A
, 6, 23, 0x04881D05 );

197 
	`P
–
A
, 
B
, 
C
, 
D
, 9, 4, 0xD9D4D039 );

198 
	`P
–
D
, 
A
, 
B
, 
C
, 12, 11, 0xE6DB99E5 );

199 
	`P
–
C
, 
D
, 
A
, 
B
, 15, 16, 0x1FA27CF8 );

200 
	`P
–
B
, 
C
, 
D
, 
A
, 2, 23, 0xC4AC5665 );

202 #unde‡
F


204 
	#F
(
x
,
y
,
z
Ë(y ^ (x | ~z))

	)

206 
	`P
–
A
, 
B
, 
C
, 
D
, 0, 6, 0xF4292244 );

207 
	`P
–
D
, 
A
, 
B
, 
C
, 7, 10, 0x432AFF97 );

208 
	`P
–
C
, 
D
, 
A
, 
B
, 14, 15, 0xAB9423A7 );

209 
	`P
–
B
, 
C
, 
D
, 
A
, 5, 21, 0xFC93A039 );

210 
	`P
–
A
, 
B
, 
C
, 
D
, 12, 6, 0x655B59C3 );

211 
	`P
–
D
, 
A
, 
B
, 
C
, 3, 10, 0x8F0CCC92 );

212 
	`P
–
C
, 
D
, 
A
, 
B
, 10, 15, 0xFFEFF47D );

213 
	`P
–
B
, 
C
, 
D
, 
A
, 1, 21, 0x85845DD1 );

214 
	`P
–
A
, 
B
, 
C
, 
D
, 8, 6, 0x6FA87E4F );

215 
	`P
–
D
, 
A
, 
B
, 
C
, 15, 10, 0xFE2CE6E0 );

216 
	`P
–
C
, 
D
, 
A
, 
B
, 6, 15, 0xA3014314 );

217 
	`P
–
B
, 
C
, 
D
, 
A
, 13, 21, 0x4E0811A1 );

218 
	`P
–
A
, 
B
, 
C
, 
D
, 4, 6, 0xF7537E82 );

219 
	`P
–
D
, 
A
, 
B
, 
C
, 11, 10, 0xBD3AF235 );

220 
	`P
–
C
, 
D
, 
A
, 
B
, 2, 15, 0x2AD7D2BB );

221 
	`P
–
B
, 
C
, 
D
, 
A
, 9, 21, 0xEB86D391 );

223 #unde‡
F


225 
˘x
->
°©e
[0] +
A
;

226 
˘x
->
°©e
[1] +
B
;

227 
˘x
->
°©e
[2] +
C
;

228 
˘x
->
°©e
[3] +
D
;

229 
	}
}

234 
	$md5_upd©e
–
md5_c⁄ãxt
 *
˘x
, c⁄° *
öput
, 
size_t
 
ûí
 )

236 
size_t
 
fûl
;

237 
uöt32_t
 
À·
;

239 if–
ûí
 == 0 )

242 
À·
 = 
˘x
->
tŸÆ
[0] & 0x3F;

243 
fûl
 = 64 - 
À·
;

245 
˘x
->
tŸÆ
[0] +(
uöt32_t
Ë
ûí
;

246 
˘x
->
tŸÆ
[0] &= 0xFFFFFFFF;

248 if–
˘x
->
tŸÆ
[0] < (
uöt32_t
Ë
ûí
 )

249 
˘x
->
tŸÆ
[1]++;

251 if–
À·
 && 
ûí
 >
fûl
 )

253 
	`mem˝y
–(*Ë(
˘x
->
buf„r
 + 
À·
), 
öput
, 
fûl
 );

254 
	`md5_¥o˚ss
–
˘x
, ctx->
buf„r
 );

255 
öput
 +
fûl
;

256 
ûí
 -
fûl
;

257 
À·
 = 0;

260  
ûí
 >= 64 )

262 
	`md5_¥o˚ss
–
˘x
, 
öput
 );

263 
öput
 += 64;

264 
ûí
 -= 64;

267 if–
ûí
 > 0 )

269 
	`mem˝y
–(*Ë(
˘x
->
buf„r
 + 
À·
), 
öput
, 
ûí
 );

271 
	}
}

273 c⁄° 
	gmd5_∑ddög
[64] =

284 
	$md5_föish
–
md5_c⁄ãxt
 *
˘x
, 
ouçut
[16] )

286 
uöt32_t
 
œ°
, 
∑dn
;

287 
uöt32_t
 
high
, 
low
;

288 
msgÀn
[8];

290 
high
 = ( 
˘x
->
tŸÆ
[0] >> 29 )

291 | ( 
˘x
->
tŸÆ
[1] << 3 );

292 
low
 = ( 
˘x
->
tŸÆ
[0] << 3 );

294 
	`PUT_UINT32_LE
–
low
, 
msgÀn
, 0 );

295 
	`PUT_UINT32_LE
–
high
, 
msgÀn
, 4 );

297 
œ°
 = 
˘x
->
tŸÆ
[0] & 0x3F;

298 
∑dn
 = ( 
œ°
 < 56 ) ? ( 56 -Üast ) : ( 120 -Üast );

300 
	`md5_upd©e
–
˘x
, 
md5_∑ddög
, 
∑dn
 );

301 
	`md5_upd©e
–
˘x
, 
msgÀn
, 8 );

303 
	`PUT_UINT32_LE
–
˘x
->
°©e
[0], 
ouçut
, 0 );

304 
	`PUT_UINT32_LE
–
˘x
->
°©e
[1], 
ouçut
, 4 );

305 
	`PUT_UINT32_LE
–
˘x
->
°©e
[2], 
ouçut
, 8 );

306 
	`PUT_UINT32_LE
–
˘x
->
°©e
[3], 
ouçut
, 12 );

307 
	}
}

314 
	$md5
–c⁄° *
öput
, 
size_t
 
ûí
, 
ouçut
[16] )

316 
md5_c⁄ãxt
 
˘x
;

318 
	`md5_öô
–&
˘x
 );

319 
	`md5_°¨ts
–&
˘x
 );

320 
	`md5_upd©e
–&
˘x
, 
öput
, 
ûí
 );

321 
	`md5_föish
–&
˘x
, 
ouçut
 );

322 
	`md5_‰ì
–&
˘x
 );

323 
	}
}

325 #i‡
deföed
(
POLARSSL_FS_IO
)

329 
	$md5_fûe
–c⁄° *
∑th
, 
ouçut
[16] )

331 
FILE
 *
f
;

332 
size_t
 
n
;

333 
md5_c⁄ãxt
 
˘x
;

334 
buf
[1024];

336 if––
f
 = 
	`f›í
–
∑th
, "rb" ) ) =
NULL
 )

337 –
POLARSSL_ERR_MD5_FILE_IO_ERROR
 );

339 
	`md5_öô
–&
˘x
 );

340 
	`md5_°¨ts
–&
˘x
 );

342  ( 
n
 = 
	`‰ód
–
buf
, 1, –bu‡), 
f
 ) ) > 0 )

343 
	`md5_upd©e
–&
˘x
, 
buf
, 
n
 );

345 
	`md5_föish
–&
˘x
, 
ouçut
 );

346 
	`md5_‰ì
–&
˘x
 );

348 if–
	`„º‹
–
f
 ) != 0 )

350 
	`f˛o£
–
f
 );

351 –
POLARSSL_ERR_MD5_FILE_IO_ERROR
 );

354 
	`f˛o£
–
f
 );

356 
	}
}

362 
	$md5_hmac_°¨ts
–
md5_c⁄ãxt
 *
˘x
, c⁄° *
key
,

363 
size_t
 
keyÀn
 )

365 
size_t
 
i
;

366 
sum
[16];

368 if–
keyÀn
 > 64 )

370 
	`md5
–
key
, 
keyÀn
, 
sum
 );

371 
keyÀn
 = 16;

372 
key
 = 
sum
;

375 
	`mem£t
–
˘x
->
ùad
, 0x36, 64 );

376 
	`mem£t
–
˘x
->
›ad
, 0x5C, 64 );

378  
i
 = 0; i < 
keyÀn
; i++ )

380 
˘x
->
ùad
[
i
] = ()–˘x->ùad[i] ^ 
key
[i] );

381 
˘x
->
›ad
[
i
] = ()–˘x->›ad[i] ^ 
key
[i] );

384 
	`md5_°¨ts
–
˘x
 );

385 
	`md5_upd©e
–
˘x
, ctx->
ùad
, 64 );

387 
	`pﬁ¨s¶_zîoize
–
sum
, ( sum ) );

388 
	}
}

393 
	$md5_hmac_upd©e
–
md5_c⁄ãxt
 *
˘x
, c⁄° *
öput
,

394 
size_t
 
ûí
 )

396 
	`md5_upd©e
–
˘x
, 
öput
, 
ûí
 );

397 
	}
}

402 
	$md5_hmac_föish
–
md5_c⁄ãxt
 *
˘x
, 
ouçut
[16] )

404 
tmpbuf
[16];

406 
	`md5_föish
–
˘x
, 
tmpbuf
 );

407 
	`md5_°¨ts
–
˘x
 );

408 
	`md5_upd©e
–
˘x
, ctx->
›ad
, 64 );

409 
	`md5_upd©e
–
˘x
, 
tmpbuf
, 16 );

410 
	`md5_föish
–
˘x
, 
ouçut
 );

412 
	`pﬁ¨s¶_zîoize
–
tmpbuf
, (Åmpbuf ) );

413 
	}
}

418 
	$md5_hmac_ª£t
–
md5_c⁄ãxt
 *
˘x
 )

420 
	`md5_°¨ts
–
˘x
 );

421 
	`md5_upd©e
–
˘x
, ctx->
ùad
, 64 );

422 
	}
}

427 
	$md5_hmac
–c⁄° *
key
, 
size_t
 
keyÀn
,

428 c⁄° *
öput
, 
size_t
 
ûí
,

429 
ouçut
[16] )

431 
md5_c⁄ãxt
 
˘x
;

433 
	`md5_öô
–&
˘x
 );

434 
	`md5_hmac_°¨ts
–&
˘x
, 
key
, 
keyÀn
 );

435 
	`md5_hmac_upd©e
–&
˘x
, 
öput
, 
ûí
 );

436 
	`md5_hmac_föish
–&
˘x
, 
ouçut
 );

437 
	`md5_‰ì
–&
˘x
 );

438 
	}
}

440 #i‡
deföed
(
POLARSSL_SELF_TEST
)

444 
	gmd5_ã°_buf
[7][81] =

456 c⁄° 
	gmd5_ã°_buÊí
[7] =

461 c⁄° 
	gmd5_ã°_sum
[7][16] =

482 
	gmd5_hmac_ã°_key
[7][26] =

494 c⁄° 
	gmd5_hmac_ã°_keyÀn
[7] =

499 
	gmd5_hmac_ã°_buf
[7][74] =

519 c⁄° 
	gmd5_hmac_ã°_buÊí
[7] =

524 c⁄° 
	gmd5_hmac_ã°_sum
[7][16] =

545 
	$md5_£lf_ã°
–
vîbo£
 )

547 
i
, 
buÊí
;

548 
buf
[1024];

549 
md5sum
[16];

550 
md5_c⁄ãxt
 
˘x
;

552  
i
 = 0; i < 7; i++ )

554 if–
vîbo£
 != 0 )

555 
	`pﬁ¨s¶_¥ötf
–" MD5Åe° #%d: ", 
i
 + 1 );

557 
	`md5
–
md5_ã°_buf
[
i
], 
md5_ã°_buÊí
[i], 
md5sum
 );

559 if–
	`memcmp
–
md5sum
, 
md5_ã°_sum
[
i
], 16 ) != 0 )

561 if–
vîbo£
 != 0 )

562 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

567 if–
vîbo£
 != 0 )

568 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

571 if–
vîbo£
 != 0 )

572 
	`pﬁ¨s¶_¥ötf
( "\n" );

574  
i
 = 0; i < 7; i++ )

576 if–
vîbo£
 != 0 )

577 
	`pﬁ¨s¶_¥ötf
–" HMAC-MD5Åe° #%d: ", 
i
 + 1 );

579 if–
i
 == 5 || i == 6 )

581 
	`mem£t
–
buf
, '\xAA', 
buÊí
 = 80 );

582 
	`md5_hmac_°¨ts
–&
˘x
, 
buf
, 
buÊí
 );

585 
	`md5_hmac_°¨ts
–&
˘x
, 
md5_hmac_ã°_key
[
i
],

586 
md5_hmac_ã°_keyÀn
[
i
] );

588 
	`md5_hmac_upd©e
–&
˘x
, 
md5_hmac_ã°_buf
[
i
],

589 
md5_hmac_ã°_buÊí
[
i
] );

591 
	`md5_hmac_föish
–&
˘x
, 
md5sum
 );

593 
buÊí
 = ( 
i
 == 4 ) ? 12 : 16;

595 if–
	`memcmp
–
md5sum
, 
md5_hmac_ã°_sum
[
i
], 
buÊí
 ) != 0 )

597 if–
vîbo£
 != 0 )

598 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

603 if–
vîbo£
 != 0 )

604 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

607 if–
vîbo£
 != 0 )

608 
	`pﬁ¨s¶_¥ötf
( "\n" );

611 
	}
}

	@polarssl/library/md_wrap.c

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"pﬁ¨s¶/c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 #i‡
deföed
(
POLARSSL_MD_C
)

38 
	~"pﬁ¨s¶/md_wøp.h
"

40 #i‡
deföed
(
POLARSSL_MD2_C
)

41 
	~"pﬁ¨s¶/md2.h
"

44 #i‡
deföed
(
POLARSSL_MD4_C
)

45 
	~"pﬁ¨s¶/md4.h
"

48 #i‡
deföed
(
POLARSSL_MD5_C
)

49 
	~"pﬁ¨s¶/md5.h
"

52 #i‡
deföed
(
POLARSSL_RIPEMD160_C
)

53 
	~"pﬁ¨s¶/rùemd160.h
"

56 #i‡
deföed
(
POLARSSL_SHA1_C
)

57 
	~"pﬁ¨s¶/sha1.h
"

60 #i‡
deföed
(
POLARSSL_SHA256_C
)

61 
	~"pﬁ¨s¶/sha256.h
"

64 #i‡
deföed
(
POLARSSL_SHA512_C
)

65 
	~"pﬁ¨s¶/sha512.h
"

68 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

69 
	~"pﬁ¨s¶/∂©f‹m.h
"

71 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

72 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

75 
	~<°dlib.h
>

78 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

79 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

80 
	}
}

82 #i‡
deföed
(
POLARSSL_MD2_C
)

84 
	$md2_°¨ts_wøp
–*
˘x
 )

86 
	`md2_°¨ts
–(
md2_c⁄ãxt
 *Ë
˘x
 );

87 
	}
}

89 
	$md2_upd©e_wøp
–*
˘x
, c⁄° *
öput
,

90 
size_t
 
ûí
 )

92 
	`md2_upd©e
–(
md2_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ûí
 );

93 
	}
}

95 
	$md2_föish_wøp
–*
˘x
, *
ouçut
 )

97 
	`md2_föish
–(
md2_c⁄ãxt
 *Ë
˘x
, 
ouçut
 );

98 
	}
}

100 
	$md2_fûe_wøp
–c⁄° *
∑th
, *
ouçut
 )

102 #i‡
	`deföed
(
POLARSSL_FS_IO
)

103  
	`md2_fûe
–
∑th
, 
ouçut
 );

105 ((Ë
∑th
);

106 ((Ë
ouçut
);

107 –
POLARSSL_ERR_MD_FEATURE_UNAVAILABLE
 );

109 
	}
}

111 
	$md2_hmac_°¨ts_wøp
–*
˘x
, c⁄° *
key
,

112 
size_t
 
keyÀn
 )

114 
	`md2_hmac_°¨ts
–(
md2_c⁄ãxt
 *Ë
˘x
, 
key
, 
keyÀn
 );

115 
	}
}

117 
	$md2_hmac_upd©e_wøp
–*
˘x
, c⁄° *
öput
,

118 
size_t
 
ûí
 )

120 
	`md2_hmac_upd©e
–(
md2_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ûí
 );

121 
	}
}

123 
	$md2_hmac_föish_wøp
–*
˘x
, *
ouçut
 )

125 
	`md2_hmac_föish
–(
md2_c⁄ãxt
 *Ë
˘x
, 
ouçut
 );

126 
	}
}

128 
	$md2_hmac_ª£t_wøp
–*
˘x
 )

130 
	`md2_hmac_ª£t
–(
md2_c⁄ãxt
 *Ë
˘x
 );

131 
	}
}

133 * 
	$md2_˘x_Æloc
( )

135  
	`pﬁ¨s¶_mÆloc
––
md2_c⁄ãxt
 ) );

136 
	}
}

138 
	$md2_˘x_‰ì
–*
˘x
 )

140 
	`pﬁ¨s¶_zîoize
–
˘x
, –
md2_c⁄ãxt
 ) );

141 
	`pﬁ¨s¶_‰ì
–
˘x
 );

142 
	}
}

144 
	$md2_¥o˚ss_wøp
–*
˘x
, c⁄° *
d©a
 )

146 ((Ë
d©a
);

148 
	`md2_¥o˚ss
–(
md2_c⁄ãxt
 *Ë
˘x
 );

149 
	}
}

151 c⁄° 
md_öfo_t
 
	gmd2_öfo
 = {

152 
POLARSSL_MD_MD2
,

155 
md2_°¨ts_wøp
,

156 
md2_upd©e_wøp
,

157 
md2_föish_wøp
,

158 
md2
,

159 
md2_fûe_wøp
,

160 
md2_hmac_°¨ts_wøp
,

161 
md2_hmac_upd©e_wøp
,

162 
md2_hmac_föish_wøp
,

163 
md2_hmac_ª£t_wøp
,

164 
md2_hmac
,

165 
md2_˘x_Æloc
,

166 
md2_˘x_‰ì
,

167 
md2_¥o˚ss_wøp
,

172 #i‡
deföed
(
POLARSSL_MD4_C
)

174 
	$md4_°¨ts_wøp
–*
˘x
 )

176 
	`md4_°¨ts
–(
md4_c⁄ãxt
 *Ë
˘x
 );

177 
	}
}

179 
	$md4_upd©e_wøp
–*
˘x
, c⁄° *
öput
,

180 
size_t
 
ûí
 )

182 
	`md4_upd©e
–(
md4_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ûí
 );

183 
	}
}

185 
	$md4_föish_wøp
–*
˘x
, *
ouçut
 )

187 
	`md4_föish
–(
md4_c⁄ãxt
 *Ë
˘x
, 
ouçut
 );

188 
	}
}

190 
	$md4_fûe_wøp
–c⁄° *
∑th
, *
ouçut
 )

192 #i‡
	`deföed
(
POLARSSL_FS_IO
)

193  
	`md4_fûe
–
∑th
, 
ouçut
 );

195 ((Ë
∑th
);

196 ((Ë
ouçut
);

197 –
POLARSSL_ERR_MD_FEATURE_UNAVAILABLE
 );

199 
	}
}

201 
	$md4_hmac_°¨ts_wøp
–*
˘x
, c⁄° *
key
,

202 
size_t
 
keyÀn
 )

204 
	`md4_hmac_°¨ts
–(
md4_c⁄ãxt
 *Ë
˘x
, 
key
, 
keyÀn
 );

205 
	}
}

207 
	$md4_hmac_upd©e_wøp
–*
˘x
, c⁄° *
öput
,

208 
size_t
 
ûí
 )

210 
	`md4_hmac_upd©e
–(
md4_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ûí
 );

211 
	}
}

213 
	$md4_hmac_föish_wøp
–*
˘x
, *
ouçut
 )

215 
	`md4_hmac_föish
–(
md4_c⁄ãxt
 *Ë
˘x
, 
ouçut
 );

216 
	}
}

218 
	$md4_hmac_ª£t_wøp
–*
˘x
 )

220 
	`md4_hmac_ª£t
–(
md4_c⁄ãxt
 *Ë
˘x
 );

221 
	}
}

223 *
	$md4_˘x_Æloc
( )

225  
	`pﬁ¨s¶_mÆloc
––
md4_c⁄ãxt
 ) );

226 
	}
}

228 
	$md4_˘x_‰ì
–*
˘x
 )

230 
	`pﬁ¨s¶_zîoize
–
˘x
, –
md4_c⁄ãxt
 ) );

231 
	`pﬁ¨s¶_‰ì
–
˘x
 );

232 
	}
}

234 
	$md4_¥o˚ss_wøp
–*
˘x
, c⁄° *
d©a
 )

236 
	`md4_¥o˚ss
–(
md4_c⁄ãxt
 *Ë
˘x
, 
d©a
 );

237 
	}
}

239 c⁄° 
md_öfo_t
 
	gmd4_öfo
 = {

240 
POLARSSL_MD_MD4
,

243 
md4_°¨ts_wøp
,

244 
md4_upd©e_wøp
,

245 
md4_föish_wøp
,

246 
md4
,

247 
md4_fûe_wøp
,

248 
md4_hmac_°¨ts_wøp
,

249 
md4_hmac_upd©e_wøp
,

250 
md4_hmac_föish_wøp
,

251 
md4_hmac_ª£t_wøp
,

252 
md4_hmac
,

253 
md4_˘x_Æloc
,

254 
md4_˘x_‰ì
,

255 
md4_¥o˚ss_wøp
,

260 #i‡
deföed
(
POLARSSL_MD5_C
)

262 
	$md5_°¨ts_wøp
–*
˘x
 )

264 
	`md5_°¨ts
–(
md5_c⁄ãxt
 *Ë
˘x
 );

265 
	}
}

267 
	$md5_upd©e_wøp
–*
˘x
, c⁄° *
öput
,

268 
size_t
 
ûí
 )

270 
	`md5_upd©e
–(
md5_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ûí
 );

271 
	}
}

273 
	$md5_föish_wøp
–*
˘x
, *
ouçut
 )

275 
	`md5_föish
–(
md5_c⁄ãxt
 *Ë
˘x
, 
ouçut
 );

276 
	}
}

278 
	$md5_fûe_wøp
–c⁄° *
∑th
, *
ouçut
 )

280 #i‡
	`deföed
(
POLARSSL_FS_IO
)

281  
	`md5_fûe
–
∑th
, 
ouçut
 );

283 ((Ë
∑th
);

284 ((Ë
ouçut
);

285 –
POLARSSL_ERR_MD_FEATURE_UNAVAILABLE
 );

287 
	}
}

289 
	$md5_hmac_°¨ts_wøp
–*
˘x
, c⁄° *
key
,

290 
size_t
 
keyÀn
 )

292 
	`md5_hmac_°¨ts
–(
md5_c⁄ãxt
 *Ë
˘x
, 
key
, 
keyÀn
 );

293 
	}
}

295 
	$md5_hmac_upd©e_wøp
–*
˘x
, c⁄° *
öput
,

296 
size_t
 
ûí
 )

298 
	`md5_hmac_upd©e
–(
md5_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ûí
 );

299 
	}
}

301 
	$md5_hmac_föish_wøp
–*
˘x
, *
ouçut
 )

303 
	`md5_hmac_föish
–(
md5_c⁄ãxt
 *Ë
˘x
, 
ouçut
 );

304 
	}
}

306 
	$md5_hmac_ª£t_wøp
–*
˘x
 )

308 
	`md5_hmac_ª£t
–(
md5_c⁄ãxt
 *Ë
˘x
 );

309 
	}
}

311 * 
	$md5_˘x_Æloc
( )

313  
	`pﬁ¨s¶_mÆloc
––
md5_c⁄ãxt
 ) );

314 
	}
}

316 
	$md5_˘x_‰ì
–*
˘x
 )

318 
	`pﬁ¨s¶_zîoize
–
˘x
, –
md5_c⁄ãxt
 ) );

319 
	`pﬁ¨s¶_‰ì
–
˘x
 );

320 
	}
}

322 
	$md5_¥o˚ss_wøp
–*
˘x
, c⁄° *
d©a
 )

324 
	`md5_¥o˚ss
–(
md5_c⁄ãxt
 *Ë
˘x
, 
d©a
 );

325 
	}
}

327 c⁄° 
md_öfo_t
 
	gmd5_öfo
 = {

328 
POLARSSL_MD_MD5
,

331 
md5_°¨ts_wøp
,

332 
md5_upd©e_wøp
,

333 
md5_föish_wøp
,

334 
md5
,

335 
md5_fûe_wøp
,

336 
md5_hmac_°¨ts_wøp
,

337 
md5_hmac_upd©e_wøp
,

338 
md5_hmac_föish_wøp
,

339 
md5_hmac_ª£t_wøp
,

340 
md5_hmac
,

341 
md5_˘x_Æloc
,

342 
md5_˘x_‰ì
,

343 
md5_¥o˚ss_wøp
,

348 #i‡
deföed
(
POLARSSL_RIPEMD160_C
)

350 
	$rùemd160_°¨ts_wøp
–*
˘x
 )

352 
	`rùemd160_°¨ts
–(
rùemd160_c⁄ãxt
 *Ë
˘x
 );

353 
	}
}

355 
	$rùemd160_upd©e_wøp
–*
˘x
, c⁄° *
öput
,

356 
size_t
 
ûí
 )

358 
	`rùemd160_upd©e
–(
rùemd160_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ûí
 );

359 
	}
}

361 
	$rùemd160_föish_wøp
–*
˘x
, *
ouçut
 )

363 
	`rùemd160_föish
–(
rùemd160_c⁄ãxt
 *Ë
˘x
, 
ouçut
 );

364 
	}
}

366 
	$rùemd160_fûe_wøp
–c⁄° *
∑th
, *
ouçut
 )

368 #i‡
	`deföed
(
POLARSSL_FS_IO
)

369  
	`rùemd160_fûe
–
∑th
, 
ouçut
 );

371 ((Ë
∑th
);

372 ((Ë
ouçut
);

373 –
POLARSSL_ERR_MD_FEATURE_UNAVAILABLE
 );

375 
	}
}

377 
	$rùemd160_hmac_°¨ts_wøp
–*
˘x
, c⁄° *
key
,

378 
size_t
 
keyÀn
 )

380 
	`rùemd160_hmac_°¨ts
–(
rùemd160_c⁄ãxt
 *Ë
˘x
, 
key
, 
keyÀn
 );

381 
	}
}

383 
	$rùemd160_hmac_upd©e_wøp
–*
˘x
, c⁄° *
öput
,

384 
size_t
 
ûí
 )

386 
	`rùemd160_hmac_upd©e
–(
rùemd160_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ûí
 );

387 
	}
}

389 
	$rùemd160_hmac_föish_wøp
–*
˘x
, *
ouçut
 )

391 
	`rùemd160_hmac_föish
–(
rùemd160_c⁄ãxt
 *Ë
˘x
, 
ouçut
 );

392 
	}
}

394 
	$rùemd160_hmac_ª£t_wøp
–*
˘x
 )

396 
	`rùemd160_hmac_ª£t
–(
rùemd160_c⁄ãxt
 *Ë
˘x
 );

397 
	}
}

399 * 
	$rùemd160_˘x_Æloc
( )

401 
rùemd160_c⁄ãxt
 *
˘x
;

402 
˘x
 = (
rùemd160_c⁄ãxt
 *Ë
	`pﬁ¨s¶_mÆloc
( (Ñipemd160_context ) );

404 if–
˘x
 =
NULL
 )

405 –
NULL
 );

407 
	`rùemd160_öô
–
˘x
 );

409 –
˘x
 );

410 
	}
}

412 
	$rùemd160_˘x_‰ì
–*
˘x
 )

414 
	`rùemd160_‰ì
–(
rùemd160_c⁄ãxt
 *Ë
˘x
 );

415 
	`pﬁ¨s¶_‰ì
–
˘x
 );

416 
	}
}

418 
	$rùemd160_¥o˚ss_wøp
–*
˘x
, c⁄° *
d©a
 )

420 
	`rùemd160_¥o˚ss
–(
rùemd160_c⁄ãxt
 *Ë
˘x
, 
d©a
 );

421 
	}
}

423 c⁄° 
md_öfo_t
 
	grùemd160_öfo
 = {

424 
POLARSSL_MD_RIPEMD160
,

427 
rùemd160_°¨ts_wøp
,

428 
rùemd160_upd©e_wøp
,

429 
rùemd160_föish_wøp
,

430 
rùemd160
,

431 
rùemd160_fûe_wøp
,

432 
rùemd160_hmac_°¨ts_wøp
,

433 
rùemd160_hmac_upd©e_wøp
,

434 
rùemd160_hmac_föish_wøp
,

435 
rùemd160_hmac_ª£t_wøp
,

436 
rùemd160_hmac
,

437 
rùemd160_˘x_Æloc
,

438 
rùemd160_˘x_‰ì
,

439 
rùemd160_¥o˚ss_wøp
,

444 #i‡
deföed
(
POLARSSL_SHA1_C
)

446 
	$sha1_°¨ts_wøp
–*
˘x
 )

448 
	`sha1_°¨ts
–(
sha1_c⁄ãxt
 *Ë
˘x
 );

449 
	}
}

451 
	$sha1_upd©e_wøp
–*
˘x
, c⁄° *
öput
,

452 
size_t
 
ûí
 )

454 
	`sha1_upd©e
–(
sha1_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ûí
 );

455 
	}
}

457 
	$sha1_föish_wøp
–*
˘x
, *
ouçut
 )

459 
	`sha1_föish
–(
sha1_c⁄ãxt
 *Ë
˘x
, 
ouçut
 );

460 
	}
}

462 
	$sha1_fûe_wøp
–c⁄° *
∑th
, *
ouçut
 )

464 #i‡
	`deföed
(
POLARSSL_FS_IO
)

465  
	`sha1_fûe
–
∑th
, 
ouçut
 );

467 ((Ë
∑th
);

468 ((Ë
ouçut
);

469 –
POLARSSL_ERR_MD_FEATURE_UNAVAILABLE
 );

471 
	}
}

473 
	$sha1_hmac_°¨ts_wøp
–*
˘x
, c⁄° *
key
,

474 
size_t
 
keyÀn
 )

476 
	`sha1_hmac_°¨ts
–(
sha1_c⁄ãxt
 *Ë
˘x
, 
key
, 
keyÀn
 );

477 
	}
}

479 
	$sha1_hmac_upd©e_wøp
–*
˘x
, c⁄° *
öput
,

480 
size_t
 
ûí
 )

482 
	`sha1_hmac_upd©e
–(
sha1_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ûí
 );

483 
	}
}

485 
	$sha1_hmac_föish_wøp
–*
˘x
, *
ouçut
 )

487 
	`sha1_hmac_föish
–(
sha1_c⁄ãxt
 *Ë
˘x
, 
ouçut
 );

488 
	}
}

490 
	$sha1_hmac_ª£t_wøp
–*
˘x
 )

492 
	`sha1_hmac_ª£t
–(
sha1_c⁄ãxt
 *Ë
˘x
 );

493 
	}
}

495 * 
	$sha1_˘x_Æloc
( )

497 
sha1_c⁄ãxt
 *
˘x
;

498 
˘x
 = (
sha1_c⁄ãxt
 *Ë
	`pﬁ¨s¶_mÆloc
( ( sha1_context ) );

500 if–
˘x
 =
NULL
 )

501 –
NULL
 );

503 
	`sha1_öô
–
˘x
 );

505 –
˘x
 );

506 
	}
}

508 
	$sha1_˘x_‰ì
–*
˘x
 )

510 
	`sha1_‰ì
–(
sha1_c⁄ãxt
 *Ë
˘x
 );

511 
	`pﬁ¨s¶_‰ì
–
˘x
 );

512 
	}
}

514 
	$sha1_¥o˚ss_wøp
–*
˘x
, c⁄° *
d©a
 )

516 
	`sha1_¥o˚ss
–(
sha1_c⁄ãxt
 *Ë
˘x
, 
d©a
 );

517 
	}
}

519 c⁄° 
md_öfo_t
 
	gsha1_öfo
 = {

520 
POLARSSL_MD_SHA1
,

523 
sha1_°¨ts_wøp
,

524 
sha1_upd©e_wøp
,

525 
sha1_föish_wøp
,

526 
sha1
,

527 
sha1_fûe_wøp
,

528 
sha1_hmac_°¨ts_wøp
,

529 
sha1_hmac_upd©e_wøp
,

530 
sha1_hmac_föish_wøp
,

531 
sha1_hmac_ª£t_wøp
,

532 
sha1_hmac
,

533 
sha1_˘x_Æloc
,

534 
sha1_˘x_‰ì
,

535 
sha1_¥o˚ss_wøp
,

543 #i‡
deföed
(
POLARSSL_SHA256_C
)

545 
	$sha224_°¨ts_wøp
–*
˘x
 )

547 
	`sha256_°¨ts
–(
sha256_c⁄ãxt
 *Ë
˘x
, 1 );

548 
	}
}

550 
	$sha224_upd©e_wøp
–*
˘x
, c⁄° *
öput
,

551 
size_t
 
ûí
 )

553 
	`sha256_upd©e
–(
sha256_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ûí
 );

554 
	}
}

556 
	$sha224_föish_wøp
–*
˘x
, *
ouçut
 )

558 
	`sha256_föish
–(
sha256_c⁄ãxt
 *Ë
˘x
, 
ouçut
 );

559 
	}
}

561 
	$sha224_wøp
–c⁄° *
öput
, 
size_t
 
ûí
,

562 *
ouçut
 )

564 
	`sha256
–
öput
, 
ûí
, 
ouçut
, 1 );

565 
	}
}

567 
	$sha224_fûe_wøp
–c⁄° *
∑th
, *
ouçut
 )

569 #i‡
	`deföed
(
POLARSSL_FS_IO
)

570  
	`sha256_fûe
–
∑th
, 
ouçut
, 1 );

572 ((Ë
∑th
);

573 ((Ë
ouçut
);

574 –
POLARSSL_ERR_MD_FEATURE_UNAVAILABLE
 );

576 
	}
}

578 
	$sha224_hmac_°¨ts_wøp
–*
˘x
, c⁄° *
key
,

579 
size_t
 
keyÀn
 )

581 
	`sha256_hmac_°¨ts
–(
sha256_c⁄ãxt
 *Ë
˘x
, 
key
, 
keyÀn
, 1 );

582 
	}
}

584 
	$sha224_hmac_upd©e_wøp
–*
˘x
, c⁄° *
öput
,

585 
size_t
 
ûí
 )

587 
	`sha256_hmac_upd©e
–(
sha256_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ûí
 );

588 
	}
}

590 
	$sha224_hmac_föish_wøp
–*
˘x
, *
ouçut
 )

592 
	`sha256_hmac_föish
–(
sha256_c⁄ãxt
 *Ë
˘x
, 
ouçut
 );

593 
	}
}

595 
	$sha224_hmac_ª£t_wøp
–*
˘x
 )

597 
	`sha256_hmac_ª£t
–(
sha256_c⁄ãxt
 *Ë
˘x
 );

598 
	}
}

600 
	$sha224_hmac_wøp
–c⁄° *
key
, 
size_t
 
keyÀn
,

601 c⁄° *
öput
, 
size_t
 
ûí
,

602 *
ouçut
 )

604 
	`sha256_hmac
–
key
, 
keyÀn
, 
öput
, 
ûí
, 
ouçut
, 1 );

605 
	}
}

607 * 
	$sha224_˘x_Æloc
( )

609  
	`pﬁ¨s¶_mÆloc
––
sha256_c⁄ãxt
 ) );

610 
	}
}

612 
	$sha224_˘x_‰ì
–*
˘x
 )

614 
	`pﬁ¨s¶_zîoize
–
˘x
, –
sha256_c⁄ãxt
 ) );

615 
	`pﬁ¨s¶_‰ì
–
˘x
 );

616 
	}
}

618 
	$sha224_¥o˚ss_wøp
–*
˘x
, c⁄° *
d©a
 )

620 
	`sha256_¥o˚ss
–(
sha256_c⁄ãxt
 *Ë
˘x
, 
d©a
 );

621 
	}
}

623 c⁄° 
md_öfo_t
 
	gsha224_öfo
 = {

624 
POLARSSL_MD_SHA224
,

627 
sha224_°¨ts_wøp
,

628 
sha224_upd©e_wøp
,

629 
sha224_föish_wøp
,

630 
sha224_wøp
,

631 
sha224_fûe_wøp
,

632 
sha224_hmac_°¨ts_wøp
,

633 
sha224_hmac_upd©e_wøp
,

634 
sha224_hmac_föish_wøp
,

635 
sha224_hmac_ª£t_wøp
,

636 
sha224_hmac_wøp
,

637 
sha224_˘x_Æloc
,

638 
sha224_˘x_‰ì
,

639 
sha224_¥o˚ss_wøp
,

642 
	$sha256_°¨ts_wøp
–*
˘x
 )

644 
	`sha256_°¨ts
–(
sha256_c⁄ãxt
 *Ë
˘x
, 0 );

645 
	}
}

647 
	$sha256_upd©e_wøp
–*
˘x
, c⁄° *
öput
,

648 
size_t
 
ûí
 )

650 
	`sha256_upd©e
–(
sha256_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ûí
 );

651 
	}
}

653 
	$sha256_föish_wøp
–*
˘x
, *
ouçut
 )

655 
	`sha256_föish
–(
sha256_c⁄ãxt
 *Ë
˘x
, 
ouçut
 );

656 
	}
}

658 
	$sha256_wøp
–c⁄° *
öput
, 
size_t
 
ûí
,

659 *
ouçut
 )

661 
	`sha256
–
öput
, 
ûí
, 
ouçut
, 0 );

662 
	}
}

664 
	$sha256_fûe_wøp
–c⁄° *
∑th
, *
ouçut
 )

666 #i‡
	`deföed
(
POLARSSL_FS_IO
)

667  
	`sha256_fûe
–
∑th
, 
ouçut
, 0 );

669 ((Ë
∑th
);

670 ((Ë
ouçut
);

671 –
POLARSSL_ERR_MD_FEATURE_UNAVAILABLE
 );

673 
	}
}

675 
	$sha256_hmac_°¨ts_wøp
–*
˘x
, c⁄° *
key
,

676 
size_t
 
keyÀn
 )

678 
	`sha256_hmac_°¨ts
–(
sha256_c⁄ãxt
 *Ë
˘x
, 
key
, 
keyÀn
, 0 );

679 
	}
}

681 
	$sha256_hmac_upd©e_wøp
–*
˘x
, c⁄° *
öput
,

682 
size_t
 
ûí
 )

684 
	`sha256_hmac_upd©e
–(
sha256_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ûí
 );

685 
	}
}

687 
	$sha256_hmac_föish_wøp
–*
˘x
, *
ouçut
 )

689 
	`sha256_hmac_föish
–(
sha256_c⁄ãxt
 *Ë
˘x
, 
ouçut
 );

690 
	}
}

692 
	$sha256_hmac_ª£t_wøp
–*
˘x
 )

694 
	`sha256_hmac_ª£t
–(
sha256_c⁄ãxt
 *Ë
˘x
 );

695 
	}
}

697 
	$sha256_hmac_wøp
–c⁄° *
key
, 
size_t
 
keyÀn
,

698 c⁄° *
öput
, 
size_t
 
ûí
,

699 *
ouçut
 )

701 
	`sha256_hmac
–
key
, 
keyÀn
, 
öput
, 
ûí
, 
ouçut
, 0 );

702 
	}
}

704 * 
	$sha256_˘x_Æloc
( )

706 
sha256_c⁄ãxt
 *
˘x
;

707 
˘x
 = (
sha256_c⁄ãxt
 *Ë
	`pﬁ¨s¶_mÆloc
( ( sha256_context ) );

709 if–
˘x
 =
NULL
 )

710 –
NULL
 );

712 
	`sha256_öô
–
˘x
 );

714 –
˘x
 );

715 
	}
}

717 
	$sha256_˘x_‰ì
–*
˘x
 )

719 
	`sha256_‰ì
–(
sha256_c⁄ãxt
 *Ë
˘x
 );

720 
	`pﬁ¨s¶_‰ì
–
˘x
 );

721 
	}
}

723 
	$sha256_¥o˚ss_wøp
–*
˘x
, c⁄° *
d©a
 )

725 
	`sha256_¥o˚ss
–(
sha256_c⁄ãxt
 *Ë
˘x
, 
d©a
 );

726 
	}
}

728 c⁄° 
md_öfo_t
 
	gsha256_öfo
 = {

729 
POLARSSL_MD_SHA256
,

732 
sha256_°¨ts_wøp
,

733 
sha256_upd©e_wøp
,

734 
sha256_föish_wøp
,

735 
sha256_wøp
,

736 
sha256_fûe_wøp
,

737 
sha256_hmac_°¨ts_wøp
,

738 
sha256_hmac_upd©e_wøp
,

739 
sha256_hmac_föish_wøp
,

740 
sha256_hmac_ª£t_wøp
,

741 
sha256_hmac_wøp
,

742 
sha256_˘x_Æloc
,

743 
sha256_˘x_‰ì
,

744 
sha256_¥o˚ss_wøp
,

749 #i‡
deföed
(
POLARSSL_SHA512_C
)

751 
	$sha384_°¨ts_wøp
–*
˘x
 )

753 
	`sha512_°¨ts
–(
sha512_c⁄ãxt
 *Ë
˘x
, 1 );

754 
	}
}

756 
	$sha384_upd©e_wøp
–*
˘x
, c⁄° *
öput
,

757 
size_t
 
ûí
 )

759 
	`sha512_upd©e
–(
sha512_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ûí
 );

760 
	}
}

762 
	$sha384_föish_wøp
–*
˘x
, *
ouçut
 )

764 
	`sha512_föish
–(
sha512_c⁄ãxt
 *Ë
˘x
, 
ouçut
 );

765 
	}
}

767 
	$sha384_wøp
–c⁄° *
öput
, 
size_t
 
ûí
,

768 *
ouçut
 )

770 
	`sha512
–
öput
, 
ûí
, 
ouçut
, 1 );

771 
	}
}

773 
	$sha384_fûe_wøp
–c⁄° *
∑th
, *
ouçut
 )

775 #i‡
	`deföed
(
POLARSSL_FS_IO
)

776  
	`sha512_fûe
–
∑th
, 
ouçut
, 1 );

778 ((Ë
∑th
);

779 ((Ë
ouçut
);

780 –
POLARSSL_ERR_MD_FEATURE_UNAVAILABLE
 );

782 
	}
}

784 
	$sha384_hmac_°¨ts_wøp
–*
˘x
, c⁄° *
key
,

785 
size_t
 
keyÀn
 )

787 
	`sha512_hmac_°¨ts
–(
sha512_c⁄ãxt
 *Ë
˘x
, 
key
, 
keyÀn
, 1 );

788 
	}
}

790 
	$sha384_hmac_upd©e_wøp
–*
˘x
, c⁄° *
öput
,

791 
size_t
 
ûí
 )

793 
	`sha512_hmac_upd©e
–(
sha512_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ûí
 );

794 
	}
}

796 
	$sha384_hmac_föish_wøp
–*
˘x
, *
ouçut
 )

798 
	`sha512_hmac_föish
–(
sha512_c⁄ãxt
 *Ë
˘x
, 
ouçut
 );

799 
	}
}

801 
	$sha384_hmac_ª£t_wøp
–*
˘x
 )

803 
	`sha512_hmac_ª£t
–(
sha512_c⁄ãxt
 *Ë
˘x
 );

804 
	}
}

806 
	$sha384_hmac_wøp
–c⁄° *
key
, 
size_t
 
keyÀn
,

807 c⁄° *
öput
, 
size_t
 
ûí
,

808 *
ouçut
 )

810 
	`sha512_hmac
–
key
, 
keyÀn
, 
öput
, 
ûí
, 
ouçut
, 1 );

811 
	}
}

813 * 
	$sha384_˘x_Æloc
( )

815  
	`pﬁ¨s¶_mÆloc
––
sha512_c⁄ãxt
 ) );

816 
	}
}

818 
	$sha384_˘x_‰ì
–*
˘x
 )

820 
	`pﬁ¨s¶_zîoize
–
˘x
, –
sha512_c⁄ãxt
 ) );

821 
	`pﬁ¨s¶_‰ì
–
˘x
 );

822 
	}
}

824 
	$sha384_¥o˚ss_wøp
–*
˘x
, c⁄° *
d©a
 )

826 
	`sha512_¥o˚ss
–(
sha512_c⁄ãxt
 *Ë
˘x
, 
d©a
 );

827 
	}
}

829 c⁄° 
md_öfo_t
 
	gsha384_öfo
 = {

830 
POLARSSL_MD_SHA384
,

833 
sha384_°¨ts_wøp
,

834 
sha384_upd©e_wøp
,

835 
sha384_föish_wøp
,

836 
sha384_wøp
,

837 
sha384_fûe_wøp
,

838 
sha384_hmac_°¨ts_wøp
,

839 
sha384_hmac_upd©e_wøp
,

840 
sha384_hmac_föish_wøp
,

841 
sha384_hmac_ª£t_wøp
,

842 
sha384_hmac_wøp
,

843 
sha384_˘x_Æloc
,

844 
sha384_˘x_‰ì
,

845 
sha384_¥o˚ss_wøp
,

848 
	$sha512_°¨ts_wøp
–*
˘x
 )

850 
	`sha512_°¨ts
–(
sha512_c⁄ãxt
 *Ë
˘x
, 0 );

851 
	}
}

853 
	$sha512_upd©e_wøp
–*
˘x
, c⁄° *
öput
,

854 
size_t
 
ûí
 )

856 
	`sha512_upd©e
–(
sha512_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ûí
 );

857 
	}
}

859 
	$sha512_föish_wøp
–*
˘x
, *
ouçut
 )

861 
	`sha512_föish
–(
sha512_c⁄ãxt
 *Ë
˘x
, 
ouçut
 );

862 
	}
}

864 
	$sha512_wøp
–c⁄° *
öput
, 
size_t
 
ûí
,

865 *
ouçut
 )

867 
	`sha512
–
öput
, 
ûí
, 
ouçut
, 0 );

868 
	}
}

870 
	$sha512_fûe_wøp
–c⁄° *
∑th
, *
ouçut
 )

872 #i‡
	`deföed
(
POLARSSL_FS_IO
)

873  
	`sha512_fûe
–
∑th
, 
ouçut
, 0 );

875 ((Ë
∑th
);

876 ((Ë
ouçut
);

877 –
POLARSSL_ERR_MD_FEATURE_UNAVAILABLE
 );

879 
	}
}

881 
	$sha512_hmac_°¨ts_wøp
–*
˘x
, c⁄° *
key
,

882 
size_t
 
keyÀn
 )

884 
	`sha512_hmac_°¨ts
–(
sha512_c⁄ãxt
 *Ë
˘x
, 
key
, 
keyÀn
, 0 );

885 
	}
}

887 
	$sha512_hmac_upd©e_wøp
–*
˘x
, c⁄° *
öput
,

888 
size_t
 
ûí
 )

890 
	`sha512_hmac_upd©e
–(
sha512_c⁄ãxt
 *Ë
˘x
, 
öput
, 
ûí
 );

891 
	}
}

893 
	$sha512_hmac_föish_wøp
–*
˘x
, *
ouçut
 )

895 
	`sha512_hmac_föish
–(
sha512_c⁄ãxt
 *Ë
˘x
, 
ouçut
 );

896 
	}
}

898 
	$sha512_hmac_ª£t_wøp
–*
˘x
 )

900 
	`sha512_hmac_ª£t
–(
sha512_c⁄ãxt
 *Ë
˘x
 );

901 
	}
}

903 
	$sha512_hmac_wøp
–c⁄° *
key
, 
size_t
 
keyÀn
,

904 c⁄° *
öput
, 
size_t
 
ûí
,

905 *
ouçut
 )

907 
	`sha512_hmac
–
key
, 
keyÀn
, 
öput
, 
ûí
, 
ouçut
, 0 );

908 
	}
}

910 * 
	$sha512_˘x_Æloc
( )

912 
sha512_c⁄ãxt
 *
˘x
;

913 
˘x
 = (
sha512_c⁄ãxt
 *Ë
	`pﬁ¨s¶_mÆloc
( ( sha512_context ) );

915 if–
˘x
 =
NULL
 )

916 –
NULL
 );

918 
	`sha512_öô
–
˘x
 );

920 –
˘x
 );

921 
	}
}

923 
	$sha512_˘x_‰ì
–*
˘x
 )

925 
	`sha512_‰ì
–(
sha512_c⁄ãxt
 *Ë
˘x
 );

926 
	`pﬁ¨s¶_‰ì
–
˘x
 );

927 
	}
}

929 
	$sha512_¥o˚ss_wøp
–*
˘x
, c⁄° *
d©a
 )

931 
	`sha512_¥o˚ss
–(
sha512_c⁄ãxt
 *Ë
˘x
, 
d©a
 );

932 
	}
}

934 c⁄° 
md_öfo_t
 
	gsha512_öfo
 = {

935 
POLARSSL_MD_SHA512
,

938 
sha512_°¨ts_wøp
,

939 
sha512_upd©e_wøp
,

940 
sha512_föish_wøp
,

941 
sha512_wøp
,

942 
sha512_fûe_wøp
,

943 
sha512_hmac_°¨ts_wøp
,

944 
sha512_hmac_upd©e_wøp
,

945 
sha512_hmac_föish_wøp
,

946 
sha512_hmac_ª£t_wøp
,

947 
sha512_hmac_wøp
,

948 
sha512_˘x_Æloc
,

949 
sha512_˘x_‰ì
,

950 
sha512_¥o˚ss_wøp
,

	@polarssl/library/memory_buffer_alloc.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_MEMORY_BUFFER_ALLOC_C
)

34 
	~"pﬁ¨s¶/mem‹y_buf„r_Æloc.h
"

36 
	~<°rög.h
>

38 #i‡
deföed
(
POLARSSL_MEMORY_DEBUG
)

39 
	~<°dio.h
>

40 #i‡
deföed
(
POLARSSL_MEMORY_BACKTRACE
)

41 
	~<execöfo.h
>

45 #i‡
deföed
(
POLARSSL_THREADING_C
)

46 
	~"pﬁ¨s¶/thªadög.h
"

49 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

50 
	~"pﬁ¨s¶/∂©f‹m.h
"

52 
	#pﬁ¨s¶_Ârötf
 
Ârötf


	)

56 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

57 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

58 
	}
}

60 
	#MAGIC1
 0xFF00AA55

	)

61 
	#MAGIC2
 0xEE119966

	)

62 
	#MAX_BT
 20

	)

64 
_mem‹y_hódî
 
	tmem‹y_hódî
;

65 
	s_mem‹y_hódî


67 
size_t
 
	mmagic1
;

68 
size_t
 
	msize
;

69 
size_t
 
	mÆloc
;

70 
mem‹y_hódî
 *
	m¥ev
;

71 
mem‹y_hódî
 *
	m√xt
;

72 
mem‹y_hódî
 *
	m¥ev_‰ì
;

73 
mem‹y_hódî
 *
	m√xt_‰ì
;

74 #i‡
deföed
(
POLARSSL_MEMORY_BACKTRACE
)

75 **
	måa˚
;

76 
size_t
 
	måa˚_cou¡
;

78 
size_t
 
	mmagic2
;

83 *
	mbuf
;

84 
size_t
 
	mÀn
;

85 
mem‹y_hódî
 *
	mfú°
;

86 
mem‹y_hódî
 *
	mfú°_‰ì
;

87 
size_t
 
	mcuºít_Æloc_size
;

88 
	mvîify
;

89 #i‡
deföed
(
POLARSSL_MEMORY_DEBUG
)

90 
size_t
 
	mmÆloc_cou¡
;

91 
size_t
 
	m‰ì_cou¡
;

92 
size_t
 
	mtŸÆ_u£d
;

93 
size_t
 
	mmaximum_u£d
;

94 
size_t
 
	mhódî_cou¡
;

95 
size_t
 
	mmaximum_hódî_cou¡
;

97 #i‡
deföed
(
POLARSSL_THREADING_C
)

98 
thªadög_muãx_t
 
	mmuãx
;

101 
	tbuf„r_Æloc_˘x
;

103 
buf„r_Æloc_˘x
 
	ghóp
;

105 #i‡
deföed
(
POLARSSL_MEMORY_DEBUG
)

106 
	$debug_hódî
–
mem‹y_hódî
 *
hdr
 )

108 #i‡
	`deföed
(
POLARSSL_MEMORY_BACKTRACE
)

109 
size_t
 
i
;

112 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "HDR: PTR(%10u), PREV(%10u), NEXT(%10u), "

114 (
size_t
Ë
hdr
, (size_tËhdr->
¥ev
, (size_tËhdr->
√xt
,

115 
hdr
->
Æloc
, hdr->
size
 );

116 
	`pﬁ¨s¶_Ârötf
–
°dîr
, " FPREV(%10u), FNEXT(%10u)\n",

117 (
size_t
Ë
hdr
->
¥ev_‰ì
, (size_tËhdr->
√xt_‰ì
 );

119 #i‡
	`deföed
(
POLARSSL_MEMORY_BACKTRACE
)

120 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "TRACE: \n" );

121  
i
 = 0; i < 
hdr
->
åa˚_cou¡
; i++ )

122 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "%s\n", 
hdr
->
åa˚
[
i
] );

123 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "\n" );

125 
	}
}

127 
	$debug_chaö
()

129 
mem‹y_hódî
 *
cur
 = 
hóp
.
fú°
;

131 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "\nBlockÜist\n" );

132  
cur
 !
NULL
 )

134 
	`debug_hódî
–
cur
 );

135 
cur
 = cur->
√xt
;

138 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "FreeÜist\n" );

139 
cur
 = 
hóp
.
fú°_‰ì
;

141  
cur
 !
NULL
 )

143 
	`debug_hódî
–
cur
 );

144 
cur
 = cur->
√xt_‰ì
;

146 
	}
}

149 
	$vîify_hódî
–
mem‹y_hódî
 *
hdr
 )

151 if–
hdr
->
magic1
 !
MAGIC1
 )

153 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

154 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "FATAL: MAGIC1 mismatch\n" );

159 if–
hdr
->
magic2
 !
MAGIC2
 )

161 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

162 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "FATAL: MAGIC2 mismatch\n" );

167 if–
hdr
->
Æloc
 > 1 )

169 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

170 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "FATAL:álloc has illegal value\n" );

175 if–
hdr
->
¥ev
 !
NULL
 && hdr->¥ev =hdr->
√xt
 )

177 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

178 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "FATAL:Örev ==Çext\n" );

183 if–
hdr
->
¥ev_‰ì
 !
NULL
 && hdr->¥ev_‰ì =hdr->
√xt_‰ì
 )

185 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

186 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "FATAL:Örev_free ==Çext_free\n" );

192 
	}
}

194 
	$vîify_chaö
()

196 
mem‹y_hódî
 *
¥v
 = 
hóp
.
fú°
, *
cur
 = hóp.fú°->
√xt
;

198 if–
	`vîify_hódî
–
hóp
.
fú°
 ) != 0 )

200 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

201 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "FATAL: verification of first header "

207 if–
hóp
.
fú°
->
¥ev
 !
NULL
 )

209 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

210 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "FATAL: verification failed: "

216  
cur
 !
NULL
 )

218 if–
	`vîify_hódî
–
cur
 ) != 0 )

220 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

221 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "FATAL: verification of header "

227 if–
cur
->
¥ev
 !
¥v
 )

229 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

230 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "FATAL: verification failed: "

236 
¥v
 = 
cur
;

237 
cur
 = cur->
√xt
;

241 
	}
}

243 *
	$buf„r_Æloc_mÆloc
–
size_t
 
Àn
 )

245 
mem‹y_hódî
 *
√w
, *
cur
 = 
hóp
.
fú°_‰ì
;

246 *
p
;

247 #i‡
	`deföed
(
POLARSSL_MEMORY_BACKTRACE
)

248 *
åa˚_buf„r
[
MAX_BT
];

249 
size_t
 
åa˚_˙t
;

252 if–
hóp
.
buf
 =
NULL
 || hóp.
fú°
 == NULL )

253 –
NULL
 );

255 if–
Àn
 % 
POLARSSL_MEMORY_ALIGN_MULTIPLE
 )

257 
Àn
 -À¿% 
POLARSSL_MEMORY_ALIGN_MULTIPLE
;

258 
Àn
 +
POLARSSL_MEMORY_ALIGN_MULTIPLE
;

263  
cur
 !
NULL
 )

265 if–
cur
->
size
 >
Àn
 )

268 
cur
 = cur->
√xt_‰ì
;

271 if–
cur
 =
NULL
 )

272 –
NULL
 );

274 if–
cur
->
Æloc
 != 0 )

276 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

277 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "FATAL: block in free_list butállocated "

280 
	`exô
( 1 );

283 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

284 
hóp
.
mÆloc_cou¡
++;

289 if–
cur
->
size
 - 
Àn
 < (
mem‹y_hódî
) +

290 
POLARSSL_MEMORY_ALIGN_MULTIPLE
 )

292 
cur
->
Æloc
 = 1;

296 if–
cur
->
¥ev_‰ì
 !
NULL
 )

297 
cur
->
¥ev_‰ì
->
√xt_‰ì
 = cur->next_free;

299 
hóp
.
fú°_‰ì
 = 
cur
->
√xt_‰ì
;

301 if–
cur
->
√xt_‰ì
 !
NULL
 )

302 
cur
->
√xt_‰ì
->
¥ev_‰ì
 = cur->prev_free;

304 
cur
->
¥ev_‰ì
 = 
NULL
;

305 
cur
->
√xt_‰ì
 = 
NULL
;

307 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

308 
hóp
.
tŸÆ_u£d
 +
cur
->
size
;

309 if–
hóp
.
tŸÆ_u£d
 > hóp.
maximum_u£d
 )

310 
hóp
.
maximum_u£d
 = hóp.
tŸÆ_u£d
;

312 #i‡
	`deföed
(
POLARSSL_MEMORY_BACKTRACE
)

313 
åa˚_˙t
 = 
	`backåa˚
–
åa˚_buf„r
, 
MAX_BT
 );

314 
cur
->
åa˚
 = 
	`backåa˚_symbﬁs
–
åa˚_buf„r
, 
åa˚_˙t
 );

315 
cur
->
åa˚_cou¡
 = 
åa˚_˙t
;

318 if––
hóp
.
vîify
 & 
MEMORY_VERIFY_ALLOC
 ) && 
	`vîify_chaö
() != 0 )

319 
	`exô
( 1 );

321 ––(*Ë
cur
 ) + (
mem‹y_hódî
) );

324 
p
 = ( (*Ë
cur
 ) + (
mem‹y_hódî
Ë+ 
Àn
;

325 
√w
 = (
mem‹y_hódî
 *Ë
p
;

327 
√w
->
size
 = 
cur
->sizê- 
Àn
 - (
mem‹y_hódî
);

328 
√w
->
Æloc
 = 0;

329 
√w
->
¥ev
 = 
cur
;

330 
√w
->
√xt
 = 
cur
->next;

331 #i‡
	`deföed
(
POLARSSL_MEMORY_BACKTRACE
)

332 
√w
->
åa˚
 = 
NULL
;

333 
√w
->
åa˚_cou¡
 = 0;

335 
√w
->
magic1
 = 
MAGIC1
;

336 
√w
->
magic2
 = 
MAGIC2
;

338 if–
√w
->
√xt
 !
NULL
 )

339 
√w
->
√xt
->
¥ev
 =Çew;

343 
√w
->
¥ev_‰ì
 = 
cur
->prev_free;

344 
√w
->
√xt_‰ì
 = 
cur
->next_free;

345 if–
√w
->
¥ev_‰ì
 !
NULL
 )

346 
√w
->
¥ev_‰ì
->
√xt_‰ì
 =Çew;

348 
hóp
.
fú°_‰ì
 = 
√w
;

350 if–
√w
->
√xt_‰ì
 !
NULL
 )

351 
√w
->
√xt_‰ì
->
¥ev_‰ì
 =Çew;

353 
cur
->
Æloc
 = 1;

354 
cur
->
size
 = 
Àn
;

355 
cur
->
√xt
 = 
√w
;

356 
cur
->
¥ev_‰ì
 = 
NULL
;

357 
cur
->
√xt_‰ì
 = 
NULL
;

359 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

360 
hóp
.
hódî_cou¡
++;

361 if–
hóp
.
hódî_cou¡
 > hóp.
maximum_hódî_cou¡
 )

362 
hóp
.
maximum_hódî_cou¡
 = hóp.
hódî_cou¡
;

363 
hóp
.
tŸÆ_u£d
 +
cur
->
size
;

364 if–
hóp
.
tŸÆ_u£d
 > hóp.
maximum_u£d
 )

365 
hóp
.
maximum_u£d
 = hóp.
tŸÆ_u£d
;

367 #i‡
	`deföed
(
POLARSSL_MEMORY_BACKTRACE
)

368 
åa˚_˙t
 = 
	`backåa˚
–
åa˚_buf„r
, 
MAX_BT
 );

369 
cur
->
åa˚
 = 
	`backåa˚_symbﬁs
–
åa˚_buf„r
, 
åa˚_˙t
 );

370 
cur
->
åa˚_cou¡
 = 
åa˚_˙t
;

373 if––
hóp
.
vîify
 & 
MEMORY_VERIFY_ALLOC
 ) && 
	`vîify_chaö
() != 0 )

374 
	`exô
( 1 );

376 ––(*Ë
cur
 ) + (
mem‹y_hódî
) );

377 
	}
}

379 
	$buf„r_Æloc_‰ì
–*
±r
 )

381 
mem‹y_hódî
 *
hdr
, *
ﬁd
 = 
NULL
;

382 *
p
 = (*Ë
±r
;

384 if–
±r
 =
NULL
 || 
hóp
.
buf
 =NULL || hóp.
fú°
 == NULL )

387 if–
p
 < 
hóp
.
buf
 ||Ö > hóp.bu‡+ hóp.
Àn
 )

389 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

390 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "FATAL:Öolarssl_free() outside of managed "

393 
	`exô
( 1 );

396 
p
 -(
mem‹y_hódî
);

397 
hdr
 = (
mem‹y_hódî
 *Ë
p
;

399 if–
	`vîify_hódî
–
hdr
 ) != 0 )

400 
	`exô
( 1 );

402 if–
hdr
->
Æloc
 != 1 )

404 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

405 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "FATAL:Öolarssl_free() on unallocated "

408 
	`exô
( 1 );

411 
hdr
->
Æloc
 = 0;

413 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

414 
hóp
.
‰ì_cou¡
++;

415 
hóp
.
tŸÆ_u£d
 -
hdr
->
size
;

420 if–
hdr
->
¥ev
 !
NULL
 && hdr->¥ev->
Æloc
 == 0 )

422 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

423 
hóp
.
hódî_cou¡
--;

425 
hdr
->
¥ev
->
size
 +(
mem‹y_hódî
) + hdr->size;

426 
hdr
->
¥ev
->
√xt
 = hdr->next;

427 
ﬁd
 = 
hdr
;

428 
hdr
 = hdr->
¥ev
;

430 if–
hdr
->
√xt
 !
NULL
 )

431 
hdr
->
√xt
->
¥ev
 = hdr;

433 #i‡
	`deföed
(
POLARSSL_MEMORY_BACKTRACE
)

434 
	`‰ì
–
ﬁd
->
åa˚
 );

436 
	`mem£t
–
ﬁd
, 0, (
mem‹y_hódî
) );

441 if–
hdr
->
√xt
 !
NULL
 && hdr->√xt->
Æloc
 == 0 )

443 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

444 
hóp
.
hódî_cou¡
--;

446 
hdr
->
size
 +(
mem‹y_hódî
Ë+ hdr->
√xt
->size;

447 
ﬁd
 = 
hdr
->
√xt
;

448 
hdr
->
√xt
 = hdr->next->next;

450 if–
hdr
->
¥ev_‰ì
 !
NULL
 || hdr->
√xt_‰ì
 != NULL )

452 if–
hdr
->
¥ev_‰ì
 !
NULL
 )

453 
hdr
->
¥ev_‰ì
->
√xt_‰ì
 = hdr->next_free;

455 
hóp
.
fú°_‰ì
 = 
hdr
->
√xt_‰ì
;

457 if–
hdr
->
√xt_‰ì
 !
NULL
 )

458 
hdr
->
√xt_‰ì
->
¥ev_‰ì
 = hdr->prev_free;

461 
hdr
->
¥ev_‰ì
 = 
ﬁd
->prev_free;

462 
hdr
->
√xt_‰ì
 = 
ﬁd
->next_free;

464 if–
hdr
->
¥ev_‰ì
 !
NULL
 )

465 
hdr
->
¥ev_‰ì
->
√xt_‰ì
 = hdr;

467 
hóp
.
fú°_‰ì
 = 
hdr
;

469 if–
hdr
->
√xt_‰ì
 !
NULL
 )

470 
hdr
->
√xt_‰ì
->
¥ev_‰ì
 = hdr;

472 if–
hdr
->
√xt
 !
NULL
 )

473 
hdr
->
√xt
->
¥ev
 = hdr;

475 #i‡
	`deföed
(
POLARSSL_MEMORY_BACKTRACE
)

476 
	`‰ì
–
ﬁd
->
åa˚
 );

478 
	`mem£t
–
ﬁd
, 0, (
mem‹y_hódî
) );

484 if–
ﬁd
 =
NULL
 )

486 
hdr
->
√xt_‰ì
 = 
hóp
.
fú°_‰ì
;

487 
hóp
.
fú°_‰ì
->
¥ev_‰ì
 = 
hdr
;

488 
hóp
.
fú°_‰ì
 = 
hdr
;

491 #i‡
	`deföed
(
POLARSSL_MEMORY_BACKTRACE
)

492 
hdr
->
åa˚
 = 
NULL
;

493 
hdr
->
åa˚_cou¡
 = 0;

496 if––
hóp
.
vîify
 & 
MEMORY_VERIFY_FREE
 ) && 
	`vîify_chaö
() != 0 )

497 
	`exô
( 1 );

498 
	}
}

500 
	$mem‹y_buf„r_£t_vîify
–
vîify
 )

502 
hóp
.
vîify
 = verify;

503 
	}
}

505 
	$mem‹y_buf„r_Æloc_vîify
()

507  
	`vîify_chaö
();

508 
	}
}

510 #i‡
deföed
(
POLARSSL_MEMORY_DEBUG
)

511 
	$mem‹y_buf„r_Æloc_°©us
()

513 
	`pﬁ¨s¶_Ârötf
–
°dîr
,

516 
hóp
.
hódî_cou¡
, hóp.
tŸÆ_u£d
,

517 
hóp
.
maximum_hódî_cou¡
, hóp.
maximum_u£d
,

518 
hóp
.
maximum_hódî_cou¡
 * –
mem‹y_hódî
 )

519 + 
hóp
.
maximum_u£d
,

520 
hóp
.
mÆloc_cou¡
, hóp.
‰ì_cou¡
 );

522 if–
hóp
.
fú°
->
√xt
 =
NULL
 )

523 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "All memory de-allocated in stack buffer\n" );

526 
	`pﬁ¨s¶_Ârötf
–
°dîr
, "Memory currentlyállocated:\n" );

527 
	`debug_chaö
();

529 
	}
}

532 #i‡
deföed
(
POLARSSL_THREADING_C
)

533 *
	$buf„r_Æloc_mÆloc_muãxed
–
size_t
 
Àn
 )

535 *
buf
;

536 
	`pﬁ¨s¶_muãx_lock
–&
hóp
.
muãx
 );

537 
buf
 = 
	`buf„r_Æloc_mÆloc
–
Àn
 );

538 
	`pﬁ¨s¶_muãx_u∆ock
–&
hóp
.
muãx
 );

539 –
buf
 );

540 
	}
}

542 
	$buf„r_Æloc_‰ì_muãxed
–*
±r
 )

544 
	`pﬁ¨s¶_muãx_lock
–&
hóp
.
muãx
 );

545 
	`buf„r_Æloc_‰ì
–
±r
 );

546 
	`pﬁ¨s¶_muãx_u∆ock
–&
hóp
.
muãx
 );

547 
	}
}

550 
	$mem‹y_buf„r_Æloc_öô
–*
buf
, 
size_t
 
Àn
 )

552 
	`mem£t
–&
hóp
, 0, (
buf„r_Æloc_˘x
) );

553 
	`mem£t
–
buf
, 0, 
Àn
 );

555 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

556 
	`pﬁ¨s¶_muãx_öô
–&
hóp
.
muãx
 );

557 
	`∂©f‹m_£t_mÆloc_‰ì
–
buf„r_Æloc_mÆloc_muãxed
,

558 
buf„r_Æloc_‰ì_muãxed
 );

560 
	`∂©f‹m_£t_mÆloc_‰ì
–
buf„r_Æloc_mÆloc
, 
buf„r_Æloc_‰ì
 );

563 if–(
size_t
Ë
buf
 % 
POLARSSL_MEMORY_ALIGN_MULTIPLE
 )

565 
buf
 +
POLARSSL_MEMORY_ALIGN_MULTIPLE


566 - (
size_t
Ë
buf
 % 
POLARSSL_MEMORY_ALIGN_MULTIPLE
;

567 
Àn
 -(
size_t
Ë
buf
 % 
POLARSSL_MEMORY_ALIGN_MULTIPLE
;

570 
hóp
.
buf
 = buf;

571 
hóp
.
Àn
 =Üen;

573 
hóp
.
fú°
 = (
mem‹y_hódî
 *Ë
buf
;

574 
hóp
.
fú°
->
size
 = 
Àn
 - (
mem‹y_hódî
);

575 
hóp
.
fú°
->
magic1
 = 
MAGIC1
;

576 
hóp
.
fú°
->
magic2
 = 
MAGIC2
;

577 
hóp
.
fú°_‰ì
 = hóp.
fú°
;

579 
	}
}

581 
	$mem‹y_buf„r_Æloc_‰ì
()

583 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

584 
	`pﬁ¨s¶_muãx_‰ì
–&
hóp
.
muãx
 );

586 
	`pﬁ¨s¶_zîoize
–&
hóp
, (
buf„r_Æloc_˘x
) );

587 
	}
}

	@polarssl/library/net.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_NET_C
)

34 
	~"pﬁ¨s¶/√t.h
"

36 #i‡(
deföed
(
_WIN32
Ë|| deföed(
_WIN32_WCE
)Ë&& !deföed(
EFIX64
) && \

37 !
	$deföed
(
EFI32
)

39 #i‡
	`deföed
(
POLARSSL_HAVE_IPV6
)

40 #ifde‡
_WIN32_WINNT


41 #unde‡
_WIN32_WINNT


44 
	#_WIN32_WINNT
 0x0501

	)

45 
	~<ws2t˝ù.h
>

48 
	~<wösock2.h
>

49 
	~<wödows.h
>

51 #i‡
	`deföed
(
_MSC_VER
)

52 #i‡
	`deföed
(
_WIN32_WCE
)

53 #¥agm®
	`commít
–
lib
, "ws2.lib" )

55 #¥agm®
	`commít
–
lib
, "ws2_32.lib" )

59 
	#ªad
(
fd
,
buf
,
Àn
Ë
	`ªcv
(fd,(*)buf,(ËÀn,0)

	)

60 
	#wrôe
(
fd
,
buf
,
Àn
Ë
	`£nd
(fd,(*)buf,(ËÀn,0)

	)

61 
	#˛o£
(
fd
Ë
	`˛o£sockë
(fd)

	)

63 
wß_öô_d⁄e
 = 0;

67 
	~<sys/ty≥s.h
>

68 
	~<sys/sockë.h
>

69 
	~<√töë/ö.h
>

70 
	~<¨∑/öë.h
>

71 #i‡
	`deföed
(
POLARSSL_HAVE_TIME
)

72 
	~<sys/time.h
>

74 
	~<uni°d.h
>

75 
	~<sig«l.h
>

76 
	~<f˙é.h
>

77 
	~<√tdb.h
>

78 
	~<î∫o.h
>

80 #i‡
	`deföed
(
__FªeBSD__
Ë|| deföed(
__O≥nBSD__
Ë|| deföed(
__NëBSD__
) || \

81 
	$deföed
(
__Døg⁄Fly__
)

82 
	~<sys/ídün.h
>

83 #ñi‡
	`deföed
(
__APPLE__
Ë|| deföed(
HAVE_MACHINE_ENDIAN_H
) || \

84 
	`deföed
(
EFIX64
Ë|| 
	$deföed
(
EFI32
)

85 
	~<machöe/ídün.h
>

86 #ñi‡
	`deföed
(
sun
)

87 
	~<sys/iß_defs.h
>

88 #ñi‡
	`deföed
(
_AIX
Ë|| deföed(
HAVE_ARPA_NAMESER_COMPAT_H
)

89 
	~<¨∑/«me£r_com∑t.h
>

91 
	~<ídün.h
>

96 
	~<°dlib.h
>

97 
	~<°dio.h
>

99 #i‡
	`deföed
(
_MSC_VER
Ë&& !
deföed
 
¢¥ötf
 && !deföed(
EFIX64
) && \

100 !
	$deföed
(
EFI32
)

101 
	#¢¥ötf
 
_¢¥ötf


	)

104 #i‡
	`deföed
(
POLARSSL_HAVE_TIME
)

105 
	~<time.h
>

108 #i‡
	`deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

109 
	~<ba£tsd.h
>

110 
UINT32
 
	tuöt32_t
;

112 
	~<öây≥s.h
>

120 #i‡
	`deföed
(
__BYTE_ORDER
Ë&& deföed(
__BIG_ENDIAN
) && \

121 
__BYTE_ORDER
 =
__BIG_ENDIAN


122 
	#POLARSSL_HTONS
(
n
Ë“)

	)

123 
	#POLARSSL_HTONL
(
n
Ë“)

	)

125 
	#POLARSSL_HTONS
(
n
) (((()(n) & 0xFF ) << 8 ) | \

126 ((()(
n
Ë& 0xFF00 ) >> 8 ))

	)

127 
	#POLARSSL_HTONL
(
n
) (((()(n) & 0xFF ) << 24) | \

128 ((()(
n
) & 0xFF00 ) << 8 ) | \

129 ((()(
n
) & 0xFF0000 ) >> 8 ) | \

130 ((()(
n
Ë& 0xFF000000Ë>> 24))

	)

133 
	`√t_ht⁄s
–
n
 );

134 
	`√t_ht⁄l
–
n
 );

135 
	#√t_ht⁄s
(
n
Ë
	`POLARSSL_HTONS
“)

	)

136 
	#√t_ht⁄l
(
n
Ë
	`POLARSSL_HTONL
“)

	)

141 
	$√t_¥ï¨e
( )

143 #i‡–
	`deföed
(
_WIN32
Ë|| deföed(
_WIN32_WCE
ËË&& !deföed(
EFIX64
) && \

144 !
	`deföed
(
EFI32
)

145 
WSADATA
 
wßD©a
;

147 if–
wß_öô_d⁄e
 == 0 )

149 if–
	`WSASèπup
–
	`MAKEWORD
(2,0), &
wßD©a
 ) != 0 )

150 –
POLARSSL_ERR_NET_SOCKET_FAILED
 );

152 
wß_öô_d⁄e
 = 1;

155 #i‡!
	`deföed
(
EFIX64
Ë&& !deföed(
EFI32
)

156 
	`sig«l
–
SIGPIPE
, 
SIG_IGN
 );

160 
	}
}

165 
	$√t_c⁄√˘
–*
fd
, c⁄° *
ho°
, 
p‹t
 )

167 #i‡
	`deföed
(
POLARSSL_HAVE_IPV6
)

168 
ªt
;

169 
addröfo
 
höts
, *
addr_li°
, *
cur
;

170 
p‹t_°r
[6];

172 if––
ªt
 = 
	`√t_¥ï¨e
() ) != 0 )

173 –
ªt
 );

176 
	`mem£t
–
p‹t_°r
, 0, (Öort_str ) );

177 
	`¢¥ötf
–
p‹t_°r
, –p‹t_°∏), "%d", 
p‹t
 );

180 
	`mem£t
–&
höts
, 0, ( hints ) );

181 
höts
.
ai_Ámûy
 = 
AF_UNSPEC
;

182 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

183 
höts
.
ai_¥Ÿocﬁ
 = 
IPPROTO_TCP
;

185 if–
	`gëaddröfo
–
ho°
, 
p‹t_°r
, &
höts
, &
addr_li°
 ) != 0 )

186 –
POLARSSL_ERR_NET_UNKNOWN_HOST
 );

189 
ªt
 = 
POLARSSL_ERR_NET_UNKNOWN_HOST
;

190  
cur
 = 
addr_li°
; cu∏!
NULL
; cu∏cur->
ai_√xt
 )

192 *
fd
 = (Ë
	`sockë
–
cur
->
ai_Ámûy
, cur->
ai_sockty≥
,

193 
cur
->
ai_¥Ÿocﬁ
 );

194 if–*
fd
 < 0 )

196 
ªt
 = 
POLARSSL_ERR_NET_SOCKET_FAILED
;

200 if–
	`c⁄√˘
–*
fd
, 
cur
->
ai_addr
, cur->
ai_addæí
 ) == 0 )

202 
ªt
 = 0;

206 
	`˛o£
–*
fd
 );

207 
ªt
 = 
POLARSSL_ERR_NET_CONNECT_FAILED
;

210 
	`‰ìaddröfo
–
addr_li°
 );

212 –
ªt
 );

217 
ªt
;

218 
sockaddr_ö
 
£rvî_addr
;

219 
ho°ít
 *
£rvî_ho°
;

221 if––
ªt
 = 
	`√t_¥ï¨e
() ) != 0 )

222 –
ªt
 );

224 if––
£rvî_ho°
 = 
	`gëho°by«me
–
ho°
 ) ) =
NULL
 )

225 –
POLARSSL_ERR_NET_UNKNOWN_HOST
 );

227 if––*
fd
 = (Ë
	`sockë
–
AF_INET
, 
SOCK_STREAM
, 
IPPROTO_IP
 ) ) < 0 )

228 –
POLARSSL_ERR_NET_SOCKET_FAILED
 );

230 
	`mem˝y
–(*Ë&
£rvî_addr
.
sö_addr
,

231 (*Ë
£rvî_ho°
->
h_addr
,

232 
£rvî_ho°
->
h_Àngth
 );

234 
£rvî_addr
.
sö_Ámûy
 = 
AF_INET
;

235 
£rvî_addr
.
sö_p‹t
 = 
	`√t_ht⁄s
–
p‹t
 );

237 if–
	`c⁄√˘
–*
fd
, (
sockaddr
 *Ë&
£rvî_addr
,

238 –
£rvî_addr
 ) ) < 0 )

240 
	`˛o£
–*
fd
 );

241 –
POLARSSL_ERR_NET_CONNECT_FAILED
 );

246 
	}
}

251 
	$√t_böd
–*
fd
, c⁄° *
böd_ù
, 
p‹t
 )

253 #i‡
	`deföed
(
POLARSSL_HAVE_IPV6
)

254 
n
, 
ªt
;

255 
addröfo
 
höts
, *
addr_li°
, *
cur
;

256 
p‹t_°r
[6];

258 if––
ªt
 = 
	`√t_¥ï¨e
() ) != 0 )

259 –
ªt
 );

262 
	`mem£t
–
p‹t_°r
, 0, (Öort_str ) );

263 
	`¢¥ötf
–
p‹t_°r
, –p‹t_°∏), "%d", 
p‹t
 );

266 
	`mem£t
–&
höts
, 0, ( hints ) );

267 
höts
.
ai_Ámûy
 = 
AF_UNSPEC
;

268 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

269 
höts
.
ai_¥Ÿocﬁ
 = 
IPPROTO_TCP
;

270 if–
böd_ù
 =
NULL
 )

271 
höts
.
ai_Êags
 = 
AI_PASSIVE
;

273 if–
	`gëaddröfo
–
böd_ù
, 
p‹t_°r
, &
höts
, &
addr_li°
 ) != 0 )

274 –
POLARSSL_ERR_NET_UNKNOWN_HOST
 );

277 
ªt
 = 
POLARSSL_ERR_NET_UNKNOWN_HOST
;

278  
cur
 = 
addr_li°
; cu∏!
NULL
; cu∏cur->
ai_√xt
 )

280 *
fd
 = (Ë
	`sockë
–
cur
->
ai_Ámûy
, cur->
ai_sockty≥
,

281 
cur
->
ai_¥Ÿocﬁ
 );

282 if–*
fd
 < 0 )

284 
ªt
 = 
POLARSSL_ERR_NET_SOCKET_FAILED
;

288 
n
 = 1;

289 if–
	`£tsock›t
–*
fd
, 
SOL_SOCKET
, 
SO_REUSEADDR
,

290 (c⁄° *Ë&
n
, (Ç ) ) != 0 )

292 
	`˛o£
–*
fd
 );

293 
ªt
 = 
POLARSSL_ERR_NET_SOCKET_FAILED
;

297 if–
	`böd
–*
fd
, 
cur
->
ai_addr
, cur->
ai_addæí
 ) != 0 )

299 
	`˛o£
–*
fd
 );

300 
ªt
 = 
POLARSSL_ERR_NET_BIND_FAILED
;

304 if–
	`li°í
–*
fd
, 
POLARSSL_NET_LISTEN_BACKLOG
 ) != 0 )

306 
	`˛o£
–*
fd
 );

307 
ªt
 = 
POLARSSL_ERR_NET_LISTEN_FAILED
;

312 
ªt
 = 0;

316 
	`‰ìaddröfo
–
addr_li°
 );

318 –
ªt
 );

323 
ªt
, 
n
, 
c
[4];

324 
sockaddr_ö
 
£rvî_addr
;

326 if––
ªt
 = 
	`√t_¥ï¨e
() ) != 0 )

327 –
ªt
 );

329 if––*
fd
 = (Ë
	`sockë
–
AF_INET
, 
SOCK_STREAM
, 
IPPROTO_IP
 ) ) < 0 )

330 –
POLARSSL_ERR_NET_SOCKET_FAILED
 );

332 
n
 = 1;

333 
	`£tsock›t
–*
fd
, 
SOL_SOCKET
, 
SO_REUSEADDR
,

334 (c⁄° *Ë&
n
, (Ç ) );

336 
£rvî_addr
.
sö_addr
.
s_addr
 = 
	`√t_ht⁄l
–
INADDR_ANY
 );

337 
£rvî_addr
.
sö_Ámûy
 = 
AF_INET
;

338 
£rvî_addr
.
sö_p‹t
 = 
	`√t_ht⁄s
–
p‹t
 );

340 if–
böd_ù
 !
NULL
 )

342 
	`mem£t
–
c
, 0, ( c ) );

343 
	`ssˇnf
–
böd_ù
, "%d.%d.%d.%d", &
c
[0], &c[1], &c[2], &c[3] );

345  
n
 = 0;Ç < 4;Ç++ )

346 if–
c
[
n
] < 0 || c[n] > 255 )

349 if–
n
 == 4 )

350 
£rvî_addr
.
sö_addr
.
s_addr
 = 
	`√t_ht⁄l
(

351 –(
uöt32_t
Ë
c
[0] << 24 ) |

352 –(
uöt32_t
Ë
c
[1] << 16 ) |

353 –(
uöt32_t
Ë
c
[2] << 8 ) |

354 –(
uöt32_t
Ë
c
[3] ) );

357 if–
	`böd
–*
fd
, (
sockaddr
 *Ë&
£rvî_addr
,

358 –
£rvî_addr
 ) ) < 0 )

360 
	`˛o£
–*
fd
 );

361 –
POLARSSL_ERR_NET_BIND_FAILED
 );

364 if–
	`li°í
–*
fd
, 
POLARSSL_NET_LISTEN_BACKLOG
 ) != 0 )

366 
	`˛o£
–*
fd
 );

367 –
POLARSSL_ERR_NET_LISTEN_FAILED
 );

372 
	}
}

374 #i‡–
deföed
(
_WIN32
Ë|| deföed(
_WIN32_WCE
ËË&& !deföed(
EFIX64
) && \

375 !
	$deföed
(
EFI32
)

380 
	$√t_would_block
–
fd
 )

382 ((Ë
fd
);

383 –
	`WSAGëLa°Eº‹
(Ë=
WSAEWOULDBLOCK
 );

384 
	}
}

392 
	$√t_would_block
–
fd
 )

397 if––
	`f˙é
–
fd
, 
F_GETFL
 ) & 
O_NONBLOCK
 ) != O_NONBLOCK )

400  
î∫o
 )

402 #i‡
deföed
 
EAGAIN


403 
EAGAIN
:

405 #i‡
deföed
 
EWOULDBLOCK
 && EWOULDBLOCK !
EAGAIN


406 
EWOULDBLOCK
:

411 
	}
}

417 
	$√t_ac˚±
–
böd_fd
, *
˛õ¡_fd
, *
˛õ¡_ù
 )

419 #i‡
	`deföed
(
POLARSSL_HAVE_IPV6
)

420 
sockaddr_°‹age
 
˛õ¡_addr
;

422 
sockaddr_ö
 
˛õ¡_addr
;

425 #i‡
	`deföed
(
__sockÀn_t_deföed
Ë|| deföed(
_SOCKLEN_T
) || \

426 
	`deföed
(
_SOCKLEN_T_DECLARED
)

427 
sockÀn_t
 
n
 = (sockÀn_tË–
˛õ¡_addr
 );

429 
n
 = (Ë–
˛õ¡_addr
 );

432 *
˛õ¡_fd
 = (Ë
	`ac˚±
–
böd_fd
, (
sockaddr
 *)

433 &
˛õ¡_addr
, &
n
 );

435 if–*
˛õ¡_fd
 < 0 )

437 if–
	`√t_would_block
–*
˛õ¡_fd
 ) != 0 )

438 –
POLARSSL_ERR_NET_WANT_READ
 );

440 –
POLARSSL_ERR_NET_ACCEPT_FAILED
 );

443 if–
˛õ¡_ù
 !
NULL
 )

445 #i‡
	`deföed
(
POLARSSL_HAVE_IPV6
)

446 if–
˛õ¡_addr
.
ss_Ámûy
 =
AF_INET
 )

448 
sockaddr_ö
 *
addr4
 = (sockaddr_ö *Ë&
˛õ¡_addr
;

449 
	`mem˝y
–
˛õ¡_ù
, &
addr4
->
sö_addr
.
s_addr
,

450 –
addr4
->
sö_addr
.
s_addr
 ) );

454 
sockaddr_ö6
 *
addr6
 = (sockaddr_ö6 *Ë&
˛õ¡_addr
;

455 
	`mem˝y
–
˛õ¡_ù
, &
addr6
->
sö6_addr
.
s6_addr
,

456 –
addr6
->
sö6_addr
.
s6_addr
 ) );

459 
	`mem˝y
–
˛õ¡_ù
, &
˛õ¡_addr
.
sö_addr
.
s_addr
,

460 –
˛õ¡_addr
.
sö_addr
.
s_addr
 ) );

465 
	}
}

470 
	$√t_£t_block
–
fd
 )

472 #i‡–
	`deföed
(
_WIN32
Ë|| deföed(
_WIN32_WCE
ËË&& !deföed(
EFIX64
) && \

473 !
	`deföed
(
EFI32
)

474 
u_l⁄g
 
n
 = 0;

475 –
	`io˘lsockë
–
fd
, 
FIONBIO
, &
n
 ) );

477 –
	`f˙é
–
fd
, 
F_SETFL
, f˙é–fd, 
F_GETFL
 ) & ~
O_NONBLOCK
 ) );

479 
	}
}

481 
	$√t_£t_n⁄block
–
fd
 )

483 #i‡–
	`deföed
(
_WIN32
Ë|| deföed(
_WIN32_WCE
ËË&& !deföed(
EFIX64
) && \

484 !
	`deföed
(
EFI32
)

485 
u_l⁄g
 
n
 = 1;

486 –
	`io˘lsockë
–
fd
, 
FIONBIO
, &
n
 ) );

488 –
	`f˙é
–
fd
, 
F_SETFL
, f˙é–fd, 
F_GETFL
 ) | 
O_NONBLOCK
 ) );

490 
	}
}

492 #i‡
deföed
(
POLARSSL_HAVE_TIME
)

496 
	$√t_u¶ìp
–
u£c
 )

498 
timevÆ
 
tv
;

499 
tv
.
tv_£c
 = 0;

500 
tv
.
tv_u£c
 = 
u£c
;

501 
	`£À˘
–0, 
NULL
, NULL, NULL, &
tv
 );

502 
	}
}

508 
	$√t_ªcv
–*
˘x
, *
buf
, 
size_t
 
Àn
 )

510 
fd
 = *((*Ë
˘x
);

511 
ªt
 = 
	`ªad
–
fd
, 
buf
, 
Àn
 );

513 if–
ªt
 < 0 )

515 if–
	`√t_would_block
–
fd
 ) != 0 )

516 –
POLARSSL_ERR_NET_WANT_READ
 );

518 #i‡–
	`deföed
(
_WIN32
Ë|| deföed(
_WIN32_WCE
ËË&& !deföed(
EFIX64
) && \

519 !
	`deföed
(
EFI32
)

520 if–
	`WSAGëLa°Eº‹
(Ë=
WSAECONNRESET
 )

521 –
POLARSSL_ERR_NET_CONN_RESET
 );

523 if–
î∫o
 =
EPIPE
 ||Éºnÿ=
ECONNRESET
 )

524 –
POLARSSL_ERR_NET_CONN_RESET
 );

526 if–
î∫o
 =
EINTR
 )

527 –
POLARSSL_ERR_NET_WANT_READ
 );

530 –
POLARSSL_ERR_NET_RECV_FAILED
 );

533 –
ªt
 );

534 
	}
}

539 
	$√t_£nd
–*
˘x
, c⁄° *
buf
, 
size_t
 
Àn
 )

541 
fd
 = *((*Ë
˘x
);

542 
ªt
 = 
	`wrôe
–
fd
, 
buf
, 
Àn
 );

544 if–
ªt
 < 0 )

546 if–
	`√t_would_block
–
fd
 ) != 0 )

547 –
POLARSSL_ERR_NET_WANT_WRITE
 );

549 #i‡–
	`deföed
(
_WIN32
Ë|| deföed(
_WIN32_WCE
ËË&& !deföed(
EFIX64
) && \

550 !
	`deföed
(
EFI32
)

551 if–
	`WSAGëLa°Eº‹
(Ë=
WSAECONNRESET
 )

552 –
POLARSSL_ERR_NET_CONN_RESET
 );

554 if–
î∫o
 =
EPIPE
 ||Éºnÿ=
ECONNRESET
 )

555 –
POLARSSL_ERR_NET_CONN_RESET
 );

557 if–
î∫o
 =
EINTR
 )

558 –
POLARSSL_ERR_NET_WANT_WRITE
 );

561 –
POLARSSL_ERR_NET_SEND_FAILED
 );

564 –
ªt
 );

565 
	}
}

570 
	$√t_˛o£
–
fd
 )

572 
	`shutdown
–
fd
, 2 );

573 
	`˛o£
–
fd
 );

574 
	}
}

	@polarssl/library/oid.c

28 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

29 
	~"pﬁ¨s¶/c⁄fig.h
"

31 #ö˛udê
POLARSSL_CONFIG_FILE


34 #i‡
deföed
(
POLARSSL_OID_C
)

36 
	~"pﬁ¨s¶/oid.h
"

37 
	~"pﬁ¨s¶/rß.h
"

39 #i‡
deföed
(
POLARSSL_X509_USE_C
Ë|| deföed(
POLARSSL_X509_CREATE_C
)

40 
	~"pﬁ¨s¶/x509.h
"

43 
	~<°dio.h
>

48 
	#ADD_LEN
(
s
Ës, 
	`OID_SIZE
(s)

	)

54 
	#FN_OID_TYPED_FROM_ASN1
–
TYPE_T
, 
NAME
, 
LIST
 ) \

55 c⁄° 
TYPE_T
 * 
oid_
 ## 
NAME
 ## 
	`_‰om_a¢1
–c⁄° 
a¢1_buf
 *
oid
 ) \

57 c⁄° 
TYPE_T
 *
p
 = 
LIST
; \

58 c⁄° 
oid_des¸ùt‹_t
 *
cur
 = (c⁄° oid_des¸ùt‹_à*Ë
p
; \

59 if–
p
 =
NULL
 || 
oid
 == NULL ) ( NULL ); \

60  
cur
->
a¢1
 !
NULL
 ) { \

61 if–
cur
->
a¢1_Àn
 =
oid
->
Àn
 && \

62 
	`memcmp
–
cur
->
a¢1
, 
oid
->
p
, oid->
Àn
 ) == 0 ) { \

63 –
p
 ); \

65 
p
++; \

66 
cur
 = (c⁄° 
oid_des¸ùt‹_t
 *Ë
p
; \

68 –
NULL
 ); \

69 }

	)

75 
	#FN_OID_GET_DESCRIPTOR_ATTR1
(
FN_NAME
, 
TYPE_T
, 
TYPE_NAME
, 
ATTR1_TYPE
, 
ATTR1
) \

76 
	`FN_NAME
–c⁄° 
a¢1_buf
 *
oid
, 
ATTR1_TYPE
 * 
ATTR1
 ) \

78 c⁄° 
TYPE_T
 *
d©a
 = 
oid_
 ## 
TYPE_NAME
 ## 
	`_‰om_a¢1
–
oid
 ); \

79 if–
d©a
 =
NULL
 ) –
POLARSSL_ERR_OID_NOT_FOUND
 ); \

80 *
ATTR1
 = 
d©a
->
des¸ùt‹
.ATTR1; \

82 }

	)

88 
	#FN_OID_GET_ATTR1
(
FN_NAME
, 
TYPE_T
, 
TYPE_NAME
, 
ATTR1_TYPE
, 
ATTR1
) \

89 
	`FN_NAME
–c⁄° 
a¢1_buf
 *
oid
, 
ATTR1_TYPE
 * 
ATTR1
 ) \

91 c⁄° 
TYPE_T
 *
d©a
 = 
oid_
 ## 
TYPE_NAME
 ## 
	`_‰om_a¢1
–
oid
 ); \

92 if–
d©a
 =
NULL
 ) –
POLARSSL_ERR_OID_NOT_FOUND
 ); \

93 *
ATTR1
 = 
d©a
->ATTR1; \

95 }

	)

101 
	#FN_OID_GET_ATTR2
(
FN_NAME
, 
TYPE_T
, 
TYPE_NAME
, 
ATTR1_TYPE
, 
ATTR1
, \

102 
ATTR2_TYPE
, 
ATTR2
) \

103 
	`FN_NAME
–c⁄° 
a¢1_buf
 *
oid
, 
ATTR1_TYPE
 * 
ATTR1
, 
ATTR2_TYPE
 * 
ATTR2
 ) \

105 c⁄° 
TYPE_T
 *
d©a
 = 
oid_
 ## 
TYPE_NAME
 ## 
	`_‰om_a¢1
–
oid
 ); \

106 if–
d©a
 =
NULL
 ) –
POLARSSL_ERR_OID_NOT_FOUND
 ); \

107 *
ATTR1
 = 
d©a
->ATTR1; \

108 *
ATTR2
 = 
d©a
->ATTR2; \

110 }

	)

116 
	#FN_OID_GET_OID_BY_ATTR1
(
FN_NAME
, 
TYPE_T
, 
LIST
, 
ATTR1_TYPE
, 
ATTR1
) \

117 
	`FN_NAME
–
ATTR1_TYPE
 
ATTR1
, c⁄° **
oid
, 
size_t
 *
ﬁí
 ) \

119 c⁄° 
TYPE_T
 *
cur
 = 
LIST
; \

120  
cur
->
des¸ùt‹
.
a¢1
 !
NULL
 ) { \

121 if–
cur
->
ATTR1
 == ATTR1 ) { \

122 *
oid
 = 
cur
->
des¸ùt‹
.
a¢1
; \

123 *
ﬁí
 = 
cur
->
des¸ùt‹
.
a¢1_Àn
; \

126 
cur
++; \

128 –
POLARSSL_ERR_OID_NOT_FOUND
 ); \

129 }

	)

135 
	#FN_OID_GET_OID_BY_ATTR2
(
FN_NAME
, 
TYPE_T
, 
LIST
, 
ATTR1_TYPE
, 
ATTR1
, \

136 
ATTR2_TYPE
, 
ATTR2
) \

137 
	`FN_NAME
–
ATTR1_TYPE
 
ATTR1
, 
ATTR2_TYPE
 
ATTR2
, c⁄° **
oid
 , \

138 
size_t
 *
ﬁí
 ) \

140 c⁄° 
TYPE_T
 *
cur
 = 
LIST
; \

141  
cur
->
des¸ùt‹
.
a¢1
 !
NULL
 ) { \

142 if–
cur
->
ATTR1
 =ATTR1 && cur->
ATTR2
 == ATTR2 ) { \

143 *
oid
 = 
cur
->
des¸ùt‹
.
a¢1
; \

144 *
ﬁí
 = 
cur
->
des¸ùt‹
.
a¢1_Àn
; \

147 
cur
++; \

149 –
POLARSSL_ERR_OID_NOT_FOUND
 ); \

150 }

	)

156 
oid_des¸ùt‹_t
 
	mdes¸ùt‹
;

157 c⁄° *
	msh‹t_«me
;

158 } 
	toid_x520_©å_t
;

160 c⁄° 
oid_x520_©å_t
 
	goid_x520_©å_ty≥
[] =

163 { 
ADD_LEN
–
OID_AT_CN
 ), "id-at-commonName", "Common Name" },

167 { 
ADD_LEN
–
OID_AT_COUNTRY
 ), "id-at-countryName", "Country" },

171 { 
ADD_LEN
–
OID_AT_LOCALITY
 ), "id-at-locality", "Locality" },

175 { 
ADD_LEN
–
OID_AT_STATE
 ), "id-at-state", "State" },

179 { 
ADD_LEN
–
OID_AT_ORGANIZATION
 ),"id-at-organizationName", "Organization" },

183 { 
ADD_LEN
–
OID_AT_ORG_UNIT
 ), "id-at-organizationalUnitName", "Org Unit" },

187 { 
ADD_LEN
–
OID_PKCS9_EMAIL
 ), "emailAddress", "E-mailáddress" },

191 { 
ADD_LEN
–
OID_AT_SERIAL_NUMBER
 ),"id-at-serialNumber", "SerialÇumber" },

195 { 
ADD_LEN
–
OID_AT_POSTAL_ADDRESS
 ),"id-at-postalAddress", "Postaláddress" },

199 { 
ADD_LEN
–
OID_AT_POSTAL_CODE
 ), "id-at-postalCode", "Postal code" },

203 { 
ADD_LEN
–
OID_AT_SUR_NAME
 ), "id-at-surName", "Surname" },

207 { 
ADD_LEN
–
OID_AT_GIVEN_NAME
 ), "id-at-givenName", "GivenÇame" },

211 { 
ADD_LEN
–
OID_AT_INITIALS
 ), "id-at-initials", "Initials" },

215 { 
ADD_LEN
–
OID_AT_GENERATION_QUALIFIER
 ), "id-at-generationQualifier", "Generation qualifier" },

219 { 
ADD_LEN
–
OID_AT_TITLE
 ), "id-at-title", "Title" },

223 { 
ADD_LEN
–
OID_AT_DN_QUALIFIER
 ),"id-at-dnQualifier", "Distinguished Name qualifier" },

227 { 
ADD_LEN
–
OID_AT_PSEUDONYM
 ), "id-at-pseudonym", "Pseudonym" },

231 { 
ADD_LEN
–
OID_DOMAIN_COMPONENT
 ), "id-domainComponent", "Domain component" },

235 { 
NULL
, 0, NULL, NULL },

236 
NULL
,

240 
FN_OID_TYPED_FROM_ASN1
(
oid_x520_©å_t
, 
x520_©å
, 
oid_x520_©å_ty≥
);

241 
FN_OID_GET_ATTR1
(
oid_gë_©å_sh‹t_«me
, 
oid_x520_©å_t
, 
x520_©å
, c⁄° *, 
sh‹t_«me
);

243 #i‡
deföed
(
POLARSSL_X509_USE_C
Ë|| deföed(
POLARSSL_X509_CREATE_C
)

248 
oid_des¸ùt‹_t
 
	mdes¸ùt‹
;

249 
	mext_ty≥
;

250 } 
	toid_x509_ext_t
;

252 c⁄° 
oid_x509_ext_t
 
	goid_x509_ext
[] =

255 { 
ADD_LEN
–
OID_BASIC_CONSTRAINTS
 ), "id-ce-basicConstraints", "Basic Constraints" },

256 
EXT_BASIC_CONSTRAINTS
,

259 { 
ADD_LEN
–
OID_KEY_USAGE
 ), "id-ce-keyUsage", "Key Usage" },

260 
EXT_KEY_USAGE
,

263 { 
ADD_LEN
–
OID_EXTENDED_KEY_USAGE
 ), "id-ce-keyUsage", "Extended Key Usage" },

264 
EXT_EXTENDED_KEY_USAGE
,

267 { 
ADD_LEN
–
OID_SUBJECT_ALT_NAME
 ), "id-ce-subjectAltName", "Subject Alt Name" },

268 
EXT_SUBJECT_ALT_NAME
,

271 { 
ADD_LEN
–
OID_NS_CERT_TYPE
 ), "id-netscape-certtype", "Netscape Certificate Type" },

272 
EXT_NS_CERT_TYPE
,

275 { 
NULL
, 0, NULL, NULL },

280 
FN_OID_TYPED_FROM_ASN1
(
oid_x509_ext_t
, 
x509_ext
, 
oid_x509_ext
);

281 
FN_OID_GET_ATTR1
(
oid_gë_x509_ext_ty≥
, 
oid_x509_ext_t
, 
x509_ext
, , 
ext_ty≥
);

283 c⁄° 
oid_des¸ùt‹_t
 
	goid_ext_key_ußge
[] =

285 { 
ADD_LEN
–
OID_SERVER_AUTH
 ), "id-kp-serverAuth", "TLS Web Server Authentication" },

286 { 
ADD_LEN
–
OID_CLIENT_AUTH
 ), "id-kp-clientAuth", "TLS Web Client Authentication" },

287 { 
ADD_LEN
–
OID_CODE_SIGNING
 ), "id-kp-codeSigning", "Code Signing" },

288 { 
ADD_LEN
–
OID_EMAIL_PROTECTION
 ), "id-kp-emailProtection", "E-mail Protection" },

289 { 
ADD_LEN
–
OID_TIME_STAMPING
 ), "id-kp-timeStamping", "Time Stamping" },

290 { 
ADD_LEN
–
OID_OCSP_SIGNING
 ), "id-kp-OCSPSigning", "OCSP Signing" },

291 { 
NULL
, 0, NULL, NULL },

294 
FN_OID_TYPED_FROM_ASN1
(
oid_des¸ùt‹_t
, 
ext_key_ußge
, 
oid_ext_key_ußge
);

295 
FN_OID_GET_ATTR1
(
oid_gë_exãnded_key_ußge
, 
oid_des¸ùt‹_t
, 
ext_key_ußge
, c⁄° *, 
des¸ùti⁄
);

298 #i‡
deföed
(
POLARSSL_MD_C
)

303 
oid_des¸ùt‹_t
 
	mdes¸ùt‹
;

304 
md_ty≥_t
 
	mmd_Æg
;

305 
pk_ty≥_t
 
	mpk_Æg
;

306 } 
	toid_sig_Æg_t
;

308 c⁄° 
oid_sig_Æg_t
 
	goid_sig_Æg
[] =

311 { 
ADD_LEN
–
OID_PKCS1_MD2
 ), "md2WithRSAEncryption", "RSA with MD2" },

312 
POLARSSL_MD_MD2
, 
POLARSSL_PK_RSA
,

315 { 
ADD_LEN
–
OID_PKCS1_MD4
 ), "md4WithRSAEncryption", "RSA with MD4" },

316 
POLARSSL_MD_MD4
, 
POLARSSL_PK_RSA
,

319 { 
ADD_LEN
–
OID_PKCS1_MD5
 ), "md5WithRSAEncryption", "RSA with MD5" },

320 
POLARSSL_MD_MD5
, 
POLARSSL_PK_RSA
,

323 { 
ADD_LEN
–
OID_PKCS1_SHA1
 ), "sha-1WithRSAEncryption", "RSA with SHA1" },

324 
POLARSSL_MD_SHA1
, 
POLARSSL_PK_RSA
,

327 { 
ADD_LEN
–
OID_PKCS1_SHA224
 ), "sha224WithRSAEncryption", "RSA with SHA-224" },

328 
POLARSSL_MD_SHA224
, 
POLARSSL_PK_RSA
,

331 { 
ADD_LEN
–
OID_PKCS1_SHA256
 ), "sha256WithRSAEncryption", "RSA with SHA-256" },

332 
POLARSSL_MD_SHA256
, 
POLARSSL_PK_RSA
,

335 { 
ADD_LEN
–
OID_PKCS1_SHA384
 ), "sha384WithRSAEncryption", "RSA with SHA-384" },

336 
POLARSSL_MD_SHA384
, 
POLARSSL_PK_RSA
,

339 { 
ADD_LEN
–
OID_PKCS1_SHA512
 ), "sha512WithRSAEncryption", "RSA with SHA-512" },

340 
POLARSSL_MD_SHA512
, 
POLARSSL_PK_RSA
,

343 { 
ADD_LEN
–
OID_RSA_SHA_OBS
 ), "sha-1WithRSAEncryption", "RSA with SHA1" },

344 
POLARSSL_MD_SHA1
, 
POLARSSL_PK_RSA
,

347 { 
ADD_LEN
–
OID_ECDSA_SHA1
 ), "ecdsa-with-SHA1", "ECDSA with SHA1" },

348 
POLARSSL_MD_SHA1
, 
POLARSSL_PK_ECDSA
,

351 { 
ADD_LEN
–
OID_ECDSA_SHA224
 ), "ecdsa-with-SHA224", "ECDSA with SHA224" },

352 
POLARSSL_MD_SHA224
, 
POLARSSL_PK_ECDSA
,

355 { 
ADD_LEN
–
OID_ECDSA_SHA256
 ), "ecdsa-with-SHA256", "ECDSA with SHA256" },

356 
POLARSSL_MD_SHA256
, 
POLARSSL_PK_ECDSA
,

359 { 
ADD_LEN
–
OID_ECDSA_SHA384
 ), "ecdsa-with-SHA384", "ECDSA with SHA384" },

360 
POLARSSL_MD_SHA384
, 
POLARSSL_PK_ECDSA
,

363 { 
ADD_LEN
–
OID_ECDSA_SHA512
 ), "ecdsa-with-SHA512", "ECDSA with SHA512" },

364 
POLARSSL_MD_SHA512
, 
POLARSSL_PK_ECDSA
,

367 { 
ADD_LEN
–
OID_RSASSA_PSS
 ), "RSASSA-PSS", "RSASSA-PSS" },

368 
POLARSSL_MD_NONE
, 
POLARSSL_PK_RSASSA_PSS
,

371 { 
NULL
, 0, NULL, NULL },

376 
FN_OID_TYPED_FROM_ASN1
(
oid_sig_Æg_t
, 
sig_Æg
, 
oid_sig_Æg
);

377 
FN_OID_GET_DESCRIPTOR_ATTR1
(
oid_gë_sig_Æg_desc
, 
oid_sig_Æg_t
, 
sig_Æg
, c⁄° *, 
des¸ùti⁄
);

378 
FN_OID_GET_ATTR2
(
oid_gë_sig_Æg
, 
oid_sig_Æg_t
, 
sig_Æg
, 
md_ty≥_t
, 
md_Æg
, 
pk_ty≥_t
, 
pk_Æg
);

379 
FN_OID_GET_OID_BY_ATTR2
(
oid_gë_oid_by_sig_Æg
, 
oid_sig_Æg_t
, 
oid_sig_Æg
, 
pk_ty≥_t
, 
pk_Æg
, 
md_ty≥_t
, 
md_Æg
);

386 
oid_des¸ùt‹_t
 
	mdes¸ùt‹
;

387 
pk_ty≥_t
 
	mpk_Æg
;

388 } 
	toid_pk_Æg_t
;

390 c⁄° 
oid_pk_Æg_t
 
	goid_pk_Æg
[] =

393 { 
ADD_LEN
–
OID_PKCS1_RSA
 ), "rsaEncryption", "RSA" },

394 
POLARSSL_PK_RSA
,

397 { 
ADD_LEN
–
OID_EC_ALG_UNRESTRICTED
 ), "id-ecPublicKey", "Generic EC key" },

398 
POLARSSL_PK_ECKEY
,

401 { 
ADD_LEN
–
OID_EC_ALG_ECDH
 ), "id-ecDH", "EC key for ECDH" },

402 
POLARSSL_PK_ECKEY_DH
,

405 { 
NULL
, 0, NULL, NULL },

410 
FN_OID_TYPED_FROM_ASN1
(
oid_pk_Æg_t
, 
pk_Æg
, 
oid_pk_Æg
);

411 
FN_OID_GET_ATTR1
(
oid_gë_pk_Æg
, 
oid_pk_Æg_t
, 
pk_Æg
, 
pk_ty≥_t
,Ök_alg);

412 
FN_OID_GET_OID_BY_ATTR1
(
oid_gë_oid_by_pk_Æg
, 
oid_pk_Æg_t
, 
oid_pk_Æg
, 
pk_ty≥_t
, 
pk_Æg
);

414 #i‡
deföed
(
POLARSSL_ECP_C
)

419 
oid_des¸ùt‹_t
 
	mdes¸ùt‹
;

420 
e˝_group_id
 
	mgΩ_id
;

421 } 
	toid_e˝_gΩ_t
;

423 c⁄° 
oid_e˝_gΩ_t
 
	goid_e˝_gΩ
[] =

426 { 
ADD_LEN
–
OID_EC_GRP_SECP192R1
 ), "secp192r1", "secp192r1" },

427 
POLARSSL_ECP_DP_SECP192R1
,

430 { 
ADD_LEN
–
OID_EC_GRP_SECP224R1
 ), "secp224r1", "secp224r1" },

431 
POLARSSL_ECP_DP_SECP224R1
,

434 { 
ADD_LEN
–
OID_EC_GRP_SECP256R1
 ), "secp256r1", "secp256r1" },

435 
POLARSSL_ECP_DP_SECP256R1
,

438 { 
ADD_LEN
–
OID_EC_GRP_SECP384R1
 ), "secp384r1", "secp384r1" },

439 
POLARSSL_ECP_DP_SECP384R1
,

442 { 
ADD_LEN
–
OID_EC_GRP_SECP521R1
 ), "secp521r1", "secp521r1" },

443 
POLARSSL_ECP_DP_SECP521R1
,

446 { 
ADD_LEN
–
OID_EC_GRP_SECP192K1
 ), "secp192k1", "secp192k1" },

447 
POLARSSL_ECP_DP_SECP192K1
,

450 { 
ADD_LEN
–
OID_EC_GRP_SECP224K1
 ), "secp224k1", "secp224k1" },

451 
POLARSSL_ECP_DP_SECP224K1
,

454 { 
ADD_LEN
–
OID_EC_GRP_SECP256K1
 ), "secp256k1", "secp256k1" },

455 
POLARSSL_ECP_DP_SECP256K1
,

458 { 
ADD_LEN
–
OID_EC_GRP_BP256R1
 ), "brainpoolP256r1","brainpool256r1" },

459 
POLARSSL_ECP_DP_BP256R1
,

462 { 
ADD_LEN
–
OID_EC_GRP_BP384R1
 ), "brainpoolP384r1","brainpool384r1" },

463 
POLARSSL_ECP_DP_BP384R1
,

466 { 
ADD_LEN
–
OID_EC_GRP_BP512R1
 ), "brainpoolP512r1","brainpool512r1" },

467 
POLARSSL_ECP_DP_BP512R1
,

470 { 
NULL
, 0, NULL, NULL },

475 
FN_OID_TYPED_FROM_ASN1
(
oid_e˝_gΩ_t
, 
gΩ_id
, 
oid_e˝_gΩ
);

476 
FN_OID_GET_ATTR1
(
oid_gë_ec_gΩ
, 
oid_e˝_gΩ_t
, 
gΩ_id
, 
e˝_group_id
, grp_id);

477 
FN_OID_GET_OID_BY_ATTR1
(
oid_gë_oid_by_ec_gΩ
, 
oid_e˝_gΩ_t
, 
oid_e˝_gΩ
, 
e˝_group_id
, 
gΩ_id
);

480 #i‡
deföed
(
POLARSSL_CIPHER_C
)

485 
oid_des¸ùt‹_t
 
	mdes¸ùt‹
;

486 
cùhî_ty≥_t
 
	mcùhî_Æg
;

487 } 
	toid_cùhî_Æg_t
;

489 c⁄° 
oid_cùhî_Æg_t
 
	goid_cùhî_Æg
[] =

492 { 
ADD_LEN
–
OID_DES_CBC
 ), "desCBC", "DES-CBC" },

493 
POLARSSL_CIPHER_DES_CBC
,

496 { 
ADD_LEN
–
OID_DES_EDE3_CBC
 ), "des-ede3-cbc", "DES-EDE3-CBC" },

497 
POLARSSL_CIPHER_DES_EDE3_CBC
,

500 { 
NULL
, 0, NULL, NULL },

505 
FN_OID_TYPED_FROM_ASN1
(
oid_cùhî_Æg_t
, 
cùhî_Æg
, 
oid_cùhî_Æg
);

506 
FN_OID_GET_ATTR1
(
oid_gë_cùhî_Æg
, 
oid_cùhî_Æg_t
, 
cùhî_Æg
, 
cùhî_ty≥_t
, cipher_alg);

509 #i‡
deföed
(
POLARSSL_MD_C
)

514 
oid_des¸ùt‹_t
 
	mdes¸ùt‹
;

515 
md_ty≥_t
 
	mmd_Æg
;

516 } 
	toid_md_Æg_t
;

518 c⁄° 
oid_md_Æg_t
 
	goid_md_Æg
[] =

521 { 
ADD_LEN
–
OID_DIGEST_ALG_MD2
 ), "id-md2", "MD2" },

522 
POLARSSL_MD_MD2
,

525 { 
ADD_LEN
–
OID_DIGEST_ALG_MD4
 ), "id-md4", "MD4" },

526 
POLARSSL_MD_MD4
,

529 { 
ADD_LEN
–
OID_DIGEST_ALG_MD5
 ), "id-md5", "MD5" },

530 
POLARSSL_MD_MD5
,

533 { 
ADD_LEN
–
OID_DIGEST_ALG_SHA1
 ), "id-sha1", "SHA-1" },

534 
POLARSSL_MD_SHA1
,

537 { 
ADD_LEN
–
OID_DIGEST_ALG_SHA224
 ), "id-sha224", "SHA-224" },

538 
POLARSSL_MD_SHA224
,

541 { 
ADD_LEN
–
OID_DIGEST_ALG_SHA256
 ), "id-sha256", "SHA-256" },

542 
POLARSSL_MD_SHA256
,

545 { 
ADD_LEN
–
OID_DIGEST_ALG_SHA384
 ), "id-sha384", "SHA-384" },

546 
POLARSSL_MD_SHA384
,

549 { 
ADD_LEN
–
OID_DIGEST_ALG_SHA512
 ), "id-sha512", "SHA-512" },

550 
POLARSSL_MD_SHA512
,

553 { 
NULL
, 0, NULL, NULL },

558 
FN_OID_TYPED_FROM_ASN1
(
oid_md_Æg_t
, 
md_Æg
, 
oid_md_Æg
);

559 
FN_OID_GET_ATTR1
(
oid_gë_md_Æg
, 
oid_md_Æg_t
, 
md_Æg
, 
md_ty≥_t
, md_alg);

560 
FN_OID_GET_OID_BY_ATTR1
(
oid_gë_oid_by_md
, 
oid_md_Æg_t
, 
oid_md_Æg
, 
md_ty≥_t
, 
md_Æg
);

563 #i‡
deföed
(
POLARSSL_PKCS12_C
)

568 
oid_des¸ùt‹_t
 
	mdes¸ùt‹
;

569 
md_ty≥_t
 
	mmd_Æg
;

570 
cùhî_ty≥_t
 
	mcùhî_Æg
;

571 } 
	toid_pkcs12_pbe_Æg_t
;

573 c⁄° 
oid_pkcs12_pbe_Æg_t
 
	goid_pkcs12_pbe_Æg
[] =

576 { 
ADD_LEN
–
OID_PKCS12_PBE_SHA1_DES3_EDE_CBC
 ), "pbeWithSHAAnd3-KeyTripleDES-CBC", "PBE with SHA1ánd 3-Key 3DES" },

577 
POLARSSL_MD_SHA1
, 
POLARSSL_CIPHER_DES_EDE3_CBC
,

580 { 
ADD_LEN
–
OID_PKCS12_PBE_SHA1_DES2_EDE_CBC
 ), "pbeWithSHAAnd2-KeyTripleDES-CBC", "PBE with SHA1ánd 2-Key 3DES" },

581 
POLARSSL_MD_SHA1
, 
POLARSSL_CIPHER_DES_EDE_CBC
,

584 { 
NULL
, 0, NULL, NULL },

589 
FN_OID_TYPED_FROM_ASN1
(
oid_pkcs12_pbe_Æg_t
, 
pkcs12_pbe_Æg
, 
oid_pkcs12_pbe_Æg
);

590 
FN_OID_GET_ATTR2
(
oid_gë_pkcs12_pbe_Æg
, 
oid_pkcs12_pbe_Æg_t
, 
pkcs12_pbe_Æg
, 
md_ty≥_t
, 
md_Æg
, 
cùhî_ty≥_t
, 
cùhî_Æg
);

593 #i‡
deföed
(
_MSC_VER
Ë&& !deföed 
¢¥ötf
 && !deföed(
EFIX64
) && \

594 !
	$deföed
(
EFI32
)

595 
	~<°d¨g.h
>

597 #i‡!
deföed
 
v¢¥ötf


598 
	#v¢¥ötf
 
_v¢¥ötf


	)

608 
	$com∑t_¢¥ötf
–*
°r
, 
size_t
 
size
, c⁄° *
f‹m©
, ... )

610 
va_li°
 
≠
;

611 
ªs
 = -1;

613 
	`va_°¨t
–
≠
, 
f‹m©
 );

615 
ªs
 = 
	`v¢¥ötf
–
°r
, 
size
, 
f‹m©
, 
≠
 );

617 
	`va_íd
–
≠
 );

620 if–
ªs
 < 0 )

621 –(Ë
size
 + 20 );

623 –
ªs
 );

624 
	}
}

626 
	#¢¥ötf
 
com∑t_¢¥ötf


	)

629 
	#SAFE_SNPRINTF
() \

631 if–
ªt
 == -1 ) \

632 –
POLARSSL_ERR_OID_BUF_TOO_SMALL
 ); \

634 if–(Ë
ªt
 >
n
 ) { \

635 
p
[
n
 - 1] = '\0'; \

636 –
POLARSSL_ERR_OID_BUF_TOO_SMALL
 ); \

639 
n
 -(Ë
ªt
; \

640 
p
 +(Ë
ªt
; \

641 }

	)

644 
	$oid_gë_numîic_°rög
–*
buf
, 
size_t
 
size
,

645 c⁄° 
a¢1_buf
 *
oid
 )

647 
ªt
;

648 
size_t
 
i
, 
n
;

649 
vÆue
;

650 *
p
;

652 
p
 = 
buf
;

653 
n
 = 
size
;

656 if–
oid
->
Àn
 > 0 )

658 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "%d.%d", 
oid
->p[0] / 40, oid->p[0] % 40 );

659 
	`SAFE_SNPRINTF
();

662 
vÆue
 = 0;

663  
i
 = 1; i < 
oid
->
Àn
; i++ )

666 if–––
vÆue
 << 7 ) >> 7 ) != value )

667 –
POLARSSL_ERR_OID_BUF_TOO_SMALL
 );

669 
vÆue
 <<= 7;

670 
vÆue
 +
oid
->
p
[
i
] & 0x7F;

672 if–!–
oid
->
p
[
i
] & 0x80 ) )

675 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, ".%d", 
vÆue
 );

676 
	`SAFE_SNPRINTF
();

677 
vÆue
 = 0;

681 –(Ë–
size
 - 
n
 ) );

682 
	}
}

	@polarssl/library/padlock.c

32 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

33 
	~"pﬁ¨s¶/c⁄fig.h
"

35 #ö˛udê
POLARSSL_CONFIG_FILE


38 #i‡
deföed
(
POLARSSL_PADLOCK_C
)

40 
	~"pﬁ¨s¶/∑dlock.h
"

42 #i‡
deföed
(
POLARSSL_HAVE_X86
)

47 
	$∑dlock_suµ‹ts
–
„©uª
 )

49 
Êags
 = -1;

50 
ebx
 = 0, 
edx
 = 0;

52 if–
Êags
 == -1 )

54 
	`asm
( "movl %%ebx, %0 \n\t"

65 : "=m" (
ebx
), "=m" (
edx
)

66 : "m" (
ebx
)

69 
Êags
 = 
edx
;

72 –
Êags
 & 
„©uª
 );

73 
	}
}

78 
	$∑dlock_x¸y±ecb
–
´s_c⁄ãxt
 *
˘x
,

79 
mode
,

80 c⁄° 
öput
[16],

81 
ouçut
[16] )

83 
ebx
 = 0;

84 
uöt32_t
 *
rk
;

85 
uöt32_t
 *
blk
;

86 
uöt32_t
 *
˘æ
;

87 
buf
[256];

89 
rk
 = 
˘x
->rk;

90 
blk
 = 
	`PADLOCK_ALIGN16
–
buf
 );

91 
	`mem˝y
–
blk
, 
öput
, 16 );

93 
˘æ
 = 
blk
 + 4;

94 *
˘æ
 = 0x80 | 
˘x
->
ƒ
 | ( ( ctx->ƒ + ( 
mode
^1 ) - 10 ) << 9 );

96 
	`asm
( "pushfl \n\t"

106 : "=m" (
ebx
)

107 : "m" (
ebx
), "m" (
˘æ
), "m" (
rk
), "m" (
blk
)

110 
	`mem˝y
–
ouçut
, 
blk
, 16 );

113 
	}
}

118 
	$∑dlock_x¸y±cbc
–
´s_c⁄ãxt
 *
˘x
,

119 
mode
,

120 
size_t
 
Àngth
,

121 
iv
[16],

122 c⁄° *
öput
,

123 *
ouçut
 )

125 
ebx
 = 0;

126 
size_t
 
cou¡
;

127 
uöt32_t
 *
rk
;

128 
uöt32_t
 *
iw
;

129 
uöt32_t
 *
˘æ
;

130 
buf
[256];

132 if––(Ë
öput
 & 15 ) != 0 ||

133 –(Ë
ouçut
 & 15 ) != 0 )

134 –
POLARSSL_ERR_PADLOCK_DATA_MISALIGNED
 );

136 
rk
 = 
˘x
->rk;

137 
iw
 = 
	`PADLOCK_ALIGN16
–
buf
 );

138 
	`mem˝y
–
iw
, 
iv
, 16 );

140 
˘æ
 = 
iw
 + 4;

141 *
˘æ
 = 0x80 | 
˘x
->
ƒ
 | ( ( ctx->ƒ + ( 
mode
 ^ 1 ) - 10 ) << 9 );

143 
cou¡
 = ( 
Àngth
 + 15 ) >> 4;

145 
	`asm
( "pushfl \n\t"

156 : "=m" (
ebx
)

157 : "m" (
ebx
), "m" (
cou¡
), "m" (
˘æ
),

158 "m" (
rk
), "m" (
öput
), "m" (
ouçut
), "m" (
iw
)

161 
	`mem˝y
–
iv
, 
iw
, 16 );

164 
	}
}

	@polarssl/library/pbkdf2.c

37 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

38 
	~"pﬁ¨s¶/c⁄fig.h
"

40 #ö˛udê
POLARSSL_CONFIG_FILE


43 #i‡
deföed
(
POLARSSL_PBKDF2_C
)

45 
	~"pﬁ¨s¶/pbkdf2.h
"

46 
	~"pﬁ¨s¶/pkcs5.h
"

48 
	$pbkdf2_hmac
–
md_c⁄ãxt_t
 *
˘x
, c⁄° *
∑ssw‹d
, 
size_t
 
∂í
,

49 c⁄° *
ß…
, 
size_t
 
¶í
,

50 
ôî©i⁄_cou¡
,

51 
uöt32_t
 
key_Àngth
, *
ouçut
 )

53  
	`pkcs5_pbkdf2_hmac
–
˘x
, 
∑ssw‹d
, 
∂í
, 
ß…
, 
¶í
, 
ôî©i⁄_cou¡
,

54 
key_Àngth
, 
ouçut
 );

55 
	}
}

57 #i‡
deföed
(
POLARSSL_SELF_TEST
)

58 
	$pbkdf2_£lf_ã°
–
vîbo£
 )

60  
	`pkcs5_£lf_ã°
–
vîbo£
 );

61 
	}
}

	@polarssl/library/pem.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_PEM_PARSE_C
Ë|| deföed(
POLARSSL_PEM_WRITE_C
)

33 
	~"pﬁ¨s¶/≥m.h
"

34 
	~"pﬁ¨s¶/ba£64.h
"

35 
	~"pﬁ¨s¶/des.h
"

36 
	~"pﬁ¨s¶/´s.h
"

37 
	~"pﬁ¨s¶/md5.h
"

38 
	~"pﬁ¨s¶/cùhî.h
"

40 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

41 
	~"pﬁ¨s¶/∂©f‹m.h
"

43 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

44 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

47 
	~<°dlib.h
>

50 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

51 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

52 
	}
}

54 #i‡
deföed
(
POLARSSL_PEM_PARSE_C
)

55 
	$≥m_öô
–
≥m_c⁄ãxt
 *
˘x
 )

57 
	`mem£t
–
˘x
, 0, –
≥m_c⁄ãxt
 ) );

58 
	}
}

60 #i‡
deföed
(
POLARSSL_MD5_C
Ë&& deföed(
POLARSSL_CIPHER_MODE_CBC
) && \

61 –
deföed
(
POLARSSL_DES_C
Ë|| 
	$deföed
(
POLARSSL_AES_C
) )

65 
	$≥m_gë_iv
–c⁄° *
s
, *
iv
,

66 
size_t
 
iv_Àn
 )

68 
size_t
 
i
, 
j
, 
k
;

70 
	`mem£t
–
iv
, 0, 
iv_Àn
 );

72  
i
 = 0; i < 
iv_Àn
 * 2; i++, 
s
++ )

74 if–*
s
 >'0' && *†<'9' ) 
j
 = *s - '0'; 

75 if–*
s
 >'A' && *†<'F' ) 
j
 = *s - '7'; 

76 if–*
s
 >'a' && *†<'f' ) 
j
 = *s - 'W'; 

77 –
POLARSSL_ERR_PEM_INVALID_ENC_IV
 );

79 
k
 = ( ( 
i
 & 1 ) !0 ) ? 
j
 : j << 4;

81 
iv
[
i
 >> 1] = ()–iv[ò>> 1] | 
k
 );

85 
	}
}

87 
	$≥m_pbkdf1
–*
key
, 
size_t
 
keyÀn
,

88 *
iv
,

89 c⁄° *
pwd
, 
size_t
 
pwdÀn
 )

91 
md5_c⁄ãxt
 
md5_˘x
;

92 
md5sum
[16];

93 
size_t
 
u£_Àn
;

95 
	`md5_öô
–&
md5_˘x
 );

100 
	`md5_°¨ts
–&
md5_˘x
 );

101 
	`md5_upd©e
–&
md5_˘x
, 
pwd
, 
pwdÀn
 );

102 
	`md5_upd©e
–&
md5_˘x
, 
iv
, 8 );

103 
	`md5_föish
–&
md5_˘x
, 
md5sum
 );

105 if–
keyÀn
 <= 16 )

107 
	`mem˝y
–
key
, 
md5sum
, 
keyÀn
 );

109 
	`md5_‰ì
–&
md5_˘x
 );

110 
	`pﬁ¨s¶_zîoize
–
md5sum
, 16 );

114 
	`mem˝y
–
key
, 
md5sum
, 16 );

119 
	`md5_°¨ts
–&
md5_˘x
 );

120 
	`md5_upd©e
–&
md5_˘x
, 
md5sum
, 16 );

121 
	`md5_upd©e
–&
md5_˘x
, 
pwd
, 
pwdÀn
 );

122 
	`md5_upd©e
–&
md5_˘x
, 
iv
, 8 );

123 
	`md5_föish
–&
md5_˘x
, 
md5sum
 );

125 
u£_Àn
 = 16;

126 if–
keyÀn
 < 32 )

127 
u£_Àn
 = 
keyÀn
 - 16;

129 
	`mem˝y
–
key
 + 16, 
md5sum
, 
u£_Àn
 );

131 
	`md5_‰ì
–&
md5_˘x
 );

132 
	`pﬁ¨s¶_zîoize
–
md5sum
, 16 );

133 
	}
}

135 #i‡
deföed
(
POLARSSL_DES_C
)

139 
	$≥m_des_de¸y±
–
des_iv
[8],

140 *
buf
, 
size_t
 
buÊí
,

141 c⁄° *
pwd
, 
size_t
 
pwdÀn
 )

143 
des_c⁄ãxt
 
des_˘x
;

144 
des_key
[8];

146 
	`des_öô
–&
des_˘x
 );

148 
	`≥m_pbkdf1
–
des_key
, 8, 
des_iv
, 
pwd
, 
pwdÀn
 );

150 
	`des_£tkey_dec
–&
des_˘x
, 
des_key
 );

151 
	`des_¸y±_cbc
–&
des_˘x
, 
DES_DECRYPT
, 
buÊí
,

152 
des_iv
, 
buf
, buf );

154 
	`des_‰ì
–&
des_˘x
 );

155 
	`pﬁ¨s¶_zîoize
–
des_key
, 8 );

156 
	}
}

161 
	$≥m_des3_de¸y±
–
des3_iv
[8],

162 *
buf
, 
size_t
 
buÊí
,

163 c⁄° *
pwd
, 
size_t
 
pwdÀn
 )

165 
des3_c⁄ãxt
 
des3_˘x
;

166 
des3_key
[24];

168 
	`des3_öô
–&
des3_˘x
 );

170 
	`≥m_pbkdf1
–
des3_key
, 24, 
des3_iv
, 
pwd
, 
pwdÀn
 );

172 
	`des3_£t3key_dec
–&
des3_˘x
, 
des3_key
 );

173 
	`des3_¸y±_cbc
–&
des3_˘x
, 
DES_DECRYPT
, 
buÊí
,

174 
des3_iv
, 
buf
, buf );

176 
	`des3_‰ì
–&
des3_˘x
 );

177 
	`pﬁ¨s¶_zîoize
–
des3_key
, 24 );

178 
	}
}

181 #i‡
deföed
(
POLARSSL_AES_C
)

185 
	$≥m_´s_de¸y±
–
´s_iv
[16], 
keyÀn
,

186 *
buf
, 
size_t
 
buÊí
,

187 c⁄° *
pwd
, 
size_t
 
pwdÀn
 )

189 
´s_c⁄ãxt
 
´s_˘x
;

190 
´s_key
[32];

192 
	`´s_öô
–&
´s_˘x
 );

194 
	`≥m_pbkdf1
–
´s_key
, 
keyÀn
, 
´s_iv
, 
pwd
, 
pwdÀn
 );

196 
	`´s_£tkey_dec
–&
´s_˘x
, 
´s_key
, 
keyÀn
 * 8 );

197 
	`´s_¸y±_cbc
–&
´s_˘x
, 
AES_DECRYPT
, 
buÊí
,

198 
´s_iv
, 
buf
, buf );

200 
	`´s_‰ì
–&
´s_˘x
 );

201 
	`pﬁ¨s¶_zîoize
–
´s_key
, 
keyÀn
 );

202 
	}
}

206 –
	gPOLARSSL_AES_C
 || 
	gPOLARSSL_DES_C
 ) */

208 
	$≥m_ªad_buf„r
–
≥m_c⁄ãxt
 *
˘x
, c⁄° *
hódî
, c⁄° *
foŸî
,

209 c⁄° *
d©a
, c⁄° *
pwd
,

210 
size_t
 
pwdÀn
, size_à*
u£_Àn
 )

212 
ªt
, 
íc
;

213 
size_t
 
Àn
;

214 *
buf
;

215 c⁄° *
s1
, *
s2
, *
íd
;

216 #i‡
	`deföed
(
POLARSSL_MD5_C
Ë&& deföed(
POLARSSL_CIPHER_MODE_CBC
) && \

217 –
	`deföed
(
POLARSSL_DES_C
Ë|| deföed(
POLARSSL_AES_C
) )

218 
≥m_iv
[16];

219 
cùhî_ty≥_t
 
íc_Æg
 = 
POLARSSL_CIPHER_NONE
;

221 ((Ë
pwd
);

222 ((Ë
pwdÀn
);

224 –
POLARSSL_AES_C
 || 
POLARSSL_DES_C
 ) */

226 if–
˘x
 =
NULL
 )

227 –
POLARSSL_ERR_PEM_BAD_INPUT_DATA
 );

229 
s1
 = (*Ë
	`°r°r
–(c⁄° *Ë
d©a
, 
hódî
 );

231 if–
s1
 =
NULL
 )

232 –
POLARSSL_ERR_PEM_NO_HEADER_FOOTER_PRESENT
 );

234 
s2
 = (*Ë
	`°r°r
–(c⁄° *Ë
d©a
, 
foŸî
 );

236 if–
s2
 =
NULL
 || s2 <
s1
 )

237 –
POLARSSL_ERR_PEM_NO_HEADER_FOOTER_PRESENT
 );

239 
s1
 +
	`°æí
–
hódî
 );

240 if–*
s1
 == '\r' ) s1++;

241 if–*
s1
 == '\n' ) s1++;

242 –
POLARSSL_ERR_PEM_NO_HEADER_FOOTER_PRESENT
 );

244 
íd
 = 
s2
;

245 
íd
 +
	`°æí
–
foŸî
 );

246 if–*
íd
 == '\r' )Énd++;

247 if–*
íd
 == '\n' )Énd++;

248 *
u£_Àn
 = 
íd
 - 
d©a
;

250 
íc
 = 0;

252 if–
	`memcmp
–
s1
, "Proc-Type: 4,ENCRYPTED", 22 ) == 0 )

254 #i‡
	`deföed
(
POLARSSL_MD5_C
Ë&& deföed(
POLARSSL_CIPHER_MODE_CBC
) && \

255 –
	`deföed
(
POLARSSL_DES_C
Ë|| deföed(
POLARSSL_AES_C
) )

256 
íc
++;

258 
s1
 += 22;

259 if–*
s1
 == '\r' ) s1++;

260 if–*
s1
 == '\n' ) s1++;

261 –
POLARSSL_ERR_PEM_INVALID_DATA
 );

264 #i‡
	`deföed
(
POLARSSL_DES_C
)

265 if–
	`memcmp
–
s1
, "DEK-Info: DES-EDE3-CBC,", 23 ) == 0 )

267 
íc_Æg
 = 
POLARSSL_CIPHER_DES_EDE3_CBC
;

269 
s1
 += 23;

270 if–
	`≥m_gë_iv
–
s1
, 
≥m_iv
, 8 ) != 0 )

271 –
POLARSSL_ERR_PEM_INVALID_ENC_IV
 );

273 
s1
 += 16;

275 if–
	`memcmp
–
s1
, "DEK-Info: DES-CBC,", 18 ) == 0 )

277 
íc_Æg
 = 
POLARSSL_CIPHER_DES_CBC
;

279 
s1
 += 18;

280 if–
	`≥m_gë_iv
–
s1
, 
≥m_iv
, 8) != 0 )

281 –
POLARSSL_ERR_PEM_INVALID_ENC_IV
 );

283 
s1
 += 16;

287 #i‡
	`deföed
(
POLARSSL_AES_C
)

288 if–
	`memcmp
–
s1
, "DEK-Info: AES-", 14 ) == 0 )

290 if–
	`memcmp
–
s1
, "DEK-Info: AES-128-CBC,", 22 ) == 0 )

291 
íc_Æg
 = 
POLARSSL_CIPHER_AES_128_CBC
;

292 if–
	`memcmp
–
s1
, "DEK-Info: AES-192-CBC,", 22 ) == 0 )

293 
íc_Æg
 = 
POLARSSL_CIPHER_AES_192_CBC
;

294 if–
	`memcmp
–
s1
, "DEK-Info: AES-256-CBC,", 22 ) == 0 )

295 
íc_Æg
 = 
POLARSSL_CIPHER_AES_256_CBC
;

297 –
POLARSSL_ERR_PEM_UNKNOWN_ENC_ALG
 );

299 
s1
 += 22;

300 if–
	`≥m_gë_iv
–
s1
, 
≥m_iv
, 16 ) != 0 )

301 –
POLARSSL_ERR_PEM_INVALID_ENC_IV
 );

303 
s1
 += 32;

307 if–
íc_Æg
 =
POLARSSL_CIPHER_NONE
 )

308 –
POLARSSL_ERR_PEM_UNKNOWN_ENC_ALG
 );

310 if–*
s1
 == '\r' ) s1++;

311 if–*
s1
 == '\n' ) s1++;

312 –
POLARSSL_ERR_PEM_INVALID_DATA
 );

314 –
POLARSSL_ERR_PEM_FEATURE_UNAVAILABLE
 );

316 –
POLARSSL_AES_C
 || 
POLARSSL_DES_C
 ) */

319 
Àn
 = 0;

320 
ªt
 = 
	`ba£64_decode
–
NULL
, &
Àn
, 
s1
, 
s2
 - s1 );

322 if–
ªt
 =
POLARSSL_ERR_BASE64_INVALID_CHARACTER
 )

323 –
POLARSSL_ERR_PEM_INVALID_DATA
 + 
ªt
 );

325 if––
buf
 = (*Ë
	`pﬁ¨s¶_mÆloc
–
Àn
 ) ) =
NULL
 )

326 –
POLARSSL_ERR_PEM_MALLOC_FAILED
 );

328 if––
ªt
 = 
	`ba£64_decode
–
buf
, &
Àn
, 
s1
, 
s2
 - s1 ) ) != 0 )

330 
	`pﬁ¨s¶_‰ì
–
buf
 );

331 –
POLARSSL_ERR_PEM_INVALID_DATA
 + 
ªt
 );

334 if–
íc
 != 0 )

336 #i‡
	`deföed
(
POLARSSL_MD5_C
Ë&& deföed(
POLARSSL_CIPHER_MODE_CBC
) && \

337 –
	`deföed
(
POLARSSL_DES_C
Ë|| deföed(
POLARSSL_AES_C
) )

338 if–
pwd
 =
NULL
 )

340 
	`pﬁ¨s¶_‰ì
–
buf
 );

341 –
POLARSSL_ERR_PEM_PASSWORD_REQUIRED
 );

344 #i‡
	`deföed
(
POLARSSL_DES_C
)

345 if–
íc_Æg
 =
POLARSSL_CIPHER_DES_EDE3_CBC
 )

346 
	`≥m_des3_de¸y±
–
≥m_iv
, 
buf
, 
Àn
, 
pwd
, 
pwdÀn
 );

347 if–
íc_Æg
 =
POLARSSL_CIPHER_DES_CBC
 )

348 
	`≥m_des_de¸y±
–
≥m_iv
, 
buf
, 
Àn
, 
pwd
, 
pwdÀn
 );

351 #i‡
	`deföed
(
POLARSSL_AES_C
)

352 if–
íc_Æg
 =
POLARSSL_CIPHER_AES_128_CBC
 )

353 
	`≥m_´s_de¸y±
–
≥m_iv
, 16, 
buf
, 
Àn
, 
pwd
, 
pwdÀn
 );

354 if–
íc_Æg
 =
POLARSSL_CIPHER_AES_192_CBC
 )

355 
	`≥m_´s_de¸y±
–
≥m_iv
, 24, 
buf
, 
Àn
, 
pwd
, 
pwdÀn
 );

356 if–
íc_Æg
 =
POLARSSL_CIPHER_AES_256_CBC
 )

357 
	`≥m_´s_de¸y±
–
≥m_iv
, 32, 
buf
, 
Àn
, 
pwd
, 
pwdÀn
 );

366 if–
Àn
 <2 || 
buf
[0] != 0x30 || buf[1] > 0x83 )

368 
	`pﬁ¨s¶_‰ì
–
buf
 );

369 –
POLARSSL_ERR_PEM_PASSWORD_MISMATCH
 );

372 
	`pﬁ¨s¶_‰ì
–
buf
 );

373 –
POLARSSL_ERR_PEM_FEATURE_UNAVAILABLE
 );

375 –
POLARSSL_AES_C
 || 
POLARSSL_DES_C
 ) */

378 
˘x
->
buf
 = buf;

379 
˘x
->
buÊí
 = 
Àn
;

382 
	}
}

384 
	$≥m_‰ì
–
≥m_c⁄ãxt
 *
˘x
 )

386 
	`pﬁ¨s¶_‰ì
–
˘x
->
buf
 );

387 
	`pﬁ¨s¶_‰ì
–
˘x
->
öfo
 );

389 
	`pﬁ¨s¶_zîoize
–
˘x
, –
≥m_c⁄ãxt
 ) );

390 
	}
}

393 #i‡
deföed
(
POLARSSL_PEM_WRITE_C
)

394 
	$≥m_wrôe_buf„r
–c⁄° *
hódî
, c⁄° *
foŸî
,

395 c⁄° *
dî_d©a
, 
size_t
 
dî_Àn
,

396 *
buf
, 
size_t
 
buf_Àn
, size_à*
ﬁí
 )

398 
ªt
;

399 *
ícode_buf
, *
c
, *
p
 = 
buf
;

400 
size_t
 
Àn
 = 0, 
u£_Àn
 = 0, 
add_Àn
 = 0;

402 
	`ba£64_ícode
–
NULL
, &
u£_Àn
, 
dî_d©a
, 
dî_Àn
 );

403 
add_Àn
 = 
	`°æí
–
hódî
 ) + såÀn–
foŸî
 ) + ( 
u£_Àn
 / 64 ) + 1;

405 if–
u£_Àn
 + 
add_Àn
 > 
buf_Àn
 )

407 *
ﬁí
 = 
u£_Àn
 + 
add_Àn
;

408 –
POLARSSL_ERR_BASE64_BUFFER_TOO_SMALL
 );

411 if––
ícode_buf
 = 
	`pﬁ¨s¶_mÆloc
–
u£_Àn
 ) ) =
NULL
 )

412 –
POLARSSL_ERR_PEM_MALLOC_FAILED
 );

414 if––
ªt
 = 
	`ba£64_ícode
–
ícode_buf
, &
u£_Àn
, 
dî_d©a
,

415 
dî_Àn
 ) ) != 0 )

417 
	`pﬁ¨s¶_‰ì
–
ícode_buf
 );

418 –
ªt
 );

421 
	`mem˝y
–
p
, 
hódî
, 
	`°æí
( header ) );

422 
p
 +
	`°æí
–
hódî
 );

423 
c
 = 
ícode_buf
;

425  
u£_Àn
 )

427 
Àn
 = ( 
u£_Àn
 > 64 ) ? 64 : use_len;

428 
	`mem˝y
–
p
, 
c
, 
Àn
 );

429 
u£_Àn
 -
Àn
;

430 
p
 +
Àn
;

431 
c
 +
Àn
;

432 *
p
++ = '\n';

435 
	`mem˝y
–
p
, 
foŸî
, 
	`°æí
( footer ) );

436 
p
 +
	`°æí
–
foŸî
 );

438 *
p
++ = '\0';

439 *
ﬁí
 = 
p
 - 
buf
;

441 
	`pﬁ¨s¶_‰ì
–
ícode_buf
 );

443 
	}
}

	@polarssl/library/pk.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_PK_C
)

34 
	~"pﬁ¨s¶/pk.h
"

35 
	~"pﬁ¨s¶/pk_wøp.h
"

37 #i‡
deföed
(
POLARSSL_RSA_C
)

38 
	~"pﬁ¨s¶/rß.h
"

40 #i‡
deföed
(
POLARSSL_ECP_C
)

41 
	~"pﬁ¨s¶/e˝.h
"

43 #i‡
deföed
(
POLARSSL_ECDSA_C
)

44 
	~"pﬁ¨s¶/ecdß.h
"

48 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

49 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

50 
	}
}

55 
	$pk_öô
–
pk_c⁄ãxt
 *
˘x
 )

57 if–
˘x
 =
NULL
 )

60 
˘x
->
pk_öfo
 = 
NULL
;

61 
˘x
->
pk_˘x
 = 
NULL
;

62 
	}
}

67 
	$pk_‰ì
–
pk_c⁄ãxt
 *
˘x
 )

69 if–
˘x
 =
NULL
 || ctx->
pk_öfo
 == NULL )

72 
˘x
->
pk_öfo
->
	`˘x_‰ì_func
–˘x->
pk_˘x
 );

74 
	`pﬁ¨s¶_zîoize
–
˘x
, –
pk_c⁄ãxt
 ) );

75 
	}
}

80 c⁄° 
pk_öfo_t
 * 
	$pk_öfo_‰om_ty≥
–
pk_ty≥_t
 
pk_ty≥
 )

82  
pk_ty≥
 ) {

83 #i‡
	`deföed
(
POLARSSL_RSA_C
)

84 
POLARSSL_PK_RSA
:

85 –&
rß_öfo
 );

87 #i‡
	`deföed
(
POLARSSL_ECP_C
)

88 
POLARSSL_PK_ECKEY
:

89 –&
eckey_öfo
 );

90 
POLARSSL_PK_ECKEY_DH
:

91 –&
eckeydh_öfo
 );

93 #i‡
	`deföed
(
POLARSSL_ECDSA_C
)

94 
POLARSSL_PK_ECDSA
:

95 –&
ecdß_öfo
 );

99 –
NULL
 );

101 
	}
}

106 
	$pk_öô_˘x
–
pk_c⁄ãxt
 *
˘x
, c⁄° 
pk_öfo_t
 *
öfo
 )

108 if–
˘x
 =
NULL
 || 
öfo
 =NULL || ctx->
pk_öfo
 != NULL )

109 –
POLARSSL_ERR_PK_BAD_INPUT_DATA
 );

111 if––
˘x
->
pk_˘x
 = 
öfo
->
	`˘x_Æloc_func
(ËË=
NULL
 )

112 –
POLARSSL_ERR_PK_MALLOC_FAILED
 );

114 
˘x
->
pk_öfo
 = 
öfo
;

117 
	}
}

122 
	$pk_öô_˘x_rß_Æt
–
pk_c⁄ãxt
 *
˘x
, * 
key
,

123 
pk_rß_Æt_de¸y±_func
 
de¸y±_func
,

124 
pk_rß_Æt_sign_func
 
sign_func
,

125 
pk_rß_Æt_key_Àn_func
 
key_Àn_func
 )

127 
rß_Æt_c⁄ãxt
 *
rß_Æt
;

128 c⁄° 
pk_öfo_t
 *
öfo
 = &
rß_Æt_öfo
;

130 if–
˘x
 =
NULL
 || ctx->
pk_öfo
 != NULL )

131 –
POLARSSL_ERR_PK_BAD_INPUT_DATA
 );

133 if––
˘x
->
pk_˘x
 = 
öfo
->
	`˘x_Æloc_func
(ËË=
NULL
 )

134 –
POLARSSL_ERR_PK_MALLOC_FAILED
 );

136 
˘x
->
pk_öfo
 = 
öfo
;

138 
rß_Æt
 = (
rß_Æt_c⁄ãxt
 *Ë
˘x
->
pk_˘x
;

140 
rß_Æt
->
key
 = key;

141 
rß_Æt
->
de¸y±_func
 = decrypt_func;

142 
rß_Æt
->
sign_func
 = sign_func;

143 
rß_Æt
->
key_Àn_func
 = key_len_func;

146 
	}
}

151 
	$pk_ˇn_do
–
pk_c⁄ãxt
 *
˘x
, 
pk_ty≥_t
 
ty≥
 )

154 if–
˘x
 =
NULL
 || ctx->
pk_öfo
 == NULL )

157 –
˘x
->
pk_öfo
->
	`ˇn_do
–
ty≥
 ) );

158 
	}
}

163 
ölöe
 
	$pk_hashÀn_hñ≥r
–
md_ty≥_t
 
md_Æg
, 
size_t
 *
hash_Àn
 )

165 c⁄° 
md_öfo_t
 *
md_öfo
;

167 if–*
hash_Àn
 != 0 )

170 if––
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
md_Æg
 ) ) =
NULL
 )

173 *
hash_Àn
 = 
md_öfo
->
size
;

175 
	}
}

180 
	$pk_vîify
–
pk_c⁄ãxt
 *
˘x
, 
md_ty≥_t
 
md_Æg
,

181 c⁄° *
hash
, 
size_t
 
hash_Àn
,

182 c⁄° *
sig
, 
size_t
 
sig_Àn
 )

184 if–
˘x
 =
NULL
 || ctx->
pk_öfo
 == NULL ||

185 
	`pk_hashÀn_hñ≥r
–
md_Æg
, &
hash_Àn
 ) != 0 )

186 –
POLARSSL_ERR_PK_BAD_INPUT_DATA
 );

188 if–
˘x
->
pk_öfo
->
vîify_func
 =
NULL
 )

189 –
POLARSSL_ERR_PK_TYPE_MISMATCH
 );

191 –
˘x
->
pk_öfo
->
	`vîify_func
–˘x->
pk_˘x
, 
md_Æg
, 
hash
, 
hash_Àn
,

192 
sig
, 
sig_Àn
 ) );

193 
	}
}

198 
	$pk_vîify_ext
–
pk_ty≥_t
 
ty≥
, c⁄° *
›ti⁄s
,

199 
pk_c⁄ãxt
 *
˘x
, 
md_ty≥_t
 
md_Æg
,

200 c⁄° *
hash
, 
size_t
 
hash_Àn
,

201 c⁄° *
sig
, 
size_t
 
sig_Àn
 )

203 if–
˘x
 =
NULL
 || ctx->
pk_öfo
 == NULL )

204 –
POLARSSL_ERR_PK_BAD_INPUT_DATA
 );

206 if–! 
	`pk_ˇn_do
–
˘x
, 
ty≥
 ) )

207 –
POLARSSL_ERR_PK_TYPE_MISMATCH
 );

209 if–
ty≥
 =
POLARSSL_PK_RSASSA_PSS
 )

211 #i‡
	`deföed
(
POLARSSL_RSA_C
Ë&& deföed(
POLARSSL_PKCS1_V21
)

212 
ªt
;

213 c⁄° 
pk_rßsß_pss_›ti⁄s
 *
pss_›ts
;

215 if–
›ti⁄s
 =
NULL
 )

216 –
POLARSSL_ERR_PK_BAD_INPUT_DATA
 );

218 
pss_›ts
 = (c⁄° 
pk_rßsß_pss_›ti⁄s
 *Ë
›ti⁄s
;

220 if–
sig_Àn
 < 
	`pk_gë_Àn
–
˘x
 ) )

221 –
POLARSSL_ERR_RSA_VERIFY_FAILED
 );

223 
ªt
 = 
	`rß_rßsß_pss_vîify_ext
–
	`pk_rß
–*
˘x
 ),

224 
NULL
, NULL, 
RSA_PUBLIC
,

225 
md_Æg
, 
hash_Àn
, 
hash
,

226 
pss_›ts
->
mgf1_hash_id
,

227 
pss_›ts
->
ex≥˘ed_ß…_Àn
,

228 
sig
 );

229 if–
ªt
 != 0 )

230 –
ªt
 );

232 if–
sig_Àn
 > 
	`pk_gë_Àn
–
˘x
 ) )

233 –
POLARSSL_ERR_PK_SIG_LEN_MISMATCH
 );

237 –
POLARSSL_ERR_PK_FEATURE_UNAVAILABLE
 );

242 if–
›ti⁄s
 !
NULL
 )

243 –
POLARSSL_ERR_PK_BAD_INPUT_DATA
 );

245 –
	`pk_vîify
–
˘x
, 
md_Æg
, 
hash
, 
hash_Àn
, 
sig
, 
sig_Àn
 ) );

246 
	}
}

251 
pk_sign
–
pk_c⁄ãxt
 *
˘x
, 
md_ty≥_t
 
md_Æg
,

252 c⁄° *
hash
, 
size_t
 
hash_Àn
,

253 *
sig
, 
size_t
 *
sig_Àn
,

254 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 )

256 if–
˘x
 =
NULL
 || ctx->
pk_öfo
 == NULL ||

257 
	`pk_hashÀn_hñ≥r
–
md_Æg
, &
hash_Àn
 ) != 0 )

258 –
POLARSSL_ERR_PK_BAD_INPUT_DATA
 );

260 if–
˘x
->
pk_öfo
->
sign_func
 =
NULL
 )

261 –
POLARSSL_ERR_PK_TYPE_MISMATCH
 );

263 –
˘x
->
pk_öfo
->
	`sign_func
–˘x->
pk_˘x
, 
md_Æg
, 
hash
, 
hash_Àn
,

264 
sig
, 
sig_Àn
, 
f_∫g
, 
p_∫g
 ) );

265 
	}
}

270 
pk_de¸y±
–
pk_c⁄ãxt
 *
˘x
,

271 c⁄° *
öput
, 
size_t
 
ûí
,

272 *
ouçut
, 
size_t
 *
ﬁí
, size_à
osize
,

273 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 )

275 if–
˘x
 =
NULL
 || ctx->
pk_öfo
 == NULL )

276 –
POLARSSL_ERR_PK_BAD_INPUT_DATA
 );

278 if–
˘x
->
pk_öfo
->
de¸y±_func
 =
NULL
 )

279 –
POLARSSL_ERR_PK_TYPE_MISMATCH
 );

281 –
˘x
->
pk_öfo
->
	`de¸y±_func
–˘x->
pk_˘x
, 
öput
, 
ûí
,

282 
ouçut
, 
ﬁí
, 
osize
, 
f_∫g
, 
p_∫g
 ) );

283 
	}
}

288 
pk_í¸y±
–
pk_c⁄ãxt
 *
˘x
,

289 c⁄° *
öput
, 
size_t
 
ûí
,

290 *
ouçut
, 
size_t
 *
ﬁí
, size_à
osize
,

291 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 )

293 if–
˘x
 =
NULL
 || ctx->
pk_öfo
 == NULL )

294 –
POLARSSL_ERR_PK_BAD_INPUT_DATA
 );

296 if–
˘x
->
pk_öfo
->
í¸y±_func
 =
NULL
 )

297 –
POLARSSL_ERR_PK_TYPE_MISMATCH
 );

299 –
˘x
->
pk_öfo
->
	`í¸y±_func
–˘x->
pk_˘x
, 
öput
, 
ûí
,

300 
ouçut
, 
ﬁí
, 
osize
, 
f_∫g
, 
p_∫g
 ) );

301 
	}
}

306 
size_t
 
	$pk_gë_size
–c⁄° 
pk_c⁄ãxt
 *
˘x
 )

308 if–
˘x
 =
NULL
 || ctx->
pk_öfo
 == NULL )

311 –
˘x
->
pk_öfo
->
	`gë_size
–˘x->
pk_˘x
 ) );

312 
	}
}

317 
	$pk_debug
–c⁄° 
pk_c⁄ãxt
 *
˘x
, 
pk_debug_ôem
 *
ôems
 )

319 if–
˘x
 =
NULL
 || ctx->
pk_öfo
 == NULL )

320 –
POLARSSL_ERR_PK_BAD_INPUT_DATA
 );

322 if–
˘x
->
pk_öfo
->
debug_func
 =
NULL
 )

323 –
POLARSSL_ERR_PK_TYPE_MISMATCH
 );

325 
˘x
->
pk_öfo
->
	`debug_func
–˘x->
pk_˘x
, 
ôems
 );

327 
	}
}

332 c⁄° * 
	$pk_gë_«me
–c⁄° 
pk_c⁄ãxt
 *
˘x
 )

334 if–
˘x
 =
NULL
 || ctx->
pk_öfo
 == NULL )

337 –
˘x
->
pk_öfo
->
«me
 );

338 
	}
}

343 
pk_ty≥_t
 
	$pk_gë_ty≥
–c⁄° 
pk_c⁄ãxt
 *
˘x
 )

345 if–
˘x
 =
NULL
 || ctx->
pk_öfo
 == NULL )

346 –
POLARSSL_PK_NONE
 );

348 –
˘x
->
pk_öfo
->
ty≥
 );

349 
	}
}

	@polarssl/library/pk_wrap.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_PK_C
)

34 
	~"pﬁ¨s¶/pk_wøp.h
"

37 
	~"pﬁ¨s¶/rß.h
"

39 #i‡
deföed
(
POLARSSL_ECP_C
)

40 
	~"pﬁ¨s¶/e˝.h
"

43 #i‡
deföed
(
POLARSSL_ECDSA_C
)

44 
	~"pﬁ¨s¶/ecdß.h
"

47 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

48 
	~"pﬁ¨s¶/∂©f‹m.h
"

50 
	~<°dlib.h
>

51 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

52 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

56 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

57 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

58 
	}
}

60 #i‡
deföed
(
POLARSSL_RSA_C
)

61 
	$rß_ˇn_do
–
pk_ty≥_t
 
ty≥
 )

63 –
ty≥
 =
POLARSSL_PK_RSA
 ||

64 
ty≥
 =
POLARSSL_PK_RSASSA_PSS
 );

65 
	}
}

67 
size_t
 
	$rß_gë_size
–c⁄° *
˘x
 )

69 –8 * ((c⁄° 
rß_c⁄ãxt
 *Ë
˘x
)->
Àn
 );

70 
	}
}

72 
	$rß_vîify_wøp
–*
˘x
, 
md_ty≥_t
 
md_Æg
,

73 c⁄° *
hash
, 
size_t
 
hash_Àn
,

74 c⁄° *
sig
, 
size_t
 
sig_Àn
 )

76 
ªt
;

78 if–
sig_Àn
 < ((
rß_c⁄ãxt
 *Ë
˘x
)->
Àn
 )

79 –
POLARSSL_ERR_RSA_VERIFY_FAILED
 );

81 if––
ªt
 = 
	`rß_pkcs1_vîify
–(
rß_c⁄ãxt
 *Ë
˘x
, 
NULL
, NULL,

82 
RSA_PUBLIC
, 
md_Æg
,

83 (Ë
hash_Àn
, 
hash
, 
sig
 ) ) != 0 )

84 –
ªt
 );

86 if–
sig_Àn
 > ((
rß_c⁄ãxt
 *Ë
˘x
)->
Àn
 )

87 –
POLARSSL_ERR_PK_SIG_LEN_MISMATCH
 );

90 
	}
}

92 
rß_sign_wøp
–*
˘x
, 
md_ty≥_t
 
md_Æg
,

93 c⁄° *
hash
, 
size_t
 
hash_Àn
,

94 *
sig
, 
size_t
 *
sig_Àn
,

95 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 )

97 *
sig_Àn
 = ((
rß_c⁄ãxt
 *Ë
˘x
)->
Àn
;

99 –
	`rß_pkcs1_sign
–(
rß_c⁄ãxt
 *Ë
˘x
, 
f_∫g
, 
p_∫g
, 
RSA_PRIVATE
,

100 
md_Æg
, (Ë
hash_Àn
, 
hash
, 
sig
 ) );

101 
	}
}

103 
rß_de¸y±_wøp
–*
˘x
,

104 c⁄° *
öput
, 
size_t
 
ûí
,

105 *
ouçut
, 
size_t
 *
ﬁí
, size_à
osize
,

106 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 )

108 if–
ûí
 !((
rß_c⁄ãxt
 *Ë
˘x
)->
Àn
 )

109 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

111 –
	`rß_pkcs1_de¸y±
–(
rß_c⁄ãxt
 *Ë
˘x
, 
f_∫g
, 
p_∫g
,

112 
RSA_PRIVATE
, 
ﬁí
, 
öput
, 
ouçut
, 
osize
 ) );

113 
	}
}

115 
rß_í¸y±_wøp
–*
˘x
,

116 c⁄° *
öput
, 
size_t
 
ûí
,

117 *
ouçut
, 
size_t
 *
ﬁí
, size_à
osize
,

118 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 )

120 ((Ë
osize
);

122 *
ﬁí
 = ((
rß_c⁄ãxt
 *Ë
˘x
)->
Àn
;

124 –
	`rß_pkcs1_í¸y±
–(
rß_c⁄ãxt
 *Ë
˘x
,

125 
f_∫g
, 
p_∫g
, 
RSA_PUBLIC
, 
ûí
, 
öput
, 
ouçut
 ) );

126 
	}
}

128 *
	$rß_Æloc_wøp
( )

130 *
˘x
 = 
	`pﬁ¨s¶_mÆloc
––
rß_c⁄ãxt
 ) );

132 if–
˘x
 !
NULL
 )

133 
	`rß_öô
–(
rß_c⁄ãxt
 *Ë
˘x
, 0, 0 );

135 –
˘x
 );

136 
	}
}

138 
	$rß_‰ì_wøp
–*
˘x
 )

140 
	`rß_‰ì
–(
rß_c⁄ãxt
 *Ë
˘x
 );

141 
	`pﬁ¨s¶_‰ì
–
˘x
 );

142 
	}
}

144 
	$rß_debug
–c⁄° *
˘x
, 
pk_debug_ôem
 *
ôems
 )

146 
ôems
->
ty≥
 = 
POLARSSL_PK_DEBUG_MPI
;

147 
ôems
->
«me
 = "rsa.N";

148 
ôems
->
vÆue
 = &–((
rß_c⁄ãxt
 *Ë
˘x
)->
N
 );

150 
ôems
++;

152 
ôems
->
ty≥
 = 
POLARSSL_PK_DEBUG_MPI
;

153 
ôems
->
«me
 = "rsa.E";

154 
ôems
->
vÆue
 = &–((
rß_c⁄ãxt
 *Ë
˘x
)->
E
 );

155 
	}
}

157 c⁄° 
pk_öfo_t
 
	grß_öfo
 = {

158 
POLARSSL_PK_RSA
,

160 
rß_gë_size
,

161 
rß_ˇn_do
,

162 
rß_vîify_wøp
,

163 
rß_sign_wøp
,

164 
rß_de¸y±_wøp
,

165 
rß_í¸y±_wøp
,

166 
rß_Æloc_wøp
,

167 
rß_‰ì_wøp
,

168 
rß_debug
,

172 #i‡
deföed
(
POLARSSL_ECP_C
)

176 
	$eckey_ˇn_do
–
pk_ty≥_t
 
ty≥
 )

178 –
ty≥
 =
POLARSSL_PK_ECKEY
 ||

179 
ty≥
 =
POLARSSL_PK_ECKEY_DH
 ||

180 
ty≥
 =
POLARSSL_PK_ECDSA
 );

181 
	}
}

183 
size_t
 
	$eckey_gë_size
–c⁄° *
˘x
 )

185 –((
e˝_key∑ú
 *Ë
˘x
)->
gΩ
.
pbôs
 );

186 
	}
}

188 #i‡
deföed
(
POLARSSL_ECDSA_C
)

190 
ecdß_vîify_wøp
–*
˘x
, 
md_ty≥_t
 
md_Æg
,

191 c⁄° *
hash
, 
size_t
 
hash_Àn
,

192 c⁄° *
sig
, 
size_t
 
sig_Àn
 );

194 
ecdß_sign_wøp
–*
˘x
, 
md_ty≥_t
 
md_Æg
,

195 c⁄° *
hash
, 
size_t
 
hash_Àn
,

196 *
sig
, 
size_t
 *
sig_Àn
,

197 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 );

199 
	$eckey_vîify_wøp
–*
˘x
, 
md_ty≥_t
 
md_Æg
,

200 c⁄° *
hash
, 
size_t
 
hash_Àn
,

201 c⁄° *
sig
, 
size_t
 
sig_Àn
 )

203 
ªt
;

204 
ecdß_c⁄ãxt
 
ecdß
;

206 
	`ecdß_öô
–&
ecdß
 );

208 if––
ªt
 = 
	`ecdß_‰om_key∑ú
–&
ecdß
, 
˘x
 ) ) == 0 )

209 
ªt
 = 
	`ecdß_vîify_wøp
–&
ecdß
, 
md_Æg
, 
hash
, 
hash_Àn
, 
sig
, 
sig_Àn
 );

211 
	`ecdß_‰ì
–&
ecdß
 );

213 –
ªt
 );

214 
	}
}

216 
eckey_sign_wøp
–*
˘x
, 
md_ty≥_t
 
md_Æg
,

217 c⁄° *
hash
, 
size_t
 
hash_Àn
,

218 *
sig
, 
size_t
 *
sig_Àn
,

219 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 )

221 
ªt
;

222 
ecdß_c⁄ãxt
 
ecdß
;

224 
	`ecdß_öô
–&
ecdß
 );

226 if––
ªt
 = 
	`ecdß_‰om_key∑ú
–&
ecdß
, 
˘x
 ) ) == 0 )

227 
ªt
 = 
	`ecdß_sign_wøp
–&
ecdß
, 
md_Æg
, 
hash
, 
hash_Àn
, 
sig
, 
sig_Àn
,

228 
f_∫g
, 
p_∫g
 );

230 
	`ecdß_‰ì
–&
ecdß
 );

232 –
ªt
 );

233 
	}
}

237 *
	$eckey_Æloc_wøp
( )

239 *
˘x
 = 
	`pﬁ¨s¶_mÆloc
––
e˝_key∑ú
 ) );

241 if–
˘x
 !
NULL
 )

242 
	`e˝_key∑ú_öô
–
˘x
 );

244 –
˘x
 );

245 
	}
}

247 
	$eckey_‰ì_wøp
–*
˘x
 )

249 
	`e˝_key∑ú_‰ì
–(
e˝_key∑ú
 *Ë
˘x
 );

250 
	`pﬁ¨s¶_‰ì
–
˘x
 );

251 
	}
}

253 
	$eckey_debug
–c⁄° *
˘x
, 
pk_debug_ôem
 *
ôems
 )

255 
ôems
->
ty≥
 = 
POLARSSL_PK_DEBUG_ECP
;

256 
ôems
->
«me
 = "eckey.Q";

257 
ôems
->
vÆue
 = &–((
e˝_key∑ú
 *Ë
˘x
)->
Q
 );

258 
	}
}

260 c⁄° 
pk_öfo_t
 
	geckey_öfo
 = {

261 
POLARSSL_PK_ECKEY
,

263 
eckey_gë_size
,

264 
eckey_ˇn_do
,

265 #i‡
deföed
(
POLARSSL_ECDSA_C
)

266 
eckey_vîify_wøp
,

267 
eckey_sign_wøp
,

269 
NULL
,

270 
NULL
,

272 
NULL
,

273 
NULL
,

274 
eckey_Æloc_wøp
,

275 
eckey_‰ì_wøp
,

276 
eckey_debug
,

282 
	$eckeydh_ˇn_do
–
pk_ty≥_t
 
ty≥
 )

284 –
ty≥
 =
POLARSSL_PK_ECKEY
 ||

285 
ty≥
 =
POLARSSL_PK_ECKEY_DH
 );

286 
	}
}

288 c⁄° 
pk_öfo_t
 
	geckeydh_öfo
 = {

289 
POLARSSL_PK_ECKEY_DH
,

291 
eckey_gë_size
,

292 
eckeydh_ˇn_do
,

293 
NULL
,

294 
NULL
,

295 
NULL
,

296 
NULL
,

297 
eckey_Æloc_wøp
,

298 
eckey_‰ì_wøp
,

299 
eckey_debug
,

303 #i‡
deföed
(
POLARSSL_ECDSA_C
)

304 
	$ecdß_ˇn_do
–
pk_ty≥_t
 
ty≥
 )

306 –
ty≥
 =
POLARSSL_PK_ECDSA
 );

307 
	}
}

309 
	$ecdß_vîify_wøp
–*
˘x
, 
md_ty≥_t
 
md_Æg
,

310 c⁄° *
hash
, 
size_t
 
hash_Àn
,

311 c⁄° *
sig
, 
size_t
 
sig_Àn
 )

313 
ªt
;

314 ((Ë
md_Æg
);

316 
ªt
 = 
	`ecdß_ªad_sig«tuª
–(
ecdß_c⁄ãxt
 *Ë
˘x
,

317 
hash
, 
hash_Àn
, 
sig
, 
sig_Àn
 );

319 if–
ªt
 =
POLARSSL_ERR_ECP_SIG_LEN_MISMATCH
 )

320 –
POLARSSL_ERR_PK_SIG_LEN_MISMATCH
 );

322 –
ªt
 );

323 
	}
}

325 
ecdß_sign_wøp
–*
˘x
, 
md_ty≥_t
 
md_Æg
,

326 c⁄° *
hash
, 
size_t
 
hash_Àn
,

327 *
sig
, 
size_t
 *
sig_Àn
,

328 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 )

331 #i‡
	`deföed
(
POLARSSL_ECDSA_DETERMINISTIC
)

332 ((Ë
f_∫g
);

333 ((Ë
p_∫g
);

335 –
	`ecdß_wrôe_sig«tuª_dë
–(
ecdß_c⁄ãxt
 *Ë
˘x
,

336 
hash
, 
hash_Àn
, 
sig
, 
sig_Àn
, 
md_Æg
 ) );

338 ((Ë
md_Æg
);

340 –
	`ecdß_wrôe_sig«tuª
–(
ecdß_c⁄ãxt
 *Ë
˘x
,

341 
hash
, 
hash_Àn
, 
sig
, 
sig_Àn
, 
f_∫g
, 
p_∫g
 ) );

343 
	}
}

345 *
	$ecdß_Æloc_wøp
( )

347 *
˘x
 = 
	`pﬁ¨s¶_mÆloc
––
ecdß_c⁄ãxt
 ) );

349 if–
˘x
 !
NULL
 )

350 
	`ecdß_öô
–(
ecdß_c⁄ãxt
 *Ë
˘x
 );

352 –
˘x
 );

353 
	}
}

355 
	$ecdß_‰ì_wøp
–*
˘x
 )

357 
	`ecdß_‰ì
–(
ecdß_c⁄ãxt
 *Ë
˘x
 );

358 
	`pﬁ¨s¶_‰ì
–
˘x
 );

359 
	}
}

361 c⁄° 
pk_öfo_t
 
	gecdß_öfo
 = {

362 
POLARSSL_PK_ECDSA
,

364 
eckey_gë_size
,

365 
ecdß_ˇn_do
,

366 
ecdß_vîify_wøp
,

367 
ecdß_sign_wøp
,

368 
NULL
,

369 
NULL
,

370 
ecdß_Æloc_wøp
,

371 
ecdß_‰ì_wøp
,

372 
eckey_debug
,

380 
	$rß_Æt_ˇn_do
–
pk_ty≥_t
 
ty≥
 )

382 –
ty≥
 =
POLARSSL_PK_RSA
 );

383 
	}
}

385 
size_t
 
	$rß_Æt_gë_size
–c⁄° *
˘x
 )

387 c⁄° 
rß_Æt_c⁄ãxt
 *
rß_Æt
 = (c⁄°Ñß_Æt_c⁄ãxà*Ë
˘x
;

389 –8 * 
rß_Æt
->
	`key_Àn_func
–rß_Æt->
key
 ) );

390 
	}
}

392 
rß_Æt_sign_wøp
–*
˘x
, 
md_ty≥_t
 
md_Æg
,

393 c⁄° *
hash
, 
size_t
 
hash_Àn
,

394 *
sig
, 
size_t
 *
sig_Àn
,

395 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 )

397 
rß_Æt_c⁄ãxt
 *
rß_Æt
 = (rß_Æt_c⁄ãxà*Ë
˘x
;

399 *
sig_Àn
 = 
rß_Æt
->
	`key_Àn_func
–rß_Æt->
key
 );

401 –
rß_Æt
->
	`sign_func
–rß_Æt->
key
, 
f_∫g
, 
p_∫g
, 
RSA_PRIVATE
,

402 
md_Æg
, (Ë
hash_Àn
, 
hash
, 
sig
 ) );

403 
	}
}

405 
rß_Æt_de¸y±_wøp
–*
˘x
,

406 c⁄° *
öput
, 
size_t
 
ûí
,

407 *
ouçut
, 
size_t
 *
ﬁí
, size_à
osize
,

408 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 )

410 
rß_Æt_c⁄ãxt
 *
rß_Æt
 = (rß_Æt_c⁄ãxà*Ë
˘x
;

412 ((Ë
f_∫g
);

413 ((Ë
p_∫g
);

415 if–
ûí
 !
rß_Æt
->
	`key_Àn_func
–rß_Æt->
key
 ) )

416 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

418 –
rß_Æt
->
	`de¸y±_func
–rß_Æt->
key
,

419 
RSA_PRIVATE
, 
ﬁí
, 
öput
, 
ouçut
, 
osize
 ) );

420 
	}
}

422 *
	$rß_Æt_Æloc_wøp
( )

424 *
˘x
 = 
	`pﬁ¨s¶_mÆloc
––
rß_Æt_c⁄ãxt
 ) );

426 if–
˘x
 !
NULL
 )

427 
	`mem£t
–
˘x
, 0, –
rß_Æt_c⁄ãxt
 ) );

429 –
˘x
 );

430 
	}
}

432 
	$rß_Æt_‰ì_wøp
–*
˘x
 )

434 
	`pﬁ¨s¶_zîoize
–
˘x
, –
rß_Æt_c⁄ãxt
 ) );

435 
	`pﬁ¨s¶_‰ì
–
˘x
 );

436 
	}
}

438 c⁄° 
pk_öfo_t
 
	grß_Æt_öfo
 = {

439 
POLARSSL_PK_RSA_ALT
,

441 
rß_Æt_gë_size
,

442 
rß_Æt_ˇn_do
,

443 
NULL
,

444 
rß_Æt_sign_wøp
,

445 
rß_Æt_de¸y±_wøp
,

446 
NULL
,

447 
rß_Æt_Æloc_wøp
,

448 
rß_Æt_‰ì_wøp
,

449 
NULL
,

	@polarssl/library/pkcs11.c

30 
	~"pﬁ¨s¶/pkcs11.h
"

32 #i‡
deföed
(
POLARSSL_PKCS11_C
)

33 
	~"pﬁ¨s¶/md.h
"

34 
	~"pﬁ¨s¶/oid.h
"

35 
	~"pﬁ¨s¶/x509_¸t.h
"

37 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

38 
	~"pﬁ¨s¶/∂©f‹m.h
"

40 
	~<°dlib.h
>

41 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

42 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

45 
	$pkcs11_x509_˚π_öô
–
x509_¸t
 *
˚π
, 
pkcs11h_˚πifiˇã_t
 
pkcs11_˚π
 )

47 
ªt
 = 1;

48 *
˚π_blob
 = 
NULL
;

49 
size_t
 
˚π_blob_size
 = 0;

51 if–
˚π
 =
NULL
 )

53 
ªt
 = 2;

54 
˛ónup
;

57 if–
	`pkcs11h_˚πifiˇã_gëCîtifiˇãBlob
–
pkcs11_˚π
, 
NULL
,

58 &
˚π_blob_size
 ) !
CKR_OK
 )

60 
ªt
 = 3;

61 
˛ónup
;

64 
˚π_blob
 = 
	`pﬁ¨s¶_mÆloc
–
˚π_blob_size
 );

65 if–
NULL
 =
˚π_blob
 )

67 
ªt
 = 4;

68 
˛ónup
;

71 if–
	`pkcs11h_˚πifiˇã_gëCîtifiˇãBlob
–
pkcs11_˚π
, 
˚π_blob
,

72 &
˚π_blob_size
 ) !
CKR_OK
 )

74 
ªt
 = 5;

75 
˛ónup
;

78 if–0 !
	`x509_¸t_∑r£
–
˚π
, 
˚π_blob
, 
˚π_blob_size
 ) )

80 
ªt
 = 6;

81 
˛ónup
;

84 
ªt
 = 0;

86 
˛ónup
:

87 if–
NULL
 !
˚π_blob
 )

88 
	`pﬁ¨s¶_‰ì
–
˚π_blob
 );

90 –
ªt
 );

91 
	}
}

94 
	$pkcs11_¥iv_key_öô
–
pkcs11_c⁄ãxt
 *
¥iv_key
,

95 
pkcs11h_˚πifiˇã_t
 
pkcs11_˚π
 )

97 
ªt
 = 1;

98 
x509_¸t
 
˚π
;

100 
	`x509_¸t_öô
–&
˚π
 );

102 if–
¥iv_key
 =
NULL
 )

103 
˛ónup
;

105 if–0 !
	`pkcs11_x509_˚π_öô
–&
˚π
, 
pkcs11_˚π
 ) )

106 
˛ónup
;

108 
¥iv_key
->
Àn
 = 
	`pk_gë_Àn
–&
˚π
.
pk
 );

109 
¥iv_key
->
pkcs11h_˚π
 = 
pkcs11_˚π
;

111 
ªt
 = 0;

113 
˛ónup
:

114 
	`x509_¸t_‰ì
–&
˚π
 );

116 –
ªt
 );

117 
	}
}

119 
	$pkcs11_¥iv_key_‰ì
–
pkcs11_c⁄ãxt
 *
¥iv_key
 )

121 if–
NULL
 !
¥iv_key
 )

122 
	`pkcs11h_˚πifiˇã_‰ìCîtifiˇã
–
¥iv_key
->
pkcs11h_˚π
 );

123 
	}
}

125 
	$pkcs11_de¸y±
–
pkcs11_c⁄ãxt
 *
˘x
,

126 
mode
, 
size_t
 *
ﬁí
,

127 c⁄° *
öput
,

128 *
ouçut
,

129 
size_t
 
ouçut_max_Àn
 )

131 
size_t
 
öput_Àn
, 
ouçut_Àn
;

133 if–
NULL
 =
˘x
 )

134 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

136 if–
RSA_PRIVATE
 !
mode
 )

137 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

139 
ouçut_Àn
 = 
öput_Àn
 = 
˘x
->
Àn
;

141 if–
öput_Àn
 < 16 || i≈ut_À¿> 
ouçut_max_Àn
 )

142 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

145 if–
	`pkcs11h_˚πifiˇã_de¸y±Any
–
˘x
->
pkcs11h_˚π
, 
CKM_RSA_PKCS
, 
öput
,

146 
öput_Àn
, 
NULL
, &
ouçut_Àn
 ) !
CKR_OK
 )

148 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

151 if–
ouçut_Àn
 > 
ouçut_max_Àn
 )

152 –
POLARSSL_ERR_RSA_OUTPUT_TOO_LARGE
 );

154 if–
	`pkcs11h_˚πifiˇã_de¸y±Any
–
˘x
->
pkcs11h_˚π
, 
CKM_RSA_PKCS
, 
öput
,

155 
öput_Àn
, 
ouçut
, &
ouçut_Àn
 ) !
CKR_OK
 )

157 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

159 *
ﬁí
 = 
ouçut_Àn
;

161 
	}
}

163 
	$pkcs11_sign
–
pkcs11_c⁄ãxt
 *
˘x
,

164 
mode
,

165 
md_ty≥_t
 
md_Æg
,

166 
hashÀn
,

167 c⁄° *
hash
,

168 *
sig
 )

170 
size_t
 
sig_Àn
 = 0, 
a¢_Àn
 = 0, 
oid_size
 = 0;

171 *
p
 = 
sig
;

172 c⁄° *
oid
;

174 if–
NULL
 =
˘x
 )

175 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

177 if–
RSA_PRIVATE
 !
mode
 )

178 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

180 if–
md_Æg
 !
POLARSSL_MD_NONE
 )

182 c⁄° 
md_öfo_t
 *
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
md_Æg
 );

183 if–
md_öfo
 =
NULL
 )

184 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

186 if–
	`oid_gë_oid_by_md
–
md_Æg
, &
oid
, &
oid_size
 ) != 0 )

187 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

189 
hashÀn
 = 
	`md_gë_size
–
md_öfo
 );

190 
a¢_Àn
 = 10 + 
oid_size
;

193 
sig_Àn
 = 
˘x
->
Àn
;

194 if–
hashÀn
 > 
sig_Àn
 || 
a¢_Àn
 > sig_len ||

195 
hashÀn
 + 
a¢_Àn
 > 
sig_Àn
 )

197 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

200 if–
md_Æg
 !
POLARSSL_MD_NONE
 )

211 *
p
++ = 
ASN1_SEQUENCE
 | 
ASN1_CONSTRUCTED
;

212 *
p
++ = (Ë–0x08 + 
oid_size
 + 
hashÀn
 );

213 *
p
++ = 
ASN1_SEQUENCE
 | 
ASN1_CONSTRUCTED
;

214 *
p
++ = (Ë–0x04 + 
oid_size
 );

215 *
p
++ = 
ASN1_OID
;

216 *
p
++ = 
oid_size
 & 0xFF;

217 
	`mem˝y
–
p
, 
oid
, 
oid_size
 );

218 
p
 +
oid_size
;

219 *
p
++ = 
ASN1_NULL
;

220 *
p
++ = 0x00;

221 *
p
++ = 
ASN1_OCTET_STRING
;

222 *
p
++ = 
hashÀn
;

225 
	`mem˝y
–
p
, 
hash
, 
hashÀn
 );

227 if–
	`pkcs11h_˚πifiˇã_signAny
–
˘x
->
pkcs11h_˚π
, 
CKM_RSA_PKCS
, 
sig
,

228 
a¢_Àn
 + 
hashÀn
, 
sig
, &
sig_Àn
 ) !
CKR_OK
 )

230 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

234 
	}
}

	@polarssl/library/pkcs12.c

32 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

33 
	~"pﬁ¨s¶/c⁄fig.h
"

35 #ö˛udê
POLARSSL_CONFIG_FILE


38 #i‡
deföed
(
POLARSSL_PKCS12_C
)

40 
	~"pﬁ¨s¶/pkcs12.h
"

41 
	~"pﬁ¨s¶/a¢1.h
"

42 
	~"pﬁ¨s¶/cùhî.h
"

44 #i‡
deföed
(
POLARSSL_ARC4_C
)

45 
	~"pﬁ¨s¶/¨c4.h
"

48 #i‡
deföed
(
POLARSSL_DES_C
)

49 
	~"pﬁ¨s¶/des.h
"

53 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

54 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

55 
	}
}

57 
	$pkcs12_∑r£_pbe_∑øms
–
a¢1_buf
 *
∑øms
,

58 
a¢1_buf
 *
ß…
, *
ôî©i⁄s
 )

60 
ªt
;

61 **
p
 = &
∑øms
->p;

62 c⁄° *
íd
 = 
∑øms
->
p
 +Ö¨ams->
Àn
;

71 if–
∑øms
->
èg
 !–
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) )

72 –
POLARSSL_ERR_PKCS12_PBE_INVALID_FORMAT
 +

73 
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 );

75 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
ß…
->
Àn
, 
ASN1_OCTET_STRING
 ) ) != 0 )

76 –
POLARSSL_ERR_PKCS12_PBE_INVALID_FORMAT
 + 
ªt
 );

78 
ß…
->
p
 = *p;

79 *
p
 +
ß…
->
Àn
;

81 if––
ªt
 = 
	`a¢1_gë_öt
–
p
, 
íd
, 
ôî©i⁄s
 ) ) != 0 )

82 –
POLARSSL_ERR_PKCS12_PBE_INVALID_FORMAT
 + 
ªt
 );

84 if–*
p
 !
íd
 )

85 –
POLARSSL_ERR_PKCS12_PBE_INVALID_FORMAT
 +

86 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

89 
	}
}

91 
	$pkcs12_pbe_dîive_key_iv
–
a¢1_buf
 *
pbe_∑øms
, 
md_ty≥_t
 
md_ty≥
,

92 c⁄° *
pwd
, 
size_t
 
pwdÀn
,

93 *
key
, 
size_t
 
keyÀn
,

94 *
iv
, 
size_t
 
ivÀn
 )

96 
ªt
, 
ôî©i⁄s
;

97 
a¢1_buf
 
ß…
;

98 
size_t
 
i
;

99 
unùwd
[258];

101 
	`mem£t
–&
ß…
, 0, (
a¢1_buf
) );

102 
	`mem£t
–&
unùwd
, 0, (unipwd) );

104 if––
ªt
 = 
	`pkcs12_∑r£_pbe_∑øms
–
pbe_∑øms
, &
ß…
,

105 &
ôî©i⁄s
 ) ) != 0 )

106 –
ªt
 );

108  
i
 = 0; i < 
pwdÀn
; i++ )

109 
unùwd
[
i
 * 2 + 1] = 
pwd
[i];

111 if––
ªt
 = 
	`pkcs12_dîiv©i⁄
–
key
, 
keyÀn
, 
unùwd
, 
pwdÀn
 * 2 + 2,

112 
ß…
.
p
, sÆt.
Àn
, 
md_ty≥
,

113 
PKCS12_DERIVE_KEY
, 
ôî©i⁄s
 ) ) != 0 )

115 –
ªt
 );

118 if–
iv
 =
NULL
 || 
ivÀn
 == 0 )

121 if––
ªt
 = 
	`pkcs12_dîiv©i⁄
–
iv
, 
ivÀn
, 
unùwd
, 
pwdÀn
 * 2 + 2,

122 
ß…
.
p
, sÆt.
Àn
, 
md_ty≥
,

123 
PKCS12_DERIVE_IV
, 
ôî©i⁄s
 ) ) != 0 )

125 –
ªt
 );

128 
	}
}

130 
	$pkcs12_pbe_sha1_rc4_128
–
a¢1_buf
 *
pbe_∑øms
, 
mode
,

131 c⁄° *
pwd
, 
size_t
 
pwdÀn
,

132 c⁄° *
d©a
, 
size_t
 
Àn
,

133 *
ouçut
 )

135 #i‡!
	`deföed
(
POLARSSL_ARC4_C
)

136 ((Ë
pbe_∑øms
);

137 ((Ë
mode
);

138 ((Ë
pwd
);

139 ((Ë
pwdÀn
);

140 ((Ë
d©a
);

141 ((Ë
Àn
);

142 ((Ë
ouçut
);

143 –
POLARSSL_ERR_PKCS12_FEATURE_UNAVAILABLE
 );

145 
ªt
;

146 
key
[16];

147 
¨c4_c⁄ãxt
 
˘x
;

148 ((Ë
mode
);

150 
	`¨c4_öô
–&
˘x
 );

152 if––
ªt
 = 
	`pkcs12_pbe_dîive_key_iv
–
pbe_∑øms
, 
POLARSSL_MD_SHA1
,

153 
pwd
, 
pwdÀn
,

154 
key
, 16, 
NULL
, 0 ) ) != 0 )

156 –
ªt
 );

159 
	`¨c4_£tup
–&
˘x
, 
key
, 16 );

160 if––
ªt
 = 
	`¨c4_¸y±
–&
˘x
, 
Àn
, 
d©a
, 
ouçut
 ) ) != 0 )

161 
exô
;

163 
exô
:

164 
	`pﬁ¨s¶_zîoize
–
key
, ( key ) );

165 
	`¨c4_‰ì
–&
˘x
 );

167 –
ªt
 );

169 
	}
}

171 
	$pkcs12_pbe
–
a¢1_buf
 *
pbe_∑øms
, 
mode
,

172 
cùhî_ty≥_t
 
cùhî_ty≥
, 
md_ty≥_t
 
md_ty≥
,

173 c⁄° *
pwd
, 
size_t
 
pwdÀn
,

174 c⁄° *
d©a
, 
size_t
 
Àn
,

175 *
ouçut
 )

177 
ªt
, 
keyÀn
 = 0;

178 
key
[32];

179 
iv
[16];

180 c⁄° 
cùhî_öfo_t
 *
cùhî_öfo
;

181 
cùhî_c⁄ãxt_t
 
cùhî_˘x
;

182 
size_t
 
ﬁí
 = 0;

184 
cùhî_öfo
 = 
	`cùhî_öfo_‰om_ty≥
–
cùhî_ty≥
 );

185 if–
cùhî_öfo
 =
NULL
 )

186 –
POLARSSL_ERR_PKCS12_FEATURE_UNAVAILABLE
 );

188 
keyÀn
 = 
cùhî_öfo
->
key_Àngth
 / 8;

190 if––
ªt
 = 
	`pkcs12_pbe_dîive_key_iv
–
pbe_∑øms
, 
md_ty≥
, 
pwd
, 
pwdÀn
,

191 
key
, 
keyÀn
,

192 
iv
, 
cùhî_öfo
->
iv_size
 ) ) != 0 )

194 –
ªt
 );

197 
	`cùhî_öô
–&
cùhî_˘x
 );

199 if––
ªt
 = 
	`cùhî_öô_˘x
–&
cùhî_˘x
, 
cùhî_öfo
 ) ) != 0 )

200 
exô
;

202 if––
ªt
 = 
	`cùhî_£tkey
–&
cùhî_˘x
, 
key
, 8 * 
keyÀn
, 
mode
 ) ) != 0 )

203 
exô
;

205 if––
ªt
 = 
	`cùhî_£t_iv
–&
cùhî_˘x
, 
iv
, 
cùhî_öfo
->
iv_size
 ) ) != 0 )

206 
exô
;

208 if––
ªt
 = 
	`cùhî_ª£t
–&
cùhî_˘x
 ) ) != 0 )

209 
exô
;

211 if––
ªt
 = 
	`cùhî_upd©e
–&
cùhî_˘x
, 
d©a
, 
Àn
,

212 
ouçut
, &
ﬁí
 ) ) != 0 )

214 
exô
;

217 if––
ªt
 = 
	`cùhî_föish
–&
cùhî_˘x
, 
ouçut
 + 
ﬁí
, &olen ) ) != 0 )

218 
ªt
 = 
POLARSSL_ERR_PKCS12_PASSWORD_MISMATCH
;

220 
exô
:

221 
	`pﬁ¨s¶_zîoize
–
key
, ( key ) );

222 
	`pﬁ¨s¶_zîoize
–
iv
, ( iv ) );

223 
	`cùhî_‰ì
–&
cùhî_˘x
 );

225 –
ªt
 );

226 
	}
}

228 
	$pkcs12_fûl_buf„r
–*
d©a
, 
size_t
 
d©a_Àn
,

229 c⁄° *
fûÀr
, 
size_t
 
fûl_Àn
 )

231 *
p
 = 
d©a
;

232 
size_t
 
u£_Àn
;

234  
d©a_Àn
 > 0 )

236 
u£_Àn
 = ( 
d©a_Àn
 > 
fûl_Àn
 ) ? fill_len : data_len;

237 
	`mem˝y
–
p
, 
fûÀr
, 
u£_Àn
 );

238 
p
 +
u£_Àn
;

239 
d©a_Àn
 -
u£_Àn
;

241 
	}
}

243 
	$pkcs12_dîiv©i⁄
–*
d©a
, 
size_t
 
d©Æí
,

244 c⁄° *
pwd
, 
size_t
 
pwdÀn
,

245 c⁄° *
ß…
, 
size_t
 
ß…Àn
,

246 
md_ty≥_t
 
md_ty≥
, 
id
, 
ôî©i⁄s
 )

248 
ªt
;

249 
j
;

251 
divîsifõr
[128];

252 
ß…_block
[128], 
pwd_block
[128], 
hash_block
[128];

253 
hash_ouçut
[
POLARSSL_MD_MAX_SIZE
];

254 *
p
;

255 
c
;

257 
size_t
 
hÀn
, 
u£_Àn
, 
v
, 
i
;

259 c⁄° 
md_öfo_t
 *
md_öfo
;

260 
md_c⁄ãxt_t
 
md_˘x
;

263 if–
d©Æí
 > 128 || 
pwdÀn
 > 64 || 
ß…Àn
 > 64 )

264 –
POLARSSL_ERR_PKCS12_BAD_INPUT_DATA
 );

266 
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
md_ty≥
 );

267 if–
md_öfo
 =
NULL
 )

268 –
POLARSSL_ERR_PKCS12_FEATURE_UNAVAILABLE
 );

270 
	`md_öô
–&
md_˘x
 );

272 if––
ªt
 = 
	`md_öô_˘x
–&
md_˘x
, 
md_öfo
 ) ) != 0 )

273 –
ªt
 );

274 
hÀn
 = 
	`md_gë_size
–
md_öfo
 );

276 if–
hÀn
 <= 32 )

277 
v
 = 64;

279 
v
 = 128;

281 
	`mem£t
–
divîsifõr
, (Ë
id
, 
v
 );

283 
	`pkcs12_fûl_buf„r
–
ß…_block
, 
v
, 
ß…
, 
ß…Àn
 );

284 
	`pkcs12_fûl_buf„r
–
pwd_block
, 
v
, 
pwd
, 
pwdÀn
 );

286 
p
 = 
d©a
;

287  
d©Æí
 > 0 )

290 if––
ªt
 = 
	`md_°¨ts
–&
md_˘x
 ) ) != 0 )

291 
exô
;

293 if––
ªt
 = 
	`md_upd©e
–&
md_˘x
, 
divîsifõr
, 
v
 ) ) != 0 )

294 
exô
;

296 if––
ªt
 = 
	`md_upd©e
–&
md_˘x
, 
ß…_block
, 
v
 ) ) != 0 )

297 
exô
;

299 if––
ªt
 = 
	`md_upd©e
–&
md_˘x
, 
pwd_block
, 
v
 ) ) != 0 )

300 
exô
;

302 if––
ªt
 = 
	`md_föish
–&
md_˘x
, 
hash_ouçut
 ) ) != 0 )

303 
exô
;

306  
i
 = 1; i < (
size_t
Ë
ôî©i⁄s
; i++ )

308 if––
ªt
 = 
	`md
–
md_öfo
, 
hash_ouçut
, 
hÀn
, hash_output ) ) != 0 )

309 
exô
;

312 
u£_Àn
 = ( 
d©Æí
 > 
hÀn
 ) ? hlen : datalen;

313 
	`mem˝y
–
p
, 
hash_ouçut
, 
u£_Àn
 );

314 
d©Æí
 -
u£_Àn
;

315 
p
 +
u£_Àn
;

317 if–
d©Æí
 == 0 )

321 
	`pkcs12_fûl_buf„r
–
hash_block
, 
v
, 
hash_ouçut
, 
hÀn
 );

324  
i
 = 
v
; i > 0; i-- )

325 if–++
hash_block
[
i
 - 1] != 0 )

329 
c
 = 0;

330  
i
 = 
v
; i > 0; i-- )

332 
j
 = 
ß…_block
[
i
 - 1] + 
hash_block
[ò- 1] + 
c
;

333 
c
 = (Ë(
j
 >> 8);

334 
ß…_block
[
i
 - 1] = 
j
 & 0xFF;

338 
c
 = 0;

339  
i
 = 
v
; i > 0; i-- )

341 
j
 = 
pwd_block
[
i
 - 1] + 
hash_block
[ò- 1] + 
c
;

342 
c
 = (Ë(
j
 >> 8);

343 
pwd_block
[
i
 - 1] = 
j
 & 0xFF;

347 
ªt
 = 0;

349 
exô
:

350 
	`pﬁ¨s¶_zîoize
–
ß…_block
, ( salt_block ) );

351 
	`pﬁ¨s¶_zîoize
–
pwd_block
, (Öwd_block ) );

352 
	`pﬁ¨s¶_zîoize
–
hash_block
, ( hash_block ) );

353 
	`pﬁ¨s¶_zîoize
–
hash_ouçut
, ( hash_output ) );

355 
	`md_‰ì
–&
md_˘x
 );

357 –
ªt
 );

358 
	}
}

	@polarssl/library/pkcs5.c

36 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

37 
	~"pﬁ¨s¶/c⁄fig.h
"

39 #ö˛udê
POLARSSL_CONFIG_FILE


42 #i‡
deföed
(
POLARSSL_PKCS5_C
)

44 
	~"pﬁ¨s¶/pkcs5.h
"

45 
	~"pﬁ¨s¶/a¢1.h
"

46 
	~"pﬁ¨s¶/cùhî.h
"

47 
	~"pﬁ¨s¶/oid.h
"

49 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

50 
	~"pﬁ¨s¶/∂©f‹m.h
"

52 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

55 
	$pkcs5_∑r£_pbkdf2_∑øms
–c⁄° 
a¢1_buf
 *
∑øms
,

56 
a¢1_buf
 *
ß…
, *
ôî©i⁄s
,

57 *
keyÀn
, 
md_ty≥_t
 *
md_ty≥
 )

59 
ªt
;

60 
a¢1_buf
 
¥f_Æg_oid
;

61 *
p
 = 
∑øms
->p;

62 c⁄° *
íd
 = 
∑øms
->
p
 +Ö¨ams->
Àn
;

64 if–
∑øms
->
èg
 !–
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) )

65 –
POLARSSL_ERR_PKCS5_INVALID_FORMAT
 +

66 
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 );

76 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
ß…
->
Àn
, 
ASN1_OCTET_STRING
 ) ) != 0 )

77 –
POLARSSL_ERR_PKCS5_INVALID_FORMAT
 + 
ªt
 );

79 
ß…
->
p
 =Ö;

80 
p
 +
ß…
->
Àn
;

82 if––
ªt
 = 
	`a¢1_gë_öt
–&
p
, 
íd
, 
ôî©i⁄s
 ) ) != 0 )

83 –
POLARSSL_ERR_PKCS5_INVALID_FORMAT
 + 
ªt
 );

85 if–
p
 =
íd
 )

88 if––
ªt
 = 
	`a¢1_gë_öt
–&
p
, 
íd
, 
keyÀn
 ) ) != 0 )

90 if–
ªt
 !
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 )

91 –
POLARSSL_ERR_PKCS5_INVALID_FORMAT
 + 
ªt
 );

94 if–
p
 =
íd
 )

97 if––
ªt
 = 
	`a¢1_gë_Æg_nuŒ
–&
p
, 
íd
, &
¥f_Æg_oid
 ) ) != 0 )

98 –
POLARSSL_ERR_PKCS5_INVALID_FORMAT
 + 
ªt
 );

100 if–!
	`OID_CMP
–
OID_HMAC_SHA1
, &
¥f_Æg_oid
 ) )

101 –
POLARSSL_ERR_PKCS5_FEATURE_UNAVAILABLE
 );

103 *
md_ty≥
 = 
POLARSSL_MD_SHA1
;

105 if–
p
 !
íd
 )

106 –
POLARSSL_ERR_PKCS5_INVALID_FORMAT
 +

107 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

110 
	}
}

112 
	$pkcs5_pbes2
–
a¢1_buf
 *
pbe_∑øms
, 
mode
,

113 c⁄° *
pwd
, 
size_t
 
pwdÀn
,

114 c⁄° *
d©a
, 
size_t
 
d©Æí
,

115 *
ouçut
 )

117 
ªt
, 
ôî©i⁄s
 = 0, 
keyÀn
 = 0;

118 *
p
, *
íd
;

119 
a¢1_buf
 
kdf_Æg_oid
, 
íc_scheme_oid
, 
kdf_Æg_∑øms
, 
íc_scheme_∑øms
;

120 
a¢1_buf
 
ß…
;

121 
md_ty≥_t
 
md_ty≥
 = 
POLARSSL_MD_SHA1
;

122 
key
[32], 
iv
[32];

123 
size_t
 
ﬁí
 = 0;

124 c⁄° 
md_öfo_t
 *
md_öfo
;

125 c⁄° 
cùhî_öfo_t
 *
cùhî_öfo
;

126 
md_c⁄ãxt_t
 
md_˘x
;

127 
cùhî_ty≥_t
 
cùhî_Æg
;

128 
cùhî_c⁄ãxt_t
 
cùhî_˘x
;

130 
p
 = 
pbe_∑øms
->p;

131 
íd
 = 
p
 + 
pbe_∑øms
->
Àn
;

139 if–
pbe_∑øms
->
èg
 !–
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) )

140 –
POLARSSL_ERR_PKCS5_INVALID_FORMAT
 +

141 
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 );

143 if––
ªt
 = 
	`a¢1_gë_Æg
–&
p
, 
íd
, &
kdf_Æg_oid
, &
kdf_Æg_∑øms
 ) ) != 0 )

144 –
POLARSSL_ERR_PKCS5_INVALID_FORMAT
 + 
ªt
 );

148 if–!
	`OID_CMP
–
OID_PKCS5_PBKDF2
, &
kdf_Æg_oid
 ) )

149 –
POLARSSL_ERR_PKCS5_FEATURE_UNAVAILABLE
 );

151 if––
ªt
 = 
	`pkcs5_∑r£_pbkdf2_∑øms
–&
kdf_Æg_∑øms
,

152 &
ß…
, &
ôî©i⁄s
, &
keyÀn
,

153 &
md_ty≥
 ) ) != 0 )

155 –
ªt
 );

158 
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
md_ty≥
 );

159 if–
md_öfo
 =
NULL
 )

160 –
POLARSSL_ERR_PKCS5_FEATURE_UNAVAILABLE
 );

162 if––
ªt
 = 
	`a¢1_gë_Æg
–&
p
, 
íd
, &
íc_scheme_oid
,

163 &
íc_scheme_∑øms
 ) ) != 0 )

165 –
POLARSSL_ERR_PKCS5_INVALID_FORMAT
 + 
ªt
 );

168 if–
	`oid_gë_cùhî_Æg
–&
íc_scheme_oid
, &
cùhî_Æg
 ) != 0 )

169 –
POLARSSL_ERR_PKCS5_FEATURE_UNAVAILABLE
 );

171 
cùhî_öfo
 = 
	`cùhî_öfo_‰om_ty≥
–
cùhî_Æg
 );

172 if–
cùhî_öfo
 =
NULL
 )

173 –
POLARSSL_ERR_PKCS5_FEATURE_UNAVAILABLE
 );

179 
keyÀn
 = 
cùhî_öfo
->
key_Àngth
 / 8;

181 if–
íc_scheme_∑øms
.
èg
 !
ASN1_OCTET_STRING
 ||

182 
íc_scheme_∑øms
.
Àn
 !
cùhî_öfo
->
iv_size
 )

184 –
POLARSSL_ERR_PKCS5_INVALID_FORMAT
 );

187 
	`md_öô
–&
md_˘x
 );

188 
	`cùhî_öô
–&
cùhî_˘x
 );

190 
	`mem˝y
–
iv
, 
íc_scheme_∑øms
.
p
,Énc_scheme_∑øms.
Àn
 );

192 if––
ªt
 = 
	`md_öô_˘x
–&
md_˘x
, 
md_öfo
 ) ) != 0 )

193 
exô
;

195 if––
ªt
 = 
	`pkcs5_pbkdf2_hmac
–&
md_˘x
, 
pwd
, 
pwdÀn
, 
ß…
.
p
, sÆt.
Àn
,

196 
ôî©i⁄s
, 
keyÀn
, 
key
 ) ) != 0 )

198 
exô
;

201 if––
ªt
 = 
	`cùhî_öô_˘x
–&
cùhî_˘x
, 
cùhî_öfo
 ) ) != 0 )

202 
exô
;

204 if––
ªt
 = 
	`cùhî_£tkey
–&
cùhî_˘x
, 
key
, 8 * 
keyÀn
, 
mode
 ) ) != 0 )

205 
exô
;

207 if––
ªt
 = 
	`cùhî_¸y±
–&
cùhî_˘x
, 
iv
, 
íc_scheme_∑øms
.
Àn
,

208 
d©a
, 
d©Æí
, 
ouçut
, &
ﬁí
 ) ) != 0 )

209 
ªt
 = 
POLARSSL_ERR_PKCS5_PASSWORD_MISMATCH
;

211 
exô
:

212 
	`md_‰ì
–&
md_˘x
 );

213 
	`cùhî_‰ì
–&
cùhî_˘x
 );

215 –
ªt
 );

216 
	}
}

218 
	$pkcs5_pbkdf2_hmac
–
md_c⁄ãxt_t
 *
˘x
, c⁄° *
∑ssw‹d
,

219 
size_t
 
∂í
, c⁄° *
ß…
, size_à
¶í
,

220 
ôî©i⁄_cou¡
,

221 
uöt32_t
 
key_Àngth
, *
ouçut
 )

223 
ªt
, 
j
;

224 
i
;

225 
md1
[
POLARSSL_MD_MAX_SIZE
];

226 
w‹k
[
POLARSSL_MD_MAX_SIZE
];

227 
md_size
 = 
	`md_gë_size
–
˘x
->
md_öfo
 );

228 
size_t
 
u£_Àn
;

229 *
out_p
 = 
ouçut
;

230 
cou¡î
[4];

232 
	`mem£t
–
cou¡î
, 0, 4 );

233 
cou¡î
[3] = 1;

235 if–
ôî©i⁄_cou¡
 > 0xFFFFFFFF )

236 –
POLARSSL_ERR_PKCS5_BAD_INPUT_DATA
 );

238  
key_Àngth
 )

242 if––
ªt
 = 
	`md_hmac_°¨ts
–
˘x
, 
∑ssw‹d
, 
∂í
 ) ) != 0 )

243 –
ªt
 );

245 if––
ªt
 = 
	`md_hmac_upd©e
–
˘x
, 
ß…
, 
¶í
 ) ) != 0 )

246 –
ªt
 );

248 if––
ªt
 = 
	`md_hmac_upd©e
–
˘x
, 
cou¡î
, 4 ) ) != 0 )

249 –
ªt
 );

251 if––
ªt
 = 
	`md_hmac_föish
–
˘x
, 
w‹k
 ) ) != 0 )

252 –
ªt
 );

254 
	`mem˝y
–
md1
, 
w‹k
, 
md_size
 );

256  
i
 = 1; i < 
ôî©i⁄_cou¡
; i++ )

260 if––
ªt
 = 
	`md_hmac_°¨ts
–
˘x
, 
∑ssw‹d
, 
∂í
 ) ) != 0 )

261 –
ªt
 );

263 if––
ªt
 = 
	`md_hmac_upd©e
–
˘x
, 
md1
, 
md_size
 ) ) != 0 )

264 –
ªt
 );

266 if––
ªt
 = 
	`md_hmac_föish
–
˘x
, 
md1
 ) ) != 0 )

267 –
ªt
 );

271  
j
 = 0; j < 
md_size
; j++ )

272 
w‹k
[
j
] ^
md1
[j];

275 
u£_Àn
 = ( 
key_Àngth
 < 
md_size
 ) ? key_length : md_size;

276 
	`mem˝y
–
out_p
, 
w‹k
, 
u£_Àn
 );

278 
key_Àngth
 -(
uöt32_t
Ë
u£_Àn
;

279 
out_p
 +
u£_Àn
;

281  
i
 = 4; i > 0; i-- )

282 if–++
cou¡î
[
i
 - 1] != 0 )

287 
	}
}

289 #i‡
deföed
(
POLARSSL_SELF_TEST
)

291 #i‡!
deföed
(
POLARSSL_SHA1_C
)

292 
	$pkcs5_£lf_ã°
–
vîbo£
 )

294 if–
vîbo£
 != 0 )

295 
	`pﬁ¨s¶_¥ötf
( " PBKDF2 (SHA1): skipped\n\n" );

298 
	}
}

301 
	~<°dio.h
>

303 
	#MAX_TESTS
 6

	)

305 
size_t
 
	g∂í
[
MAX_TESTS
] =

308 
	g∑ssw‹d
[
MAX_TESTS
][32] =

318 
size_t
 
	g¶í
[
MAX_TESTS
] =

321 
	gß…
[
MAX_TESTS
][40] =

331 
uöt32_t
 
	gô_˙t
[
MAX_TESTS
] =

334 
uöt32_t
 
	gkey_Àn
[
MAX_TESTS
] =

338 
	gªsu…_key
[
MAX_TESTS
][32] =

360 
	$pkcs5_£lf_ã°
–
vîbo£
 )

362 
md_c⁄ãxt_t
 
sha1_˘x
;

363 c⁄° 
md_öfo_t
 *
öfo_sha1
;

364 
ªt
, 
i
;

365 
key
[64];

367 
	`md_öô
–&
sha1_˘x
 );

369 
öfo_sha1
 = 
	`md_öfo_‰om_ty≥
–
POLARSSL_MD_SHA1
 );

370 if–
öfo_sha1
 =
NULL
 )

372 
ªt
 = 1;

373 
exô
;

376 if––
ªt
 = 
	`md_öô_˘x
–&
sha1_˘x
, 
öfo_sha1
 ) ) != 0 )

378 
ªt
 = 1;

379 
exô
;

382 if–
vîbo£
 != 0 )

383 
	`pﬁ¨s¶_¥ötf
( " PBKDF2Çote:Åest #3 may be slow!\n" );

385  
i
 = 0; i < 
MAX_TESTS
; i++ )

387 if–
vîbo£
 != 0 )

388 
	`pﬁ¨s¶_¥ötf
–" PBKDF2 (SHA1Ë#%d: ", 
i
 );

390 
ªt
 = 
	`pkcs5_pbkdf2_hmac
–&
sha1_˘x
, 
∑ssw‹d
[
i
], 
∂í
[i], 
ß…
[i],

391 
¶í
[
i
], 
ô_˙t
[i], 
key_Àn
[i], 
key
 );

392 if–
ªt
 != 0 ||

393 
	`memcmp
–
ªsu…_key
[
i
], 
key
, 
key_Àn
[i] ) != 0 )

395 if–
vîbo£
 != 0 )

396 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

398 
ªt
 = 1;

399 
exô
;

402 if–
vîbo£
 != 0 )

403 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

406 
	`pﬁ¨s¶_¥ötf
( "\n" );

408 
exô
:

409 
	`md_‰ì
–&
sha1_˘x
 );

412 
	}
}

	@polarssl/library/pkparse.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_PK_PARSE_C
)

34 
	~"pﬁ¨s¶/pk.h
"

35 
	~"pﬁ¨s¶/a¢1.h
"

36 
	~"pﬁ¨s¶/oid.h
"

38 #i‡
deföed
(
POLARSSL_RSA_C
)

39 
	~"pﬁ¨s¶/rß.h
"

41 #i‡
deföed
(
POLARSSL_ECP_C
)

42 
	~"pﬁ¨s¶/e˝.h
"

44 #i‡
deföed
(
POLARSSL_ECDSA_C
)

45 
	~"pﬁ¨s¶/ecdß.h
"

47 #i‡
deföed
(
POLARSSL_PEM_PARSE_C
)

48 
	~"pﬁ¨s¶/≥m.h
"

50 #i‡
deföed
(
POLARSSL_PKCS5_C
)

51 
	~"pﬁ¨s¶/pkcs5.h
"

53 #i‡
deföed
(
POLARSSL_PKCS12_C
)

54 
	~"pﬁ¨s¶/pkcs12.h
"

57 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

58 
	~"pﬁ¨s¶/∂©f‹m.h
"

60 
	~<°dlib.h
>

61 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

62 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

65 #i‡
deföed
(
POLARSSL_FS_IO
)

67 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

68 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

69 
	}
}

74 
	$lﬂd_fûe
–c⁄° *
∑th
, **
buf
, 
size_t
 *
n
 )

76 
FILE
 *
f
;

77 
size
;

79 if––
f
 = 
	`f›í
–
∑th
, "rb" ) ) =
NULL
 )

80 –
POLARSSL_ERR_PK_FILE_IO_ERROR
 );

82 
	`f£ek
–
f
, 0, 
SEEK_END
 );

83 if––
size
 = 
	`·ñl
–
f
 ) ) == -1 )

85 
	`f˛o£
–
f
 );

86 –
POLARSSL_ERR_PK_FILE_IO_ERROR
 );

88 
	`f£ek
–
f
, 0, 
SEEK_SET
 );

90 *
n
 = (
size_t
Ë
size
;

92 if–*
n
 + 1 == 0 ||

93 –*
buf
 = (*Ë
	`pﬁ¨s¶_mÆloc
–*
n
 + 1 ) ) =
NULL
 )

95 
	`f˛o£
–
f
 );

96 –
POLARSSL_ERR_PK_MALLOC_FAILED
 );

99 if–
	`‰ód
–*
buf
, 1, *
n
, 
f
 ) != *n )

101 
	`f˛o£
–
f
 );

102 
	`pﬁ¨s¶_‰ì
–*
buf
 );

103 –
POLARSSL_ERR_PK_FILE_IO_ERROR
 );

106 
	`f˛o£
–
f
 );

108 (*
buf
)[*
n
] = '\0';

111 
	}
}

116 
	$pk_∑r£_keyfûe
–
pk_c⁄ãxt
 *
˘x
,

117 c⁄° *
∑th
, c⁄° *
pwd
 )

119 
ªt
;

120 
size_t
 
n
;

121 *
buf
;

123 if––
ªt
 = 
	`lﬂd_fûe
–
∑th
, &
buf
, &
n
 ) ) != 0 )

124 –
ªt
 );

126 if–
pwd
 =
NULL
 )

127 
ªt
 = 
	`pk_∑r£_key
–
˘x
, 
buf
, 
n
, 
NULL
, 0 );

129 
ªt
 = 
	`pk_∑r£_key
–
˘x
, 
buf
, 
n
,

130 (c⁄° *Ë
pwd
, 
	`°æí
(Öwd ) );

132 
	`pﬁ¨s¶_zîoize
–
buf
, 
n
 + 1 );

133 
	`pﬁ¨s¶_‰ì
–
buf
 );

135 –
ªt
 );

136 
	}
}

141 
	$pk_∑r£_public_keyfûe
–
pk_c⁄ãxt
 *
˘x
, c⁄° *
∑th
 )

143 
ªt
;

144 
size_t
 
n
;

145 *
buf
;

147 if––
ªt
 = 
	`lﬂd_fûe
–
∑th
, &
buf
, &
n
 ) ) != 0 )

148 –
ªt
 );

150 
ªt
 = 
	`pk_∑r£_public_key
–
˘x
, 
buf
, 
n
 );

152 
	`pﬁ¨s¶_zîoize
–
buf
, 
n
 + 1 );

153 
	`pﬁ¨s¶_‰ì
–
buf
 );

155 –
ªt
 );

156 
	}
}

159 #i‡
deföed
(
POLARSSL_ECP_C
)

168 
	$pk_gë_e˝¨ams
–**
p
, c⁄° *
íd
,

169 
a¢1_buf
 *
∑øms
 )

171 
ªt
;

174 
∑øms
->
èg
 = **
p
;

175 if–
∑øms
->
èg
 !
ASN1_OID


176 #i‡
	`deföed
(
POLARSSL_PK_PARSE_EC_EXTENDED
)

177 && 
∑øms
->
èg
 !–
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 )

181 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 +

182 
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 );

185 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
∑øms
->
Àn
,Ö¨ams->
èg
 ) ) != 0 )

187 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

190 
∑øms
->
p
 = *p;

191 *
p
 +
∑øms
->
Àn
;

193 if–*
p
 !
íd
 )

194 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 +

195 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

198 
	}
}

200 #i‡
deföed
(
POLARSSL_PK_PARSE_EC_EXTENDED
)

220 
	$pk_group_‰om_•ecifõd
–c⁄° 
a¢1_buf
 *
∑øms
, 
e˝_group
 *
gΩ
 )

222 
ªt
;

223 *
p
 = 
∑øms
->p;

224 c⁄° * c⁄° 
íd
 = 
∑øms
->
p
 +Ö¨ams->
Àn
;

225 c⁄° *
íd_fõld
, *
íd_curve
;

226 
size_t
 
Àn
;

227 
vî
;

230 if––
ªt
 = 
	`a¢1_gë_öt
–&
p
, 
íd
, &
vî
 ) ) != 0 )

231 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

233 if–
vî
 < 1 || ver > 3 )

234 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 );

242 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

243 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

244 –
ªt
 );

246 
íd_fõld
 = 
p
 + 
Àn
;

256 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd_fõld
, &
Àn
, 
ASN1_OID
 ) ) != 0 )

257 –
ªt
 );

259 if–
Àn
 !
	`OID_SIZE
–
OID_ANSI_X9_62_PRIME_FIELD
 ) ||

260 
	`memcmp
–
p
, 
OID_ANSI_X9_62_PRIME_FIELD
, 
Àn
 ) != 0 )

262 –
POLARSSL_ERR_PK_FEATURE_UNAVAILABLE
 );

265 
p
 +
Àn
;

268 if––
ªt
 = 
	`a¢1_gë_mpi
–&
p
, 
íd_fõld
, &
gΩ
->
P
 ) ) != 0 )

269 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

271 
gΩ
->
pbôs
 = 
	`mpi_msb
–&gΩ->
P
 );

273 if–
p
 !
íd_fõld
 )

274 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 +

275 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

286 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

287 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

288 –
ªt
 );

290 
íd_curve
 = 
p
 + 
Àn
;

296 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd_curve
, &
Àn
, 
ASN1_OCTET_STRING
 ) ) != 0 ||

297 –
ªt
 = 
	`mpi_ªad_bö¨y
–&
gΩ
->
A
, 
p
, 
Àn
 ) ) != 0 )

299 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

302 
p
 +
Àn
;

304 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd_curve
, &
Àn
, 
ASN1_OCTET_STRING
 ) ) != 0 ||

305 –
ªt
 = 
	`mpi_ªad_bö¨y
–&
gΩ
->
B
, 
p
, 
Àn
 ) ) != 0 )

307 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

310 
p
 +
Àn
;

313 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd_curve
, &
Àn
, 
ASN1_BIT_STRING
 ) ) == 0 )

314 
p
 +
Àn
;

316 if–
p
 !
íd_curve
 )

317 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 +

318 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

323 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
, 
ASN1_OCTET_STRING
 ) ) != 0 )

324 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

326 if––
ªt
 = 
	`e˝_poöt_ªad_bö¨y
–
gΩ
, &gΩ->
G
,

327 –c⁄° *Ë
p
, 
Àn
 ) ) != 0 )

333 if–
ªt
 !
POLARSSL_ERR_ECP_FEATURE_UNAVAILABLE
 ||

334 –
p
[0] != 0x02 &&Ö[0] != 0x03 ) ||

335 
Àn
 !
	`mpi_size
–&
gΩ
->
P
 ) + 1 ||

336 
	`mpi_ªad_bö¨y
–&
gΩ
->
G
.
X
, 
p
 + 1, 
Àn
 - 1 ) != 0 ||

337 
	`mpi_l£t
–&
gΩ
->
G
.
Y
, 
p
[0] - 2 ) != 0 ||

338 
	`mpi_l£t
–&
gΩ
->
G
.
Z
, 1 ) != 0 )

340 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 );

344 
p
 +
Àn
;

349 if––
ªt
 = 
	`a¢1_gë_mpi
–&
p
, 
íd
, &
gΩ
->
N
 ) ) )

350 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

352 
gΩ
->
nbôs
 = 
	`mpi_msb
–&gΩ->
N
 );

359 
	}
}

365 
	$pk_group_id_‰om_group
–c⁄° 
e˝_group
 *
gΩ
, 
e˝_group_id
 *
gΩ_id
 )

367 
ªt
 = 0;

368 
e˝_group
 
ªf
;

369 c⁄° 
e˝_group_id
 *
id
;

371 
	`e˝_group_öô
–&
ªf
 );

373  
id
 = 
	`e˝_gΩ_id_li°
(); *id !
POLARSSL_ECP_DP_NONE
; id++ )

376 
	`e˝_group_‰ì
–&
ªf
 );

377 
	`MPI_CHK
–
	`e˝_u£_known_dp
–&
ªf
, *
id
 ) );

380 if–
gΩ
->
pbôs
 =
ªf
.pbô†&& gΩ->
nbôs
 ==Ñef.nbits &&

381 
	`mpi_cmp_mpi
–&
gΩ
->
P
, &
ªf
.P ) == 0 &&

382 
	`mpi_cmp_mpi
–&
gΩ
->
A
, &
ªf
.A ) == 0 &&

383 
	`mpi_cmp_mpi
–&
gΩ
->
B
, &
ªf
.B ) == 0 &&

384 
	`mpi_cmp_mpi
–&
gΩ
->
N
, &
ªf
.N ) == 0 &&

385 
	`mpi_cmp_mpi
–&
gΩ
->
G
.
X
, &
ªf
.G.X ) == 0 &&

386 
	`mpi_cmp_mpi
–&
gΩ
->
G
.
Z
, &
ªf
.G.Z ) == 0 &&

388 
	`mpi_gë_bô
–&
gΩ
->
G
.
Y
, 0 ) =mpi_gë_bô–&
ªf
.G.Y, 0 ) )

395 
˛ónup
:

396 
	`e˝_group_‰ì
–&
ªf
 );

398 *
gΩ_id
 = *
id
;

400 if–
ªt
 =0 && *
id
 =
POLARSSL_ECP_DP_NONE
 )

401 
ªt
 = 
POLARSSL_ERR_ECP_FEATURE_UNAVAILABLE
;

403 –
ªt
 );

404 
	}
}

409 
	$pk_group_id_‰om_•ecifõd
–c⁄° 
a¢1_buf
 *
∑øms
,

410 
e˝_group_id
 *
gΩ_id
 )

412 
ªt
;

413 
e˝_group
 
gΩ
;

415 
	`e˝_group_öô
–&
gΩ
 );

417 if––
ªt
 = 
	`pk_group_‰om_•ecifõd
–
∑øms
, &
gΩ
 ) ) != 0 )

418 
˛ónup
;

420 
ªt
 = 
	`pk_group_id_‰om_group
–&
gΩ
, 
gΩ_id
 );

422 
˛ónup
:

423 
	`e˝_group_‰ì
–&
gΩ
 );

425 –
ªt
 );

426 
	}
}

437 
	$pk_u£_e˝¨ams
–c⁄° 
a¢1_buf
 *
∑øms
, 
e˝_group
 *
gΩ
 )

439 
ªt
;

440 
e˝_group_id
 
gΩ_id
;

442 if–
∑øms
->
èg
 =
ASN1_OID
 )

444 if–
	`oid_gë_ec_gΩ
–
∑øms
, &
gΩ_id
 ) != 0 )

445 –
POLARSSL_ERR_PK_UNKNOWN_NAMED_CURVE
 );

449 #i‡
	`deföed
(
POLARSSL_PK_PARSE_EC_EXTENDED
)

450 if––
ªt
 = 
	`pk_group_id_‰om_•ecifõd
–
∑øms
, &
gΩ_id
 ) ) != 0 )

451 –
ªt
 );

453 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 );

460 if–
gΩ
->
id
 !
POLARSSL_ECP_DP_NONE
 && gΩ->id !
gΩ_id
 )

461 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 );

463 if––
ªt
 = 
	`e˝_u£_known_dp
–
gΩ
, 
gΩ_id
 ) ) != 0 )

464 –
ªt
 );

467 
	}
}

476 
	$pk_gë_e˝ubkey
–**
p
, c⁄° *
íd
,

477 
e˝_key∑ú
 *
key
 )

479 
ªt
;

481 if––
ªt
 = 
	`e˝_poöt_ªad_bö¨y
–&
key
->
gΩ
, &key->
Q
,

482 (c⁄° *Ë*
p
, 
íd
 - *p ) ) == 0 )

484 
ªt
 = 
	`e˝_check_pubkey
–&
key
->
gΩ
, &key->
Q
 );

490 *
p
 = (*Ë
íd
;

492 –
ªt
 );

493 
	}
}

496 #i‡
deföed
(
POLARSSL_RSA_C
)

503 
	$pk_gë_rßpubkey
–**
p
,

504 c⁄° *
íd
,

505 
rß_c⁄ãxt
 *
rß
 )

507 
ªt
;

508 
size_t
 
Àn
;

510 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
Àn
,

511 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

512 –
POLARSSL_ERR_PK_INVALID_PUBKEY
 + 
ªt
 );

514 if–*
p
 + 
Àn
 !
íd
 )

515 –
POLARSSL_ERR_PK_INVALID_PUBKEY
 +

516 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

518 if––
ªt
 = 
	`a¢1_gë_mpi
–
p
, 
íd
, &
rß
->
N
 ) ) != 0 ||

519 –
ªt
 = 
	`a¢1_gë_mpi
–
p
, 
íd
, &
rß
->
E
 ) ) != 0 )

520 –
POLARSSL_ERR_PK_INVALID_PUBKEY
 + 
ªt
 );

522 if–*
p
 !
íd
 )

523 –
POLARSSL_ERR_PK_INVALID_PUBKEY
 +

524 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

526 if––
ªt
 = 
	`rß_check_pubkey
–
rß
 ) ) != 0 )

527 –
POLARSSL_ERR_PK_INVALID_PUBKEY
 );

529 
rß
->
Àn
 = 
	`mpi_size
–&rß->
N
 );

532 
	}
}

541 
	$pk_gë_pk_Æg
–**
p
,

542 c⁄° *
íd
,

543 
pk_ty≥_t
 *
pk_Æg
, 
a¢1_buf
 *
∑øms
 )

545 
ªt
;

546 
a¢1_buf
 
Æg_oid
;

548 
	`mem£t
–
∑øms
, 0, (
a¢1_buf
) );

550 if––
ªt
 = 
	`a¢1_gë_Æg
–
p
, 
íd
, &
Æg_oid
, 
∑øms
 ) ) != 0 )

551 –
POLARSSL_ERR_PK_INVALID_ALG
 + 
ªt
 );

553 if–
	`oid_gë_pk_Æg
–&
Æg_oid
, 
pk_Æg
 ) != 0 )

554 –
POLARSSL_ERR_PK_UNKNOWN_PK_ALG
 );

559 if–*
pk_Æg
 =
POLARSSL_PK_RSA
 &&

560 ––
∑øms
->
èg
 !
ASN1_NULL
 &&Öarams->tag != 0 ) ||

561 
∑øms
->
Àn
 != 0 ) )

563 –
POLARSSL_ERR_PK_INVALID_ALG
 );

567 
	}
}

574 
	$pk_∑r£_subpubkey
–**
p
, c⁄° *
íd
,

575 
pk_c⁄ãxt
 *
pk
 )

577 
ªt
;

578 
size_t
 
Àn
;

579 
a¢1_buf
 
Æg_∑øms
;

580 
pk_ty≥_t
 
pk_Æg
 = 
POLARSSL_PK_NONE
;

581 c⁄° 
pk_öfo_t
 *
pk_öfo
;

583 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
Àn
,

584 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

586 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

589 
íd
 = *
p
 + 
Àn
;

591 if––
ªt
 = 
	`pk_gë_pk_Æg
–
p
, 
íd
, &
pk_Æg
, &
Æg_∑øms
 ) ) != 0 )

592 –
ªt
 );

594 if––
ªt
 = 
	`a¢1_gë_bô°rög_nuŒ
–
p
, 
íd
, &
Àn
 ) ) != 0 )

595 –
POLARSSL_ERR_PK_INVALID_PUBKEY
 + 
ªt
 );

597 if–*
p
 + 
Àn
 !
íd
 )

598 –
POLARSSL_ERR_PK_INVALID_PUBKEY
 +

599 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

601 if––
pk_öfo
 = 
	`pk_öfo_‰om_ty≥
–
pk_Æg
 ) ) =
NULL
 )

602 –
POLARSSL_ERR_PK_UNKNOWN_PK_ALG
 );

604 if––
ªt
 = 
	`pk_öô_˘x
–
pk
, 
pk_öfo
 ) ) != 0 )

605 –
ªt
 );

607 #i‡
	`deföed
(
POLARSSL_RSA_C
)

608 if–
pk_Æg
 =
POLARSSL_PK_RSA
 )

610 
ªt
 = 
	`pk_gë_rßpubkey
–
p
, 
íd
, 
	`pk_rß
–*
pk
 ) );

613 #i‡
	`deföed
(
POLARSSL_ECP_C
)

614 if–
pk_Æg
 =
POLARSSL_PK_ECKEY_DH
 ||Ök_Æg =
POLARSSL_PK_ECKEY
 )

616 
ªt
 = 
	`pk_u£_e˝¨ams
–&
Æg_∑øms
, &
	`pk_ec
–*
pk
 )->
gΩ
 );

617 if–
ªt
 == 0 )

618 
ªt
 = 
	`pk_gë_e˝ubkey
–
p
, 
íd
, 
	`pk_ec
–*
pk
 ) );

621 
ªt
 = 
POLARSSL_ERR_PK_UNKNOWN_PK_ALG
;

623 if–
ªt
 =0 && *
p
 !
íd
 )

624 
ªt
 = 
POLARSSL_ERR_PK_INVALID_PUBKEY


625 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
;

627 if–
ªt
 != 0 )

628 
	`pk_‰ì
–
pk
 );

630 –
ªt
 );

631 
	}
}

633 #i‡
deföed
(
POLARSSL_RSA_C
)

637 
	$pk_∑r£_key_pkcs1_dî
–
rß_c⁄ãxt
 *
rß
,

638 c⁄° *
key
,

639 
size_t
 
keyÀn
 )

641 
ªt
;

642 
size_t
 
Àn
;

643 *
p
, *
íd
;

645 
p
 = (*Ë
key
;

646 
íd
 = 
p
 + 
keyÀn
;

664 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

665 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

667 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

670 
íd
 = 
p
 + 
Àn
;

672 if––
ªt
 = 
	`a¢1_gë_öt
–&
p
, 
íd
, &
rß
->
vî
 ) ) != 0 )

674 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

677 if–
rß
->
vî
 != 0 )

679 –
POLARSSL_ERR_PK_KEY_INVALID_VERSION
 );

682 if––
ªt
 = 
	`a¢1_gë_mpi
–&
p
, 
íd
, &
rß
->
N
 ) ) != 0 ||

683 –
ªt
 = 
	`a¢1_gë_mpi
–&
p
, 
íd
, &
rß
->
E
 ) ) != 0 ||

684 –
ªt
 = 
	`a¢1_gë_mpi
–&
p
, 
íd
, &
rß
->
D
 ) ) != 0 ||

685 –
ªt
 = 
	`a¢1_gë_mpi
–&
p
, 
íd
, &
rß
->
P
 ) ) != 0 ||

686 –
ªt
 = 
	`a¢1_gë_mpi
–&
p
, 
íd
, &
rß
->
Q
 ) ) != 0 ||

687 –
ªt
 = 
	`a¢1_gë_mpi
–&
p
, 
íd
, &
rß
->
DP
 ) ) != 0 ||

688 –
ªt
 = 
	`a¢1_gë_mpi
–&
p
, 
íd
, &
rß
->
DQ
 ) ) != 0 ||

689 –
ªt
 = 
	`a¢1_gë_mpi
–&
p
, 
íd
, &
rß
->
QP
 ) ) != 0 )

691 
	`rß_‰ì
–
rß
 );

692 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

695 
rß
->
Àn
 = 
	`mpi_size
–&rß->
N
 );

697 if–
p
 !
íd
 )

699 
	`rß_‰ì
–
rß
 );

700 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 +

701 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

704 if––
ªt
 = 
	`rß_check_¥ivkey
–
rß
 ) ) != 0 )

706 
	`rß_‰ì
–
rß
 );

707 –
ªt
 );

711 
	}
}

714 #i‡
deföed
(
POLARSSL_ECP_C
)

718 
	$pk_∑r£_key_£c1_dî
–
e˝_key∑ú
 *
eck
,

719 c⁄° *
key
,

720 
size_t
 
keyÀn
 )

722 
ªt
;

723 
vîsi⁄
, 
pubkey_d⁄e
;

724 
size_t
 
Àn
;

725 
a¢1_buf
 
∑øms
;

726 *
p
 = (*Ë
key
;

727 *
íd
 = 
p
 + 
keyÀn
;

728 *
íd2
;

740 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

741 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

743 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

746 
íd
 = 
p
 + 
Àn
;

748 if––
ªt
 = 
	`a¢1_gë_öt
–&
p
, 
íd
, &
vîsi⁄
 ) ) != 0 )

749 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

751 if–
vîsi⁄
 != 1 )

752 –
POLARSSL_ERR_PK_KEY_INVALID_VERSION
 );

754 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
, 
ASN1_OCTET_STRING
 ) ) != 0 )

755 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

757 if––
ªt
 = 
	`mpi_ªad_bö¨y
–&
eck
->
d
, 
p
, 
Àn
 ) ) != 0 )

759 
	`e˝_key∑ú_‰ì
–
eck
 );

760 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

763 
p
 +
Àn
;

768 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

769 
ASN1_CONTEXT_SPECIFIC
 | 
ASN1_CONSTRUCTED
 | 0 ) ) == 0 )

771 if––
ªt
 = 
	`pk_gë_e˝¨ams
–&
p
,Ö + 
Àn
, &
∑øms
) ) != 0 ||

772 –
ªt
 = 
	`pk_u£_e˝¨ams
–&
∑øms
, &
eck
->
gΩ
 ) ) != 0 )

774 
	`e˝_key∑ú_‰ì
–
eck
 );

775 –
ªt
 );

778 if–
ªt
 !
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 )

780 
	`e˝_key∑ú_‰ì
–
eck
 );

781 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

788 
pubkey_d⁄e
 = 0;

789 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

790 
ASN1_CONTEXT_SPECIFIC
 | 
ASN1_CONSTRUCTED
 | 1 ) ) == 0 )

792 
íd2
 = 
p
 + 
Àn
;

794 if––
ªt
 = 
	`a¢1_gë_bô°rög_nuŒ
–&
p
, 
íd2
, &
Àn
 ) ) != 0 )

795 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

797 if–
p
 + 
Àn
 !
íd2
 )

798 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 +

799 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

801 if––
ªt
 = 
	`pk_gë_e˝ubkey
–&
p
, 
íd2
, 
eck
 ) ) == 0 )

802 
pubkey_d⁄e
 = 1;

809 if–
ªt
 !
POLARSSL_ERR_ECP_FEATURE_UNAVAILABLE
 )

810 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 );

813 if–
ªt
 !
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 )

815 
	`e˝_key∑ú_‰ì
–
eck
 );

816 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

819 if–! 
pubkey_d⁄e
 &&

820 –
ªt
 = 
	`e˝_mul
–&
eck
->
gΩ
, &eck->
Q
, &eck->
d
, &eck->gΩ.
G
,

821 
NULL
, NULL ) ) != 0 )

823 
	`e˝_key∑ú_‰ì
–
eck
 );

824 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

827 if––
ªt
 = 
	`e˝_check_¥ivkey
–&
eck
->
gΩ
, &eck->
d
 ) ) != 0 )

829 
	`e˝_key∑ú_‰ì
–
eck
 );

830 –
ªt
 );

834 
	}
}

840 
	$pk_∑r£_key_pkcs8_u√n¸y±ed_dî
(

841 
pk_c⁄ãxt
 *
pk
,

842 c⁄° * 
key
,

843 
size_t
 
keyÀn
 )

845 
ªt
, 
vîsi⁄
;

846 
size_t
 
Àn
;

847 
a¢1_buf
 
∑øms
;

848 *
p
 = (*Ë
key
;

849 *
íd
 = 
p
 + 
keyÀn
;

850 
pk_ty≥_t
 
pk_Æg
 = 
POLARSSL_PK_NONE
;

851 c⁄° 
pk_öfo_t
 *
pk_öfo
;

869 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

870 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

872 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

875 
íd
 = 
p
 + 
Àn
;

877 if––
ªt
 = 
	`a¢1_gë_öt
–&
p
, 
íd
, &
vîsi⁄
 ) ) != 0 )

878 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

880 if–
vîsi⁄
 != 0 )

881 –
POLARSSL_ERR_PK_KEY_INVALID_VERSION
 + 
ªt
 );

883 if––
ªt
 = 
	`pk_gë_pk_Æg
–&
p
, 
íd
, &
pk_Æg
, &
∑øms
 ) ) != 0 )

884 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

886 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
, 
ASN1_OCTET_STRING
 ) ) != 0 )

887 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

889 if–
Àn
 < 1 )

890 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 +

891 
POLARSSL_ERR_ASN1_OUT_OF_DATA
 );

893 if––
pk_öfo
 = 
	`pk_öfo_‰om_ty≥
–
pk_Æg
 ) ) =
NULL
 )

894 –
POLARSSL_ERR_PK_UNKNOWN_PK_ALG
 );

896 if––
ªt
 = 
	`pk_öô_˘x
–
pk
, 
pk_öfo
 ) ) != 0 )

897 –
ªt
 );

899 #i‡
	`deföed
(
POLARSSL_RSA_C
)

900 if–
pk_Æg
 =
POLARSSL_PK_RSA
 )

902 if––
ªt
 = 
	`pk_∑r£_key_pkcs1_dî
–
	`pk_rß
–*
pk
 ), 
p
, 
Àn
 ) ) != 0 )

904 
	`pk_‰ì
–
pk
 );

905 –
ªt
 );

909 #i‡
	`deföed
(
POLARSSL_ECP_C
)

910 if–
pk_Æg
 =
POLARSSL_PK_ECKEY
 ||Ök_Æg =
POLARSSL_PK_ECKEY_DH
 )

912 if––
ªt
 = 
	`pk_u£_e˝¨ams
–&
∑øms
, &
	`pk_ec
–*
pk
 )->
gΩ
 ) ) != 0 ||

913 –
ªt
 = 
	`pk_∑r£_key_£c1_dî
–
	`pk_ec
–*
pk
 ), 
p
, 
Àn
 ) ) != 0 )

915 
	`pk_‰ì
–
pk
 );

916 –
ªt
 );

920 –
POLARSSL_ERR_PK_UNKNOWN_PK_ALG
 );

923 
	}
}

928 
	$pk_∑r£_key_pkcs8_í¸y±ed_dî
(

929 
pk_c⁄ãxt
 *
pk
,

930 c⁄° *
key
, 
size_t
 
keyÀn
,

931 c⁄° *
pwd
, 
size_t
 
pwdÀn
 )

933 
ªt
, 
de¸y±ed
 = 0;

934 
size_t
 
Àn
;

935 
buf
[2048];

936 *
p
, *
íd
;

937 
a¢1_buf
 
pbe_Æg_oid
, 
pbe_∑øms
;

938 #i‡
	`deföed
(
POLARSSL_PKCS12_C
)

939 
cùhî_ty≥_t
 
cùhî_Æg
;

940 
md_ty≥_t
 
md_Æg
;

943 
	`mem£t
–
buf
, 0, ( buf ) );

945 
p
 = (*Ë
key
;

946 
íd
 = 
p
 + 
keyÀn
;

948 if–
pwdÀn
 == 0 )

949 –
POLARSSL_ERR_PK_PASSWORD_REQUIRED
 );

965 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

966 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

968 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

971 
íd
 = 
p
 + 
Àn
;

973 if––
ªt
 = 
	`a¢1_gë_Æg
–&
p
, 
íd
, &
pbe_Æg_oid
, &
pbe_∑øms
 ) ) != 0 )

974 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

976 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
, 
ASN1_OCTET_STRING
 ) ) != 0 )

977 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 + 
ªt
 );

979 if–
Àn
 > –
buf
 ) )

980 –
POLARSSL_ERR_PK_BAD_INPUT_DATA
 );

985 #i‡
	`deföed
(
POLARSSL_PKCS12_C
)

986 if–
	`oid_gë_pkcs12_pbe_Æg
–&
pbe_Æg_oid
, &
md_Æg
, &
cùhî_Æg
 ) == 0 )

988 if––
ªt
 = 
	`pkcs12_pbe
–&
pbe_∑øms
, 
PKCS12_PBE_DECRYPT
,

989 
cùhî_Æg
, 
md_Æg
,

990 
pwd
, 
pwdÀn
, 
p
, 
Àn
, 
buf
 ) ) != 0 )

992 if–
ªt
 =
POLARSSL_ERR_PKCS12_PASSWORD_MISMATCH
 )

993 –
POLARSSL_ERR_PK_PASSWORD_MISMATCH
 );

995 –
ªt
 );

998 
de¸y±ed
 = 1;

1000 if–
	`OID_CMP
–
OID_PKCS12_PBE_SHA1_RC4_128
, &
pbe_Æg_oid
 ) )

1002 if––
ªt
 = 
	`pkcs12_pbe_sha1_rc4_128
–&
pbe_∑øms
,

1003 
PKCS12_PBE_DECRYPT
,

1004 
pwd
, 
pwdÀn
,

1005 
p
, 
Àn
, 
buf
 ) ) != 0 )

1007 –
ªt
 );

1013 if–*
buf
 !–
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) )

1014 –
POLARSSL_ERR_PK_PASSWORD_MISMATCH
 );

1016 
de¸y±ed
 = 1;

1020 #i‡
	`deföed
(
POLARSSL_PKCS5_C
)

1021 if–
	`OID_CMP
–
OID_PKCS5_PBES2
, &
pbe_Æg_oid
 ) )

1023 if––
ªt
 = 
	`pkcs5_pbes2
–&
pbe_∑øms
, 
PKCS5_DECRYPT
, 
pwd
, 
pwdÀn
,

1024 
p
, 
Àn
, 
buf
 ) ) != 0 )

1026 if–
ªt
 =
POLARSSL_ERR_PKCS5_PASSWORD_MISMATCH
 )

1027 –
POLARSSL_ERR_PK_PASSWORD_MISMATCH
 );

1029 –
ªt
 );

1032 
de¸y±ed
 = 1;

1037 ((Ë
pwd
);

1040 if–
de¸y±ed
 == 0 )

1041 –
POLARSSL_ERR_PK_FEATURE_UNAVAILABLE
 );

1043 –
	`pk_∑r£_key_pkcs8_u√n¸y±ed_dî
–
pk
, 
buf
, 
Àn
 ) );

1044 
	}
}

1049 
	$pk_∑r£_key
–
pk_c⁄ãxt
 *
pk
,

1050 c⁄° *
key
, 
size_t
 
keyÀn
,

1051 c⁄° *
pwd
, 
size_t
 
pwdÀn
 )

1053 
ªt
;

1054 c⁄° 
pk_öfo_t
 *
pk_öfo
;

1056 #i‡
	`deföed
(
POLARSSL_PEM_PARSE_C
)

1057 
size_t
 
Àn
;

1058 
≥m_c⁄ãxt
 
≥m
;

1060 
	`≥m_öô
–&
≥m
 );

1062 #i‡
	`deföed
(
POLARSSL_RSA_C
)

1063 
ªt
 = 
	`≥m_ªad_buf„r
–&
≥m
,

1066 
key
, 
pwd
, 
pwdÀn
, &
Àn
 );

1067 if–
ªt
 == 0 )

1069 if––
pk_öfo
 = 
	`pk_öfo_‰om_ty≥
–
POLARSSL_PK_RSA
 ) ) =
NULL
 )

1070 –
POLARSSL_ERR_PK_UNKNOWN_PK_ALG
 );

1072 if––
ªt
 = 
	`pk_öô_˘x
–
pk
, 
pk_öfo
 ) ) != 0 ||

1073 –
ªt
 = 
	`pk_∑r£_key_pkcs1_dî
–
	`pk_rß
–*
pk
 ),

1074 
≥m
.
buf
,Öem.
buÊí
 ) ) != 0 )

1076 
	`pk_‰ì
–
pk
 );

1079 
	`≥m_‰ì
–&
≥m
 );

1080 –
ªt
 );

1082 if–
ªt
 =
POLARSSL_ERR_PEM_PASSWORD_MISMATCH
 )

1083 –
POLARSSL_ERR_PK_PASSWORD_MISMATCH
 );

1084 if–
ªt
 =
POLARSSL_ERR_PEM_PASSWORD_REQUIRED
 )

1085 –
POLARSSL_ERR_PK_PASSWORD_REQUIRED
 );

1086 if–
ªt
 !
POLARSSL_ERR_PEM_NO_HEADER_FOOTER_PRESENT
 )

1087 –
ªt
 );

1090 #i‡
	`deföed
(
POLARSSL_ECP_C
)

1091 
ªt
 = 
	`≥m_ªad_buf„r
–&
≥m
,

1094 
key
, 
pwd
, 
pwdÀn
, &
Àn
 );

1095 if–
ªt
 == 0 )

1097 if––
pk_öfo
 = 
	`pk_öfo_‰om_ty≥
–
POLARSSL_PK_ECKEY
 ) ) =
NULL
 )

1098 –
POLARSSL_ERR_PK_UNKNOWN_PK_ALG
 );

1100 if––
ªt
 = 
	`pk_öô_˘x
–
pk
, 
pk_öfo
 ) ) != 0 ||

1101 –
ªt
 = 
	`pk_∑r£_key_£c1_dî
–
	`pk_ec
–*
pk
 ),

1102 
≥m
.
buf
,Öem.
buÊí
 ) ) != 0 )

1104 
	`pk_‰ì
–
pk
 );

1107 
	`≥m_‰ì
–&
≥m
 );

1108 –
ªt
 );

1110 if–
ªt
 =
POLARSSL_ERR_PEM_PASSWORD_MISMATCH
 )

1111 –
POLARSSL_ERR_PK_PASSWORD_MISMATCH
 );

1112 if–
ªt
 =
POLARSSL_ERR_PEM_PASSWORD_REQUIRED
 )

1113 –
POLARSSL_ERR_PK_PASSWORD_REQUIRED
 );

1114 if–
ªt
 !
POLARSSL_ERR_PEM_NO_HEADER_FOOTER_PRESENT
 )

1115 –
ªt
 );

1118 
ªt
 = 
	`≥m_ªad_buf„r
–&
≥m
,

1121 
key
, 
NULL
, 0, &
Àn
 );

1122 if–
ªt
 == 0 )

1124 if––
ªt
 = 
	`pk_∑r£_key_pkcs8_u√n¸y±ed_dî
–
pk
,

1125 
≥m
.
buf
,Öem.
buÊí
 ) ) != 0 )

1127 
	`pk_‰ì
–
pk
 );

1130 
	`≥m_‰ì
–&
≥m
 );

1131 –
ªt
 );

1133 if–
ªt
 !
POLARSSL_ERR_PEM_NO_HEADER_FOOTER_PRESENT
 )

1134 –
ªt
 );

1136 
ªt
 = 
	`≥m_ªad_buf„r
–&
≥m
,

1139 
key
, 
NULL
, 0, &
Àn
 );

1140 if–
ªt
 == 0 )

1142 if––
ªt
 = 
	`pk_∑r£_key_pkcs8_í¸y±ed_dî
–
pk
,

1143 
≥m
.
buf
,Öem.
buÊí
,

1144 
pwd
, 
pwdÀn
 ) ) != 0 )

1146 
	`pk_‰ì
–
pk
 );

1149 
	`≥m_‰ì
–&
≥m
 );

1150 –
ªt
 );

1152 if–
ªt
 !
POLARSSL_ERR_PEM_NO_HEADER_FOOTER_PRESENT
 )

1153 –
ªt
 );

1155 ((Ë
pwd
);

1156 ((Ë
pwdÀn
);

1166 if––
ªt
 = 
	`pk_∑r£_key_pkcs8_í¸y±ed_dî
–
pk
, 
key
, 
keyÀn
,

1167 
pwd
, 
pwdÀn
 ) ) == 0 )

1172 
	`pk_‰ì
–
pk
 );

1174 if–
ªt
 =
POLARSSL_ERR_PK_PASSWORD_MISMATCH
 )

1176 –
ªt
 );

1179 if––
ªt
 = 
	`pk_∑r£_key_pkcs8_u√n¸y±ed_dî
–
pk
, 
key
, 
keyÀn
 ) ) == 0 )

1182 
	`pk_‰ì
–
pk
 );

1184 #i‡
	`deföed
(
POLARSSL_RSA_C
)

1185 if––
pk_öfo
 = 
	`pk_öfo_‰om_ty≥
–
POLARSSL_PK_RSA
 ) ) =
NULL
 )

1186 –
POLARSSL_ERR_PK_UNKNOWN_PK_ALG
 );

1188 if––
ªt
 = 
	`pk_öô_˘x
–
pk
, 
pk_öfo
 ) ) != 0 ||

1189 –
ªt
 = 
	`pk_∑r£_key_pkcs1_dî
–
	`pk_rß
–*
pk
 ), 
key
, 
keyÀn
 ) ) == 0 )

1194 
	`pk_‰ì
–
pk
 );

1197 #i‡
	`deföed
(
POLARSSL_ECP_C
)

1198 if––
pk_öfo
 = 
	`pk_öfo_‰om_ty≥
–
POLARSSL_PK_ECKEY
 ) ) =
NULL
 )

1199 –
POLARSSL_ERR_PK_UNKNOWN_PK_ALG
 );

1201 if––
ªt
 = 
	`pk_öô_˘x
–
pk
, 
pk_öfo
 ) ) != 0 ||

1202 –
ªt
 = 
	`pk_∑r£_key_£c1_dî
–
	`pk_ec
–*
pk
 ), 
key
, 
keyÀn
 ) ) == 0 )

1207 
	`pk_‰ì
–
pk
 );

1210 –
POLARSSL_ERR_PK_KEY_INVALID_FORMAT
 );

1211 
	}
}

1216 
	$pk_∑r£_public_key
–
pk_c⁄ãxt
 *
˘x
,

1217 c⁄° *
key
, 
size_t
 
keyÀn
 )

1219 
ªt
;

1220 *
p
;

1221 #i‡
	`deföed
(
POLARSSL_PEM_PARSE_C
)

1222 
size_t
 
Àn
;

1223 
≥m_c⁄ãxt
 
≥m
;

1225 
	`≥m_öô
–&
≥m
 );

1226 
ªt
 = 
	`≥m_ªad_buf„r
–&
≥m
,

1229 
key
, 
NULL
, 0, &
Àn
 );

1231 if–
ªt
 == 0 )

1236 
key
 = 
≥m
.
buf
;

1237 
keyÀn
 = 
≥m
.
buÊí
;

1239 if–
ªt
 !
POLARSSL_ERR_PEM_NO_HEADER_FOOTER_PRESENT
 )

1241 
	`≥m_‰ì
–&
≥m
 );

1242 –
ªt
 );

1245 
p
 = (*Ë
key
;

1247 
ªt
 = 
	`pk_∑r£_subpubkey
–&
p
,Ö + 
keyÀn
, 
˘x
 );

1249 #i‡
	`deföed
(
POLARSSL_PEM_PARSE_C
)

1250 
	`≥m_‰ì
–&
≥m
 );

1253 –
ªt
 );

1254 
	}
}

	@polarssl/library/pkwrite.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_PK_WRITE_C
)

34 
	~"pﬁ¨s¶/pk.h
"

35 
	~"pﬁ¨s¶/a¢1wrôe.h
"

36 
	~"pﬁ¨s¶/oid.h
"

38 #i‡
deföed
(
POLARSSL_RSA_C
)

39 
	~"pﬁ¨s¶/rß.h
"

41 #i‡
deföed
(
POLARSSL_ECP_C
)

42 
	~"pﬁ¨s¶/e˝.h
"

44 #i‡
deföed
(
POLARSSL_ECDSA_C
)

45 
	~"pﬁ¨s¶/ecdß.h
"

47 #i‡
deföed
(
POLARSSL_PEM_WRITE_C
)

48 
	~"pﬁ¨s¶/≥m.h
"

51 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

52 
	~"pﬁ¨s¶/∂©f‹m.h
"

54 
	~<°dlib.h
>

55 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

56 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

59 #i‡
deföed
(
POLARSSL_RSA_C
)

66 
	$pk_wrôe_rß_pubkey
–**
p
, *
°¨t
,

67 
rß_c⁄ãxt
 *
rß
 )

69 
ªt
;

70 
size_t
 
Àn
 = 0;

72 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_mpi
–
p
, 
°¨t
, &
rß
->
E
 ) );

73 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_mpi
–
p
, 
°¨t
, &
rß
->
N
 ) );

75 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
,Üen ) );

76 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–
p
, 
°¨t
, 
ASN1_CONSTRUCTED
 |

77 
ASN1_SEQUENCE
 ) );

79 –(Ë
Àn
 );

80 
	}
}

83 #i‡
deföed
(
POLARSSL_ECP_C
)

87 
	$pk_wrôe_ec_pubkey
–**
p
, *
°¨t
,

88 
e˝_key∑ú
 *
ec
 )

90 
ªt
;

91 
size_t
 
Àn
 = 0;

92 
buf
[
POLARSSL_ECP_MAX_PT_LEN
];

94 if––
ªt
 = 
	`e˝_poöt_wrôe_bö¨y
–&
ec
->
gΩ
, &ec->
Q
,

95 
POLARSSL_ECP_PF_UNCOMPRESSED
,

96 &
Àn
, 
buf
, ( buf ) ) ) != 0 )

98 –
ªt
 );

101 if–*
p
 - 
°¨t
 < (Ë
Àn
 )

102 –
POLARSSL_ERR_ASN1_BUF_TOO_SMALL
 );

104 *
p
 -
Àn
;

105 
	`mem˝y
–*
p
, 
buf
, 
Àn
 );

107 –(Ë
Àn
 );

108 
	}
}

115 
	$pk_wrôe_ec_∑øm
–**
p
, *
°¨t
,

116 
e˝_key∑ú
 *
ec
 )

118 
ªt
;

119 
size_t
 
Àn
 = 0;

120 c⁄° *
oid
;

121 
size_t
 
oid_Àn
;

123 if––
ªt
 = 
	`oid_gë_oid_by_ec_gΩ
–
ec
->
gΩ
.
id
, &
oid
, &
oid_Àn
 ) ) != 0 )

124 –
ªt
 );

126 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_oid
–
p
, 
°¨t
, 
oid
, 
oid_Àn
 ) );

128 –(Ë
Àn
 );

129 
	}
}

132 
	$pk_wrôe_pubkey
–**
p
, *
°¨t
,

133 c⁄° 
pk_c⁄ãxt
 *
key
 )

135 
ªt
;

136 
size_t
 
Àn
 = 0;

138 #i‡
	`deföed
(
POLARSSL_RSA_C
)

139 if–
	`pk_gë_ty≥
–
key
 ) =
POLARSSL_PK_RSA
 )

140 
	`ASN1_CHK_ADD
–
Àn
, 
	`pk_wrôe_rß_pubkey
–
p
, 
°¨t
, 
	`pk_rß
–*
key
 ) ) );

143 #i‡
	`deföed
(
POLARSSL_ECP_C
)

144 if–
	`pk_gë_ty≥
–
key
 ) =
POLARSSL_PK_ECKEY
 )

145 
	`ASN1_CHK_ADD
–
Àn
, 
	`pk_wrôe_ec_pubkey
–
p
, 
°¨t
, 
	`pk_ec
–*
key
 ) ) );

148 –
POLARSSL_ERR_PK_FEATURE_UNAVAILABLE
 );

150 –(Ë
Àn
 );

151 
	}
}

153 
	$pk_wrôe_pubkey_dî
–
pk_c⁄ãxt
 *
key
, *
buf
, 
size_t
 
size
 )

155 
ªt
;

156 *
c
;

157 
size_t
 
Àn
 = 0, 
∑r_Àn
 = 0, 
oid_Àn
;

158 c⁄° *
oid
;

160 
c
 = 
buf
 + 
size
;

162 
	`ASN1_CHK_ADD
–
Àn
, 
	`pk_wrôe_pubkey
–&
c
, 
buf
, 
key
 ) );

164 if–
c
 - 
buf
 < 1 )

165 –
POLARSSL_ERR_ASN1_BUF_TOO_SMALL
 );

172 *--
c
 = 0;

173 
Àn
 += 1;

175 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
buf
,Üen ) );

176 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
buf
, 
ASN1_BIT_STRING
 ) );

178 if––
ªt
 = 
	`oid_gë_oid_by_pk_Æg
–
	`pk_gë_ty≥
–
key
 ),

179 &
oid
, &
oid_Àn
 ) ) != 0 )

181 –
ªt
 );

184 #i‡
	`deföed
(
POLARSSL_ECP_C
)

185 if–
	`pk_gë_ty≥
–
key
 ) =
POLARSSL_PK_ECKEY
 )

187 
	`ASN1_CHK_ADD
–
∑r_Àn
, 
	`pk_wrôe_ec_∑øm
–&
c
, 
buf
, 
	`pk_ec
–*
key
 ) ) );

191 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Æg‹ôhm_idítifõr
–&
c
, 
buf
, 
oid
, 
oid_Àn
,

192 
∑r_Àn
 ) );

194 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
buf
,Üen ) );

195 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
buf
, 
ASN1_CONSTRUCTED
 |

196 
ASN1_SEQUENCE
 ) );

198 –(Ë
Àn
 );

199 
	}
}

201 
	$pk_wrôe_key_dî
–
pk_c⁄ãxt
 *
key
, *
buf
, 
size_t
 
size
 )

203 
ªt
;

204 *
c
 = 
buf
 + 
size
;

205 
size_t
 
Àn
 = 0;

207 #i‡
	`deföed
(
POLARSSL_RSA_C
)

208 if–
	`pk_gë_ty≥
–
key
 ) =
POLARSSL_PK_RSA
 )

210 
rß_c⁄ãxt
 *
rß
 = 
	`pk_rß
–*
key
 );

212 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_mpi
–&
c
, 
buf
, &
rß
->
QP
 ) );

213 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_mpi
–&
c
, 
buf
, &
rß
->
DQ
 ) );

214 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_mpi
–&
c
, 
buf
, &
rß
->
DP
 ) );

215 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_mpi
–&
c
, 
buf
, &
rß
->
Q
 ) );

216 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_mpi
–&
c
, 
buf
, &
rß
->
P
 ) );

217 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_mpi
–&
c
, 
buf
, &
rß
->
D
 ) );

218 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_mpi
–&
c
, 
buf
, &
rß
->
E
 ) );

219 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_mpi
–&
c
, 
buf
, &
rß
->
N
 ) );

220 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_öt
–&
c
, 
buf
, 0 ) );

222 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
buf
,Üen ) );

223 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
buf
, 
ASN1_CONSTRUCTED
 |

224 
ASN1_SEQUENCE
 ) );

228 #i‡
	`deföed
(
POLARSSL_ECP_C
)

229 if–
	`pk_gë_ty≥
–
key
 ) =
POLARSSL_PK_ECKEY
 )

231 
e˝_key∑ú
 *
ec
 = 
	`pk_ec
–*
key
 );

232 
size_t
 
pub_Àn
 = 0, 
∑r_Àn
 = 0;

246 
	`ASN1_CHK_ADD
–
pub_Àn
, 
	`pk_wrôe_ec_pubkey
–&
c
, 
buf
, 
ec
 ) );

248 if–
c
 - 
buf
 < 1 )

249 –
POLARSSL_ERR_ASN1_BUF_TOO_SMALL
 );

250 *--
c
 = 0;

251 
pub_Àn
 += 1;

253 
	`ASN1_CHK_ADD
–
pub_Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
buf
,Öub_len ) );

254 
	`ASN1_CHK_ADD
–
pub_Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
buf
, 
ASN1_BIT_STRING
 ) );

256 
	`ASN1_CHK_ADD
–
pub_Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
buf
,Öub_len ) );

257 
	`ASN1_CHK_ADD
–
pub_Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
buf
,

258 
ASN1_CONTEXT_SPECIFIC
 | 
ASN1_CONSTRUCTED
 | 1 ) );

259 
Àn
 +
pub_Àn
;

262 
	`ASN1_CHK_ADD
–
∑r_Àn
, 
	`pk_wrôe_ec_∑øm
–&
c
, 
buf
, 
ec
 ) );

264 
	`ASN1_CHK_ADD
–
∑r_Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
buf
,Öar_len ) );

265 
	`ASN1_CHK_ADD
–
∑r_Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
buf
,

266 
ASN1_CONTEXT_SPECIFIC
 | 
ASN1_CONSTRUCTED
 | 0 ) );

267 
Àn
 +
∑r_Àn
;

270 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_mpi
–&
c
, 
buf
, &
ec
->
d
 ) );

271 *
c
 = 
ASN1_OCTET_STRING
;

274 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_öt
–&
c
, 
buf
, 1 ) );

276 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
buf
,Üen ) );

277 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
buf
, 
ASN1_CONSTRUCTED
 |

278 
ASN1_SEQUENCE
 ) );

282 –
POLARSSL_ERR_PK_FEATURE_UNAVAILABLE
 );

284 –(Ë
Àn
 );

285 
	}
}

287 #i‡
deföed
(
POLARSSL_PEM_WRITE_C
)

289 
	#PEM_BEGIN_PUBLIC_KEY
 "-----BEGIN PUBLIC KEY-----\n"

	)

290 
	#PEM_END_PUBLIC_KEY
 "-----END PUBLIC KEY-----\n"

	)

292 
	#PEM_BEGIN_PRIVATE_KEY_RSA
 "-----BEGIN RSA PRIVATE KEY-----\n"

	)

293 
	#PEM_END_PRIVATE_KEY_RSA
 "-----END RSA PRIVATE KEY-----\n"

	)

294 
	#PEM_BEGIN_PRIVATE_KEY_EC
 "-----BEGIN EC PRIVATE KEY-----\n"

	)

295 
	#PEM_END_PRIVATE_KEY_EC
 "-----END EC PRIVATE KEY-----\n"

	)

297 
	$pk_wrôe_pubkey_≥m
–
pk_c⁄ãxt
 *
key
, *
buf
, 
size_t
 
size
 )

299 
ªt
;

300 
ouçut_buf
[4096];

301 
size_t
 
ﬁí
 = 0;

303 if––
ªt
 = 
	`pk_wrôe_pubkey_dî
–
key
, 
ouçut_buf
,

304 (
ouçut_buf
) ) ) < 0 )

306 –
ªt
 );

309 if––
ªt
 = 
	`≥m_wrôe_buf„r
–
PEM_BEGIN_PUBLIC_KEY
, 
PEM_END_PUBLIC_KEY
,

310 
ouçut_buf
 + (ouçut_bufË- 
ªt
,

311 
ªt
, 
buf
, 
size
, &
ﬁí
 ) ) != 0 )

313 –
ªt
 );

317 
	}
}

319 
	$pk_wrôe_key_≥m
–
pk_c⁄ãxt
 *
key
, *
buf
, 
size_t
 
size
 )

321 
ªt
;

322 
ouçut_buf
[4096];

323 c⁄° *
begö
, *
íd
;

324 
size_t
 
ﬁí
 = 0;

326 if––
ªt
 = 
	`pk_wrôe_key_dî
–
key
, 
ouçut_buf
, (output_buf) ) ) < 0 )

327 –
ªt
 );

329 #i‡
	`deföed
(
POLARSSL_RSA_C
)

330 if–
	`pk_gë_ty≥
–
key
 ) =
POLARSSL_PK_RSA
 )

332 
begö
 = 
PEM_BEGIN_PRIVATE_KEY_RSA
;

333 
íd
 = 
PEM_END_PRIVATE_KEY_RSA
;

337 #i‡
	`deföed
(
POLARSSL_ECP_C
)

338 if–
	`pk_gë_ty≥
–
key
 ) =
POLARSSL_PK_ECKEY
 )

340 
begö
 = 
PEM_BEGIN_PRIVATE_KEY_EC
;

341 
íd
 = 
PEM_END_PRIVATE_KEY_EC
;

345 –
POLARSSL_ERR_PK_FEATURE_UNAVAILABLE
 );

347 if––
ªt
 = 
	`≥m_wrôe_buf„r
–
begö
, 
íd
,

348 
ouçut_buf
 + (ouçut_bufË- 
ªt
,

349 
ªt
, 
buf
, 
size
, &
ﬁí
 ) ) != 0 )

351 –
ªt
 );

355 
	}
}

	@polarssl/library/platform.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

34 
	~"pﬁ¨s¶/∂©f‹m.h
"

36 #i‡
deföed
(
POLARSSL_PLATFORM_MEMORY
)

37 #i‡!
deföed
(
POLARSSL_PLATFORM_STD_MALLOC
)

38 *
	$∂©f‹m_mÆloc_unöô
–
size_t
 
Àn
 )

40 ((Ë
Àn
);

41 –
NULL
 );

42 
	}
}

44 
	#POLARSSL_PLATFORM_STD_MALLOC
 
∂©f‹m_mÆloc_unöô


	)

47 #i‡!
deföed
(
POLARSSL_PLATFORM_STD_FREE
)

48 
	$∂©f‹m_‰ì_unöô
–*
±r
 )

50 ((Ë
±r
);

51 
	}
}

53 
	#POLARSSL_PLATFORM_STD_FREE
 
∂©f‹m_‰ì_unöô


	)

56 * (*
	gpﬁ¨s¶_mÆloc
)–
	gsize_t
 ) = 
POLARSSL_PLATFORM_STD_MALLOC
;

57 (*
pﬁ¨s¶_‰ì
)–* ) = 
POLARSSL_PLATFORM_STD_FREE
;

59 
	`∂©f‹m_£t_mÆloc_‰ì
–* (*
mÆloc_func
)–
size_t
 ),

60 (*
‰ì_func
)( * ) )

62 
pﬁ¨s¶_mÆloc
 = 
mÆloc_func
;

63 
pﬁ¨s¶_‰ì
 = 
‰ì_func
;

65 
	}
}

68 #i‡
deföed
(
POLARSSL_PLATFORM_PRINTF_ALT
)

69 #i‡!
deföed
(
POLARSSL_PLATFORM_STD_PRINTF
)

73 
	$∂©f‹m_¥ötf_unöô
–c⁄° *
f‹m©
, ... )

75 ((Ë
f‹m©
);

77 
	}
}

79 
	#POLARSSL_PLATFORM_STD_PRINTF
 
∂©f‹m_¥ötf_unöô


	)

82 (*
pﬁ¨s¶_¥ötf
)–c⁄° *, ... ) = 
POLARSSL_PLATFORM_STD_PRINTF
;

84 
	`∂©f‹m_£t_¥ötf
–(*
¥ötf_func
)( const *, ... ) )

86 
pﬁ¨s¶_¥ötf
 = 
¥ötf_func
;

88 
	}
}

91 #i‡
deföed
(
POLARSSL_PLATFORM_FPRINTF_ALT
)

92 #i‡!
deföed
(
POLARSSL_PLATFORM_STD_FPRINTF
)

96 
	$∂©f‹m_Ârötf_unöô
–
FILE
 *
°ªam
, c⁄° *
f‹m©
, ... )

98 ((Ë
°ªam
);

99 ((Ë
f‹m©
);

101 
	}
}

103 
	#POLARSSL_PLATFORM_STD_FPRINTF
 
∂©f‹m_Ârötf_unöô


	)

106 (*
pﬁ¨s¶_Ârötf
)–
FILE
 *, const *, ... ) =

107 
POLARSSL_PLATFORM_STD_FPRINTF
;

109 
	`∂©f‹m_£t_Ârötf
–(*
Ârötf_func
)–
FILE
 *, const *, ... ) )

111 
pﬁ¨s¶_Ârötf
 = 
Ârötf_func
;

113 
	}
}

	@polarssl/library/ripemd160.c

32 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

33 
	~"pﬁ¨s¶/c⁄fig.h
"

35 #ö˛udê
POLARSSL_CONFIG_FILE


38 #i‡
deföed
(
POLARSSL_RIPEMD160_C
)

40 
	~"pﬁ¨s¶/rùemd160.h
"

42 #i‡
deföed
(
POLARSSL_FS_IO
Ë|| deföed(
POLARSSL_SELF_TEST
)

43 
	~<°dio.h
>

46 #i‡
deföed
(
POLARSSL_SELF_TEST
)

47 
	~<°rög.h
>

50 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

51 
	~"pﬁ¨s¶/∂©f‹m.h
"

53 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

59 #i‚de‡
GET_UINT32_LE


60 
	#GET_UINT32_LE
(
n
,
b
,
i
) \

62 (
n
Ë–(
uöt32_t
Ë(
b
)[(
i
) ] ) \

63 | ( (
uöt32_t
Ë(
b
)[(
i
) + 1] << 8 ) \

64 | ( (
uöt32_t
Ë(
b
)[(
i
) + 2] << 16 ) \

65 | ( (
uöt32_t
Ë(
b
)[(
i
) + 3] << 24 ); \

66 }

	)

69 #i‚de‡
PUT_UINT32_LE


70 
	#PUT_UINT32_LE
(
n
,
b
,
i
) \

72 (
b
)[(
i
Ë] = (Ë–(
n
) ); \

73 (
b
)[(
i
Ë+ 1] = (Ë–(
n
) >> 8 ); \

74 (
b
)[(
i
Ë+ 2] = (Ë–(
n
) >> 16 ); \

75 (
b
)[(
i
Ë+ 3] = (Ë–(
n
) >> 24 ); \

76 }

	)

80 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

81 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

82 
	}
}

84 
	$rùemd160_öô
–
rùemd160_c⁄ãxt
 *
˘x
 )

86 
	`mem£t
–
˘x
, 0, –
rùemd160_c⁄ãxt
 ) );

87 
	}
}

89 
	$rùemd160_‰ì
–
rùemd160_c⁄ãxt
 *
˘x
 )

91 if–
˘x
 =
NULL
 )

94 
	`pﬁ¨s¶_zîoize
–
˘x
, –
rùemd160_c⁄ãxt
 ) );

95 
	}
}

100 
	$rùemd160_°¨ts
–
rùemd160_c⁄ãxt
 *
˘x
 )

102 
˘x
->
tŸÆ
[0] = 0;

103 
˘x
->
tŸÆ
[1] = 0;

105 
˘x
->
°©e
[0] = 0x67452301;

106 
˘x
->
°©e
[1] = 0xEFCDAB89;

107 
˘x
->
°©e
[2] = 0x98BADCFE;

108 
˘x
->
°©e
[3] = 0x10325476;

109 
˘x
->
°©e
[4] = 0xC3D2E1F0;

110 
	}
}

115 
	$rùemd160_¥o˚ss
–
rùemd160_c⁄ãxt
 *
˘x
, c⁄° 
d©a
[64] )

117 
uöt32_t
 
A
, 
B
, 
C
, 
D
, 
E
, 
Ap
, 
Bp
, 
Cp
, 
Dp
, 
Ep
, 
X
[16];

119 
	`GET_UINT32_LE
–
X
[ 0], 
d©a
, 0 );

120 
	`GET_UINT32_LE
–
X
[ 1], 
d©a
, 4 );

121 
	`GET_UINT32_LE
–
X
[ 2], 
d©a
, 8 );

122 
	`GET_UINT32_LE
–
X
[ 3], 
d©a
, 12 );

123 
	`GET_UINT32_LE
–
X
[ 4], 
d©a
, 16 );

124 
	`GET_UINT32_LE
–
X
[ 5], 
d©a
, 20 );

125 
	`GET_UINT32_LE
–
X
[ 6], 
d©a
, 24 );

126 
	`GET_UINT32_LE
–
X
[ 7], 
d©a
, 28 );

127 
	`GET_UINT32_LE
–
X
[ 8], 
d©a
, 32 );

128 
	`GET_UINT32_LE
–
X
[ 9], 
d©a
, 36 );

129 
	`GET_UINT32_LE
–
X
[10], 
d©a
, 40 );

130 
	`GET_UINT32_LE
–
X
[11], 
d©a
, 44 );

131 
	`GET_UINT32_LE
–
X
[12], 
d©a
, 48 );

132 
	`GET_UINT32_LE
–
X
[13], 
d©a
, 52 );

133 
	`GET_UINT32_LE
–
X
[14], 
d©a
, 56 );

134 
	`GET_UINT32_LE
–
X
[15], 
d©a
, 60 );

136 
A
 = 
Ap
 = 
˘x
->
°©e
[0];

137 
B
 = 
Bp
 = 
˘x
->
°©e
[1];

138 
C
 = 
Cp
 = 
˘x
->
°©e
[2];

139 
D
 = 
Dp
 = 
˘x
->
°©e
[3];

140 
E
 = 
Ep
 = 
˘x
->
°©e
[4];

142 
	#F1
–
x
, 
y
, 
z
 ) ( x ^ y ^ z )

	)

143 
	#F2
–
x
, 
y
, 
z
 ) ( ( x & y ) | ( ~x & z ) )

	)

144 
	#F3
–
x
, 
y
, 
z
 ) ( ( x | ~y ) ^ z )

	)

145 
	#F4
–
x
, 
y
, 
z
 ) ( ( x & z ) | ( y & ~z ) )

	)

146 
	#F5
–
x
, 
y
, 
z
 ) ( x ^ ( y | ~z ) )

	)

148 
	#S
–
x
, 
n
 ) ( ( x <<Ç ) | ( x >> (32 -ÇËË)

	)

150 
	#P
–
a
, 
b
, 
c
, 
d
, 
e
, 
r
, 
s
, 
f
, 
k
 ) \

151 
a
 +
	`f
–
b
, 
c
, 
d
 ) + 
X
[
r
] + 
k
; \

152 
a
 = 
	`S
–a, 
s
 ) + 
e
; \

153 
c
 = 
	`S
–c, 10 );

	)

155 
	#P2
–
a
, 
b
, 
c
, 
d
, 
e
, 
r
, 
s
, 
Ω
, 
•
 ) \

156 
	`P
–
a
, 
b
, 
c
, 
d
, 
e
, 
r
, 
s
, 
F
, 
K
 ); \

157 
	`P
–
a
 ## 
p
, 
b
 ##Ö, 
c
 ##Ö, 
d
 ##Ö, 
e
 ##Ö, 
Ω
, 
•
, 
Fp
, 
Kp
 );

	)

159 
	#F
 
F1


	)

160 
	#K
 0x00000000

	)

161 
	#Fp
 
F5


	)

162 
	#Kp
 0x50A28BE6

	)

163 
	`P2
–
A
, 
B
, 
C
, 
D
, 
E
, 0, 11, 5, 8 );

164 
	`P2
–
E
, 
A
, 
B
, 
C
, 
D
, 1, 14, 14, 9 );

165 
	`P2
–
D
, 
E
, 
A
, 
B
, 
C
, 2, 15, 7, 9 );

166 
	`P2
–
C
, 
D
, 
E
, 
A
, 
B
, 3, 12, 0, 11 );

167 
	`P2
–
B
, 
C
, 
D
, 
E
, 
A
, 4, 5, 9, 13 );

168 
	`P2
–
A
, 
B
, 
C
, 
D
, 
E
, 5, 8, 2, 15 );

169 
	`P2
–
E
, 
A
, 
B
, 
C
, 
D
, 6, 7, 11, 15 );

170 
	`P2
–
D
, 
E
, 
A
, 
B
, 
C
, 7, 9, 4, 5 );

171 
	`P2
–
C
, 
D
, 
E
, 
A
, 
B
, 8, 11, 13, 7 );

172 
	`P2
–
B
, 
C
, 
D
, 
E
, 
A
, 9, 13, 6, 7 );

173 
	`P2
–
A
, 
B
, 
C
, 
D
, 
E
, 10, 14, 15, 8 );

174 
	`P2
–
E
, 
A
, 
B
, 
C
, 
D
, 11, 15, 8, 11 );

175 
	`P2
–
D
, 
E
, 
A
, 
B
, 
C
, 12, 6, 1, 14 );

176 
	`P2
–
C
, 
D
, 
E
, 
A
, 
B
, 13, 7, 10, 14 );

177 
	`P2
–
B
, 
C
, 
D
, 
E
, 
A
, 14, 9, 3, 12 );

178 
	`P2
–
A
, 
B
, 
C
, 
D
, 
E
, 15, 8, 12, 6 );

179 #unde‡
F


180 #unde‡
K


181 #unde‡
Fp


182 #unde‡
Kp


184 
	#F
 
F2


	)

185 
	#K
 0x5A827999

	)

186 
	#Fp
 
F4


	)

187 
	#Kp
 0x5C4DD124

	)

188 
	`P2
–
E
, 
A
, 
B
, 
C
, 
D
, 7, 7, 6, 9 );

189 
	`P2
–
D
, 
E
, 
A
, 
B
, 
C
, 4, 6, 11, 13 );

190 
	`P2
–
C
, 
D
, 
E
, 
A
, 
B
, 13, 8, 3, 15 );

191 
	`P2
–
B
, 
C
, 
D
, 
E
, 
A
, 1, 13, 7, 7 );

192 
	`P2
–
A
, 
B
, 
C
, 
D
, 
E
, 10, 11, 0, 12 );

193 
	`P2
–
E
, 
A
, 
B
, 
C
, 
D
, 6, 9, 13, 8 );

194 
	`P2
–
D
, 
E
, 
A
, 
B
, 
C
, 15, 7, 5, 9 );

195 
	`P2
–
C
, 
D
, 
E
, 
A
, 
B
, 3, 15, 10, 11 );

196 
	`P2
–
B
, 
C
, 
D
, 
E
, 
A
, 12, 7, 14, 7 );

197 
	`P2
–
A
, 
B
, 
C
, 
D
, 
E
, 0, 12, 15, 7 );

198 
	`P2
–
E
, 
A
, 
B
, 
C
, 
D
, 9, 15, 8, 12 );

199 
	`P2
–
D
, 
E
, 
A
, 
B
, 
C
, 5, 9, 12, 7 );

200 
	`P2
–
C
, 
D
, 
E
, 
A
, 
B
, 2, 11, 4, 6 );

201 
	`P2
–
B
, 
C
, 
D
, 
E
, 
A
, 14, 7, 9, 15 );

202 
	`P2
–
A
, 
B
, 
C
, 
D
, 
E
, 11, 13, 1, 13 );

203 
	`P2
–
E
, 
A
, 
B
, 
C
, 
D
, 8, 12, 2, 11 );

204 #unde‡
F


205 #unde‡
K


206 #unde‡
Fp


207 #unde‡
Kp


209 
	#F
 
F3


	)

210 
	#K
 0x6ED9EBA1

	)

211 
	#Fp
 
F3


	)

212 
	#Kp
 0x6D703EF3

	)

213 
	`P2
–
D
, 
E
, 
A
, 
B
, 
C
, 3, 11, 15, 9 );

214 
	`P2
–
C
, 
D
, 
E
, 
A
, 
B
, 10, 13, 5, 7 );

215 
	`P2
–
B
, 
C
, 
D
, 
E
, 
A
, 14, 6, 1, 15 );

216 
	`P2
–
A
, 
B
, 
C
, 
D
, 
E
, 4, 7, 3, 11 );

217 
	`P2
–
E
, 
A
, 
B
, 
C
, 
D
, 9, 14, 7, 8 );

218 
	`P2
–
D
, 
E
, 
A
, 
B
, 
C
, 15, 9, 14, 6 );

219 
	`P2
–
C
, 
D
, 
E
, 
A
, 
B
, 8, 13, 6, 6 );

220 
	`P2
–
B
, 
C
, 
D
, 
E
, 
A
, 1, 15, 9, 14 );

221 
	`P2
–
A
, 
B
, 
C
, 
D
, 
E
, 2, 14, 11, 12 );

222 
	`P2
–
E
, 
A
, 
B
, 
C
, 
D
, 7, 8, 8, 13 );

223 
	`P2
–
D
, 
E
, 
A
, 
B
, 
C
, 0, 13, 12, 5 );

224 
	`P2
–
C
, 
D
, 
E
, 
A
, 
B
, 6, 6, 2, 14 );

225 
	`P2
–
B
, 
C
, 
D
, 
E
, 
A
, 13, 5, 10, 13 );

226 
	`P2
–
A
, 
B
, 
C
, 
D
, 
E
, 11, 12, 0, 13 );

227 
	`P2
–
E
, 
A
, 
B
, 
C
, 
D
, 5, 7, 4, 7 );

228 
	`P2
–
D
, 
E
, 
A
, 
B
, 
C
, 12, 5, 13, 5 );

229 #unde‡
F


230 #unde‡
K


231 #unde‡
Fp


232 #unde‡
Kp


234 
	#F
 
F4


	)

235 
	#K
 0x8F1BBCDC

	)

236 
	#Fp
 
F2


	)

237 
	#Kp
 0x7A6D76E9

	)

238 
	`P2
–
C
, 
D
, 
E
, 
A
, 
B
, 1, 11, 8, 15 );

239 
	`P2
–
B
, 
C
, 
D
, 
E
, 
A
, 9, 12, 6, 5 );

240 
	`P2
–
A
, 
B
, 
C
, 
D
, 
E
, 11, 14, 4, 8 );

241 
	`P2
–
E
, 
A
, 
B
, 
C
, 
D
, 10, 15, 1, 11 );

242 
	`P2
–
D
, 
E
, 
A
, 
B
, 
C
, 0, 14, 3, 14 );

243 
	`P2
–
C
, 
D
, 
E
, 
A
, 
B
, 8, 15, 11, 14 );

244 
	`P2
–
B
, 
C
, 
D
, 
E
, 
A
, 12, 9, 15, 6 );

245 
	`P2
–
A
, 
B
, 
C
, 
D
, 
E
, 4, 8, 0, 14 );

246 
	`P2
–
E
, 
A
, 
B
, 
C
, 
D
, 13, 9, 5, 6 );

247 
	`P2
–
D
, 
E
, 
A
, 
B
, 
C
, 3, 14, 12, 9 );

248 
	`P2
–
C
, 
D
, 
E
, 
A
, 
B
, 7, 5, 2, 12 );

249 
	`P2
–
B
, 
C
, 
D
, 
E
, 
A
, 15, 6, 13, 9 );

250 
	`P2
–
A
, 
B
, 
C
, 
D
, 
E
, 14, 8, 9, 12 );

251 
	`P2
–
E
, 
A
, 
B
, 
C
, 
D
, 5, 6, 7, 5 );

252 
	`P2
–
D
, 
E
, 
A
, 
B
, 
C
, 6, 5, 10, 15 );

253 
	`P2
–
C
, 
D
, 
E
, 
A
, 
B
, 2, 12, 14, 8 );

254 #unde‡
F


255 #unde‡
K


256 #unde‡
Fp


257 #unde‡
Kp


259 
	#F
 
F5


	)

260 
	#K
 0xA953FD4E

	)

261 
	#Fp
 
F1


	)

262 
	#Kp
 0x00000000

	)

263 
	`P2
–
B
, 
C
, 
D
, 
E
, 
A
, 4, 9, 12, 8 );

264 
	`P2
–
A
, 
B
, 
C
, 
D
, 
E
, 0, 15, 15, 5 );

265 
	`P2
–
E
, 
A
, 
B
, 
C
, 
D
, 5, 5, 10, 12 );

266 
	`P2
–
D
, 
E
, 
A
, 
B
, 
C
, 9, 11, 4, 9 );

267 
	`P2
–
C
, 
D
, 
E
, 
A
, 
B
, 7, 6, 1, 12 );

268 
	`P2
–
B
, 
C
, 
D
, 
E
, 
A
, 12, 8, 5, 5 );

269 
	`P2
–
A
, 
B
, 
C
, 
D
, 
E
, 2, 13, 8, 14 );

270 
	`P2
–
E
, 
A
, 
B
, 
C
, 
D
, 10, 12, 7, 6 );

271 
	`P2
–
D
, 
E
, 
A
, 
B
, 
C
, 14, 5, 6, 8 );

272 
	`P2
–
C
, 
D
, 
E
, 
A
, 
B
, 1, 12, 2, 13 );

273 
	`P2
–
B
, 
C
, 
D
, 
E
, 
A
, 3, 13, 13, 6 );

274 
	`P2
–
A
, 
B
, 
C
, 
D
, 
E
, 8, 14, 14, 5 );

275 
	`P2
–
E
, 
A
, 
B
, 
C
, 
D
, 11, 11, 0, 15 );

276 
	`P2
–
D
, 
E
, 
A
, 
B
, 
C
, 6, 8, 3, 13 );

277 
	`P2
–
C
, 
D
, 
E
, 
A
, 
B
, 15, 5, 9, 11 );

278 
	`P2
–
B
, 
C
, 
D
, 
E
, 
A
, 13, 6, 11, 11 );

279 #unde‡
F


280 #unde‡
K


281 #unde‡
Fp


282 #unde‡
Kp


284 
C
 = 
˘x
->
°©e
[1] + C + 
Dp
;

285 
˘x
->
°©e
[1] = ctx->°©e[2] + 
D
 + 
Ep
;

286 
˘x
->
°©e
[2] = ctx->°©e[3] + 
E
 + 
Ap
;

287 
˘x
->
°©e
[3] = ctx->°©e[4] + 
A
 + 
Bp
;

288 
˘x
->
°©e
[4] = ctx->°©e[0] + 
B
 + 
Cp
;

289 
˘x
->
°©e
[0] = 
C
;

290 
	}
}

295 
	$rùemd160_upd©e
–
rùemd160_c⁄ãxt
 *
˘x
,

296 c⁄° *
öput
, 
size_t
 
ûí
 )

298 
size_t
 
fûl
;

299 
uöt32_t
 
À·
;

301 if–
ûí
 == 0 )

304 
À·
 = 
˘x
->
tŸÆ
[0] & 0x3F;

305 
fûl
 = 64 - 
À·
;

307 
˘x
->
tŸÆ
[0] +(
uöt32_t
Ë
ûí
;

308 
˘x
->
tŸÆ
[0] &= 0xFFFFFFFF;

310 if–
˘x
->
tŸÆ
[0] < (
uöt32_t
Ë
ûí
 )

311 
˘x
->
tŸÆ
[1]++;

313 if–
À·
 && 
ûí
 >
fûl
 )

315 
	`mem˝y
–(*Ë(
˘x
->
buf„r
 + 
À·
), 
öput
, 
fûl
 );

316 
	`rùemd160_¥o˚ss
–
˘x
, ctx->
buf„r
 );

317 
öput
 +
fûl
;

318 
ûí
 -
fûl
;

319 
À·
 = 0;

322  
ûí
 >= 64 )

324 
	`rùemd160_¥o˚ss
–
˘x
, 
öput
 );

325 
öput
 += 64;

326 
ûí
 -= 64;

329 if–
ûí
 > 0 )

331 
	`mem˝y
–(*Ë(
˘x
->
buf„r
 + 
À·
), 
öput
, 
ûí
 );

333 
	}
}

335 c⁄° 
	grùemd160_∑ddög
[64] =

346 
	$rùemd160_föish
–
rùemd160_c⁄ãxt
 *
˘x
, 
ouçut
[20] )

348 
uöt32_t
 
œ°
, 
∑dn
;

349 
uöt32_t
 
high
, 
low
;

350 
msgÀn
[8];

352 
high
 = ( 
˘x
->
tŸÆ
[0] >> 29 )

353 | ( 
˘x
->
tŸÆ
[1] << 3 );

354 
low
 = ( 
˘x
->
tŸÆ
[0] << 3 );

356 
	`PUT_UINT32_LE
–
low
, 
msgÀn
, 0 );

357 
	`PUT_UINT32_LE
–
high
, 
msgÀn
, 4 );

359 
œ°
 = 
˘x
->
tŸÆ
[0] & 0x3F;

360 
∑dn
 = ( 
œ°
 < 56 ) ? ( 56 -Üast ) : ( 120 -Üast );

362 
	`rùemd160_upd©e
–
˘x
, 
rùemd160_∑ddög
, 
∑dn
 );

363 
	`rùemd160_upd©e
–
˘x
, 
msgÀn
, 8 );

365 
	`PUT_UINT32_LE
–
˘x
->
°©e
[0], 
ouçut
, 0 );

366 
	`PUT_UINT32_LE
–
˘x
->
°©e
[1], 
ouçut
, 4 );

367 
	`PUT_UINT32_LE
–
˘x
->
°©e
[2], 
ouçut
, 8 );

368 
	`PUT_UINT32_LE
–
˘x
->
°©e
[3], 
ouçut
, 12 );

369 
	`PUT_UINT32_LE
–
˘x
->
°©e
[4], 
ouçut
, 16 );

370 
	}
}

375 
	$rùemd160
–c⁄° *
öput
, 
size_t
 
ûí
,

376 
ouçut
[20] )

378 
rùemd160_c⁄ãxt
 
˘x
;

380 
	`rùemd160_öô
–&
˘x
 );

381 
	`rùemd160_°¨ts
–&
˘x
 );

382 
	`rùemd160_upd©e
–&
˘x
, 
öput
, 
ûí
 );

383 
	`rùemd160_föish
–&
˘x
, 
ouçut
 );

384 
	`rùemd160_‰ì
–&
˘x
 );

385 
	}
}

387 #i‡
deföed
(
POLARSSL_FS_IO
)

391 
	$rùemd160_fûe
–c⁄° *
∑th
, 
ouçut
[20] )

393 
FILE
 *
f
;

394 
size_t
 
n
;

395 
rùemd160_c⁄ãxt
 
˘x
;

396 
buf
[1024];

398 if––
f
 = 
	`f›í
–
∑th
, "rb" ) ) =
NULL
 )

399 –
POLARSSL_ERR_RIPEMD160_FILE_IO_ERROR
 );

401 
	`rùemd160_öô
–&
˘x
 );

402 
	`rùemd160_°¨ts
–&
˘x
 );

404  ( 
n
 = 
	`‰ód
–
buf
, 1, –bu‡), 
f
 ) ) > 0 )

405 
	`rùemd160_upd©e
–&
˘x
, 
buf
, 
n
 );

407 
	`rùemd160_föish
–&
˘x
, 
ouçut
 );

408 
	`rùemd160_‰ì
–&
˘x
 );

410 if–
	`„º‹
–
f
 ) != 0 )

412 
	`f˛o£
–
f
 );

413 –
POLARSSL_ERR_RIPEMD160_FILE_IO_ERROR
 );

416 
	`f˛o£
–
f
 );

418 
	}
}

424 
	$rùemd160_hmac_°¨ts
–
rùemd160_c⁄ãxt
 *
˘x
,

425 c⁄° *
key
, 
size_t
 
keyÀn
 )

427 
size_t
 
i
;

428 
sum
[20];

430 if–
keyÀn
 > 64 )

432 
	`rùemd160
–
key
, 
keyÀn
, 
sum
 );

433 
keyÀn
 = 20;

434 
key
 = 
sum
;

437 
	`mem£t
–
˘x
->
ùad
, 0x36, 64 );

438 
	`mem£t
–
˘x
->
›ad
, 0x5C, 64 );

440  
i
 = 0; i < 
keyÀn
; i++ )

442 
˘x
->
ùad
[
i
] = ()–˘x->ùad[i] ^ 
key
[i] );

443 
˘x
->
›ad
[
i
] = ()–˘x->›ad[i] ^ 
key
[i] );

446 
	`rùemd160_°¨ts
–
˘x
 );

447 
	`rùemd160_upd©e
–
˘x
, ctx->
ùad
, 64 );

449 
	`pﬁ¨s¶_zîoize
–
sum
, ( sum ) );

450 
	}
}

455 
	$rùemd160_hmac_upd©e
–
rùemd160_c⁄ãxt
 *
˘x
,

456 c⁄° *
öput
, 
size_t
 
ûí
 )

458 
	`rùemd160_upd©e
–
˘x
, 
öput
, 
ûí
 );

459 
	}
}

464 
	$rùemd160_hmac_föish
–
rùemd160_c⁄ãxt
 *
˘x
, 
ouçut
[20] )

466 
tmpbuf
[20];

468 
	`rùemd160_föish
–
˘x
, 
tmpbuf
 );

469 
	`rùemd160_°¨ts
–
˘x
 );

470 
	`rùemd160_upd©e
–
˘x
, ctx->
›ad
, 64 );

471 
	`rùemd160_upd©e
–
˘x
, 
tmpbuf
, 20 );

472 
	`rùemd160_föish
–
˘x
, 
ouçut
 );

474 
	`pﬁ¨s¶_zîoize
–
tmpbuf
, (Åmpbuf ) );

475 
	}
}

480 
	$rùemd160_hmac_ª£t
–
rùemd160_c⁄ãxt
 *
˘x
 )

482 
	`rùemd160_°¨ts
–
˘x
 );

483 
	`rùemd160_upd©e
–
˘x
, ctx->
ùad
, 64 );

484 
	}
}

489 
	$rùemd160_hmac
–c⁄° *
key
, 
size_t
 
keyÀn
,

490 c⁄° *
öput
, 
size_t
 
ûí
,

491 
ouçut
[20] )

493 
rùemd160_c⁄ãxt
 
˘x
;

495 
	`rùemd160_öô
–&
˘x
 );

496 
	`rùemd160_hmac_°¨ts
–&
˘x
, 
key
, 
keyÀn
 );

497 
	`rùemd160_hmac_upd©e
–&
˘x
, 
öput
, 
ûí
 );

498 
	`rùemd160_hmac_föish
–&
˘x
, 
ouçut
 );

499 
	`rùemd160_‰ì
–&
˘x
 );

500 
	}
}

503 #i‡
deföed
(
POLARSSL_SELF_TEST
)

508 
	#TESTS
 8

	)

509 
	#KEYS
 2

	)

510 c⁄° *
	grùemd160_ã°_öput
[
TESTS
] =

523 c⁄° 
	grùemd160_ã°_md
[
TESTS
][20] =

543 c⁄° 
	grùemd160_ã°_hmac
[
KEYS
][
TESTS
][20] =

583 c⁄° 
	grùemd160_ã°_key
[
KEYS
][20] =

594 
	$rùemd160_£lf_ã°
–
vîbo£
 )

596 
i
, 
j
;

597 
ouçut
[20];

599 
	`mem£t
–
ouçut
, 0,  output );

601  
i
 = 0; i < 
TESTS
; i++ )

603 if–
vîbo£
 != 0 )

604 
	`pﬁ¨s¶_¥ötf
–" RIPEMD-160Åe° #%d: ", 
i
 + 1 );

606 
	`rùemd160
–(c⁄° *Ë
rùemd160_ã°_öput
[
i
],

607 
	`°æí
–
rùemd160_ã°_öput
[
i
] ),

608 
ouçut
 );

610 if–
	`memcmp
–
ouçut
, 
rùemd160_ã°_md
[
i
], 20 ) != 0 )

612 if–
vîbo£
 != 0 )

613 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

618 if–
vîbo£
 != 0 )

619 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

621  
j
 = 0; j < 
KEYS
; j++ )

623 if–
vîbo£
 != 0 )

624 
	`pﬁ¨s¶_¥ötf
( " HMAC-RIPEMD-160Åest #%d, key #%d: ",

625 
i
 + 1, 
j
 + 1 );

627 
	`rùemd160_hmac
–
rùemd160_ã°_key
[
j
], 20,

628 (c⁄° *Ë
rùemd160_ã°_öput
[
i
],

629 
	`°æí
–
rùemd160_ã°_öput
[
i
] ),

630 
ouçut
 );

632 if–
	`memcmp
–
ouçut
, 
rùemd160_ã°_hmac
[
j
][
i
], 20 ) != 0 )

634 if–
vîbo£
 != 0 )

635 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

640 if–
vîbo£
 != 0 )

641 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

644 if–
vîbo£
 != 0 )

645 
	`pﬁ¨s¶_¥ötf
( "\n" );

649 
	}
}

	@polarssl/library/rsa.c

32 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

33 
	~"pﬁ¨s¶/c⁄fig.h
"

35 #ö˛udê
POLARSSL_CONFIG_FILE


38 #i‡
deföed
(
POLARSSL_RSA_C
)

40 
	~"pﬁ¨s¶/rß.h
"

41 
	~"pﬁ¨s¶/oid.h
"

43 #i‡
deföed
(
POLARSSL_PKCS1_V21
)

44 
	~"pﬁ¨s¶/md.h
"

47 
	~<°dlib.h
>

48 
	~<°dio.h
>

50 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

51 
	~"pﬁ¨s¶/∂©f‹m.h
"

53 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

59 
	$rß_öô
–
rß_c⁄ãxt
 *
˘x
,

60 
∑ddög
,

61 
hash_id
 )

63 
	`mem£t
–
˘x
, 0, –
rß_c⁄ãxt
 ) );

65 
	`rß_£t_∑ddög
–
˘x
, 
∑ddög
, 
hash_id
 );

67 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

68 
	`pﬁ¨s¶_muãx_öô
–&
˘x
->
muãx
 );

70 
	}
}

75 
	$rß_£t_∑ddög
–
rß_c⁄ãxt
 *
˘x
, 
∑ddög
, 
hash_id
 )

77 
˘x
->
∑ddög
 =Öadding;

78 
˘x
->
hash_id
 = hash_id;

79 
	}
}

81 #i‡
deföed
(
POLARSSL_GENPRIME
)

86 
rß_gí_key
–
rß_c⁄ãxt
 *
˘x
,

87 (*
f_∫g
)(*, *, 
size_t
),

88 *
p_∫g
,

89 
nbôs
, 
exp⁄ít
 )

91 
ªt
;

92 
mpi
 
P1
, 
Q1
, 
H
, 
G
;

94 if–
f_∫g
 =
NULL
 || 
nbôs
 < 128 || 
exp⁄ít
 < 3 )

95 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

97 
	`mpi_öô
–&
P1
 ); mpi_öô–&
Q1
 ); mpi_öô–&
H
 ); mpi_öô–&
G
 );

103 
	`MPI_CHK
–
	`mpi_l£t
–&
˘x
->
E
, 
exp⁄ít
 ) );

107 
	`MPI_CHK
–
	`mpi_gí_¥ime
–&
˘x
->
P
, ( 
nbôs
 + 1 ) >> 1, 0,

108 
f_∫g
, 
p_∫g
 ) );

110 
	`MPI_CHK
–
	`mpi_gí_¥ime
–&
˘x
->
Q
, ( 
nbôs
 + 1 ) >> 1, 0,

111 
f_∫g
, 
p_∫g
 ) );

113 if–
	`mpi_cmp_mpi
–&
˘x
->
P
, &˘x->
Q
 ) < 0 )

114 
	`mpi_sw≠
–&
˘x
->
P
, &˘x->
Q
 );

116 if–
	`mpi_cmp_mpi
–&
˘x
->
P
, &˘x->
Q
 ) == 0 )

119 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
˘x
->
N
, &˘x->
P
, &˘x->
Q
 ) );

120 if–
	`mpi_msb
–&
˘x
->
N
 ) !
nbôs
 )

123 
	`MPI_CHK
–
	`mpi_sub_öt
–&
P1
, &
˘x
->
P
, 1 ) );

124 
	`MPI_CHK
–
	`mpi_sub_öt
–&
Q1
, &
˘x
->
Q
, 1 ) );

125 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
H
, &
P1
, &
Q1
 ) );

126 
	`MPI_CHK
–
	`mpi_gcd
–&
G
, &
˘x
->
E
, &
H
 ) );

128  
	`mpi_cmp_öt
–&
G
, 1 ) != 0 );

136 
	`MPI_CHK
–
	`mpi_öv_mod
–&
˘x
->
D
 , &˘x->
E
, &
H
 ) );

137 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
˘x
->
DP
, &˘x->
D
, &
P1
 ) );

138 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
˘x
->
DQ
, &˘x->
D
, &
Q1
 ) );

139 
	`MPI_CHK
–
	`mpi_öv_mod
–&
˘x
->
QP
, &˘x->
Q
, &˘x->
P
 ) );

141 
˘x
->
Àn
 = ( 
	`mpi_msb
–&˘x->
N
 ) + 7 ) >> 3;

143 
˛ónup
:

145 
	`mpi_‰ì
–&
P1
 ); mpi_‰ì–&
Q1
 ); mpi_‰ì–&
H
 ); mpi_‰ì–&
G
 );

147 if–
ªt
 != 0 )

149 
	`rß_‰ì
–
˘x
 );

150 –
POLARSSL_ERR_RSA_KEY_GEN_FAILED
 + 
ªt
 );

154 
	}
}

161 
	$rß_check_pubkey
–c⁄° 
rß_c⁄ãxt
 *
˘x
 )

163 if–!
˘x
->
N
.
p
 || !˘x->
E
.p )

164 –
POLARSSL_ERR_RSA_KEY_CHECK_FAILED
 );

166 if––
˘x
->
N
.
p
[0] & 1 ) == 0 ||

167 –
˘x
->
E
.
p
[0] & 1 ) == 0 )

168 –
POLARSSL_ERR_RSA_KEY_CHECK_FAILED
 );

170 if–
	`mpi_msb
–&
˘x
->
N
 ) < 128 ||

171 
	`mpi_msb
–&
˘x
->
N
 ) > 
POLARSSL_MPI_MAX_BITS
 )

172 –
POLARSSL_ERR_RSA_KEY_CHECK_FAILED
 );

174 if–
	`mpi_msb
–&
˘x
->
E
 ) < 2 ||

175 
	`mpi_cmp_mpi
–&
˘x
->
E
, &˘x->
N
 ) >= 0 )

176 –
POLARSSL_ERR_RSA_KEY_CHECK_FAILED
 );

179 
	}
}

184 
	$rß_check_¥ivkey
–c⁄° 
rß_c⁄ãxt
 *
˘x
 )

186 
ªt
;

187 
mpi
 
PQ
, 
DE
, 
P1
, 
Q1
, 
H
, 
I
, 
G
, 
G2
, 
L1
, 
L2
, 
DP
, 
DQ
, 
QP
;

189 if––
ªt
 = 
	`rß_check_pubkey
–
˘x
 ) ) != 0 )

190 –
ªt
 );

192 if–!
˘x
->
P
.
p
 || !˘x->
Q
.∞|| !˘x->
D
.p )

193 –
POLARSSL_ERR_RSA_KEY_CHECK_FAILED
 );

195 
	`mpi_öô
–&
PQ
 ); mpi_öô–&
DE
 ); mpi_öô–&
P1
 ); mpi_öô–&
Q1
 );

196 
	`mpi_öô
–&
H
 ); mpi_öô–&
I
 ); mpi_öô–&
G
 ); mpi_öô–&
G2
 );

197 
	`mpi_öô
–&
L1
 ); mpi_öô–&
L2
 ); mpi_öô–&
DP
 ); mpi_öô–&
DQ
 );

198 
	`mpi_öô
–&
QP
 );

200 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
PQ
, &
˘x
->
P
, &˘x->
Q
 ) );

201 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
DE
, &
˘x
->
D
, &˘x->
E
 ) );

202 
	`MPI_CHK
–
	`mpi_sub_öt
–&
P1
, &
˘x
->
P
, 1 ) );

203 
	`MPI_CHK
–
	`mpi_sub_öt
–&
Q1
, &
˘x
->
Q
, 1 ) );

204 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
H
, &
P1
, &
Q1
 ) );

205 
	`MPI_CHK
–
	`mpi_gcd
–&
G
, &
˘x
->
E
, &
H
 ) );

207 
	`MPI_CHK
–
	`mpi_gcd
–&
G2
, &
P1
, &
Q1
 ) );

208 
	`MPI_CHK
–
	`mpi_div_mpi
–&
L1
, &
L2
, &
H
, &
G2
 ) );

209 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
I
, &
DE
, &
L1
 ) );

211 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
DP
, &
˘x
->
D
, &
P1
 ) );

212 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
DQ
, &
˘x
->
D
, &
Q1
 ) );

213 
	`MPI_CHK
–
	`mpi_öv_mod
–&
QP
, &
˘x
->
Q
, &˘x->
P
 ) );

217 if–
	`mpi_cmp_mpi
–&
PQ
, &
˘x
->
N
 ) != 0 ||

218 
	`mpi_cmp_mpi
–&
DP
, &
˘x
->DP ) != 0 ||

219 
	`mpi_cmp_mpi
–&
DQ
, &
˘x
->DQ ) != 0 ||

220 
	`mpi_cmp_mpi
–&
QP
, &
˘x
->QP ) != 0 ||

221 
	`mpi_cmp_öt
–&
L2
, 0 ) != 0 ||

222 
	`mpi_cmp_öt
–&
I
, 1 ) != 0 ||

223 
	`mpi_cmp_öt
–&
G
, 1 ) != 0 )

225 
ªt
 = 
POLARSSL_ERR_RSA_KEY_CHECK_FAILED
;

228 
˛ónup
:

229 
	`mpi_‰ì
–&
PQ
 ); mpi_‰ì–&
DE
 ); mpi_‰ì–&
P1
 ); mpi_‰ì–&
Q1
 );

230 
	`mpi_‰ì
–&
H
 ); mpi_‰ì–&
I
 ); mpi_‰ì–&
G
 ); mpi_‰ì–&
G2
 );

231 
	`mpi_‰ì
–&
L1
 ); mpi_‰ì–&
L2
 ); mpi_‰ì–&
DP
 ); mpi_‰ì–&
DQ
 );

232 
	`mpi_‰ì
–&
QP
 );

234 if–
ªt
 =
POLARSSL_ERR_RSA_KEY_CHECK_FAILED
 )

235 –
ªt
 );

237 if–
ªt
 != 0 )

238 –
POLARSSL_ERR_RSA_KEY_CHECK_FAILED
 + 
ªt
 );

241 
	}
}

246 
	$rß_public
–
rß_c⁄ãxt
 *
˘x
,

247 c⁄° *
öput
,

248 *
ouçut
 )

250 
ªt
;

251 
size_t
 
ﬁí
;

252 
mpi
 
T
;

254 
	`mpi_öô
–&
T
 );

256 
	`MPI_CHK
–
	`mpi_ªad_bö¨y
–&
T
, 
öput
, 
˘x
->
Àn
 ) );

258 if–
	`mpi_cmp_mpi
–&
T
, &
˘x
->
N
 ) >= 0 )

260 
	`mpi_‰ì
–&
T
 );

261 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

264 
ﬁí
 = 
˘x
->
Àn
;

265 
	`MPI_CHK
–
	`mpi_exp_mod
–&
T
, &T, &
˘x
->
E
, &˘x->
N
, &˘x->
RN
 ) );

266 
	`MPI_CHK
–
	`mpi_wrôe_bö¨y
–&
T
, 
ouçut
, 
ﬁí
 ) );

268 
˛ónup
:

270 
	`mpi_‰ì
–&
T
 );

272 if–
ªt
 != 0 )

273 –
POLARSSL_ERR_RSA_PUBLIC_FAILED
 + 
ªt
 );

276 
	}
}

278 #i‡!
deföed
(
POLARSSL_RSA_NO_CRT
)

285 
rß_¥ï¨e_blödög
–
rß_c⁄ãxt
 *
˘x
, 
mpi
 *
Vi
, mpò*
Vf
,

286 (*
f_∫g
)(*, *, 
size_t
), *
p_∫g
 )

288 
ªt
, 
cou¡
 = 0;

290 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

291 
	`pﬁ¨s¶_muãx_lock
–&
˘x
->
muãx
 );

294 if–
˘x
->
Vf
.
p
 !
NULL
 )

297 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
˘x
->
Vi
, &ctx->Vi, &ctx->Vi ) );

298 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
˘x
->
Vi
, &˘x->Vi, &˘x->
N
 ) );

299 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
˘x
->
Vf
, &ctx->Vf, &ctx->Vf ) );

300 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
˘x
->
Vf
, &˘x->Vf, &˘x->
N
 ) );

302 
d⁄e
;

307 if–
cou¡
++ > 10 )

308 –
POLARSSL_ERR_RSA_RNG_FAILED
 );

310 
	`MPI_CHK
–
	`mpi_fûl_øndom
–&
˘x
->
Vf
, ctx->
Àn
 - 1, 
f_∫g
, 
p_∫g
 ) );

311 
	`MPI_CHK
–
	`mpi_gcd
–&
˘x
->
Vi
, &˘x->
Vf
, &˘x->
N
 ) );

312 }  
	`mpi_cmp_öt
–&
˘x
->
Vi
, 1 ) != 0 );

315 
	`MPI_CHK
–
	`mpi_öv_mod
–&
˘x
->
Vi
, &˘x->
Vf
, &˘x->
N
 ) );

316 
	`MPI_CHK
–
	`mpi_exp_mod
–&
˘x
->
Vi
, &˘x->Vi, &˘x->
E
, &˘x->
N
, &˘x->
RN
 ) );

318 
d⁄e
:

319 if–
Vi
 !&
˘x
->Vi )

321 
	`MPI_CHK
–
	`mpi_c›y
–
Vi
, &
˘x
->Vi ) );

322 
	`MPI_CHK
–
	`mpi_c›y
–
Vf
, &
˘x
->Vf ) );

325 
˛ónup
:

326 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

327 
	`pﬁ¨s¶_muãx_u∆ock
–&
˘x
->
muãx
 );

330 –
ªt
 );

331 
	}
}

337 
rß_¥iv©e
–
rß_c⁄ãxt
 *
˘x
,

338 (*
f_∫g
)(*, *, 
size_t
),

339 *
p_∫g
,

340 c⁄° *
öput
,

341 *
ouçut
 )

343 
ªt
;

344 
size_t
 
ﬁí
;

345 
mpi
 
T
, 
T1
, 
T2
;

346 #i‡!
	`deföed
(
POLARSSL_RSA_NO_CRT
)

347 
mpi
 *
Vi
, *
Vf
;

354 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

355 
mpi
 
Vi_c›y
, 
Vf_c›y
;

357 
	`mpi_öô
–&
Vi_c›y
 ); mpi_öô–&
Vf_c›y
 );

358 
Vi
 = &
Vi_c›y
;

359 
Vf
 = &
Vf_c›y
;

361 
Vi
 = &
˘x
->Vi;

362 
Vf
 = &
˘x
->Vf;

366 
	`mpi_öô
–&
T
 ); mpi_öô–&
T1
 ); mpi_öô–&
T2
 );

368 
	`MPI_CHK
–
	`mpi_ªad_bö¨y
–&
T
, 
öput
, 
˘x
->
Àn
 ) );

369 if–
	`mpi_cmp_mpi
–&
T
, &
˘x
->
N
 ) >= 0 )

371 
	`mpi_‰ì
–&
T
 );

372 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

375 #i‡
	`deföed
(
POLARSSL_RSA_NO_CRT
)

376 ((Ë
f_∫g
);

377 ((Ë
p_∫g
);

378 
	`MPI_CHK
–
	`mpi_exp_mod
–&
T
, &T, &
˘x
->
D
, &˘x->
N
, &˘x->
RN
 ) );

380 if–
f_∫g
 !
NULL
 )

386 
	`MPI_CHK
–
	`rß_¥ï¨e_blödög
–
˘x
, 
Vi
, 
Vf
, 
f_∫g
, 
p_∫g
 ) );

387 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T
, &T, 
Vi
 ) );

388 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
T
, &T, &
˘x
->
N
 ) );

397 
	`MPI_CHK
–
	`mpi_exp_mod
–&
T1
, &
T
, &
˘x
->
DP
, &˘x->
P
, &˘x->
RP
 ) );

398 
	`MPI_CHK
–
	`mpi_exp_mod
–&
T2
, &
T
, &
˘x
->
DQ
, &˘x->
Q
, &˘x->
RQ
 ) );

403 
	`MPI_CHK
–
	`mpi_sub_mpi
–&
T
, &
T1
, &
T2
 ) );

404 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T1
, &
T
, &
˘x
->
QP
 ) );

405 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
T
, &
T1
, &
˘x
->
P
 ) );

410 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T1
, &
T
, &
˘x
->
Q
 ) );

411 
	`MPI_CHK
–
	`mpi_add_mpi
–&
T
, &
T2
, &
T1
 ) );

413 if–
f_∫g
 !
NULL
 )

419 
	`MPI_CHK
–
	`mpi_mul_mpi
–&
T
, &T, 
Vf
 ) );

420 
	`MPI_CHK
–
	`mpi_mod_mpi
–&
T
, &T, &
˘x
->
N
 ) );

424 
ﬁí
 = 
˘x
->
Àn
;

425 
	`MPI_CHK
–
	`mpi_wrôe_bö¨y
–&
T
, 
ouçut
, 
ﬁí
 ) );

427 
˛ónup
:

428 
	`mpi_‰ì
–&
T
 ); mpi_‰ì–&
T1
 ); mpi_‰ì–&
T2
 );

429 #i‡!
	`deföed
(
POLARSSL_RSA_NO_CRT
Ë&& deföed(
POLARSSL_THREADING_C
)

430 
	`mpi_‰ì
–&
Vi_c›y
 ); mpi_‰ì–&
Vf_c›y
 );

433 if–
ªt
 != 0 )

434 –
POLARSSL_ERR_RSA_PRIVATE_FAILED
 + 
ªt
 );

437 
	}
}

439 #i‡
deföed
(
POLARSSL_PKCS1_V21
)

449 
	$mgf_mask
–*
d°
, 
size_t
 
dÀn
, *
§c
,

450 
size_t
 
¶í
, 
md_c⁄ãxt_t
 *
md_˘x
 )

452 
mask
[
POLARSSL_MD_MAX_SIZE
];

453 
cou¡î
[4];

454 *
p
;

455 
hÀn
;

456 
size_t
 
i
, 
u£_Àn
;

458 
	`mem£t
–
mask
, 0, 
POLARSSL_MD_MAX_SIZE
 );

459 
	`mem£t
–
cou¡î
, 0, 4 );

461 
hÀn
 = 
md_˘x
->
md_öfo
->
size
;

465 
p
 = 
d°
;

467  
dÀn
 > 0 )

469 
u£_Àn
 = 
hÀn
;

470 if–
dÀn
 < 
hÀn
 )

471 
u£_Àn
 = 
dÀn
;

473 
	`md_°¨ts
–
md_˘x
 );

474 
	`md_upd©e
–
md_˘x
, 
§c
, 
¶í
 );

475 
	`md_upd©e
–
md_˘x
, 
cou¡î
, 4 );

476 
	`md_föish
–
md_˘x
, 
mask
 );

478  
i
 = 0; i < 
u£_Àn
; ++i )

479 *
p
++ ^
mask
[
i
];

481 
cou¡î
[3]++;

483 
dÀn
 -
u£_Àn
;

485 
	}
}

488 #i‡
deföed
(
POLARSSL_PKCS1_V21
)

492 
rß_rßes_ﬂï_í¸y±
–
rß_c⁄ãxt
 *
˘x
,

493 (*
f_∫g
)(*, *, 
size_t
),

494 *
p_∫g
,

495 
mode
,

496 c⁄° *
œbñ
, 
size_t
 
œbñ_Àn
,

497 
size_t
 
ûí
,

498 c⁄° *
öput
,

499 *
ouçut
 )

501 
size_t
 
ﬁí
;

502 
ªt
;

503 *
p
 = 
ouçut
;

504 
hÀn
;

505 c⁄° 
md_öfo_t
 *
md_öfo
;

506 
md_c⁄ãxt_t
 
md_˘x
;

508 if–
mode
 =
RSA_PRIVATE
 && 
˘x
->
∑ddög
 !
RSA_PKCS_V21
 )

509 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

511 if–
f_∫g
 =
NULL
 )

512 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

514 
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
˘x
->
hash_id
 );

515 if–
md_öfo
 =
NULL
 )

516 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

518 
ﬁí
 = 
˘x
->
Àn
;

519 
hÀn
 = 
	`md_gë_size
–
md_öfo
 );

521 if–
ﬁí
 < 
ûí
 + 2 * 
hÀn
 + 2 )

522 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

524 
	`mem£t
–
ouçut
, 0, 
ﬁí
 );

526 *
p
++ = 0;

530 if––
ªt
 = 
	`f_∫g
–
p_∫g
, 
p
, 
hÀn
 ) ) != 0 )

531 –
POLARSSL_ERR_RSA_RNG_FAILED
 + 
ªt
 );

533 
p
 +
hÀn
;

537 
	`md
–
md_öfo
, 
œbñ
, 
œbñ_Àn
, 
p
 );

538 
p
 +
hÀn
;

539 
p
 +
ﬁí
 - 2 * 
hÀn
 - 2 - 
ûí
;

540 *
p
++ = 1;

541 
	`mem˝y
–
p
, 
öput
, 
ûí
 );

543 
	`md_öô
–&
md_˘x
 );

544 
	`md_öô_˘x
–&
md_˘x
, 
md_öfo
 );

548 
	`mgf_mask
–
ouçut
 + 
hÀn
 + 1, 
ﬁí
 - hlen - 1, output + 1, hlen,

549 &
md_˘x
 );

553 
	`mgf_mask
–
ouçut
 + 1, 
hÀn
, ouçuà+ hÀ¿+ 1, 
ﬁí
 - hlen - 1,

554 &
md_˘x
 );

556 
	`md_‰ì
–&
md_˘x
 );

558 ––
mode
 =
RSA_PUBLIC
 )

559 ? 
	`rß_public
–
˘x
, 
ouçut
, output )

560 : 
	`rß_¥iv©e
–
˘x
, 
f_∫g
, 
p_∫g
, 
ouçut
, output ) );

561 
	}
}

564 #i‡
deföed
(
POLARSSL_PKCS1_V15
)

568 
rß_rßes_pkcs1_v15_í¸y±
–
rß_c⁄ãxt
 *
˘x
,

569 (*
f_∫g
)(*, *, 
size_t
),

570 *
p_∫g
,

571 
mode
, 
size_t
 
ûí
,

572 c⁄° *
öput
,

573 *
ouçut
 )

575 
size_t
 
nb_∑d
, 
ﬁí
;

576 
ªt
;

577 *
p
 = 
ouçut
;

579 if–
mode
 =
RSA_PRIVATE
 && 
˘x
->
∑ddög
 !
RSA_PKCS_V15
 )

580 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

582 if–
f_∫g
 =
NULL
 )

583 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

585 
ﬁí
 = 
˘x
->
Àn
;

587 if–
ﬁí
 < 
ûí
 + 11 )

588 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

590 
nb_∑d
 = 
ﬁí
 - 3 - 
ûí
;

592 *
p
++ = 0;

593 if–
mode
 =
RSA_PUBLIC
 )

595 *
p
++ = 
RSA_CRYPT
;

597  
nb_∑d
-- > 0 )

599 
∫g_dl
 = 100;

602 
ªt
 = 
	`f_∫g
–
p_∫g
, 
p
, 1 );

603 }  *
p
 =0 && --
∫g_dl
 && 
ªt
 == 0 );

607 if–
∫g_dl
 =0 || 
ªt
 != 0 )

608 –
POLARSSL_ERR_RSA_RNG_FAILED
 + 
ªt
 );

610 
p
++;

615 *
p
++ = 
RSA_SIGN
;

617  
nb_∑d
-- > 0 )

618 *
p
++ = 0xFF;

621 *
p
++ = 0;

622 
	`mem˝y
–
p
, 
öput
, 
ûí
 );

624 ––
mode
 =
RSA_PUBLIC
 )

625 ? 
	`rß_public
–
˘x
, 
ouçut
, output )

626 : 
	`rß_¥iv©e
–
˘x
, 
f_∫g
, 
p_∫g
, 
ouçut
, output ) );

627 
	}
}

633 
rß_pkcs1_í¸y±
–
rß_c⁄ãxt
 *
˘x
,

634 (*
f_∫g
)(*, *, 
size_t
),

635 *
p_∫g
,

636 
mode
, 
size_t
 
ûí
,

637 c⁄° *
öput
,

638 *
ouçut
 )

640  
˘x
->
∑ddög
 )

642 #i‡
	`deföed
(
POLARSSL_PKCS1_V15
)

643 
RSA_PKCS_V15
:

644  
	`rß_rßes_pkcs1_v15_í¸y±
–
˘x
, 
f_∫g
, 
p_∫g
, 
mode
, 
ûí
,

645 
öput
, 
ouçut
 );

648 #i‡
	`deföed
(
POLARSSL_PKCS1_V21
)

649 
RSA_PKCS_V21
:

650  
	`rß_rßes_ﬂï_í¸y±
–
˘x
, 
f_∫g
, 
p_∫g
, 
mode
, 
NULL
, 0,

651 
ûí
, 
öput
, 
ouçut
 );

655 –
POLARSSL_ERR_RSA_INVALID_PADDING
 );

657 
	}
}

659 #i‡
deföed
(
POLARSSL_PKCS1_V21
)

663 
rß_rßes_ﬂï_de¸y±
–
rß_c⁄ãxt
 *
˘x
,

664 (*
f_∫g
)(*, *, 
size_t
),

665 *
p_∫g
,

666 
mode
,

667 c⁄° *
œbñ
, 
size_t
 
œbñ_Àn
,

668 
size_t
 *
ﬁí
,

669 c⁄° *
öput
,

670 *
ouçut
,

671 
size_t
 
ouçut_max_Àn
 )

673 
ªt
;

674 
size_t
 
ûí
, 
i
, 
∑d_Àn
;

675 *
p
, 
bad
, 
∑d_d⁄e
;

676 
buf
[
POLARSSL_MPI_MAX_SIZE
];

677 
lhash
[
POLARSSL_MD_MAX_SIZE
];

678 
hÀn
;

679 c⁄° 
md_öfo_t
 *
md_öfo
;

680 
md_c⁄ãxt_t
 
md_˘x
;

685 if–
mode
 =
RSA_PRIVATE
 && 
˘x
->
∑ddög
 !
RSA_PKCS_V21
 )

686 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

688 
ûí
 = 
˘x
->
Àn
;

690 if–
ûí
 < 16 || iÀ¿> –
buf
 ) )

691 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

693 
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
˘x
->
hash_id
 );

694 if–
md_öfo
 =
NULL
 )

695 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

700 
ªt
 = ( 
mode
 =
RSA_PUBLIC
 )

701 ? 
	`rß_public
–
˘x
, 
öput
, 
buf
 )

702 : 
	`rß_¥iv©e
–
˘x
, 
f_∫g
, 
p_∫g
, 
öput
, 
buf
 );

704 if–
ªt
 != 0 )

705 –
ªt
 );

710 
hÀn
 = 
	`md_gë_size
–
md_öfo
 );

712 
	`md_öô
–&
md_˘x
 );

713 
	`md_öô_˘x
–&
md_˘x
, 
md_öfo
 );

716 
	`md
–
md_öfo
, 
œbñ
, 
œbñ_Àn
, 
lhash
 );

719 
	`mgf_mask
–
buf
 + 1, 
hÀn
, bu‡+ hÀ¿+ 1, 
ûí
 - hlen - 1,

720 &
md_˘x
 );

723 
	`mgf_mask
–
buf
 + 
hÀn
 + 1, 
ûí
 - hlen - 1, buf + 1, hlen,

724 &
md_˘x
 );

726 
	`md_‰ì
–&
md_˘x
 );

731 
p
 = 
buf
;

732 
bad
 = 0;

734 
bad
 |*
p
++;

736 
p
 +
hÀn
;

739  
i
 = 0; i < 
hÀn
; i++ )

740 
bad
 |
lhash
[
i
] ^ *
p
++;

744 
∑d_Àn
 = 0;

745 
∑d_d⁄e
 = 0;

746  
i
 = 0; i < 
ûí
 - 2 * 
hÀn
 - 2; i++ )

748 
∑d_d⁄e
 |
p
[
i
];

749 
∑d_Àn
 +–
∑d_d⁄e
 == 0 );

752 
p
 +
∑d_Àn
;

753 
bad
 |*
p
++ ^ 0x01;

761 if–
bad
 != 0 )

762 –
POLARSSL_ERR_RSA_INVALID_PADDING
 );

764 if–
ûí
 - ( 
p
 - 
buf
 ) > 
ouçut_max_Àn
 )

765 –
POLARSSL_ERR_RSA_OUTPUT_TOO_LARGE
 );

767 *
ﬁí
 = 
ûí
 - (
p
 - 
buf
);

768 
	`mem˝y
–
ouçut
, 
p
, *
ﬁí
 );

771 
	}
}

774 #i‡
deföed
(
POLARSSL_PKCS1_V15
)

778 
rß_rßes_pkcs1_v15_de¸y±
–
rß_c⁄ãxt
 *
˘x
,

779 (*
f_∫g
)(*, *, 
size_t
),

780 *
p_∫g
,

781 
mode
, 
size_t
 *
ﬁí
,

782 c⁄° *
öput
,

783 *
ouçut
,

784 
size_t
 
ouçut_max_Àn
)

786 
ªt
;

787 
size_t
 
ûí
, 
∑d_cou¡
 = 0, 
i
;

788 *
p
, 
bad
, 
∑d_d⁄e
 = 0;

789 
buf
[
POLARSSL_MPI_MAX_SIZE
];

791 if–
mode
 =
RSA_PRIVATE
 && 
˘x
->
∑ddög
 !
RSA_PKCS_V15
 )

792 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

794 
ûí
 = 
˘x
->
Àn
;

796 if–
ûí
 < 16 || iÀ¿> –
buf
 ) )

797 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

799 
ªt
 = ( 
mode
 =
RSA_PUBLIC
 )

800 ? 
	`rß_public
–
˘x
, 
öput
, 
buf
 )

801 : 
	`rß_¥iv©e
–
˘x
, 
f_∫g
, 
p_∫g
, 
öput
, 
buf
 );

803 if–
ªt
 != 0 )

804 –
ªt
 );

806 
p
 = 
buf
;

807 
bad
 = 0;

812 
bad
 |*
p
++;

815 if–
mode
 =
RSA_PRIVATE
 )

817 
bad
 |*
p
++ ^ 
RSA_CRYPT
;

821  
i
 = 0; i < 
ûí
 - 3; i++ )

823 
∑d_d⁄e
 |–
p
[
i
] == 0 );

824 
∑d_cou¡
 +–
∑d_d⁄e
 == 0 );

827 
p
 +
∑d_cou¡
;

828 
bad
 |*
p
++;

832 
bad
 |*
p
++ ^ 
RSA_SIGN
;

836  
i
 = 0; i < 
ûí
 - 3; i++ )

838 
∑d_d⁄e
 |–
p
[
i
] != 0xFF );

839 
∑d_cou¡
 +–
∑d_d⁄e
 == 0 );

842 
p
 +
∑d_cou¡
;

843 
bad
 |*
p
++;

846 if–
bad
 )

847 –
POLARSSL_ERR_RSA_INVALID_PADDING
 );

849 if–
ûí
 - ( 
p
 - 
buf
 ) > 
ouçut_max_Àn
 )

850 –
POLARSSL_ERR_RSA_OUTPUT_TOO_LARGE
 );

852 *
ﬁí
 = 
ûí
 - (
p
 - 
buf
);

853 
	`mem˝y
–
ouçut
, 
p
, *
ﬁí
 );

856 
	}
}

862 
rß_pkcs1_de¸y±
–
rß_c⁄ãxt
 *
˘x
,

863 (*
f_∫g
)(*, *, 
size_t
),

864 *
p_∫g
,

865 
mode
, 
size_t
 *
ﬁí
,

866 c⁄° *
öput
,

867 *
ouçut
,

868 
size_t
 
ouçut_max_Àn
)

870  
˘x
->
∑ddög
 )

872 #i‡
	`deföed
(
POLARSSL_PKCS1_V15
)

873 
RSA_PKCS_V15
:

874  
	`rß_rßes_pkcs1_v15_de¸y±
–
˘x
, 
f_∫g
, 
p_∫g
, 
mode
, 
ﬁí
,

875 
öput
, 
ouçut
, 
ouçut_max_Àn
 );

878 #i‡
	`deföed
(
POLARSSL_PKCS1_V21
)

879 
RSA_PKCS_V21
:

880  
	`rß_rßes_ﬂï_de¸y±
–
˘x
, 
f_∫g
, 
p_∫g
, 
mode
, 
NULL
, 0,

881 
ﬁí
, 
öput
, 
ouçut
,

882 
ouçut_max_Àn
 );

886 –
POLARSSL_ERR_RSA_INVALID_PADDING
 );

888 
	}
}

890 #i‡
deföed
(
POLARSSL_PKCS1_V21
)

894 
rß_rßsß_pss_sign
–
rß_c⁄ãxt
 *
˘x
,

895 (*
f_∫g
)(*, *, 
size_t
),

896 *
p_∫g
,

897 
mode
,

898 
md_ty≥_t
 
md_Æg
,

899 
hashÀn
,

900 c⁄° *
hash
,

901 *
sig
 )

903 
size_t
 
ﬁí
;

904 *
p
 = 
sig
;

905 
ß…
[
POLARSSL_MD_MAX_SIZE
];

906 
¶í
, 
hÀn
, 
off£t
 = 0;

907 
ªt
;

908 
size_t
 
msb
;

909 c⁄° 
md_öfo_t
 *
md_öfo
;

910 
md_c⁄ãxt_t
 
md_˘x
;

912 if–
mode
 =
RSA_PRIVATE
 && 
˘x
->
∑ddög
 !
RSA_PKCS_V21
 )

913 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

915 if–
f_∫g
 =
NULL
 )

916 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

918 
ﬁí
 = 
˘x
->
Àn
;

920 if–
md_Æg
 !
POLARSSL_MD_NONE
 )

924 
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
md_Æg
 );

925 if–
md_öfo
 =
NULL
 )

926 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

928 
hashÀn
 = 
	`md_gë_size
–
md_öfo
 );

931 
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
˘x
->
hash_id
 );

932 if–
md_öfo
 =
NULL
 )

933 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

935 
hÀn
 = 
	`md_gë_size
–
md_öfo
 );

936 
¶í
 = 
hÀn
;

938 if–
ﬁí
 < 
hÀn
 + 
¶í
 + 2 )

939 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

941 
	`mem£t
–
sig
, 0, 
ﬁí
 );

945 if––
ªt
 = 
	`f_∫g
–
p_∫g
, 
ß…
, 
¶í
 ) ) != 0 )

946 –
POLARSSL_ERR_RSA_RNG_FAILED
 + 
ªt
 );

950 
msb
 = 
	`mpi_msb
–&
˘x
->
N
 ) - 1;

951 
p
 +
ﬁí
 - 
hÀn
 * 2 - 2;

952 *
p
++ = 0x01;

953 
	`mem˝y
–
p
, 
ß…
, 
¶í
 );

954 
p
 +
¶í
;

956 
	`md_öô
–&
md_˘x
 );

957 
	`md_öô_˘x
–&
md_˘x
, 
md_öfo
 );

961 
	`md_°¨ts
–&
md_˘x
 );

962 
	`md_upd©e
–&
md_˘x
, 
p
, 8 );

963 
	`md_upd©e
–&
md_˘x
, 
hash
, 
hashÀn
 );

964 
	`md_upd©e
–&
md_˘x
, 
ß…
, 
¶í
 );

965 
	`md_föish
–&
md_˘x
, 
p
 );

969 if–
msb
 % 8 == 0 )

970 
off£t
 = 1;

974 
	`mgf_mask
–
sig
 + 
off£t
, 
ﬁí
 - 
hÀn
 - 1 - off£t, 
p
, hÀn, &
md_˘x
 );

976 
	`md_‰ì
–&
md_˘x
 );

978 
msb
 = 
	`mpi_msb
–&
˘x
->
N
 ) - 1;

979 
sig
[0] &0xFF >> ( 
ﬁí
 * 8 - 
msb
 );

981 
p
 +
hÀn
;

982 *
p
++ = 0xBC;

984 ––
mode
 =
RSA_PUBLIC
 )

985 ? 
	`rß_public
–
˘x
, 
sig
, sig )

986 : 
	`rß_¥iv©e
–
˘x
, 
f_∫g
, 
p_∫g
, 
sig
, sig ) );

987 
	}
}

990 #i‡
deföed
(
POLARSSL_PKCS1_V15
)

997 
rß_rßsß_pkcs1_v15_sign
–
rß_c⁄ãxt
 *
˘x
,

998 (*
f_∫g
)(*, *, 
size_t
),

999 *
p_∫g
,

1000 
mode
,

1001 
md_ty≥_t
 
md_Æg
,

1002 
hashÀn
,

1003 c⁄° *
hash
,

1004 *
sig
 )

1006 
size_t
 
nb_∑d
, 
ﬁí
, 
oid_size
 = 0;

1007 *
p
 = 
sig
;

1008 c⁄° *
oid
;

1010 if–
mode
 =
RSA_PRIVATE
 && 
˘x
->
∑ddög
 !
RSA_PKCS_V15
 )

1011 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

1013 
ﬁí
 = 
˘x
->
Àn
;

1014 
nb_∑d
 = 
ﬁí
 - 3;

1016 if–
md_Æg
 !
POLARSSL_MD_NONE
 )

1018 c⁄° 
md_öfo_t
 *
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
md_Æg
 );

1019 if–
md_öfo
 =
NULL
 )

1020 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

1022 if–
	`oid_gë_oid_by_md
–
md_Æg
, &
oid
, &
oid_size
 ) != 0 )

1023 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

1025 
nb_∑d
 -10 + 
oid_size
;

1027 
hashÀn
 = 
	`md_gë_size
–
md_öfo
 );

1030 
nb_∑d
 -
hashÀn
;

1032 if––
nb_∑d
 < 8 ) || (Çb_∑d > 
ﬁí
 ) )

1033 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

1035 *
p
++ = 0;

1036 *
p
++ = 
RSA_SIGN
;

1037 
	`mem£t
–
p
, 0xFF, 
nb_∑d
 );

1038 
p
 +
nb_∑d
;

1039 *
p
++ = 0;

1041 if–
md_Æg
 =
POLARSSL_MD_NONE
 )

1043 
	`mem˝y
–
p
, 
hash
, 
hashÀn
 );

1056 *
p
++ = 
ASN1_SEQUENCE
 | 
ASN1_CONSTRUCTED
;

1057 *
p
++ = (Ë–0x08 + 
oid_size
 + 
hashÀn
 );

1058 *
p
++ = 
ASN1_SEQUENCE
 | 
ASN1_CONSTRUCTED
;

1059 *
p
++ = (Ë–0x04 + 
oid_size
 );

1060 *
p
++ = 
ASN1_OID
;

1061 *
p
++ = 
oid_size
 & 0xFF;

1062 
	`mem˝y
–
p
, 
oid
, 
oid_size
 );

1063 
p
 +
oid_size
;

1064 *
p
++ = 
ASN1_NULL
;

1065 *
p
++ = 0x00;

1066 *
p
++ = 
ASN1_OCTET_STRING
;

1067 *
p
++ = 
hashÀn
;

1068 
	`mem˝y
–
p
, 
hash
, 
hashÀn
 );

1071 ––
mode
 =
RSA_PUBLIC
 )

1072 ? 
	`rß_public
–
˘x
, 
sig
, sig )

1073 : 
	`rß_¥iv©e
–
˘x
, 
f_∫g
, 
p_∫g
, 
sig
, sig ) );

1074 
	}
}

1080 
rß_pkcs1_sign
–
rß_c⁄ãxt
 *
˘x
,

1081 (*
f_∫g
)(*, *, 
size_t
),

1082 *
p_∫g
,

1083 
mode
,

1084 
md_ty≥_t
 
md_Æg
,

1085 
hashÀn
,

1086 c⁄° *
hash
,

1087 *
sig
 )

1089  
˘x
->
∑ddög
 )

1091 #i‡
	`deföed
(
POLARSSL_PKCS1_V15
)

1092 
RSA_PKCS_V15
:

1093  
	`rß_rßsß_pkcs1_v15_sign
–
˘x
, 
f_∫g
, 
p_∫g
, 
mode
, 
md_Æg
,

1094 
hashÀn
, 
hash
, 
sig
 );

1097 #i‡
	`deföed
(
POLARSSL_PKCS1_V21
)

1098 
RSA_PKCS_V21
:

1099  
	`rß_rßsß_pss_sign
–
˘x
, 
f_∫g
, 
p_∫g
, 
mode
, 
md_Æg
,

1100 
hashÀn
, 
hash
, 
sig
 );

1104 –
POLARSSL_ERR_RSA_INVALID_PADDING
 );

1106 
	}
}

1108 #i‡
deföed
(
POLARSSL_PKCS1_V21
)

1112 
rß_rßsß_pss_vîify_ext
–
rß_c⁄ãxt
 *
˘x
,

1113 (*
f_∫g
)(*, *, 
size_t
),

1114 *
p_∫g
,

1115 
mode
,

1116 
md_ty≥_t
 
md_Æg
,

1117 
hashÀn
,

1118 c⁄° *
hash
,

1119 
md_ty≥_t
 
mgf1_hash_id
,

1120 
ex≥˘ed_ß…_Àn
,

1121 c⁄° *
sig
 )

1123 
ªt
;

1124 
size_t
 
sigÀn
;

1125 *
p
;

1126 
buf
[
POLARSSL_MPI_MAX_SIZE
];

1127 
ªsu…
[
POLARSSL_MD_MAX_SIZE
];

1128 
zîos
[8];

1129 
hÀn
;

1130 
size_t
 
¶í
, 
msb
;

1131 c⁄° 
md_öfo_t
 *
md_öfo
;

1132 
md_c⁄ãxt_t
 
md_˘x
;

1134 if–
mode
 =
RSA_PRIVATE
 && 
˘x
->
∑ddög
 !
RSA_PKCS_V21
 )

1135 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

1137 
sigÀn
 = 
˘x
->
Àn
;

1139 if–
sigÀn
 < 16 || sigÀ¿> –
buf
 ) )

1140 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

1142 
ªt
 = ( 
mode
 =
RSA_PUBLIC
 )

1143 ? 
	`rß_public
–
˘x
, 
sig
, 
buf
 )

1144 : 
	`rß_¥iv©e
–
˘x
, 
f_∫g
, 
p_∫g
, 
sig
, 
buf
 );

1146 if–
ªt
 != 0 )

1147 –
ªt
 );

1149 
p
 = 
buf
;

1151 if–
buf
[
sigÀn
 - 1] != 0xBC )

1152 –
POLARSSL_ERR_RSA_INVALID_PADDING
 );

1154 if–
md_Æg
 !
POLARSSL_MD_NONE
 )

1158 
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
md_Æg
 );

1159 if–
md_öfo
 =
NULL
 )

1160 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

1162 
hashÀn
 = 
	`md_gë_size
–
md_öfo
 );

1165 
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
mgf1_hash_id
 );

1166 if–
md_öfo
 =
NULL
 )

1167 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

1169 
hÀn
 = 
	`md_gë_size
–
md_öfo
 );

1170 
¶í
 = 
sigÀn
 - 
hÀn
 - 1;

1172 
	`mem£t
–
zîos
, 0, 8 );

1176 
msb
 = 
	`mpi_msb
–&
˘x
->
N
 ) - 1;

1180 if–
msb
 % 8 == 0 )

1182 
p
++;

1183 
sigÀn
 -= 1;

1185 if–
buf
[0] >> ( 8 - 
sigÀn
 * 8 + 
msb
 ) )

1186 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

1188 
	`md_öô
–&
md_˘x
 );

1189 
	`md_öô_˘x
–&
md_˘x
, 
md_öfo
 );

1191 
	`mgf_mask
–
p
, 
sigÀn
 - 
hÀn
 - 1,Ö + sigÀ¿- hÀ¿- 1, hÀn, &
md_˘x
 );

1193 
buf
[0] &0xFF >> ( 
sigÀn
 * 8 - 
msb
 );

1195  
p
 < 
buf
 + 
sigÀn
 && *p == 0 )

1196 
p
++;

1198 if–
p
 =
buf
 + 
sigÀn
 ||

1199 *
p
++ != 0x01 )

1201 
	`md_‰ì
–&
md_˘x
 );

1202 –
POLARSSL_ERR_RSA_INVALID_PADDING
 );

1206 
¶í
 -
p
 - 
buf
;

1208 if–
ex≥˘ed_ß…_Àn
 !
RSA_SALT_LEN_ANY
 &&

1209 
¶í
 !(
size_t
Ë
ex≥˘ed_ß…_Àn
 )

1211 
	`md_‰ì
–&
md_˘x
 );

1212 –
POLARSSL_ERR_RSA_INVALID_PADDING
 );

1217 
	`md_°¨ts
–&
md_˘x
 );

1218 
	`md_upd©e
–&
md_˘x
, 
zîos
, 8 );

1219 
	`md_upd©e
–&
md_˘x
, 
hash
, 
hashÀn
 );

1220 
	`md_upd©e
–&
md_˘x
, 
p
, 
¶í
 );

1221 
	`md_föish
–&
md_˘x
, 
ªsu…
 );

1223 
	`md_‰ì
–&
md_˘x
 );

1225 if–
	`memcmp
–
p
 + 
¶í
, 
ªsu…
, 
hÀn
 ) == 0 )

1228 –
POLARSSL_ERR_RSA_VERIFY_FAILED
 );

1229 
	}
}

1234 
rß_rßsß_pss_vîify
–
rß_c⁄ãxt
 *
˘x
,

1235 (*
f_∫g
)(*, *, 
size_t
),

1236 *
p_∫g
,

1237 
mode
,

1238 
md_ty≥_t
 
md_Æg
,

1239 
hashÀn
,

1240 c⁄° *
hash
,

1241 c⁄° *
sig
 )

1243 
md_ty≥_t
 
mgf1_hash_id
 = ( 
˘x
->
hash_id
 !
POLARSSL_MD_NONE
 )

1244 ? (
md_ty≥_t
Ë
˘x
->
hash_id


1245 : 
md_Æg
;

1247 –
	`rß_rßsß_pss_vîify_ext
–
˘x
, 
f_∫g
, 
p_∫g
, 
mode
,

1248 
md_Æg
, 
hashÀn
, 
hash
,

1249 
mgf1_hash_id
, 
RSA_SALT_LEN_ANY
,

1250 
sig
 ) );

1252 
	}
}

1255 #i‡
deföed
(
POLARSSL_PKCS1_V15
)

1259 
rß_rßsß_pkcs1_v15_vîify
–
rß_c⁄ãxt
 *
˘x
,

1260 (*
f_∫g
)(*, *, 
size_t
),

1261 *
p_∫g
,

1262 
mode
,

1263 
md_ty≥_t
 
md_Æg
,

1264 
hashÀn
,

1265 c⁄° *
hash
,

1266 c⁄° *
sig
 )

1268 
ªt
;

1269 
size_t
 
Àn
, 
sigÀn
, 
a¢1_Àn
;

1270 *
p
, *
íd
;

1271 
buf
[
POLARSSL_MPI_MAX_SIZE
];

1272 
md_ty≥_t
 
msg_md_Æg
;

1273 c⁄° 
md_öfo_t
 *
md_öfo
;

1274 
a¢1_buf
 
oid
;

1276 if–
mode
 =
RSA_PRIVATE
 && 
˘x
->
∑ddög
 !
RSA_PKCS_V15
 )

1277 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

1279 
sigÀn
 = 
˘x
->
Àn
;

1281 if–
sigÀn
 < 16 || sigÀ¿> –
buf
 ) )

1282 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

1284 
ªt
 = ( 
mode
 =
RSA_PUBLIC
 )

1285 ? 
	`rß_public
–
˘x
, 
sig
, 
buf
 )

1286 : 
	`rß_¥iv©e
–
˘x
, 
f_∫g
, 
p_∫g
, 
sig
, 
buf
 );

1288 if–
ªt
 != 0 )

1289 –
ªt
 );

1291 
p
 = 
buf
;

1293 if–*
p
++ !0 || *p++ !
RSA_SIGN
 )

1294 –
POLARSSL_ERR_RSA_INVALID_PADDING
 );

1296  *
p
 != 0 )

1298 if–
p
 >
buf
 + 
sigÀn
 - 1 || *p != 0xFF )

1299 –
POLARSSL_ERR_RSA_INVALID_PADDING
 );

1300 
p
++;

1302 
p
++;

1304 
Àn
 = 
sigÀn
 - ( 
p
 - 
buf
 );

1306 if–
Àn
 =
hashÀn
 && 
md_Æg
 =
POLARSSL_MD_NONE
 )

1308 if–
	`memcmp
–
p
, 
hash
, 
hashÀn
 ) == 0 )

1311 –
POLARSSL_ERR_RSA_VERIFY_FAILED
 );

1314 
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
md_Æg
 );

1315 if–
md_öfo
 =
NULL
 )

1316 –
POLARSSL_ERR_RSA_BAD_INPUT_DATA
 );

1317 
hashÀn
 = 
	`md_gë_size
–
md_öfo
 );

1319 
íd
 = 
p
 + 
Àn
;

1323 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
a¢1_Àn
,

1324 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

1325 –
POLARSSL_ERR_RSA_VERIFY_FAILED
 );

1327 if–
a¢1_Àn
 + 2 !
Àn
 )

1328 –
POLARSSL_ERR_RSA_VERIFY_FAILED
 );

1330 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
a¢1_Àn
,

1331 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

1332 –
POLARSSL_ERR_RSA_VERIFY_FAILED
 );

1334 if–
a¢1_Àn
 + 6 + 
hashÀn
 !
Àn
 )

1335 –
POLARSSL_ERR_RSA_VERIFY_FAILED
 );

1337 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
oid
.
Àn
, 
ASN1_OID
 ) ) != 0 )

1338 –
POLARSSL_ERR_RSA_VERIFY_FAILED
 );

1340 
oid
.
p
 =Ö;

1341 
p
 +
oid
.
Àn
;

1343 if–
	`oid_gë_md_Æg
–&
oid
, &
msg_md_Æg
 ) != 0 )

1344 –
POLARSSL_ERR_RSA_VERIFY_FAILED
 );

1346 if–
md_Æg
 !
msg_md_Æg
 )

1347 –
POLARSSL_ERR_RSA_VERIFY_FAILED
 );

1352 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
a¢1_Àn
, 
ASN1_NULL
 ) ) != 0 )

1353 –
POLARSSL_ERR_RSA_VERIFY_FAILED
 );

1355 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
a¢1_Àn
, 
ASN1_OCTET_STRING
 ) ) != 0 )

1356 –
POLARSSL_ERR_RSA_VERIFY_FAILED
 );

1358 if–
a¢1_Àn
 !
hashÀn
 )

1359 –
POLARSSL_ERR_RSA_VERIFY_FAILED
 );

1361 if–
	`memcmp
–
p
, 
hash
, 
hashÀn
 ) != 0 )

1362 –
POLARSSL_ERR_RSA_VERIFY_FAILED
 );

1364 
p
 +
hashÀn
;

1366 if–
p
 !
íd
 )

1367 –
POLARSSL_ERR_RSA_VERIFY_FAILED
 );

1370 
	}
}

1376 
rß_pkcs1_vîify
–
rß_c⁄ãxt
 *
˘x
,

1377 (*
f_∫g
)(*, *, 
size_t
),

1378 *
p_∫g
,

1379 
mode
,

1380 
md_ty≥_t
 
md_Æg
,

1381 
hashÀn
,

1382 c⁄° *
hash
,

1383 c⁄° *
sig
 )

1385  
˘x
->
∑ddög
 )

1387 #i‡
	`deföed
(
POLARSSL_PKCS1_V15
)

1388 
RSA_PKCS_V15
:

1389  
	`rß_rßsß_pkcs1_v15_vîify
–
˘x
, 
f_∫g
, 
p_∫g
, 
mode
, 
md_Æg
,

1390 
hashÀn
, 
hash
, 
sig
 );

1393 #i‡
	`deföed
(
POLARSSL_PKCS1_V21
)

1394 
RSA_PKCS_V21
:

1395  
	`rß_rßsß_pss_vîify
–
˘x
, 
f_∫g
, 
p_∫g
, 
mode
, 
md_Æg
,

1396 
hashÀn
, 
hash
, 
sig
 );

1400 –
POLARSSL_ERR_RSA_INVALID_PADDING
 );

1402 
	}
}

1407 
	$rß_c›y
–
rß_c⁄ãxt
 *
d°
, c⁄°Ñß_c⁄ãxà*
§c
 )

1409 
ªt
;

1411 
d°
->
vî
 = 
§c
->ver;

1412 
d°
->
Àn
 = 
§c
->len;

1414 
	`MPI_CHK
–
	`mpi_c›y
–&
d°
->
N
, &
§c
->N ) );

1415 
	`MPI_CHK
–
	`mpi_c›y
–&
d°
->
E
, &
§c
->E ) );

1417 
	`MPI_CHK
–
	`mpi_c›y
–&
d°
->
D
, &
§c
->D ) );

1418 
	`MPI_CHK
–
	`mpi_c›y
–&
d°
->
P
, &
§c
->P ) );

1419 
	`MPI_CHK
–
	`mpi_c›y
–&
d°
->
Q
, &
§c
->Q ) );

1420 
	`MPI_CHK
–
	`mpi_c›y
–&
d°
->
DP
, &
§c
->DP ) );

1421 
	`MPI_CHK
–
	`mpi_c›y
–&
d°
->
DQ
, &
§c
->DQ ) );

1422 
	`MPI_CHK
–
	`mpi_c›y
–&
d°
->
QP
, &
§c
->QP ) );

1424 
	`MPI_CHK
–
	`mpi_c›y
–&
d°
->
RN
, &
§c
->RN ) );

1425 
	`MPI_CHK
–
	`mpi_c›y
–&
d°
->
RP
, &
§c
->RP ) );

1426 
	`MPI_CHK
–
	`mpi_c›y
–&
d°
->
RQ
, &
§c
->RQ ) );

1428 #i‡!
	`deföed
(
POLARSSL_RSA_NO_CRT
)

1429 
	`MPI_CHK
–
	`mpi_c›y
–&
d°
->
Vi
, &
§c
->Vi ) );

1430 
	`MPI_CHK
–
	`mpi_c›y
–&
d°
->
Vf
, &
§c
->Vf ) );

1433 
d°
->
∑ddög
 = 
§c
->padding;

1434 
d°
->
hash_id
 = 
§c
->hash_id;

1436 
˛ónup
:

1437 if–
ªt
 != 0 )

1438 
	`rß_‰ì
–
d°
 );

1440 –
ªt
 );

1441 
	}
}

1446 
	$rß_‰ì
–
rß_c⁄ãxt
 *
˘x
 )

1448 #i‡!
	`deföed
(
POLARSSL_RSA_NO_CRT
)

1449 
	`mpi_‰ì
–&
˘x
->
Vi
 ); mpi_‰ì–&˘x->
Vf
 );

1451 
	`mpi_‰ì
–&
˘x
->
RQ
 ); mpi_‰ì–&˘x->
RP
 ); mpi_‰ì–&˘x->
RN
 );

1452 
	`mpi_‰ì
–&
˘x
->
QP
 ); mpi_‰ì–&˘x->
DQ
 ); mpi_‰ì–&˘x->
DP
 );

1453 
	`mpi_‰ì
–&
˘x
->
Q
 ); mpi_‰ì–&˘x->
P
 ); mpi_‰ì–&˘x->
D
 );

1454 
	`mpi_‰ì
–&
˘x
->
E
 ); mpi_‰ì–&˘x->
N
 );

1456 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

1457 
	`pﬁ¨s¶_muãx_‰ì
–&
˘x
->
muãx
 );

1459 
	}
}

1461 #i‡
deföed
(
POLARSSL_SELF_TEST
)

1463 
	~"pﬁ¨s¶/sha1.h
"

1468 
	#KEY_LEN
 128

	)

1470 
	#RSA_N
 "9292758453063D803DD603D5E777D788" \

1477 "5E94BB77B07507233A0BC7BAC8F90F79"

	)

1479 
	#RSA_E
 "10001"

	)

1481 
	#RSA_D
 "24BF6185468786FDD303083D25E64EFC" \

1488 "071513A1E85B5DFA031F21ECAE91A34D"

	)

1490 
	#RSA_P
 "C36D0EB7FCD285223CFB5AABA5BDA3D8" \

1493 "C3D9E75E1EFC42488BB4F1D13AC30A57"

	)

1495 
	#RSA_Q
 "C000DF51A7C77AE8D7C7370C1FF55B69" \

1498 "8452DD96A9A5EA5D9DCA68DA636032AF"

	)

1500 
	#RSA_DP
 "C1ACF567564274FB07A0BBAD5D26E298" \

1503 "3CC559CD27BC2D1CA488811730BB5725"

	)

1505 
	#RSA_DQ
 "4959CBF6F8FEF750AEE6977C155579C7" \

1508 "407A1BD76C164B93DA2D32A383E58357"

	)

1510 
	#RSA_QP
 "9AE7FBC99546432DF71896FC239EADAE" \

1513 "A74206CEC169D74BF5A8C50D6F48EA08"

	)

1515 
	#PT_LEN
 24

	)

1516 
	#RSA_PT
 "\xAA\xBB\xCC\x03\x02\x01\x00\xFF\xFF\xFF\xFF\xFF" \

1517 "\x11\x22\x33\x0A\x0B\x0C\xCC\xDD\xDD\xDD\xDD\xDD"

	)

1519 #i‡
deföed
(
POLARSSL_PKCS1_V15
)

1520 
	$myønd
–*
∫g_°©e
, *
ouçut
, 
size_t
 
Àn
 )

1522 #i‡!
	`deföed
(
__O≥nBSD__
)

1523 
size_t
 
i
;

1525 if–
∫g_°©e
 !
NULL
 )

1526 
∫g_°©e
 = 
NULL
;

1528  
i
 = 0; i < 
Àn
; ++i )

1529 
ouçut
[
i
] = 
	`ønd
();

1531 if–
∫g_°©e
 !
NULL
 )

1532 
∫g_°©e
 = 
NULL
;

1534 
	`¨c4øndom_buf
–
ouçut
, 
Àn
 );

1538 
	}
}

1544 
	$rß_£lf_ã°
–
vîbo£
 )

1546 
ªt
 = 0;

1547 #i‡
	`deföed
(
POLARSSL_PKCS1_V15
)

1548 
size_t
 
Àn
;

1549 
rß_c⁄ãxt
 
rß
;

1550 
rß_∂aöãxt
[
PT_LEN
];

1551 
rß_de¸y±ed
[
PT_LEN
];

1552 
rß_cùhîãxt
[
KEY_LEN
];

1553 #i‡
	`deföed
(
POLARSSL_SHA1_C
)

1554 
sha1sum
[20];

1557 
	`rß_öô
–&
rß
, 
RSA_PKCS_V15
, 0 );

1559 
rß
.
Àn
 = 
KEY_LEN
;

1560 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
rß
.
N
 , 16, 
RSA_N
 ) );

1561 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
rß
.
E
 , 16, 
RSA_E
 ) );

1562 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
rß
.
D
 , 16, 
RSA_D
 ) );

1563 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
rß
.
P
 , 16, 
RSA_P
 ) );

1564 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
rß
.
Q
 , 16, 
RSA_Q
 ) );

1565 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
rß
.
DP
, 16, 
RSA_DP
 ) );

1566 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
rß
.
DQ
, 16, 
RSA_DQ
 ) );

1567 
	`MPI_CHK
–
	`mpi_ªad_°rög
–&
rß
.
QP
, 16, 
RSA_QP
 ) );

1569 if–
vîbo£
 != 0 )

1570 
	`pﬁ¨s¶_¥ötf
( " RSA key validation: " );

1572 if–
	`rß_check_pubkey
–&
rß
 ) != 0 ||

1573 
	`rß_check_¥ivkey
–&
rß
 ) != 0 )

1575 if–
vîbo£
 != 0 )

1576 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1581 if–
vîbo£
 != 0 )

1582 
	`pﬁ¨s¶_¥ötf
( "passed\n PKCS#1Éncryption : " );

1584 
	`mem˝y
–
rß_∂aöãxt
, 
RSA_PT
, 
PT_LEN
 );

1586 if–
	`rß_pkcs1_í¸y±
–&
rß
, 
myønd
, 
NULL
, 
RSA_PUBLIC
, 
PT_LEN
,

1587 
rß_∂aöãxt
, 
rß_cùhîãxt
 ) != 0 )

1589 if–
vîbo£
 != 0 )

1590 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1595 if–
vîbo£
 != 0 )

1596 
	`pﬁ¨s¶_¥ötf
( "passed\n PKCS#1 decryption : " );

1598 if–
	`rß_pkcs1_de¸y±
–&
rß
, 
myønd
, 
NULL
, 
RSA_PRIVATE
, &
Àn
,

1599 
rß_cùhîãxt
, 
rß_de¸y±ed
,

1600 (
rß_de¸y±ed
) ) != 0 )

1602 if–
vîbo£
 != 0 )

1603 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1608 if–
	`memcmp
–
rß_de¸y±ed
, 
rß_∂aöãxt
, 
Àn
 ) != 0 )

1610 if–
vîbo£
 != 0 )

1611 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1616 #i‡
	`deföed
(
POLARSSL_SHA1_C
)

1617 if–
vîbo£
 != 0 )

1618 
	`pﬁ¨s¶_¥ötf
( "passed\n PKCS#1 data sign : " );

1620 
	`sha1
–
rß_∂aöãxt
, 
PT_LEN
, 
sha1sum
 );

1622 if–
	`rß_pkcs1_sign
–&
rß
, 
myønd
, 
NULL
, 
RSA_PRIVATE
, 
POLARSSL_MD_SHA1
, 0,

1623 
sha1sum
, 
rß_cùhîãxt
 ) != 0 )

1625 if–
vîbo£
 != 0 )

1626 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1631 if–
vîbo£
 != 0 )

1632 
	`pﬁ¨s¶_¥ötf
( "passed\n PKCS#1 sig. verify: " );

1634 if–
	`rß_pkcs1_vîify
–&
rß
, 
NULL
, NULL, 
RSA_PUBLIC
, 
POLARSSL_MD_SHA1
, 0,

1635 
sha1sum
, 
rß_cùhîãxt
 ) != 0 )

1637 if–
vîbo£
 != 0 )

1638 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1643 if–
vîbo£
 != 0 )

1644 
	`pﬁ¨s¶_¥ötf
( "passed\n\n" );

1647 
˛ónup
:

1648 
	`rß_‰ì
–&
rß
 );

1650 ((Ë
vîbo£
);

1652 –
ªt
 );

1653 
	}
}

	@polarssl/library/sha1.c

31 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

32 
	~"pﬁ¨s¶/c⁄fig.h
"

34 #ö˛udê
POLARSSL_CONFIG_FILE


37 #i‡
deföed
(
POLARSSL_SHA1_C
)

39 
	~"pﬁ¨s¶/sha1.h
"

41 #i‡
deföed
(
POLARSSL_FS_IO
Ë|| deföed(
POLARSSL_SELF_TEST
)

42 
	~<°dio.h
>

45 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

46 
	~"pﬁ¨s¶/∂©f‹m.h
"

48 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

52 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

53 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

54 
	}
}

56 #i‡!
deföed
(
POLARSSL_SHA1_ALT
)

61 #i‚de‡
GET_UINT32_BE


62 
	#GET_UINT32_BE
(
n
,
b
,
i
) \

64 (
n
Ë–(
uöt32_t
Ë(
b
)[(
i
) ] << 24 ) \

65 | ( (
uöt32_t
Ë(
b
)[(
i
) + 1] << 16 ) \

66 | ( (
uöt32_t
Ë(
b
)[(
i
) + 2] << 8 ) \

67 | ( (
uöt32_t
Ë(
b
)[(
i
) + 3] ); \

68 }

	)

71 #i‚de‡
PUT_UINT32_BE


72 
	#PUT_UINT32_BE
(
n
,
b
,
i
) \

74 (
b
)[(
i
Ë] = (Ë–(
n
) >> 24 ); \

75 (
b
)[(
i
Ë+ 1] = (Ë–(
n
) >> 16 ); \

76 (
b
)[(
i
Ë+ 2] = (Ë–(
n
) >> 8 ); \

77 (
b
)[(
i
Ë+ 3] = (Ë–(
n
) ); \

78 }

	)

81 
	$sha1_öô
–
sha1_c⁄ãxt
 *
˘x
 )

83 
	`mem£t
–
˘x
, 0, –
sha1_c⁄ãxt
 ) );

84 
	}
}

86 
	$sha1_‰ì
–
sha1_c⁄ãxt
 *
˘x
 )

88 if–
˘x
 =
NULL
 )

91 
	`pﬁ¨s¶_zîoize
–
˘x
, –
sha1_c⁄ãxt
 ) );

92 
	}
}

97 
	$sha1_°¨ts
–
sha1_c⁄ãxt
 *
˘x
 )

99 
˘x
->
tŸÆ
[0] = 0;

100 
˘x
->
tŸÆ
[1] = 0;

102 
˘x
->
°©e
[0] = 0x67452301;

103 
˘x
->
°©e
[1] = 0xEFCDAB89;

104 
˘x
->
°©e
[2] = 0x98BADCFE;

105 
˘x
->
°©e
[3] = 0x10325476;

106 
˘x
->
°©e
[4] = 0xC3D2E1F0;

107 
	}
}

109 
	$sha1_¥o˚ss
–
sha1_c⁄ãxt
 *
˘x
, c⁄° 
d©a
[64] )

111 
uöt32_t
 
ãmp
, 
W
[16], 
A
, 
B
, 
C
, 
D
, 
E
;

113 
	`GET_UINT32_BE
–
W
[ 0], 
d©a
, 0 );

114 
	`GET_UINT32_BE
–
W
[ 1], 
d©a
, 4 );

115 
	`GET_UINT32_BE
–
W
[ 2], 
d©a
, 8 );

116 
	`GET_UINT32_BE
–
W
[ 3], 
d©a
, 12 );

117 
	`GET_UINT32_BE
–
W
[ 4], 
d©a
, 16 );

118 
	`GET_UINT32_BE
–
W
[ 5], 
d©a
, 20 );

119 
	`GET_UINT32_BE
–
W
[ 6], 
d©a
, 24 );

120 
	`GET_UINT32_BE
–
W
[ 7], 
d©a
, 28 );

121 
	`GET_UINT32_BE
–
W
[ 8], 
d©a
, 32 );

122 
	`GET_UINT32_BE
–
W
[ 9], 
d©a
, 36 );

123 
	`GET_UINT32_BE
–
W
[10], 
d©a
, 40 );

124 
	`GET_UINT32_BE
–
W
[11], 
d©a
, 44 );

125 
	`GET_UINT32_BE
–
W
[12], 
d©a
, 48 );

126 
	`GET_UINT32_BE
–
W
[13], 
d©a
, 52 );

127 
	`GET_UINT32_BE
–
W
[14], 
d©a
, 56 );

128 
	`GET_UINT32_BE
–
W
[15], 
d©a
, 60 );

130 
	#S
(
x
,
n
Ë((x <<ÇË| ((x & 0xFFFFFFFFË>> (32 -Ç)))

	)

132 
	#R
(
t
) \

134 
ãmp
 = 
W
[–
t
 - 3 ) & 0x0F] ^ W[(Å - 8 ) & 0x0F] ^ \

135 
W
[–
t
 - 14 ) & 0x0F] ^ W[Å & 0x0F], \

136 –
W
[
t
 & 0x0F] = 
	`S
(
ãmp
,1) ) \

137 )

	)

139 
	#P
(
a
,
b
,
c
,
d
,
e
,
x
) \

141 
e
 +
	`S
(
a
,5Ë+ 
	`F
(
b
,
c
,
d
Ë+ 
K
 + 
x
; b = S(b,30); \

142 }

	)

144 
A
 = 
˘x
->
°©e
[0];

145 
B
 = 
˘x
->
°©e
[1];

146 
C
 = 
˘x
->
°©e
[2];

147 
D
 = 
˘x
->
°©e
[3];

148 
E
 = 
˘x
->
°©e
[4];

150 
	#F
(
x
,
y
,
z
Ë(z ^ (x & (y ^ z)))

	)

151 
	#K
 0x5A827999

	)

153 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
W
[0] );

154 
	`P
–
E
, 
A
, 
B
, 
C
, 
D
, 
W
[1] );

155 
	`P
–
D
, 
E
, 
A
, 
B
, 
C
, 
W
[2] );

156 
	`P
–
C
, 
D
, 
E
, 
A
, 
B
, 
W
[3] );

157 
	`P
–
B
, 
C
, 
D
, 
E
, 
A
, 
W
[4] );

158 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
W
[5] );

159 
	`P
–
E
, 
A
, 
B
, 
C
, 
D
, 
W
[6] );

160 
	`P
–
D
, 
E
, 
A
, 
B
, 
C
, 
W
[7] );

161 
	`P
–
C
, 
D
, 
E
, 
A
, 
B
, 
W
[8] );

162 
	`P
–
B
, 
C
, 
D
, 
E
, 
A
, 
W
[9] );

163 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
W
[10] );

164 
	`P
–
E
, 
A
, 
B
, 
C
, 
D
, 
W
[11] );

165 
	`P
–
D
, 
E
, 
A
, 
B
, 
C
, 
W
[12] );

166 
	`P
–
C
, 
D
, 
E
, 
A
, 
B
, 
W
[13] );

167 
	`P
–
B
, 
C
, 
D
, 
E
, 
A
, 
W
[14] );

168 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
W
[15] );

169 
	`P
–
E
, 
A
, 
B
, 
C
, 
D
, 
	`R
(16) );

170 
	`P
–
D
, 
E
, 
A
, 
B
, 
C
, 
	`R
(17) );

171 
	`P
–
C
, 
D
, 
E
, 
A
, 
B
, 
	`R
(18) );

172 
	`P
–
B
, 
C
, 
D
, 
E
, 
A
, 
	`R
(19) );

174 #unde‡
K


175 #unde‡
F


177 
	#F
(
x
,
y
,
z
Ë(x ^ y ^ z)

	)

178 
	#K
 0x6ED9EBA1

	)

180 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
	`R
(20) );

181 
	`P
–
E
, 
A
, 
B
, 
C
, 
D
, 
	`R
(21) );

182 
	`P
–
D
, 
E
, 
A
, 
B
, 
C
, 
	`R
(22) );

183 
	`P
–
C
, 
D
, 
E
, 
A
, 
B
, 
	`R
(23) );

184 
	`P
–
B
, 
C
, 
D
, 
E
, 
A
, 
	`R
(24) );

185 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
	`R
(25) );

186 
	`P
–
E
, 
A
, 
B
, 
C
, 
D
, 
	`R
(26) );

187 
	`P
–
D
, 
E
, 
A
, 
B
, 
C
, 
	`R
(27) );

188 
	`P
–
C
, 
D
, 
E
, 
A
, 
B
, 
	`R
(28) );

189 
	`P
–
B
, 
C
, 
D
, 
E
, 
A
, 
	`R
(29) );

190 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
	`R
(30) );

191 
	`P
–
E
, 
A
, 
B
, 
C
, 
D
, 
	`R
(31) );

192 
	`P
–
D
, 
E
, 
A
, 
B
, 
C
, 
	`R
(32) );

193 
	`P
–
C
, 
D
, 
E
, 
A
, 
B
, 
	`R
(33) );

194 
	`P
–
B
, 
C
, 
D
, 
E
, 
A
, 
	`R
(34) );

195 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
	`R
(35) );

196 
	`P
–
E
, 
A
, 
B
, 
C
, 
D
, 
	`R
(36) );

197 
	`P
–
D
, 
E
, 
A
, 
B
, 
C
, 
	`R
(37) );

198 
	`P
–
C
, 
D
, 
E
, 
A
, 
B
, 
	`R
(38) );

199 
	`P
–
B
, 
C
, 
D
, 
E
, 
A
, 
	`R
(39) );

201 #unde‡
K


202 #unde‡
F


204 
	#F
(
x
,
y
,
z
Ë((x & yË| (z & (x | y)))

	)

205 
	#K
 0x8F1BBCDC

	)

207 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
	`R
(40) );

208 
	`P
–
E
, 
A
, 
B
, 
C
, 
D
, 
	`R
(41) );

209 
	`P
–
D
, 
E
, 
A
, 
B
, 
C
, 
	`R
(42) );

210 
	`P
–
C
, 
D
, 
E
, 
A
, 
B
, 
	`R
(43) );

211 
	`P
–
B
, 
C
, 
D
, 
E
, 
A
, 
	`R
(44) );

212 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
	`R
(45) );

213 
	`P
–
E
, 
A
, 
B
, 
C
, 
D
, 
	`R
(46) );

214 
	`P
–
D
, 
E
, 
A
, 
B
, 
C
, 
	`R
(47) );

215 
	`P
–
C
, 
D
, 
E
, 
A
, 
B
, 
	`R
(48) );

216 
	`P
–
B
, 
C
, 
D
, 
E
, 
A
, 
	`R
(49) );

217 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
	`R
(50) );

218 
	`P
–
E
, 
A
, 
B
, 
C
, 
D
, 
	`R
(51) );

219 
	`P
–
D
, 
E
, 
A
, 
B
, 
C
, 
	`R
(52) );

220 
	`P
–
C
, 
D
, 
E
, 
A
, 
B
, 
	`R
(53) );

221 
	`P
–
B
, 
C
, 
D
, 
E
, 
A
, 
	`R
(54) );

222 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
	`R
(55) );

223 
	`P
–
E
, 
A
, 
B
, 
C
, 
D
, 
	`R
(56) );

224 
	`P
–
D
, 
E
, 
A
, 
B
, 
C
, 
	`R
(57) );

225 
	`P
–
C
, 
D
, 
E
, 
A
, 
B
, 
	`R
(58) );

226 
	`P
–
B
, 
C
, 
D
, 
E
, 
A
, 
	`R
(59) );

228 #unde‡
K


229 #unde‡
F


231 
	#F
(
x
,
y
,
z
Ë(x ^ y ^ z)

	)

232 
	#K
 0xCA62C1D6

	)

234 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
	`R
(60) );

235 
	`P
–
E
, 
A
, 
B
, 
C
, 
D
, 
	`R
(61) );

236 
	`P
–
D
, 
E
, 
A
, 
B
, 
C
, 
	`R
(62) );

237 
	`P
–
C
, 
D
, 
E
, 
A
, 
B
, 
	`R
(63) );

238 
	`P
–
B
, 
C
, 
D
, 
E
, 
A
, 
	`R
(64) );

239 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
	`R
(65) );

240 
	`P
–
E
, 
A
, 
B
, 
C
, 
D
, 
	`R
(66) );

241 
	`P
–
D
, 
E
, 
A
, 
B
, 
C
, 
	`R
(67) );

242 
	`P
–
C
, 
D
, 
E
, 
A
, 
B
, 
	`R
(68) );

243 
	`P
–
B
, 
C
, 
D
, 
E
, 
A
, 
	`R
(69) );

244 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
	`R
(70) );

245 
	`P
–
E
, 
A
, 
B
, 
C
, 
D
, 
	`R
(71) );

246 
	`P
–
D
, 
E
, 
A
, 
B
, 
C
, 
	`R
(72) );

247 
	`P
–
C
, 
D
, 
E
, 
A
, 
B
, 
	`R
(73) );

248 
	`P
–
B
, 
C
, 
D
, 
E
, 
A
, 
	`R
(74) );

249 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
	`R
(75) );

250 
	`P
–
E
, 
A
, 
B
, 
C
, 
D
, 
	`R
(76) );

251 
	`P
–
D
, 
E
, 
A
, 
B
, 
C
, 
	`R
(77) );

252 
	`P
–
C
, 
D
, 
E
, 
A
, 
B
, 
	`R
(78) );

253 
	`P
–
B
, 
C
, 
D
, 
E
, 
A
, 
	`R
(79) );

255 #unde‡
K


256 #unde‡
F


258 
˘x
->
°©e
[0] +
A
;

259 
˘x
->
°©e
[1] +
B
;

260 
˘x
->
°©e
[2] +
C
;

261 
˘x
->
°©e
[3] +
D
;

262 
˘x
->
°©e
[4] +
E
;

263 
	}
}

268 
	$sha1_upd©e
–
sha1_c⁄ãxt
 *
˘x
, c⁄° *
öput
, 
size_t
 
ûí
 )

270 
size_t
 
fûl
;

271 
uöt32_t
 
À·
;

273 if–
ûí
 == 0 )

276 
À·
 = 
˘x
->
tŸÆ
[0] & 0x3F;

277 
fûl
 = 64 - 
À·
;

279 
˘x
->
tŸÆ
[0] +(
uöt32_t
Ë
ûí
;

280 
˘x
->
tŸÆ
[0] &= 0xFFFFFFFF;

282 if–
˘x
->
tŸÆ
[0] < (
uöt32_t
Ë
ûí
 )

283 
˘x
->
tŸÆ
[1]++;

285 if–
À·
 && 
ûí
 >
fûl
 )

287 
	`mem˝y
–(*Ë(
˘x
->
buf„r
 + 
À·
), 
öput
, 
fûl
 );

288 
	`sha1_¥o˚ss
–
˘x
, ctx->
buf„r
 );

289 
öput
 +
fûl
;

290 
ûí
 -
fûl
;

291 
À·
 = 0;

294  
ûí
 >= 64 )

296 
	`sha1_¥o˚ss
–
˘x
, 
öput
 );

297 
öput
 += 64;

298 
ûí
 -= 64;

301 if–
ûí
 > 0 )

302 
	`mem˝y
–(*Ë(
˘x
->
buf„r
 + 
À·
), 
öput
, 
ûí
 );

303 
	}
}

305 c⁄° 
	gsha1_∑ddög
[64] =

316 
	$sha1_föish
–
sha1_c⁄ãxt
 *
˘x
, 
ouçut
[20] )

318 
uöt32_t
 
œ°
, 
∑dn
;

319 
uöt32_t
 
high
, 
low
;

320 
msgÀn
[8];

322 
high
 = ( 
˘x
->
tŸÆ
[0] >> 29 )

323 | ( 
˘x
->
tŸÆ
[1] << 3 );

324 
low
 = ( 
˘x
->
tŸÆ
[0] << 3 );

326 
	`PUT_UINT32_BE
–
high
, 
msgÀn
, 0 );

327 
	`PUT_UINT32_BE
–
low
, 
msgÀn
, 4 );

329 
œ°
 = 
˘x
->
tŸÆ
[0] & 0x3F;

330 
∑dn
 = ( 
œ°
 < 56 ) ? ( 56 -Üast ) : ( 120 -Üast );

332 
	`sha1_upd©e
–
˘x
, 
sha1_∑ddög
, 
∑dn
 );

333 
	`sha1_upd©e
–
˘x
, 
msgÀn
, 8 );

335 
	`PUT_UINT32_BE
–
˘x
->
°©e
[0], 
ouçut
, 0 );

336 
	`PUT_UINT32_BE
–
˘x
->
°©e
[1], 
ouçut
, 4 );

337 
	`PUT_UINT32_BE
–
˘x
->
°©e
[2], 
ouçut
, 8 );

338 
	`PUT_UINT32_BE
–
˘x
->
°©e
[3], 
ouçut
, 12 );

339 
	`PUT_UINT32_BE
–
˘x
->
°©e
[4], 
ouçut
, 16 );

340 
	}
}

347 
	$sha1
–c⁄° *
öput
, 
size_t
 
ûí
, 
ouçut
[20] )

349 
sha1_c⁄ãxt
 
˘x
;

351 
	`sha1_öô
–&
˘x
 );

352 
	`sha1_°¨ts
–&
˘x
 );

353 
	`sha1_upd©e
–&
˘x
, 
öput
, 
ûí
 );

354 
	`sha1_föish
–&
˘x
, 
ouçut
 );

355 
	`sha1_‰ì
–&
˘x
 );

356 
	}
}

358 #i‡
deföed
(
POLARSSL_FS_IO
)

362 
	$sha1_fûe
–c⁄° *
∑th
, 
ouçut
[20] )

364 
FILE
 *
f
;

365 
size_t
 
n
;

366 
sha1_c⁄ãxt
 
˘x
;

367 
buf
[1024];

369 if––
f
 = 
	`f›í
–
∑th
, "rb" ) ) =
NULL
 )

370 –
POLARSSL_ERR_SHA1_FILE_IO_ERROR
 );

372 
	`sha1_öô
–&
˘x
 );

373 
	`sha1_°¨ts
–&
˘x
 );

375  ( 
n
 = 
	`‰ód
–
buf
, 1, –bu‡), 
f
 ) ) > 0 )

376 
	`sha1_upd©e
–&
˘x
, 
buf
, 
n
 );

378 
	`sha1_föish
–&
˘x
, 
ouçut
 );

379 
	`sha1_‰ì
–&
˘x
 );

381 if–
	`„º‹
–
f
 ) != 0 )

383 
	`f˛o£
–
f
 );

384 –
POLARSSL_ERR_SHA1_FILE_IO_ERROR
 );

387 
	`f˛o£
–
f
 );

389 
	}
}

395 
	$sha1_hmac_°¨ts
–
sha1_c⁄ãxt
 *
˘x
, c⁄° *
key
,

396 
size_t
 
keyÀn
 )

398 
size_t
 
i
;

399 
sum
[20];

401 if–
keyÀn
 > 64 )

403 
	`sha1
–
key
, 
keyÀn
, 
sum
 );

404 
keyÀn
 = 20;

405 
key
 = 
sum
;

408 
	`mem£t
–
˘x
->
ùad
, 0x36, 64 );

409 
	`mem£t
–
˘x
->
›ad
, 0x5C, 64 );

411  
i
 = 0; i < 
keyÀn
; i++ )

413 
˘x
->
ùad
[
i
] = ()–˘x->ùad[i] ^ 
key
[i] );

414 
˘x
->
›ad
[
i
] = ()–˘x->›ad[i] ^ 
key
[i] );

417 
	`sha1_°¨ts
–
˘x
 );

418 
	`sha1_upd©e
–
˘x
, ctx->
ùad
, 64 );

420 
	`pﬁ¨s¶_zîoize
–
sum
, ( sum ) );

421 
	}
}

426 
	$sha1_hmac_upd©e
–
sha1_c⁄ãxt
 *
˘x
, c⁄° *
öput
,

427 
size_t
 
ûí
 )

429 
	`sha1_upd©e
–
˘x
, 
öput
, 
ûí
 );

430 
	}
}

435 
	$sha1_hmac_föish
–
sha1_c⁄ãxt
 *
˘x
, 
ouçut
[20] )

437 
tmpbuf
[20];

439 
	`sha1_föish
–
˘x
, 
tmpbuf
 );

440 
	`sha1_°¨ts
–
˘x
 );

441 
	`sha1_upd©e
–
˘x
, ctx->
›ad
, 64 );

442 
	`sha1_upd©e
–
˘x
, 
tmpbuf
, 20 );

443 
	`sha1_föish
–
˘x
, 
ouçut
 );

445 
	`pﬁ¨s¶_zîoize
–
tmpbuf
, (Åmpbuf ) );

446 
	}
}

451 
	$sha1_hmac_ª£t
–
sha1_c⁄ãxt
 *
˘x
 )

453 
	`sha1_°¨ts
–
˘x
 );

454 
	`sha1_upd©e
–
˘x
, ctx->
ùad
, 64 );

455 
	}
}

460 
	$sha1_hmac
–c⁄° *
key
, 
size_t
 
keyÀn
,

461 c⁄° *
öput
, 
size_t
 
ûí
,

462 
ouçut
[20] )

464 
sha1_c⁄ãxt
 
˘x
;

466 
	`sha1_öô
–&
˘x
 );

467 
	`sha1_hmac_°¨ts
–&
˘x
, 
key
, 
keyÀn
 );

468 
	`sha1_hmac_upd©e
–&
˘x
, 
öput
, 
ûí
 );

469 
	`sha1_hmac_föish
–&
˘x
, 
ouçut
 );

470 
	`sha1_‰ì
–&
˘x
 );

471 
	}
}

473 #i‡
deföed
(
POLARSSL_SELF_TEST
)

477 
	gsha1_ã°_buf
[3][57] =

484 c⁄° 
	gsha1_ã°_buÊí
[3] =

489 c⁄° 
	gsha1_ã°_sum
[3][20] =

502 
	gsha1_hmac_ã°_key
[7][26] =

517 c⁄° 
	gsha1_hmac_ã°_keyÀn
[7] =

522 
	gsha1_hmac_ã°_buf
[7][74] =

542 c⁄° 
	gsha1_hmac_ã°_buÊí
[7] =

547 c⁄° 
	gsha1_hmac_ã°_sum
[7][20] =

568 
	$sha1_£lf_ã°
–
vîbo£
 )

570 
i
, 
j
, 
buÊí
, 
ªt
 = 0;

571 
buf
[1024];

572 
sha1sum
[20];

573 
sha1_c⁄ãxt
 
˘x
;

575 
	`sha1_öô
–&
˘x
 );

580  
i
 = 0; i < 3; i++ )

582 if–
vîbo£
 != 0 )

583 
	`pﬁ¨s¶_¥ötf
–" SHA-1Åe° #%d: ", 
i
 + 1 );

585 
	`sha1_°¨ts
–&
˘x
 );

587 if–
i
 == 2 )

589 
	`mem£t
–
buf
, 'a', 
buÊí
 = 1000 );

591  
j
 = 0; j < 1000; j++ )

592 
	`sha1_upd©e
–&
˘x
, 
buf
, 
buÊí
 );

595 
	`sha1_upd©e
–&
˘x
, 
sha1_ã°_buf
[
i
],

596 
sha1_ã°_buÊí
[
i
] );

598 
	`sha1_föish
–&
˘x
, 
sha1sum
 );

600 if–
	`memcmp
–
sha1sum
, 
sha1_ã°_sum
[
i
], 20 ) != 0 )

602 if–
vîbo£
 != 0 )

603 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

605 
ªt
 = 1;

606 
exô
;

609 if–
vîbo£
 != 0 )

610 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

613 if–
vîbo£
 != 0 )

614 
	`pﬁ¨s¶_¥ötf
( "\n" );

616  
i
 = 0; i < 7; i++ )

618 if–
vîbo£
 != 0 )

619 
	`pﬁ¨s¶_¥ötf
–" HMAC-SHA-1Åe° #%d: ", 
i
 + 1 );

621 if–
i
 == 5 || i == 6 )

623 
	`mem£t
–
buf
, '\xAA', 
buÊí
 = 80 );

624 
	`sha1_hmac_°¨ts
–&
˘x
, 
buf
, 
buÊí
 );

627 
	`sha1_hmac_°¨ts
–&
˘x
, 
sha1_hmac_ã°_key
[
i
],

628 
sha1_hmac_ã°_keyÀn
[
i
] );

630 
	`sha1_hmac_upd©e
–&
˘x
, 
sha1_hmac_ã°_buf
[
i
],

631 
sha1_hmac_ã°_buÊí
[
i
] );

633 
	`sha1_hmac_föish
–&
˘x
, 
sha1sum
 );

635 
buÊí
 = ( 
i
 == 4 ) ? 12 : 20;

637 if–
	`memcmp
–
sha1sum
, 
sha1_hmac_ã°_sum
[
i
], 
buÊí
 ) != 0 )

639 if–
vîbo£
 != 0 )

640 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

642 
ªt
 = 1;

643 
exô
;

646 if–
vîbo£
 != 0 )

647 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

650 if–
vîbo£
 != 0 )

651 
	`pﬁ¨s¶_¥ötf
( "\n" );

653 
exô
:

654 
	`sha1_‰ì
–&
˘x
 );

656 –
ªt
 );

657 
	}
}

	@polarssl/library/sha256.c

31 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

32 
	~"pﬁ¨s¶/c⁄fig.h
"

34 #ö˛udê
POLARSSL_CONFIG_FILE


37 #i‡
deföed
(
POLARSSL_SHA256_C
)

39 
	~"pﬁ¨s¶/sha256.h
"

41 #i‡
deföed
(
POLARSSL_FS_IO
Ë|| deföed(
POLARSSL_SELF_TEST
)

42 
	~<°dio.h
>

45 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

46 
	~"pﬁ¨s¶/∂©f‹m.h
"

48 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

52 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

53 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

54 
	}
}

56 #i‡!
deföed
(
POLARSSL_SHA256_ALT
)

61 #i‚de‡
GET_UINT32_BE


62 
	#GET_UINT32_BE
(
n
,
b
,
i
) \

64 (
n
Ë–(
uöt32_t
Ë(
b
)[(
i
) ] << 24 ) \

65 | ( (
uöt32_t
Ë(
b
)[(
i
) + 1] << 16 ) \

66 | ( (
uöt32_t
Ë(
b
)[(
i
) + 2] << 8 ) \

67 | ( (
uöt32_t
Ë(
b
)[(
i
) + 3] ); \

68 }

	)

71 #i‚de‡
PUT_UINT32_BE


72 
	#PUT_UINT32_BE
(
n
,
b
,
i
) \

74 (
b
)[(
i
Ë] = (Ë–(
n
) >> 24 ); \

75 (
b
)[(
i
Ë+ 1] = (Ë–(
n
) >> 16 ); \

76 (
b
)[(
i
Ë+ 2] = (Ë–(
n
) >> 8 ); \

77 (
b
)[(
i
Ë+ 3] = (Ë–(
n
) ); \

78 }

	)

81 
	$sha256_öô
–
sha256_c⁄ãxt
 *
˘x
 )

83 
	`mem£t
–
˘x
, 0, –
sha256_c⁄ãxt
 ) );

84 
	}
}

86 
	$sha256_‰ì
–
sha256_c⁄ãxt
 *
˘x
 )

88 if–
˘x
 =
NULL
 )

91 
	`pﬁ¨s¶_zîoize
–
˘x
, –
sha256_c⁄ãxt
 ) );

92 
	}
}

97 
	$sha256_°¨ts
–
sha256_c⁄ãxt
 *
˘x
, 
is224
 )

99 
˘x
->
tŸÆ
[0] = 0;

100 
˘x
->
tŸÆ
[1] = 0;

102 if–
is224
 == 0 )

105 
˘x
->
°©e
[0] = 0x6A09E667;

106 
˘x
->
°©e
[1] = 0xBB67AE85;

107 
˘x
->
°©e
[2] = 0x3C6EF372;

108 
˘x
->
°©e
[3] = 0xA54FF53A;

109 
˘x
->
°©e
[4] = 0x510E527F;

110 
˘x
->
°©e
[5] = 0x9B05688C;

111 
˘x
->
°©e
[6] = 0x1F83D9AB;

112 
˘x
->
°©e
[7] = 0x5BE0CD19;

117 
˘x
->
°©e
[0] = 0xC1059ED8;

118 
˘x
->
°©e
[1] = 0x367CD507;

119 
˘x
->
°©e
[2] = 0x3070DD17;

120 
˘x
->
°©e
[3] = 0xF70E5939;

121 
˘x
->
°©e
[4] = 0xFFC00B31;

122 
˘x
->
°©e
[5] = 0x68581511;

123 
˘x
->
°©e
[6] = 0x64F98FA7;

124 
˘x
->
°©e
[7] = 0xBEFA4FA4;

127 
˘x
->
is224
 = is224;

128 
	}
}

130 
	$sha256_¥o˚ss
–
sha256_c⁄ãxt
 *
˘x
, c⁄° 
d©a
[64] )

132 
uöt32_t
 
ãmp1
, 
ãmp2
, 
W
[64];

133 
uöt32_t
 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
;

135 
	`GET_UINT32_BE
–
W
[ 0], 
d©a
, 0 );

136 
	`GET_UINT32_BE
–
W
[ 1], 
d©a
, 4 );

137 
	`GET_UINT32_BE
–
W
[ 2], 
d©a
, 8 );

138 
	`GET_UINT32_BE
–
W
[ 3], 
d©a
, 12 );

139 
	`GET_UINT32_BE
–
W
[ 4], 
d©a
, 16 );

140 
	`GET_UINT32_BE
–
W
[ 5], 
d©a
, 20 );

141 
	`GET_UINT32_BE
–
W
[ 6], 
d©a
, 24 );

142 
	`GET_UINT32_BE
–
W
[ 7], 
d©a
, 28 );

143 
	`GET_UINT32_BE
–
W
[ 8], 
d©a
, 32 );

144 
	`GET_UINT32_BE
–
W
[ 9], 
d©a
, 36 );

145 
	`GET_UINT32_BE
–
W
[10], 
d©a
, 40 );

146 
	`GET_UINT32_BE
–
W
[11], 
d©a
, 44 );

147 
	`GET_UINT32_BE
–
W
[12], 
d©a
, 48 );

148 
	`GET_UINT32_BE
–
W
[13], 
d©a
, 52 );

149 
	`GET_UINT32_BE
–
W
[14], 
d©a
, 56 );

150 
	`GET_UINT32_BE
–
W
[15], 
d©a
, 60 );

152 
	#SHR
(
x
,
n
Ë((x & 0xFFFFFFFFË>>Ç)

	)

153 
	#ROTR
(
x
,
n
Ë(
	`SHR
(x,nË| (x << (32 -Ç)))

	)

155 
	#S0
(
x
Ë(
	`ROTR
(x, 7Ë^ ROTR(x,18Ë^ 
	`SHR
(x, 3))

	)

156 
	#S1
(
x
Ë(
	`ROTR
(x,17Ë^ ROTR(x,19Ë^ 
	`SHR
(x,10))

	)

158 
	#S2
(
x
Ë(
	`ROTR
(x, 2Ë^ ROTR(x,13Ë^ ROTR(x,22))

	)

159 
	#S3
(
x
Ë(
	`ROTR
(x, 6Ë^ ROTR(x,11Ë^ ROTR(x,25))

	)

161 
	#F0
(
x
,
y
,
z
Ë((x & yË| (z & (x | y)))

	)

162 
	#F1
(
x
,
y
,
z
Ë(z ^ (x & (y ^ z)))

	)

164 
	#R
(
t
) \

166 
W
[
t
] = 
	`S1
(W[t - 2]) + W[t - 7] + \

167 
	`S0
(
W
[
t
 - 15]) + W[t - 16] \

168 )

	)

170 
	#P
(
a
,
b
,
c
,
d
,
e
,
f
,
g
,
h
,
x
,
K
) \

172 
ãmp1
 = 
h
 + 
	`S3
(
e
Ë+ 
	`F1
”,
f
,
g
Ë+ 
K
 + 
x
; \

173 
ãmp2
 = 
	`S2
(
a
Ë+ 
	`F0
◊,
b
,
c
); \

174 
d
 +
ãmp1
; 
h
 =Åemp1 + 
ãmp2
; \

175 }

	)

177 
A
 = 
˘x
->
°©e
[0];

178 
B
 = 
˘x
->
°©e
[1];

179 
C
 = 
˘x
->
°©e
[2];

180 
D
 = 
˘x
->
°©e
[3];

181 
E
 = 
˘x
->
°©e
[4];

182 
F
 = 
˘x
->
°©e
[5];

183 
G
 = 
˘x
->
°©e
[6];

184 
H
 = 
˘x
->
°©e
[7];

186 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
W
[ 0], 0x428A2F98 );

187 
	`P
–
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
W
[ 1], 0x71374491 );

188 
	`P
–
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
W
[ 2], 0xB5C0FBCF );

189 
	`P
–
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
W
[ 3], 0xE9B5DBA5 );

190 
	`P
–
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
W
[ 4], 0x3956C25B );

191 
	`P
–
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
W
[ 5], 0x59F111F1 );

192 
	`P
–
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
W
[ 6], 0x923F82A4 );

193 
	`P
–
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
W
[ 7], 0xAB1C5ED5 );

194 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
W
[ 8], 0xD807AA98 );

195 
	`P
–
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
W
[ 9], 0x12835B01 );

196 
	`P
–
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
W
[10], 0x243185BE );

197 
	`P
–
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
W
[11], 0x550C7DC3 );

198 
	`P
–
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
W
[12], 0x72BE5D74 );

199 
	`P
–
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
W
[13], 0x80DEB1FE );

200 
	`P
–
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
W
[14], 0x9BDC06A7 );

201 
	`P
–
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
W
[15], 0xC19BF174 );

202 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
	`R
(16), 0xE49B69C1 );

203 
	`P
–
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
	`R
(17), 0xEFBE4786 );

204 
	`P
–
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
	`R
(18), 0x0FC19DC6 );

205 
	`P
–
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
	`R
(19), 0x240CA1CC );

206 
	`P
–
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
	`R
(20), 0x2DE92C6F );

207 
	`P
–
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
	`R
(21), 0x4A7484AA );

208 
	`P
–
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
	`R
(22), 0x5CB0A9DC );

209 
	`P
–
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
	`R
(23), 0x76F988DA );

210 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
	`R
(24), 0x983E5152 );

211 
	`P
–
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
	`R
(25), 0xA831C66D );

212 
	`P
–
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
	`R
(26), 0xB00327C8 );

213 
	`P
–
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
	`R
(27), 0xBF597FC7 );

214 
	`P
–
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
	`R
(28), 0xC6E00BF3 );

215 
	`P
–
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
	`R
(29), 0xD5A79147 );

216 
	`P
–
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
	`R
(30), 0x06CA6351 );

217 
	`P
–
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
	`R
(31), 0x14292967 );

218 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
	`R
(32), 0x27B70A85 );

219 
	`P
–
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
	`R
(33), 0x2E1B2138 );

220 
	`P
–
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
	`R
(34), 0x4D2C6DFC );

221 
	`P
–
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
	`R
(35), 0x53380D13 );

222 
	`P
–
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
	`R
(36), 0x650A7354 );

223 
	`P
–
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
	`R
(37), 0x766A0ABB );

224 
	`P
–
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
	`R
(38), 0x81C2C92E );

225 
	`P
–
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
	`R
(39), 0x92722C85 );

226 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
	`R
(40), 0xA2BFE8A1 );

227 
	`P
–
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
	`R
(41), 0xA81A664B );

228 
	`P
–
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
	`R
(42), 0xC24B8B70 );

229 
	`P
–
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
	`R
(43), 0xC76C51A3 );

230 
	`P
–
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
	`R
(44), 0xD192E819 );

231 
	`P
–
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
	`R
(45), 0xD6990624 );

232 
	`P
–
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
	`R
(46), 0xF40E3585 );

233 
	`P
–
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
	`R
(47), 0x106AA070 );

234 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
	`R
(48), 0x19A4C116 );

235 
	`P
–
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
	`R
(49), 0x1E376C08 );

236 
	`P
–
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
	`R
(50), 0x2748774C );

237 
	`P
–
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
	`R
(51), 0x34B0BCB5 );

238 
	`P
–
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
	`R
(52), 0x391C0CB3 );

239 
	`P
–
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
	`R
(53), 0x4ED8AA4A );

240 
	`P
–
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
	`R
(54), 0x5B9CCA4F );

241 
	`P
–
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
	`R
(55), 0x682E6FF3 );

242 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
	`R
(56), 0x748F82EE );

243 
	`P
–
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
	`R
(57), 0x78A5636F );

244 
	`P
–
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
	`R
(58), 0x84C87814 );

245 
	`P
–
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
	`R
(59), 0x8CC70208 );

246 
	`P
–
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
	`R
(60), 0x90BEFFFA );

247 
	`P
–
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
	`R
(61), 0xA4506CEB );

248 
	`P
–
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
	`R
(62), 0xBEF9A3F7 );

249 
	`P
–
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
	`R
(63), 0xC67178F2 );

251 
˘x
->
°©e
[0] +
A
;

252 
˘x
->
°©e
[1] +
B
;

253 
˘x
->
°©e
[2] +
C
;

254 
˘x
->
°©e
[3] +
D
;

255 
˘x
->
°©e
[4] +
E
;

256 
˘x
->
°©e
[5] +
F
;

257 
˘x
->
°©e
[6] +
G
;

258 
˘x
->
°©e
[7] +
H
;

259 
	}
}

264 
	$sha256_upd©e
–
sha256_c⁄ãxt
 *
˘x
, c⁄° *
öput
,

265 
size_t
 
ûí
 )

267 
size_t
 
fûl
;

268 
uöt32_t
 
À·
;

270 if–
ûí
 == 0 )

273 
À·
 = 
˘x
->
tŸÆ
[0] & 0x3F;

274 
fûl
 = 64 - 
À·
;

276 
˘x
->
tŸÆ
[0] +(
uöt32_t
Ë
ûí
;

277 
˘x
->
tŸÆ
[0] &= 0xFFFFFFFF;

279 if–
˘x
->
tŸÆ
[0] < (
uöt32_t
Ë
ûí
 )

280 
˘x
->
tŸÆ
[1]++;

282 if–
À·
 && 
ûí
 >
fûl
 )

284 
	`mem˝y
–(*Ë(
˘x
->
buf„r
 + 
À·
), 
öput
, 
fûl
 );

285 
	`sha256_¥o˚ss
–
˘x
, ctx->
buf„r
 );

286 
öput
 +
fûl
;

287 
ûí
 -
fûl
;

288 
À·
 = 0;

291  
ûí
 >= 64 )

293 
	`sha256_¥o˚ss
–
˘x
, 
öput
 );

294 
öput
 += 64;

295 
ûí
 -= 64;

298 if–
ûí
 > 0 )

299 
	`mem˝y
–(*Ë(
˘x
->
buf„r
 + 
À·
), 
öput
, 
ûí
 );

300 
	}
}

302 c⁄° 
	gsha256_∑ddög
[64] =

313 
	$sha256_föish
–
sha256_c⁄ãxt
 *
˘x
, 
ouçut
[32] )

315 
uöt32_t
 
œ°
, 
∑dn
;

316 
uöt32_t
 
high
, 
low
;

317 
msgÀn
[8];

319 
high
 = ( 
˘x
->
tŸÆ
[0] >> 29 )

320 | ( 
˘x
->
tŸÆ
[1] << 3 );

321 
low
 = ( 
˘x
->
tŸÆ
[0] << 3 );

323 
	`PUT_UINT32_BE
–
high
, 
msgÀn
, 0 );

324 
	`PUT_UINT32_BE
–
low
, 
msgÀn
, 4 );

326 
œ°
 = 
˘x
->
tŸÆ
[0] & 0x3F;

327 
∑dn
 = ( 
œ°
 < 56 ) ? ( 56 -Üast ) : ( 120 -Üast );

329 
	`sha256_upd©e
–
˘x
, 
sha256_∑ddög
, 
∑dn
 );

330 
	`sha256_upd©e
–
˘x
, 
msgÀn
, 8 );

332 
	`PUT_UINT32_BE
–
˘x
->
°©e
[0], 
ouçut
, 0 );

333 
	`PUT_UINT32_BE
–
˘x
->
°©e
[1], 
ouçut
, 4 );

334 
	`PUT_UINT32_BE
–
˘x
->
°©e
[2], 
ouçut
, 8 );

335 
	`PUT_UINT32_BE
–
˘x
->
°©e
[3], 
ouçut
, 12 );

336 
	`PUT_UINT32_BE
–
˘x
->
°©e
[4], 
ouçut
, 16 );

337 
	`PUT_UINT32_BE
–
˘x
->
°©e
[5], 
ouçut
, 20 );

338 
	`PUT_UINT32_BE
–
˘x
->
°©e
[6], 
ouçut
, 24 );

340 if–
˘x
->
is224
 == 0 )

341 
	`PUT_UINT32_BE
–
˘x
->
°©e
[7], 
ouçut
, 28 );

342 
	}
}

349 
	$sha256
–c⁄° *
öput
, 
size_t
 
ûí
,

350 
ouçut
[32], 
is224
 )

352 
sha256_c⁄ãxt
 
˘x
;

354 
	`sha256_öô
–&
˘x
 );

355 
	`sha256_°¨ts
–&
˘x
, 
is224
 );

356 
	`sha256_upd©e
–&
˘x
, 
öput
, 
ûí
 );

357 
	`sha256_föish
–&
˘x
, 
ouçut
 );

358 
	`sha256_‰ì
–&
˘x
 );

359 
	}
}

361 #i‡
deföed
(
POLARSSL_FS_IO
)

365 
	$sha256_fûe
–c⁄° *
∑th
, 
ouçut
[32], 
is224
 )

367 
FILE
 *
f
;

368 
size_t
 
n
;

369 
sha256_c⁄ãxt
 
˘x
;

370 
buf
[1024];

372 if––
f
 = 
	`f›í
–
∑th
, "rb" ) ) =
NULL
 )

373 –
POLARSSL_ERR_SHA256_FILE_IO_ERROR
 );

375 
	`sha256_öô
–&
˘x
 );

376 
	`sha256_°¨ts
–&
˘x
, 
is224
 );

378  ( 
n
 = 
	`‰ód
–
buf
, 1, –bu‡), 
f
 ) ) > 0 )

379 
	`sha256_upd©e
–&
˘x
, 
buf
, 
n
 );

381 
	`sha256_föish
–&
˘x
, 
ouçut
 );

382 
	`sha256_‰ì
–&
˘x
 );

384 if–
	`„º‹
–
f
 ) != 0 )

386 
	`f˛o£
–
f
 );

387 –
POLARSSL_ERR_SHA256_FILE_IO_ERROR
 );

390 
	`f˛o£
–
f
 );

392 
	}
}

398 
	$sha256_hmac_°¨ts
–
sha256_c⁄ãxt
 *
˘x
, c⁄° *
key
,

399 
size_t
 
keyÀn
, 
is224
 )

401 
size_t
 
i
;

402 
sum
[32];

404 if–
keyÀn
 > 64 )

406 
	`sha256
–
key
, 
keyÀn
, 
sum
, 
is224
 );

407 
keyÀn
 = ( 
is224
 ) ? 28 : 32;

408 
key
 = 
sum
;

411 
	`mem£t
–
˘x
->
ùad
, 0x36, 64 );

412 
	`mem£t
–
˘x
->
›ad
, 0x5C, 64 );

414  
i
 = 0; i < 
keyÀn
; i++ )

416 
˘x
->
ùad
[
i
] = ()–˘x->ùad[i] ^ 
key
[i] );

417 
˘x
->
›ad
[
i
] = ()–˘x->›ad[i] ^ 
key
[i] );

420 
	`sha256_°¨ts
–
˘x
, 
is224
 );

421 
	`sha256_upd©e
–
˘x
, ctx->
ùad
, 64 );

423 
	`pﬁ¨s¶_zîoize
–
sum
, ( sum ) );

424 
	}
}

429 
	$sha256_hmac_upd©e
–
sha256_c⁄ãxt
 *
˘x
, c⁄° *
öput
,

430 
size_t
 
ûí
 )

432 
	`sha256_upd©e
–
˘x
, 
öput
, 
ûí
 );

433 
	}
}

438 
	$sha256_hmac_föish
–
sha256_c⁄ãxt
 *
˘x
, 
ouçut
[32] )

440 
is224
, 
hÀn
;

441 
tmpbuf
[32];

443 
is224
 = 
˘x
->is224;

444 
hÀn
 = ( 
is224
 == 0 ) ? 32 : 28;

446 
	`sha256_föish
–
˘x
, 
tmpbuf
 );

447 
	`sha256_°¨ts
–
˘x
, 
is224
 );

448 
	`sha256_upd©e
–
˘x
, ctx->
›ad
, 64 );

449 
	`sha256_upd©e
–
˘x
, 
tmpbuf
, 
hÀn
 );

450 
	`sha256_föish
–
˘x
, 
ouçut
 );

452 
	`pﬁ¨s¶_zîoize
–
tmpbuf
, (Åmpbuf ) );

453 
	}
}

458 
	$sha256_hmac_ª£t
–
sha256_c⁄ãxt
 *
˘x
 )

460 
	`sha256_°¨ts
–
˘x
, ctx->
is224
 );

461 
	`sha256_upd©e
–
˘x
, ctx->
ùad
, 64 );

462 
	}
}

467 
	$sha256_hmac
–c⁄° *
key
, 
size_t
 
keyÀn
,

468 c⁄° *
öput
, 
size_t
 
ûí
,

469 
ouçut
[32], 
is224
 )

471 
sha256_c⁄ãxt
 
˘x
;

473 
	`sha256_öô
–&
˘x
 );

474 
	`sha256_hmac_°¨ts
–&
˘x
, 
key
, 
keyÀn
, 
is224
 );

475 
	`sha256_hmac_upd©e
–&
˘x
, 
öput
, 
ûí
 );

476 
	`sha256_hmac_föish
–&
˘x
, 
ouçut
 );

477 
	`sha256_‰ì
–&
˘x
 );

478 
	}
}

480 #i‡
deföed
(
POLARSSL_SELF_TEST
)

484 
	gsha256_ã°_buf
[3][57] =

491 c⁄° 
	gsha256_ã°_buÊí
[3] =

496 c⁄° 
	gsha256_ã°_sum
[6][32] =

534 
	gsha256_hmac_ã°_key
[7][26] =

549 c⁄° 
	gsha256_hmac_ã°_keyÀn
[7] =

554 
	gsha256_hmac_ã°_buf
[7][153] =

575 c⁄° 
	gsha256_hmac_ã°_buÊí
[7] =

580 c⁄° 
	gsha256_hmac_ã°_sum
[14][32] =

646 
	$sha256_£lf_ã°
–
vîbo£
 )

648 
i
, 
j
, 
k
, 
buÊí
, 
ªt
 = 0;

649 
buf
[1024];

650 
sha256sum
[32];

651 
sha256_c⁄ãxt
 
˘x
;

653 
	`sha256_öô
–&
˘x
 );

655  
i
 = 0; i < 6; i++ )

657 
j
 = 
i
 % 3;

658 
k
 = 
i
 < 3;

660 if–
vîbo£
 != 0 )

661 
	`pﬁ¨s¶_¥ötf
–" SHA-%dÅe° #%d: ", 256 - 
k
 * 32, 
j
 + 1 );

663 
	`sha256_°¨ts
–&
˘x
, 
k
 );

665 if–
j
 == 2 )

667 
	`mem£t
–
buf
, 'a', 
buÊí
 = 1000 );

669  
j
 = 0; j < 1000; j++ )

670 
	`sha256_upd©e
–&
˘x
, 
buf
, 
buÊí
 );

673 
	`sha256_upd©e
–&
˘x
, 
sha256_ã°_buf
[
j
],

674 
sha256_ã°_buÊí
[
j
] );

676 
	`sha256_föish
–&
˘x
, 
sha256sum
 );

678 if–
	`memcmp
–
sha256sum
, 
sha256_ã°_sum
[
i
], 32 - 
k
 * 4 ) != 0 )

680 if–
vîbo£
 != 0 )

681 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

683 
ªt
 = 1;

684 
exô
;

687 if–
vîbo£
 != 0 )

688 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

691 if–
vîbo£
 != 0 )

692 
	`pﬁ¨s¶_¥ötf
( "\n" );

694  
i
 = 0; i < 14; i++ )

696 
j
 = 
i
 % 7;

697 
k
 = 
i
 < 7;

699 if–
vîbo£
 != 0 )

700 
	`pﬁ¨s¶_¥ötf
–" HMAC-SHA-%dÅe° #%d: ", 256 - 
k
 * 32, 
j
 + 1 );

702 if–
j
 == 5 || j == 6 )

704 
	`mem£t
–
buf
, '\xAA', 
buÊí
 = 131 );

705 
	`sha256_hmac_°¨ts
–&
˘x
, 
buf
, 
buÊí
, 
k
 );

708 
	`sha256_hmac_°¨ts
–&
˘x
, 
sha256_hmac_ã°_key
[
j
],

709 
sha256_hmac_ã°_keyÀn
[
j
], 
k
 );

711 
	`sha256_hmac_upd©e
–&
˘x
, 
sha256_hmac_ã°_buf
[
j
],

712 
sha256_hmac_ã°_buÊí
[
j
] );

714 
	`sha256_hmac_föish
–&
˘x
, 
sha256sum
 );

716 
buÊí
 = ( 
j
 =4 ) ? 16 : 32 - 
k
 * 4;

718 if–
	`memcmp
–
sha256sum
, 
sha256_hmac_ã°_sum
[
i
], 
buÊí
 ) != 0 )

720 if–
vîbo£
 != 0 )

721 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

723 
ªt
 = 1;

724 
exô
;

727 if–
vîbo£
 != 0 )

728 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

731 if–
vîbo£
 != 0 )

732 
	`pﬁ¨s¶_¥ötf
( "\n" );

734 
exô
:

735 
	`sha256_‰ì
–&
˘x
 );

737 –
ªt
 );

738 
	}
}

	@polarssl/library/sha512.c

31 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

32 
	~"pﬁ¨s¶/c⁄fig.h
"

34 #ö˛udê
POLARSSL_CONFIG_FILE


37 #i‡
deföed
(
POLARSSL_SHA512_C
)

39 
	~"pﬁ¨s¶/sha512.h
"

41 #i‡
deföed
(
POLARSSL_FS_IO
Ë|| deföed(
POLARSSL_SELF_TEST
)

42 
	~<°dio.h
>

45 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

46 
	~"pﬁ¨s¶/∂©f‹m.h
"

48 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

52 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

53 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

54 
	}
}

56 #i‡!
deföed
(
POLARSSL_SHA512_ALT
)

61 #i‚de‡
GET_UINT64_BE


62 
	#GET_UINT64_BE
(
n
,
b
,
i
) \

64 (
n
Ë–(
uöt64_t
Ë(
b
)[(
i
) ] << 56 ) \

65 | ( (
uöt64_t
Ë(
b
)[(
i
) + 1] << 48 ) \

66 | ( (
uöt64_t
Ë(
b
)[(
i
) + 2] << 40 ) \

67 | ( (
uöt64_t
Ë(
b
)[(
i
) + 3] << 32 ) \

68 | ( (
uöt64_t
Ë(
b
)[(
i
) + 4] << 24 ) \

69 | ( (
uöt64_t
Ë(
b
)[(
i
) + 5] << 16 ) \

70 | ( (
uöt64_t
Ë(
b
)[(
i
) + 6] << 8 ) \

71 | ( (
uöt64_t
Ë(
b
)[(
i
) + 7] ); \

72 }

	)

75 #i‚de‡
PUT_UINT64_BE


76 
	#PUT_UINT64_BE
(
n
,
b
,
i
) \

78 (
b
)[(
i
Ë] = (Ë–(
n
) >> 56 ); \

79 (
b
)[(
i
Ë+ 1] = (Ë–(
n
) >> 48 ); \

80 (
b
)[(
i
Ë+ 2] = (Ë–(
n
) >> 40 ); \

81 (
b
)[(
i
Ë+ 3] = (Ë–(
n
) >> 32 ); \

82 (
b
)[(
i
Ë+ 4] = (Ë–(
n
) >> 24 ); \

83 (
b
)[(
i
Ë+ 5] = (Ë–(
n
) >> 16 ); \

84 (
b
)[(
i
Ë+ 6] = (Ë–(
n
) >> 8 ); \

85 (
b
)[(
i
Ë+ 7] = (Ë–(
n
) ); \

86 }

	)

92 c⁄° 
uöt64_t
 
	gK
[80] =

94 
UL64
(0x428A2F98D728AE22), UL64(0x7137449123EF65CD),

95 
UL64
(0xB5C0FBCFEC4D3B2F), UL64(0xE9B5DBA58189DBBC),

96 
UL64
(0x3956C25BF348B538), UL64(0x59F111F1B605D019),

97 
UL64
(0x923F82A4AF194F9B), UL64(0xAB1C5ED5DA6D8118),

98 
UL64
(0xD807AA98A3030242), UL64(0x12835B0145706FBE),

99 
UL64
(0x243185BE4EE4B28C), UL64(0x550C7DC3D5FFB4E2),

100 
UL64
(0x72BE5D74F27B896F), UL64(0x80DEB1FE3B1696B1),

101 
UL64
(0x9BDC06A725C71235), UL64(0xC19BF174CF692694),

102 
UL64
(0xE49B69C19EF14AD2), UL64(0xEFBE4786384F25E3),

103 
UL64
(0x0FC19DC68B8CD5B5), UL64(0x240CA1CC77AC9C65),

104 
UL64
(0x2DE92C6F592B0275), UL64(0x4A7484AA6EA6E483),

105 
UL64
(0x5CB0A9DCBD41FBD4), UL64(0x76F988DA831153B5),

106 
UL64
(0x983E5152EE66DFAB), UL64(0xA831C66D2DB43210),

107 
UL64
(0xB00327C898FB213F), UL64(0xBF597FC7BEEF0EE4),

108 
UL64
(0xC6E00BF33DA88FC2), UL64(0xD5A79147930AA725),

109 
UL64
(0x06CA6351E003826F), UL64(0x142929670A0E6E70),

110 
UL64
(0x27B70A8546D22FFC), UL64(0x2E1B21385C26C926),

111 
UL64
(0x4D2C6DFC5AC42AED), UL64(0x53380D139D95B3DF),

112 
UL64
(0x650A73548BAF63DE), UL64(0x766A0ABB3C77B2A8),

113 
UL64
(0x81C2C92E47EDAEE6), UL64(0x92722C851482353B),

114 
UL64
(0xA2BFE8A14CF10364), UL64(0xA81A664BBC423001),

115 
UL64
(0xC24B8B70D0F89791), UL64(0xC76C51A30654BE30),

116 
UL64
(0xD192E819D6EF5218), UL64(0xD69906245565A910),

117 
UL64
(0xF40E35855771202A), UL64(0x106AA07032BBD1B8),

118 
UL64
(0x19A4C116B8D2D0C8), UL64(0x1E376C085141AB53),

119 
UL64
(0x2748774CDF8EEB99), UL64(0x34B0BCB5E19B48A8),

120 
UL64
(0x391C0CB3C5C95A63), UL64(0x4ED8AA4AE3418ACB),

121 
UL64
(0x5B9CCA4F7763E373), UL64(0x682E6FF3D6B2B8A3),

122 
UL64
(0x748F82EE5DEFB2FC), UL64(0x78A5636F43172F60),

123 
UL64
(0x84C87814A1F0AB72), UL64(0x8CC702081A6439EC),

124 
UL64
(0x90BEFFFA23631E28), UL64(0xA4506CEBDE82BDE9),

125 
UL64
(0xBEF9A3F7B2C67915), UL64(0xC67178F2E372532B),

126 
UL64
(0xCA273ECEEA26619C), UL64(0xD186B8C721C0C207),

127 
UL64
(0xEADA7DD6CDE0EB1E), UL64(0xF57D4F7FEE6ED178),

128 
UL64
(0x06F067AA72176FBA), UL64(0x0A637DC5A2C898A6),

129 
UL64
(0x113F9804BEF90DAE), UL64(0x1B710B35131C471B),

130 
UL64
(0x28DB77F523047D84), UL64(0x32CAAB7B40C72493),

131 
UL64
(0x3C9EBE0A15C9BEBC), UL64(0x431D67C49C100D4C),

132 
UL64
(0x4CC5D4BECB3E42B6), UL64(0x597F299CFC657E2A),

133 
UL64
(0x5FCB6FAB3AD6FAEC), UL64(0x6C44198C4A475817)

136 
	$sha512_öô
–
sha512_c⁄ãxt
 *
˘x
 )

138 
	`mem£t
–
˘x
, 0, –
sha512_c⁄ãxt
 ) );

139 
	}
}

141 
	$sha512_‰ì
–
sha512_c⁄ãxt
 *
˘x
 )

143 if–
˘x
 =
NULL
 )

146 
	`pﬁ¨s¶_zîoize
–
˘x
, –
sha512_c⁄ãxt
 ) );

147 
	}
}

152 
	$sha512_°¨ts
–
sha512_c⁄ãxt
 *
˘x
, 
is384
 )

154 
˘x
->
tŸÆ
[0] = 0;

155 
˘x
->
tŸÆ
[1] = 0;

157 if–
is384
 == 0 )

160 
˘x
->
°©e
[0] = 
	`UL64
(0x6A09E667F3BCC908);

161 
˘x
->
°©e
[1] = 
	`UL64
(0xBB67AE8584CAA73B);

162 
˘x
->
°©e
[2] = 
	`UL64
(0x3C6EF372FE94F82B);

163 
˘x
->
°©e
[3] = 
	`UL64
(0xA54FF53A5F1D36F1);

164 
˘x
->
°©e
[4] = 
	`UL64
(0x510E527FADE682D1);

165 
˘x
->
°©e
[5] = 
	`UL64
(0x9B05688C2B3E6C1F);

166 
˘x
->
°©e
[6] = 
	`UL64
(0x1F83D9ABFB41BD6B);

167 
˘x
->
°©e
[7] = 
	`UL64
(0x5BE0CD19137E2179);

172 
˘x
->
°©e
[0] = 
	`UL64
(0xCBBB9D5DC1059ED8);

173 
˘x
->
°©e
[1] = 
	`UL64
(0x629A292A367CD507);

174 
˘x
->
°©e
[2] = 
	`UL64
(0x9159015A3070DD17);

175 
˘x
->
°©e
[3] = 
	`UL64
(0x152FECD8F70E5939);

176 
˘x
->
°©e
[4] = 
	`UL64
(0x67332667FFC00B31);

177 
˘x
->
°©e
[5] = 
	`UL64
(0x8EB44A8768581511);

178 
˘x
->
°©e
[6] = 
	`UL64
(0xDB0C2E0D64F98FA7);

179 
˘x
->
°©e
[7] = 
	`UL64
(0x47B5481DBEFA4FA4);

182 
˘x
->
is384
 = is384;

183 
	}
}

185 
	$sha512_¥o˚ss
–
sha512_c⁄ãxt
 *
˘x
, c⁄° 
d©a
[128] )

187 
i
;

188 
uöt64_t
 
ãmp1
, 
ãmp2
, 
W
[80];

189 
uöt64_t
 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
;

191 
	#SHR
(
x
,
n
Ë(x >>Ç)

	)

192 
	#ROTR
(
x
,
n
Ë(
	`SHR
(x,nË| (x << (64 -Ç)))

	)

194 
	#S0
(
x
Ë(
	`ROTR
(x, 1Ë^ ROTR(x, 8Ë^ 
	`SHR
(x, 7))

	)

195 
	#S1
(
x
Ë(
	`ROTR
(x,19Ë^ ROTR(x,61Ë^ 
	`SHR
(x, 6))

	)

197 
	#S2
(
x
Ë(
	`ROTR
(x,28Ë^ ROTR(x,34Ë^ ROTR(x,39))

	)

198 
	#S3
(
x
Ë(
	`ROTR
(x,14Ë^ ROTR(x,18Ë^ ROTR(x,41))

	)

200 
	#F0
(
x
,
y
,
z
Ë((x & yË| (z & (x | y)))

	)

201 
	#F1
(
x
,
y
,
z
Ë(z ^ (x & (y ^ z)))

	)

203 
	#P
(
a
,
b
,
c
,
d
,
e
,
f
,
g
,
h
,
x
,
K
) \

205 
ãmp1
 = 
h
 + 
	`S3
(
e
Ë+ 
	`F1
”,
f
,
g
Ë+ 
K
 + 
x
; \

206 
ãmp2
 = 
	`S2
(
a
Ë+ 
	`F0
◊,
b
,
c
); \

207 
d
 +
ãmp1
; 
h
 =Åemp1 + 
ãmp2
; \

208 }

	)

210  
i
 = 0; i < 16; i++ )

212 
	`GET_UINT64_BE
–
W
[
i
], 
d©a
, i << 3 );

215  ; 
i
 < 80; i++ )

217 
W
[
i
] = 
	`S1
(W[i - 2]) + W[i - 7] +

218 
	`S0
(
W
[
i
 - 15]) + W[i - 16];

221 
A
 = 
˘x
->
°©e
[0];

222 
B
 = 
˘x
->
°©e
[1];

223 
C
 = 
˘x
->
°©e
[2];

224 
D
 = 
˘x
->
°©e
[3];

225 
E
 = 
˘x
->
°©e
[4];

226 
F
 = 
˘x
->
°©e
[5];

227 
G
 = 
˘x
->
°©e
[6];

228 
H
 = 
˘x
->
°©e
[7];

229 
i
 = 0;

233 
	`P
–
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
W
[
i
], 
K
[i] ); i++;

234 
	`P
–
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
W
[
i
], 
K
[i] ); i++;

235 
	`P
–
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
F
, 
W
[
i
], 
K
[i] ); i++;

236 
	`P
–
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
E
, 
W
[
i
], 
K
[i] ); i++;

237 
	`P
–
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
D
, 
W
[
i
], 
K
[i] ); i++;

238 
	`P
–
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
C
, 
W
[
i
], 
K
[i] ); i++;

239 
	`P
–
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
B
, 
W
[
i
], 
K
[i] ); i++;

240 
	`P
–
B
, 
C
, 
D
, 
E
, 
F
, 
G
, 
H
, 
A
, 
W
[
i
], 
K
[i] ); i++;

242  
i
 < 80 );

244 
˘x
->
°©e
[0] +
A
;

245 
˘x
->
°©e
[1] +
B
;

246 
˘x
->
°©e
[2] +
C
;

247 
˘x
->
°©e
[3] +
D
;

248 
˘x
->
°©e
[4] +
E
;

249 
˘x
->
°©e
[5] +
F
;

250 
˘x
->
°©e
[6] +
G
;

251 
˘x
->
°©e
[7] +
H
;

252 
	}
}

257 
	$sha512_upd©e
–
sha512_c⁄ãxt
 *
˘x
, c⁄° *
öput
,

258 
size_t
 
ûí
 )

260 
size_t
 
fûl
;

261 
À·
;

263 if–
ûí
 == 0 )

266 
À·
 = (Ë(
˘x
->
tŸÆ
[0] & 0x7F);

267 
fûl
 = 128 - 
À·
;

269 
˘x
->
tŸÆ
[0] +(
uöt64_t
Ë
ûí
;

271 if–
˘x
->
tŸÆ
[0] < (
uöt64_t
Ë
ûí
 )

272 
˘x
->
tŸÆ
[1]++;

274 if–
À·
 && 
ûí
 >
fûl
 )

276 
	`mem˝y
–(*Ë(
˘x
->
buf„r
 + 
À·
), 
öput
, 
fûl
 );

277 
	`sha512_¥o˚ss
–
˘x
, ctx->
buf„r
 );

278 
öput
 +
fûl
;

279 
ûí
 -
fûl
;

280 
À·
 = 0;

283  
ûí
 >= 128 )

285 
	`sha512_¥o˚ss
–
˘x
, 
öput
 );

286 
öput
 += 128;

287 
ûí
 -= 128;

290 if–
ûí
 > 0 )

291 
	`mem˝y
–(*Ë(
˘x
->
buf„r
 + 
À·
), 
öput
, 
ûí
 );

292 
	}
}

294 c⁄° 
	gsha512_∑ddög
[128] =

309 
	$sha512_föish
–
sha512_c⁄ãxt
 *
˘x
, 
ouçut
[64] )

311 
size_t
 
œ°
, 
∑dn
;

312 
uöt64_t
 
high
, 
low
;

313 
msgÀn
[16];

315 
high
 = ( 
˘x
->
tŸÆ
[0] >> 61 )

316 | ( 
˘x
->
tŸÆ
[1] << 3 );

317 
low
 = ( 
˘x
->
tŸÆ
[0] << 3 );

319 
	`PUT_UINT64_BE
–
high
, 
msgÀn
, 0 );

320 
	`PUT_UINT64_BE
–
low
, 
msgÀn
, 8 );

322 
œ°
 = (
size_t
)–
˘x
->
tŸÆ
[0] & 0x7F );

323 
∑dn
 = ( 
œ°
 < 112 ) ? ( 112 -Üast ) : ( 240 -Üast );

325 
	`sha512_upd©e
–
˘x
, 
sha512_∑ddög
, 
∑dn
 );

326 
	`sha512_upd©e
–
˘x
, 
msgÀn
, 16 );

328 
	`PUT_UINT64_BE
–
˘x
->
°©e
[0], 
ouçut
, 0 );

329 
	`PUT_UINT64_BE
–
˘x
->
°©e
[1], 
ouçut
, 8 );

330 
	`PUT_UINT64_BE
–
˘x
->
°©e
[2], 
ouçut
, 16 );

331 
	`PUT_UINT64_BE
–
˘x
->
°©e
[3], 
ouçut
, 24 );

332 
	`PUT_UINT64_BE
–
˘x
->
°©e
[4], 
ouçut
, 32 );

333 
	`PUT_UINT64_BE
–
˘x
->
°©e
[5], 
ouçut
, 40 );

335 if–
˘x
->
is384
 == 0 )

337 
	`PUT_UINT64_BE
–
˘x
->
°©e
[6], 
ouçut
, 48 );

338 
	`PUT_UINT64_BE
–
˘x
->
°©e
[7], 
ouçut
, 56 );

340 
	}
}

347 
	$sha512
–c⁄° *
öput
, 
size_t
 
ûí
,

348 
ouçut
[64], 
is384
 )

350 
sha512_c⁄ãxt
 
˘x
;

352 
	`sha512_öô
–&
˘x
 );

353 
	`sha512_°¨ts
–&
˘x
, 
is384
 );

354 
	`sha512_upd©e
–&
˘x
, 
öput
, 
ûí
 );

355 
	`sha512_föish
–&
˘x
, 
ouçut
 );

356 
	`sha512_‰ì
–&
˘x
 );

357 
	}
}

359 #i‡
deföed
(
POLARSSL_FS_IO
)

363 
	$sha512_fûe
–c⁄° *
∑th
, 
ouçut
[64], 
is384
 )

365 
FILE
 *
f
;

366 
size_t
 
n
;

367 
sha512_c⁄ãxt
 
˘x
;

368 
buf
[1024];

370 if––
f
 = 
	`f›í
–
∑th
, "rb" ) ) =
NULL
 )

371 –
POLARSSL_ERR_SHA512_FILE_IO_ERROR
 );

373 
	`sha512_öô
–&
˘x
 );

374 
	`sha512_°¨ts
–&
˘x
, 
is384
 );

376  ( 
n
 = 
	`‰ód
–
buf
, 1, –bu‡), 
f
 ) ) > 0 )

377 
	`sha512_upd©e
–&
˘x
, 
buf
, 
n
 );

379 
	`sha512_föish
–&
˘x
, 
ouçut
 );

380 
	`sha512_‰ì
–&
˘x
 );

382 if–
	`„º‹
–
f
 ) != 0 )

384 
	`f˛o£
–
f
 );

385 –
POLARSSL_ERR_SHA512_FILE_IO_ERROR
 );

388 
	`f˛o£
–
f
 );

390 
	}
}

396 
	$sha512_hmac_°¨ts
–
sha512_c⁄ãxt
 *
˘x
, c⁄° *
key
,

397 
size_t
 
keyÀn
, 
is384
 )

399 
size_t
 
i
;

400 
sum
[64];

402 if–
keyÀn
 > 128 )

404 
	`sha512
–
key
, 
keyÀn
, 
sum
, 
is384
 );

405 
keyÀn
 = ( 
is384
 ) ? 48 : 64;

406 
key
 = 
sum
;

409 
	`mem£t
–
˘x
->
ùad
, 0x36, 128 );

410 
	`mem£t
–
˘x
->
›ad
, 0x5C, 128 );

412  
i
 = 0; i < 
keyÀn
; i++ )

414 
˘x
->
ùad
[
i
] = ()–˘x->ùad[i] ^ 
key
[i] );

415 
˘x
->
›ad
[
i
] = ()–˘x->›ad[i] ^ 
key
[i] );

418 
	`sha512_°¨ts
–
˘x
, 
is384
 );

419 
	`sha512_upd©e
–
˘x
, ctx->
ùad
, 128 );

421 
	`pﬁ¨s¶_zîoize
–
sum
, ( sum ) );

422 
	}
}

427 
	$sha512_hmac_upd©e
–
sha512_c⁄ãxt
 *
˘x
,

428 c⁄° *
öput
, 
size_t
 
ûí
 )

430 
	`sha512_upd©e
–
˘x
, 
öput
, 
ûí
 );

431 
	}
}

436 
	$sha512_hmac_föish
–
sha512_c⁄ãxt
 *
˘x
, 
ouçut
[64] )

438 
is384
, 
hÀn
;

439 
tmpbuf
[64];

441 
is384
 = 
˘x
->is384;

442 
hÀn
 = ( 
is384
 == 0 ) ? 64 : 48;

444 
	`sha512_föish
–
˘x
, 
tmpbuf
 );

445 
	`sha512_°¨ts
–
˘x
, 
is384
 );

446 
	`sha512_upd©e
–
˘x
, ctx->
›ad
, 128 );

447 
	`sha512_upd©e
–
˘x
, 
tmpbuf
, 
hÀn
 );

448 
	`sha512_föish
–
˘x
, 
ouçut
 );

450 
	`pﬁ¨s¶_zîoize
–
tmpbuf
, (Åmpbuf ) );

451 
	}
}

456 
	$sha512_hmac_ª£t
–
sha512_c⁄ãxt
 *
˘x
 )

458 
	`sha512_°¨ts
–
˘x
, ctx->
is384
 );

459 
	`sha512_upd©e
–
˘x
, ctx->
ùad
, 128 );

460 
	}
}

465 
	$sha512_hmac
–c⁄° *
key
, 
size_t
 
keyÀn
,

466 c⁄° *
öput
, 
size_t
 
ûí
,

467 
ouçut
[64], 
is384
 )

469 
sha512_c⁄ãxt
 
˘x
;

471 
	`sha512_öô
–&
˘x
 );

472 
	`sha512_hmac_°¨ts
–&
˘x
, 
key
, 
keyÀn
, 
is384
 );

473 
	`sha512_hmac_upd©e
–&
˘x
, 
öput
, 
ûí
 );

474 
	`sha512_hmac_föish
–&
˘x
, 
ouçut
 );

475 
	`sha512_‰ì
–&
˘x
 );

476 
	}
}

478 #i‡
deföed
(
POLARSSL_SELF_TEST
)

483 
	gsha512_ã°_buf
[3][113] =

491 c⁄° 
	gsha512_ã°_buÊí
[3] =

496 c⁄° 
	gsha512_ã°_sum
[6][64] =

552 
	gsha512_hmac_ã°_key
[7][26] =

567 c⁄° 
	gsha512_hmac_ã°_keyÀn
[7] =

572 
	gsha512_hmac_ã°_buf
[7][153] =

593 c⁄° 
	gsha512_hmac_ã°_buÊí
[7] =

598 c⁄° 
	gsha512_hmac_ã°_sum
[14][64] =

700 
	$sha512_£lf_ã°
–
vîbo£
 )

702 
i
, 
j
, 
k
, 
buÊí
, 
ªt
 = 0;

703 
buf
[1024];

704 
sha512sum
[64];

705 
sha512_c⁄ãxt
 
˘x
;

707 
	`sha512_öô
–&
˘x
 );

709  
i
 = 0; i < 6; i++ )

711 
j
 = 
i
 % 3;

712 
k
 = 
i
 < 3;

714 if–
vîbo£
 != 0 )

715 
	`pﬁ¨s¶_¥ötf
–" SHA-%dÅe° #%d: ", 512 - 
k
 * 128, 
j
 + 1 );

717 
	`sha512_°¨ts
–&
˘x
, 
k
 );

719 if–
j
 == 2 )

721 
	`mem£t
–
buf
, 'a', 
buÊí
 = 1000 );

723  
j
 = 0; j < 1000; j++ )

724 
	`sha512_upd©e
–&
˘x
, 
buf
, 
buÊí
 );

727 
	`sha512_upd©e
–&
˘x
, 
sha512_ã°_buf
[
j
],

728 
sha512_ã°_buÊí
[
j
] );

730 
	`sha512_föish
–&
˘x
, 
sha512sum
 );

732 if–
	`memcmp
–
sha512sum
, 
sha512_ã°_sum
[
i
], 64 - 
k
 * 16 ) != 0 )

734 if–
vîbo£
 != 0 )

735 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

737 
ªt
 = 1;

738 
exô
;

741 if–
vîbo£
 != 0 )

742 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

745 if–
vîbo£
 != 0 )

746 
	`pﬁ¨s¶_¥ötf
( "\n" );

748  
i
 = 0; i < 14; i++ )

750 
j
 = 
i
 % 7;

751 
k
 = 
i
 < 7;

753 if–
vîbo£
 != 0 )

754 
	`pﬁ¨s¶_¥ötf
–" HMAC-SHA-%dÅe° #%d: ", 512 - 
k
 * 128, 
j
 + 1 );

756 if–
j
 == 5 || j == 6 )

758 
	`mem£t
–
buf
, '\xAA', 
buÊí
 = 131 );

759 
	`sha512_hmac_°¨ts
–&
˘x
, 
buf
, 
buÊí
, 
k
 );

762 
	`sha512_hmac_°¨ts
–&
˘x
, 
sha512_hmac_ã°_key
[
j
],

763 
sha512_hmac_ã°_keyÀn
[
j
], 
k
 );

765 
	`sha512_hmac_upd©e
–&
˘x
, 
sha512_hmac_ã°_buf
[
j
],

766 
sha512_hmac_ã°_buÊí
[
j
] );

768 
	`sha512_hmac_föish
–&
˘x
, 
sha512sum
 );

770 
buÊí
 = ( 
j
 =4 ) ? 16 : 64 - 
k
 * 16;

772 if–
	`memcmp
–
sha512sum
, 
sha512_hmac_ã°_sum
[
i
], 
buÊí
 ) != 0 )

774 if–
vîbo£
 != 0 )

775 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

777 
ªt
 = 1;

778 
exô
;

781 if–
vîbo£
 != 0 )

782 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

785 if–
vîbo£
 != 0 )

786 
	`pﬁ¨s¶_¥ötf
( "\n" );

788 
exô
:

789 
	`sha512_‰ì
–&
˘x
 );

791 –
ªt
 );

792 
	}
}

	@polarssl/library/ssl_cache.c

30 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

31 
	~"pﬁ¨s¶/c⁄fig.h
"

33 #ö˛udê
POLARSSL_CONFIG_FILE


36 #i‡
deföed
(
POLARSSL_SSL_CACHE_C
)

38 
	~"pﬁ¨s¶/s¶_ˇche.h
"

40 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

41 
	~"pﬁ¨s¶/∂©f‹m.h
"

43 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

44 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

47 
	~<°dlib.h
>

49 
	$s¶_ˇche_öô
–
s¶_ˇche_c⁄ãxt
 *
ˇche
 )

51 
	`mem£t
–
ˇche
, 0, –
s¶_ˇche_c⁄ãxt
 ) );

53 
ˇche
->
timeout
 = 
SSL_CACHE_DEFAULT_TIMEOUT
;

54 
ˇche
->
max_íåõs
 = 
SSL_CACHE_DEFAULT_MAX_ENTRIES
;

56 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

57 
	`pﬁ¨s¶_muãx_öô
–&
ˇche
->
muãx
 );

59 
	}
}

61 
	$s¶_ˇche_gë
–*
d©a
, 
s¶_£ssi⁄
 *
£ssi⁄
 )

63 
ªt
 = 1;

64 #i‡
	`deföed
(
POLARSSL_HAVE_TIME
)

65 
time_t
 
t
 = 
	`time
–
NULL
 );

67 
s¶_ˇche_c⁄ãxt
 *
ˇche
 = (s¶_ˇche_c⁄ãxà*Ë
d©a
;

68 
s¶_ˇche_íåy
 *
cur
, *
íåy
;

70 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

71 if–
	`pﬁ¨s¶_muãx_lock
–&
ˇche
->
muãx
 ) != 0 )

75 
cur
 = 
ˇche
->
chaö
;

76 
íåy
 = 
NULL
;

78  
cur
 !
NULL
 )

80 
íåy
 = 
cur
;

81 
cur
 = cur->
√xt
;

83 #i‡
	`deföed
(
POLARSSL_HAVE_TIME
)

84 if–
ˇche
->
timeout
 != 0 &&

85 (Ë–
t
 - 
íåy
->
time°amp
 ) > 
ˇche
->
timeout
 )

89 if–
£ssi⁄
->
cùhîsuôe
 !
íåy
->session.ciphersuite ||

90 
£ssi⁄
->
com¥essi⁄
 !
íåy
->session.compression ||

91 
£ssi⁄
->
Àngth
 !
íåy
->session.length )

94 if–
	`memcmp
–
£ssi⁄
->
id
, 
íåy
->session.id,

95 
íåy
->
£ssi⁄
.
Àngth
 ) != 0 )

98 
	`mem˝y
–
£ssi⁄
->
ma°î
, 
íåy
->session.master, 48 );

100 
£ssi⁄
->
vîify_ªsu…
 = 
íåy
->session.verify_result;

102 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

106 if–
íåy
->
≥î_˚π
.
p
 !
NULL
 )

108 
£ssi⁄
->
≥î_˚π
 =

109 (
x509_¸t
 *Ë
	`pﬁ¨s¶_mÆloc
( (x509_crt) );

111 if–
£ssi⁄
->
≥î_˚π
 =
NULL
 )

113 
ªt
 = 1;

114 
exô
;

117 
	`x509_¸t_öô
–
£ssi⁄
->
≥î_˚π
 );

118 if–
	`x509_¸t_∑r£
–
£ssi⁄
->
≥î_˚π
, 
íåy
->≥î_˚π.
p
,

119 
íåy
->
≥î_˚π
.
Àn
 ) != 0 )

121 
	`pﬁ¨s¶_‰ì
–
£ssi⁄
->
≥î_˚π
 );

122 
£ssi⁄
->
≥î_˚π
 = 
NULL
;

123 
ªt
 = 1;

124 
exô
;

129 
ªt
 = 0;

130 
exô
;

133 
exô
:

134 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

135 if–
	`pﬁ¨s¶_muãx_u∆ock
–&
ˇche
->
muãx
 ) != 0 )

136 
ªt
 = 1;

139 –
ªt
 );

140 
	}
}

142 
	$s¶_ˇche_£t
–*
d©a
, c⁄° 
s¶_£ssi⁄
 *
£ssi⁄
 )

144 
ªt
 = 1;

145 #i‡
	`deföed
(
POLARSSL_HAVE_TIME
)

146 
time_t
 
t
 = 
	`time
–
NULL
 ), 
ﬁde°
 = 0;

147 
s¶_ˇche_íåy
 *
ﬁd
 = 
NULL
;

149 
s¶_ˇche_c⁄ãxt
 *
ˇche
 = (s¶_ˇche_c⁄ãxà*Ë
d©a
;

150 
s¶_ˇche_íåy
 *
cur
, *
¥v
;

151 
cou¡
 = 0;

153 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

154 if––
ªt
 = 
	`pﬁ¨s¶_muãx_lock
–&
ˇche
->
muãx
 ) ) != 0 )

155 –
ªt
 );

158 
cur
 = 
ˇche
->
chaö
;

159 
¥v
 = 
NULL
;

161  
cur
 !
NULL
 )

163 
cou¡
++;

165 #i‡
	`deföed
(
POLARSSL_HAVE_TIME
)

166 if–
ˇche
->
timeout
 != 0 &&

167 (Ë–
t
 - 
cur
->
time°amp
 ) > 
ˇche
->
timeout
 )

169 
cur
->
time°amp
 = 
t
;

174 if–
	`memcmp
–
£ssi⁄
->
id
, 
cur
->£ssi⁄.id, cur->£ssi⁄.
Àngth
 ) == 0 )

177 #i‡
	`deföed
(
POLARSSL_HAVE_TIME
)

178 if–
ﬁde°
 =0 || 
cur
->
time°amp
 < oldest )

180 
ﬁde°
 = 
cur
->
time°amp
;

181 
ﬁd
 = 
cur
;

185 
¥v
 = 
cur
;

186 
cur
 = cur->
√xt
;

189 if–
cur
 =
NULL
 )

191 #i‡
	`deföed
(
POLARSSL_HAVE_TIME
)

195 if–
cou¡
 >
ˇche
->
max_íåõs
 )

197 if–
ﬁd
 =
NULL
 )

199 
ªt
 = 1;

200 
exô
;

203 
cur
 = 
ﬁd
;

210 if–
cou¡
 >
ˇche
->
max_íåõs
 )

212 if–
ˇche
->
chaö
 =
NULL
 )

214 
ªt
 = 1;

215 
exô
;

218 
cur
 = 
ˇche
->
chaö
;

219 
ˇche
->
chaö
 = 
cur
->
√xt
;

220 
cur
->
√xt
 = 
NULL
;

221 
¥v
->
√xt
 = 
cur
;

229 
cur
 = (
s¶_ˇche_íåy
 *)

230 
	`pﬁ¨s¶_mÆloc
–(
s¶_ˇche_íåy
) );

231 if–
cur
 =
NULL
 )

233 
ªt
 = 1;

234 
exô
;

237 
	`mem£t
–
cur
, 0, (
s¶_ˇche_íåy
) );

239 if–
¥v
 =
NULL
 )

240 
ˇche
->
chaö
 = 
cur
;

242 
¥v
->
√xt
 = 
cur
;

245 #i‡
	`deföed
(
POLARSSL_HAVE_TIME
)

246 
cur
->
time°amp
 = 
t
;

250 
	`mem˝y
–&
cur
->
£ssi⁄
, sessi⁄, –
s¶_£ssi⁄
 ) );

252 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

256 if–
cur
->
≥î_˚π
.
p
 !
NULL
 )

258 
	`pﬁ¨s¶_‰ì
–
cur
->
≥î_˚π
.
p
 );

259 
	`mem£t
–&
cur
->
≥î_˚π
, 0, (
x509_buf
) );

265 if–
£ssi⁄
->
≥î_˚π
 !
NULL
 )

267 
cur
->
≥î_˚π
.
p
 = (*)

268 
	`pﬁ¨s¶_mÆloc
–
£ssi⁄
->
≥î_˚π
->
øw
.
Àn
 );

269 if–
cur
->
≥î_˚π
.
p
 =
NULL
 )

271 
ªt
 = 1;

272 
exô
;

275 
	`mem˝y
–
cur
->
≥î_˚π
.
p
, 
£ssi⁄
->≥î_˚π->
øw
.p,

276 
£ssi⁄
->
≥î_˚π
->
øw
.
Àn
 );

277 
cur
->
≥î_˚π
.
Àn
 = 
£ssi⁄
->≥î_˚π->
øw
.len;

279 
cur
->
£ssi⁄
.
≥î_˚π
 = 
NULL
;

283 
ªt
 = 0;

285 
exô
:

286 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

287 if–
	`pﬁ¨s¶_muãx_u∆ock
–&
ˇche
->
muãx
 ) != 0 )

288 
ªt
 = 1;

291 –
ªt
 );

292 
	}
}

294 #i‡
deföed
(
POLARSSL_HAVE_TIME
)

295 
	$s¶_ˇche_£t_timeout
–
s¶_ˇche_c⁄ãxt
 *
ˇche
, 
timeout
 )

297 if–
timeout
 < 0 )Åimeout = 0;

299 
ˇche
->
timeout
 =Åimeout;

300 
	}
}

303 
	$s¶_ˇche_£t_max_íåõs
–
s¶_ˇche_c⁄ãxt
 *
ˇche
, 
max
 )

305 if–
max
 < 0 ) max = 0;

307 
ˇche
->
max_íåõs
 = 
max
;

308 
	}
}

310 
	$s¶_ˇche_‰ì
–
s¶_ˇche_c⁄ãxt
 *
ˇche
 )

312 
s¶_ˇche_íåy
 *
cur
, *
¥v
;

314 
cur
 = 
ˇche
->
chaö
;

316  
cur
 !
NULL
 )

318 
¥v
 = 
cur
;

319 
cur
 = cur->
√xt
;

321 
	`s¶_£ssi⁄_‰ì
–&
¥v
->
£ssi⁄
 );

323 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

324 
	`pﬁ¨s¶_‰ì
–
¥v
->
≥î_˚π
.
p
 );

327 
	`pﬁ¨s¶_‰ì
–
¥v
 );

330 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

331 
	`pﬁ¨s¶_muãx_‰ì
–&
ˇche
->
muãx
 );

333 
	}
}

	@polarssl/library/ssl_ciphersuites.c

28 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

29 
	~"pﬁ¨s¶/c⁄fig.h
"

31 #ö˛udê
POLARSSL_CONFIG_FILE


34 #i‡
deföed
(
POLARSSL_SSL_TLS_C
)

36 
	~"pﬁ¨s¶/s¶_cùhîsuôes.h
"

37 
	~"pﬁ¨s¶/s¶.h
"

39 
	~<°dlib.h
>

41 #i‡
deföed
(
_MSC_VER
Ë&& !deföed 
°rˇ£cmp
 && !deföed(
EFIX64
) && \

42 !
	$deföed
(
EFI32
)

43 
	#°rˇ£cmp
 
_°ricmp


	)

58 c⁄° 
cùhîsuôe_¥e„ªn˚
[] =

60 #i‡
	`deföed
(
SSL_CIPHERSUITES
)

61 
SSL_CIPHERSUITES
,

64 
TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
,

65 
TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
,

66 
TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
,

67 
TLS_ECDHE_ECDSA_WITH_AES_256_CCM
,

68 
TLS_DHE_RSA_WITH_AES_256_CCM
,

69 
TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
,

70 
TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
,

71 
TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
,

72 
TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
,

73 
TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
,

74 
TLS_DHE_RSA_WITH_AES_256_CBC_SHA
,

75 
TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8
,

76 
TLS_DHE_RSA_WITH_AES_256_CCM_8
,

79 
TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384
,

80 
TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384
,

81 
TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384
,

82 
TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384
,

83 
TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384
,

84 
TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256
,

85 
TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA
,

88 
TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
,

89 
TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
,

90 
TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
,

91 
TLS_ECDHE_ECDSA_WITH_AES_128_CCM
,

92 
TLS_DHE_RSA_WITH_AES_128_CCM
,

93 
TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
,

94 
TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
,

95 
TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
,

96 
TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
,

97 
TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
,

98 
TLS_DHE_RSA_WITH_AES_128_CBC_SHA
,

99 
TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8
,

100 
TLS_DHE_RSA_WITH_AES_128_CCM_8
,

103 
TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256
,

104 
TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256
,

105 
TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256
,

106 
TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256
,

107 
TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256
,

108 
TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256
,

109 
TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA
,

112 
TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
,

113 
TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
,

114 
TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
,

117 
TLS_DHE_PSK_WITH_AES_256_GCM_SHA384
,

118 
TLS_DHE_PSK_WITH_AES_256_CCM
,

119 
TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384
,

120 
TLS_DHE_PSK_WITH_AES_256_CBC_SHA384
,

121 
TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
,

122 
TLS_DHE_PSK_WITH_AES_256_CBC_SHA
,

123 
TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384
,

124 
TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384
,

125 
TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384
,

126 
TLS_DHE_PSK_WITH_AES_256_CCM_8
,

128 
TLS_DHE_PSK_WITH_AES_128_GCM_SHA256
,

129 
TLS_DHE_PSK_WITH_AES_128_CCM
,

130 
TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256
,

131 
TLS_DHE_PSK_WITH_AES_128_CBC_SHA256
,

132 
TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
,

133 
TLS_DHE_PSK_WITH_AES_128_CBC_SHA
,

134 
TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256
,

135 
TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256
,

136 
TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256
,

137 
TLS_DHE_PSK_WITH_AES_128_CCM_8
,

139 
TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA
,

140 
TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA
,

143 
TLS_RSA_WITH_AES_256_GCM_SHA384
,

144 
TLS_RSA_WITH_AES_256_CCM
,

145 
TLS_RSA_WITH_AES_256_CBC_SHA256
,

146 
TLS_RSA_WITH_AES_256_CBC_SHA
,

147 
TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
,

148 
TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
,

149 
TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
,

150 
TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
,

151 
TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
,

152 
TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
,

153 
TLS_RSA_WITH_AES_256_CCM_8
,

156 
TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384
,

157 
TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256
,

158 
TLS_RSA_WITH_CAMELLIA_256_CBC_SHA
,

159 
TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384
,

160 
TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384
,

161 
TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384
,

162 
TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384
,

165 
TLS_RSA_WITH_AES_128_GCM_SHA256
,

166 
TLS_RSA_WITH_AES_128_CCM
,

167 
TLS_RSA_WITH_AES_128_CBC_SHA256
,

168 
TLS_RSA_WITH_AES_128_CBC_SHA
,

169 
TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
,

170 
TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
,

171 
TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
,

172 
TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
,

173 
TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
,

174 
TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
,

175 
TLS_RSA_WITH_AES_128_CCM_8
,

178 
TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256
,

179 
TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256
,

180 
TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
,

181 
TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256
,

182 
TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256
,

183 
TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256
,

184 
TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256
,

187 
TLS_RSA_WITH_3DES_EDE_CBC_SHA
,

188 
TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
,

189 
TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
,

192 
TLS_RSA_PSK_WITH_AES_256_GCM_SHA384
,

193 
TLS_RSA_PSK_WITH_AES_256_CBC_SHA384
,

194 
TLS_RSA_PSK_WITH_AES_256_CBC_SHA
,

195 
TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384
,

196 
TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384
,

198 
TLS_RSA_PSK_WITH_AES_128_GCM_SHA256
,

199 
TLS_RSA_PSK_WITH_AES_128_CBC_SHA256
,

200 
TLS_RSA_PSK_WITH_AES_128_CBC_SHA
,

201 
TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256
,

202 
TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256
,

204 
TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA
,

207 
TLS_PSK_WITH_AES_256_GCM_SHA384
,

208 
TLS_PSK_WITH_AES_256_CCM
,

209 
TLS_PSK_WITH_AES_256_CBC_SHA384
,

210 
TLS_PSK_WITH_AES_256_CBC_SHA
,

211 
TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384
,

212 
TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384
,

213 
TLS_PSK_WITH_AES_256_CCM_8
,

215 
TLS_PSK_WITH_AES_128_GCM_SHA256
,

216 
TLS_PSK_WITH_AES_128_CCM
,

217 
TLS_PSK_WITH_AES_128_CBC_SHA256
,

218 
TLS_PSK_WITH_AES_128_CBC_SHA
,

219 
TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256
,

220 
TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256
,

221 
TLS_PSK_WITH_AES_128_CCM_8
,

223 
TLS_PSK_WITH_3DES_EDE_CBC_SHA
,

226 
TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
,

227 
TLS_ECDHE_RSA_WITH_RC4_128_SHA
,

228 
TLS_ECDHE_PSK_WITH_RC4_128_SHA
,

229 
TLS_DHE_PSK_WITH_RC4_128_SHA
,

230 
TLS_RSA_WITH_RC4_128_SHA
,

231 
TLS_RSA_WITH_RC4_128_MD5
,

232 
TLS_ECDH_RSA_WITH_RC4_128_SHA
,

233 
TLS_ECDH_ECDSA_WITH_RC4_128_SHA
,

234 
TLS_RSA_PSK_WITH_RC4_128_SHA
,

235 
TLS_PSK_WITH_RC4_128_SHA
,

238 
TLS_DHE_RSA_WITH_DES_CBC_SHA
,

239 
TLS_RSA_WITH_DES_CBC_SHA
,

242 
TLS_ECDHE_ECDSA_WITH_NULL_SHA
,

243 
TLS_ECDHE_RSA_WITH_NULL_SHA
,

244 
TLS_ECDHE_PSK_WITH_NULL_SHA384
,

245 
TLS_ECDHE_PSK_WITH_NULL_SHA256
,

246 
TLS_ECDHE_PSK_WITH_NULL_SHA
,

247 
TLS_DHE_PSK_WITH_NULL_SHA384
,

248 
TLS_DHE_PSK_WITH_NULL_SHA256
,

249 
TLS_DHE_PSK_WITH_NULL_SHA
,

251 
TLS_RSA_WITH_NULL_SHA256
,

252 
TLS_RSA_WITH_NULL_SHA
,

253 
TLS_RSA_WITH_NULL_MD5
,

254 
TLS_ECDH_RSA_WITH_NULL_SHA
,

255 
TLS_ECDH_ECDSA_WITH_NULL_SHA
,

256 
TLS_RSA_PSK_WITH_NULL_SHA384
,

257 
TLS_RSA_PSK_WITH_NULL_SHA256
,

258 
TLS_RSA_PSK_WITH_NULL_SHA
,

259 
TLS_PSK_WITH_NULL_SHA384
,

260 
TLS_PSK_WITH_NULL_SHA256
,

261 
TLS_PSK_WITH_NULL_SHA
,

265 
	}
};

267 c⁄° 
s¶_cùhîsuôe_t
 
	gcùhîsuôe_deföôi⁄s
[] =

269 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
)

270 #i‡
deföed
(
POLARSSL_AES_C
)

271 #i‡
deföed
(
POLARSSL_SHA1_C
)

272 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

273 { 
TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
, "TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA",

274 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
,

275 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

276 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

278 { 
TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
, "TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA",

279 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
,

280 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

281 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

285 #i‡
deföed
(
POLARSSL_SHA256_C
)

286 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

287 { 
TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
, "TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256",

288 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
,

289 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

290 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

293 #i‡
deföed
(
POLARSSL_GCM_C
)

294 { 
TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
, "TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256",

295 
POLARSSL_CIPHER_AES_128_GCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
,

296 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

297 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

301 #i‡
deföed
(
POLARSSL_SHA512_C
)

302 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

303 { 
TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
, "TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384",

304 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
,

305 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

306 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

309 #i‡
deföed
(
POLARSSL_GCM_C
)

310 { 
TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
, "TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384",

311 
POLARSSL_CIPHER_AES_256_GCM
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
,

312 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

313 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

317 #i‡
deföed
(
POLARSSL_CCM_C
)

318 { 
TLS_ECDHE_ECDSA_WITH_AES_256_CCM
, "TLS-ECDHE-ECDSA-WITH-AES-256-CCM",

319 
POLARSSL_CIPHER_AES_256_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
,

320 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

321 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

323 { 
TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8
, "TLS-ECDHE-ECDSA-WITH-AES-256-CCM-8",

324 
POLARSSL_CIPHER_AES_256_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
,

325 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

326 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

327 
POLARSSL_CIPHERSUITE_SHORT_TAG
 },

328 { 
TLS_ECDHE_ECDSA_WITH_AES_128_CCM
, "TLS-ECDHE-ECDSA-WITH-AES-128-CCM",

329 
POLARSSL_CIPHER_AES_128_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
,

330 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

331 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

333 { 
TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8
, "TLS-ECDHE-ECDSA-WITH-AES-128-CCM-8",

334 
POLARSSL_CIPHER_AES_128_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
,

335 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

336 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

337 
POLARSSL_CIPHERSUITE_SHORT_TAG
 },

341 #i‡
deföed
(
POLARSSL_CAMELLIA_C
)

342 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

343 #i‡
deföed
(
POLARSSL_SHA256_C
)

344 { 
TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256
, "TLS-ECDHE-ECDSA-WITH-CAMELLIA-128-CBC-SHA256",

345 
POLARSSL_CIPHER_CAMELLIA_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
,

346 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

347 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

350 #i‡
deföed
(
POLARSSL_SHA512_C
)

351 { 
TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384
, "TLS-ECDHE-ECDSA-WITH-CAMELLIA-256-CBC-SHA384",

352 
POLARSSL_CIPHER_CAMELLIA_256_CBC
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
,

353 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

354 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

359 #i‡
deföed
(
POLARSSL_GCM_C
)

360 #i‡
deföed
(
POLARSSL_SHA256_C
)

361 { 
TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256
, "TLS-ECDHE-ECDSA-WITH-CAMELLIA-128-GCM-SHA256",

362 
POLARSSL_CIPHER_CAMELLIA_128_GCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
,

363 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

364 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

367 #i‡
deföed
(
POLARSSL_SHA512_C
)

368 { 
TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384
, "TLS-ECDHE-ECDSA-WITH-CAMELLIA-256-GCM-SHA384",

369 
POLARSSL_CIPHER_CAMELLIA_256_GCM
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
,

370 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

371 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

377 #i‡
deföed
(
POLARSSL_DES_C
)

378 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

379 #i‡
deföed
(
POLARSSL_SHA1_C
)

380 { 
TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
, "TLS-ECDHE-ECDSA-WITH-3DES-EDE-CBC-SHA",

381 
POLARSSL_CIPHER_DES_EDE3_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
,

382 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

383 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

389 #i‡
deföed
(
POLARSSL_ARC4_C
)

390 #i‡
deföed
(
POLARSSL_SHA1_C
)

391 { 
TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
, "TLS-ECDHE-ECDSA-WITH-RC4-128-SHA",

392 
POLARSSL_CIPHER_ARC4_128
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
,

393 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

394 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

399 #i‡
deföed
(
POLARSSL_CIPHER_NULL_CIPHER
)

400 #i‡
deföed
(
POLARSSL_SHA1_C
)

401 { 
TLS_ECDHE_ECDSA_WITH_NULL_SHA
, "TLS-ECDHE-ECDSA-WITH-NULL-SHA",

402 
POLARSSL_CIPHER_NULL
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
,

403 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

404 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

405 
POLARSSL_CIPHERSUITE_WEAK
 },

410 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
)

411 #i‡
deföed
(
POLARSSL_AES_C
)

412 #i‡
deföed
(
POLARSSL_SHA1_C
)

413 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

414 { 
TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
, "TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA",

415 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
,

416 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

417 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

419 { 
TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
, "TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA",

420 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
,

421 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

422 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

426 #i‡
deföed
(
POLARSSL_SHA256_C
)

427 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

428 { 
TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
, "TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256",

429 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
,

430 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

431 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

434 #i‡
deföed
(
POLARSSL_GCM_C
)

435 { 
TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
, "TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256",

436 
POLARSSL_CIPHER_AES_128_GCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
,

437 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

438 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

442 #i‡
deföed
(
POLARSSL_SHA512_C
)

443 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

444 { 
TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
, "TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384",

445 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
,

446 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

447 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

450 #i‡
deföed
(
POLARSSL_GCM_C
)

451 { 
TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
, "TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384",

452 
POLARSSL_CIPHER_AES_256_GCM
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
,

453 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

454 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

460 #i‡
deföed
(
POLARSSL_CAMELLIA_C
)

461 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

462 #i‡
deföed
(
POLARSSL_SHA256_C
)

463 { 
TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256
, "TLS-ECDHE-RSA-WITH-CAMELLIA-128-CBC-SHA256",

464 
POLARSSL_CIPHER_CAMELLIA_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
,

465 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

466 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

469 #i‡
deföed
(
POLARSSL_SHA512_C
)

470 { 
TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384
, "TLS-ECDHE-RSA-WITH-CAMELLIA-256-CBC-SHA384",

471 
POLARSSL_CIPHER_CAMELLIA_256_CBC
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
,

472 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

473 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

478 #i‡
deföed
(
POLARSSL_GCM_C
)

479 #i‡
deföed
(
POLARSSL_SHA256_C
)

480 { 
TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256
, "TLS-ECDHE-RSA-WITH-CAMELLIA-128-GCM-SHA256",

481 
POLARSSL_CIPHER_CAMELLIA_128_GCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
,

482 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

483 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

486 #i‡
deföed
(
POLARSSL_SHA512_C
)

487 { 
TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384
, "TLS-ECDHE-RSA-WITH-CAMELLIA-256-GCM-SHA384",

488 
POLARSSL_CIPHER_CAMELLIA_256_GCM
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
,

489 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

490 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

496 #i‡
deföed
(
POLARSSL_DES_C
)

497 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

498 #i‡
deföed
(
POLARSSL_SHA1_C
)

499 { 
TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
, "TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA",

500 
POLARSSL_CIPHER_DES_EDE3_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
,

501 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

502 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

508 #i‡
deföed
(
POLARSSL_ARC4_C
)

509 #i‡
deföed
(
POLARSSL_SHA1_C
)

510 { 
TLS_ECDHE_RSA_WITH_RC4_128_SHA
, "TLS-ECDHE-RSA-WITH-RC4-128-SHA",

511 
POLARSSL_CIPHER_ARC4_128
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
,

512 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

513 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

518 #i‡
deföed
(
POLARSSL_CIPHER_NULL_CIPHER
)

519 #i‡
deföed
(
POLARSSL_SHA1_C
)

520 { 
TLS_ECDHE_RSA_WITH_NULL_SHA
, "TLS-ECDHE-RSA-WITH-NULL-SHA",

521 
POLARSSL_CIPHER_NULL
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
,

522 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

523 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

524 
POLARSSL_CIPHERSUITE_WEAK
 },

529 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
)

530 #i‡
deföed
(
POLARSSL_AES_C
)

531 #i‡
deföed
(
POLARSSL_SHA512_C
Ë&& deföed(
POLARSSL_GCM_C
)

532 { 
TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
, "TLS-DHE-RSA-WITH-AES-256-GCM-SHA384",

533 
POLARSSL_CIPHER_AES_256_GCM
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_DHE_RSA
,

534 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

535 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

539 #i‡
deföed
(
POLARSSL_SHA256_C
)

540 #i‡
deföed
(
POLARSSL_GCM_C
)

541 { 
TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
, "TLS-DHE-RSA-WITH-AES-128-GCM-SHA256",

542 
POLARSSL_CIPHER_AES_128_GCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_DHE_RSA
,

543 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

544 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

548 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

549 { 
TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
, "TLS-DHE-RSA-WITH-AES-128-CBC-SHA256",

550 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_DHE_RSA
,

551 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

552 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

555 { 
TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
, "TLS-DHE-RSA-WITH-AES-256-CBC-SHA256",

556 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_DHE_RSA
,

557 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

558 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

563 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

564 #i‡
deföed
(
POLARSSL_SHA1_C
)

565 { 
TLS_DHE_RSA_WITH_AES_128_CBC_SHA
, "TLS-DHE-RSA-WITH-AES-128-CBC-SHA",

566 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_DHE_RSA
,

567 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

568 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

571 { 
TLS_DHE_RSA_WITH_AES_256_CBC_SHA
, "TLS-DHE-RSA-WITH-AES-256-CBC-SHA",

572 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_DHE_RSA
,

573 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

574 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

578 #i‡
deföed
(
POLARSSL_CCM_C
)

579 { 
TLS_DHE_RSA_WITH_AES_256_CCM
, "TLS-DHE-RSA-WITH-AES-256-CCM",

580 
POLARSSL_CIPHER_AES_256_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_DHE_RSA
,

581 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

582 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

584 { 
TLS_DHE_RSA_WITH_AES_256_CCM_8
, "TLS-DHE-RSA-WITH-AES-256-CCM-8",

585 
POLARSSL_CIPHER_AES_256_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_DHE_RSA
,

586 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

587 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

588 
POLARSSL_CIPHERSUITE_SHORT_TAG
 },

589 { 
TLS_DHE_RSA_WITH_AES_128_CCM
, "TLS-DHE-RSA-WITH-AES-128-CCM",

590 
POLARSSL_CIPHER_AES_128_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_DHE_RSA
,

591 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

592 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

594 { 
TLS_DHE_RSA_WITH_AES_128_CCM_8
, "TLS-DHE-RSA-WITH-AES-128-CCM-8",

595 
POLARSSL_CIPHER_AES_128_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_DHE_RSA
,

596 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

597 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

598 
POLARSSL_CIPHERSUITE_SHORT_TAG
 },

602 #i‡
deföed
(
POLARSSL_CAMELLIA_C
)

603 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

604 #i‡
deföed
(
POLARSSL_SHA256_C
)

605 { 
TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256
, "TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256",

606 
POLARSSL_CIPHER_CAMELLIA_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_DHE_RSA
,

607 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

608 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

611 { 
TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256
, "TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256",

612 
POLARSSL_CIPHER_CAMELLIA_256_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_DHE_RSA
,

613 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

614 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

618 #i‡
deföed
(
POLARSSL_SHA1_C
)

619 { 
TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA
, "TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA",

620 
POLARSSL_CIPHER_CAMELLIA_128_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_DHE_RSA
,

621 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

622 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

625 { 
TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA
, "TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA",

626 
POLARSSL_CIPHER_CAMELLIA_256_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_DHE_RSA
,

627 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

628 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

632 #i‡
deföed
(
POLARSSL_GCM_C
)

633 #i‡
deföed
(
POLARSSL_SHA256_C
)

634 { 
TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256
, "TLS-DHE-RSA-WITH-CAMELLIA-128-GCM-SHA256",

635 
POLARSSL_CIPHER_CAMELLIA_128_GCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_DHE_RSA
,

636 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

637 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

641 #i‡
deföed
(
POLARSSL_SHA512_C
)

642 { 
TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384
, "TLS-DHE-RSA-WITH-CAMELLIA-256-GCM-SHA384",

643 
POLARSSL_CIPHER_CAMELLIA_256_GCM
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_DHE_RSA
,

644 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

645 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

651 #i‡
deföed
(
POLARSSL_DES_C
)

652 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

653 #i‡
deföed
(
POLARSSL_SHA1_C
)

654 { 
TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
, "TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA",

655 
POLARSSL_CIPHER_DES_EDE3_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_DHE_RSA
,

656 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

657 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

664 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_RSA_ENABLED
)

665 #i‡
deföed
(
POLARSSL_AES_C
)

666 #i‡
deföed
(
POLARSSL_SHA512_C
Ë&& deföed(
POLARSSL_GCM_C
)

667 { 
TLS_RSA_WITH_AES_256_GCM_SHA384
, "TLS-RSA-WITH-AES-256-GCM-SHA384",

668 
POLARSSL_CIPHER_AES_256_GCM
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_RSA
,

669 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

670 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

674 #i‡
deföed
(
POLARSSL_SHA256_C
)

675 #i‡
deföed
(
POLARSSL_GCM_C
)

676 { 
TLS_RSA_WITH_AES_128_GCM_SHA256
, "TLS-RSA-WITH-AES-128-GCM-SHA256",

677 
POLARSSL_CIPHER_AES_128_GCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_RSA
,

678 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

679 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

683 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

684 { 
TLS_RSA_WITH_AES_128_CBC_SHA256
, "TLS-RSA-WITH-AES-128-CBC-SHA256",

685 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_RSA
,

686 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

687 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

690 { 
TLS_RSA_WITH_AES_256_CBC_SHA256
, "TLS-RSA-WITH-AES-256-CBC-SHA256",

691 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_RSA
,

692 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

693 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

698 #i‡
deföed
(
POLARSSL_SHA1_C
)

699 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

700 { 
TLS_RSA_WITH_AES_128_CBC_SHA
, "TLS-RSA-WITH-AES-128-CBC-SHA",

701 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_RSA
,

702 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

703 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

706 { 
TLS_RSA_WITH_AES_256_CBC_SHA
, "TLS-RSA-WITH-AES-256-CBC-SHA",

707 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_RSA
,

708 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

709 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

713 #i‡
deföed
(
POLARSSL_CCM_C
)

714 { 
TLS_RSA_WITH_AES_256_CCM
, "TLS-RSA-WITH-AES-256-CCM",

715 
POLARSSL_CIPHER_AES_256_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_RSA
,

716 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

717 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

719 { 
TLS_RSA_WITH_AES_256_CCM_8
, "TLS-RSA-WITH-AES-256-CCM-8",

720 
POLARSSL_CIPHER_AES_256_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_RSA
,

721 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

722 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

723 
POLARSSL_CIPHERSUITE_SHORT_TAG
 },

724 { 
TLS_RSA_WITH_AES_128_CCM
, "TLS-RSA-WITH-AES-128-CCM",

725 
POLARSSL_CIPHER_AES_128_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_RSA
,

726 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

727 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

729 { 
TLS_RSA_WITH_AES_128_CCM_8
, "TLS-RSA-WITH-AES-128-CCM-8",

730 
POLARSSL_CIPHER_AES_128_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_RSA
,

731 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

732 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

733 
POLARSSL_CIPHERSUITE_SHORT_TAG
 },

737 #i‡
deföed
(
POLARSSL_CAMELLIA_C
)

738 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

739 #i‡
deföed
(
POLARSSL_SHA256_C
)

740 { 
TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256
, "TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256",

741 
POLARSSL_CIPHER_CAMELLIA_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_RSA
,

742 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

743 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

746 { 
TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256
, "TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256",

747 
POLARSSL_CIPHER_CAMELLIA_256_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_RSA
,

748 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

749 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

753 #i‡
deföed
(
POLARSSL_SHA1_C
)

754 { 
TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
, "TLS-RSA-WITH-CAMELLIA-128-CBC-SHA",

755 
POLARSSL_CIPHER_CAMELLIA_128_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_RSA
,

756 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

757 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

760 { 
TLS_RSA_WITH_CAMELLIA_256_CBC_SHA
, "TLS-RSA-WITH-CAMELLIA-256-CBC-SHA",

761 
POLARSSL_CIPHER_CAMELLIA_256_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_RSA
,

762 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

763 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

768 #i‡
deföed
(
POLARSSL_GCM_C
)

769 #i‡
deföed
(
POLARSSL_SHA256_C
)

770 { 
TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256
, "TLS-RSA-WITH-CAMELLIA-128-GCM-SHA256",

771 
POLARSSL_CIPHER_CAMELLIA_128_GCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_RSA
,

772 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

773 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

777 #i‡
deföed
(
POLARSSL_SHA1_C
)

778 { 
TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384
, "TLS-RSA-WITH-CAMELLIA-256-GCM-SHA384",

779 
POLARSSL_CIPHER_CAMELLIA_256_GCM
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_RSA
,

780 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

781 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

787 #i‡
deföed
(
POLARSSL_DES_C
)

788 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

789 #i‡
deföed
(
POLARSSL_SHA1_C
)

790 { 
TLS_RSA_WITH_3DES_EDE_CBC_SHA
, "TLS-RSA-WITH-3DES-EDE-CBC-SHA",

791 
POLARSSL_CIPHER_DES_EDE3_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_RSA
,

792 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

793 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

799 #i‡
deföed
(
POLARSSL_ARC4_C
)

800 #i‡
deföed
(
POLARSSL_MD5_C
)

801 { 
TLS_RSA_WITH_RC4_128_MD5
, "TLS-RSA-WITH-RC4-128-MD5",

802 
POLARSSL_CIPHER_ARC4_128
, 
POLARSSL_MD_MD5
, 
POLARSSL_KEY_EXCHANGE_RSA
,

803 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

804 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

808 #i‡
deföed
(
POLARSSL_SHA1_C
)

809 { 
TLS_RSA_WITH_RC4_128_SHA
, "TLS-RSA-WITH-RC4-128-SHA",

810 
POLARSSL_CIPHER_ARC4_128
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_RSA
,

811 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

812 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

818 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_RSA_ENABLED
)

819 #i‡
deföed
(
POLARSSL_AES_C
)

820 #i‡
deföed
(
POLARSSL_SHA1_C
)

821 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

822 { 
TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
, "TLS-ECDH-RSA-WITH-AES-128-CBC-SHA",

823 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDH_RSA
,

824 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

825 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

827 { 
TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
, "TLS-ECDH-RSA-WITH-AES-256-CBC-SHA",

828 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDH_RSA
,

829 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

830 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

834 #i‡
deföed
(
POLARSSL_SHA256_C
)

835 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

836 { 
TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
, "TLS-ECDH-RSA-WITH-AES-128-CBC-SHA256",

837 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDH_RSA
,

838 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

839 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

842 #i‡
deföed
(
POLARSSL_GCM_C
)

843 { 
TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
, "TLS-ECDH-RSA-WITH-AES-128-GCM-SHA256",

844 
POLARSSL_CIPHER_AES_128_GCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDH_RSA
,

845 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

846 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

850 #i‡
deföed
(
POLARSSL_SHA512_C
)

851 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

852 { 
TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
, "TLS-ECDH-RSA-WITH-AES-256-CBC-SHA384",

853 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_ECDH_RSA
,

854 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

855 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

858 #i‡
deföed
(
POLARSSL_GCM_C
)

859 { 
TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
, "TLS-ECDH-RSA-WITH-AES-256-GCM-SHA384",

860 
POLARSSL_CIPHER_AES_256_GCM
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_ECDH_RSA
,

861 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

862 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

868 #i‡
deföed
(
POLARSSL_CAMELLIA_C
)

869 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

870 #i‡
deföed
(
POLARSSL_SHA256_C
)

871 { 
TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256
, "TLS-ECDH-RSA-WITH-CAMELLIA-128-CBC-SHA256",

872 
POLARSSL_CIPHER_CAMELLIA_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDH_RSA
,

873 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

874 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

877 #i‡
deföed
(
POLARSSL_SHA512_C
)

878 { 
TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384
, "TLS-ECDH-RSA-WITH-CAMELLIA-256-CBC-SHA384",

879 
POLARSSL_CIPHER_CAMELLIA_256_CBC
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_ECDH_RSA
,

880 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

881 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

886 #i‡
deföed
(
POLARSSL_GCM_C
)

887 #i‡
deföed
(
POLARSSL_SHA256_C
)

888 { 
TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256
, "TLS-ECDH-RSA-WITH-CAMELLIA-128-GCM-SHA256",

889 
POLARSSL_CIPHER_CAMELLIA_128_GCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDH_RSA
,

890 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

891 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

894 #i‡
deföed
(
POLARSSL_SHA512_C
)

895 { 
TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384
, "TLS-ECDH-RSA-WITH-CAMELLIA-256-GCM-SHA384",

896 
POLARSSL_CIPHER_CAMELLIA_256_GCM
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_ECDH_RSA
,

897 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

898 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

904 #i‡
deföed
(
POLARSSL_DES_C
)

905 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

906 #i‡
deföed
(
POLARSSL_SHA1_C
)

907 { 
TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
, "TLS-ECDH-RSA-WITH-3DES-EDE-CBC-SHA",

908 
POLARSSL_CIPHER_DES_EDE3_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDH_RSA
,

909 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

910 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

916 #i‡
deföed
(
POLARSSL_ARC4_C
)

917 #i‡
deföed
(
POLARSSL_SHA1_C
)

918 { 
TLS_ECDH_RSA_WITH_RC4_128_SHA
, "TLS-ECDH-RSA-WITH-RC4-128-SHA",

919 
POLARSSL_CIPHER_ARC4_128
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDH_RSA
,

920 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

921 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

926 #i‡
deföed
(
POLARSSL_CIPHER_NULL_CIPHER
)

927 #i‡
deföed
(
POLARSSL_SHA1_C
)

928 { 
TLS_ECDH_RSA_WITH_NULL_SHA
, "TLS-ECDH-RSA-WITH-NULL-SHA",

929 
POLARSSL_CIPHER_NULL
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDH_RSA
,

930 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

931 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

932 
POLARSSL_CIPHERSUITE_WEAK
 },

937 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
)

938 #i‡
deföed
(
POLARSSL_AES_C
)

939 #i‡
deföed
(
POLARSSL_SHA1_C
)

940 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

941 { 
TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
, "TLS-ECDH-ECDSA-WITH-AES-128-CBC-SHA",

942 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
,

943 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

944 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

946 { 
TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
, "TLS-ECDH-ECDSA-WITH-AES-256-CBC-SHA",

947 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
,

948 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

949 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

953 #i‡
deföed
(
POLARSSL_SHA256_C
)

954 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

955 { 
TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
, "TLS-ECDH-ECDSA-WITH-AES-128-CBC-SHA256",

956 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
,

957 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

958 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

961 #i‡
deföed
(
POLARSSL_GCM_C
)

962 { 
TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
, "TLS-ECDH-ECDSA-WITH-AES-128-GCM-SHA256",

963 
POLARSSL_CIPHER_AES_128_GCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
,

964 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

965 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

969 #i‡
deföed
(
POLARSSL_SHA512_C
)

970 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

971 { 
TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
, "TLS-ECDH-ECDSA-WITH-AES-256-CBC-SHA384",

972 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
,

973 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

974 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

977 #i‡
deföed
(
POLARSSL_GCM_C
)

978 { 
TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
, "TLS-ECDH-ECDSA-WITH-AES-256-GCM-SHA384",

979 
POLARSSL_CIPHER_AES_256_GCM
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
,

980 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

981 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

987 #i‡
deföed
(
POLARSSL_CAMELLIA_C
)

988 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

989 #i‡
deföed
(
POLARSSL_SHA256_C
)

990 { 
TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256
, "TLS-ECDH-ECDSA-WITH-CAMELLIA-128-CBC-SHA256",

991 
POLARSSL_CIPHER_CAMELLIA_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
,

992 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

993 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

996 #i‡
deföed
(
POLARSSL_SHA512_C
)

997 { 
TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384
, "TLS-ECDH-ECDSA-WITH-CAMELLIA-256-CBC-SHA384",

998 
POLARSSL_CIPHER_CAMELLIA_256_CBC
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
,

999 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

1000 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1005 #i‡
deföed
(
POLARSSL_GCM_C
)

1006 #i‡
deföed
(
POLARSSL_SHA256_C
)

1007 { 
TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256
, "TLS-ECDH-ECDSA-WITH-CAMELLIA-128-GCM-SHA256",

1008 
POLARSSL_CIPHER_CAMELLIA_128_GCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
,

1009 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1010 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1013 #i‡
deföed
(
POLARSSL_SHA512_C
)

1014 { 
TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384
, "TLS-ECDH-ECDSA-WITH-CAMELLIA-256-GCM-SHA384",

1015 
POLARSSL_CIPHER_CAMELLIA_256_GCM
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
,

1016 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1017 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1023 #i‡
deföed
(
POLARSSL_DES_C
)

1024 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1025 #i‡
deföed
(
POLARSSL_SHA1_C
)

1026 { 
TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
, "TLS-ECDH-ECDSA-WITH-3DES-EDE-CBC-SHA",

1027 
POLARSSL_CIPHER_DES_EDE3_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
,

1028 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

1029 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1035 #i‡
deföed
(
POLARSSL_ARC4_C
)

1036 #i‡
deföed
(
POLARSSL_SHA1_C
)

1037 { 
TLS_ECDH_ECDSA_WITH_RC4_128_SHA
, "TLS-ECDH-ECDSA-WITH-RC4-128-SHA",

1038 
POLARSSL_CIPHER_ARC4_128
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
,

1039 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

1040 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1045 #i‡
deföed
(
POLARSSL_CIPHER_NULL_CIPHER
)

1046 #i‡
deföed
(
POLARSSL_SHA1_C
)

1047 { 
TLS_ECDH_ECDSA_WITH_NULL_SHA
, "TLS-ECDH-ECDSA-WITH-NULL-SHA",

1048 
POLARSSL_CIPHER_NULL
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
,

1049 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

1050 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1051 
POLARSSL_CIPHERSUITE_WEAK
 },

1056 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_PSK_ENABLED
)

1057 #i‡
deföed
(
POLARSSL_AES_C
)

1058 #i‡
deföed
(
POLARSSL_GCM_C
)

1059 #i‡
deföed
(
POLARSSL_SHA256_C
)

1060 { 
TLS_PSK_WITH_AES_128_GCM_SHA256
, "TLS-PSK-WITH-AES-128-GCM-SHA256",

1061 
POLARSSL_CIPHER_AES_128_GCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_PSK
,

1062 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1063 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1067 #i‡
deföed
(
POLARSSL_SHA512_C
)

1068 { 
TLS_PSK_WITH_AES_256_GCM_SHA384
, "TLS-PSK-WITH-AES-256-GCM-SHA384",

1069 
POLARSSL_CIPHER_AES_256_GCM
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_PSK
,

1070 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1071 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1076 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1077 #i‡
deföed
(
POLARSSL_SHA256_C
)

1078 { 
TLS_PSK_WITH_AES_128_CBC_SHA256
, "TLS-PSK-WITH-AES-128-CBC-SHA256",

1079 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_PSK
,

1080 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1081 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1085 #i‡
deföed
(
POLARSSL_SHA512_C
)

1086 { 
TLS_PSK_WITH_AES_256_CBC_SHA384
, "TLS-PSK-WITH-AES-256-CBC-SHA384",

1087 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_PSK
,

1088 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1089 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1093 #i‡
deföed
(
POLARSSL_SHA1_C
)

1094 { 
TLS_PSK_WITH_AES_128_CBC_SHA
, "TLS-PSK-WITH-AES-128-CBC-SHA",

1095 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_PSK
,

1096 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1097 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1100 { 
TLS_PSK_WITH_AES_256_CBC_SHA
, "TLS-PSK-WITH-AES-256-CBC-SHA",

1101 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_PSK
,

1102 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1103 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1107 #i‡
deföed
(
POLARSSL_CCM_C
)

1108 { 
TLS_PSK_WITH_AES_256_CCM
, "TLS-PSK-WITH-AES-256-CCM",

1109 
POLARSSL_CIPHER_AES_256_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_PSK
,

1110 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1111 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1113 { 
TLS_PSK_WITH_AES_256_CCM_8
, "TLS-PSK-WITH-AES-256-CCM-8",

1114 
POLARSSL_CIPHER_AES_256_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_PSK
,

1115 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1116 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1117 
POLARSSL_CIPHERSUITE_SHORT_TAG
 },

1118 { 
TLS_PSK_WITH_AES_128_CCM
, "TLS-PSK-WITH-AES-128-CCM",

1119 
POLARSSL_CIPHER_AES_128_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_PSK
,

1120 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1121 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1123 { 
TLS_PSK_WITH_AES_128_CCM_8
, "TLS-PSK-WITH-AES-128-CCM-8",

1124 
POLARSSL_CIPHER_AES_128_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_PSK
,

1125 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1126 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1127 
POLARSSL_CIPHERSUITE_SHORT_TAG
 },

1131 #i‡
deföed
(
POLARSSL_CAMELLIA_C
)

1132 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1133 #i‡
deföed
(
POLARSSL_SHA256_C
)

1134 { 
TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256
, "TLS-PSK-WITH-CAMELLIA-128-CBC-SHA256",

1135 
POLARSSL_CIPHER_CAMELLIA_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_PSK
,

1136 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1137 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1141 #i‡
deföed
(
POLARSSL_SHA512_C
)

1142 { 
TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384
, "TLS-PSK-WITH-CAMELLIA-256-CBC-SHA384",

1143 
POLARSSL_CIPHER_CAMELLIA_256_CBC
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_PSK
,

1144 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1145 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1150 #i‡
deföed
(
POLARSSL_GCM_C
)

1151 #i‡
deföed
(
POLARSSL_SHA256_C
)

1152 { 
TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256
, "TLS-PSK-WITH-CAMELLIA-128-GCM-SHA256",

1153 
POLARSSL_CIPHER_CAMELLIA_128_GCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_PSK
,

1154 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1155 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1159 #i‡
deföed
(
POLARSSL_SHA512_C
)

1160 { 
TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384
, "TLS-PSK-WITH-CAMELLIA-256-GCM-SHA384",

1161 
POLARSSL_CIPHER_CAMELLIA_256_GCM
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_PSK
,

1162 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1163 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1169 #i‡
deföed
(
POLARSSL_DES_C
)

1170 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1171 #i‡
deföed
(
POLARSSL_SHA1_C
)

1172 { 
TLS_PSK_WITH_3DES_EDE_CBC_SHA
, "TLS-PSK-WITH-3DES-EDE-CBC-SHA",

1173 
POLARSSL_CIPHER_DES_EDE3_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_PSK
,

1174 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1175 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1181 #i‡
deföed
(
POLARSSL_ARC4_C
)

1182 #i‡
deföed
(
POLARSSL_SHA1_C
)

1183 { 
TLS_PSK_WITH_RC4_128_SHA
, "TLS-PSK-WITH-RC4-128-SHA",

1184 
POLARSSL_CIPHER_ARC4_128
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_PSK
,

1185 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1186 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1192 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
)

1193 #i‡
deföed
(
POLARSSL_AES_C
)

1194 #i‡
deföed
(
POLARSSL_GCM_C
)

1195 #i‡
deföed
(
POLARSSL_SHA256_C
)

1196 { 
TLS_DHE_PSK_WITH_AES_128_GCM_SHA256
, "TLS-DHE-PSK-WITH-AES-128-GCM-SHA256",

1197 
POLARSSL_CIPHER_AES_128_GCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

1198 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1199 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1203 #i‡
deföed
(
POLARSSL_SHA512_C
)

1204 { 
TLS_DHE_PSK_WITH_AES_256_GCM_SHA384
, "TLS-DHE-PSK-WITH-AES-256-GCM-SHA384",

1205 
POLARSSL_CIPHER_AES_256_GCM
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

1206 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1207 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1212 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1213 #i‡
deföed
(
POLARSSL_SHA256_C
)

1214 { 
TLS_DHE_PSK_WITH_AES_128_CBC_SHA256
, "TLS-DHE-PSK-WITH-AES-128-CBC-SHA256",

1215 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

1216 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1217 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1221 #i‡
deföed
(
POLARSSL_SHA512_C
)

1222 { 
TLS_DHE_PSK_WITH_AES_256_CBC_SHA384
, "TLS-DHE-PSK-WITH-AES-256-CBC-SHA384",

1223 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

1224 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1225 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1229 #i‡
deföed
(
POLARSSL_SHA1_C
)

1230 { 
TLS_DHE_PSK_WITH_AES_128_CBC_SHA
, "TLS-DHE-PSK-WITH-AES-128-CBC-SHA",

1231 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

1232 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1233 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1236 { 
TLS_DHE_PSK_WITH_AES_256_CBC_SHA
, "TLS-DHE-PSK-WITH-AES-256-CBC-SHA",

1237 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

1238 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1239 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1243 #i‡
deföed
(
POLARSSL_CCM_C
)

1244 { 
TLS_DHE_PSK_WITH_AES_256_CCM
, "TLS-DHE-PSK-WITH-AES-256-CCM",

1245 
POLARSSL_CIPHER_AES_256_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

1246 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1247 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1249 { 
TLS_DHE_PSK_WITH_AES_256_CCM_8
, "TLS-DHE-PSK-WITH-AES-256-CCM-8",

1250 
POLARSSL_CIPHER_AES_256_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

1251 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1252 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1253 
POLARSSL_CIPHERSUITE_SHORT_TAG
 },

1254 { 
TLS_DHE_PSK_WITH_AES_128_CCM
, "TLS-DHE-PSK-WITH-AES-128-CCM",

1255 
POLARSSL_CIPHER_AES_128_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

1256 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1257 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1259 { 
TLS_DHE_PSK_WITH_AES_128_CCM_8
, "TLS-DHE-PSK-WITH-AES-128-CCM-8",

1260 
POLARSSL_CIPHER_AES_128_CCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

1261 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1262 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1263 
POLARSSL_CIPHERSUITE_SHORT_TAG
 },

1267 #i‡
deföed
(
POLARSSL_CAMELLIA_C
)

1268 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1269 #i‡
deföed
(
POLARSSL_SHA256_C
)

1270 { 
TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256
, "TLS-DHE-PSK-WITH-CAMELLIA-128-CBC-SHA256",

1271 
POLARSSL_CIPHER_CAMELLIA_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

1272 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1273 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1277 #i‡
deföed
(
POLARSSL_SHA512_C
)

1278 { 
TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384
, "TLS-DHE-PSK-WITH-CAMELLIA-256-CBC-SHA384",

1279 
POLARSSL_CIPHER_CAMELLIA_256_CBC
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

1280 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1281 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1286 #i‡
deföed
(
POLARSSL_GCM_C
)

1287 #i‡
deföed
(
POLARSSL_SHA256_C
)

1288 { 
TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256
, "TLS-DHE-PSK-WITH-CAMELLIA-128-GCM-SHA256",

1289 
POLARSSL_CIPHER_CAMELLIA_128_GCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

1290 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1291 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1295 #i‡
deföed
(
POLARSSL_SHA512_C
)

1296 { 
TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384
, "TLS-DHE-PSK-WITH-CAMELLIA-256-GCM-SHA384",

1297 
POLARSSL_CIPHER_CAMELLIA_256_GCM
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

1298 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1299 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1305 #i‡
deföed
(
POLARSSL_DES_C
)

1306 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1307 #i‡
deföed
(
POLARSSL_SHA1_C
)

1308 { 
TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA
, "TLS-DHE-PSK-WITH-3DES-EDE-CBC-SHA",

1309 
POLARSSL_CIPHER_DES_EDE3_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

1310 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1311 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1317 #i‡
deföed
(
POLARSSL_ARC4_C
)

1318 #i‡
deföed
(
POLARSSL_SHA1_C
)

1319 { 
TLS_DHE_PSK_WITH_RC4_128_SHA
, "TLS-DHE-PSK-WITH-RC4-128-SHA",

1320 
POLARSSL_CIPHER_ARC4_128
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

1321 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1322 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1328 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED
)

1329 #i‡
deföed
(
POLARSSL_AES_C
)

1331 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1332 #i‡
deföed
(
POLARSSL_SHA256_C
)

1333 { 
TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256
, "TLS-ECDHE-PSK-WITH-AES-128-CBC-SHA256",

1334 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
,

1335 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

1336 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1340 #i‡
deföed
(
POLARSSL_SHA512_C
)

1341 { 
TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384
, "TLS-ECDHE-PSK-WITH-AES-256-CBC-SHA384",

1342 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
,

1343 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

1344 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1348 #i‡
deföed
(
POLARSSL_SHA1_C
)

1349 { 
TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
, "TLS-ECDHE-PSK-WITH-AES-128-CBC-SHA",

1350 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
,

1351 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

1352 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1355 { 
TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
, "TLS-ECDHE-PSK-WITH-AES-256-CBC-SHA",

1356 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
,

1357 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

1358 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1364 #i‡
deföed
(
POLARSSL_CAMELLIA_C
)

1365 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1366 #i‡
deföed
(
POLARSSL_SHA256_C
)

1367 { 
TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256
, "TLS-ECDHE-PSK-WITH-CAMELLIA-128-CBC-SHA256",

1368 
POLARSSL_CIPHER_CAMELLIA_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
,

1369 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

1370 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1374 #i‡
deföed
(
POLARSSL_SHA512_C
)

1375 { 
TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384
, "TLS-ECDHE-PSK-WITH-CAMELLIA-256-CBC-SHA384",

1376 
POLARSSL_CIPHER_CAMELLIA_256_CBC
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
,

1377 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

1378 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1384 #i‡
deföed
(
POLARSSL_DES_C
)

1385 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1386 #i‡
deföed
(
POLARSSL_SHA1_C
)

1387 { 
TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA
, "TLS-ECDHE-PSK-WITH-3DES-EDE-CBC-SHA",

1388 
POLARSSL_CIPHER_DES_EDE3_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
,

1389 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

1390 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1396 #i‡
deföed
(
POLARSSL_ARC4_C
)

1397 #i‡
deföed
(
POLARSSL_SHA1_C
)

1398 { 
TLS_ECDHE_PSK_WITH_RC4_128_SHA
, "TLS-ECDHE-PSK-WITH-RC4-128-SHA",

1399 
POLARSSL_CIPHER_ARC4_128
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
,

1400 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

1401 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1407 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED
)

1408 #i‡
deföed
(
POLARSSL_AES_C
)

1409 #i‡
deföed
(
POLARSSL_GCM_C
)

1410 #i‡
deföed
(
POLARSSL_SHA256_C
)

1411 { 
TLS_RSA_PSK_WITH_AES_128_GCM_SHA256
, "TLS-RSA-PSK-WITH-AES-128-GCM-SHA256",

1412 
POLARSSL_CIPHER_AES_128_GCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_RSA_PSK
,

1413 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1414 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1418 #i‡
deföed
(
POLARSSL_SHA512_C
)

1419 { 
TLS_RSA_PSK_WITH_AES_256_GCM_SHA384
, "TLS-RSA-PSK-WITH-AES-256-GCM-SHA384",

1420 
POLARSSL_CIPHER_AES_256_GCM
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_RSA_PSK
,

1421 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1422 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1427 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1428 #i‡
deföed
(
POLARSSL_SHA256_C
)

1429 { 
TLS_RSA_PSK_WITH_AES_128_CBC_SHA256
, "TLS-RSA-PSK-WITH-AES-128-CBC-SHA256",

1430 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_RSA_PSK
,

1431 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1432 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1436 #i‡
deföed
(
POLARSSL_SHA512_C
)

1437 { 
TLS_RSA_PSK_WITH_AES_256_CBC_SHA384
, "TLS-RSA-PSK-WITH-AES-256-CBC-SHA384",

1438 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_RSA_PSK
,

1439 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1440 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1444 #i‡
deföed
(
POLARSSL_SHA1_C
)

1445 { 
TLS_RSA_PSK_WITH_AES_128_CBC_SHA
, "TLS-RSA-PSK-WITH-AES-128-CBC-SHA",

1446 
POLARSSL_CIPHER_AES_128_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_RSA_PSK
,

1447 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1448 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1451 { 
TLS_RSA_PSK_WITH_AES_256_CBC_SHA
, "TLS-RSA-PSK-WITH-AES-256-CBC-SHA",

1452 
POLARSSL_CIPHER_AES_256_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_RSA_PSK
,

1453 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1454 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1460 #i‡
deföed
(
POLARSSL_CAMELLIA_C
)

1461 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1462 #i‡
deföed
(
POLARSSL_SHA256_C
)

1463 { 
TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256
, "TLS-RSA-PSK-WITH-CAMELLIA-128-CBC-SHA256",

1464 
POLARSSL_CIPHER_CAMELLIA_128_CBC
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_RSA_PSK
,

1465 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1466 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1470 #i‡
deföed
(
POLARSSL_SHA512_C
)

1471 { 
TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384
, "TLS-RSA-PSK-WITH-CAMELLIA-256-CBC-SHA384",

1472 
POLARSSL_CIPHER_CAMELLIA_256_CBC
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_RSA_PSK
,

1473 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1474 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1479 #i‡
deföed
(
POLARSSL_GCM_C
)

1480 #i‡
deföed
(
POLARSSL_SHA256_C
)

1481 { 
TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256
, "TLS-RSA-PSK-WITH-CAMELLIA-128-GCM-SHA256",

1482 
POLARSSL_CIPHER_CAMELLIA_128_GCM
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_RSA_PSK
,

1483 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1484 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1488 #i‡
deföed
(
POLARSSL_SHA512_C
)

1489 { 
TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384
, "TLS-RSA-PSK-WITH-CAMELLIA-256-GCM-SHA384",

1490 
POLARSSL_CIPHER_CAMELLIA_256_GCM
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_RSA_PSK
,

1491 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1492 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1498 #i‡
deföed
(
POLARSSL_DES_C
)

1499 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1500 #i‡
deföed
(
POLARSSL_SHA1_C
)

1501 { 
TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA
, "TLS-RSA-PSK-WITH-3DES-EDE-CBC-SHA",

1502 
POLARSSL_CIPHER_DES_EDE3_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_RSA_PSK
,

1503 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1504 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1510 #i‡
deföed
(
POLARSSL_ARC4_C
)

1511 #i‡
deföed
(
POLARSSL_SHA1_C
)

1512 { 
TLS_RSA_PSK_WITH_RC4_128_SHA
, "TLS-RSA-PSK-WITH-RC4-128-SHA",

1513 
POLARSSL_CIPHER_ARC4_128
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_RSA_PSK
,

1514 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1515 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1521 #i‡
deföed
(
POLARSSL_ENABLE_WEAK_CIPHERSUITES
)

1522 #i‡
deföed
(
POLARSSL_CIPHER_NULL_CIPHER
)

1523 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_RSA_ENABLED
)

1524 #i‡
deföed
(
POLARSSL_MD5_C
)

1525 { 
TLS_RSA_WITH_NULL_MD5
, "TLS-RSA-WITH-NULL-MD5",

1526 
POLARSSL_CIPHER_NULL
, 
POLARSSL_MD_MD5
, 
POLARSSL_KEY_EXCHANGE_RSA
,

1527 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1528 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1529 
POLARSSL_CIPHERSUITE_WEAK
 },

1532 #i‡
deföed
(
POLARSSL_SHA1_C
)

1533 { 
TLS_RSA_WITH_NULL_SHA
, "TLS-RSA-WITH-NULL-SHA",

1534 
POLARSSL_CIPHER_NULL
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_RSA
,

1535 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1536 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1537 
POLARSSL_CIPHERSUITE_WEAK
 },

1540 #i‡
deföed
(
POLARSSL_SHA256_C
)

1541 { 
TLS_RSA_WITH_NULL_SHA256
, "TLS-RSA-WITH-NULL-SHA256",

1542 
POLARSSL_CIPHER_NULL
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_RSA
,

1543 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1544 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1545 
POLARSSL_CIPHERSUITE_WEAK
 },

1549 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_PSK_ENABLED
)

1550 #i‡
deföed
(
POLARSSL_SHA1_C
)

1551 { 
TLS_PSK_WITH_NULL_SHA
, "TLS-PSK-WITH-NULL-SHA",

1552 
POLARSSL_CIPHER_NULL
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_PSK
,

1553 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1554 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1555 
POLARSSL_CIPHERSUITE_WEAK
 },

1558 #i‡
deföed
(
POLARSSL_SHA256_C
)

1559 { 
TLS_PSK_WITH_NULL_SHA256
, "TLS-PSK-WITH-NULL-SHA256",

1560 
POLARSSL_CIPHER_NULL
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_PSK
,

1561 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1562 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1563 
POLARSSL_CIPHERSUITE_WEAK
 },

1566 #i‡
deföed
(
POLARSSL_SHA512_C
)

1567 { 
TLS_PSK_WITH_NULL_SHA384
, "TLS-PSK-WITH-NULL-SHA384",

1568 
POLARSSL_CIPHER_NULL
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_PSK
,

1569 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1570 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1571 
POLARSSL_CIPHERSUITE_WEAK
 },

1575 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
)

1576 #i‡
deföed
(
POLARSSL_SHA1_C
)

1577 { 
TLS_DHE_PSK_WITH_NULL_SHA
, "TLS-DHE-PSK-WITH-NULL-SHA",

1578 
POLARSSL_CIPHER_NULL
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

1579 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1580 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1581 
POLARSSL_CIPHERSUITE_WEAK
 },

1584 #i‡
deföed
(
POLARSSL_SHA256_C
)

1585 { 
TLS_DHE_PSK_WITH_NULL_SHA256
, "TLS-DHE-PSK-WITH-NULL-SHA256",

1586 
POLARSSL_CIPHER_NULL
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

1587 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1588 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1589 
POLARSSL_CIPHERSUITE_WEAK
 },

1592 #i‡
deföed
(
POLARSSL_SHA512_C
)

1593 { 
TLS_DHE_PSK_WITH_NULL_SHA384
, "TLS-DHE-PSK-WITH-NULL-SHA384",

1594 
POLARSSL_CIPHER_NULL
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_DHE_PSK
,

1595 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1596 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1597 
POLARSSL_CIPHERSUITE_WEAK
 },

1601 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED
)

1602 #i‡
deföed
(
POLARSSL_SHA1_C
)

1603 { 
TLS_ECDHE_PSK_WITH_NULL_SHA
, "TLS-ECDHE-PSK-WITH-NULL-SHA",

1604 
POLARSSL_CIPHER_NULL
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
,

1605 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

1606 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1607 
POLARSSL_CIPHERSUITE_WEAK
 },

1610 #i‡
deföed
(
POLARSSL_SHA256_C
)

1611 { 
TLS_ECDHE_PSK_WITH_NULL_SHA256
, "TLS-ECDHE-PSK-WITH-NULL-SHA256",

1612 
POLARSSL_CIPHER_NULL
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
,

1613 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

1614 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1615 
POLARSSL_CIPHERSUITE_WEAK
 },

1618 #i‡
deföed
(
POLARSSL_SHA512_C
)

1619 { 
TLS_ECDHE_PSK_WITH_NULL_SHA384
, "TLS-ECDHE-PSK-WITH-NULL-SHA384",

1620 
POLARSSL_CIPHER_NULL
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
,

1621 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_1
,

1622 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1623 
POLARSSL_CIPHERSUITE_WEAK
 },

1627 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED
)

1628 #i‡
deföed
(
POLARSSL_SHA1_C
)

1629 { 
TLS_RSA_PSK_WITH_NULL_SHA
, "TLS-RSA-PSK-WITH-NULL-SHA",

1630 
POLARSSL_CIPHER_NULL
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_RSA_PSK
,

1631 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1632 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1633 
POLARSSL_CIPHERSUITE_WEAK
 },

1636 #i‡
deföed
(
POLARSSL_SHA256_C
)

1637 { 
TLS_RSA_PSK_WITH_NULL_SHA256
, "TLS-RSA-PSK-WITH-NULL-SHA256",

1638 
POLARSSL_CIPHER_NULL
, 
POLARSSL_MD_SHA256
, 
POLARSSL_KEY_EXCHANGE_RSA_PSK
,

1639 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1640 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1641 
POLARSSL_CIPHERSUITE_WEAK
 },

1644 #i‡
deföed
(
POLARSSL_SHA512_C
)

1645 { 
TLS_RSA_PSK_WITH_NULL_SHA384
, "TLS-RSA-PSK-WITH-NULL-SHA384",

1646 
POLARSSL_CIPHER_NULL
, 
POLARSSL_MD_SHA384
, 
POLARSSL_KEY_EXCHANGE_RSA_PSK
,

1647 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1648 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1649 
POLARSSL_CIPHERSUITE_WEAK
 },

1654 #i‡
deföed
(
POLARSSL_DES_C
)

1655 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

1656 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
)

1657 #i‡
deföed
(
POLARSSL_SHA1_C
)

1658 { 
TLS_DHE_RSA_WITH_DES_CBC_SHA
, "TLS-DHE-RSA-WITH-DES-CBC-SHA",

1659 
POLARSSL_CIPHER_DES_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_DHE_RSA
,

1660 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1661 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1662 
POLARSSL_CIPHERSUITE_WEAK
 },

1666 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_RSA_ENABLED
)

1667 #i‡
deföed
(
POLARSSL_SHA1_C
)

1668 { 
TLS_RSA_WITH_DES_CBC_SHA
, "TLS-RSA-WITH-DES-CBC-SHA",

1669 
POLARSSL_CIPHER_DES_CBC
, 
POLARSSL_MD_SHA1
, 
POLARSSL_KEY_EXCHANGE_RSA
,

1670 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_0
,

1671 
SSL_MAJOR_VERSION_3
, 
SSL_MINOR_VERSION_3
,

1672 
POLARSSL_CIPHERSUITE_WEAK
 },

1682 #i‡
deföed
(
SSL_CIPHERSUITES
)

1683 c⁄° *
	$s¶_li°_cùhîsuôes
( )

1685 –
cùhîsuôe_¥e„ªn˚
 );

1686 
	}
}

1688 
	#MAX_CIPHERSUITES
 –
cùhîsuôe_deföôi⁄s
 ) / \

1689 –
cùhîsuôe_deföôi⁄s
[0] )

	)

1690 
	gsuµ‹ãd_cùhîsuôes
[
MAX_CIPHERSUITES
];

1691 
	gsuµ‹ãd_öô
 = 0;

1693 c⁄° *
	$s¶_li°_cùhîsuôes
( )

1699 if–
suµ‹ãd_öô
 == 0 )

1701 c⁄° *
p
;

1702 *
q
;

1704  
p
 = 
cùhîsuôe_¥e„ªn˚
, 
q
 = 
suµ‹ãd_cùhîsuôes
;

1705 *
p
 !0 && 
q
 < 
suµ‹ãd_cùhîsuôes
 + 
MAX_CIPHERSUITES
 - 1;

1706 
p
++ )

1708 #i‡
	`deföed
(
POLARSSL_REMOVE_ARC4_CIPHERSUITES
)

1709 c⁄° 
s¶_cùhîsuôe_t
 *
cs_öfo
;

1710 if––
cs_öfo
 = 
	`s¶_cùhîsuôe_‰om_id
–*
p
 ) ) !
NULL
 &&

1711 
cs_öfo
->
cùhî
 !
POLARSSL_CIPHER_ARC4_128
 )

1713 if–
	`s¶_cùhîsuôe_‰om_id
–*
p
 ) !
NULL
 )

1715 *(
q
++Ë*
p
;

1717 *
q
 = 0;

1719 
suµ‹ãd_öô
 = 1;

1722 –
suµ‹ãd_cùhîsuôes
 );

1723 
	}
};

1726 c⁄° 
s¶_cùhîsuôe_t
 *
	$s¶_cùhîsuôe_‰om_°rög
(

1727 c⁄° *
cùhîsuôe_«me
 )

1729 c⁄° 
s¶_cùhîsuôe_t
 *
cur
 = 
cùhîsuôe_deföôi⁄s
;

1731 if–
NULL
 =
cùhîsuôe_«me
 )

1732 –
NULL
 );

1734  
cur
->
id
 != 0 )

1736 if–0 =
	`°rˇ£cmp
–
cur
->
«me
, 
cùhîsuôe_«me
 ) )

1737 –
cur
 );

1739 
cur
++;

1742 –
NULL
 );

1743 
	}
}

1745 c⁄° 
s¶_cùhîsuôe_t
 *
	$s¶_cùhîsuôe_‰om_id
–
cùhîsuôe
 )

1747 c⁄° 
s¶_cùhîsuôe_t
 *
cur
 = 
cùhîsuôe_deföôi⁄s
;

1749  
cur
->
id
 != 0 )

1751 if–
cur
->
id
 =
cùhîsuôe
 )

1752 –
cur
 );

1754 
cur
++;

1757 –
NULL
 );

1758 
	}
}

1760 c⁄° *
	$s¶_gë_cùhîsuôe_«me
–c⁄° 
cùhîsuôe_id
 )

1762 c⁄° 
s¶_cùhîsuôe_t
 *
cur
;

1764 
cur
 = 
	`s¶_cùhîsuôe_‰om_id
–
cùhîsuôe_id
 );

1766 if–
cur
 =
NULL
 )

1769 –
cur
->
«me
 );

1770 
	}
}

1772 
	$s¶_gë_cùhîsuôe_id
–c⁄° *
cùhîsuôe_«me
 )

1774 c⁄° 
s¶_cùhîsuôe_t
 *
cur
;

1776 
cur
 = 
	`s¶_cùhîsuôe_‰om_°rög
–
cùhîsuôe_«me
 );

1778 if–
cur
 =
NULL
 )

1781 –
cur
->
id
 );

1782 
	}
}

1784 #i‡
deföed
(
POLARSSL_PK_C
)

1785 
pk_ty≥_t
 
	$s¶_gë_cùhîsuôe_sig_pk_Æg
–c⁄° 
s¶_cùhîsuôe_t
 *
öfo
 )

1787  
öfo
->
key_exch™ge
 )

1789 
POLARSSL_KEY_EXCHANGE_RSA
:

1790 
POLARSSL_KEY_EXCHANGE_DHE_RSA
:

1791 
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
:

1792 
POLARSSL_KEY_EXCHANGE_RSA_PSK
:

1793 –
POLARSSL_PK_RSA
 );

1795 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
:

1796 –
POLARSSL_PK_ECDSA
 );

1798 
POLARSSL_KEY_EXCHANGE_ECDH_RSA
:

1799 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
:

1800 –
POLARSSL_PK_ECKEY
 );

1803 –
POLARSSL_PK_NONE
 );

1805 
	}
}

1808 #i‡
deföed
(
POLARSSL_ECDH_C
Ë|| deföed(
POLARSSL_ECDSA_C
)

1809 
	$s¶_cùhîsuôe_u£s_ec
–c⁄° 
s¶_cùhîsuôe_t
 *
öfo
 )

1811  
öfo
->
key_exch™ge
 )

1813 
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
:

1814 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
:

1815 
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
:

1816 
POLARSSL_KEY_EXCHANGE_ECDH_RSA
:

1817 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
:

1823 
	}
}

1826 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

1827 
	$s¶_cùhîsuôe_u£s_psk
–c⁄° 
s¶_cùhîsuôe_t
 *
öfo
 )

1829  
öfo
->
key_exch™ge
 )

1831 
POLARSSL_KEY_EXCHANGE_PSK
:

1832 
POLARSSL_KEY_EXCHANGE_RSA_PSK
:

1833 
POLARSSL_KEY_EXCHANGE_DHE_PSK
:

1834 
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
:

1840 
	}
}

	@polarssl/library/ssl_cli.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_SSL_CLI_C
)

34 
	~"pﬁ¨s¶/debug.h
"

35 
	~"pﬁ¨s¶/s¶.h
"

37 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

38 
	~"pﬁ¨s¶/∂©f‹m.h
"

40 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

41 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

44 
	~<°dlib.h
>

45 
	~<°dio.h
>

47 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

48 
	~<ba£tsd.h
>

49 
UINT32
 
	tuöt32_t
;

51 
	~<öây≥s.h
>

54 #i‡
deföed
(
POLARSSL_HAVE_TIME
)

55 
	~<time.h
>

58 #i‡
deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

60 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

61 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

62 
	}
}

65 #i‡
deföed
(
POLARSSL_SSL_SERVER_NAME_INDICATION
)

66 
	$s¶_wrôe_ho°«me_ext
–
s¶_c⁄ãxt
 *
s¶
,

67 *
buf
,

68 
size_t
 *
ﬁí
 )

70 *
p
 = 
buf
;

72 *
ﬁí
 = 0;

74 if–
s¶
->
ho°«me
 =
NULL
 )

77 
	`SSL_DEBUG_MSG
( 3, ( "client hello,ádding serverÇameÉxtension: %s",

78 
s¶
->
ho°«me
 ) );

98 *
p
++ = ()––
TLS_EXT_SERVERNAME
 >> 8 ) & 0xFF );

99 *
p
++ = ()––
TLS_EXT_SERVERNAME
 ) & 0xFF );

101 *
p
++ = ()––(
s¶
->
ho°«me_Àn
 + 5) >> 8 ) & 0xFF );

102 *
p
++ = ()––(
s¶
->
ho°«me_Àn
 + 5) ) & 0xFF );

104 *
p
++ = ()––(
s¶
->
ho°«me_Àn
 + 3) >> 8 ) & 0xFF );

105 *
p
++ = ()––(
s¶
->
ho°«me_Àn
 + 3) ) & 0xFF );

107 *
p
++ = ()––
TLS_EXT_SERVERNAME_HOSTNAME
 ) & 0xFF );

108 *
p
++ = ()––
s¶
->
ho°«me_Àn
 >> 8 ) & 0xFF );

109 *
p
++ = ()––
s¶
->
ho°«me_Àn
 ) & 0xFF );

111 
	`mem˝y
–
p
, 
s¶
->
ho°«me
, s¶->
ho°«me_Àn
 );

113 *
ﬁí
 = 
s¶
->
ho°«me_Àn
 + 9;

114 
	}
}

117 
	$s¶_wrôe_ª√gŸüti⁄_ext
–
s¶_c⁄ãxt
 *
s¶
,

118 *
buf
,

119 
size_t
 *
ﬁí
 )

121 *
p
 = 
buf
;

123 *
ﬁí
 = 0;

125 if–
s¶
->
ª√gŸüti⁄
 !
SSL_RENEGOTIATION
 )

128 
	`SSL_DEBUG_MSG
( 3, ( "client hello,áddingÑenegotiationÉxtension" ) );

133 *
p
++ = ()––
TLS_EXT_RENEGOTIATION_INFO
 >> 8 ) & 0xFF );

134 *
p
++ = ()––
TLS_EXT_RENEGOTIATION_INFO
 ) & 0xFF );

136 *
p
++ = 0x00;

137 *
p
++ = ( 
s¶
->
vîify_d©a_Àn
 + 1 ) & 0xFF;

138 *
p
++ = 
s¶
->
vîify_d©a_Àn
 & 0xFF;

140 
	`mem˝y
–
p
, 
s¶
->
own_vîify_d©a
, s¶->
vîify_d©a_Àn
 );

142 *
ﬁí
 = 5 + 
s¶
->
vîify_d©a_Àn
;

143 
	}
}

145 #i‡
deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

146 
	$s¶_wrôe_sig«tuª_Æg‹ôhms_ext
–
s¶_c⁄ãxt
 *
s¶
,

147 *
buf
,

148 
size_t
 *
ﬁí
 )

150 *
p
 = 
buf
;

151 
size_t
 
sig_Æg_Àn
 = 0;

152 #i‡
	`deföed
(
POLARSSL_RSA_C
Ë|| deföed(
POLARSSL_ECDSA_C
)

153 *
sig_Æg_li°
 = 
buf
 + 6;

156 *
ﬁí
 = 0;

158 if–
s¶
->
max_mö‹_vî
 !
SSL_MINOR_VERSION_3
 )

161 
	`SSL_DEBUG_MSG
( 3, ( "client hello,ádding signature_algorithmsÉxtension" ) );

166 #i‡
	`deföed
(
POLARSSL_RSA_C
)

167 #i‡
	`deföed
(
POLARSSL_SHA512_C
)

168 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_HASH_SHA512
;

169 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_SIG_RSA
;

170 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_HASH_SHA384
;

171 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_SIG_RSA
;

173 #i‡
	`deföed
(
POLARSSL_SHA256_C
)

174 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_HASH_SHA256
;

175 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_SIG_RSA
;

176 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_HASH_SHA224
;

177 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_SIG_RSA
;

179 #i‡
	`deföed
(
POLARSSL_SHA1_C
)

180 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_HASH_SHA1
;

181 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_SIG_RSA
;

183 #i‡
	`deföed
(
POLARSSL_MD5_C
)

184 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_HASH_MD5
;

185 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_SIG_RSA
;

188 #i‡
	`deföed
(
POLARSSL_ECDSA_C
)

189 #i‡
	`deföed
(
POLARSSL_SHA512_C
)

190 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_HASH_SHA512
;

191 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_SIG_ECDSA
;

192 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_HASH_SHA384
;

193 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_SIG_ECDSA
;

195 #i‡
	`deföed
(
POLARSSL_SHA256_C
)

196 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_HASH_SHA256
;

197 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_SIG_ECDSA
;

198 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_HASH_SHA224
;

199 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_SIG_ECDSA
;

201 #i‡
	`deföed
(
POLARSSL_SHA1_C
)

202 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_HASH_SHA1
;

203 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_SIG_ECDSA
;

205 #i‡
	`deföed
(
POLARSSL_MD5_C
)

206 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_HASH_MD5
;

207 
sig_Æg_li°
[
sig_Æg_Àn
++] = 
SSL_SIG_ECDSA
;

228 *
p
++ = ()––
TLS_EXT_SIG_ALG
 >> 8 ) & 0xFF );

229 *
p
++ = ()––
TLS_EXT_SIG_ALG
 ) & 0xFF );

231 *
p
++ = ()–––
sig_Æg_Àn
 + 2 ) >> 8 ) & 0xFF );

232 *
p
++ = ()–––
sig_Æg_Àn
 + 2 ) ) & 0xFF );

234 *
p
++ = ()––
sig_Æg_Àn
 >> 8 ) & 0xFF );

235 *
p
++ = ()––
sig_Æg_Àn
 ) & 0xFF );

237 *
ﬁí
 = 6 + 
sig_Æg_Àn
;

238 
	}
}

241 #i‡
deföed
(
POLARSSL_ECDH_C
Ë|| deföed(
POLARSSL_ECDSA_C
)

242 
	$s¶_wrôe_suµ‹ãd_ñlùtic_curves_ext
–
s¶_c⁄ãxt
 *
s¶
,

243 *
buf
,

244 
size_t
 *
ﬁí
 )

246 *
p
 = 
buf
;

247 *
ñlùtic_curve_li°
 = 
p
 + 6;

248 
size_t
 
ñlùtic_curve_Àn
 = 0;

249 c⁄° 
e˝_curve_öfo
 *
öfo
;

250 #i‡
	`deföed
(
POLARSSL_SSL_SET_CURVES
)

251 c⁄° 
e˝_group_id
 *
gΩ_id
;

253 ((Ë
s¶
);

256 *
ﬁí
 = 0;

258 
	`SSL_DEBUG_MSG
( 3, ( "client hello,ádding supported_elliptic_curvesÉxtension" ) );

260 #i‡
	`deföed
(
POLARSSL_SSL_SET_CURVES
)

261  
gΩ_id
 = 
s¶
->
curve_li°
; *gΩ_id !
POLARSSL_ECP_DP_NONE
; grp_id++ )

263 
öfo
 = 
	`e˝_curve_öfo_‰om_gΩ_id
–*
gΩ_id
 );

265  
öfo
 = 
	`e˝_curve_li°
(); info->
gΩ_id
 !
POLARSSL_ECP_DP_NONE
; info++ )

269 
ñlùtic_curve_li°
[
ñlùtic_curve_Àn
++] = 
öfo
->
és_id
 >> 8;

270 
ñlùtic_curve_li°
[
ñlùtic_curve_Àn
++] = 
öfo
->
és_id
 & 0xFF;

273 if–
ñlùtic_curve_Àn
 == 0 )

276 *
p
++ = ()––
TLS_EXT_SUPPORTED_ELLIPTIC_CURVES
 >> 8 ) & 0xFF );

277 *
p
++ = ()––
TLS_EXT_SUPPORTED_ELLIPTIC_CURVES
 ) & 0xFF );

279 *
p
++ = ()–––
ñlùtic_curve_Àn
 + 2 ) >> 8 ) & 0xFF );

280 *
p
++ = ()–––
ñlùtic_curve_Àn
 + 2 ) ) & 0xFF );

282 *
p
++ = ()–––
ñlùtic_curve_Àn
 ) >> 8 ) & 0xFF );

283 *
p
++ = ()–––
ñlùtic_curve_Àn
 ) ) & 0xFF );

285 *
ﬁí
 = 6 + 
ñlùtic_curve_Àn
;

286 
	}
}

288 
	$s¶_wrôe_suµ‹ãd_poöt_f‹m©s_ext
–
s¶_c⁄ãxt
 *
s¶
,

289 *
buf
,

290 
size_t
 *
ﬁí
 )

292 *
p
 = 
buf
;

293 ((Ë
s¶
);

295 *
ﬁí
 = 0;

297 
	`SSL_DEBUG_MSG
( 3, ( "client hello,ádding supported_point_formatsÉxtension" ) );

299 *
p
++ = ()––
TLS_EXT_SUPPORTED_POINT_FORMATS
 >> 8 ) & 0xFF );

300 *
p
++ = ()––
TLS_EXT_SUPPORTED_POINT_FORMATS
 ) & 0xFF );

302 *
p
++ = 0x00;

303 *
p
++ = 2;

305 *
p
++ = 1;

306 *
p
++ = 
POLARSSL_ECP_PF_UNCOMPRESSED
;

308 *
ﬁí
 = 6;

309 
	}
}

312 #i‡
deföed
(
POLARSSL_SSL_MAX_FRAGMENT_LENGTH
)

313 
	$s¶_wrôe_max_‰agmít_Àngth_ext
–
s¶_c⁄ãxt
 *
s¶
,

314 *
buf
,

315 
size_t
 *
ﬁí
 )

317 *
p
 = 
buf
;

319 if–
s¶
->
mÊ_code
 =
SSL_MAX_FRAG_LEN_NONE
 ) {

320 *
ﬁí
 = 0;

324 
	`SSL_DEBUG_MSG
( 3, ( "client hello,ádding max_fragment_lengthÉxtension" ) );

326 *
p
++ = ()––
TLS_EXT_MAX_FRAGMENT_LENGTH
 >> 8 ) & 0xFF );

327 *
p
++ = ()––
TLS_EXT_MAX_FRAGMENT_LENGTH
 ) & 0xFF );

329 *
p
++ = 0x00;

330 *
p
++ = 1;

332 *
p
++ = 
s¶
->
mÊ_code
;

334 *
ﬁí
 = 5;

335 
	}
}

338 #i‡
deföed
(
POLARSSL_SSL_TRUNCATED_HMAC
)

339 
	$s¶_wrôe_åunˇãd_hmac_ext
–
s¶_c⁄ãxt
 *
s¶
,

340 *
buf
, 
size_t
 *
ﬁí
 )

342 *
p
 = 
buf
;

344 if–
s¶
->
åunc_hmac
 =
SSL_TRUNC_HMAC_DISABLED
 )

346 *
ﬁí
 = 0;

350 
	`SSL_DEBUG_MSG
( 3, ( "client hello,áddingÅruncated_hmacÉxtension" ) );

352 *
p
++ = ()––
TLS_EXT_TRUNCATED_HMAC
 >> 8 ) & 0xFF );

353 *
p
++ = ()––
TLS_EXT_TRUNCATED_HMAC
 ) & 0xFF );

355 *
p
++ = 0x00;

356 *
p
++ = 0x00;

358 *
ﬁí
 = 4;

359 
	}
}

362 #i‡
deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

363 
	$s¶_wrôe_£ssi⁄_tickë_ext
–
s¶_c⁄ãxt
 *
s¶
,

364 *
buf
, 
size_t
 *
ﬁí
 )

366 *
p
 = 
buf
;

367 
size_t
 
éí
 = 
s¶
->
£ssi⁄_√gŸüã
->
tickë_Àn
;

369 if–
s¶
->
£ssi⁄_tickës
 =
SSL_SESSION_TICKETS_DISABLED
 )

371 *
ﬁí
 = 0;

375 
	`SSL_DEBUG_MSG
( 3, ( "client hello,ádding sessionÅicketÉxtension" ) );

377 *
p
++ = ()––
TLS_EXT_SESSION_TICKET
 >> 8 ) & 0xFF );

378 *
p
++ = ()––
TLS_EXT_SESSION_TICKET
 ) & 0xFF );

380 *
p
++ = ()––
éí
 >> 8 ) & 0xFF );

381 *
p
++ = ()––
éí
 ) & 0xFF );

383 *
ﬁí
 = 4;

385 if–
s¶
->
£ssi⁄_√gŸüã
->
tickë
 =
NULL
 ||

386 
s¶
->
£ssi⁄_√gŸüã
->
tickë_Àn
 == 0 )

391 
	`SSL_DEBUG_MSG
–3, ( "£ndög sessi⁄Åickë o‡Àngth %d", 
éí
 ) );

393 
	`mem˝y
–
p
, 
s¶
->
£ssi⁄_√gŸüã
->
tickë
, 
éí
 );

395 *
ﬁí
 +
éí
;

396 
	}
}

399 #i‡
deföed
(
POLARSSL_SSL_ALPN
)

400 
	$s¶_wrôe_Æ≤_ext
–
s¶_c⁄ãxt
 *
s¶
,

401 *
buf
, 
size_t
 *
ﬁí
 )

403 *
p
 = 
buf
;

404 c⁄° **
cur
;

406 if–
s¶
->
Æ≤_li°
 =
NULL
 )

408 *
ﬁí
 = 0;

412 
	`SSL_DEBUG_MSG
( 3, ( "client hello,áddingálpnÉxtension" ) );

414 *
p
++ = ()––
TLS_EXT_ALPN
 >> 8 ) & 0xFF );

415 *
p
++ = ()––
TLS_EXT_ALPN
 ) & 0xFF );

426 
p
 += 4;

428  
cur
 = 
s¶
->
Æ≤_li°
; *cu∏!
NULL
; cur++ )

430 *
p
 = ()–
	`°æí
–*
cur
 ) & 0xFF );

431 
	`mem˝y
–
p
 + 1, *
cur
, *p );

432 
p
 += 1 + *p;

435 *
ﬁí
 = 
p
 - 
buf
;

438 
buf
[4] = ()–––*
ﬁí
 - 6 ) >> 8 ) & 0xFF );

439 
buf
[5] = ()–––*
ﬁí
 - 6 ) ) & 0xFF );

442 
buf
[2] = ()–––*
ﬁí
 - 4 ) >> 8 ) & 0xFF );

443 
buf
[3] = ()–––*
ﬁí
 - 4 ) ) & 0xFF );

444 
	}
}

447 
	$s¶_wrôe_˛õ¡_hñlo
–
s¶_c⁄ãxt
 *
s¶
 )

449 
ªt
;

450 
size_t
 
i
, 
n
, 
ﬁí
, 
ext_Àn
 = 0;

451 *
buf
;

452 *
p
, *
q
;

453 #i‡
	`deföed
(
POLARSSL_HAVE_TIME
)

454 
time_t
 
t
;

456 c⁄° *
cùhîsuôes
;

457 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
;

459 
	`SSL_DEBUG_MSG
( 2, ( "=> write client hello" ) );

461 if–
s¶
->
f_∫g
 =
NULL
 )

463 
	`SSL_DEBUG_MSG
( 1, ( "no RNGÖrovided") );

464 –
POLARSSL_ERR_SSL_NO_RNG
 );

467 if–
s¶
->
ª√gŸüti⁄
 =
SSL_INITIAL_HANDSHAKE
 )

469 
s¶
->
maj‹_vî
 = s¶->
mö_maj‹_vî
;

470 
s¶
->
mö‹_vî
 = s¶->
mö_mö‹_vî
;

473 if–
s¶
->
max_maj‹_vî
 =0 && s¶->
max_mö‹_vî
 == 0 )

475 
s¶
->
max_maj‹_vî
 = 
SSL_MAX_MAJOR_VERSION
;

476 
s¶
->
max_mö‹_vî
 = 
SSL_MAX_MINOR_VERSION
;

486 
buf
 = 
s¶
->
out_msg
;

487 
p
 = 
buf
 + 4;

489 *
p
++ = (Ë
s¶
->
max_maj‹_vî
;

490 *
p
++ = (Ë
s¶
->
max_mö‹_vî
;

492 
	`SSL_DEBUG_MSG
( 3, ( "client hello, max version: [%d:%d]",

493 
buf
[4], buf[5] ) );

495 #i‡
	`deföed
(
POLARSSL_HAVE_TIME
)

496 
t
 = 
	`time
–
NULL
 );

497 *
p
++ = ()–
t
 >> 24 );

498 *
p
++ = ()–
t
 >> 16 );

499 *
p
++ = ()–
t
 >> 8 );

500 *
p
++ = ()–
t
 );

502 
	`SSL_DEBUG_MSG
–3, ( "˛õ¡ hñlo, cuºíàtime: %lu", 
t
 ) );

504 if––
ªt
 = 
s¶
->
	`f_∫g
–s¶->
p_∫g
, 
p
, 4 ) ) != 0 )

505 –
ªt
 );

507 
p
 += 4;

510 if––
ªt
 = 
s¶
->
	`f_∫g
–s¶->
p_∫g
, 
p
, 28 ) ) != 0 )

511 –
ªt
 );

513 
p
 += 28;

515 
	`mem˝y
–
s¶
->
h™dshake
->
øndbyãs
, 
buf
 + 6, 32 );

517 
	`SSL_DEBUG_BUF
–3, "˛õ¡ hñlo,Ñ™dom byãs", 
buf
 + 6, 32 );

529 
n
 = 
s¶
->
£ssi⁄_√gŸüã
->
Àngth
;

531 if–
s¶
->
ª√gŸüti⁄
 !
SSL_INITIAL_HANDSHAKE
 || 
n
 < 16 ||Ç > 32 ||

532 
s¶
->
h™dshake
->
ªsume
 == 0 )

534 
n
 = 0;

537 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

542 if–
s¶
->
ª√gŸüti⁄
 =
SSL_INITIAL_HANDSHAKE
 &&

543 
s¶
->
£ssi⁄_√gŸüã
->
tickë
 !
NULL
 &&

544 
s¶
->
£ssi⁄_√gŸüã
->
tickë_Àn
 != 0 )

546 
ªt
 = 
s¶
->
	`f_∫g
–s¶->
p_∫g
, s¶->
£ssi⁄_√gŸüã
->
id
, 32 );

548 if–
ªt
 != 0 )

549 –
ªt
 );

551 
s¶
->
£ssi⁄_√gŸüã
->
Àngth
 = 
n
 = 32;

555 *
p
++ = (Ë
n
;

557  
i
 = 0; i < 
n
; i++ )

558 *
p
++ = 
s¶
->
£ssi⁄_√gŸüã
->
id
[
i
];

560 
	`SSL_DEBUG_MSG
–3, ( "˛õ¡ hñlo, sessi⁄ idÜí.: %d", 
n
 ) );

561 
	`SSL_DEBUG_BUF
–3, "˛õ¡ hñlo, sessi⁄ id", 
buf
 + 39, 
n
 );

563 
cùhîsuôes
 = 
s¶
->
cùhîsuôe_li°
[s¶->
mö‹_vî
];

564 
n
 = 0;

565 
q
 = 
p
;

568 
p
 += 2;

573 if–
s¶
->
ª√gŸüti⁄
 =
SSL_INITIAL_HANDSHAKE
 )

575 *
p
++ = ()–
SSL_EMPTY_RENEGOTIATION_INFO
 >> 8 );

576 *
p
++ = ()–
SSL_EMPTY_RENEGOTIATION_INFO
 );

577 
n
++;

580  
i
 = 0; 
cùhîsuôes
[i] != 0; i++ )

582 
cùhîsuôe_öfo
 = 
	`s¶_cùhîsuôe_‰om_id
–
cùhîsuôes
[
i
] );

584 if–
cùhîsuôe_öfo
 =
NULL
 )

587 if–
cùhîsuôe_öfo
->
mö_mö‹_vî
 > 
s¶
->
max_mö‹_vî
 ||

588 
cùhîsuôe_öfo
->
max_mö‹_vî
 < 
s¶
->
mö_mö‹_vî
 )

591 
	`SSL_DEBUG_MSG
( 3, ( "client hello,ádd ciphersuite: %2d",

592 
cùhîsuôes
[
i
] ) );

594 
n
++;

595 *
p
++ = ()–
cùhîsuôes
[
i
] >> 8 );

596 *
p
++ = ()–
cùhîsuôes
[
i
] );

599 *
q
++ = ()–
n
 >> 7 );

600 *
q
++ = ()–
n
 << 1 );

602 
	`SSL_DEBUG_MSG
–3, ( "˛õ¡ hñlo, gŸ %d cùhîsuôes", 
n
 ) );

605 #i‡
	`deföed
(
POLARSSL_ZLIB_SUPPORT
)

606 
	`SSL_DEBUG_MSG
( 3, ( "client hello, compressÜen.: %d", 2 ) );

607 
	`SSL_DEBUG_MSG
( 3, ( "client hello, compressálg.: %d %d",

608 
SSL_COMPRESS_DEFLATE
, 
SSL_COMPRESS_NULL
 ) );

610 *
p
++ = 2;

611 *
p
++ = 
SSL_COMPRESS_DEFLATE
;

612 *
p
++ = 
SSL_COMPRESS_NULL
;

614 
	`SSL_DEBUG_MSG
( 3, ( "client hello, compressÜen.: %d", 1 ) );

615 
	`SSL_DEBUG_MSG
–3, ( "˛õ¡ hñlo, com¥es†Æg.: %d", 
SSL_COMPRESS_NULL
 ) );

617 *
p
++ = 1;

618 *
p
++ = 
SSL_COMPRESS_NULL
;

623 #i‡
	`deföed
(
POLARSSL_SSL_SERVER_NAME_INDICATION
)

624 
	`s¶_wrôe_ho°«me_ext
–
s¶
, 
p
 + 2 + 
ext_Àn
, &
ﬁí
 );

625 
ext_Àn
 +
ﬁí
;

628 
	`s¶_wrôe_ª√gŸüti⁄_ext
–
s¶
, 
p
 + 2 + 
ext_Àn
, &
ﬁí
 );

629 
ext_Àn
 +
ﬁí
;

631 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

632 
	`s¶_wrôe_sig«tuª_Æg‹ôhms_ext
–
s¶
, 
p
 + 2 + 
ext_Àn
, &
ﬁí
 );

633 
ext_Àn
 +
ﬁí
;

636 #i‡
	`deföed
(
POLARSSL_ECDH_C
Ë|| deföed(
POLARSSL_ECDSA_C
)

637 
	`s¶_wrôe_suµ‹ãd_ñlùtic_curves_ext
–
s¶
, 
p
 + 2 + 
ext_Àn
, &
ﬁí
 );

638 
ext_Àn
 +
ﬁí
;

640 
	`s¶_wrôe_suµ‹ãd_poöt_f‹m©s_ext
–
s¶
, 
p
 + 2 + 
ext_Àn
, &
ﬁí
 );

641 
ext_Àn
 +
ﬁí
;

644 #i‡
	`deföed
(
POLARSSL_SSL_MAX_FRAGMENT_LENGTH
)

645 
	`s¶_wrôe_max_‰agmít_Àngth_ext
–
s¶
, 
p
 + 2 + 
ext_Àn
, &
ﬁí
 );

646 
ext_Àn
 +
ﬁí
;

649 #i‡
	`deföed
(
POLARSSL_SSL_TRUNCATED_HMAC
)

650 
	`s¶_wrôe_åunˇãd_hmac_ext
–
s¶
, 
p
 + 2 + 
ext_Àn
, &
ﬁí
 );

651 
ext_Àn
 +
ﬁí
;

654 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

655 
	`s¶_wrôe_£ssi⁄_tickë_ext
–
s¶
, 
p
 + 2 + 
ext_Àn
, &
ﬁí
 );

656 
ext_Àn
 +
ﬁí
;

659 #i‡
	`deföed
(
POLARSSL_SSL_ALPN
)

660 
	`s¶_wrôe_Æ≤_ext
–
s¶
, 
p
 + 2 + 
ext_Àn
, &
ﬁí
 );

661 
ext_Àn
 +
ﬁí
;

664 
	`SSL_DEBUG_MSG
( 3, ( "client hello,ÅotalÉxtensionÜength: %d",

665 
ext_Àn
 ) );

667 if–
ext_Àn
 > 0 )

669 *
p
++ = ()––
ext_Àn
 >> 8 ) & 0xFF );

670 *
p
++ = ()––
ext_Àn
 ) & 0xFF );

671 
p
 +
ext_Àn
;

674 
s¶
->
out_msgÀn
 = 
p
 - 
buf
;

675 
s¶
->
out_msgty≥
 = 
SSL_MSG_HANDSHAKE
;

676 
s¶
->
out_msg
[0] = 
SSL_HS_CLIENT_HELLO
;

678 
s¶
->
°©e
++;

680 if––
ªt
 = 
	`s¶_wrôe_ªc‹d
–
s¶
 ) ) != 0 )

682 
	`SSL_DEBUG_RET
–1, "s¶_wrôe_ªc‹d", 
ªt
 );

683 –
ªt
 );

686 
	`SSL_DEBUG_MSG
( 2, ( "<= write client hello" ) );

689 
	}
}

691 
	$s¶_∑r£_ª√gŸüti⁄_öfo
–
s¶_c⁄ãxt
 *
s¶
,

692 c⁄° *
buf
,

693 
size_t
 
Àn
 )

695 
ªt
;

697 if–
s¶
->
ª√gŸüti⁄
 =
SSL_INITIAL_HANDSHAKE
 )

699 if–
Àn
 !1 || 
buf
[0] != 0x0 )

701 
	`SSL_DEBUG_MSG
( 1, ( "non-zeroÜengthÑenegotiated connection field" ) );

703 if––
ªt
 = 
	`s¶_£nd_Áèl_h™dshake_Áûuª
–
s¶
 ) ) != 0 )

704 –
ªt
 );

706 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

709 
s¶
->
£cuª_ª√gŸüti⁄
 = 
SSL_SECURE_RENEGOTIATION
;

714 if–
Àn
 !1 + 
s¶
->
vîify_d©a_Àn
 * 2 ||

715 
buf
[0] !
s¶
->
vîify_d©a_Àn
 * 2 ||

716 
	`ß„r_memcmp
–
buf
 + 1,

717 
s¶
->
own_vîify_d©a
, s¶->
vîify_d©a_Àn
 ) != 0 ||

718 
	`ß„r_memcmp
–
buf
 + 1 + 
s¶
->
vîify_d©a_Àn
,

719 
s¶
->
≥î_vîify_d©a
, s¶->
vîify_d©a_Àn
 ) != 0 )

721 
	`SSL_DEBUG_MSG
( 1, ( "non-matchingÑenegotiated connection field" ) );

723 if––
ªt
 = 
	`s¶_£nd_Áèl_h™dshake_Áûuª
–
s¶
 ) ) != 0 )

724 –
ªt
 );

726 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

731 
	}
}

733 #i‡
deföed
(
POLARSSL_SSL_MAX_FRAGMENT_LENGTH
)

734 
	$s¶_∑r£_max_‰agmít_Àngth_ext
–
s¶_c⁄ãxt
 *
s¶
,

735 c⁄° *
buf
,

736 
size_t
 
Àn
 )

742 if–
s¶
->
mÊ_code
 =
SSL_MAX_FRAG_LEN_NONE
 ||

743 
Àn
 != 1 ||

744 
buf
[0] !
s¶
->
mÊ_code
 )

746 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

750 
	}
}

753 #i‡
deföed
(
POLARSSL_SSL_TRUNCATED_HMAC
)

754 
	$s¶_∑r£_åunˇãd_hmac_ext
–
s¶_c⁄ãxt
 *
s¶
,

755 c⁄° *
buf
,

756 
size_t
 
Àn
 )

758 if–
s¶
->
åunc_hmac
 =
SSL_TRUNC_HMAC_DISABLED
 ||

759 
Àn
 != 0 )

761 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

764 ((Ë
buf
);

766 
s¶
->
£ssi⁄_√gŸüã
->
åunc_hmac
 = 
SSL_TRUNC_HMAC_ENABLED
;

769 
	}
}

772 #i‡
deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

773 
	$s¶_∑r£_£ssi⁄_tickë_ext
–
s¶_c⁄ãxt
 *
s¶
,

774 c⁄° *
buf
,

775 
size_t
 
Àn
 )

777 if–
s¶
->
£ssi⁄_tickës
 =
SSL_SESSION_TICKETS_DISABLED
 ||

778 
Àn
 != 0 )

780 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

783 ((Ë
buf
);

785 
s¶
->
h™dshake
->
√w_£ssi⁄_tickë
 = 1;

788 
	}
}

791 #i‡
deföed
(
POLARSSL_ECDH_C
Ë|| deföed(
POLARSSL_ECDSA_C
)

792 
	$s¶_∑r£_suµ‹ãd_poöt_f‹m©s_ext
–
s¶_c⁄ãxt
 *
s¶
,

793 c⁄° *
buf
,

794 
size_t
 
Àn
 )

796 
size_t
 
li°_size
;

797 c⁄° *
p
;

799 
li°_size
 = 
buf
[0];

800 if–
li°_size
 + 1 !
Àn
 )

802 
	`SSL_DEBUG_MSG
( 1, ( "bad server hello message" ) );

803 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

806 
p
 = 
buf
 + 1;

807  
li°_size
 > 0 )

809 if–
p
[0] =
POLARSSL_ECP_PF_UNCOMPRESSED
 ||

810 
p
[0] =
POLARSSL_ECP_PF_COMPRESSED
 )

812 
s¶
->
h™dshake
->
ecdh_˘x
.
poöt_f‹m©
 = 
p
[0];

813 
	`SSL_DEBUG_MSG
–4, ( "poöàf‹m© sñe˘ed: %d", 
p
[0] ) );

817 
li°_size
--;

818 
p
++;

821 
	`SSL_DEBUG_MSG
( 1, ( "noÖoint format in common" ) );

822 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

823 
	}
}

826 #i‡
deföed
(
POLARSSL_SSL_ALPN
)

827 
	$s¶_∑r£_Æ≤_ext
–
s¶_c⁄ãxt
 *
s¶
,

828 c⁄° *
buf
, 
size_t
 
Àn
 )

830 
size_t
 
li°_Àn
, 
«me_Àn
;

831 c⁄° **
p
;

834 if–
s¶
->
Æ≤_li°
 =
NULL
 )

835 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

848 if–
Àn
 < 4 )

849 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

851 
li°_Àn
 = ( 
buf
[0] << 8 ) | buf[1];

852 if–
li°_Àn
 !
Àn
 - 2 )

853 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

855 
«me_Àn
 = 
buf
[2];

856 if–
«me_Àn
 !
li°_Àn
 - 1 )

857 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

860  
p
 = 
s¶
->
Æ≤_li°
; *∞!
NULL
;Ö++ )

862 if–
«me_Àn
 =
	`°æí
–*
p
 ) &&

863 
	`memcmp
–
buf
 + 3, *
p
, 
«me_Àn
 ) == 0 )

865 
s¶
->
Æ≤_cho£n
 = *
p
;

870 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

871 
	}
}

874 
	$s¶_∑r£_£rvî_hñlo
–
s¶_c⁄ãxt
 *
s¶
 )

876 
ªt
, 
i
, 
comp
;

877 
size_t
 
n
;

878 
size_t
 
ext_Àn
 = 0;

879 *
buf
, *
ext
;

880 
ª√gŸüti⁄_öfo_£í
 = 0;

881 
h™dshake_Áûuª
 = 0;

882 #i‡
	`deföed
(
POLARSSL_DEBUG_C
)

883 
uöt32_t
 
t
;

886 
	`SSL_DEBUG_MSG
( 2, ( "=>Öarse server hello" ) );

895 
buf
 = 
s¶
->
ö_msg
;

897 if––
ªt
 = 
	`s¶_ªad_ªc‹d
–
s¶
 ) ) != 0 )

899 
	`SSL_DEBUG_RET
–1, "s¶_ªad_ªc‹d", 
ªt
 );

900 –
ªt
 );

903 if–
s¶
->
ö_msgty≥
 !
SSL_MSG_HANDSHAKE
 )

905 
	`SSL_DEBUG_MSG
( 1, ( "bad server hello message" ) );

906 –
POLARSSL_ERR_SSL_UNEXPECTED_MESSAGE
 );

909 
	`SSL_DEBUG_MSG
( 3, ( "server hello, chosen version: [%d:%d]",

910 
buf
[4], buf[5] ) );

912 if–
s¶
->
ö_h¶í
 < 42 ||

913 
buf
[0] !
SSL_HS_SERVER_HELLO
 ||

914 
buf
[4] !
SSL_MAJOR_VERSION_3
 )

916 
	`SSL_DEBUG_MSG
( 1, ( "bad server hello message" ) );

917 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

920 if–
buf
[5] > 
s¶
->
max_mö‹_vî
 )

922 
	`SSL_DEBUG_MSG
( 1, ( "bad server hello message" ) );

923 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

926 
s¶
->
mö‹_vî
 = 
buf
[5];

928 if–
s¶
->
mö‹_vî
 < s¶->
mö_mö‹_vî
 )

930 
	`SSL_DEBUG_MSG
( 1, ( "server only supports ssl smallerÅhan minimum"

931 " [%d:%d] < [%d:%d]", 
s¶
->
maj‹_vî
,

932 
s¶
->
mö‹_vî
, 
buf
[4], buf[5] ) );

934 
	`s¶_£nd_Æît_mesßge
–
s¶
, 
SSL_ALERT_LEVEL_FATAL
,

935 
SSL_ALERT_MSG_PROTOCOL_VERSION
 );

937 –
POLARSSL_ERR_SSL_BAD_HS_PROTOCOL_VERSION
 );

940 #i‡
	`deföed
(
POLARSSL_DEBUG_C
)

941 
t
 = ( (
uöt32_t
Ë
buf
[6] << 24 )

942 | ( (
uöt32_t
Ë
buf
[7] << 16 )

943 | ( (
uöt32_t
Ë
buf
[8] << 8 )

944 | ( (
uöt32_t
Ë
buf
[9] );

945 
	`SSL_DEBUG_MSG
–3, ( "£rvî hñlo, cuºíàtime: %lu", 
t
 ) );

948 
	`mem˝y
–
s¶
->
h™dshake
->
øndbyãs
 + 32, 
buf
 + 6, 32 );

950 
n
 = 
buf
[38];

952 
	`SSL_DEBUG_BUF
–3, "£rvî hñlo,Ñ™dom byãs", 
buf
 + 6, 32 );

954 if–
n
 > 32 )

956 
	`SSL_DEBUG_MSG
( 1, ( "bad server hello message" ) );

957 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

968 if–
s¶
->
ö_h¶í
 > 42 + 
n
 )

970 
ext_Àn
 = ( ( 
buf
[42 + 
n
] << 8 )

971 | ( 
buf
[43 + 
n
] ) );

973 if––
ext_Àn
 > 0 &&Éxt_len < 4 ) ||

974 
s¶
->
ö_h¶í
 !44 + 
n
 + 
ext_Àn
 )

976 
	`SSL_DEBUG_MSG
( 1, ( "bad server hello message" ) );

977 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

981 
i
 = ( 
buf
[39 + 
n
] << 8 ) | buf[40 +Ç];

982 
comp
 = 
buf
[41 + 
n
];

987 
s¶
->
å™sf‹m_√gŸüã
->
cùhîsuôe_öfo
 = 
	`s¶_cùhîsuôe_‰om_id
–
i
 );

989 if–
s¶
->
å™sf‹m_√gŸüã
->
cùhîsuôe_öfo
 =
NULL
 )

991 
	`SSL_DEBUG_MSG
–1, ( "cùhîsuôêöfÿf‹ %04xÇŸ found", 
i
 ) );

992 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

995 
	`s¶_›timize_checksum
–
s¶
, s¶->
å™sf‹m_√gŸüã
->
cùhîsuôe_öfo
 );

997 
	`SSL_DEBUG_MSG
–3, ( "£rvî hñlo, sessi⁄ idÜí.: %d", 
n
 ) );

998 
	`SSL_DEBUG_BUF
–3, "£rvî hñlo, sessi⁄ id", 
buf
 + 39, 
n
 );

1003 if–
s¶
->
ª√gŸüti⁄
 !
SSL_INITIAL_HANDSHAKE
 ||

1004 
s¶
->
h™dshake
->
ªsume
 =0 || 
n
 == 0 ||

1005 
s¶
->
£ssi⁄_√gŸüã
->
cùhîsuôe
 !
i
 ||

1006 
s¶
->
£ssi⁄_√gŸüã
->
com¥essi⁄
 !
comp
 ||

1007 
s¶
->
£ssi⁄_√gŸüã
->
Àngth
 !
n
 ||

1008 
	`memcmp
–
s¶
->
£ssi⁄_√gŸüã
->
id
, 
buf
 + 39, 
n
 ) != 0 )

1010 
s¶
->
°©e
++;

1011 
s¶
->
h™dshake
->
ªsume
 = 0;

1012 #i‡
	`deföed
(
POLARSSL_HAVE_TIME
)

1013 
s¶
->
£ssi⁄_√gŸüã
->
°¨t
 = 
	`time
–
NULL
 );

1015 
s¶
->
£ssi⁄_√gŸüã
->
cùhîsuôe
 = 
i
;

1016 
s¶
->
£ssi⁄_√gŸüã
->
com¥essi⁄
 = 
comp
;

1017 
s¶
->
£ssi⁄_√gŸüã
->
Àngth
 = 
n
;

1018 
	`mem˝y
–
s¶
->
£ssi⁄_√gŸüã
->
id
, 
buf
 + 39, 
n
 );

1022 
s¶
->
°©e
 = 
SSL_SERVER_CHANGE_CIPHER_SPEC
;

1024 if––
ªt
 = 
	`s¶_dîive_keys
–
s¶
 ) ) != 0 )

1026 
	`SSL_DEBUG_RET
–1, "s¶_dîive_keys", 
ªt
 );

1027 –
ªt
 );

1031 
	`SSL_DEBUG_MSG
( 3, ( "%s session has beenÑesumed",

1032 
s¶
->
h™dshake
->
ªsume
 ? "a" : "no" ) );

1034 
	`SSL_DEBUG_MSG
–3, ( "£rvî hñlo, cho£¿cùhîsuôe: %d", 
i
 ) );

1035 
	`SSL_DEBUG_MSG
–3, ( "£rvî hñlo, com¥es†Æg.: %d", 
buf
[41 + 
n
] ) );

1037 
i
 = 0;

1040 if–
s¶
->
cùhîsuôe_li°
[s¶->
mö‹_vî
][
i
] == 0 )

1042 
	`SSL_DEBUG_MSG
( 1, ( "bad server hello message" ) );

1043 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

1046 if–
s¶
->
cùhîsuôe_li°
[s¶->
mö‹_vî
][
i
++] ==

1047 
s¶
->
£ssi⁄_√gŸüã
->
cùhîsuôe
 )

1053 if–
comp
 !
SSL_COMPRESS_NULL


1054 #i‡
	`deföed
(
POLARSSL_ZLIB_SUPPORT
)

1055 && 
comp
 !
SSL_COMPRESS_DEFLATE


1059 
	`SSL_DEBUG_MSG
( 1, ( "bad server hello message" ) );

1060 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

1062 
s¶
->
£ssi⁄_√gŸüã
->
com¥essi⁄
 = 
comp
;

1064 
ext
 = 
buf
 + 44 + 
n
;

1066 
	`SSL_DEBUG_MSG
–2, ( "£rvî hñlo,ÅŸÆÉxãnsi⁄Üígth: %d", 
ext_Àn
 ) );

1068  
ext_Àn
 )

1070 
ext_id
 = ( ( 
ext
[0] << 8 )

1071 | ( 
ext
[1] ) );

1072 
ext_size
 = ( ( 
ext
[2] << 8 )

1073 | ( 
ext
[3] ) );

1075 if–
ext_size
 + 4 > 
ext_Àn
 )

1077 
	`SSL_DEBUG_MSG
( 1, ( "bad server hello message" ) );

1078 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

1081  
ext_id
 )

1083 
TLS_EXT_RENEGOTIATION_INFO
:

1084 
	`SSL_DEBUG_MSG
( 3, ( "foundÑenegotiationÉxtension" ) );

1085 
ª√gŸüti⁄_öfo_£í
 = 1;

1087 if––
ªt
 = 
	`s¶_∑r£_ª√gŸüti⁄_öfo
–
s¶
, 
ext
 + 4,

1088 
ext_size
 ) ) != 0 )

1089 –
ªt
 );

1093 #i‡
	`deföed
(
POLARSSL_SSL_MAX_FRAGMENT_LENGTH
)

1094 
TLS_EXT_MAX_FRAGMENT_LENGTH
:

1095 
	`SSL_DEBUG_MSG
( 3, ( "found max_fragment_lengthÉxtension" ) );

1097 if––
ªt
 = 
	`s¶_∑r£_max_‰agmít_Àngth_ext
–
s¶
,

1098 
ext
 + 4, 
ext_size
 ) ) != 0 )

1100 –
ªt
 );

1106 #i‡
	`deföed
(
POLARSSL_SSL_TRUNCATED_HMAC
)

1107 
TLS_EXT_TRUNCATED_HMAC
:

1108 
	`SSL_DEBUG_MSG
( 3, ( "foundÅruncated_hmacÉxtension" ) );

1110 if––
ªt
 = 
	`s¶_∑r£_åunˇãd_hmac_ext
–
s¶
,

1111 
ext
 + 4, 
ext_size
 ) ) != 0 )

1113 –
ªt
 );

1119 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

1120 
TLS_EXT_SESSION_TICKET
:

1121 
	`SSL_DEBUG_MSG
( 3, ( "found session_ticketÉxtension" ) );

1123 if––
ªt
 = 
	`s¶_∑r£_£ssi⁄_tickë_ext
–
s¶
,

1124 
ext
 + 4, 
ext_size
 ) ) != 0 )

1126 –
ªt
 );

1132 #i‡
	`deföed
(
POLARSSL_ECDH_C
Ë|| deföed(
POLARSSL_ECDSA_C
)

1133 
TLS_EXT_SUPPORTED_POINT_FORMATS
:

1134 
	`SSL_DEBUG_MSG
( 3, ( "found supported_point_formatsÉxtension" ) );

1136 if––
ªt
 = 
	`s¶_∑r£_suµ‹ãd_poöt_f‹m©s_ext
–
s¶
,

1137 
ext
 + 4, 
ext_size
 ) ) != 0 )

1139 –
ªt
 );

1145 #i‡
	`deföed
(
POLARSSL_SSL_ALPN
)

1146 
TLS_EXT_ALPN
:

1147 
	`SSL_DEBUG_MSG
( 3, ( "foundálpnÉxtension" ) );

1149 if––
ªt
 = 
	`s¶_∑r£_Æ≤_ext
–
s¶
, 
ext
 + 4, 
ext_size
 ) ) != 0 )

1150 –
ªt
 );

1156 
	`SSL_DEBUG_MSG
( 3, ( "unknownÉxtension found: %d (ignoring)",

1157 
ext_id
 ) );

1160 
ext_Àn
 -4 + 
ext_size
;

1161 
ext
 +4 + 
ext_size
;

1163 if–
ext_Àn
 > 0 &&Éxt_len < 4 )

1165 
	`SSL_DEBUG_MSG
( 1, ( "bad server hello message" ) );

1166 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

1173 if–
s¶
->
£cuª_ª√gŸüti⁄
 =
SSL_LEGACY_RENEGOTIATION
 &&

1174 
s¶
->
Ælow_Àgacy_ª√gŸüti⁄
 =
SSL_LEGACY_BREAK_HANDSHAKE
 )

1176 
	`SSL_DEBUG_MSG
( 1, ( "legacyÑenegotiation, breaking off handshake" ) );

1177 
h™dshake_Áûuª
 = 1;

1179 if–
s¶
->
ª√gŸüti⁄
 =
SSL_RENEGOTIATION
 &&

1180 
s¶
->
£cuª_ª√gŸüti⁄
 =
SSL_SECURE_RENEGOTIATION
 &&

1181 
ª√gŸüti⁄_öfo_£í
 == 0 )

1183 
	`SSL_DEBUG_MSG
( 1, ( "renegotiation_infoÉxtension missing (secure)" ) );

1184 
h™dshake_Áûuª
 = 1;

1186 if–
s¶
->
ª√gŸüti⁄
 =
SSL_RENEGOTIATION
 &&

1187 
s¶
->
£cuª_ª√gŸüti⁄
 =
SSL_LEGACY_RENEGOTIATION
 &&

1188 
s¶
->
Ælow_Àgacy_ª√gŸüti⁄
 =
SSL_LEGACY_NO_RENEGOTIATION
 )

1190 
	`SSL_DEBUG_MSG
( 1, ( "legacyÑenegotiationÇotállowed" ) );

1191 
h™dshake_Áûuª
 = 1;

1193 if–
s¶
->
ª√gŸüti⁄
 =
SSL_RENEGOTIATION
 &&

1194 
s¶
->
£cuª_ª√gŸüti⁄
 =
SSL_LEGACY_RENEGOTIATION
 &&

1195 
ª√gŸüti⁄_öfo_£í
 == 1 )

1197 
	`SSL_DEBUG_MSG
( 1, ( "renegotiation_infoÉxtensionÖresent (legacy)" ) );

1198 
h™dshake_Áûuª
 = 1;

1201 if–
h™dshake_Áûuª
 == 1 )

1203 if––
ªt
 = 
	`s¶_£nd_Áèl_h™dshake_Áûuª
–
s¶
 ) ) != 0 )

1204 –
ªt
 );

1206 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO
 );

1209 
	`SSL_DEBUG_MSG
( 2, ( "<=Öarse server hello" ) );

1212 
	}
}

1214 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
) || \

1215 
	$deföed
(
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
)

1216 
	$s¶_∑r£_£rvî_dh_∑øms
–
s¶_c⁄ãxt
 *
s¶
, **
p
,

1217 *
íd
 )

1219 
ªt
 = 
POLARSSL_ERR_SSL_FEATURE_UNAVAILABLE
;

1230 if––
ªt
 = 
	`dhm_ªad_∑øms
–&
s¶
->
h™dshake
->
dhm_˘x
, 
p
, 
íd
 ) ) != 0 )

1232 
	`SSL_DEBUG_RET
–2, ( "dhm_ªad_∑øms" ), 
ªt
 );

1233 –
ªt
 );

1236 if–
s¶
->
h™dshake
->
dhm_˘x
.
Àn
 < 64 ||

1237 
s¶
->
h™dshake
->
dhm_˘x
.
Àn
 > 512 )

1239 
	`SSL_DEBUG_MSG
( 1, ( "bad server keyÉxchange message (DHMÜength)" ) );

1240 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE
 );

1243 
	`SSL_DEBUG_MPI
–3, "DHM: P ", &
s¶
->
h™dshake
->
dhm_˘x
.
P
 );

1244 
	`SSL_DEBUG_MPI
–3, "DHM: G ", &
s¶
->
h™dshake
->
dhm_˘x
.
G
 );

1245 
	`SSL_DEBUG_MPI
–3, "DHM: GY", &
s¶
->
h™dshake
->
dhm_˘x
.
GY
 );

1247 –
ªt
 );

1248 
	}
}

1250 
	gPOLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
 */

1252 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) || \

1253 
deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
) || \

1254 
deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED
) || \

1255 
deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_RSA_ENABLED
) || \

1256 
	$deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
)

1257 
	$s¶_check_£rvî_ecdh_∑øms
–c⁄° 
s¶_c⁄ãxt
 *
s¶
 )

1259 c⁄° 
e˝_curve_öfo
 *
curve_öfo
;

1261 
curve_öfo
 = 
	`e˝_curve_öfo_‰om_gΩ_id
–
s¶
->
h™dshake
->
ecdh_˘x
.
gΩ
.
id
 );

1262 if–
curve_öfo
 =
NULL
 )

1264 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

1265 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

1268 
	`SSL_DEBUG_MSG
–2, ( "ECDH curve: %s", 
curve_öfo
->
«me
 ) );

1270 #i‡
	`deföed
(
POLARSSL_SSL_ECP_SET_CURVES
)

1271 if–! 
	`s¶_curve_is_ac˚±abÀ
–
s¶
, s¶->
h™dshake
->
ecdh_˘x
.
gΩ
.
id
 ) )

1273 if–
s¶
->
h™dshake
->
ecdh_˘x
.
gΩ
.
nbôs
 < 163 ||

1274 
s¶
->
h™dshake
->
ecdh_˘x
.
gΩ
.
nbôs
 > 521 )

1278 
	`SSL_DEBUG_ECP
–3, "ECDH: Qp", &
s¶
->
h™dshake
->
ecdh_˘x
.
Qp
 );

1281 
	}
}

1283 
	gPOLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
 ||

1284 
	gPOLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED
 ||

1285 
	gPOLARSSL_KEY_EXCHANGE_ECDH_RSA_ENABLED
 ||

1286 
	gPOLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
 */

1288 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) || \

1289 
deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
) || \

1290 
	$deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED
)

1291 
	$s¶_∑r£_£rvî_ecdh_∑øms
–
s¶_c⁄ãxt
 *
s¶
,

1292 **
p
,

1293 *
íd
 )

1295 
ªt
 = 
POLARSSL_ERR_SSL_FEATURE_UNAVAILABLE
;

1305 if––
ªt
 = 
	`ecdh_ªad_∑øms
–&
s¶
->
h™dshake
->
ecdh_˘x
,

1306 (c⁄° **Ë
p
, 
íd
 ) ) != 0 )

1308 
	`SSL_DEBUG_RET
–1, ( "ecdh_ªad_∑øms" ), 
ªt
 );

1309 –
ªt
 );

1312 if–
	`s¶_check_£rvî_ecdh_∑øms
–
s¶
 ) != 0 )

1314 
	`SSL_DEBUG_MSG
( 1, ( "bad server keyÉxchange message (ECDHE curve)" ) );

1315 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE
 );

1318 –
ªt
 );

1319 
	}
}

1321 
	gPOLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
 ||

1322 
	gPOLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED
 */

1324 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

1325 
	$s¶_∑r£_£rvî_psk_höt
–
s¶_c⁄ãxt
 *
s¶
,

1326 **
p
,

1327 *
íd
 )

1329 
ªt
 = 
POLARSSL_ERR_SSL_FEATURE_UNAVAILABLE
;

1330 
size_t
 
Àn
;

1331 ((Ë
s¶
);

1338 
Àn
 = (*
p
)[0] << 8 | (*p)[1];

1339 *
p
 += 2;

1341 if–(*
p
Ë+ 
Àn
 > 
íd
 )

1343 
	`SSL_DEBUG_MSG
( 1, ( "bad server keyÉxchange message (psk_identity_hintÜength)" ) );

1344 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE
 );

1349 *
p
 +
Àn
;

1350 
ªt
 = 0;

1352 –
ªt
 );

1353 
	}
}

1356 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_RSA_ENABLED
) || \

1357 
	$deföed
(
POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED
)

1361 
	$s¶_wrôe_í¸y±ed_pms
–
s¶_c⁄ãxt
 *
s¶
,

1362 
size_t
 
off£t
, size_à*
ﬁí
,

1363 
size_t
 
pms_off£t
 )

1365 
ªt
;

1366 
size_t
 
Àn_byãs
 = 
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_0
 ? 0 : 2;

1367 *
p
 = 
s¶
->
h™dshake
->
¥ema°î
 + 
pms_off£t
;

1376 
p
[0] = (Ë
s¶
->
max_maj‹_vî
;

1377 
p
[1] = (Ë
s¶
->
max_mö‹_vî
;

1379 if––
ªt
 = 
s¶
->
	`f_∫g
–s¶->
p_∫g
, 
p
 + 2, 46 ) ) != 0 )

1381 
	`SSL_DEBUG_RET
–1, "f_∫g", 
ªt
 );

1382 –
ªt
 );

1385 
s¶
->
h™dshake
->
pm¶í
 = 48;

1390 if–! 
	`pk_ˇn_do
–&
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
->
pk
,

1391 
POLARSSL_PK_RSA
 ) )

1393 
	`SSL_DEBUG_MSG
( 1, ( "certificate keyÅype mismatch" ) );

1394 –
POLARSSL_ERR_SSL_PK_TYPE_MISMATCH
 );

1397 if––
ªt
 = 
	`pk_í¸y±
–&
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
->
pk
,

1398 
p
, 
s¶
->
h™dshake
->
pm¶í
,

1399 
s¶
->
out_msg
 + 
off£t
 + 
Àn_byãs
, 
ﬁí
,

1400 
SSL_MAX_CONTENT_LEN
 - 
off£t
 - 
Àn_byãs
,

1401 
s¶
->
f_∫g
, s¶->
p_∫g
 ) ) != 0 )

1403 
	`SSL_DEBUG_RET
–1, "rß_pkcs1_í¸y±", 
ªt
 );

1404 –
ªt
 );

1407 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_1
) || \

1408 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

1409 if–
Àn_byãs
 == 2 )

1411 
s¶
->
out_msg
[
off£t
+0] = ()–*
ﬁí
 >> 8 );

1412 
s¶
->
out_msg
[
off£t
+1] = ()–*
ﬁí
 );

1413 *
ﬁí
 += 2;

1418 
	}
}

1420 
	gPOLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED
 */

1422 #i‡
deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

1423 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
) || \

1424 
deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) || \

1425 
	$deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
)

1426 
	$s¶_∑r£_sig«tuª_Æg‹ôhm
–
s¶_c⁄ãxt
 *
s¶
,

1427 **
p
,

1428 *
íd
,

1429 
md_ty≥_t
 *
md_Æg
,

1430 
pk_ty≥_t
 *
pk_Æg
 )

1432 ((Ë
s¶
);

1433 *
md_Æg
 = 
POLARSSL_MD_NONE
;

1434 *
pk_Æg
 = 
POLARSSL_PK_NONE
;

1437 if–
s¶
->
mö‹_vî
 !
SSL_MINOR_VERSION_3
 )

1442 if–(*
p
Ë+ 2 > 
íd
 )

1443 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE
 );

1448 if––*
md_Æg
 = 
	`s¶_md_Æg_‰om_hash
–(*
p
)[0] ) ) =
POLARSSL_MD_NONE
 )

1450 
	`SSL_DEBUG_MSG
( 2, ( "Server used unsupported "

1451 "HashAlg‹ôhm %d", *(
p
)[0] ) );

1452 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE
 );

1458 if––*
pk_Æg
 = 
	`s¶_pk_Æg_‰om_sig
–(*
p
)[1] ) ) =
POLARSSL_PK_NONE
 )

1460 
	`SSL_DEBUG_MSG
( 2, ( "server used unsupported "

1461 "Sig«tuªAlg‹ôhm %d", (*
p
)[1] ) );

1462 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE
 );

1465 
	`SSL_DEBUG_MSG
–2, ( "Sîvî u£d Sig«tuªAlg‹ôhm %d", (*
p
)[1] ) );

1466 
	`SSL_DEBUG_MSG
–2, ( "Sîvî u£d HashAlg‹ôhm %d", (*
p
)[0] ) );

1467 *
p
 += 2;

1470 
	}
}

1472 
	gPOLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
 ||

1473 
	gPOLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
 */

1477 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_RSA_ENABLED
) || \

1478 
	$deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
)

1479 
	$s¶_gë_ecdh_∑øms_‰om_˚π
–
s¶_c⁄ãxt
 *
s¶
 )

1481 
ªt
;

1482 c⁄° 
e˝_key∑ú
 *
≥î_key
;

1484 if–! 
	`pk_ˇn_do
–&
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
->
pk
,

1485 
POLARSSL_PK_ECKEY
 ) )

1487 
	`SSL_DEBUG_MSG
( 1, ( "server keyÇot ECDH capable" ) );

1488 –
POLARSSL_ERR_SSL_PK_TYPE_MISMATCH
 );

1491 
≥î_key
 = 
	`pk_ec
–
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
->
pk
 );

1493 if––
ªt
 = 
	`ecdh_gë_∑øms
–&
s¶
->
h™dshake
->
ecdh_˘x
, 
≥î_key
,

1494 
POLARSSL_ECDH_THEIRS
 ) ) != 0 )

1496 
	`SSL_DEBUG_RET
–1, ( "ecdh_gë_∑øms" ), 
ªt
 );

1497 –
ªt
 );

1500 if–
	`s¶_check_£rvî_ecdh_∑øms
–
s¶
 ) != 0 )

1502 
	`SSL_DEBUG_MSG
( 1, ( "bad server certificate (ECDH curve)" ) );

1503 –
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE
 );

1506 –
ªt
 );

1507 
	}
}

1509 
	gPOLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
 */

1511 
	$s¶_∑r£_£rvî_key_exch™ge
–
s¶_c⁄ãxt
 *
s¶
 )

1513 
ªt
;

1514 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
 = 
s¶
->
å™sf‹m_√gŸüã
->ciphersuite_info;

1515 *
p
, *
íd
;

1516 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
) || \

1517 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) || \

1518 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
)

1519 
size_t
 
sig_Àn
, 
∑øms_Àn
;

1520 
hash
[64];

1521 
md_ty≥_t
 
md_Æg
 = 
POLARSSL_MD_NONE
;

1522 
size_t
 
hashÀn
;

1523 
pk_ty≥_t
 
pk_Æg
 = 
POLARSSL_PK_NONE
;

1526 
	`SSL_DEBUG_MSG
( 2, ( "=>Öarse server keyÉxchange" ) );

1528 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_RSA_ENABLED
)

1529 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA
 )

1531 
	`SSL_DEBUG_MSG
( 2, ( "<= skipÖarse server keyÉxchange" ) );

1532 
s¶
->
°©e
++;

1535 ((Ë
p
);

1536 ((Ë
íd
);

1539 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_RSA_ENABLED
) || \

1540 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
)

1541 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDH_RSA
 ||

1542 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
 )

1544 if––
ªt
 = 
	`s¶_gë_ecdh_∑øms_‰om_˚π
–
s¶
 ) ) != 0 )

1546 
	`SSL_DEBUG_RET
–1, "s¶_gë_ecdh_∑øms_‰om_˚π", 
ªt
 );

1547 –
ªt
 );

1550 
	`SSL_DEBUG_MSG
( 2, ( "<= skipÖarse server keyÉxchange" ) );

1551 
s¶
->
°©e
++;

1554 ((Ë
p
);

1555 ((Ë
íd
);

1557 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
 */

1559 if––
ªt
 = 
	`s¶_ªad_ªc‹d
–
s¶
 ) ) != 0 )

1561 
	`SSL_DEBUG_RET
–1, "s¶_ªad_ªc‹d", 
ªt
 );

1562 –
ªt
 );

1565 if–
s¶
->
ö_msgty≥
 !
SSL_MSG_HANDSHAKE
 )

1567 
	`SSL_DEBUG_MSG
( 1, ( "bad server keyÉxchange message" ) );

1568 –
POLARSSL_ERR_SSL_UNEXPECTED_MESSAGE
 );

1575 if–
s¶
->
ö_msg
[0] !
SSL_HS_SERVER_KEY_EXCHANGE
 )

1577 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_PSK
 ||

1578 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA_PSK
 )

1580 
s¶
->
ªc‹d_ªad
 = 1;

1581 
exô
;

1584 
	`SSL_DEBUG_MSG
( 1, ( "bad server keyÉxchange message" ) );

1585 –
POLARSSL_ERR_SSL_UNEXPECTED_MESSAGE
 );

1588 
p
 = 
s¶
->
ö_msg
 + 4;

1589 
íd
 = 
s¶
->
ö_msg
 + s¶->
ö_h¶í
;

1590 
	`SSL_DEBUG_BUF
–3, "£rvî keyÉxch™ge", 
p
, 
s¶
->
ö_h¶í
 - 4 );

1592 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

1593 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_PSK
 ||

1594 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA_PSK
 ||

1595 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 ||

1596 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 )

1598 if–
	`s¶_∑r£_£rvî_psk_höt
–
s¶
, &
p
, 
íd
 ) != 0 )

1600 
	`SSL_DEBUG_MSG
( 1, ( "bad server keyÉxchange message" ) );

1601 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE
 );

1606 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_PSK_ENABLED
) || \

1607 
	`deföed
(
POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED
)

1608 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_PSK
 ||

1609 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA_PSK
 )

1613 
POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED
 */

1614 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
) || \

1615 
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
)

1616 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_RSA
 ||

1617 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 )

1619 if–
	`s¶_∑r£_£rvî_dh_∑øms
–
s¶
, &
p
, 
íd
 ) != 0 )

1621 
	`SSL_DEBUG_MSG
( 1, ( "bad server keyÉxchange message" ) );

1622 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE
 );

1627 
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
 */

1628 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) || \

1629 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED
) || \

1630 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
)

1631 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
 ||

1632 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 ||

1633 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
 )

1635 if–
	`s¶_∑r£_£rvî_ecdh_∑øms
–
s¶
, &
p
, 
íd
 ) != 0 )

1637 
	`SSL_DEBUG_MSG
( 1, ( "bad server keyÉxchange message" ) );

1638 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE
 );

1643 
POLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED
 ||

1644 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
 */

1646 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

1647 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

1650 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
) || \

1651 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) || \

1652 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
)

1653 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_RSA
 ||

1654 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
 ||

1655 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
 )

1657 
∑øms_Àn
 = 
p
 - ( 
s¶
->
ö_msg
 + 4 );

1662 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

1663 if–
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_3
 )

1665 if–
	`s¶_∑r£_sig«tuª_Æg‹ôhm
–
s¶
, &
p
, 
íd
,

1666 &
md_Æg
, &
pk_Æg
 ) != 0 )

1668 
	`SSL_DEBUG_MSG
( 1, ( "bad server keyÉxchange message" ) );

1669 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE
 );

1672 if–
pk_Æg
 !
	`s¶_gë_cùhîsuôe_sig_pk_Æg
–
cùhîsuôe_öfo
 ) )

1674 
	`SSL_DEBUG_MSG
( 1, ( "bad server keyÉxchange message" ) );

1675 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE
 );

1680 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1
) || \

1681 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
)

1682 if–
s¶
->
mö‹_vî
 < 
SSL_MINOR_VERSION_3
 )

1684 
pk_Æg
 = 
	`s¶_gë_cùhîsuôe_sig_pk_Æg
–
cùhîsuôe_öfo
 );

1687 if–
pk_Æg
 =
POLARSSL_PK_ECDSA
 && 
md_Æg
 =
POLARSSL_MD_NONE
 )

1688 
md_Æg
 = 
POLARSSL_MD_SHA1
;

1693 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

1694 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

1700 
sig_Àn
 = ( 
p
[0] << 8 ) |Ö[1];

1701 
p
 += 2;

1703 if–
íd
 !
p
 + 
sig_Àn
 )

1705 
	`SSL_DEBUG_MSG
( 1, ( "bad server keyÉxchange message" ) );

1706 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE
 );

1709 
	`SSL_DEBUG_BUF
–3, "sig«tuª", 
p
, 
sig_Àn
 );

1714 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1
) || \

1715 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
)

1716 if–
md_Æg
 =
POLARSSL_MD_NONE
 )

1718 
md5_c⁄ãxt
 
md5
;

1719 
sha1_c⁄ãxt
 
sha1
;

1721 
	`md5_öô
–&
md5
 );

1722 
	`sha1_öô
–&
sha1
 );

1724 
hashÀn
 = 36;

1739 
	`md5_°¨ts
–&
md5
 );

1740 
	`md5_upd©e
–&
md5
, 
s¶
->
h™dshake
->
øndbyãs
, 64 );

1741 
	`md5_upd©e
–&
md5
, 
s¶
->
ö_msg
 + 4, 
∑øms_Àn
 );

1742 
	`md5_föish
–&
md5
, 
hash
 );

1744 
	`sha1_°¨ts
–&
sha1
 );

1745 
	`sha1_upd©e
–&
sha1
, 
s¶
->
h™dshake
->
øndbyãs
, 64 );

1746 
	`sha1_upd©e
–&
sha1
, 
s¶
->
ö_msg
 + 4, 
∑øms_Àn
 );

1747 
	`sha1_föish
–&
sha1
, 
hash
 + 16 );

1749 
	`md5_‰ì
–&
md5
 );

1750 
	`sha1_‰ì
–&
sha1
 );

1754 
POLARSSL_SSL_PROTO_TLS1_1
 */

1755 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_1
) || \

1756 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

1757 if–
md_Æg
 !
POLARSSL_MD_NONE
 )

1759 
md_c⁄ãxt_t
 
˘x
;

1761 
	`md_öô
–&
˘x
 );

1764 
hashÀn
 = 0;

1773 if––
ªt
 = 
	`md_öô_˘x
–&
˘x
,

1774 
	`md_öfo_‰om_ty≥
–
md_Æg
 ) ) ) != 0 )

1776 
	`SSL_DEBUG_RET
–1, "md_öô_˘x", 
ªt
 );

1777 –
ªt
 );

1780 
	`md_°¨ts
–&
˘x
 );

1781 
	`md_upd©e
–&
˘x
, 
s¶
->
h™dshake
->
øndbyãs
, 64 );

1782 
	`md_upd©e
–&
˘x
, 
s¶
->
ö_msg
 + 4, 
∑øms_Àn
 );

1783 
	`md_föish
–&
˘x
, 
hash
 );

1784 
	`md_‰ì
–&
˘x
 );

1788 
POLARSSL_SSL_PROTO_TLS1_2
 */

1790 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

1791 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

1794 
	`SSL_DEBUG_BUF
–3, "∑ømëî†hash", 
hash
, 
hashÀn
 != 0 ? hashlen :

1795 (Ë–
	`md_öfo_‰om_ty≥
–
md_Æg
 ) )->
size
 );

1800 if–! 
	`pk_ˇn_do
–&
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
->
pk
, 
pk_Æg
 ) )

1802 
	`SSL_DEBUG_MSG
( 1, ( "bad server keyÉxchange message" ) );

1803 –
POLARSSL_ERR_SSL_PK_TYPE_MISMATCH
 );

1806 if––
ªt
 = 
	`pk_vîify
–&
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
->
pk
,

1807 
md_Æg
, 
hash
, 
hashÀn
, 
p
, 
sig_Àn
 ) ) != 0 )

1809 
	`SSL_DEBUG_RET
–1, "pk_vîify", 
ªt
 );

1810 –
ªt
 );

1814 
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
 ||

1815 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
 */

1817 
exô
:

1818 
s¶
->
°©e
++;

1820 
	`SSL_DEBUG_MSG
( 2, ( "<=Öarse server keyÉxchange" ) );

1823 
	}
}

1825 #i‡!
deföed
(
POLARSSL_KEY_EXCHANGE_RSA_ENABLED
) && \

1826 !
deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
) && \

1827 !
deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) && \

1828 !
	$deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
)

1829 
	$s¶_∑r£_˚πifiˇã_ªque°
–
s¶_c⁄ãxt
 *
s¶
 )

1831 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
 = 
s¶
->
å™sf‹m_√gŸüã
->ciphersuite_info;

1833 
	`SSL_DEBUG_MSG
( 2, ( "=>Öarse certificateÑequest" ) );

1835 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_PSK
 ||

1836 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA_PSK
 ||

1837 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 ||

1838 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 )

1840 
	`SSL_DEBUG_MSG
( 2, ( "<= skipÖarse certificateÑequest" ) );

1841 
s¶
->
°©e
++;

1845 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

1846 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

1847 
	}
}

1849 
	$s¶_∑r£_˚πifiˇã_ªque°
–
s¶_c⁄ãxt
 *
s¶
 )

1851 
ªt
;

1852 *
buf
, *
p
;

1853 
size_t
 
n
 = 0, 
m
 = 0;

1854 
size_t
 
˚π_ty≥_Àn
 = 0, 
dn_Àn
 = 0;

1855 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
 = 
s¶
->
å™sf‹m_√gŸüã
->ciphersuite_info;

1857 
	`SSL_DEBUG_MSG
( 2, ( "=>Öarse certificateÑequest" ) );

1859 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_PSK
 ||

1860 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA_PSK
 ||

1861 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 ||

1862 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 )

1864 
	`SSL_DEBUG_MSG
( 2, ( "<= skipÖarse certificateÑequest" ) );

1865 
s¶
->
°©e
++;

1881 if–
s¶
->
ªc‹d_ªad
 == 0 )

1883 if––
ªt
 = 
	`s¶_ªad_ªc‹d
–
s¶
 ) ) != 0 )

1885 
	`SSL_DEBUG_RET
–1, "s¶_ªad_ªc‹d", 
ªt
 );

1886 –
ªt
 );

1889 if–
s¶
->
ö_msgty≥
 !
SSL_MSG_HANDSHAKE
 )

1891 
	`SSL_DEBUG_MSG
( 1, ( "bad certificateÑequest message" ) );

1892 –
POLARSSL_ERR_SSL_UNEXPECTED_MESSAGE
 );

1895 
s¶
->
ªc‹d_ªad
 = 1;

1898 
s¶
->
˛õ¡_auth
 = 0;

1899 
s¶
->
°©e
++;

1901 if–
s¶
->
ö_msg
[0] =
SSL_HS_CERTIFICATE_REQUEST
 )

1902 
s¶
->
˛õ¡_auth
++;

1904 
	`SSL_DEBUG_MSG
( 3, ( "got %s certificateÑequest",

1905 
s¶
->
˛õ¡_auth
 ? "a" : "no" ) );

1907 if–
s¶
->
˛õ¡_auth
 == 0 )

1908 
exô
;

1910 
s¶
->
ªc‹d_ªad
 = 0;

1915 
buf
 = 
s¶
->
ö_msg
;

1919 
˚π_ty≥_Àn
 = 
buf
[4];

1920 
n
 = 
˚π_ty≥_Àn
;

1922 if–
s¶
->
ö_h¶í
 < 6 + 
n
 )

1924 
	`SSL_DEBUG_MSG
( 1, ( "bad certificateÑequest message" ) );

1925 –
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE_REQUEST
 );

1928 
p
 = 
buf
 + 5;

1929  
˚π_ty≥_Àn
 > 0 )

1931 #i‡
	`deföed
(
POLARSSL_RSA_C
)

1932 if–*
p
 =
SSL_CERT_TYPE_RSA_SIGN
 &&

1933 
	`pk_ˇn_do
–
	`s¶_own_key
–
s¶
 ), 
POLARSSL_PK_RSA
 ) )

1935 
s¶
->
h™dshake
->
˚π_ty≥
 = 
SSL_CERT_TYPE_RSA_SIGN
;

1940 #i‡
	`deföed
(
POLARSSL_ECDSA_C
)

1941 if–*
p
 =
SSL_CERT_TYPE_ECDSA_SIGN
 &&

1942 
	`pk_ˇn_do
–
	`s¶_own_key
–
s¶
 ), 
POLARSSL_PK_ECDSA
 ) )

1944 
s¶
->
h™dshake
->
˚π_ty≥
 = 
SSL_CERT_TYPE_ECDSA_SIGN
;

1953 
˚π_ty≥_Àn
--;

1954 
p
++;

1957 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

1958 if–
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_3
 )

1962 
size_t
 
sig_Æg_Àn
 = ( ( 
buf
[5 + 
n
] << 8 )

1963 | ( 
buf
[6 + 
n
] ) );

1965 
p
 = 
buf
 + 7 + 
n
;

1966 
m
 += 2;

1967 
n
 +
sig_Æg_Àn
;

1969 if–
s¶
->
ö_h¶í
 < 6 + 
n
 )

1971 
	`SSL_DEBUG_MSG
( 1, ( "bad certificateÑequest message" ) );

1972 –
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE_REQUEST
 );

1979 
dn_Àn
 = ( ( 
buf
[5 + 
m
 + 
n
] << 8 )

1980 | ( 
buf
[6 + 
m
 + 
n
] ) );

1982 
n
 +
dn_Àn
;

1983 if–
s¶
->
ö_h¶í
 !7 + 
m
 + 
n
 )

1985 
	`SSL_DEBUG_MSG
( 1, ( "bad certificateÑequest message" ) );

1986 –
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE_REQUEST
 );

1989 
exô
:

1990 
	`SSL_DEBUG_MSG
( 2, ( "<=Öarse certificateÑequest" ) );

1993 
	}
}

1995 !
	gPOLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
 &&

1996 !
	gPOLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
 &&

1997 !
	gPOLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
 */

1999 
	$s¶_∑r£_£rvî_hñlo_d⁄e
–
s¶_c⁄ãxt
 *
s¶
 )

2001 
ªt
;

2003 
	`SSL_DEBUG_MSG
( 2, ( "=>Öarse server hello done" ) );

2005 if–
s¶
->
ªc‹d_ªad
 == 0 )

2007 if––
ªt
 = 
	`s¶_ªad_ªc‹d
–
s¶
 ) ) != 0 )

2009 
	`SSL_DEBUG_RET
–1, "s¶_ªad_ªc‹d", 
ªt
 );

2010 –
ªt
 );

2013 if–
s¶
->
ö_msgty≥
 !
SSL_MSG_HANDSHAKE
 )

2015 
	`SSL_DEBUG_MSG
( 1, ( "bad server hello done message" ) );

2016 –
POLARSSL_ERR_SSL_UNEXPECTED_MESSAGE
 );

2019 
s¶
->
ªc‹d_ªad
 = 0;

2021 if–
s¶
->
ö_h¶í
 != 4 ||

2022 
s¶
->
ö_msg
[0] !
SSL_HS_SERVER_HELLO_DONE
 )

2024 
	`SSL_DEBUG_MSG
( 1, ( "bad server hello done message" ) );

2025 –
POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO_DONE
 );

2028 
s¶
->
°©e
++;

2030 
	`SSL_DEBUG_MSG
( 2, ( "<=Öarse server hello done" ) );

2033 
	}
}

2035 
	$s¶_wrôe_˛õ¡_key_exch™ge
–
s¶_c⁄ãxt
 *
s¶
 )

2037 
ªt
;

2038 
size_t
 
i
, 
n
;

2039 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
 = 
s¶
->
å™sf‹m_√gŸüã
->ciphersuite_info;

2041 
	`SSL_DEBUG_MSG
( 2, ( "=> write client keyÉxchange" ) );

2043 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
)

2044 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_RSA
 )

2049 
n
 = 
s¶
->
h™dshake
->
dhm_˘x
.
Àn
;

2051 
s¶
->
out_msg
[4] = ()–
n
 >> 8 );

2052 
s¶
->
out_msg
[5] = ()–
n
 );

2053 
i
 = 6;

2055 
ªt
 = 
	`dhm_make_public
–&
s¶
->
h™dshake
->
dhm_˘x
,

2056 (Ë
	`mpi_size
–&
s¶
->
h™dshake
->
dhm_˘x
.
P
 ),

2057 &
s¶
->
out_msg
[
i
], 
n
,

2058 
s¶
->
f_∫g
, s¶->
p_∫g
 );

2059 if–
ªt
 != 0 )

2061 
	`SSL_DEBUG_RET
–1, "dhm_make_public", 
ªt
 );

2062 –
ªt
 );

2065 
	`SSL_DEBUG_MPI
–3, "DHM: X ", &
s¶
->
h™dshake
->
dhm_˘x
.
X
 );

2066 
	`SSL_DEBUG_MPI
–3, "DHM: GX", &
s¶
->
h™dshake
->
dhm_˘x
.
GX
 );

2068 
s¶
->
h™dshake
->
pm¶í
 = 
POLARSSL_PREMASTER_SIZE
;

2070 if––
ªt
 = 
	`dhm_ˇlc_£¸ë
–&
s¶
->
h™dshake
->
dhm_˘x
,

2071 
s¶
->
h™dshake
->
¥ema°î
,

2072 &
s¶
->
h™dshake
->
pm¶í
,

2073 
s¶
->
f_∫g
, s¶->
p_∫g
 ) ) != 0 )

2075 
	`SSL_DEBUG_RET
–1, "dhm_ˇlc_£¸ë", 
ªt
 );

2076 –
ªt
 );

2079 
	`SSL_DEBUG_MPI
–3, "DHM: K ", &
s¶
->
h™dshake
->
dhm_˘x
.
K
 );

2083 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) || \

2084 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
) || \

2085 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_RSA_ENABLED
) || \

2086 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
)

2087 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
 ||

2088 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
 ||

2089 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDH_RSA
 ||

2090 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
 )

2095 
i
 = 4;

2097 
ªt
 = 
	`ecdh_make_public
–&
s¶
->
h™dshake
->
ecdh_˘x
,

2098 &
n
,

2099 &
s¶
->
out_msg
[
i
], 1000,

2100 
s¶
->
f_∫g
, s¶->
p_∫g
 );

2101 if–
ªt
 != 0 )

2103 
	`SSL_DEBUG_RET
–1, "ecdh_make_public", 
ªt
 );

2104 –
ªt
 );

2107 
	`SSL_DEBUG_ECP
–3, "ECDH: Q", &
s¶
->
h™dshake
->
ecdh_˘x
.
Q
 );

2109 if––
ªt
 = 
	`ecdh_ˇlc_£¸ë
–&
s¶
->
h™dshake
->
ecdh_˘x
,

2110 &
s¶
->
h™dshake
->
pm¶í
,

2111 
s¶
->
h™dshake
->
¥ema°î
,

2112 
POLARSSL_MPI_MAX_SIZE
,

2113 
s¶
->
f_∫g
, s¶->
p_∫g
 ) ) != 0 )

2115 
	`SSL_DEBUG_RET
–1, "ecdh_ˇlc_£¸ë", 
ªt
 );

2116 –
ªt
 );

2119 
	`SSL_DEBUG_MPI
–3, "ECDH: z", &
s¶
->
h™dshake
->
ecdh_˘x
.
z
 );

2123 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
 ||

2124 
POLARSSL_KEY_EXCHANGE_ECDH_RSA_ENABLED
 ||

2125 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
 */

2126 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

2127 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_PSK
 ||

2128 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA_PSK
 ||

2129 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 ||

2130 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 )

2135 if–
s¶
->
psk
 =
NULL
 || s¶->
psk_idítôy
 == NULL )

2136 –
POLARSSL_ERR_SSL_PRIVATE_KEY_REQUIRED
 );

2138 
i
 = 4;

2139 
n
 = 
s¶
->
psk_idítôy_Àn
;

2140 
s¶
->
out_msg
[
i
++] = ()–
n
 >> 8 );

2141 
s¶
->
out_msg
[
i
++] = ()–
n
 );

2143 
	`mem˝y
–
s¶
->
out_msg
 + 
i
, s¶->
psk_idítôy
, s¶->
psk_idítôy_Àn
 );

2144 
i
 +
s¶
->
psk_idítôy_Àn
;

2146 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_PSK_ENABLED
)

2147 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_PSK
 )

2149 
n
 = 0;

2153 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED
)

2154 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA_PSK
 )

2156 if––
ªt
 = 
	`s¶_wrôe_í¸y±ed_pms
–
s¶
, 
i
, &
n
, 2 ) ) != 0 )

2157 –
ªt
 );

2161 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
)

2162 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 )

2167 
n
 = 
s¶
->
h™dshake
->
dhm_˘x
.
Àn
;

2168 
s¶
->
out_msg
[
i
++] = ()–
n
 >> 8 );

2169 
s¶
->
out_msg
[
i
++] = ()–
n
 );

2171 
ªt
 = 
	`dhm_make_public
–&
s¶
->
h™dshake
->
dhm_˘x
,

2172 (Ë
	`mpi_size
–&
s¶
->
h™dshake
->
dhm_˘x
.
P
 ),

2173 &
s¶
->
out_msg
[
i
], 
n
,

2174 
s¶
->
f_∫g
, s¶->
p_∫g
 );

2175 if–
ªt
 != 0 )

2177 
	`SSL_DEBUG_RET
–1, "dhm_make_public", 
ªt
 );

2178 –
ªt
 );

2183 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED
)

2184 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 )

2189 
ªt
 = 
	`ecdh_make_public
–&
s¶
->
h™dshake
->
ecdh_˘x
, &
n
,

2190 &
s¶
->
out_msg
[
i
], 
SSL_MAX_CONTENT_LEN
 - i,

2191 
s¶
->
f_∫g
, s¶->
p_∫g
 );

2192 if–
ªt
 != 0 )

2194 
	`SSL_DEBUG_RET
–1, "ecdh_make_public", 
ªt
 );

2195 –
ªt
 );

2198 
	`SSL_DEBUG_ECP
–3, "ECDH: Q", &
s¶
->
h™dshake
->
ecdh_˘x
.
Q
 );

2203 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

2204 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

2207 if––
ªt
 = 
	`s¶_psk_dîive_¥ema°î
–
s¶
,

2208 
cùhîsuôe_öfo
->
key_exch™ge
 ) ) != 0 )

2210 
	`SSL_DEBUG_RET
–1, "s¶_psk_dîive_¥ema°î", 
ªt
 );

2211 –
ªt
 );

2216 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_RSA_ENABLED
)

2217 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA
 )

2219 
i
 = 4;

2220 if––
ªt
 = 
	`s¶_wrôe_í¸y±ed_pms
–
s¶
, 
i
, &
n
, 0 ) ) != 0 )

2221 –
ªt
 );

2226 ((Ë
cùhîsuôe_öfo
);

2227 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

2228 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

2231 if––
ªt
 = 
	`s¶_dîive_keys
–
s¶
 ) ) != 0 )

2233 
	`SSL_DEBUG_RET
–1, "s¶_dîive_keys", 
ªt
 );

2234 –
ªt
 );

2237 
s¶
->
out_msgÀn
 = 
i
 + 
n
;

2238 
s¶
->
out_msgty≥
 = 
SSL_MSG_HANDSHAKE
;

2239 
s¶
->
out_msg
[0] = 
SSL_HS_CLIENT_KEY_EXCHANGE
;

2241 
s¶
->
°©e
++;

2243 if––
ªt
 = 
	`s¶_wrôe_ªc‹d
–
s¶
 ) ) != 0 )

2245 
	`SSL_DEBUG_RET
–1, "s¶_wrôe_ªc‹d", 
ªt
 );

2246 –
ªt
 );

2249 
	`SSL_DEBUG_MSG
( 2, ( "<= write client keyÉxchange" ) );

2252 
	}
}

2254 #i‡!
deföed
(
POLARSSL_KEY_EXCHANGE_RSA_ENABLED
) && \

2255 !
deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
) && \

2256 !
deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) && \

2257 !
	$deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
)

2258 
	$s¶_wrôe_˚πifiˇã_vîify
–
s¶_c⁄ãxt
 *
s¶
 )

2260 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
 = 
s¶
->
å™sf‹m_√gŸüã
->ciphersuite_info;

2262 
	`SSL_DEBUG_MSG
( 2, ( "=> write certificate verify" ) );

2264 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_PSK
 ||

2265 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA_PSK
 ||

2266 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 ||

2267 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 )

2269 
	`SSL_DEBUG_MSG
( 2, ( "<= skip write certificate verify" ) );

2270 
s¶
->
°©e
++;

2274 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

2275 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

2276 
	}
}

2278 
	$s¶_wrôe_˚πifiˇã_vîify
–
s¶_c⁄ãxt
 *
s¶
 )

2280 
ªt
 = 
POLARSSL_ERR_SSL_FEATURE_UNAVAILABLE
;

2281 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
 = 
s¶
->
å™sf‹m_√gŸüã
->ciphersuite_info;

2282 
size_t
 
n
 = 0, 
off£t
 = 0;

2283 
hash
[48];

2284 *
hash_°¨t
 = 
hash
;

2285 
md_ty≥_t
 
md_Æg
 = 
POLARSSL_MD_NONE
;

2286 
hashÀn
;

2288 
	`SSL_DEBUG_MSG
( 2, ( "=> write certificate verify" ) );

2290 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_PSK
 ||

2291 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA_PSK
 ||

2292 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 ||

2293 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 )

2295 
	`SSL_DEBUG_MSG
( 2, ( "<= skip write certificate verify" ) );

2296 
s¶
->
°©e
++;

2300 if–
s¶
->
˛õ¡_auth
 =0 || 
	`s¶_own_˚π
–s¶ ) =
NULL
 )

2302 
	`SSL_DEBUG_MSG
( 2, ( "<= skip write certificate verify" ) );

2303 
s¶
->
°©e
++;

2307 if–
	`s¶_own_key
–
s¶
 ) =
NULL
 )

2309 
	`SSL_DEBUG_MSG
( 1, ( "gotÇoÖrivate key" ) );

2310 –
POLARSSL_ERR_SSL_PRIVATE_KEY_REQUIRED
 );

2316 
s¶
->
h™dshake
->
	`ˇlc_vîify
–s¶, 
hash
 );

2318 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1
) || \

2319 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
)

2320 if–
s¶
->
mö‹_vî
 !
SSL_MINOR_VERSION_3
 )

2334 
hashÀn
 = 36;

2335 
md_Æg
 = 
POLARSSL_MD_NONE
;

2340 if–
	`pk_ˇn_do
–
	`s¶_own_key
–
s¶
 ), 
POLARSSL_PK_ECDSA
 ) )

2342 
hash_°¨t
 += 16;

2343 
hashÀn
 -= 16;

2344 
md_Æg
 = 
POLARSSL_MD_SHA1
;

2349 
POLARSSL_SSL_PROTO_TLS1_1
 */

2350 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

2351 if–
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_3
 )

2368 if–
s¶
->
å™sf‹m_√gŸüã
->
cùhîsuôe_öfo
->
mac
 ==

2369 
POLARSSL_MD_SHA384
 )

2371 
md_Æg
 = 
POLARSSL_MD_SHA384
;

2372 
s¶
->
out_msg
[4] = 
SSL_HASH_SHA384
;

2376 
md_Æg
 = 
POLARSSL_MD_SHA256
;

2377 
s¶
->
out_msg
[4] = 
SSL_HASH_SHA256
;

2379 
s¶
->
out_msg
[5] = 
	`s¶_sig_‰om_pk
–
	`s¶_own_key
( ssl ) );

2382 
hashÀn
 = 0;

2383 
off£t
 = 2;

2388 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

2389 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

2392 if––
ªt
 = 
	`pk_sign
–
	`s¶_own_key
–
s¶
 ), 
md_Æg
, 
hash_°¨t
, 
hashÀn
,

2393 
s¶
->
out_msg
 + 6 + 
off£t
, &
n
,

2394 
s¶
->
f_∫g
, s¶->
p_∫g
 ) ) != 0 )

2396 
	`SSL_DEBUG_RET
–1, "pk_sign", 
ªt
 );

2397 –
ªt
 );

2400 
s¶
->
out_msg
[4 + 
off£t
] = ()–
n
 >> 8 );

2401 
s¶
->
out_msg
[5 + 
off£t
] = ()–
n
 );

2403 
s¶
->
out_msgÀn
 = 6 + 
n
 + 
off£t
;

2404 
s¶
->
out_msgty≥
 = 
SSL_MSG_HANDSHAKE
;

2405 
s¶
->
out_msg
[0] = 
SSL_HS_CERTIFICATE_VERIFY
;

2407 
s¶
->
°©e
++;

2409 if––
ªt
 = 
	`s¶_wrôe_ªc‹d
–
s¶
 ) ) != 0 )

2411 
	`SSL_DEBUG_RET
–1, "s¶_wrôe_ªc‹d", 
ªt
 );

2412 –
ªt
 );

2415 
	`SSL_DEBUG_MSG
( 2, ( "<= write certificate verify" ) );

2417 –
ªt
 );

2418 
	}
}

2420 !
	gPOLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
 &&

2421 !
	gPOLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
 */

2423 #i‡
deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

2424 
	$s¶_∑r£_√w_£ssi⁄_tickë
–
s¶_c⁄ãxt
 *
s¶
 )

2426 
ªt
;

2427 
uöt32_t
 
li„time
;

2428 
size_t
 
tickë_Àn
;

2429 *
tickë
;

2431 
	`SSL_DEBUG_MSG
( 2, ( "=>ÖarseÇew sessionÅicket" ) );

2433 if––
ªt
 = 
	`s¶_ªad_ªc‹d
–
s¶
 ) ) != 0 )

2435 
	`SSL_DEBUG_RET
–1, "s¶_ªad_ªc‹d", 
ªt
 );

2436 –
ªt
 );

2439 if–
s¶
->
ö_msgty≥
 !
SSL_MSG_HANDSHAKE
 )

2441 
	`SSL_DEBUG_MSG
( 1, ( "badÇew sessionÅicket message" ) );

2442 –
POLARSSL_ERR_SSL_UNEXPECTED_MESSAGE
 );

2457 if–
s¶
->
ö_msg
[0] !
SSL_HS_NEW_SESSION_TICKET
 ||

2458 
s¶
->
ö_h¶í
 < 10 )

2460 
	`SSL_DEBUG_MSG
( 1, ( "badÇew sessionÅicket message" ) );

2461 –
POLARSSL_ERR_SSL_BAD_HS_NEW_SESSION_TICKET
 );

2464 
li„time
 = ( 
s¶
->
ö_msg
[4] << 24 ) | ( ssl->in_msg[5] << 16 ) |

2465 –
s¶
->
ö_msg
[6] << 8 ) | ( ssl->in_msg[7] );

2467 
tickë_Àn
 = ( 
s¶
->
ö_msg
[8] << 8 ) | ( ssl->in_msg[9] );

2469 if–
tickë_Àn
 + 10 !
s¶
->
ö_h¶í
 )

2471 
	`SSL_DEBUG_MSG
( 1, ( "badÇew sessionÅicket message" ) );

2472 –
POLARSSL_ERR_SSL_BAD_HS_NEW_SESSION_TICKET
 );

2475 
	`SSL_DEBUG_MSG
–3, ( "tickëÜígth: %d", 
tickë_Àn
 ) );

2478 
s¶
->
h™dshake
->
√w_£ssi⁄_tickë
 = 0;

2484 if–
tickë_Àn
 == 0 )

2487 
	`pﬁ¨s¶_zîoize
–
s¶
->
£ssi⁄_√gŸüã
->
tickë
,

2488 
s¶
->
£ssi⁄_√gŸüã
->
tickë_Àn
 );

2489 
	`pﬁ¨s¶_‰ì
–
s¶
->
£ssi⁄_√gŸüã
->
tickë
 );

2490 
s¶
->
£ssi⁄_√gŸüã
->
tickë
 = 
NULL
;

2491 
s¶
->
£ssi⁄_√gŸüã
->
tickë_Àn
 = 0;

2493 if––
tickë
 = 
	`pﬁ¨s¶_mÆloc
–
tickë_Àn
 ) ) =
NULL
 )

2495 
	`SSL_DEBUG_MSG
( 1, ( "ticket malloc failed" ) );

2496 –
POLARSSL_ERR_SSL_MALLOC_FAILED
 );

2499 
	`mem˝y
–
tickë
, 
s¶
->
ö_msg
 + 10, 
tickë_Àn
 );

2501 
s¶
->
£ssi⁄_√gŸüã
->
tickë
 =Åicket;

2502 
s¶
->
£ssi⁄_√gŸüã
->
tickë_Àn
 =Åicket_len;

2503 
s¶
->
£ssi⁄_√gŸüã
->
tickë_li„time
 = 
li„time
;

2510 
	`SSL_DEBUG_MSG
( 3, ( "ticket in use, discarding session id" ) );

2511 
s¶
->
£ssi⁄_√gŸüã
->
Àngth
 = 0;

2513 
	`SSL_DEBUG_MSG
( 2, ( "<=ÖarseÇew sessionÅicket" ) );

2516 
	}
}

2522 
	$s¶_h™dshake_˛õ¡_°ï
–
s¶_c⁄ãxt
 *
s¶
 )

2524 
ªt
 = 0;

2526 if–
s¶
->
°©e
 =
SSL_HANDSHAKE_OVER
 )

2527 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

2529 
	`SSL_DEBUG_MSG
–2, ( "˛õ¡ sèã: %d", 
s¶
->
°©e
 ) );

2531 if––
ªt
 = 
	`s¶_Êush_ouçut
–
s¶
 ) ) != 0 )

2532 –
ªt
 );

2534  
s¶
->
°©e
 )

2536 
SSL_HELLO_REQUEST
:

2537 
s¶
->
°©e
 = 
SSL_CLIENT_HELLO
;

2543 
SSL_CLIENT_HELLO
:

2544 
ªt
 = 
	`s¶_wrôe_˛õ¡_hñlo
–
s¶
 );

2554 
SSL_SERVER_HELLO
:

2555 
ªt
 = 
	`s¶_∑r£_£rvî_hñlo
–
s¶
 );

2558 
SSL_SERVER_CERTIFICATE
:

2559 
ªt
 = 
	`s¶_∑r£_˚πifiˇã
–
s¶
 );

2562 
SSL_SERVER_KEY_EXCHANGE
:

2563 
ªt
 = 
	`s¶_∑r£_£rvî_key_exch™ge
–
s¶
 );

2566 
SSL_CERTIFICATE_REQUEST
:

2567 
ªt
 = 
	`s¶_∑r£_˚πifiˇã_ªque°
–
s¶
 );

2570 
SSL_SERVER_HELLO_DONE
:

2571 
ªt
 = 
	`s¶_∑r£_£rvî_hñlo_d⁄e
–
s¶
 );

2581 
SSL_CLIENT_CERTIFICATE
:

2582 
ªt
 = 
	`s¶_wrôe_˚πifiˇã
–
s¶
 );

2585 
SSL_CLIENT_KEY_EXCHANGE
:

2586 
ªt
 = 
	`s¶_wrôe_˛õ¡_key_exch™ge
–
s¶
 );

2589 
SSL_CERTIFICATE_VERIFY
:

2590 
ªt
 = 
	`s¶_wrôe_˚πifiˇã_vîify
–
s¶
 );

2593 
SSL_CLIENT_CHANGE_CIPHER_SPEC
:

2594 
ªt
 = 
	`s¶_wrôe_ch™ge_cùhî_•ec
–
s¶
 );

2597 
SSL_CLIENT_FINISHED
:

2598 
ªt
 = 
	`s¶_wrôe_föished
–
s¶
 );

2606 
SSL_SERVER_CHANGE_CIPHER_SPEC
:

2607 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

2608 if–
s¶
->
h™dshake
->
√w_£ssi⁄_tickë
 != 0 )

2609 
ªt
 = 
	`s¶_∑r£_√w_£ssi⁄_tickë
–
s¶
 );

2612 
ªt
 = 
	`s¶_∑r£_ch™ge_cùhî_•ec
–
s¶
 );

2615 
SSL_SERVER_FINISHED
:

2616 
ªt
 = 
	`s¶_∑r£_föished
–
s¶
 );

2619 
SSL_FLUSH_BUFFERS
:

2620 
	`SSL_DEBUG_MSG
( 2, ( "handshake: done" ) );

2621 
s¶
->
°©e
 = 
SSL_HANDSHAKE_WRAPUP
;

2624 
SSL_HANDSHAKE_WRAPUP
:

2625 
	`s¶_h™dshake_wøpup
–
s¶
 );

2629 
	`SSL_DEBUG_MSG
–1, ( "övÆid sèã %d", 
s¶
->
°©e
 ) );

2630 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

2633 –
ªt
 );

2634 
	}
}

	@polarssl/library/ssl_srv.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_SSL_SRV_C
)

34 
	~"pﬁ¨s¶/debug.h
"

35 
	~"pﬁ¨s¶/s¶.h
"

36 #i‡
deföed
(
POLARSSL_ECP_C
)

37 
	~"pﬁ¨s¶/e˝.h
"

40 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

41 
	~"pﬁ¨s¶/∂©f‹m.h
"

43 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

44 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

47 
	~<°dlib.h
>

48 
	~<°dio.h
>

50 #i‡
deföed
(
POLARSSL_HAVE_TIME
)

51 
	~<time.h
>

54 #i‡
deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

56 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

57 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

58 
	}
}

68 
	$s¶_ßve_£ssi⁄
–c⁄° 
s¶_£ssi⁄
 *
£ssi⁄
,

69 *
buf
, 
size_t
 
buf_Àn
,

70 
size_t
 *
ﬁí
 )

72 *
p
 = 
buf
;

73 
size_t
 
À·
 = 
buf_Àn
;

74 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

75 
size_t
 
˚π_Àn
;

78 if–
À·
 < –
s¶_£ssi⁄
 ) )

81 
	`mem˝y
–
p
, 
£ssi⁄
, –
s¶_£ssi⁄
 ) );

82 
p
 +–
s¶_£ssi⁄
 );

83 
À·
 -–
s¶_£ssi⁄
 );

85 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

86 if–
£ssi⁄
->
≥î_˚π
 =
NULL
 )

87 
˚π_Àn
 = 0;

89 
˚π_Àn
 = 
£ssi⁄
->
≥î_˚π
->
øw
.
Àn
;

91 if–
À·
 < 3 + 
˚π_Àn
 )

94 *
p
++ = ()–
˚π_Àn
 >> 16 & 0xFF );

95 *
p
++ = ()–
˚π_Àn
 >> 8 & 0xFF );

96 *
p
++ = ()–
˚π_Àn
 & 0xFF );

98 if–
£ssi⁄
->
≥î_˚π
 !
NULL
 )

99 
	`mem˝y
–
p
, 
£ssi⁄
->
≥î_˚π
->
øw
.p, 
˚π_Àn
 );

101 
p
 +
˚π_Àn
;

104 *
ﬁí
 = 
p
 - 
buf
;

107 
	}
}

112 
	$s¶_lﬂd_£ssi⁄
–
s¶_£ssi⁄
 *
£ssi⁄
,

113 c⁄° *
buf
, 
size_t
 
Àn
 )

115 c⁄° *
p
 = 
buf
;

116 c⁄° * c⁄° 
íd
 = 
buf
 + 
Àn
;

117 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

118 
size_t
 
˚π_Àn
;

121 if–
p
 + –
s¶_£ssi⁄
 ) > 
íd
 )

122 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

124 
	`mem˝y
–
£ssi⁄
, 
p
, –
s¶_£ssi⁄
 ) );

125 
p
 +–
s¶_£ssi⁄
 );

127 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

128 if–
p
 + 3 > 
íd
 )

129 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

131 
˚π_Àn
 = ( 
p
[0] << 16 ) | (Ö[1] << 8 ) |Ö[2];

132 
p
 += 3;

134 if–
˚π_Àn
 == 0 )

136 
£ssi⁄
->
≥î_˚π
 = 
NULL
;

140 
ªt
;

142 if–
p
 + 
˚π_Àn
 > 
íd
 )

143 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

145 
£ssi⁄
->
≥î_˚π
 = 
	`pﬁ¨s¶_mÆloc
––
x509_¸t
 ) );

147 if–
£ssi⁄
->
≥î_˚π
 =
NULL
 )

148 –
POLARSSL_ERR_SSL_MALLOC_FAILED
 );

150 
	`x509_¸t_öô
–
£ssi⁄
->
≥î_˚π
 );

152 if––
ªt
 = 
	`x509_¸t_∑r£_dî
–
£ssi⁄
->
≥î_˚π
,

153 
p
, 
˚π_Àn
 ) ) != 0 )

155 
	`x509_¸t_‰ì
–
£ssi⁄
->
≥î_˚π
 );

156 
	`pﬁ¨s¶_‰ì
–
£ssi⁄
->
≥î_˚π
 );

157 
£ssi⁄
->
≥î_˚π
 = 
NULL
;

158 –
ªt
 );

161 
p
 +
˚π_Àn
;

165 if–
p
 !
íd
 )

166 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

169 
	}
}

183 
	$s¶_wrôe_tickë
–
s¶_c⁄ãxt
 *
s¶
, 
size_t
 *
éí
 )

185 
ªt
;

186 * c⁄° 
°¨t
 = 
s¶
->
out_msg
 + 10;

187 *
p
 = 
°¨t
;

188 *
°©e
;

189 
iv
[16];

190 
size_t
 
˛ór_Àn
, 
íc_Àn
, 
∑d_Àn
, 
i
;

192 *
éí
 = 0;

194 if–
s¶
->
tickë_keys
 =
NULL
 )

195 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

198 
	`mem˝y
–
p
, 
s¶
->
tickë_keys
->
key_«me
, 16 );

199 
p
 += 16;

202 if––
ªt
 = 
s¶
->
	`f_∫g
–s¶->
p_∫g
, 
p
, 16 ) ) != 0 )

203 –
ªt
 );

204 
	`mem˝y
–
iv
, 
p
, 16 );

205 
p
 += 16;

213 
°©e
 = 
p
 + 2;

214 if–
	`s¶_ßve_£ssi⁄
–
s¶
->
£ssi⁄_√gŸüã
, 
°©e
,

215 
SSL_MAX_CONTENT_LEN
 - ( 
°©e
 - 
s¶
->
out_˘r
 ) - 48,

216 &
˛ór_Àn
 ) != 0 )

218 –
POLARSSL_ERR_SSL_CERTIFICATE_TOO_LARGE
 );

220 
	`SSL_DEBUG_BUF
–3, "£ssi⁄Åickë cÀ¨ãxt", 
°©e
, 
˛ór_Àn
 );

223 
∑d_Àn
 = 16 - 
˛ór_Àn
 % 16;

224 
íc_Àn
 = 
˛ór_Àn
 + 
∑d_Àn
;

225  
i
 = 
˛ór_Àn
; i < 
íc_Àn
; i++ )

226 
°©e
[
i
] = (Ë
∑d_Àn
;

229 if––
ªt
 = 
	`´s_¸y±_cbc
–&
s¶
->
tickë_keys
->
íc
, 
AES_ENCRYPT
,

230 
íc_Àn
, 
iv
, 
°©e
, state ) ) != 0 )

232 –
ªt
 );

236 *
p
++ = ()––
íc_Àn
 >> 8 ) & 0xFF );

237 *
p
++ = ()––
íc_Àn
 ) & 0xFF );

238 
p
 = 
°©e
 + 
íc_Àn
;

241 
	`sha256_hmac
–
s¶
->
tickë_keys
->
mac_key
, 16, 
°¨t
, 
p
 - start,Ö, 0 );

242 
p
 += 32;

244 *
éí
 = 
p
 - 
°¨t
;

246 
	`SSL_DEBUG_BUF
–3, "£ssi⁄Åickë såu˘uª", 
°¨t
, *
éí
 );

249 
	}
}

254 
	$s¶_∑r£_tickë
–
s¶_c⁄ãxt
 *
s¶
,

255 *
buf
,

256 
size_t
 
Àn
 )

258 
ªt
;

259 
s¶_£ssi⁄
 
£ssi⁄
;

260 *
key_«me
 = 
buf
;

261 *
iv
 = 
buf
 + 16;

262 *
íc_Àn_p
 = 
iv
 + 16;

263 *
tickë
 = 
íc_Àn_p
 + 2;

264 *
mac
;

265 
compuãd_mac
[32];

266 
size_t
 
íc_Àn
, 
˛ór_Àn
, 
i
;

267 
∑d_Àn
, 
diff
;

269 
	`SSL_DEBUG_BUF
–3, "£ssi⁄Åickë såu˘uª", 
buf
, 
Àn
 );

271 if–
Àn
 < 34 || 
s¶
->
tickë_keys
 =
NULL
 )

272 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

274 
íc_Àn
 = ( 
íc_Àn_p
[0] << 8 ) |Énc_len_p[1];

275 
mac
 = 
tickë
 + 
íc_Àn
;

277 if–
Àn
 !
íc_Àn
 + 66 )

278 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

281 
diff
 = 0;

282  
i
 = 0; i < 16; i++ )

283 
diff
 |
key_«me
[
i
] ^ 
s¶
->
tickë_keys
->key_name[i];

287 
	`sha256_hmac
–
s¶
->
tickë_keys
->
mac_key
, 16, 
buf
, 
Àn
 - 32,

288 
compuãd_mac
, 0 );

290  
i
 = 0; i < 32; i++ )

291 
diff
 |
mac
[
i
] ^ 
compuãd_mac
[i];

295 if–
diff
 != 0 )

296 –
POLARSSL_ERR_SSL_INVALID_MAC
 );

299 if––
ªt
 = 
	`´s_¸y±_cbc
–&
s¶
->
tickë_keys
->
dec
, 
AES_DECRYPT
,

300 
íc_Àn
, 
iv
, 
tickë
,Åicket ) ) != 0 )

302 –
ªt
 );

306 
∑d_Àn
 = 
tickë
[
íc_Àn
 - 1];

308 
ªt
 = 0;

309  
i
 = 2; i < 
∑d_Àn
; i++ )

310 if–
tickë
[
íc_Àn
 - 
i
] !
∑d_Àn
 )

311 
ªt
 = 
POLARSSL_ERR_SSL_BAD_INPUT_DATA
;

312 if–
ªt
 != 0 )

313 –
ªt
 );

315 
˛ór_Àn
 = 
íc_Àn
 - 
∑d_Àn
;

317 
	`SSL_DEBUG_BUF
–3, "£ssi⁄Åickë cÀ¨ãxt", 
tickë
, 
˛ór_Àn
 );

320 if––
ªt
 = 
	`s¶_lﬂd_£ssi⁄
–&
£ssi⁄
, 
tickë
, 
˛ór_Àn
 ) ) != 0 )

322 
	`SSL_DEBUG_MSG
( 1, ( "failedÅoÖarseÅicket content" ) );

323 
	`s¶_£ssi⁄_‰ì
–&
£ssi⁄
 );

324 –
ªt
 );

327 #i‡
	`deföed
(
POLARSSL_HAVE_TIME
)

329 if–(Ë–
	`time
–
NULL
Ë- 
£ssi⁄
.
°¨t
 ) > 
s¶
->
tickë_li„time
 )

331 
	`SSL_DEBUG_MSG
( 1, ( "sessionÅicketÉxpired" ) );

332 
	`s¶_£ssi⁄_‰ì
–&
£ssi⁄
 );

333 –
POLARSSL_ERR_SSL_SESSION_TICKET_EXPIRED
 );

341 
£ssi⁄
.
Àngth
 = 
s¶
->
£ssi⁄_√gŸüã
->length;

342 
	`mem˝y
–&
£ssi⁄
.
id
, 
s¶
->
£ssi⁄_√gŸüã
->id, sessi⁄.
Àngth
 );

344 
	`s¶_£ssi⁄_‰ì
–
s¶
->
£ssi⁄_√gŸüã
 );

345 
	`mem˝y
–
s¶
->
£ssi⁄_√gŸüã
, &
£ssi⁄
, –
s¶_£ssi⁄
 ) );

348 
	`pﬁ¨s¶_zîoize
–&
£ssi⁄
, –
s¶_£ssi⁄
 ) );

351 
	}
}

354 #i‡
deföed
(
POLARSSL_SSL_SERVER_NAME_INDICATION
)

359 
	$s¶_¢i_wøµî
–
s¶_c⁄ãxt
 *
s¶
,

360 c⁄° * 
«me
, 
size_t
 
Àn
 )

362 
ªt
;

363 
s¶_key_˚π
 *
key_˚π_‹i
 = 
s¶
->
key_˚π
;

365 
s¶
->
key_˚π
 = 
NULL
;

366 
ªt
 = 
s¶
->
	`f_¢i
–s¶->
p_¢i
, s¶, 
«me
, 
Àn
 );

367 
s¶
->
h™dshake
->
¢i_key_˚π
 = s¶->
key_˚π
;

369 
s¶
->
key_˚π
 = 
key_˚π_‹i
;

371 –
ªt
 );

372 
	}
}

374 
	$s¶_∑r£_£rvî«me_ext
–
s¶_c⁄ãxt
 *
s¶
,

375 c⁄° *
buf
,

376 
size_t
 
Àn
 )

378 
ªt
;

379 
size_t
 
£rvî«me_li°_size
, 
ho°«me_Àn
;

380 c⁄° *
p
;

382 
	`SSL_DEBUG_MSG
( 3, ( "parse ServerNameÉxtension" ) );

384 
£rvî«me_li°_size
 = ( ( 
buf
[0] << 8 ) | ( buf[1] ) );

385 if–
£rvî«me_li°_size
 + 2 !
Àn
 )

387 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

388 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

391 
p
 = 
buf
 + 2;

392  
£rvî«me_li°_size
 > 0 )

394 
ho°«me_Àn
 = ( ( 
p
[1] << 8 ) |Ö[2] );

395 if–
ho°«me_Àn
 + 3 > 
£rvî«me_li°_size
 )

397 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

398 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

401 if–
p
[0] =
TLS_EXT_SERVERNAME_HOSTNAME
 )

403 
ªt
 = 
	`s¶_¢i_wøµî
–
s¶
, 
p
 + 3, 
ho°«me_Àn
 );

404 if–
ªt
 != 0 )

406 
	`SSL_DEBUG_RET
–1, "s¶_¢i_wøµî", 
ªt
 );

407 
	`s¶_£nd_Æît_mesßge
–
s¶
, 
SSL_ALERT_LEVEL_FATAL
,

408 
SSL_ALERT_MSG_UNRECOGNIZED_NAME
 );

409 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

414 
£rvî«me_li°_size
 -
ho°«me_Àn
 + 3;

415 
p
 +
ho°«me_Àn
 + 3;

418 if–
£rvî«me_li°_size
 != 0 )

420 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

421 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

425 
	}
}

428 
	$s¶_∑r£_ª√gŸüti⁄_öfo
–
s¶_c⁄ãxt
 *
s¶
,

429 c⁄° *
buf
,

430 
size_t
 
Àn
 )

432 
ªt
;

434 if–
s¶
->
ª√gŸüti⁄
 =
SSL_INITIAL_HANDSHAKE
 )

436 if–
Àn
 !1 || 
buf
[0] != 0x0 )

438 
	`SSL_DEBUG_MSG
( 1, ( "non-zeroÜengthÑenegotiated connection field" ) );

440 if––
ªt
 = 
	`s¶_£nd_Áèl_h™dshake_Áûuª
–
s¶
 ) ) != 0 )

441 –
ªt
 );

443 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

446 
s¶
->
£cuª_ª√gŸüti⁄
 = 
SSL_SECURE_RENEGOTIATION
;

451 if–
Àn
 !1 + 
s¶
->
vîify_d©a_Àn
 ||

452 
buf
[0] !
s¶
->
vîify_d©a_Àn
 ||

453 
	`ß„r_memcmp
–
buf
 + 1, 
s¶
->
≥î_vîify_d©a
,

454 
s¶
->
vîify_d©a_Àn
 ) != 0 )

456 
	`SSL_DEBUG_MSG
( 1, ( "non-matchingÑenegotiated connection field" ) );

458 if––
ªt
 = 
	`s¶_£nd_Áèl_h™dshake_Áûuª
–
s¶
 ) ) != 0 )

459 –
ªt
 );

461 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

466 
	}
}

468 #i‡
deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

469 
	$s¶_∑r£_sig«tuª_Æg‹ôhms_ext
–
s¶_c⁄ãxt
 *
s¶
,

470 c⁄° *
buf
,

471 
size_t
 
Àn
 )

473 
size_t
 
sig_Æg_li°_size
;

474 c⁄° *
p
;

475 c⁄° *
íd
 = 
buf
 + 
Àn
;

476 c⁄° *
md_cur
;

479 
sig_Æg_li°_size
 = ( ( 
buf
[0] << 8 ) | ( buf[1] ) );

480 if–
sig_Æg_li°_size
 + 2 !
Àn
 ||

481 
sig_Æg_li°_size
 % 2 != 0 )

483 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

484 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

493  
md_cur
 = 
	`md_li°
(); *md_cu∏!
POLARSSL_MD_NONE
; md_cur++ ) {

494  
p
 = 
buf
 + 2;Ö < 
íd
;Ö += 2 ) {

495 if–*
md_cur
 =(Ë
	`s¶_md_Æg_‰om_hash
–
p
[0] ) ) {

496 
s¶
->
h™dshake
->
sig_Æg
 = 
p
[0];

502 
	`SSL_DEBUG_MSG
( 3, ( "client hello v3, signature_algorithmÉxt: %d",

503 
s¶
->
h™dshake
->
sig_Æg
 ) );

506 
	}
}

509 #i‡
deföed
(
POLARSSL_ECDH_C
Ë|| deföed(
POLARSSL_ECDSA_C
)

510 
	$s¶_∑r£_suµ‹ãd_ñlùtic_curves
–
s¶_c⁄ãxt
 *
s¶
,

511 c⁄° *
buf
,

512 
size_t
 
Àn
 )

514 
size_t
 
li°_size
, 
our_size
;

515 c⁄° *
p
;

516 c⁄° 
e˝_curve_öfo
 *
curve_öfo
, **
curves
;

518 
li°_size
 = ( ( 
buf
[0] << 8 ) | ( buf[1] ) );

519 if–
li°_size
 + 2 !
Àn
 ||

520 
li°_size
 % 2 != 0 )

522 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

523 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

528 
our_size
 = 
li°_size
 / 2 + 1;

529 if–
our_size
 > 
POLARSSL_ECP_DP_MAX
 )

530 
our_size
 = 
POLARSSL_ECP_DP_MAX
;

532 if––
curves
 = 
	`pﬁ¨s¶_mÆloc
–
our_size
 * –*curve†ËËË=
NULL
 )

533 –
POLARSSL_ERR_SSL_MALLOC_FAILED
 );

536 
	`mem£t
–(*Ë
curves
, 0, 
our_size
 * ( *curves ) );

537 
s¶
->
h™dshake
->
curves
 = curves;

539 
p
 = 
buf
 + 2;

540  
li°_size
 > 0 && 
our_size
 > 1 )

542 
curve_öfo
 = 
	`e˝_curve_öfo_‰om_és_id
––
p
[0] << 8 ) |Ö[1] );

544 if–
curve_öfo
 !
NULL
 )

546 *
curves
++ = 
curve_öfo
;

547 
our_size
--;

550 
li°_size
 -= 2;

551 
p
 += 2;

555 
	}
}

557 
	$s¶_∑r£_suµ‹ãd_poöt_f‹m©s
–
s¶_c⁄ãxt
 *
s¶
,

558 c⁄° *
buf
,

559 
size_t
 
Àn
 )

561 
size_t
 
li°_size
;

562 c⁄° *
p
;

564 
li°_size
 = 
buf
[0];

565 if–
li°_size
 + 1 !
Àn
 )

567 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

568 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

571 
p
 = 
buf
 + 2;

572  
li°_size
 > 0 )

574 if–
p
[0] =
POLARSSL_ECP_PF_UNCOMPRESSED
 ||

575 
p
[0] =
POLARSSL_ECP_PF_COMPRESSED
 )

577 
s¶
->
h™dshake
->
ecdh_˘x
.
poöt_f‹m©
 = 
p
[0];

578 
	`SSL_DEBUG_MSG
–4, ( "poöàf‹m© sñe˘ed: %d", 
p
[0] ) );

582 
li°_size
--;

583 
p
++;

587 
	}
}

590 #i‡
deföed
(
POLARSSL_SSL_MAX_FRAGMENT_LENGTH
)

591 
	$s¶_∑r£_max_‰agmít_Àngth_ext
–
s¶_c⁄ãxt
 *
s¶
,

592 c⁄° *
buf
,

593 
size_t
 
Àn
 )

595 if–
Àn
 !1 || 
buf
[0] >
SSL_MAX_FRAG_LEN_INVALID
 )

597 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

598 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

601 
s¶
->
£ssi⁄_√gŸüã
->
mÊ_code
 = 
buf
[0];

604 
	}
}

607 #i‡
deföed
(
POLARSSL_SSL_TRUNCATED_HMAC
)

608 
	$s¶_∑r£_åunˇãd_hmac_ext
–
s¶_c⁄ãxt
 *
s¶
,

609 c⁄° *
buf
,

610 
size_t
 
Àn
 )

612 if–
Àn
 != 0 )

614 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

615 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

618 ((Ë
buf
);

620 
s¶
->
£ssi⁄_√gŸüã
->
åunc_hmac
 = 
SSL_TRUNC_HMAC_ENABLED
;

623 
	}
}

626 #i‡
deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

627 
	$s¶_∑r£_£ssi⁄_tickë_ext
–
s¶_c⁄ãxt
 *
s¶
,

628 *
buf
,

629 
size_t
 
Àn
 )

631 
ªt
;

633 if–
s¶
->
£ssi⁄_tickës
 =
SSL_SESSION_TICKETS_DISABLED
 )

637 
s¶
->
h™dshake
->
√w_£ssi⁄_tickë
 = 1;

639 
	`SSL_DEBUG_MSG
–3, ( "tickëÜígth: %d", 
Àn
 ) );

641 if–
Àn
 == 0 )

644 if–
s¶
->
ª√gŸüti⁄
 !
SSL_INITIAL_HANDSHAKE
 )

646 
	`SSL_DEBUG_MSG
( 3, ( "ticketÑejected:Ñenegotiating" ) );

653 if––
ªt
 = 
	`s¶_∑r£_tickë
–
s¶
, 
buf
, 
Àn
 ) ) != 0 )

655 
	`SSL_DEBUG_RET
–1, "s¶_∑r£_tickë", 
ªt
 );

659 
	`SSL_DEBUG_MSG
( 3, ( "session successfullyÑestored fromÅicket" ) );

661 
s¶
->
h™dshake
->
ªsume
 = 1;

664 
s¶
->
h™dshake
->
√w_£ssi⁄_tickë
 = 0;

667 
	}
}

670 #i‡
deföed
(
POLARSSL_SSL_ALPN
)

671 
	$s¶_∑r£_Æ≤_ext
–
s¶_c⁄ãxt
 *
s¶
,

672 c⁄° *
buf
, 
size_t
 
Àn
 )

674 
size_t
 
li°_Àn
, 
cur_Àn
, 
ours_Àn
;

675 c⁄° *
theús
, *
°¨t
, *
íd
;

676 c⁄° **
ours
;

679 if–
s¶
->
Æ≤_li°
 =
NULL
 )

691 if–
Àn
 < 4 )

692 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

694 
li°_Àn
 = ( 
buf
[0] << 8 ) | buf[1];

695 if–
li°_Àn
 !
Àn
 - 2 )

696 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

701 
°¨t
 = 
buf
 + 2;

702 
íd
 = 
buf
 + 
Àn
;

703  
ours
 = 
s¶
->
Æ≤_li°
; *our†!
NULL
; ours++ )

705 
ours_Àn
 = 
	`°æí
–*
ours
 );

706  
theús
 = 
°¨t
;Åheú†!
íd
;Åheú†+
cur_Àn
 )

709 if–
theús
 > 
íd
 )

710 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

712 
cur_Àn
 = *
theús
++;

715 if–
cur_Àn
 == 0 )

716 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

718 if–
cur_Àn
 =
ours_Àn
 &&

719 
	`memcmp
–
theús
, *
ours
, 
cur_Àn
 ) == 0 )

721 
s¶
->
Æ≤_cho£n
 = *
ours
;

728 
	`s¶_£nd_Æît_mesßge
–
s¶
, 
SSL_ALERT_LEVEL_FATAL
,

729 
SSL_ALERT_MSG_NO_APPLICATION_PROTOCOL
 );

730 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

731 
	}
}

738 #i‡
deföed
(
POLARSSL_X509_CRT_PARSE_C
)

742 #i‡
deföed
(
POLARSSL_ECDSA_C
)

743 
	$s¶_key_m©ches_curves
–
pk_c⁄ãxt
 *
pk
,

744 c⁄° 
e˝_curve_öfo
 **
curves
 )

746 c⁄° 
e˝_curve_öfo
 **
¸v
 = 
curves
;

747 
e˝_group_id
 
gΩ_id
 = 
	`pk_ec
–*
pk
 )->
gΩ
.
id
;

749  *
¸v
 !
NULL
 )

751 if–(*
¸v
)->
gΩ_id
 == grp_id )

753 
¸v
++;

757 
	}
}

764 
	$s¶_pick_˚π
–
s¶_c⁄ãxt
 *
s¶
,

765 c⁄° 
s¶_cùhîsuôe_t
 * 
cùhîsuôe_öfo
 )

767 
s¶_key_˚π
 *
cur
, *
li°
;

768 
pk_ty≥_t
 
pk_Æg
 = 
	`s¶_gë_cùhîsuôe_sig_pk_Æg
–
cùhîsuôe_öfo
 );

770 #i‡
	`deföed
(
POLARSSL_SSL_SERVER_NAME_INDICATION
)

771 if–
s¶
->
h™dshake
->
¢i_key_˚π
 !
NULL
 )

772 
li°
 = 
s¶
->
h™dshake
->
¢i_key_˚π
;

775 
li°
 = 
s¶
->
h™dshake
->
key_˚π
;

777 if–
pk_Æg
 =
POLARSSL_PK_NONE
 )

780  
cur
 = 
li°
; cu∏!
NULL
; cu∏cur->
√xt
 )

782 if–! 
	`pk_ˇn_do
–
cur
->
key
, 
pk_Æg
 ) )

793 if–
	`s¶_check_˚π_ußge
–
cur
->
˚π
, 
cùhîsuôe_öfo
,

794 
SSL_IS_SERVER
 ) != 0 )

799 #i‡
	`deföed
(
POLARSSL_ECDSA_C
)

800 if–
pk_Æg
 =
POLARSSL_PK_ECDSA
 )

802 if–
	`s¶_key_m©ches_curves
–
cur
->
key
, 
s¶
->
h™dshake
->
curves
 ) )

810 if–
cur
 =
NULL
 )

813 
s¶
->
h™dshake
->
key_˚π
 = 
cur
;

815 
	}
}

822 
	$s¶_cùhîsuôe_m©ch
–
s¶_c⁄ãxt
 *
s¶
, 
suôe_id
,

823 c⁄° 
s¶_cùhîsuôe_t
 **
cùhîsuôe_öfo
 )

825 c⁄° 
s¶_cùhîsuôe_t
 *
suôe_öfo
;

827 
suôe_öfo
 = 
	`s¶_cùhîsuôe_‰om_id
–
suôe_id
 );

828 if–
suôe_öfo
 =
NULL
 )

830 
	`SSL_DEBUG_MSG
–1, ( "cùhîsuôêöfÿf‹ %04xÇŸ found", 
suôe_id
 ) );

831 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

834 if–
suôe_öfo
->
mö_mö‹_vî
 > 
s¶
->
mö‹_vî
 ||

835 
suôe_öfo
->
max_mö‹_vî
 < 
s¶
->
mö‹_vî
 )

838 #i‡
	`deföed
(
POLARSSL_ECDH_C
Ë|| deföed(
POLARSSL_ECDSA_C
)

839 if–
	`s¶_cùhîsuôe_u£s_ec
–
suôe_öfo
 ) &&

840 –
s¶
->
h™dshake
->
curves
 =
NULL
 ||

841 
s¶
->
h™dshake
->
curves
[0] =
NULL
 ) )

845 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

848 if–
	`s¶_cùhîsuôe_u£s_psk
–
suôe_öfo
 ) &&

849 
s¶
->
f_psk
 =
NULL
 &&

850 –
s¶
->
psk
 =
NULL
 || s¶->
psk_idítôy
 == NULL ||

851 
s¶
->
psk_idítôy_Àn
 =0 || s¶->
psk_Àn
 == 0 ) )

855 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

863 if–
	`s¶_pick_˚π
–
s¶
, 
suôe_öfo
 ) != 0 )

867 *
cùhîsuôe_öfo
 = 
suôe_öfo
;

869 
	}
}

871 #i‡
deföed
(
POLARSSL_SSL_SRV_SUPPORT_SSLV2_CLIENT_HELLO
)

872 
	$s¶_∑r£_˛õ¡_hñlo_v2
–
s¶_c⁄ãxt
 *
s¶
 )

874 
ªt
;

875 
i
, 
j
;

876 
size_t
 
n
;

877 
cùh_Àn
, 
£ss_Àn
, 
chÆ_Àn
;

878 *
buf
, *
p
;

879 c⁄° *
cùhîsuôes
;

880 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
;

882 
	`SSL_DEBUG_MSG
( 2, ( "=>Öarse client hello v2" ) );

884 if–
s¶
->
ª√gŸüti⁄
 !
SSL_INITIAL_HANDSHAKE
 )

886 
	`SSL_DEBUG_MSG
( 1, ( "client hello v2 illegal forÑenegotiation" ) );

888 if––
ªt
 = 
	`s¶_£nd_Áèl_h™dshake_Áûuª
–
s¶
 ) ) != 0 )

889 –
ªt
 );

891 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

894 
buf
 = 
s¶
->
ö_hdr
;

896 
	`SSL_DEBUG_BUF
–4, "ªc‹d hódî", 
buf
, 5 );

898 
	`SSL_DEBUG_MSG
( 3, ( "client hello v2, messageÅype: %d",

899 
buf
[2] ) );

900 
	`SSL_DEBUG_MSG
( 3, ( "client hello v2, messageÜen.: %d",

901 ––
buf
[0] & 0x7F ) << 8 ) | buf[1] ) );

902 
	`SSL_DEBUG_MSG
( 3, ( "client hello v2, max. version: [%d:%d]",

903 
buf
[3], buf[4] ) );

915 if–
buf
[2] !
SSL_HS_CLIENT_HELLO
 ||

916 
buf
[3] !
SSL_MAJOR_VERSION_3
 )

918 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

919 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

922 
n
 = ( ( 
buf
[0] << 8 ) | buf[1] ) & 0x7FFF;

924 if–
n
 < 17 ||Ç > 512 )

926 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

927 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

930 
s¶
->
maj‹_vî
 = 
SSL_MAJOR_VERSION_3
;

931 
s¶
->
mö‹_vî
 = ( 
buf
[4] <s¶->
max_mö‹_vî
 )

932 ? 
buf
[4] : 
s¶
->
max_mö‹_vî
;

934 if–
s¶
->
mö‹_vî
 < s¶->
mö_mö‹_vî
 )

936 
	`SSL_DEBUG_MSG
( 1, ( "client only supports ssl smallerÅhan minimum"

938 
s¶
->
maj‹_vî
, s¶->
mö‹_vî
,

939 
s¶
->
mö_maj‹_vî
, s¶->
mö_mö‹_vî
 ) );

941 
	`s¶_£nd_Æît_mesßge
–
s¶
, 
SSL_ALERT_LEVEL_FATAL
,

942 
SSL_ALERT_MSG_PROTOCOL_VERSION
 );

943 –
POLARSSL_ERR_SSL_BAD_HS_PROTOCOL_VERSION
 );

946 
s¶
->
h™dshake
->
max_maj‹_vî
 = 
buf
[3];

947 
s¶
->
h™dshake
->
max_mö‹_vî
 = 
buf
[4];

949 if––
ªt
 = 
	`s¶_„tch_öput
–
s¶
, 2 + 
n
 ) ) != 0 )

951 
	`SSL_DEBUG_RET
–1, "s¶_„tch_öput", 
ªt
 );

952 –
ªt
 );

955 
s¶
->
h™dshake
->
	`upd©e_checksum
–s¶, 
buf
 + 2, 
n
 );

957 
buf
 = 
s¶
->
ö_msg
;

958 
n
 = 
s¶
->
ö_À·
 - 5;

968 
	`SSL_DEBUG_BUF
–4, "ªc‹d c⁄ã¡s", 
buf
, 
n
 );

970 
cùh_Àn
 = ( 
buf
[0] << 8 ) | buf[1];

971 
£ss_Àn
 = ( 
buf
[2] << 8 ) | buf[3];

972 
chÆ_Àn
 = ( 
buf
[4] << 8 ) | buf[5];

974 
	`SSL_DEBUG_MSG
( 3, ( "ciph_len: %d, sess_len: %d, chal_len: %d",

975 
cùh_Àn
, 
£ss_Àn
, 
chÆ_Àn
 ) );

980 if–
cùh_Àn
 < 3 || ( ciph_len % 3 ) != 0 )

982 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

983 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

986 if–
£ss_Àn
 > 32 )

988 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

989 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

992 if–
chÆ_Àn
 < 8 || chal_len > 32 )

994 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

995 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

998 if–
n
 !6 + 
cùh_Àn
 + 
£ss_Àn
 + 
chÆ_Àn
 )

1000 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

1001 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

1004 
	`SSL_DEBUG_BUF
( 3, "client hello, ciphersuitelist",

1005 
buf
 + 6, 
cùh_Àn
 );

1006 
	`SSL_DEBUG_BUF
( 3, "client hello, session id",

1007 
buf
 + 6 + 
cùh_Àn
, 
£ss_Àn
 );

1008 
	`SSL_DEBUG_BUF
( 3, "client hello, challenge",

1009 
buf
 + 6 + 
cùh_Àn
 + 
£ss_Àn
, 
chÆ_Àn
 );

1011 
p
 = 
buf
 + 6 + 
cùh_Àn
;

1012 
s¶
->
£ssi⁄_√gŸüã
->
Àngth
 = 
£ss_Àn
;

1013 
	`mem£t
–
s¶
->
£ssi⁄_√gŸüã
->
id
, 0,

1014 –
s¶
->
£ssi⁄_√gŸüã
->
id
 ) );

1015 
	`mem˝y
–
s¶
->
£ssi⁄_√gŸüã
->
id
, 
p
, s¶->£ssi⁄_√gŸüã->
Àngth
 );

1017 
p
 +
£ss_Àn
;

1018 
	`mem£t
–
s¶
->
h™dshake
->
øndbyãs
, 0, 64 );

1019 
	`mem˝y
–
s¶
->
h™dshake
->
øndbyãs
 + 32 - 
chÆ_Àn
, 
p
, chal_len );

1024  
i
 = 0, 
p
 = 
buf
 + 6; i < 
cùh_Àn
; i += 3,Ö += 3 )

1026 if–
p
[0] =0 &&Ö[1] =0 &&Ö[2] =
SSL_EMPTY_RENEGOTIATION_INFO
 )

1028 
	`SSL_DEBUG_MSG
( 3, ( "received TLS_EMPTY_RENEGOTIATION_INFO " ) );

1029 if–
s¶
->
ª√gŸüti⁄
 =
SSL_RENEGOTIATION
 )

1031 
	`SSL_DEBUG_MSG
( 1, ( "received RENEGOTIATION SCSV duringÑenegotiation" ) );

1033 if––
ªt
 = 
	`s¶_£nd_Áèl_h™dshake_Áûuª
–
s¶
 ) ) != 0 )

1034 –
ªt
 );

1036 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

1038 
s¶
->
£cuª_ª√gŸüti⁄
 = 
SSL_SECURE_RENEGOTIATION
;

1043 
cùhîsuôes
 = 
s¶
->
cùhîsuôe_li°
[s¶->
mö‹_vî
];

1044 
cùhîsuôe_öfo
 = 
NULL
;

1045 #i‡
	`deföed
(
POLARSSL_SSL_SRV_RESPECT_CLIENT_PREFERENCE
)

1046  
j
 = 0, 
p
 = 
buf
 + 6; j < 
cùh_Àn
; j += 3,Ö += 3 )

1048  
i
 = 0; 
cùhîsuôes
[i] != 0; i++ )

1050  
i
 = 0; 
cùhîsuôes
[i] != 0; i++ )

1052  
j
 = 0, 
p
 = 
buf
 + 6; j < 
cùh_Àn
; j += 3,Ö += 3 )

1055 if–
p
[0] != 0 ||

1056 
p
[1] !––
cùhîsuôes
[
i
] >> 8 ) & 0xFF ) ||

1057 
p
[2] !––
cùhîsuôes
[
i
] ) & 0xFF ) )

1060 if––
ªt
 = 
	`s¶_cùhîsuôe_m©ch
–
s¶
, 
cùhîsuôes
[
i
],

1061 &
cùhîsuôe_öfo
 ) ) != 0 )

1062 –
ªt
 );

1064 if–
cùhîsuôe_öfo
 !
NULL
 )

1065 
have_cùhîsuôe_v2
;

1069 
	`SSL_DEBUG_MSG
( 1, ( "gotÇo ciphersuites in common" ) );

1071 –
POLARSSL_ERR_SSL_NO_CIPHER_CHOSEN
 );

1073 
have_cùhîsuôe_v2
:

1074 
s¶
->
£ssi⁄_√gŸüã
->
cùhîsuôe
 = 
cùhîsuôes
[
i
];

1075 
s¶
->
å™sf‹m_√gŸüã
->
cùhîsuôe_öfo
 = ciphersuite_info;

1076 
	`s¶_›timize_checksum
–
s¶
, s¶->
å™sf‹m_√gŸüã
->
cùhîsuôe_öfo
 );

1081 if–
s¶
->
£cuª_ª√gŸüti⁄
 =
SSL_LEGACY_RENEGOTIATION
 &&

1082 
s¶
->
Ælow_Àgacy_ª√gŸüti⁄
 =
SSL_LEGACY_BREAK_HANDSHAKE
 )

1084 
	`SSL_DEBUG_MSG
( 1, ( "legacyÑenegotiation, breaking off handshake" ) );

1086 if––
ªt
 = 
	`s¶_£nd_Áèl_h™dshake_Áûuª
–
s¶
 ) ) != 0 )

1087 –
ªt
 );

1089 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

1092 
s¶
->
ö_À·
 = 0;

1093 
s¶
->
°©e
++;

1095 
	`SSL_DEBUG_MSG
( 2, ( "<=Öarse client hello v2" ) );

1098 
	}
}

1101 
	$s¶_∑r£_˛õ¡_hñlo
–
s¶_c⁄ãxt
 *
s¶
 )

1103 
ªt
;

1104 
i
, 
j
;

1105 
size_t
 
n
;

1106 
cùh_Àn
, 
£ss_Àn
;

1107 
comp_Àn
;

1108 
ext_Àn
 = 0;

1109 *
buf
, *
p
, *
ext
;

1110 
ª√gŸüti⁄_öfo_£í
 = 0;

1111 
h™dshake_Áûuª
 = 0;

1112 c⁄° *
cùhîsuôes
;

1113 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
;

1115 
	`SSL_DEBUG_MSG
( 2, ( "=>Öarse client hello" ) );

1117 if–
s¶
->
ª√gŸüti⁄
 =
SSL_INITIAL_HANDSHAKE
 &&

1118 –
ªt
 = 
	`s¶_„tch_öput
–
s¶
, 5 ) ) != 0 )

1120 
	`SSL_DEBUG_RET
–1, "s¶_„tch_öput", 
ªt
 );

1121 –
ªt
 );

1124 
buf
 = 
s¶
->
ö_hdr
;

1126 #i‡
	`deföed
(
POLARSSL_SSL_SRV_SUPPORT_SSLV2_CLIENT_HELLO
)

1127 if––
buf
[0] & 0x80 ) != 0 )

1128  
	`s¶_∑r£_˛õ¡_hñlo_v2
–
s¶
 );

1131 
	`SSL_DEBUG_BUF
–4, "ªc‹d hódî", 
buf
, 5 );

1133 
	`SSL_DEBUG_MSG
( 3, ( "client hello v3, messageÅype: %d",

1134 
buf
[0] ) );

1135 
	`SSL_DEBUG_MSG
( 3, ( "client hello v3, messageÜen.: %d",

1136 –
buf
[3] << 8 ) | buf[4] ) );

1137 
	`SSL_DEBUG_MSG
( 3, ( "client hello v3,Örotocol ver: [%d:%d]",

1138 
buf
[1], buf[2] ) );

1153 if–
buf
[0] !
SSL_MSG_HANDSHAKE
 ||

1154 
buf
[1] < 
SSL_MAJOR_VERSION_3
 )

1156 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

1157 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

1160 
n
 = ( 
buf
[3] << 8 ) | buf[4];

1162 if–
n
 < 45 ||Ç > 
SSL_MAX_CONTENT_LEN
 )

1164 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

1165 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

1168 if–
s¶
->
ª√gŸüti⁄
 =
SSL_INITIAL_HANDSHAKE
 &&

1169 –
ªt
 = 
	`s¶_„tch_öput
–
s¶
, 5 + 
n
 ) ) != 0 )

1171 
	`SSL_DEBUG_RET
–1, "s¶_„tch_öput", 
ªt
 );

1172 –
ªt
 );

1175 
buf
 = 
s¶
->
ö_msg
;

1176 if–!
s¶
->
ª√gŸüti⁄
 )

1177 
n
 = 
s¶
->
ö_À·
 - 5;

1179 
n
 = 
s¶
->
ö_msgÀn
;

1181 
s¶
->
h™dshake
->
	`upd©e_checksum
–s¶, 
buf
, 
n
 );

1198 
	`SSL_DEBUG_BUF
–4, "ªc‹d c⁄ã¡s", 
buf
, 
n
 );

1200 
	`SSL_DEBUG_MSG
( 3, ( "client hello v3, handshakeÅype: %d",

1201 
buf
[0] ) );

1202 
	`SSL_DEBUG_MSG
( 3, ( "client hello v3, handshakeÜen.: %d",

1203 –
buf
[1] << 16 ) | ( buf[2] << 8 ) | buf[3] ) );

1204 
	`SSL_DEBUG_MSG
( 3, ( "client hello v3, max. version: [%d:%d]",

1205 
buf
[4], buf[5] ) );

1210 if–
buf
[0] !
SSL_HS_CLIENT_HELLO
 )

1212 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

1213 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

1216 
s¶
->
maj‹_vî
 = 
buf
[4];

1217 
s¶
->
mö‹_vî
 = 
buf
[5];

1219 
s¶
->
h™dshake
->
max_maj‹_vî
 = s¶->
maj‹_vî
;

1220 
s¶
->
h™dshake
->
max_mö‹_vî
 = s¶->
mö‹_vî
;

1222 if–
s¶
->
maj‹_vî
 < s¶->
mö_maj‹_vî
 ||

1223 
s¶
->
mö‹_vî
 < s¶->
mö_mö‹_vî
 )

1225 
	`SSL_DEBUG_MSG
( 1, ( "client only supports ssl smallerÅhan minimum"

1227 
s¶
->
maj‹_vî
, s¶->
mö‹_vî
,

1228 
s¶
->
mö_maj‹_vî
, s¶->
mö_mö‹_vî
 ) );

1230 
	`s¶_£nd_Æît_mesßge
–
s¶
, 
SSL_ALERT_LEVEL_FATAL
,

1231 
SSL_ALERT_MSG_PROTOCOL_VERSION
 );

1233 –
POLARSSL_ERR_SSL_BAD_HS_PROTOCOL_VERSION
 );

1236 if–
s¶
->
maj‹_vî
 > s¶->
max_maj‹_vî
 )

1238 
s¶
->
maj‹_vî
 = s¶->
max_maj‹_vî
;

1239 
s¶
->
mö‹_vî
 = s¶->
max_mö‹_vî
;

1241 if–
s¶
->
mö‹_vî
 > s¶->
max_mö‹_vî
 )

1242 
s¶
->
mö‹_vî
 = s¶->
max_mö‹_vî
;

1244 
	`mem˝y
–
s¶
->
h™dshake
->
øndbyãs
, 
buf
 + 6, 32 );

1249 if–
buf
[1] !0 || 
n
 != () 4 + ( ( buf[2] << 8 ) | buf[3] ) )

1251 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

1252 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

1258 
£ss_Àn
 = 
buf
[38];

1260 if–
£ss_Àn
 > 32 || sess_À¿> 
n
 - 42 )

1262 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

1263 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

1266 
s¶
->
£ssi⁄_√gŸüã
->
Àngth
 = 
£ss_Àn
;

1267 
	`mem£t
–
s¶
->
£ssi⁄_√gŸüã
->
id
, 0,

1268 –
s¶
->
£ssi⁄_√gŸüã
->
id
 ) );

1269 
	`mem˝y
–
s¶
->
£ssi⁄_√gŸüã
->
id
, 
buf
 + 39,

1270 
s¶
->
£ssi⁄_√gŸüã
->
Àngth
 );

1275 
cùh_Àn
 = ( 
buf
[39 + 
£ss_Àn
] << 8 )

1276 | ( 
buf
[40 + 
£ss_Àn
] );

1278 if–
cùh_Àn
 < 2 || ( cùh_À¿% 2 ) !0 || cùh_À¿> 
n
 - 42 - 
£ss_Àn
 )

1280 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

1281 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

1287 
comp_Àn
 = 
buf
[41 + 
£ss_Àn
 + 
cùh_Àn
];

1289 if–
comp_Àn
 < 1 || comp_len > 16 ||

1290 
comp_Àn
 > 
n
 - 42 - 
£ss_Àn
 - 
cùh_Àn
 )

1292 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

1293 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

1299 if–
n
 > 42 + 
£ss_Àn
 + 
cùh_Àn
 + 
comp_Àn
 )

1301 
ext_Àn
 = ( 
buf
[42 + 
£ss_Àn
 + 
cùh_Àn
 + 
comp_Àn
] << 8 )

1302 | ( 
buf
[43 + 
£ss_Àn
 + 
cùh_Àn
 + 
comp_Àn
] );

1304 if––
ext_Àn
 > 0 &&Éxt_len < 4 ) ||

1305 
n
 !44 + 
£ss_Àn
 + 
cùh_Àn
 + 
comp_Àn
 + 
ext_Àn
 )

1307 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

1308 
	`SSL_DEBUG_BUF
–3, "Ext", 
buf
 + 44 + 
£ss_Àn
 + 
cùh_Àn
 + 
comp_Àn
, 
ext_Àn
);

1309 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

1313 
s¶
->
£ssi⁄_√gŸüã
->
com¥essi⁄
 = 
SSL_COMPRESS_NULL
;

1314 #i‡
	`deföed
(
POLARSSL_ZLIB_SUPPORT
)

1315  
i
 = 0; i < 
comp_Àn
; ++i )

1317 if–
buf
[42 + 
£ss_Àn
 + 
cùh_Àn
 + 
i
] =
SSL_COMPRESS_DEFLATE
 )

1319 
s¶
->
£ssi⁄_√gŸüã
->
com¥essi⁄
 = 
SSL_COMPRESS_DEFLATE
;

1325 
	`SSL_DEBUG_BUF
( 3, "client hello,Ñandom bytes",

1326 
buf
 + 6, 32 );

1327 
	`SSL_DEBUG_BUF
( 3, "client hello, session id",

1328 
buf
 + 38, 
£ss_Àn
 );

1329 
	`SSL_DEBUG_BUF
( 3, "client hello, ciphersuitelist",

1330 
buf
 + 41 + 
£ss_Àn
, 
cùh_Àn
 );

1331 
	`SSL_DEBUG_BUF
( 3, "client hello, compression",

1332 
buf
 + 42 + 
£ss_Àn
 + 
cùh_Àn
, 
comp_Àn
 );

1337  
i
 = 0, 
p
 = 
buf
 + 41 + 
£ss_Àn
; i < 
cùh_Àn
; i += 2,Ö += 2 )

1339 if–
p
[0] =0 &&Ö[1] =
SSL_EMPTY_RENEGOTIATION_INFO
 )

1341 
	`SSL_DEBUG_MSG
( 3, ( "received TLS_EMPTY_RENEGOTIATION_INFO " ) );

1342 if–
s¶
->
ª√gŸüti⁄
 =
SSL_RENEGOTIATION
 )

1344 
	`SSL_DEBUG_MSG
( 1, ( "received RENEGOTIATION SCSV duringÑenegotiation" ) );

1346 if––
ªt
 = 
	`s¶_£nd_Áèl_h™dshake_Áûuª
–
s¶
 ) ) != 0 )

1347 –
ªt
 );

1349 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

1351 
s¶
->
£cuª_ª√gŸüti⁄
 = 
SSL_SECURE_RENEGOTIATION
;

1356 
ext
 = 
buf
 + 44 + 
£ss_Àn
 + 
cùh_Àn
 + 
comp_Àn
;

1358  
ext_Àn
 )

1360 
ext_id
 = ( ( 
ext
[0] << 8 )

1361 | ( 
ext
[1] ) );

1362 
ext_size
 = ( ( 
ext
[2] << 8 )

1363 | ( 
ext
[3] ) );

1365 if–
ext_size
 + 4 > 
ext_Àn
 )

1367 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

1368 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

1370  
ext_id
 )

1372 #i‡
	`deföed
(
POLARSSL_SSL_SERVER_NAME_INDICATION
)

1373 
TLS_EXT_SERVERNAME
:

1374 
	`SSL_DEBUG_MSG
( 3, ( "found ServerNameÉxtension" ) );

1375 if–
s¶
->
f_¢i
 =
NULL
 )

1378 
ªt
 = 
	`s¶_∑r£_£rvî«me_ext
–
s¶
, 
ext
 + 4, 
ext_size
 );

1379 if–
ªt
 != 0 )

1380 –
ªt
 );

1384 
TLS_EXT_RENEGOTIATION_INFO
:

1385 
	`SSL_DEBUG_MSG
( 3, ( "foundÑenegotiationÉxtension" ) );

1386 
ª√gŸüti⁄_öfo_£í
 = 1;

1388 
ªt
 = 
	`s¶_∑r£_ª√gŸüti⁄_öfo
–
s¶
, 
ext
 + 4, 
ext_size
 );

1389 if–
ªt
 != 0 )

1390 –
ªt
 );

1393 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

1394 
TLS_EXT_SIG_ALG
:

1395 
	`SSL_DEBUG_MSG
( 3, ( "found signature_algorithmsÉxtension" ) );

1396 if–
s¶
->
ª√gŸüti⁄
 =
SSL_RENEGOTIATION
 )

1399 
ªt
 = 
	`s¶_∑r£_sig«tuª_Æg‹ôhms_ext
–
s¶
, 
ext
 + 4, 
ext_size
 );

1400 if–
ªt
 != 0 )

1401 –
ªt
 );

1405 #i‡
	`deföed
(
POLARSSL_ECDH_C
Ë|| deföed(
POLARSSL_ECDSA_C
)

1406 
TLS_EXT_SUPPORTED_ELLIPTIC_CURVES
:

1407 
	`SSL_DEBUG_MSG
( 3, ( "found supportedÉlliptic curvesÉxtension" ) );

1409 
ªt
 = 
	`s¶_∑r£_suµ‹ãd_ñlùtic_curves
–
s¶
, 
ext
 + 4, 
ext_size
 );

1410 if–
ªt
 != 0 )

1411 –
ªt
 );

1414 
TLS_EXT_SUPPORTED_POINT_FORMATS
:

1415 
	`SSL_DEBUG_MSG
( 3, ( "found supportedÖoint formatsÉxtension" ) );

1416 
s¶
->
h™dshake
->
˛i_exts
 |
TLS_EXT_SUPPORTED_POINT_FORMATS_PRESENT
;

1418 
ªt
 = 
	`s¶_∑r£_suµ‹ãd_poöt_f‹m©s
–
s¶
, 
ext
 + 4, 
ext_size
 );

1419 if–
ªt
 != 0 )

1420 –
ªt
 );

1424 #i‡
	`deföed
(
POLARSSL_SSL_MAX_FRAGMENT_LENGTH
)

1425 
TLS_EXT_MAX_FRAGMENT_LENGTH
:

1426 
	`SSL_DEBUG_MSG
( 3, ( "found max fragmentÜengthÉxtension" ) );

1428 
ªt
 = 
	`s¶_∑r£_max_‰agmít_Àngth_ext
–
s¶
, 
ext
 + 4, 
ext_size
 );

1429 if–
ªt
 != 0 )

1430 –
ªt
 );

1434 #i‡
	`deföed
(
POLARSSL_SSL_TRUNCATED_HMAC
)

1435 
TLS_EXT_TRUNCATED_HMAC
:

1436 
	`SSL_DEBUG_MSG
( 3, ( "foundÅruncated hmacÉxtension" ) );

1438 
ªt
 = 
	`s¶_∑r£_åunˇãd_hmac_ext
–
s¶
, 
ext
 + 4, 
ext_size
 );

1439 if–
ªt
 != 0 )

1440 –
ªt
 );

1444 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

1445 
TLS_EXT_SESSION_TICKET
:

1446 
	`SSL_DEBUG_MSG
( 3, ( "found sessionÅicketÉxtension" ) );

1448 
ªt
 = 
	`s¶_∑r£_£ssi⁄_tickë_ext
–
s¶
, 
ext
 + 4, 
ext_size
 );

1449 if–
ªt
 != 0 )

1450 –
ªt
 );

1454 #i‡
	`deföed
(
POLARSSL_SSL_ALPN
)

1455 
TLS_EXT_ALPN
:

1456 
	`SSL_DEBUG_MSG
( 3, ( "foundálpnÉxtension" ) );

1458 
ªt
 = 
	`s¶_∑r£_Æ≤_ext
–
s¶
, 
ext
 + 4, 
ext_size
 );

1459 if–
ªt
 != 0 )

1460 –
ªt
 );

1465 
	`SSL_DEBUG_MSG
( 3, ( "unknownÉxtension found: %d (ignoring)",

1466 
ext_id
 ) );

1469 
ext_Àn
 -4 + 
ext_size
;

1470 
ext
 +4 + 
ext_size
;

1472 if–
ext_Àn
 > 0 &&Éxt_len < 4 )

1474 
	`SSL_DEBUG_MSG
( 1, ( "bad client hello message" ) );

1475 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

1482 if–
s¶
->
£cuª_ª√gŸüti⁄
 =
SSL_LEGACY_RENEGOTIATION
 &&

1483 
s¶
->
Ælow_Àgacy_ª√gŸüti⁄
 =
SSL_LEGACY_BREAK_HANDSHAKE
 )

1485 
	`SSL_DEBUG_MSG
( 1, ( "legacyÑenegotiation, breaking off handshake" ) );

1486 
h™dshake_Áûuª
 = 1;

1488 if–
s¶
->
ª√gŸüti⁄
 =
SSL_RENEGOTIATION
 &&

1489 
s¶
->
£cuª_ª√gŸüti⁄
 =
SSL_SECURE_RENEGOTIATION
 &&

1490 
ª√gŸüti⁄_öfo_£í
 == 0 )

1492 
	`SSL_DEBUG_MSG
( 1, ( "renegotiation_infoÉxtension missing (secure)" ) );

1493 
h™dshake_Áûuª
 = 1;

1495 if–
s¶
->
ª√gŸüti⁄
 =
SSL_RENEGOTIATION
 &&

1496 
s¶
->
£cuª_ª√gŸüti⁄
 =
SSL_LEGACY_RENEGOTIATION
 &&

1497 
s¶
->
Ælow_Àgacy_ª√gŸüti⁄
 =
SSL_LEGACY_NO_RENEGOTIATION
 )

1499 
	`SSL_DEBUG_MSG
( 1, ( "legacyÑenegotiationÇotállowed" ) );

1500 
h™dshake_Áûuª
 = 1;

1502 if–
s¶
->
ª√gŸüti⁄
 =
SSL_RENEGOTIATION
 &&

1503 
s¶
->
£cuª_ª√gŸüti⁄
 =
SSL_LEGACY_RENEGOTIATION
 &&

1504 
ª√gŸüti⁄_öfo_£í
 == 1 )

1506 
	`SSL_DEBUG_MSG
( 1, ( "renegotiation_infoÉxtensionÖresent (legacy)" ) );

1507 
h™dshake_Áûuª
 = 1;

1510 if–
h™dshake_Áûuª
 == 1 )

1512 if––
ªt
 = 
	`s¶_£nd_Áèl_h™dshake_Áûuª
–
s¶
 ) ) != 0 )

1513 –
ªt
 );

1515 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO
 );

1523 
cùhîsuôes
 = 
s¶
->
cùhîsuôe_li°
[s¶->
mö‹_vî
];

1524 
cùhîsuôe_öfo
 = 
NULL
;

1525 #i‡
	`deföed
(
POLARSSL_SSL_SRV_RESPECT_CLIENT_PREFERENCE
)

1526  
j
 = 0, 
p
 = 
buf
 + 41 + 
£ss_Àn
; j < 
cùh_Àn
; j += 2,Ö += 2 )

1528  
i
 = 0; 
cùhîsuôes
[i] != 0; i++ )

1530  
i
 = 0; 
cùhîsuôes
[i] != 0; i++ )

1532  
j
 = 0, 
p
 = 
buf
 + 41 + 
£ss_Àn
; j < 
cùh_Àn
; j += 2,Ö += 2 )

1535 if–
p
[0] !––
cùhîsuôes
[
i
] >> 8 ) & 0xFF ) ||

1536 
p
[1] !––
cùhîsuôes
[
i
] ) & 0xFF ) )

1539 if––
ªt
 = 
	`s¶_cùhîsuôe_m©ch
–
s¶
, 
cùhîsuôes
[
i
],

1540 &
cùhîsuôe_öfo
 ) ) != 0 )

1541 –
ªt
 );

1543 if–
cùhîsuôe_öfo
 !
NULL
 )

1544 
have_cùhîsuôe
;

1548 
	`SSL_DEBUG_MSG
( 1, ( "gotÇo ciphersuites in common" ) );

1550 if––
ªt
 = 
	`s¶_£nd_Áèl_h™dshake_Áûuª
–
s¶
 ) ) != 0 )

1551 –
ªt
 );

1553 –
POLARSSL_ERR_SSL_NO_CIPHER_CHOSEN
 );

1555 
have_cùhîsuôe
:

1556 
s¶
->
£ssi⁄_√gŸüã
->
cùhîsuôe
 = 
cùhîsuôes
[
i
];

1557 
s¶
->
å™sf‹m_√gŸüã
->
cùhîsuôe_öfo
 = ciphersuite_info;

1558 
	`s¶_›timize_checksum
–
s¶
, s¶->
å™sf‹m_√gŸüã
->
cùhîsuôe_öfo
 );

1560 
s¶
->
ö_À·
 = 0;

1561 
s¶
->
°©e
++;

1563 
	`SSL_DEBUG_MSG
( 2, ( "<=Öarse client hello" ) );

1566 
	}
}

1568 #i‡
deföed
(
POLARSSL_SSL_TRUNCATED_HMAC
)

1569 
	$s¶_wrôe_åunˇãd_hmac_ext
–
s¶_c⁄ãxt
 *
s¶
,

1570 *
buf
,

1571 
size_t
 *
ﬁí
 )

1573 *
p
 = 
buf
;

1575 if–
s¶
->
£ssi⁄_√gŸüã
->
åunc_hmac
 =
SSL_TRUNC_HMAC_DISABLED
 )

1577 *
ﬁí
 = 0;

1581 
	`SSL_DEBUG_MSG
( 3, ( "server hello,áddingÅruncated hmacÉxtension" ) );

1583 *
p
++ = ()––
TLS_EXT_TRUNCATED_HMAC
 >> 8 ) & 0xFF );

1584 *
p
++ = ()––
TLS_EXT_TRUNCATED_HMAC
 ) & 0xFF );

1586 *
p
++ = 0x00;

1587 *
p
++ = 0x00;

1589 *
ﬁí
 = 4;

1590 
	}
}

1593 #i‡
deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

1594 
	$s¶_wrôe_£ssi⁄_tickë_ext
–
s¶_c⁄ãxt
 *
s¶
,

1595 *
buf
,

1596 
size_t
 *
ﬁí
 )

1598 *
p
 = 
buf
;

1600 if–
s¶
->
h™dshake
->
√w_£ssi⁄_tickë
 == 0 )

1602 *
ﬁí
 = 0;

1606 
	`SSL_DEBUG_MSG
( 3, ( "server hello,ádding sessionÅicketÉxtension" ) );

1608 *
p
++ = ()––
TLS_EXT_SESSION_TICKET
 >> 8 ) & 0xFF );

1609 *
p
++ = ()––
TLS_EXT_SESSION_TICKET
 ) & 0xFF );

1611 *
p
++ = 0x00;

1612 *
p
++ = 0x00;

1614 *
ﬁí
 = 4;

1615 
	}
}

1618 
	$s¶_wrôe_ª√gŸüti⁄_ext
–
s¶_c⁄ãxt
 *
s¶
,

1619 *
buf
,

1620 
size_t
 *
ﬁí
 )

1622 *
p
 = 
buf
;

1624 if–
s¶
->
£cuª_ª√gŸüti⁄
 !
SSL_SECURE_RENEGOTIATION
 )

1626 *
ﬁí
 = 0;

1630 
	`SSL_DEBUG_MSG
( 3, ( "server hello, secureÑenegotiationÉxtension" ) );

1632 *
p
++ = ()––
TLS_EXT_RENEGOTIATION_INFO
 >> 8 ) & 0xFF );

1633 *
p
++ = ()––
TLS_EXT_RENEGOTIATION_INFO
 ) & 0xFF );

1635 *
p
++ = 0x00;

1636 *
p
++ = ( 
s¶
->
vîify_d©a_Àn
 * 2 + 1 ) & 0xFF;

1637 *
p
++ = 
s¶
->
vîify_d©a_Àn
 * 2 & 0xFF;

1639 
	`mem˝y
–
p
, 
s¶
->
≥î_vîify_d©a
, s¶->
vîify_d©a_Àn
 );

1640 
p
 +
s¶
->
vîify_d©a_Àn
;

1641 
	`mem˝y
–
p
, 
s¶
->
own_vîify_d©a
, s¶->
vîify_d©a_Àn
 );

1642 
p
 +
s¶
->
vîify_d©a_Àn
;

1644 *
ﬁí
 = 5 + 
s¶
->
vîify_d©a_Àn
 * 2;

1645 
	}
}

1647 #i‡
deföed
(
POLARSSL_SSL_MAX_FRAGMENT_LENGTH
)

1648 
	$s¶_wrôe_max_‰agmít_Àngth_ext
–
s¶_c⁄ãxt
 *
s¶
,

1649 *
buf
,

1650 
size_t
 *
ﬁí
 )

1652 *
p
 = 
buf
;

1654 if–
s¶
->
£ssi⁄_√gŸüã
->
mÊ_code
 =
SSL_MAX_FRAG_LEN_NONE
 )

1656 *
ﬁí
 = 0;

1660 
	`SSL_DEBUG_MSG
( 3, ( "server hello, max_fragment_lengthÉxtension" ) );

1662 *
p
++ = ()––
TLS_EXT_MAX_FRAGMENT_LENGTH
 >> 8 ) & 0xFF );

1663 *
p
++ = ()––
TLS_EXT_MAX_FRAGMENT_LENGTH
 ) & 0xFF );

1665 *
p
++ = 0x00;

1666 *
p
++ = 1;

1668 *
p
++ = 
s¶
->
£ssi⁄_√gŸüã
->
mÊ_code
;

1670 *
ﬁí
 = 5;

1671 
	}
}

1674 #i‡
deföed
(
POLARSSL_ECDH_C
Ë|| deföed(
POLARSSL_ECDSA_C
)

1675 
	$s¶_wrôe_suµ‹ãd_poöt_f‹m©s_ext
–
s¶_c⁄ãxt
 *
s¶
,

1676 *
buf
,

1677 
size_t
 *
ﬁí
 )

1679 *
p
 = 
buf
;

1680 ((Ë
s¶
);

1682 if––
s¶
->
h™dshake
->
˛i_exts
 &

1683 
TLS_EXT_SUPPORTED_POINT_FORMATS_PRESENT
 ) == 0 )

1685 *
ﬁí
 = 0;

1689 
	`SSL_DEBUG_MSG
( 3, ( "server hello, supported_point_formatsÉxtension" ) );

1691 *
p
++ = ()––
TLS_EXT_SUPPORTED_POINT_FORMATS
 >> 8 ) & 0xFF );

1692 *
p
++ = ()––
TLS_EXT_SUPPORTED_POINT_FORMATS
 ) & 0xFF );

1694 *
p
++ = 0x00;

1695 *
p
++ = 2;

1697 *
p
++ = 1;

1698 *
p
++ = 
POLARSSL_ECP_PF_UNCOMPRESSED
;

1700 *
ﬁí
 = 6;

1701 
	}
}

1704 #i‡
deföed
(
POLARSSL_SSL_ALPN
 )

1705 
	$s¶_wrôe_Æ≤_ext
–
s¶_c⁄ãxt
 *
s¶
,

1706 *
buf
, 
size_t
 *
ﬁí
 )

1708 if–
s¶
->
Æ≤_cho£n
 =
NULL
 )

1710 *
ﬁí
 = 0;

1714 
	`SSL_DEBUG_MSG
( 3, ( "server hello,áddingálpnÉxtension" ) );

1723 
buf
[0] = ()––
TLS_EXT_ALPN
 >> 8 ) & 0xFF );

1724 
buf
[1] = ()––
TLS_EXT_ALPN
 ) & 0xFF );

1726 *
ﬁí
 = 7 + 
	`°æí
–
s¶
->
Æ≤_cho£n
 );

1728 
buf
[2] = ()–––*
ﬁí
 - 4 ) >> 8 ) & 0xFF );

1729 
buf
[3] = ()–––*
ﬁí
 - 4 ) ) & 0xFF );

1731 
buf
[4] = ()–––*
ﬁí
 - 6 ) >> 8 ) & 0xFF );

1732 
buf
[5] = ()–––*
ﬁí
 - 6 ) ) & 0xFF );

1734 
buf
[6] = ()–––*
ﬁí
 - 7 ) ) & 0xFF );

1736 
	`mem˝y
–
buf
 + 7, 
s¶
->
Æ≤_cho£n
, *
ﬁí
 - 7 );

1737 
	}
}

1740 
	$s¶_wrôe_£rvî_hñlo
–
s¶_c⁄ãxt
 *
s¶
 )

1742 #i‡
	`deföed
(
POLARSSL_HAVE_TIME
)

1743 
time_t
 
t
;

1745 
ªt
;

1746 
size_t
 
ﬁí
, 
ext_Àn
 = 0, 
n
;

1747 *
buf
, *
p
;

1749 
	`SSL_DEBUG_MSG
( 2, ( "=> write server hello" ) );

1751 if–
s¶
->
f_∫g
 =
NULL
 )

1753 
	`SSL_DEBUG_MSG
( 1, ( "no RNGÖrovided") );

1754 –
POLARSSL_ERR_SSL_NO_RNG
 );

1764 
buf
 = 
s¶
->
out_msg
;

1765 
p
 = 
buf
 + 4;

1767 *
p
++ = (Ë
s¶
->
maj‹_vî
;

1768 *
p
++ = (Ë
s¶
->
mö‹_vî
;

1770 
	`SSL_DEBUG_MSG
( 3, ( "server hello, chosen version: [%d:%d]",

1771 
buf
[4], buf[5] ) );

1773 #i‡
	`deföed
(
POLARSSL_HAVE_TIME
)

1774 
t
 = 
	`time
–
NULL
 );

1775 *
p
++ = ()–
t
 >> 24 );

1776 *
p
++ = ()–
t
 >> 16 );

1777 *
p
++ = ()–
t
 >> 8 );

1778 *
p
++ = ()–
t
 );

1780 
	`SSL_DEBUG_MSG
–3, ( "£rvî hñlo, cuºíàtime: %lu", 
t
 ) );

1782 if––
ªt
 = 
s¶
->
	`f_∫g
–s¶->
p_∫g
, 
p
, 4 ) ) != 0 )

1783 –
ªt
 );

1785 
p
 += 4;

1788 if––
ªt
 = 
s¶
->
	`f_∫g
–s¶->
p_∫g
, 
p
, 28 ) ) != 0 )

1789 –
ªt
 );

1791 
p
 += 28;

1793 
	`mem˝y
–
s¶
->
h™dshake
->
øndbyãs
 + 32, 
buf
 + 6, 32 );

1795 
	`SSL_DEBUG_BUF
–3, "£rvî hñlo,Ñ™dom byãs", 
buf
 + 6, 32 );

1802 if–
s¶
->
h™dshake
->
ªsume
 == 0 &&

1803 
s¶
->
ª√gŸüti⁄
 =
SSL_INITIAL_HANDSHAKE
 &&

1804 
s¶
->
£ssi⁄_√gŸüã
->
Àngth
 != 0 &&

1805 
s¶
->
f_gë_ˇche
 !
NULL
 &&

1806 
s¶
->
	`f_gë_ˇche
–s¶->
p_gë_ˇche
, s¶->
£ssi⁄_√gŸüã
 ) == 0 )

1808 
	`SSL_DEBUG_MSG
( 3, ( "session successfullyÑestored from cache" ) );

1809 
s¶
->
h™dshake
->
ªsume
 = 1;

1812 if–
s¶
->
h™dshake
->
ªsume
 == 0 )

1818 
s¶
->
°©e
++;

1820 #i‡
	`deföed
(
POLARSSL_HAVE_TIME
)

1821 
s¶
->
£ssi⁄_√gŸüã
->
°¨t
 = 
	`time
–
NULL
 );

1824 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

1825 if–
s¶
->
h™dshake
->
√w_£ssi⁄_tickë
 != 0 )

1827 
s¶
->
£ssi⁄_√gŸüã
->
Àngth
 = 
n
 = 0;

1828 
	`mem£t
–
s¶
->
£ssi⁄_√gŸüã
->
id
, 0, 32 );

1833 
s¶
->
£ssi⁄_√gŸüã
->
Àngth
 = 
n
 = 32;

1834 if––
ªt
 = 
s¶
->
	`f_∫g
–s¶->
p_∫g
, s¶->
£ssi⁄_√gŸüã
->
id
,

1835 
n
 ) ) != 0 )

1836 –
ªt
 );

1844 
n
 = 
s¶
->
£ssi⁄_√gŸüã
->
Àngth
;

1845 
s¶
->
°©e
 = 
SSL_SERVER_CHANGE_CIPHER_SPEC
;

1847 if––
ªt
 = 
	`s¶_dîive_keys
–
s¶
 ) ) != 0 )

1849 
	`SSL_DEBUG_RET
–1, "s¶_dîive_keys", 
ªt
 );

1850 –
ªt
 );

1862 *
p
++ = (Ë
s¶
->
£ssi⁄_√gŸüã
->
Àngth
;

1863 
	`mem˝y
–
p
, 
s¶
->
£ssi⁄_√gŸüã
->
id
, s¶->£ssi⁄_√gŸüã->
Àngth
 );

1864 
p
 +
s¶
->
£ssi⁄_√gŸüã
->
Àngth
;

1866 
	`SSL_DEBUG_MSG
–3, ( "£rvî hñlo, sessi⁄ idÜí.: %d", 
n
 ) );

1867 
	`SSL_DEBUG_BUF
–3, "£rvî hñlo, sessi⁄ id", 
buf
 + 39, 
n
 );

1868 
	`SSL_DEBUG_MSG
( 3, ( "%s session has beenÑesumed",

1869 
s¶
->
h™dshake
->
ªsume
 ? "a" : "no" ) );

1871 *
p
++ = ()–
s¶
->
£ssi⁄_√gŸüã
->
cùhîsuôe
 >> 8 );

1872 *
p
++ = ()–
s¶
->
£ssi⁄_√gŸüã
->
cùhîsuôe
 );

1873 *
p
++ = ()–
s¶
->
£ssi⁄_√gŸüã
->
com¥essi⁄
 );

1875 
	`SSL_DEBUG_MSG
( 3, ( "server hello, chosen ciphersuite: %s",

1876 
	`s¶_gë_cùhîsuôe_«me
–
s¶
->
£ssi⁄_√gŸüã
->
cùhîsuôe
 ) ) );

1877 
	`SSL_DEBUG_MSG
( 3, ( "server hello, compressálg.: 0x%02X",

1878 
s¶
->
£ssi⁄_√gŸüã
->
com¥essi⁄
 ) );

1883 
	`s¶_wrôe_ª√gŸüti⁄_ext
–
s¶
, 
p
 + 2 + 
ext_Àn
, &
ﬁí
 );

1884 
ext_Àn
 +
ﬁí
;

1886 #i‡
	`deföed
(
POLARSSL_SSL_MAX_FRAGMENT_LENGTH
)

1887 
	`s¶_wrôe_max_‰agmít_Àngth_ext
–
s¶
, 
p
 + 2 + 
ext_Àn
, &
ﬁí
 );

1888 
ext_Àn
 +
ﬁí
;

1891 #i‡
	`deföed
(
POLARSSL_SSL_TRUNCATED_HMAC
)

1892 
	`s¶_wrôe_åunˇãd_hmac_ext
–
s¶
, 
p
 + 2 + 
ext_Àn
, &
ﬁí
 );

1893 
ext_Àn
 +
ﬁí
;

1896 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

1897 
	`s¶_wrôe_£ssi⁄_tickë_ext
–
s¶
, 
p
 + 2 + 
ext_Àn
, &
ﬁí
 );

1898 
ext_Àn
 +
ﬁí
;

1901 #i‡
	`deföed
(
POLARSSL_ECDH_C
Ë|| deföed(
POLARSSL_ECDSA_C
)

1902 
	`s¶_wrôe_suµ‹ãd_poöt_f‹m©s_ext
–
s¶
, 
p
 + 2 + 
ext_Àn
, &
ﬁí
 );

1903 
ext_Àn
 +
ﬁí
;

1906 #i‡
	`deföed
(
POLARSSL_SSL_ALPN
)

1907 
	`s¶_wrôe_Æ≤_ext
–
s¶
, 
p
 + 2 + 
ext_Àn
, &
ﬁí
 );

1908 
ext_Àn
 +
ﬁí
;

1911 
	`SSL_DEBUG_MSG
–3, ( "£rvî hñlo,ÅŸÆÉxãnsi⁄Üígth: %d", 
ext_Àn
 ) );

1913 if–
ext_Àn
 > 0 )

1915 *
p
++ = ()––
ext_Àn
 >> 8 ) & 0xFF );

1916 *
p
++ = ()––
ext_Àn
 ) & 0xFF );

1917 
p
 +
ext_Àn
;

1920 
s¶
->
out_msgÀn
 = 
p
 - 
buf
;

1921 
s¶
->
out_msgty≥
 = 
SSL_MSG_HANDSHAKE
;

1922 
s¶
->
out_msg
[0] = 
SSL_HS_SERVER_HELLO
;

1924 
ªt
 = 
	`s¶_wrôe_ªc‹d
–
s¶
 );

1926 
	`SSL_DEBUG_MSG
( 2, ( "<= write server hello" ) );

1928 –
ªt
 );

1929 
	}
}

1931 #i‡!
deföed
(
POLARSSL_KEY_EXCHANGE_RSA_ENABLED
) && \

1932 !
deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
) && \

1933 !
deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) && \

1934 !
	$deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
)

1935 
	$s¶_wrôe_˚πifiˇã_ªque°
–
s¶_c⁄ãxt
 *
s¶
 )

1937 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
 = 
s¶
->
å™sf‹m_√gŸüã
->ciphersuite_info;

1939 
	`SSL_DEBUG_MSG
( 2, ( "=> write certificateÑequest" ) );

1941 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_PSK
 ||

1942 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA_PSK
 ||

1943 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 ||

1944 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 )

1946 
	`SSL_DEBUG_MSG
( 2, ( "<= skip write certificateÑequest" ) );

1947 
s¶
->
°©e
++;

1951 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

1952 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

1953 
	}
}

1955 
	$s¶_wrôe_˚πifiˇã_ªque°
–
s¶_c⁄ãxt
 *
s¶
 )

1957 
ªt
 = 
POLARSSL_ERR_SSL_FEATURE_UNAVAILABLE
;

1958 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
 = 
s¶
->
å™sf‹m_√gŸüã
->ciphersuite_info;

1959 
size_t
 
dn_size
, 
tŸÆ_dn_size
;

1960 
size_t
 
˘_Àn
, 
ß_Àn
;

1961 *
buf
, *
p
;

1962 c⁄° 
x509_¸t
 *
¸t
;

1964 
	`SSL_DEBUG_MSG
( 2, ( "=> write certificateÑequest" ) );

1966 
s¶
->
°©e
++;

1968 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_PSK
 ||

1969 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA_PSK
 ||

1970 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 ||

1971 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 ||

1972 
s¶
->
authmode
 =
SSL_VERIFY_NONE
 )

1974 
	`SSL_DEBUG_MSG
( 2, ( "<= skip write certificateÑequest" ) );

1990 
buf
 = 
s¶
->
out_msg
;

1991 
p
 = 
buf
 + 4;

1999 
˘_Àn
 = 0;

2001 #i‡
	`deföed
(
POLARSSL_RSA_C
)

2002 
p
[1 + 
˘_Àn
++] = 
SSL_CERT_TYPE_RSA_SIGN
;

2004 #i‡
	`deföed
(
POLARSSL_ECDSA_C
)

2005 
p
[1 + 
˘_Àn
++] = 
SSL_CERT_TYPE_ECDSA_SIGN
;

2008 
p
[0] = (Ë
˘_Àn
++;

2009 
p
 +
˘_Àn
;

2011 
ß_Àn
 = 0;

2012 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

2026 if–
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_3
 )

2032 
s¶
->
h™dshake
->
vîify_sig_Æg
 = 
SSL_HASH_SHA256
;

2034 if–
s¶
->
å™sf‹m_√gŸüã
->
cùhîsuôe_öfo
->
mac
 ==

2035 
POLARSSL_MD_SHA384
 )

2037 
s¶
->
h™dshake
->
vîify_sig_Æg
 = 
SSL_HASH_SHA384
;

2043 #i‡
	`deföed
(
POLARSSL_RSA_C
)

2044 
p
[2 + 
ß_Àn
++] = 
s¶
->
h™dshake
->
vîify_sig_Æg
;

2045 
p
[2 + 
ß_Àn
++] = 
SSL_SIG_RSA
;

2047 #i‡
	`deföed
(
POLARSSL_ECDSA_C
)

2048 
p
[2 + 
ß_Àn
++] = 
s¶
->
h™dshake
->
vîify_sig_Æg
;

2049 
p
[2 + 
ß_Àn
++] = 
SSL_SIG_ECDSA
;

2052 
p
[0] = ()–
ß_Àn
 >> 8 );

2053 
p
[1] = ()–
ß_Àn
 );

2054 
ß_Àn
 += 2;

2055 
p
 +
ß_Àn
;

2063 
p
 += 2;

2064 
¸t
 = 
s¶
->
ˇ_chaö
;

2066 
tŸÆ_dn_size
 = 0;

2067  
¸t
 !
NULL
 && cπ->
vîsi⁄
 != 0 )

2069 if–
p
 - 
buf
 > 4096 )

2072 
dn_size
 = 
¸t
->
subje˘_øw
.
Àn
;

2073 *
p
++ = ()–
dn_size
 >> 8 );

2074 *
p
++ = ()–
dn_size
 );

2075 
	`mem˝y
–
p
, 
¸t
->
subje˘_øw
.p, 
dn_size
 );

2076 
p
 +
dn_size
;

2078 
	`SSL_DEBUG_BUF
–3, "ªque°ed DN", 
p
, 
dn_size
 );

2080 
tŸÆ_dn_size
 +2 + 
dn_size
;

2081 
¸t
 = cπ->
√xt
;

2084 
s¶
->
out_msgÀn
 = 
p
 - 
buf
;

2085 
s¶
->
out_msgty≥
 = 
SSL_MSG_HANDSHAKE
;

2086 
s¶
->
out_msg
[0] = 
SSL_HS_CERTIFICATE_REQUEST
;

2087 
s¶
->
out_msg
[4 + 
˘_Àn
 + 
ß_Àn
] = ()–
tŸÆ_dn_size
 >> 8 );

2088 
s¶
->
out_msg
[5 + 
˘_Àn
 + 
ß_Àn
] = ()–
tŸÆ_dn_size
 );

2090 
ªt
 = 
	`s¶_wrôe_ªc‹d
–
s¶
 );

2092 
	`SSL_DEBUG_MSG
( 2, ( "<= write certificateÑequest" ) );

2094 –
ªt
 );

2095 
	}
}

2097 !
	gPOLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
 &&

2098 !
	gPOLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
 &&

2099 !
	gPOLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
 */

2101 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_RSA_ENABLED
) || \

2102 
	$deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
)

2103 
	$s¶_gë_ecdh_∑øms_‰om_˚π
–
s¶_c⁄ãxt
 *
s¶
 )

2105 
ªt
;

2107 if–! 
	`pk_ˇn_do
–
	`s¶_own_key
–
s¶
 ), 
POLARSSL_PK_ECKEY
 ) )

2109 
	`SSL_DEBUG_MSG
( 1, ( "server keyÇot ECDH capable" ) );

2110 –
POLARSSL_ERR_SSL_PK_TYPE_MISMATCH
 );

2113 if––
ªt
 = 
	`ecdh_gë_∑øms
–&
s¶
->
h™dshake
->
ecdh_˘x
,

2114 
	`pk_ec
–*
	`s¶_own_key
–
s¶
 ) ),

2115 
POLARSSL_ECDH_OURS
 ) ) != 0 )

2117 
	`SSL_DEBUG_RET
–1, ( "ecdh_gë_∑øms" ), 
ªt
 );

2118 –
ªt
 );

2122 
	}
}

2124 
	gPOLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
 */

2126 
	$s¶_wrôe_£rvî_key_exch™ge
–
s¶_c⁄ãxt
 *
s¶
 )

2128 
ªt
;

2129 
size_t
 
n
 = 0;

2130 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
 =

2131 
s¶
->
å™sf‹m_√gŸüã
->
cùhîsuôe_öfo
;

2133 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
) || \

2134 
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
) || \

2135 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) || \

2136 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED
) || \

2137 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
)

2138 *
p
 = 
s¶
->
out_msg
 + 4;

2139 *
dig_sig√d
 = 
p
;

2140 
size_t
 
dig_sig√d_Àn
 = 0, 
Àn
;

2141 ((Ë
dig_sig√d
);

2142 ((Ë
dig_sig√d_Àn
);

2145 
	`SSL_DEBUG_MSG
( 2, ( "=> write server keyÉxchange" ) );

2147 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_RSA_ENABLED
) || \

2148 
	`deföed
(
POLARSSL_KEY_EXCHANGE_PSK_ENABLED
) || \

2149 
	`deföed
(
POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED
)

2150 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA
 ||

2151 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_PSK
 ||

2152 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA_PSK
 )

2154 
	`SSL_DEBUG_MSG
( 2, ( "<= skip write server keyÉxchange" ) );

2155 
s¶
->
°©e
++;

2160 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_RSA_ENABLED
) || \

2161 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
)

2162 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDH_RSA
 ||

2163 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
 )

2165 
	`s¶_gë_ecdh_∑øms_‰om_˚π
–
s¶
 );

2167 
	`SSL_DEBUG_MSG
( 2, ( "<= skip write server keyÉxchange" ) );

2168 
s¶
->
°©e
++;

2173 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
) || \

2174 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED
)

2175 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 ||

2176 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 )

2179 *(
p
++) = 0x00;

2180 *(
p
++) = 0x00;

2182 
n
 += 2;

2185 
POLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED
 */

2187 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
) || \

2188 
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
)

2189 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_RSA
 ||

2190 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 )

2201 if––
ªt
 = 
	`mpi_c›y
–&
s¶
->
h™dshake
->
dhm_˘x
.
P
, &s¶->
dhm_P
 ) ) != 0 ||

2202 –
ªt
 = 
	`mpi_c›y
–&
s¶
->
h™dshake
->
dhm_˘x
.
G
, &s¶->
dhm_G
 ) ) != 0 )

2204 
	`SSL_DEBUG_RET
–1, "mpi_c›y", 
ªt
 );

2205 –
ªt
 );

2208 if––
ªt
 = 
	`dhm_make_∑øms
–&
s¶
->
h™dshake
->
dhm_˘x
,

2209 (Ë
	`mpi_size
–&
s¶
->
h™dshake
->
dhm_˘x
.
P
 ),

2210 
p
, &
Àn
, 
s¶
->
f_∫g
, s¶->
p_∫g
 ) ) != 0 )

2212 
	`SSL_DEBUG_RET
–1, "dhm_make_∑øms", 
ªt
 );

2213 –
ªt
 );

2216 
dig_sig√d
 = 
p
;

2217 
dig_sig√d_Àn
 = 
Àn
;

2219 
p
 +
Àn
;

2220 
n
 +
Àn
;

2222 
	`SSL_DEBUG_MPI
–3, "DHM: X ", &
s¶
->
h™dshake
->
dhm_˘x
.
X
 );

2223 
	`SSL_DEBUG_MPI
–3, "DHM: P ", &
s¶
->
h™dshake
->
dhm_˘x
.
P
 );

2224 
	`SSL_DEBUG_MPI
–3, "DHM: G ", &
s¶
->
h™dshake
->
dhm_˘x
.
G
 );

2225 
	`SSL_DEBUG_MPI
–3, "DHM: GX", &
s¶
->
h™dshake
->
dhm_˘x
.
GX
 );

2228 
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
 */

2230 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE__SOME__ECDHE_ENABLED
)

2231 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
 ||

2232 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
 ||

2233 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 )

2243 c⁄° 
e˝_curve_öfo
 **
curve
 = 
NULL
;

2244 #i‡
	`deföed
(
POLARSSL_SSL_SET_CURVES
)

2245 c⁄° 
e˝_group_id
 *
gid
;

2248  
gid
 = 
s¶
->
curve_li°
; *gid !
POLARSSL_ECP_DP_NONE
; gid++ )

2249  
curve
 = 
s¶
->
h™dshake
->
curves
; *curvê!
NULL
; curve++ )

2250 if–(*
curve
)->
gΩ_id
 =*
gid
 )

2251 
curve_m©chög_d⁄e
;

2253 
curve_m©chög_d⁄e
:

2255 
curve
 = 
s¶
->
h™dshake
->
curves
;

2258 if–*
curve
 =
NULL
 )

2260 
	`SSL_DEBUG_MSG
( 1, ( "no matching curve for ECDHE" ) );

2261 –
POLARSSL_ERR_SSL_NO_CIPHER_CHOSEN
 );

2264 
	`SSL_DEBUG_MSG
–2, ( "ECDHE curve: %s", (*
curve
)->
«me
 ) );

2266 if––
ªt
 = 
	`e˝_u£_known_dp
–&
s¶
->
h™dshake
->
ecdh_˘x
.
gΩ
,

2267 (*
curve
)->
gΩ_id
 ) ) != 0 )

2269 
	`SSL_DEBUG_RET
–1, "e˝_u£_known_dp", 
ªt
 );

2270 –
ªt
 );

2273 if––
ªt
 = 
	`ecdh_make_∑øms
–&
s¶
->
h™dshake
->
ecdh_˘x
, &
Àn
,

2274 
p
, 
SSL_MAX_CONTENT_LEN
 - 
n
,

2275 
s¶
->
f_∫g
, s¶->
p_∫g
 ) ) != 0 )

2277 
	`SSL_DEBUG_RET
–1, "ecdh_make_∑øms", 
ªt
 );

2278 –
ªt
 );

2281 
dig_sig√d
 = 
p
;

2282 
dig_sig√d_Àn
 = 
Àn
;

2284 
p
 +
Àn
;

2285 
n
 +
Àn
;

2287 
	`SSL_DEBUG_ECP
–3, "ECDH: Q ", &
s¶
->
h™dshake
->
ecdh_˘x
.
Q
 );

2291 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
) || \

2292 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) || \

2293 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
)

2294 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_RSA
 ||

2295 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
 ||

2296 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
 )

2298 
size_t
 
sig«tuª_Àn
 = 0;

2299 
hashÀn
 = 0;

2300 
hash
[64];

2301 
md_ty≥_t
 
md_Æg
 = 
POLARSSL_MD_NONE
;

2306 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

2307 if–
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_3
 )

2309 
md_Æg
 = 
	`s¶_md_Æg_‰om_hash
–
s¶
->
h™dshake
->
sig_Æg
 );

2311 if–
md_Æg
 =
POLARSSL_MD_NONE
 )

2313 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

2314 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

2319 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1
) || \

2320 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
)

2321 if–
cùhîsuôe_öfo
->
key_exch™ge
 ==

2322 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
 )

2324 
md_Æg
 = 
POLARSSL_MD_SHA1
;

2329 
md_Æg
 = 
POLARSSL_MD_NONE
;

2335 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1
) || \

2336 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
)

2337 if–
md_Æg
 =
POLARSSL_MD_NONE
 )

2339 
md5_c⁄ãxt
 
md5
;

2340 
sha1_c⁄ãxt
 
sha1
;

2342 
	`md5_öô
–&
md5
 );

2343 
	`sha1_öô
–&
sha1
 );

2358 
	`md5_°¨ts
–&
md5
 );

2359 
	`md5_upd©e
–&
md5
, 
s¶
->
h™dshake
->
øndbyãs
, 64 );

2360 
	`md5_upd©e
–&
md5
, 
dig_sig√d
, 
dig_sig√d_Àn
 );

2361 
	`md5_föish
–&
md5
, 
hash
 );

2363 
	`sha1_°¨ts
–&
sha1
 );

2364 
	`sha1_upd©e
–&
sha1
, 
s¶
->
h™dshake
->
øndbyãs
, 64 );

2365 
	`sha1_upd©e
–&
sha1
, 
dig_sig√d
, 
dig_sig√d_Àn
 );

2366 
	`sha1_föish
–&
sha1
, 
hash
 + 16 );

2368 
hashÀn
 = 36;

2370 
	`md5_‰ì
–&
md5
 );

2371 
	`sha1_‰ì
–&
sha1
 );

2375 
POLARSSL_SSL_PROTO_TLS1_1
 */

2376 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_1
) || \

2377 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

2378 if–
md_Æg
 !
POLARSSL_MD_NONE
 )

2380 
md_c⁄ãxt_t
 
˘x
;

2381 c⁄° 
md_öfo_t
 *
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
md_Æg
 );

2383 
	`md_öô
–&
˘x
 );

2386 
hashÀn
 = 0;

2395 if––
ªt
 = 
	`md_öô_˘x
–&
˘x
, 
md_öfo
 ) ) != 0 )

2397 
	`SSL_DEBUG_RET
–1, "md_öô_˘x", 
ªt
 );

2398 –
ªt
 );

2401 
	`md_°¨ts
–&
˘x
 );

2402 
	`md_upd©e
–&
˘x
, 
s¶
->
h™dshake
->
øndbyãs
, 64 );

2403 
	`md_upd©e
–&
˘x
, 
dig_sig√d
, 
dig_sig√d_Àn
 );

2404 
	`md_föish
–&
˘x
, 
hash
 );

2405 
	`md_‰ì
–&
˘x
 );

2409 
POLARSSL_SSL_PROTO_TLS1_2
 */

2411 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

2412 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

2415 
	`SSL_DEBUG_BUF
–3, "∑ømëî†hash", 
hash
, 
hashÀn
 != 0 ? hashlen :

2416 (Ë–
	`md_öfo_‰om_ty≥
–
md_Æg
 ) )->
size
 );

2421 if–
	`s¶_own_key
–
s¶
 ) =
NULL
 )

2423 
	`SSL_DEBUG_MSG
( 1, ( "gotÇoÖrivate key" ) );

2424 –
POLARSSL_ERR_SSL_PRIVATE_KEY_REQUIRED
 );

2427 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

2428 if–
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_3
 )

2430 *(
p
++Ë
s¶
->
h™dshake
->
sig_Æg
;

2431 *(
p
++Ë
	`s¶_sig_‰om_pk
–
	`s¶_own_key
–
s¶
 ) );

2433 
n
 += 2;

2437 if––
ªt
 = 
	`pk_sign
–
	`s¶_own_key
–
s¶
 ), 
md_Æg
, 
hash
, 
hashÀn
,

2438 
p
 + 2 , &
sig«tuª_Àn
,

2439 
s¶
->
f_∫g
, s¶->
p_∫g
 ) ) != 0 )

2441 
	`SSL_DEBUG_RET
–1, "pk_sign", 
ªt
 );

2442 –
ªt
 );

2445 *(
p
++Ë()–
sig«tuª_Àn
 >> 8 );

2446 *(
p
++Ë()–
sig«tuª_Àn
 );

2447 
n
 += 2;

2449 
	`SSL_DEBUG_BUF
–3, "my sig«tuª", 
p
, 
sig«tuª_Àn
 );

2451 
p
 +
sig«tuª_Àn
;

2452 
n
 +
sig«tuª_Àn
;

2455 
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
 ||

2456 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
 */

2458 
s¶
->
out_msgÀn
 = 4 + 
n
;

2459 
s¶
->
out_msgty≥
 = 
SSL_MSG_HANDSHAKE
;

2460 
s¶
->
out_msg
[0] = 
SSL_HS_SERVER_KEY_EXCHANGE
;

2462 
s¶
->
°©e
++;

2464 if––
ªt
 = 
	`s¶_wrôe_ªc‹d
–
s¶
 ) ) != 0 )

2466 
	`SSL_DEBUG_RET
–1, "s¶_wrôe_ªc‹d", 
ªt
 );

2467 –
ªt
 );

2470 
	`SSL_DEBUG_MSG
( 2, ( "<= write server keyÉxchange" ) );

2473 
	}
}

2475 
	$s¶_wrôe_£rvî_hñlo_d⁄e
–
s¶_c⁄ãxt
 *
s¶
 )

2477 
ªt
;

2479 
	`SSL_DEBUG_MSG
( 2, ( "=> write server hello done" ) );

2481 
s¶
->
out_msgÀn
 = 4;

2482 
s¶
->
out_msgty≥
 = 
SSL_MSG_HANDSHAKE
;

2483 
s¶
->
out_msg
[0] = 
SSL_HS_SERVER_HELLO_DONE
;

2485 
s¶
->
°©e
++;

2487 if––
ªt
 = 
	`s¶_wrôe_ªc‹d
–
s¶
 ) ) != 0 )

2489 
	`SSL_DEBUG_RET
–1, "s¶_wrôe_ªc‹d", 
ªt
 );

2490 –
ªt
 );

2493 
	`SSL_DEBUG_MSG
( 2, ( "<= write server hello done" ) );

2496 
	}
}

2498 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
) || \

2499 
	$deföed
(
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
)

2500 
	$s¶_∑r£_˛õ¡_dh_public
–
s¶_c⁄ãxt
 *
s¶
, **
p
,

2501 c⁄° *
íd
 )

2503 
ªt
 = 
POLARSSL_ERR_SSL_FEATURE_UNAVAILABLE
;

2504 
size_t
 
n
;

2509 if–*
p
 + 2 > 
íd
 )

2511 
	`SSL_DEBUG_MSG
( 1, ( "bad client keyÉxchange message" ) );

2512 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE
 );

2515 
n
 = ( (*
p
)[0] << 8 ) | (*p)[1];

2516 *
p
 += 2;

2518 if–*
p
 + 
n
 > 
íd
 )

2520 
	`SSL_DEBUG_MSG
( 1, ( "bad client keyÉxchange message" ) );

2521 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE
 );

2524 if––
ªt
 = 
	`dhm_ªad_public
–&
s¶
->
h™dshake
->
dhm_˘x
, *
p
, 
n
 ) ) != 0 )

2526 
	`SSL_DEBUG_RET
–1, "dhm_ªad_public", 
ªt
 );

2527 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE_RP
 );

2530 *
p
 +
n
;

2532 
	`SSL_DEBUG_MPI
–3, "DHM: GY", &
s¶
->
h™dshake
->
dhm_˘x
.
GY
 );

2534 –
ªt
 );

2535 
	}
}

2537 
	gPOLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
 */

2539 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE_RSA_ENABLED
) || \

2540 
	$deföed
(
POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED
)

2541 
	$s¶_∑r£_í¸y±ed_pms
–
s¶_c⁄ãxt
 *
s¶
,

2542 c⁄° *
p
,

2543 c⁄° *
íd
,

2544 
size_t
 
pms_off£t
 )

2546 
ªt
;

2547 
size_t
 
Àn
 = 
	`pk_gë_Àn
–
	`s¶_own_key
–
s¶
 ) );

2548 *
pms
 = 
s¶
->
h™dshake
->
¥ema°î
 + 
pms_off£t
;

2550 if–! 
	`pk_ˇn_do
–
	`s¶_own_key
–
s¶
 ), 
POLARSSL_PK_RSA
 ) )

2552 
	`SSL_DEBUG_MSG
( 1, ( "gotÇo RSAÖrivate key" ) );

2553 –
POLARSSL_ERR_SSL_PRIVATE_KEY_REQUIRED
 );

2559 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_1
) || \

2560 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

2561 if–
s¶
->
mö‹_vî
 !
SSL_MINOR_VERSION_0
 )

2563 if–*
p
++ !––
Àn
 >> 8 ) & 0xFF ) ||

2564 *
p
++ !––
Àn
 ) & 0xFF ) )

2566 
	`SSL_DEBUG_MSG
( 1, ( "bad client keyÉxchange message" ) );

2567 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE
 );

2572 if–
p
 + 
Àn
 !
íd
 )

2574 
	`SSL_DEBUG_MSG
( 1, ( "bad client keyÉxchange message" ) );

2575 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE
 );

2578 
ªt
 = 
	`pk_de¸y±
–
	`s¶_own_key
–
s¶
 ), 
p
, 
Àn
,

2579 
pms
, &
s¶
->
h™dshake
->
pm¶í
,

2580 –
s¶
->
h™dshake
->
¥ema°î
 ) - 
pms_off£t
,

2581 
s¶
->
f_∫g
, s¶->
p_∫g
 );

2583 if–
ªt
 !0 || 
s¶
->
h™dshake
->
pm¶í
 != 48 ||

2584 
pms
[0] !
s¶
->
h™dshake
->
max_maj‹_vî
 ||

2585 
pms
[1] !
s¶
->
h™dshake
->
max_mö‹_vî
 )

2587 
	`SSL_DEBUG_MSG
( 1, ( "bad client keyÉxchange message" ) );

2595 
s¶
->
h™dshake
->
pm¶í
 = 48;

2597 
ªt
 = 
s¶
->
	`f_∫g
–s¶->
p_∫g
, 
pms
, s¶->
h™dshake
->
pm¶í
 );

2598 if–
ªt
 != 0 )

2599 –
ªt
 );

2602 –
ªt
 );

2603 
	}
}

2605 
	gPOLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED
 */

2607 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

2608 
	$s¶_∑r£_˛õ¡_psk_idítôy
–
s¶_c⁄ãxt
 *
s¶
, **
p
,

2609 c⁄° *
íd
 )

2611 
ªt
 = 0;

2612 
size_t
 
n
;

2614 if–
s¶
->
f_psk
 =
NULL
 &&

2615 –
s¶
->
psk
 =
NULL
 || s¶->
psk_idítôy
 == NULL ||

2616 
s¶
->
psk_idítôy_Àn
 =0 || s¶->
psk_Àn
 == 0 ) )

2618 
	`SSL_DEBUG_MSG
( 1, ( "gotÇoÖre-shared key" ) );

2619 –
POLARSSL_ERR_SSL_PRIVATE_KEY_REQUIRED
 );

2625 if–*
p
 + 2 > 
íd
 )

2627 
	`SSL_DEBUG_MSG
( 1, ( "bad client keyÉxchange message" ) );

2628 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE
 );

2631 
n
 = ( (*
p
)[0] << 8 ) | (*p)[1];

2632 *
p
 += 2;

2634 if–
n
 < 1 ||Ç > 65535 || *
p
 +Ç > 
íd
 )

2636 
	`SSL_DEBUG_MSG
( 1, ( "bad client keyÉxchange message" ) );

2637 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE
 );

2640 if–
s¶
->
f_psk
 !
NULL
 )

2642 if–
s¶
->
	`f_psk
–s¶->
p_psk
, s¶, *
p
, 
n
 ) != 0 )

2643 
ªt
 = 
POLARSSL_ERR_SSL_UNKNOWN_IDENTITY
;

2649 if–
n
 !
s¶
->
psk_idítôy_Àn
 ||

2650 
	`ß„r_memcmp
–
s¶
->
psk_idítôy
, *
p
, 
n
 ) != 0 )

2652 
ªt
 = 
POLARSSL_ERR_SSL_UNKNOWN_IDENTITY
;

2656 if–
ªt
 =
POLARSSL_ERR_SSL_UNKNOWN_IDENTITY
 )

2658 
	`SSL_DEBUG_BUF
–3, "Unknow¿PSK idítôy", *
p
, 
n
 );

2659 if––
ªt
 = 
	`s¶_£nd_Æît_mesßge
–
s¶
,

2660 
SSL_ALERT_LEVEL_FATAL
,

2661 
SSL_ALERT_MSG_UNKNOWN_PSK_IDENTITY
 ) ) != 0 )

2663 –
ªt
 );

2666 –
POLARSSL_ERR_SSL_UNKNOWN_IDENTITY
 );

2669 *
p
 +
n
;

2672 
	}
}

2675 
	$s¶_∑r£_˛õ¡_key_exch™ge
–
s¶_c⁄ãxt
 *
s¶
 )

2677 
ªt
;

2678 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
;

2680 
cùhîsuôe_öfo
 = 
s¶
->
å™sf‹m_√gŸüã
->ciphersuite_info;

2682 
	`SSL_DEBUG_MSG
( 2, ( "=>Öarse client keyÉxchange" ) );

2684 if––
ªt
 = 
	`s¶_ªad_ªc‹d
–
s¶
 ) ) != 0 )

2686 
	`SSL_DEBUG_RET
–1, "s¶_ªad_ªc‹d", 
ªt
 );

2687 –
ªt
 );

2690 if–
s¶
->
ö_msgty≥
 !
SSL_MSG_HANDSHAKE
 )

2692 
	`SSL_DEBUG_MSG
( 1, ( "bad client keyÉxchange message" ) );

2693 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE
 );

2696 if–
s¶
->
ö_msg
[0] !
SSL_HS_CLIENT_KEY_EXCHANGE
 )

2698 
	`SSL_DEBUG_MSG
( 1, ( "bad client keyÉxchange message" ) );

2699 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE
 );

2702 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
)

2703 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_RSA
 )

2705 *
p
 = 
s¶
->
ö_msg
 + 4;

2706 *
íd
 = 
s¶
->
ö_msg
 + s¶->
ö_h¶í
;

2708 if––
ªt
 = 
	`s¶_∑r£_˛õ¡_dh_public
–
s¶
, &
p
, 
íd
 ) ) != 0 )

2710 
	`SSL_DEBUG_RET
–1, ( "s¶_∑r£_˛õ¡_dh_public" ), 
ªt
 );

2711 –
ªt
 );

2714 if–
p
 !
íd
 )

2716 
	`SSL_DEBUG_MSG
( 1, ( "bad client keyÉxchange" ) );

2717 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE
 );

2720 
s¶
->
h™dshake
->
pm¶í
 = 
POLARSSL_PREMASTER_SIZE
;

2722 if––
ªt
 = 
	`dhm_ˇlc_£¸ë
–&
s¶
->
h™dshake
->
dhm_˘x
,

2723 
s¶
->
h™dshake
->
¥ema°î
,

2724 &
s¶
->
h™dshake
->
pm¶í
,

2725 
s¶
->
f_∫g
, s¶->
p_∫g
 ) ) != 0 )

2727 
	`SSL_DEBUG_RET
–1, "dhm_ˇlc_£¸ë", 
ªt
 );

2728 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE_CS
 );

2731 
	`SSL_DEBUG_MPI
–3, "DHM: K ", &
s¶
->
h™dshake
->
dhm_˘x
.
K
 );

2735 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) || \

2736 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
) || \

2737 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_RSA_ENABLED
) || \

2738 
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
)

2739 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
 ||

2740 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
 ||

2741 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDH_RSA
 ||

2742 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
 )

2744 if––
ªt
 = 
	`ecdh_ªad_public
–&
s¶
->
h™dshake
->
ecdh_˘x
,

2745 
s¶
->
ö_msg
 + 4, s¶->
ö_h¶í
 - 4 ) ) != 0 )

2747 
	`SSL_DEBUG_RET
–1, "ecdh_ªad_public", 
ªt
 );

2748 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE_RP
 );

2751 
	`SSL_DEBUG_ECP
–3, "ECDH: Q∞", &
s¶
->
h™dshake
->
ecdh_˘x
.
Qp
 );

2753 if––
ªt
 = 
	`ecdh_ˇlc_£¸ë
–&
s¶
->
h™dshake
->
ecdh_˘x
,

2754 &
s¶
->
h™dshake
->
pm¶í
,

2755 
s¶
->
h™dshake
->
¥ema°î
,

2756 
POLARSSL_MPI_MAX_SIZE
,

2757 
s¶
->
f_∫g
, s¶->
p_∫g
 ) ) != 0 )

2759 
	`SSL_DEBUG_RET
–1, "ecdh_ˇlc_£¸ë", 
ªt
 );

2760 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE_CS
 );

2763 
	`SSL_DEBUG_MPI
–3, "ECDH: z ", &
s¶
->
h™dshake
->
ecdh_˘x
.
z
 );

2767 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
 ||

2768 
POLARSSL_KEY_EXCHANGE_ECDH_RSA_ENABLED
 ||

2769 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
 */

2770 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_PSK_ENABLED
)

2771 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_PSK
 )

2773 *
p
 = 
s¶
->
ö_msg
 + 4;

2774 *
íd
 = 
s¶
->
ö_msg
 + s¶->
ö_h¶í
;

2776 if––
ªt
 = 
	`s¶_∑r£_˛õ¡_psk_idítôy
–
s¶
, &
p
, 
íd
 ) ) != 0 )

2778 
	`SSL_DEBUG_RET
–1, ( "s¶_∑r£_˛õ¡_psk_idítôy" ), 
ªt
 );

2779 –
ªt
 );

2782 if–
p
 !
íd
 )

2784 
	`SSL_DEBUG_MSG
( 1, ( "bad client keyÉxchange" ) );

2785 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE
 );

2788 if––
ªt
 = 
	`s¶_psk_dîive_¥ema°î
–
s¶
,

2789 
cùhîsuôe_öfo
->
key_exch™ge
 ) ) != 0 )

2791 
	`SSL_DEBUG_RET
–1, "s¶_psk_dîive_¥ema°î", 
ªt
 );

2792 –
ªt
 );

2797 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED
)

2798 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA_PSK
 )

2800 *
p
 = 
s¶
->
ö_msg
 + 4;

2801 *
íd
 = 
s¶
->
ö_msg
 + s¶->
ö_h¶í
;

2803 if––
ªt
 = 
	`s¶_∑r£_˛õ¡_psk_idítôy
–
s¶
, &
p
, 
íd
 ) ) != 0 )

2805 
	`SSL_DEBUG_RET
–1, ( "s¶_∑r£_˛õ¡_psk_idítôy" ), 
ªt
 );

2806 –
ªt
 );

2809 if––
ªt
 = 
	`s¶_∑r£_í¸y±ed_pms
–
s¶
, 
p
, 
íd
, 2 ) ) != 0 )

2811 
	`SSL_DEBUG_RET
–1, ( "s¶_∑r£_í¸y±ed_pms" ), 
ªt
 );

2812 –
ªt
 );

2815 if––
ªt
 = 
	`s¶_psk_dîive_¥ema°î
–
s¶
,

2816 
cùhîsuôe_öfo
->
key_exch™ge
 ) ) != 0 )

2818 
	`SSL_DEBUG_RET
–1, "s¶_psk_dîive_¥ema°î", 
ªt
 );

2819 –
ªt
 );

2824 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
)

2825 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 )

2827 *
p
 = 
s¶
->
ö_msg
 + 4;

2828 *
íd
 = 
s¶
->
ö_msg
 + s¶->
ö_h¶í
;

2830 if––
ªt
 = 
	`s¶_∑r£_˛õ¡_psk_idítôy
–
s¶
, &
p
, 
íd
 ) ) != 0 )

2832 
	`SSL_DEBUG_RET
–1, ( "s¶_∑r£_˛õ¡_psk_idítôy" ), 
ªt
 );

2833 –
ªt
 );

2835 if––
ªt
 = 
	`s¶_∑r£_˛õ¡_dh_public
–
s¶
, &
p
, 
íd
 ) ) != 0 )

2837 
	`SSL_DEBUG_RET
–1, ( "s¶_∑r£_˛õ¡_dh_public" ), 
ªt
 );

2838 –
ªt
 );

2841 if–
p
 !
íd
 )

2843 
	`SSL_DEBUG_MSG
( 1, ( "bad client keyÉxchange" ) );

2844 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE
 );

2847 if––
ªt
 = 
	`s¶_psk_dîive_¥ema°î
–
s¶
,

2848 
cùhîsuôe_öfo
->
key_exch™ge
 ) ) != 0 )

2850 
	`SSL_DEBUG_RET
–1, "s¶_psk_dîive_¥ema°î", 
ªt
 );

2851 –
ªt
 );

2856 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED
)

2857 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 )

2859 *
p
 = 
s¶
->
ö_msg
 + 4;

2860 *
íd
 = 
s¶
->
ö_msg
 + s¶->
ö_h¶í
;

2862 if––
ªt
 = 
	`s¶_∑r£_˛õ¡_psk_idítôy
–
s¶
, &
p
, 
íd
 ) ) != 0 )

2864 
	`SSL_DEBUG_RET
–1, ( "s¶_∑r£_˛õ¡_psk_idítôy" ), 
ªt
 );

2865 –
ªt
 );

2868 if––
ªt
 = 
	`ecdh_ªad_public
–&
s¶
->
h™dshake
->
ecdh_˘x
,

2869 
p
, 
íd
 -Ö ) ) != 0 )

2871 
	`SSL_DEBUG_RET
–1, "ecdh_ªad_public", 
ªt
 );

2872 –
POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE_RP
 );

2875 
	`SSL_DEBUG_ECP
–3, "ECDH: Q∞", &
s¶
->
h™dshake
->
ecdh_˘x
.
Qp
 );

2877 if––
ªt
 = 
	`s¶_psk_dîive_¥ema°î
–
s¶
,

2878 
cùhîsuôe_öfo
->
key_exch™ge
 ) ) != 0 )

2880 
	`SSL_DEBUG_RET
–1, "s¶_psk_dîive_¥ema°î", 
ªt
 );

2881 –
ªt
 );

2886 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_RSA_ENABLED
)

2887 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA
 )

2889 if––
ªt
 = 
	`s¶_∑r£_í¸y±ed_pms
–
s¶
,

2890 
s¶
->
ö_msg
 + 4,

2891 
s¶
->
ö_msg
 + s¶->
ö_h¶í
,

2894 
	`SSL_DEBUG_RET
–1, ( "s¶_∑r£_∑r£_í¸y±ed_pms_£¸ë" ), 
ªt
 );

2895 –
ªt
 );

2901 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

2902 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

2905 if––
ªt
 = 
	`s¶_dîive_keys
–
s¶
 ) ) != 0 )

2907 
	`SSL_DEBUG_RET
–1, "s¶_dîive_keys", 
ªt
 );

2908 –
ªt
 );

2911 
s¶
->
°©e
++;

2913 
	`SSL_DEBUG_MSG
( 2, ( "<=Öarse client keyÉxchange" ) );

2916 
	}
}

2918 #i‡!
deföed
(
POLARSSL_KEY_EXCHANGE_RSA_ENABLED
) && \

2919 !
deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
) && \

2920 !
deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) && \

2921 !
	$deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
)

2922 
	$s¶_∑r£_˚πifiˇã_vîify
–
s¶_c⁄ãxt
 *
s¶
 )

2924 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
 = 
s¶
->
å™sf‹m_√gŸüã
->ciphersuite_info;

2926 
	`SSL_DEBUG_MSG
( 2, ( "=>Öarse certificate verify" ) );

2928 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_PSK
 ||

2929 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA_PSK
 ||

2930 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 ||

2931 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 )

2933 
	`SSL_DEBUG_MSG
( 2, ( "<= skipÖarse certificate verify" ) );

2934 
s¶
->
°©e
++;

2938 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

2939 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

2940 
	}
}

2942 
	$s¶_∑r£_˚πifiˇã_vîify
–
s¶_c⁄ãxt
 *
s¶
 )

2944 
ªt
 = 
POLARSSL_ERR_SSL_FEATURE_UNAVAILABLE
;

2945 
size_t
 
ß_Àn
, 
sig_Àn
;

2946 
hash
[48];

2947 *
hash_°¨t
 = 
hash
;

2948 
size_t
 
hashÀn
;

2949 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

2950 
pk_ty≥_t
 
pk_Æg
;

2952 
md_ty≥_t
 
md_Æg
;

2953 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
 = 
s¶
->
å™sf‹m_√gŸüã
->ciphersuite_info;

2955 
	`SSL_DEBUG_MSG
( 2, ( "=>Öarse certificate verify" ) );

2957 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_PSK
 ||

2958 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA_PSK
 ||

2959 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 ||

2960 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 )

2962 
	`SSL_DEBUG_MSG
( 2, ( "<= skipÖarse certificate verify" ) );

2963 
s¶
->
°©e
++;

2967 if–
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
 =
NULL
 )

2969 
	`SSL_DEBUG_MSG
( 2, ( "<= skipÖarse certificate verify" ) );

2970 
s¶
->
°©e
++;

2974 
s¶
->
h™dshake
->
	`ˇlc_vîify
–s¶, 
hash
 );

2976 if––
ªt
 = 
	`s¶_ªad_ªc‹d
–
s¶
 ) ) != 0 )

2978 
	`SSL_DEBUG_RET
–1, "s¶_ªad_ªc‹d", 
ªt
 );

2979 –
ªt
 );

2982 
s¶
->
°©e
++;

2984 if–
s¶
->
ö_msgty≥
 !
SSL_MSG_HANDSHAKE
 )

2986 
	`SSL_DEBUG_MSG
( 1, ( "bad certificate verify message" ) );

2987 –
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE_VERIFY
 );

2990 if–
s¶
->
ö_msg
[0] !
SSL_HS_CERTIFICATE_VERIFY
 )

2992 
	`SSL_DEBUG_MSG
( 1, ( "bad certificate verify message" ) );

2993 –
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE_VERIFY
 );

3004 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1
) || \

3005 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
)

3006 if–
s¶
->
mö‹_vî
 !
SSL_MINOR_VERSION_3
 )

3008 
ß_Àn
 = 0;

3010 
md_Æg
 = 
POLARSSL_MD_NONE
;

3011 
hashÀn
 = 36;

3014 if–
	`pk_ˇn_do
–&
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
->
pk
,

3015 
POLARSSL_PK_ECDSA
 ) )

3017 
hash_°¨t
 += 16;

3018 
hashÀn
 -= 16;

3019 
md_Æg
 = 
POLARSSL_MD_SHA1
;

3024 
POLARSSL_SSL_PROTO_TLS1_1
 */

3025 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

3026 if–
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_3
 )

3028 
ß_Àn
 = 2;

3033 if–
s¶
->
ö_msg
[4] !s¶->
h™dshake
->
vîify_sig_Æg
 )

3035 
	`SSL_DEBUG_MSG
( 1, ( "peerÇotádheringÅoÑequested sig_alg"

3037 –
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE_VERIFY
 );

3040 
md_Æg
 = 
	`s¶_md_Æg_‰om_hash
–
s¶
->
h™dshake
->
vîify_sig_Æg
 );

3043 
hashÀn
 = 0;

3048 if––
pk_Æg
 = 
	`s¶_pk_Æg_‰om_sig
–
s¶
->
ö_msg
[5] ) )

3049 =
POLARSSL_PK_NONE
 )

3051 
	`SSL_DEBUG_MSG
( 1, ( "peerÇotádheringÅoÑequested sig_alg"

3053 –
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE_VERIFY
 );

3059 if–! 
	`pk_ˇn_do
–&
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
->
pk
, 
pk_Æg
 ) )

3061 
	`SSL_DEBUG_MSG
( 1, ( "sig_alg doesn't match cert key" ) );

3062 –
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE_VERIFY
 );

3068 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

3069 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

3072 
sig_Àn
 = ( 
s¶
->
ö_msg
[4 + 
ß_Àn
] << 8 ) | ssl->in_msg[5 + sa_len];

3074 if–
ß_Àn
 + 
sig_Àn
 + 6 !
s¶
->
ö_h¶í
 )

3076 
	`SSL_DEBUG_MSG
( 1, ( "bad certificate verify message" ) );

3077 –
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE_VERIFY
 );

3080 if––
ªt
 = 
	`pk_vîify
–&
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
->
pk
,

3081 
md_Æg
, 
hash_°¨t
, 
hashÀn
,

3082 
s¶
->
ö_msg
 + 6 + 
ß_Àn
, 
sig_Àn
 ) ) != 0 )

3084 
	`SSL_DEBUG_RET
–1, "pk_vîify", 
ªt
 );

3085 –
ªt
 );

3088 
	`SSL_DEBUG_MSG
( 2, ( "<=Öarse certificate verify" ) );

3090 –
ªt
 );

3091 
	}
}

3093 !
	gPOLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
 &&

3094 !
	gPOLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
 */

3096 #i‡
deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

3097 
	$s¶_wrôe_√w_£ssi⁄_tickë
–
s¶_c⁄ãxt
 *
s¶
 )

3099 
ªt
;

3100 
size_t
 
éí
;

3101 
uöt32_t
 
li„time
 = (uöt32_tË
s¶
->
tickë_li„time
;

3103 
	`SSL_DEBUG_MSG
( 2, ( "=> writeÇew sessionÅicket" ) );

3105 
s¶
->
out_msgty≥
 = 
SSL_MSG_HANDSHAKE
;

3106 
s¶
->
out_msg
[0] = 
SSL_HS_NEW_SESSION_TICKET
;

3119 
s¶
->
out_msg
[4] = ( 
li„time
 >> 24 ) & 0xFF;

3120 
s¶
->
out_msg
[5] = ( 
li„time
 >> 16 ) & 0xFF;

3121 
s¶
->
out_msg
[6] = ( 
li„time
 >> 8 ) & 0xFF;

3122 
s¶
->
out_msg
[7] = ( 
li„time
 ) & 0xFF;

3124 if––
ªt
 = 
	`s¶_wrôe_tickë
–
s¶
, &
éí
 ) ) != 0 )

3126 
	`SSL_DEBUG_RET
–1, "s¶_wrôe_tickë", 
ªt
 );

3127 
éí
 = 0;

3130 
s¶
->
out_msg
[8] = ()––
éí
 >> 8 ) & 0xFF );

3131 
s¶
->
out_msg
[9] = ()––
éí
 ) & 0xFF );

3133 
s¶
->
out_msgÀn
 = 10 + 
éí
;

3139 
s¶
->
h™dshake
->
√w_£ssi⁄_tickë
 = 0;

3141 if––
ªt
 = 
	`s¶_wrôe_ªc‹d
–
s¶
 ) ) != 0 )

3143 
	`SSL_DEBUG_RET
–1, "s¶_wrôe_ªc‹d", 
ªt
 );

3144 –
ªt
 );

3147 
	`SSL_DEBUG_MSG
( 2, ( "<= writeÇew sessionÅicket" ) );

3150 
	}
}

3156 
	$s¶_h™dshake_£rvî_°ï
–
s¶_c⁄ãxt
 *
s¶
 )

3158 
ªt
 = 0;

3160 if–
s¶
->
°©e
 =
SSL_HANDSHAKE_OVER
 )

3161 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

3163 
	`SSL_DEBUG_MSG
–2, ( "£rvî sèã: %d", 
s¶
->
°©e
 ) );

3165 if––
ªt
 = 
	`s¶_Êush_ouçut
–
s¶
 ) ) != 0 )

3166 –
ªt
 );

3168  
s¶
->
°©e
 )

3170 
SSL_HELLO_REQUEST
:

3171 
s¶
->
°©e
 = 
SSL_CLIENT_HELLO
;

3177 
SSL_CLIENT_HELLO
:

3178 
ªt
 = 
	`s¶_∑r£_˛õ¡_hñlo
–
s¶
 );

3188 
SSL_SERVER_HELLO
:

3189 
ªt
 = 
	`s¶_wrôe_£rvî_hñlo
–
s¶
 );

3192 
SSL_SERVER_CERTIFICATE
:

3193 
ªt
 = 
	`s¶_wrôe_˚πifiˇã
–
s¶
 );

3196 
SSL_SERVER_KEY_EXCHANGE
:

3197 
ªt
 = 
	`s¶_wrôe_£rvî_key_exch™ge
–
s¶
 );

3200 
SSL_CERTIFICATE_REQUEST
:

3201 
ªt
 = 
	`s¶_wrôe_˚πifiˇã_ªque°
–
s¶
 );

3204 
SSL_SERVER_HELLO_DONE
:

3205 
ªt
 = 
	`s¶_wrôe_£rvî_hñlo_d⁄e
–
s¶
 );

3215 
SSL_CLIENT_CERTIFICATE
:

3216 
ªt
 = 
	`s¶_∑r£_˚πifiˇã
–
s¶
 );

3219 
SSL_CLIENT_KEY_EXCHANGE
:

3220 
ªt
 = 
	`s¶_∑r£_˛õ¡_key_exch™ge
–
s¶
 );

3223 
SSL_CERTIFICATE_VERIFY
:

3224 
ªt
 = 
	`s¶_∑r£_˚πifiˇã_vîify
–
s¶
 );

3227 
SSL_CLIENT_CHANGE_CIPHER_SPEC
:

3228 
ªt
 = 
	`s¶_∑r£_ch™ge_cùhî_•ec
–
s¶
 );

3231 
SSL_CLIENT_FINISHED
:

3232 
ªt
 = 
	`s¶_∑r£_föished
–
s¶
 );

3240 
SSL_SERVER_CHANGE_CIPHER_SPEC
:

3241 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

3242 if–
s¶
->
h™dshake
->
√w_£ssi⁄_tickë
 != 0 )

3243 
ªt
 = 
	`s¶_wrôe_√w_£ssi⁄_tickë
–
s¶
 );

3246 
ªt
 = 
	`s¶_wrôe_ch™ge_cùhî_•ec
–
s¶
 );

3249 
SSL_SERVER_FINISHED
:

3250 
ªt
 = 
	`s¶_wrôe_föished
–
s¶
 );

3253 
SSL_FLUSH_BUFFERS
:

3254 
	`SSL_DEBUG_MSG
( 2, ( "handshake: done" ) );

3255 
s¶
->
°©e
 = 
SSL_HANDSHAKE_WRAPUP
;

3258 
SSL_HANDSHAKE_WRAPUP
:

3259 
	`s¶_h™dshake_wøpup
–
s¶
 );

3263 
	`SSL_DEBUG_MSG
–1, ( "övÆid sèã %d", 
s¶
->
°©e
 ) );

3264 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

3267 –
ªt
 );

3268 
	}
}

	@polarssl/library/ssl_tls.c

34 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

35 
	~"pﬁ¨s¶/c⁄fig.h
"

37 #ö˛udê
POLARSSL_CONFIG_FILE


40 #i‡
deföed
(
POLARSSL_SSL_TLS_C
)

42 
	~"pﬁ¨s¶/debug.h
"

43 
	~"pﬁ¨s¶/s¶.h
"

45 #i‡
deföed
(
POLARSSL_X509_CRT_PARSE_C
) && \

46 
	$deföed
(
POLARSSL_X509_CHECK_EXTENDED_KEY_USAGE
)

47 
	~"pﬁ¨s¶/oid.h
"

50 #i‡
	`deföed
(
POLARSSL_PLATFORM_C
)

51 
	~"pﬁ¨s¶/∂©f‹m.h
"

53 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

54 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

57 
	~<°dlib.h
>

59 #i‡
	`deföed
(
_MSC_VER
Ë&& !
deföed
 
°rˇ£cmp
 && !deföed(
EFIX64
) && \

60 !
	$deföed
(
EFI32
)

61 
	#°rˇ£cmp
 
_°ricmp


	)

65 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

66 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

67 
	}
}

69 #i‡
deföed
(
POLARSSL_SSL_MAX_FRAGMENT_LENGTH
)

78 
	gmÊ_code_to_Àngth
[
SSL_MAX_FRAG_LEN_INVALID
] =

80 
SSL_MAX_CONTENT_LEN
,

88 
	$s¶_£ssi⁄_c›y
–
s¶_£ssi⁄
 *
d°
, c⁄° s¶_£ssi⁄ *
§c
 )

90 
	`s¶_£ssi⁄_‰ì
–
d°
 );

91 
	`mem˝y
–
d°
, 
§c
, –
s¶_£ssi⁄
 ) );

93 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

94 if–
§c
->
≥î_˚π
 !
NULL
 )

96 
ªt
;

98 
d°
->
≥î_˚π
 = (
x509_¸t
 *Ë
	`pﬁ¨s¶_mÆloc
( (x509_crt) );

99 if–
d°
->
≥î_˚π
 =
NULL
 )

100 –
POLARSSL_ERR_SSL_MALLOC_FAILED
 );

102 
	`x509_¸t_öô
–
d°
->
≥î_˚π
 );

104 if––
ªt
 = 
	`x509_¸t_∑r£_dî
–
d°
->
≥î_˚π
, 
§c
->≥î_˚π->
øw
.
p
,

105 
§c
->
≥î_˚π
->
øw
.
Àn
 ) ) != 0 )

107 
	`pﬁ¨s¶_‰ì
–
d°
->
≥î_˚π
 );

108 
d°
->
≥î_˚π
 = 
NULL
;

109 –
ªt
 );

114 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

115 if–
§c
->
tickë
 !
NULL
 )

117 
d°
->
tickë
 = (*Ë
	`pﬁ¨s¶_mÆloc
–
§c
->
tickë_Àn
 );

118 if–
d°
->
tickë
 =
NULL
 )

119 –
POLARSSL_ERR_SSL_MALLOC_FAILED
 );

121 
	`mem˝y
–
d°
->
tickë
, 
§c
->tickë, src->
tickë_Àn
 );

126 
	}
}

128 #i‡
deföed
(
POLARSSL_SSL_HW_RECORD_ACCEL
)

129 (*
s¶_hw_ªc‹d_öô
)–
s¶_c⁄ãxt
 *
s¶
,

130 c⁄° *
key_íc
, c⁄° *
key_dec
,

131 
size_t
 
keyÀn
,

132 c⁄° *
iv_íc
, c⁄° *
iv_dec
,

133 
size_t
 
ivÀn
,

134 c⁄° *
mac_íc
, c⁄° *
mac_dec
,

135 
size_t
 
ma˛í
 ) = 
NULL
;

136 (*
s¶_hw_ªc‹d_a˘iv©e
)–
s¶_c⁄ãxt
 *
s¶
, 
dúe˘i⁄
Ë
NULL
;

137 (*
s¶_hw_ªc‹d_ª£t
)–
s¶_c⁄ãxt
 *
s¶
 ) = 
NULL
;

138 (*
s¶_hw_ªc‹d_wrôe
)–
s¶_c⁄ãxt
 *
s¶
 ) = 
NULL
;

139 (*
s¶_hw_ªc‹d_ªad
)–
s¶_c⁄ãxt
 *
s¶
 ) = 
NULL
;

140 (*
s¶_hw_ªc‹d_föish
)–
s¶_c⁄ãxt
 *
s¶
 ) = 
NULL
;

146 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
)

147 
	$s¶3_¥f
–c⁄° *
£¸ë
, 
size_t
 
¶í
,

148 c⁄° *
œbñ
,

149 c⁄° *
øndom
, 
size_t
 
æí
,

150 *
d°buf
, 
size_t
 
dÀn
 )

152 
size_t
 
i
;

153 
md5_c⁄ãxt
 
md5
;

154 
sha1_c⁄ãxt
 
sha1
;

155 
∑ddög
[16];

156 
sha1sum
[20];

157 (()
œbñ
);

159 
	`md5_öô
–&
md5
 );

160 
	`sha1_öô
–&
sha1
 );

170  
i
 = 0; i < 
dÀn
 / 16; i++ )

172 
	`mem£t
–
∑ddög
, (Ë('A' + 
i
), 1 + i );

174 
	`sha1_°¨ts
–&
sha1
 );

175 
	`sha1_upd©e
–&
sha1
, 
∑ddög
, 1 + 
i
 );

176 
	`sha1_upd©e
–&
sha1
, 
£¸ë
, 
¶í
 );

177 
	`sha1_upd©e
–&
sha1
, 
øndom
, 
æí
 );

178 
	`sha1_föish
–&
sha1
, 
sha1sum
 );

180 
	`md5_°¨ts
–&
md5
 );

181 
	`md5_upd©e
–&
md5
, 
£¸ë
, 
¶í
 );

182 
	`md5_upd©e
–&
md5
, 
sha1sum
, 20 );

183 
	`md5_föish
–&
md5
, 
d°buf
 + 
i
 * 16 );

186 
	`md5_‰ì
–&
md5
 );

187 
	`sha1_‰ì
–&
sha1
 );

189 
	`pﬁ¨s¶_zîoize
–
∑ddög
, (Öadding ) );

190 
	`pﬁ¨s¶_zîoize
–
sha1sum
, ( sha1sum ) );

193 
	}
}

196 #i‡
deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_1
)

197 
	$és1_¥f
–c⁄° *
£¸ë
, 
size_t
 
¶í
,

198 c⁄° *
œbñ
,

199 c⁄° *
øndom
, 
size_t
 
æí
,

200 *
d°buf
, 
size_t
 
dÀn
 )

202 
size_t
 
nb
, 
hs
;

203 
size_t
 
i
, 
j
, 
k
;

204 c⁄° *
S1
, *
S2
;

205 
tmp
[128];

206 
h_i
[20];

208 if––
tmp
 ) < 20 + 
	`°æí
–
œbñ
 ) + 
æí
 )

209 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

211 
hs
 = ( 
¶í
 + 1 ) / 2;

212 
S1
 = 
£¸ë
;

213 
S2
 = 
£¸ë
 + 
¶í
 - 
hs
;

215 
nb
 = 
	`°æí
–
œbñ
 );

216 
	`mem˝y
–
tmp
 + 20, 
œbñ
, 
nb
 );

217 
	`mem˝y
–
tmp
 + 20 + 
nb
, 
øndom
, 
æí
 );

218 
nb
 +
æí
;

223 
	`md5_hmac
–
S1
, 
hs
, 
tmp
 + 20, 
nb
, 4 +Åmp );

225  
i
 = 0; i < 
dÀn
; i += 16 )

227 
	`md5_hmac
–
S1
, 
hs
, 4 + 
tmp
, 16 + 
nb
, 
h_i
 );

228 
	`md5_hmac
–
S1
, 
hs
, 4 + 
tmp
, 16, 4 +Åmp );

230 
k
 = ( 
i
 + 16 > 
dÀn
 ) ? dlen % 16 : 16;

232  
j
 = 0; j < 
k
; j++ )

233 
d°buf
[
i
 + 
j
] = 
h_i
[j];

239 
	`sha1_hmac
–
S2
, 
hs
, 
tmp
 + 20, 
nb
,Åmp );

241  
i
 = 0; i < 
dÀn
; i += 20 )

243 
	`sha1_hmac
–
S2
, 
hs
, 
tmp
, 20 + 
nb
, 
h_i
 );

244 
	`sha1_hmac
–
S2
, 
hs
, 
tmp
, 20,Åmp );

246 
k
 = ( 
i
 + 20 > 
dÀn
 ) ? dlen % 20 : 20;

248  
j
 = 0; j < 
k
; j++ )

249 
d°buf
[
i
 + 
j
] = ()–d°buf[ò+ j] ^ 
h_i
[j] );

252 
	`pﬁ¨s¶_zîoize
–
tmp
, (Åmp ) );

253 
	`pﬁ¨s¶_zîoize
–
h_i
, ( h_i ) );

256 
	}
}

259 #i‡
deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

260 #i‡
deföed
(
POLARSSL_SHA256_C
)

261 
	$és_¥f_sha256
–c⁄° *
£¸ë
, 
size_t
 
¶í
,

262 c⁄° *
œbñ
,

263 c⁄° *
øndom
, 
size_t
 
æí
,

264 *
d°buf
, 
size_t
 
dÀn
 )

266 
size_t
 
nb
;

267 
size_t
 
i
, 
j
, 
k
;

268 
tmp
[128];

269 
h_i
[32];

271 if––
tmp
 ) < 32 + 
	`°æí
–
œbñ
 ) + 
æí
 )

272 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

274 
nb
 = 
	`°æí
–
œbñ
 );

275 
	`mem˝y
–
tmp
 + 32, 
œbñ
, 
nb
 );

276 
	`mem˝y
–
tmp
 + 32 + 
nb
, 
øndom
, 
æí
 );

277 
nb
 +
æí
;

282 
	`sha256_hmac
–
£¸ë
, 
¶í
, 
tmp
 + 32, 
nb
,Åmp, 0 );

284  
i
 = 0; i < 
dÀn
; i += 32 )

286 
	`sha256_hmac
–
£¸ë
, 
¶í
, 
tmp
, 32 + 
nb
, 
h_i
, 0 );

287 
	`sha256_hmac
–
£¸ë
, 
¶í
, 
tmp
, 32,Åmp, 0 );

289 
k
 = ( 
i
 + 32 > 
dÀn
 ) ? dlen % 32 : 32;

291  
j
 = 0; j < 
k
; j++ )

292 
d°buf
[
i
 + 
j
] = 
h_i
[j];

295 
	`pﬁ¨s¶_zîoize
–
tmp
, (Åmp ) );

296 
	`pﬁ¨s¶_zîoize
–
h_i
, ( h_i ) );

299 
	}
}

302 #i‡
deföed
(
POLARSSL_SHA512_C
)

303 
	$és_¥f_sha384
–c⁄° *
£¸ë
, 
size_t
 
¶í
,

304 c⁄° *
œbñ
,

305 c⁄° *
øndom
, 
size_t
 
æí
,

306 *
d°buf
, 
size_t
 
dÀn
 )

308 
size_t
 
nb
;

309 
size_t
 
i
, 
j
, 
k
;

310 
tmp
[128];

311 
h_i
[48];

313 if––
tmp
 ) < 48 + 
	`°æí
–
œbñ
 ) + 
æí
 )

314 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

316 
nb
 = 
	`°æí
–
œbñ
 );

317 
	`mem˝y
–
tmp
 + 48, 
œbñ
, 
nb
 );

318 
	`mem˝y
–
tmp
 + 48 + 
nb
, 
øndom
, 
æí
 );

319 
nb
 +
æí
;

324 
	`sha512_hmac
–
£¸ë
, 
¶í
, 
tmp
 + 48, 
nb
,Åmp, 1 );

326  
i
 = 0; i < 
dÀn
; i += 48 )

328 
	`sha512_hmac
–
£¸ë
, 
¶í
, 
tmp
, 48 + 
nb
, 
h_i
, 1 );

329 
	`sha512_hmac
–
£¸ë
, 
¶í
, 
tmp
, 48,Åmp, 1 );

331 
k
 = ( 
i
 + 48 > 
dÀn
 ) ? dlen % 48 : 48;

333  
j
 = 0; j < 
k
; j++ )

334 
d°buf
[
i
 + 
j
] = 
h_i
[j];

337 
	`pﬁ¨s¶_zîoize
–
tmp
, (Åmp ) );

338 
	`pﬁ¨s¶_zîoize
–
h_i
, ( h_i ) );

341 
	}
}

345 
s¶_upd©e_checksum_°¨t
–
s¶_c⁄ãxt
 *, c⁄° *, 
size_t
 );

347 #i‡
deföed
(
POLARSSL_SSL_PROTO_SSL3
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1
) || \

348 
	$deföed
(
POLARSSL_SSL_PROTO_TLS1_1
)

349 
	`s¶_upd©e_checksum_md5sha1
–
s¶_c⁄ãxt
 *, c⁄° *, 
size_t
 );

352 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
)

353 
	`s¶_ˇlc_vîify_s¶
–
s¶_c⁄ãxt
 *, * );

354 
	`s¶_ˇlc_föished_s¶
–
s¶_c⁄ãxt
 *, *, );

357 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_1
)

358 
	`s¶_ˇlc_vîify_és
–
s¶_c⁄ãxt
 *, * );

359 
	`s¶_ˇlc_föished_és
–
s¶_c⁄ãxt
 *, *, );

362 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

363 #i‡
	`deföed
(
POLARSSL_SHA256_C
)

364 
	`s¶_upd©e_checksum_sha256
–
s¶_c⁄ãxt
 *, c⁄° *, 
size_t
 );

365 
	`s¶_ˇlc_vîify_és_sha256
–
s¶_c⁄ãxt
 *,* );

366 
	`s¶_ˇlc_föished_és_sha256
–
s¶_c⁄ãxt
 *,*, );

369 #i‡
	`deföed
(
POLARSSL_SHA512_C
)

370 
	`s¶_upd©e_checksum_sha384
–
s¶_c⁄ãxt
 *, c⁄° *, 
size_t
 );

371 
	`s¶_ˇlc_vîify_és_sha384
–
s¶_c⁄ãxt
 *, * );

372 
	`s¶_ˇlc_föished_és_sha384
–
s¶_c⁄ãxt
 *, *, );

376 
	$s¶_dîive_keys
–
s¶_c⁄ãxt
 *
s¶
 )

378 
ªt
 = 0;

379 
tmp
[64];

380 
keyblk
[256];

381 *
key1
;

382 *
key2
;

383 *
mac_íc
;

384 *
mac_dec
;

385 
size_t
 
iv_c›y_Àn
;

386 c⁄° 
cùhî_öfo_t
 *
cùhî_öfo
;

387 c⁄° 
md_öfo_t
 *
md_öfo
;

389 
s¶_£ssi⁄
 *
£ssi⁄
 = 
s¶
->
£ssi⁄_√gŸüã
;

390 
s¶_å™sf‹m
 *
å™sf‹m
 = 
s¶
->
å™sf‹m_√gŸüã
;

391 
s¶_h™dshake_∑øms
 *
h™dshake
 = 
s¶
->handshake;

393 
	`SSL_DEBUG_MSG
( 2, ( "=> derive keys" ) );

395 
cùhî_öfo
 = 
	`cùhî_öfo_‰om_ty≥
–
å™sf‹m
->
cùhîsuôe_öfo
->
cùhî
 );

396 if–
cùhî_öfo
 =
NULL
 )

398 
	`SSL_DEBUG_MSG
( 1, ( "cipher info for %dÇot found",

399 
å™sf‹m
->
cùhîsuôe_öfo
->
cùhî
 ) );

400 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

403 
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
å™sf‹m
->
cùhîsuôe_öfo
->
mac
 );

404 if–
md_öfo
 =
NULL
 )

406 
	`SSL_DEBUG_MSG
( 1, ( "md info for %dÇot found",

407 
å™sf‹m
->
cùhîsuôe_öfo
->
mac
 ) );

408 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

414 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
)

415 if–
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_0
 )

417 
h™dshake
->
és_¥f
 = 
s¶3_¥f
;

418 
h™dshake
->
ˇlc_vîify
 = 
s¶_ˇlc_vîify_s¶
;

419 
h™dshake
->
ˇlc_föished
 = 
s¶_ˇlc_föished_s¶
;

423 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_1
)

424 if–
s¶
->
mö‹_vî
 < 
SSL_MINOR_VERSION_3
 )

426 
h™dshake
->
és_¥f
 = 
és1_¥f
;

427 
h™dshake
->
ˇlc_vîify
 = 
s¶_ˇlc_vîify_és
;

428 
h™dshake
->
ˇlc_föished
 = 
s¶_ˇlc_föished_és
;

432 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

433 #i‡
	`deföed
(
POLARSSL_SHA512_C
)

434 if–
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_3
 &&

435 
å™sf‹m
->
cùhîsuôe_öfo
->
mac
 =
POLARSSL_MD_SHA384
 )

437 
h™dshake
->
és_¥f
 = 
és_¥f_sha384
;

438 
h™dshake
->
ˇlc_vîify
 = 
s¶_ˇlc_vîify_és_sha384
;

439 
h™dshake
->
ˇlc_föished
 = 
s¶_ˇlc_föished_és_sha384
;

443 #i‡
	`deföed
(
POLARSSL_SHA256_C
)

444 if–
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_3
 )

446 
h™dshake
->
és_¥f
 = 
és_¥f_sha256
;

447 
h™dshake
->
ˇlc_vîify
 = 
s¶_ˇlc_vîify_és_sha256
;

448 
h™dshake
->
ˇlc_föished
 = 
s¶_ˇlc_föished_és_sha256
;

454 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

455 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

468 if–
h™dshake
->
ªsume
 == 0 )

470 
	`SSL_DEBUG_BUF
–3, "¥ema°î se¸ë", 
h™dshake
->
¥ema°î
,

471 
h™dshake
->
pm¶í
 );

473 
h™dshake
->
	`és_¥f
–h™dshake->
¥ema°î
, h™dshake->
pm¶í
,

475 
h™dshake
->
øndbyãs
, 64, 
£ssi⁄
->
ma°î
, 48 );

477 
	`pﬁ¨s¶_zîoize
–
h™dshake
->
¥ema°î
, (handshake->premaster) );

480 
	`SSL_DEBUG_MSG
( 3, ( "noÖremaster (sessionÑesumed)" ) );

485 
	`mem˝y
–
tmp
, 
h™dshake
->
øndbyãs
, 64 );

486 
	`mem˝y
–
h™dshake
->
øndbyãs
, 
tmp
 + 32, 32 );

487 
	`mem˝y
–
h™dshake
->
øndbyãs
 + 32, 
tmp
, 32 );

488 
	`pﬁ¨s¶_zîoize
–
tmp
, (Åmp ) );

502 
h™dshake
->
	`és_¥f
–
£ssi⁄
->
ma°î
, 48, "keyÉxpansion",

503 
h™dshake
->
øndbyãs
, 64, 
keyblk
, 256 );

505 
	`SSL_DEBUG_MSG
( 3, ( "ciphersuite = %s",

506 
	`s¶_gë_cùhîsuôe_«me
–
£ssi⁄
->
cùhîsuôe
 ) ) );

507 
	`SSL_DEBUG_BUF
–3, "ma°î se¸ë", 
£ssi⁄
->
ma°î
, 48 );

508 
	`SSL_DEBUG_BUF
–4, "øndom byãs", 
h™dshake
->
øndbyãs
, 64 );

509 
	`SSL_DEBUG_BUF
–4, "key block", 
keyblk
, 256 );

511 
	`pﬁ¨s¶_zîoize
–
h™dshake
->
øndbyãs
, ( handshake->randbytes ) );

517 
å™sf‹m
->
keyÀn
 = 
cùhî_öfo
->
key_Àngth
 / 8;

519 if–
cùhî_öfo
->
mode
 =
POLARSSL_MODE_GCM
 ||

520 
cùhî_öfo
->
mode
 =
POLARSSL_MODE_CCM
 )

522 
å™sf‹m
->
ma˛í
 = 0;

524 
å™sf‹m
->
ivÀn
 = 12;

525 
å™sf‹m
->
fixed_ivÀn
 = 4;

528 
å™sf‹m
->
möÀn
 =Åønsf‹m->
ivÀn
 -Åønsf‹m->
fixed_ivÀn


529 + ( 
å™sf‹m
->
cùhîsuôe_öfo
->
Êags
 &

530 
POLARSSL_CIPHERSUITE_SHORT_TAG
 ? 8 : 16 );

534 
ªt
;

537 if––
ªt
 = 
	`md_öô_˘x
–&
å™sf‹m
->
md_˘x_íc
, 
md_öfo
 ) ) != 0 ||

538 –
ªt
 = 
	`md_öô_˘x
–&
å™sf‹m
->
md_˘x_dec
, 
md_öfo
 ) ) != 0 )

540 
	`SSL_DEBUG_RET
–1, "md_öô_˘x", 
ªt
 );

541 –
ªt
 );

545 
å™sf‹m
->
ma˛í
 = 
	`md_gë_size
–
md_öfo
 );

547 #i‡
	`deföed
(
POLARSSL_SSL_TRUNCATED_HMAC
)

553 if–
£ssi⁄
->
åunc_hmac
 =
SSL_TRUNC_HMAC_ENABLED
 )

554 
å™sf‹m
->
ma˛í
 = 
SSL_TRUNCATED_HMAC_LEN
;

558 
å™sf‹m
->
ivÀn
 = 
cùhî_öfo
->
iv_size
;

561 if–
cùhî_öfo
->
mode
 =
POLARSSL_MODE_STREAM
 )

562 
å™sf‹m
->
möÀn
 =Åønsf‹m->
ma˛í
;

570 
å™sf‹m
->
möÀn
 =Åønsf‹m->
ma˛í


571 + 
cùhî_öfo
->
block_size


572 - 
å™sf‹m
->
ma˛í
 % 
cùhî_öfo
->
block_size
;

574 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1
)

575 if–
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_0
 ||

576 
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_1
 )

580 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_2
)

581 if–
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_2
 ||

582 
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_3
 )

584 
å™sf‹m
->
möÀn
 +å™sf‹m->
ivÀn
;

589 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

590 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

595 
	`SSL_DEBUG_MSG
( 3, ( "keylen: %d, minlen: %d, ivlen: %d, maclen: %d",

596 
å™sf‹m
->
keyÀn
,Åønsf‹m->
möÀn
,Åønsf‹m->
ivÀn
,

597 
å™sf‹m
->
ma˛í
 ) );

602 if–
s¶
->
ídpoöt
 =
SSL_IS_CLIENT
 )

604 
key1
 = 
keyblk
 + 
å™sf‹m
->
ma˛í
 * 2;

605 
key2
 = 
keyblk
 + 
å™sf‹m
->
ma˛í
 * 2 +Åønsf‹m->
keyÀn
;

607 
mac_íc
 = 
keyblk
;

608 
mac_dec
 = 
keyblk
 + 
å™sf‹m
->
ma˛í
;

613 
iv_c›y_Àn
 = ( 
å™sf‹m
->
fixed_ivÀn
 ) ?

614 
å™sf‹m
->
fixed_ivÀn
 :Åønsf‹m->
ivÀn
;

615 
	`mem˝y
–
å™sf‹m
->
iv_íc
, 
key2
 +Åønsf‹m->
keyÀn
, 
iv_c›y_Àn
 );

616 
	`mem˝y
–
å™sf‹m
->
iv_dec
, 
key2
 +Åønsf‹m->
keyÀn
 + 
iv_c›y_Àn
,

617 
iv_c›y_Àn
 );

621 
key1
 = 
keyblk
 + 
å™sf‹m
->
ma˛í
 * 2 +Åønsf‹m->
keyÀn
;

622 
key2
 = 
keyblk
 + 
å™sf‹m
->
ma˛í
 * 2;

624 
mac_íc
 = 
keyblk
 + 
å™sf‹m
->
ma˛í
;

625 
mac_dec
 = 
keyblk
;

630 
iv_c›y_Àn
 = ( 
å™sf‹m
->
fixed_ivÀn
 ) ?

631 
å™sf‹m
->
fixed_ivÀn
 :Åønsf‹m->
ivÀn
;

632 
	`mem˝y
–
å™sf‹m
->
iv_dec
, 
key1
 +Åønsf‹m->
keyÀn
, 
iv_c›y_Àn
 );

633 
	`mem˝y
–
å™sf‹m
->
iv_íc
, 
key1
 +Åønsf‹m->
keyÀn
 + 
iv_c›y_Àn
,

634 
iv_c›y_Àn
 );

637 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
)

638 if–
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_0
 )

640 if–
å™sf‹m
->
ma˛í
 > Åønsf‹m->
mac_íc
 )

642 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

643 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

646 
	`mem˝y
–
å™sf‹m
->
mac_íc
, mac_íc,Åønsf‹m->
ma˛í
 );

647 
	`mem˝y
–
å™sf‹m
->
mac_dec
, mac_dec,Åønsf‹m->
ma˛í
 );

651 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_1
) || \

652 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

653 if–
s¶
->
mö‹_vî
 >
SSL_MINOR_VERSION_1
 )

655 
	`md_hmac_°¨ts
–&
å™sf‹m
->
md_˘x_íc
, 
mac_íc
,Åønsf‹m->
ma˛í
 );

656 
	`md_hmac_°¨ts
–&
å™sf‹m
->
md_˘x_dec
, 
mac_dec
,Åønsf‹m->
ma˛í
 );

661 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

662 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

665 #i‡
	`deföed
(
POLARSSL_SSL_HW_RECORD_ACCEL
)

666 if–
s¶_hw_ªc‹d_öô
 !
NULL
 )

668 
ªt
 = 0;

670 
	`SSL_DEBUG_MSG
( 2, ( "going for ssl_hw_record_init()" ) );

672 if––
ªt
 = 
	`s¶_hw_ªc‹d_öô
–
s¶
, 
key1
, 
key2
, 
å™sf‹m
->
keyÀn
,

673 
å™sf‹m
->
iv_íc
,Åønsf‹m->
iv_dec
,

674 
iv_c›y_Àn
,

675 
mac_íc
, 
mac_dec
,

676 
å™sf‹m
->
ma˛í
 ) ) != 0 )

678 
	`SSL_DEBUG_RET
–1, "s¶_hw_ªc‹d_öô", 
ªt
 );

679 –
POLARSSL_ERR_SSL_HW_ACCEL_FAILED
 );

684 if––
ªt
 = 
	`cùhî_öô_˘x
–&
å™sf‹m
->
cùhî_˘x_íc
,

685 
cùhî_öfo
 ) ) != 0 )

687 
	`SSL_DEBUG_RET
–1, "cùhî_öô_˘x", 
ªt
 );

688 –
ªt
 );

691 if––
ªt
 = 
	`cùhî_öô_˘x
–&
å™sf‹m
->
cùhî_˘x_dec
,

692 
cùhî_öfo
 ) ) != 0 )

694 
	`SSL_DEBUG_RET
–1, "cùhî_öô_˘x", 
ªt
 );

695 –
ªt
 );

698 if––
ªt
 = 
	`cùhî_£tkey
–&
å™sf‹m
->
cùhî_˘x_íc
, 
key1
,

699 
cùhî_öfo
->
key_Àngth
,

700 
POLARSSL_ENCRYPT
 ) ) != 0 )

702 
	`SSL_DEBUG_RET
–1, "cùhî_£tkey", 
ªt
 );

703 –
ªt
 );

706 if––
ªt
 = 
	`cùhî_£tkey
–&
å™sf‹m
->
cùhî_˘x_dec
, 
key2
,

707 
cùhî_öfo
->
key_Àngth
,

708 
POLARSSL_DECRYPT
 ) ) != 0 )

710 
	`SSL_DEBUG_RET
–1, "cùhî_£tkey", 
ªt
 );

711 –
ªt
 );

714 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
)

715 if–
cùhî_öfo
->
mode
 =
POLARSSL_MODE_CBC
 )

717 if––
ªt
 = 
	`cùhî_£t_∑ddög_mode
–&
å™sf‹m
->
cùhî_˘x_íc
,

718 
POLARSSL_PADDING_NONE
 ) ) != 0 )

720 
	`SSL_DEBUG_RET
–1, "cùhî_£t_∑ddög_mode", 
ªt
 );

721 –
ªt
 );

724 if––
ªt
 = 
	`cùhî_£t_∑ddög_mode
–&
å™sf‹m
->
cùhî_˘x_dec
,

725 
POLARSSL_PADDING_NONE
 ) ) != 0 )

727 
	`SSL_DEBUG_RET
–1, "cùhî_£t_∑ddög_mode", 
ªt
 );

728 –
ªt
 );

733 
	`pﬁ¨s¶_zîoize
–
keyblk
, ( keyblk ) );

735 #i‡
	`deföed
(
POLARSSL_ZLIB_SUPPORT
)

738 if–
£ssi⁄
->
com¥essi⁄
 =
SSL_COMPRESS_DEFLATE
 )

740 if–
s¶
->
com¥ess_buf
 =
NULL
 )

742 
	`SSL_DEBUG_MSG
( 3, ( "Allocating compression buffer" ) );

743 
s¶
->
com¥ess_buf
 = 
	`pﬁ¨s¶_mÆloc
–
SSL_BUFFER_LEN
 );

744 if–
s¶
->
com¥ess_buf
 =
NULL
 )

746 
	`SSL_DEBUG_MSG
( 1, ( "malloc(%d bytes) failed",

747 
SSL_BUFFER_LEN
 ) );

748 –
POLARSSL_ERR_SSL_MALLOC_FAILED
 );

752 
	`SSL_DEBUG_MSG
( 3, ( "Initializing zlib states" ) );

754 
	`mem£t
–&
å™sf‹m
->
˘x_deÊ©e
, 0, (Åransform->ctx_deflate ) );

755 
	`mem£t
–&
å™sf‹m
->
˘x_öÊ©e
, 0, (Åransform->ctx_inflate ) );

757 if–
	`deÊ©eInô
–&
å™sf‹m
->
˘x_deÊ©e
,

758 
Z_DEFAULT_COMPRESSION
 ) !
Z_OK
 ||

759 
	`öÊ©eInô
–&
å™sf‹m
->
˘x_öÊ©e
 ) !
Z_OK
 )

761 
	`SSL_DEBUG_MSG
( 1, ( "FailedÅo initialize compression" ) );

762 –
POLARSSL_ERR_SSL_COMPRESSION_FAILED
 );

767 
	`SSL_DEBUG_MSG
( 2, ( "<= derive keys" ) );

770 
	}
}

772 #i‡
deföed
(
POLARSSL_SSL_PROTO_SSL3
)

773 
	$s¶_ˇlc_vîify_s¶
–
s¶_c⁄ãxt
 *
s¶
, 
hash
[36] )

775 
md5_c⁄ãxt
 
md5
;

776 
sha1_c⁄ãxt
 
sha1
;

777 
∑d_1
[48];

778 
∑d_2
[48];

780 
	`SSL_DEBUG_MSG
( 2, ( "=> calc verify ssl" ) );

782 
	`mem˝y
–&
md5
 , &
s¶
->
h™dshake
->
fö_md5
 , (
md5_c⁄ãxt
) );

783 
	`mem˝y
–&
sha1
, &
s¶
->
h™dshake
->
fö_sha1
, (
sha1_c⁄ãxt
) );

785 
	`mem£t
–
∑d_1
, 0x36, 48 );

786 
	`mem£t
–
∑d_2
, 0x5C, 48 );

788 
	`md5_upd©e
–&
md5
, 
s¶
->
£ssi⁄_√gŸüã
->
ma°î
, 48 );

789 
	`md5_upd©e
–&
md5
, 
∑d_1
, 48 );

790 
	`md5_föish
–&
md5
, 
hash
 );

792 
	`md5_°¨ts
–&
md5
 );

793 
	`md5_upd©e
–&
md5
, 
s¶
->
£ssi⁄_√gŸüã
->
ma°î
, 48 );

794 
	`md5_upd©e
–&
md5
, 
∑d_2
, 48 );

795 
	`md5_upd©e
–&
md5
, 
hash
, 16 );

796 
	`md5_föish
–&
md5
, 
hash
 );

798 
	`sha1_upd©e
–&
sha1
, 
s¶
->
£ssi⁄_√gŸüã
->
ma°î
, 48 );

799 
	`sha1_upd©e
–&
sha1
, 
∑d_1
, 40 );

800 
	`sha1_föish
–&
sha1
, 
hash
 + 16 );

802 
	`sha1_°¨ts
–&
sha1
 );

803 
	`sha1_upd©e
–&
sha1
, 
s¶
->
£ssi⁄_√gŸüã
->
ma°î
, 48 );

804 
	`sha1_upd©e
–&
sha1
, 
∑d_2
, 40 );

805 
	`sha1_upd©e
–&
sha1
, 
hash
 + 16, 20 );

806 
	`sha1_föish
–&
sha1
, 
hash
 + 16 );

808 
	`SSL_DEBUG_BUF
–3, "ˇlcuœãd vîifyÑesu…", 
hash
, 36 );

809 
	`SSL_DEBUG_MSG
( 2, ( "<= calc verify" ) );

811 
	`md5_‰ì
–&
md5
 );

812 
	`sha1_‰ì
–&
sha1
 );

815 
	}
}

818 #i‡
deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_1
)

819 
	$s¶_ˇlc_vîify_és
–
s¶_c⁄ãxt
 *
s¶
, 
hash
[36] )

821 
md5_c⁄ãxt
 
md5
;

822 
sha1_c⁄ãxt
 
sha1
;

824 
	`SSL_DEBUG_MSG
( 2, ( "=> calc verifyÅls" ) );

826 
	`mem˝y
–&
md5
 , &
s¶
->
h™dshake
->
fö_md5
 , (
md5_c⁄ãxt
) );

827 
	`mem˝y
–&
sha1
, &
s¶
->
h™dshake
->
fö_sha1
, (
sha1_c⁄ãxt
) );

829 
	`md5_föish
–&
md5
, 
hash
 );

830 
	`sha1_föish
–&
sha1
, 
hash
 + 16 );

832 
	`SSL_DEBUG_BUF
–3, "ˇlcuœãd vîifyÑesu…", 
hash
, 36 );

833 
	`SSL_DEBUG_MSG
( 2, ( "<= calc verify" ) );

835 
	`md5_‰ì
–&
md5
 );

836 
	`sha1_‰ì
–&
sha1
 );

839 
	}
}

842 #i‡
deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

843 #i‡
deföed
(
POLARSSL_SHA256_C
)

844 
	$s¶_ˇlc_vîify_és_sha256
–
s¶_c⁄ãxt
 *
s¶
, 
hash
[32] )

846 
sha256_c⁄ãxt
 
sha256
;

848 
	`SSL_DEBUG_MSG
( 2, ( "=> calc verify sha256" ) );

850 
	`mem˝y
–&
sha256
, &
s¶
->
h™dshake
->
fö_sha256
, (
sha256_c⁄ãxt
) );

851 
	`sha256_föish
–&
sha256
, 
hash
 );

853 
	`SSL_DEBUG_BUF
–3, "ˇlcuœãd vîifyÑesu…", 
hash
, 32 );

854 
	`SSL_DEBUG_MSG
( 2, ( "<= calc verify" ) );

856 
	`sha256_‰ì
–&
sha256
 );

859 
	}
}

862 #i‡
deföed
(
POLARSSL_SHA512_C
)

863 
	$s¶_ˇlc_vîify_és_sha384
–
s¶_c⁄ãxt
 *
s¶
, 
hash
[48] )

865 
sha512_c⁄ãxt
 
sha512
;

867 
	`SSL_DEBUG_MSG
( 2, ( "=> calc verify sha384" ) );

869 
	`mem˝y
–&
sha512
, &
s¶
->
h™dshake
->
fö_sha512
, (
sha512_c⁄ãxt
) );

870 
	`sha512_föish
–&
sha512
, 
hash
 );

872 
	`SSL_DEBUG_BUF
–3, "ˇlcuœãd vîifyÑesu…", 
hash
, 48 );

873 
	`SSL_DEBUG_MSG
( 2, ( "<= calc verify" ) );

875 
	`sha512_‰ì
–&
sha512
 );

878 
	}
}

882 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

883 
	$s¶_psk_dîive_¥ema°î
–
s¶_c⁄ãxt
 *
s¶
, 
key_exch™ge_ty≥_t
 
key_ex
 )

885 *
p
 = 
s¶
->
h™dshake
->
¥ema°î
;

886 *
íd
 = 
p
 + –
s¶
->
h™dshake
->
¥ema°î
 );

895 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_PSK_ENABLED
)

896 if–
key_ex
 =
POLARSSL_KEY_EXCHANGE_PSK
 )

898 if–
íd
 - 
p
 < 2 + (Ë
s¶
->
psk_Àn
 )

899 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

901 *(
p
++Ë()–
s¶
->
psk_Àn
 >> 8 );

902 *(
p
++Ë()–
s¶
->
psk_Àn
 );

903 
p
 +
s¶
->
psk_Àn
;

907 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED
)

908 if–
key_ex
 =
POLARSSL_KEY_EXCHANGE_RSA_PSK
 )

914 *
p
++ = 0;

915 *
p
++ = 48;

916 
p
 += 48;

920 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
)

921 if–
key_ex
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 )

923 
ªt
;

924 
size_t
 
Àn
 = 
íd
 - ( 
p
 + 2 );

927 if––
ªt
 = 
	`dhm_ˇlc_£¸ë
–&
s¶
->
h™dshake
->
dhm_˘x
,

928 
p
 + 2, &
Àn
,

929 
s¶
->
f_∫g
, s¶->
p_∫g
 ) ) != 0 )

931 
	`SSL_DEBUG_RET
–1, "dhm_ˇlc_£¸ë", 
ªt
 );

932 –
ªt
 );

934 *(
p
++Ë()–
Àn
 >> 8 );

935 *(
p
++Ë()–
Àn
 );

936 
p
 +
Àn
;

938 
	`SSL_DEBUG_MPI
–3, "DHM: K ", &
s¶
->
h™dshake
->
dhm_˘x
.
K
 );

942 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED
)

943 if–
key_ex
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 )

945 
ªt
;

946 
size_t
 
zÀn
;

948 if––
ªt
 = 
	`ecdh_ˇlc_£¸ë
–&
s¶
->
h™dshake
->
ecdh_˘x
, &
zÀn
,

949 
p
 + 2, 
íd
 - (Ö + 2 ),

950 
s¶
->
f_∫g
, s¶->
p_∫g
 ) ) != 0 )

952 
	`SSL_DEBUG_RET
–1, "ecdh_ˇlc_£¸ë", 
ªt
 );

953 –
ªt
 );

956 *(
p
++Ë()–
zÀn
 >> 8 );

957 *(
p
++Ë()–
zÀn
 );

958 
p
 +
zÀn
;

960 
	`SSL_DEBUG_MPI
–3, "ECDH: z", &
s¶
->
h™dshake
->
ecdh_˘x
.
z
 );

965 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

966 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

970 if–
íd
 - 
p
 < 2 + (Ë
s¶
->
psk_Àn
 )

971 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

973 *(
p
++Ë()–
s¶
->
psk_Àn
 >> 8 );

974 *(
p
++Ë()–
s¶
->
psk_Àn
 );

975 
	`mem˝y
–
p
, 
s¶
->
psk
, s¶->
psk_Àn
 );

976 
p
 +
s¶
->
psk_Àn
;

978 
s¶
->
h™dshake
->
pm¶í
 = 
p
 - s¶->h™dshake->
¥ema°î
;

981 
	}
}

984 #i‡
deföed
(
POLARSSL_SSL_PROTO_SSL3
)

988 
	$s¶_mac
–
md_c⁄ãxt_t
 *
md_˘x
, *
£¸ë
,

989 *
buf
, 
size_t
 
Àn
,

990 *
˘r
, 
ty≥
 )

992 
hódî
[11];

993 
∑ddög
[48];

994 
∑dÀn
 = 0;

995 
md_size
 = 
	`md_gë_size
–
md_˘x
->
md_öfo
 );

996 
md_ty≥
 = 
	`md_gë_ty≥
–
md_˘x
->
md_öfo
 );

998 if–
md_ty≥
 =
POLARSSL_MD_MD5
 )

999 
∑dÀn
 = 48;

1000 if–
md_ty≥
 =
POLARSSL_MD_SHA1
 )

1001 
∑dÀn
 = 40;

1002 if–
md_ty≥
 =
POLARSSL_MD_SHA256
 )

1003 
∑dÀn
 = 32;

1004 if–
md_ty≥
 =
POLARSSL_MD_SHA384
 )

1005 
∑dÀn
 = 16;

1007 
	`mem˝y
–
hódî
, 
˘r
, 8 );

1008 
hódî
[ 8] = (Ë
ty≥
;

1009 
hódî
[ 9] = ()–
Àn
 >> 8 );

1010 
hódî
[10] = ()–
Àn
 );

1012 
	`mem£t
–
∑ddög
, 0x36, 
∑dÀn
 );

1013 
	`md_°¨ts
–
md_˘x
 );

1014 
	`md_upd©e
–
md_˘x
, 
£¸ë
, 
md_size
 );

1015 
	`md_upd©e
–
md_˘x
, 
∑ddög
, 
∑dÀn
 );

1016 
	`md_upd©e
–
md_˘x
, 
hódî
, 11 );

1017 
	`md_upd©e
–
md_˘x
, 
buf
, 
Àn
 );

1018 
	`md_föish
–
md_˘x
, 
buf
 + 
Àn
 );

1020 
	`mem£t
–
∑ddög
, 0x5C, 
∑dÀn
 );

1021 
	`md_°¨ts
–
md_˘x
 );

1022 
	`md_upd©e
–
md_˘x
, 
£¸ë
, 
md_size
 );

1023 
	`md_upd©e
–
md_˘x
, 
∑ddög
, 
∑dÀn
 );

1024 
	`md_upd©e
–
md_˘x
, 
buf
 + 
Àn
, 
md_size
 );

1025 
	`md_föish
–
md_˘x
, 
buf
 + 
Àn
 );

1026 
	}
}

1032 
	$s¶_í¸y±_buf
–
s¶_c⁄ãxt
 *
s¶
 )

1034 
size_t
 
i
;

1035 c⁄° 
cùhî_mode_t
 
mode
 = 
	`cùhî_gë_cùhî_mode
(

1036 &
s¶
->
å™sf‹m_out
->
cùhî_˘x_íc
 );

1038 
	`SSL_DEBUG_MSG
( 2, ( "=>Éncrypt buf" ) );

1043 #i‡
	`deföed
(
POLARSSL_ARC4_C
Ë|| deföed(
POLARSSL_CIPHER_NULL_CIPHER
) || \

1044 –
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
) && \

1045 –
	`deföed
(
POLARSSL_AES_C
Ë|| deföed(
POLARSSL_CAMELLIA_C
) ) )

1046 if–
mode
 !
POLARSSL_MODE_GCM
 &&

1047 
mode
 !
POLARSSL_MODE_CCM
 )

1049 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
)

1050 if–
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_0
 )

1052 
	`s¶_mac
–&
s¶
->
å™sf‹m_out
->
md_˘x_íc
,

1053 
s¶
->
å™sf‹m_out
->
mac_íc
,

1054 
s¶
->
out_msg
, s¶->
out_msgÀn
,

1055 
s¶
->
out_˘r
, s¶->
out_msgty≥
 );

1059 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_1
) || \

1060 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

1061 if–
s¶
->
mö‹_vî
 >
SSL_MINOR_VERSION_1
 )

1063 
	`md_hmac_upd©e
–&
s¶
->
å™sf‹m_out
->
md_˘x_íc
, s¶->
out_˘r
, 13 );

1064 
	`md_hmac_upd©e
–&
s¶
->
å™sf‹m_out
->
md_˘x_íc
,

1065 
s¶
->
out_msg
, s¶->
out_msgÀn
 );

1066 
	`md_hmac_föish
–&
s¶
->
å™sf‹m_out
->
md_˘x_íc
,

1067 
s¶
->
out_msg
 + s¶->
out_msgÀn
 );

1068 
	`md_hmac_ª£t
–&
s¶
->
å™sf‹m_out
->
md_˘x_íc
 );

1073 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

1074 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

1077 
	`SSL_DEBUG_BUF
( 4, "computed mac",

1078 
s¶
->
out_msg
 + s¶->
out_msgÀn
,

1079 
s¶
->
å™sf‹m_out
->
ma˛í
 );

1081 
s¶
->
out_msgÀn
 +s¶->
å™sf‹m_out
->
ma˛í
;

1088 #i‡
	`deföed
(
POLARSSL_ARC4_C
Ë|| deföed(
POLARSSL_CIPHER_NULL_CIPHER
)

1089 if–
mode
 =
POLARSSL_MODE_STREAM
 )

1091 
ªt
;

1092 
size_t
 
ﬁí
 = 0;

1094 
	`SSL_DEBUG_MSG
( 3, ( "beforeÉncrypt: msglen = %d, "

1096 
s¶
->
out_msgÀn
, 0 ) );

1098 
	`SSL_DEBUG_BUF
( 4, "beforeÉncrypt: outputÖayload",

1099 
s¶
->
out_msg
, s¶->
out_msgÀn
 );

1101 if––
ªt
 = 
	`cùhî_¸y±
–&
s¶
->
å™sf‹m_out
->
cùhî_˘x_íc
,

1102 
s¶
->
å™sf‹m_out
->
iv_íc
,

1103 
s¶
->
å™sf‹m_out
->
ivÀn
,

1104 
s¶
->
out_msg
, s¶->
out_msgÀn
,

1105 
s¶
->
out_msg
, &
ﬁí
 ) ) != 0 )

1107 
	`SSL_DEBUG_RET
–1, "cùhî_¸y±", 
ªt
 );

1108 –
ªt
 );

1111 if–
s¶
->
out_msgÀn
 !
ﬁí
 )

1113 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

1114 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

1119 #i‡
	`deföed
(
POLARSSL_GCM_C
Ë|| deföed(
POLARSSL_CCM_C
)

1120 if–
mode
 =
POLARSSL_MODE_GCM
 ||

1121 
mode
 =
POLARSSL_MODE_CCM
 )

1123 
ªt
;

1124 
size_t
 
íc_msgÀn
, 
ﬁí
;

1125 *
íc_msg
;

1126 
add_d©a
[13];

1127 
ègÀn
 = 
s¶
->
å™sf‹m_out
->
cùhîsuôe_öfo
->
Êags
 &

1128 
POLARSSL_CIPHERSUITE_SHORT_TAG
 ? 8 : 16;

1130 
	`mem˝y
–
add_d©a
, 
s¶
->
out_˘r
, 8 );

1131 
add_d©a
[8] = 
s¶
->
out_msgty≥
;

1132 
add_d©a
[9] = 
s¶
->
maj‹_vî
;

1133 
add_d©a
[10] = 
s¶
->
mö‹_vî
;

1134 
add_d©a
[11] = ( 
s¶
->
out_msgÀn
 >> 8 ) & 0xFF;

1135 
add_d©a
[12] = 
s¶
->
out_msgÀn
 & 0xFF;

1137 
	`SSL_DEBUG_BUF
( 4, "additional data used for AEAD",

1138 
add_d©a
, 13 );

1143 
ªt
 = 
s¶
->
	`f_∫g
–s¶->
p_∫g
,

1144 
s¶
->
å™sf‹m_out
->
iv_íc
 + s¶->å™sf‹m_out->
fixed_ivÀn
,

1145 
s¶
->
å™sf‹m_out
->
ivÀn
 - s¶->å™sf‹m_out->
fixed_ivÀn
 );

1146 if–
ªt
 != 0 )

1147 –
ªt
 );

1149 
	`mem˝y
–
s¶
->
out_iv
,

1150 
s¶
->
å™sf‹m_out
->
iv_íc
 + s¶->å™sf‹m_out->
fixed_ivÀn
,

1151 
s¶
->
å™sf‹m_out
->
ivÀn
 - s¶->å™sf‹m_out->
fixed_ivÀn
 );

1153 
	`SSL_DEBUG_BUF
–4, "IV u£d", 
s¶
->
out_iv
,

1154 
s¶
->
å™sf‹m_out
->
ivÀn
 - s¶->å™sf‹m_out->
fixed_ivÀn
 );

1159 
íc_msg
 = 
s¶
->
out_msg
;

1160 
íc_msgÀn
 = 
s¶
->
out_msgÀn
;

1161 
s¶
->
out_msgÀn
 +s¶->
å™sf‹m_out
->
ivÀn
 -

1162 
s¶
->
å™sf‹m_out
->
fixed_ivÀn
;

1164 
	`SSL_DEBUG_MSG
( 3, ( "beforeÉncrypt: msglen = %d, "

1166 
s¶
->
out_msgÀn
, 0 ) );

1168 
	`SSL_DEBUG_BUF
( 4, "beforeÉncrypt: outputÖayload",

1169 
s¶
->
out_msg
, s¶->
out_msgÀn
 );

1174 if––
ªt
 = 
	`cùhî_auth_í¸y±
–&
s¶
->
å™sf‹m_out
->
cùhî_˘x_íc
,

1175 
s¶
->
å™sf‹m_out
->
iv_íc
,

1176 
s¶
->
å™sf‹m_out
->
ivÀn
,

1177 
add_d©a
, 13,

1178 
íc_msg
, 
íc_msgÀn
,

1179 
íc_msg
, &
ﬁí
,

1180 
íc_msg
 + 
íc_msgÀn
, 
ègÀn
 ) ) != 0 )

1182 
	`SSL_DEBUG_RET
–1, "cùhî_auth_í¸y±", 
ªt
 );

1183 –
ªt
 );

1186 if–
ﬁí
 !
íc_msgÀn
 )

1188 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

1189 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

1192 
s¶
->
out_msgÀn
 +
ègÀn
;

1194 
	`SSL_DEBUG_BUF
–4, "a·îÉn¸y±:Åag", 
íc_msg
 + 
íc_msgÀn
, 
ègÀn
 );

1198 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
) && \

1199 –
	`deföed
(
POLARSSL_AES_C
Ë|| deföed(
POLARSSL_CAMELLIA_C
) )

1200 if–
mode
 =
POLARSSL_MODE_CBC
 )

1202 
ªt
;

1203 *
íc_msg
;

1204 
size_t
 
íc_msgÀn
, 
∑dÀn
, 
ﬁí
 = 0;

1206 
∑dÀn
 = 
s¶
->
å™sf‹m_out
->
ivÀn
 - ( s¶->
out_msgÀn
 + 1 ) %

1207 
s¶
->
å™sf‹m_out
->
ivÀn
;

1208 if–
∑dÀn
 =
s¶
->
å™sf‹m_out
->
ivÀn
 )

1209 
∑dÀn
 = 0;

1211  
i
 = 0; i <
∑dÀn
; i++ )

1212 
s¶
->
out_msg
[s¶->
out_msgÀn
 + 
i
] = (Ë
∑dÀn
;

1214 
s¶
->
out_msgÀn
 +
∑dÀn
 + 1;

1216 
íc_msgÀn
 = 
s¶
->
out_msgÀn
;

1217 
íc_msg
 = 
s¶
->
out_msg
;

1219 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_2
)

1224 if–
s¶
->
mö‹_vî
 >
SSL_MINOR_VERSION_2
 )

1229 
ªt
 = 
s¶
->
	`f_∫g
–s¶->
p_∫g
, s¶->
å™sf‹m_out
->
iv_íc
,

1230 
s¶
->
å™sf‹m_out
->
ivÀn
 );

1231 if–
ªt
 != 0 )

1232 –
ªt
 );

1234 
	`mem˝y
–
s¶
->
out_iv
, s¶->
å™sf‹m_out
->
iv_íc
,

1235 
s¶
->
å™sf‹m_out
->
ivÀn
 );

1240 
íc_msg
 = 
s¶
->
out_msg
;

1241 
íc_msgÀn
 = 
s¶
->
out_msgÀn
;

1242 
s¶
->
out_msgÀn
 +s¶->
å™sf‹m_out
->
ivÀn
;

1246 
	`SSL_DEBUG_MSG
( 3, ( "beforeÉncrypt: msglen = %d, "

1248 
s¶
->
out_msgÀn
, s¶->
å™sf‹m_out
->
ivÀn
,

1249 
∑dÀn
 + 1 ) );

1251 
	`SSL_DEBUG_BUF
( 4, "beforeÉncrypt: outputÖayload",

1252 
s¶
->
out_iv
, s¶->
out_msgÀn
 );

1254 if––
ªt
 = 
	`cùhî_¸y±
–&
s¶
->
å™sf‹m_out
->
cùhî_˘x_íc
,

1255 
s¶
->
å™sf‹m_out
->
iv_íc
,

1256 
s¶
->
å™sf‹m_out
->
ivÀn
,

1257 
íc_msg
, 
íc_msgÀn
,

1258 
íc_msg
, &
ﬁí
 ) ) != 0 )

1260 
	`SSL_DEBUG_RET
–1, "cùhî_¸y±", 
ªt
 );

1261 –
ªt
 );

1264 if–
íc_msgÀn
 !
ﬁí
 )

1266 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

1267 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

1270 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1
)

1271 if–
s¶
->
mö‹_vî
 < 
SSL_MINOR_VERSION_2
 )

1276 
	`mem˝y
–
s¶
->
å™sf‹m_out
->
iv_íc
,

1277 
s¶
->
å™sf‹m_out
->
cùhî_˘x_íc
.
iv
,

1278 
s¶
->
å™sf‹m_out
->
ivÀn
 );

1284 –
POLARSSL_AES_C
 || 
POLARSSL_CAMELLIA_C
 ) */

1286 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

1287 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

1290  
i
 = 8; i > 0; i-- )

1291 if–++
s¶
->
out_˘r
[
i
 - 1] != 0 )

1295 if–
i
 == 0 )

1297 
	`SSL_DEBUG_MSG
( 1, ( "outgoing message counter would wrap" ) );

1298 –
POLARSSL_ERR_SSL_COUNTER_WRAPPING
 );

1301 
	`SSL_DEBUG_MSG
( 2, ( "<=Éncrypt buf" ) );

1304 
	}
}

1306 
	#POLARSSL_SSL_MAX_MAC_SIZE
 48

	)

1308 
	$s¶_de¸y±_buf
–
s¶_c⁄ãxt
 *
s¶
 )

1310 
size_t
 
i
;

1311 c⁄° 
cùhî_mode_t
 
mode
 = 
	`cùhî_gë_cùhî_mode
(

1312 &
s¶
->
å™sf‹m_ö
->
cùhî_˘x_dec
 );

1313 #i‡
	`deföed
(
POLARSSL_ARC4_C
Ë|| deföed(
POLARSSL_CIPHER_NULL_CIPHER
) || \

1314 –
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
) && \

1315 –
	`deföed
(
POLARSSL_AES_C
Ë|| deföed(
POLARSSL_CAMELLIA_C
) ) )

1316 
size_t
 
∑dÀn
 = 0, 
c‹ª˘
 = 1;

1319 
	`SSL_DEBUG_MSG
( 2, ( "=> decrypt buf" ) );

1321 if–
s¶
->
ö_msgÀn
 < s¶->
å™sf‹m_ö
->
möÀn
 )

1323 
	`SSL_DEBUG_MSG
( 1, ( "in_msglen (%d) < minlen (%d)",

1324 
s¶
->
ö_msgÀn
, s¶->
å™sf‹m_ö
->
möÀn
 ) );

1325 –
POLARSSL_ERR_SSL_INVALID_MAC
 );

1328 #i‡
	`deföed
(
POLARSSL_ARC4_C
Ë|| deföed(
POLARSSL_CIPHER_NULL_CIPHER
)

1329 if–
mode
 =
POLARSSL_MODE_STREAM
 )

1331 
ªt
;

1332 
size_t
 
ﬁí
 = 0;

1334 
∑dÀn
 = 0;

1336 if––
ªt
 = 
	`cùhî_¸y±
–&
s¶
->
å™sf‹m_ö
->
cùhî_˘x_dec
,

1337 
s¶
->
å™sf‹m_ö
->
iv_dec
,

1338 
s¶
->
å™sf‹m_ö
->
ivÀn
,

1339 
s¶
->
ö_msg
, s¶->
ö_msgÀn
,

1340 
s¶
->
ö_msg
, &
ﬁí
 ) ) != 0 )

1342 
	`SSL_DEBUG_RET
–1, "cùhî_¸y±", 
ªt
 );

1343 –
ªt
 );

1346 if–
s¶
->
ö_msgÀn
 !
ﬁí
 )

1348 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

1349 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

1354 #i‡
	`deföed
(
POLARSSL_GCM_C
Ë|| deföed(
POLARSSL_CCM_C
)

1355 if–
mode
 =
POLARSSL_MODE_GCM
 ||

1356 
mode
 =
POLARSSL_MODE_CCM
 )

1358 
ªt
;

1359 
size_t
 
dec_msgÀn
, 
ﬁí
;

1360 *
dec_msg
;

1361 *
dec_msg_ªsu…
;

1362 
add_d©a
[13];

1363 
ègÀn
 = 
s¶
->
å™sf‹m_ö
->
cùhîsuôe_öfo
->
Êags
 &

1364 
POLARSSL_CIPHERSUITE_SHORT_TAG
 ? 8 : 16;

1365 
ex∂icô_iv_Àn
 = 
s¶
->
å™sf‹m_ö
->
ivÀn
 -

1366 
s¶
->
å™sf‹m_ö
->
fixed_ivÀn
;

1368 if–
s¶
->
ö_msgÀn
 < 
ex∂icô_iv_Àn
 + 
ègÀn
 )

1370 
	`SSL_DEBUG_MSG
( 1, ( "msglen (%d) <Éxplicit_iv_len (%d) "

1371 "+ÅagÀ¿(%d)", 
s¶
->
ö_msgÀn
,

1372 
ex∂icô_iv_Àn
, 
ègÀn
 ) );

1373 –
POLARSSL_ERR_SSL_INVALID_MAC
 );

1375 
dec_msgÀn
 = 
s¶
->
ö_msgÀn
 - 
ex∂icô_iv_Àn
 - 
ègÀn
;

1377 
dec_msg
 = 
s¶
->
ö_msg
;

1378 
dec_msg_ªsu…
 = 
s¶
->
ö_msg
;

1379 
s¶
->
ö_msgÀn
 = 
dec_msgÀn
;

1381 
	`mem˝y
–
add_d©a
, 
s¶
->
ö_˘r
, 8 );

1382 
add_d©a
[8] = 
s¶
->
ö_msgty≥
;

1383 
add_d©a
[9] = 
s¶
->
maj‹_vî
;

1384 
add_d©a
[10] = 
s¶
->
mö‹_vî
;

1385 
add_d©a
[11] = ( 
s¶
->
ö_msgÀn
 >> 8 ) & 0xFF;

1386 
add_d©a
[12] = 
s¶
->
ö_msgÀn
 & 0xFF;

1388 
	`SSL_DEBUG_BUF
( 4, "additional data used for AEAD",

1389 
add_d©a
, 13 );

1391 
	`mem˝y
–
s¶
->
å™sf‹m_ö
->
iv_dec
 + s¶->å™sf‹m_ö->
fixed_ivÀn
,

1392 
s¶
->
ö_iv
,

1393 
s¶
->
å™sf‹m_ö
->
ivÀn
 - s¶->å™sf‹m_ö->
fixed_ivÀn
 );

1395 
	`SSL_DEBUG_BUF
–4, "IV u£d", 
s¶
->
å™sf‹m_ö
->
iv_dec
,

1396 
s¶
->
å™sf‹m_ö
->
ivÀn
 );

1397 
	`SSL_DEBUG_BUF
–4, "TAG u£d", 
dec_msg
 + 
dec_msgÀn
, 
ègÀn
 );

1402 if––
ªt
 = 
	`cùhî_auth_de¸y±
–&
s¶
->
å™sf‹m_ö
->
cùhî_˘x_dec
,

1403 
s¶
->
å™sf‹m_ö
->
iv_dec
,

1404 
s¶
->
å™sf‹m_ö
->
ivÀn
,

1405 
add_d©a
, 13,

1406 
dec_msg
, 
dec_msgÀn
,

1407 
dec_msg_ªsu…
, &
ﬁí
,

1408 
dec_msg
 + 
dec_msgÀn
, 
ègÀn
 ) ) != 0 )

1410 
	`SSL_DEBUG_RET
–1, "cùhî_auth_de¸y±", 
ªt
 );

1412 if–
ªt
 =
POLARSSL_ERR_CIPHER_AUTH_FAILED
 )

1413 –
POLARSSL_ERR_SSL_INVALID_MAC
 );

1415 –
ªt
 );

1418 if–
ﬁí
 !
dec_msgÀn
 )

1420 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

1421 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

1426 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
) && \

1427 –
	`deföed
(
POLARSSL_AES_C
Ë|| deföed(
POLARSSL_CAMELLIA_C
) )

1428 if–
mode
 =
POLARSSL_MODE_CBC
 )

1433 
ªt
;

1434 *
dec_msg
;

1435 *
dec_msg_ªsu…
;

1436 
size_t
 
dec_msgÀn
;

1437 
size_t
 
möÀn
 = 0;

1438 
size_t
 
ﬁí
 = 0;

1443 if–
s¶
->
ö_msgÀn
 % s¶->
å™sf‹m_ö
->
ivÀn
 != 0 )

1445 
	`SSL_DEBUG_MSG
( 1, ( "msglen (%d) %% ivlen (%d) != 0",

1446 
s¶
->
ö_msgÀn
, s¶->
å™sf‹m_ö
->
ivÀn
 ) );

1447 –
POLARSSL_ERR_SSL_INVALID_MAC
 );

1450 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_2
)

1451 if–
s¶
->
mö‹_vî
 >
SSL_MINOR_VERSION_2
 )

1452 
möÀn
 +
s¶
->
å™sf‹m_ö
->
ivÀn
;

1455 if–
s¶
->
ö_msgÀn
 < 
möÀn
 + s¶->
å™sf‹m_ö
->
ivÀn
 ||

1456 
s¶
->
ö_msgÀn
 < 
möÀn
 + s¶->
å™sf‹m_ö
->
ma˛í
 + 1 )

1458 
	`SSL_DEBUG_MSG
( 1, ( "msglen (%d) < max( ivlen(%d), maclen (%d) "

1459 "+ 1 ) ( +Éx∂ IV )", 
s¶
->
ö_msgÀn
,

1460 
s¶
->
å™sf‹m_ö
->
ivÀn
,

1461 
s¶
->
å™sf‹m_ö
->
ma˛í
 ) );

1462 –
POLARSSL_ERR_SSL_INVALID_MAC
 );

1465 
dec_msgÀn
 = 
s¶
->
ö_msgÀn
;

1466 
dec_msg
 = 
s¶
->
ö_msg
;

1467 
dec_msg_ªsu…
 = 
s¶
->
ö_msg
;

1469 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_2
)

1473 if–
s¶
->
mö‹_vî
 >
SSL_MINOR_VERSION_2
 )

1475 
dec_msgÀn
 -
s¶
->
å™sf‹m_ö
->
ivÀn
;

1476 
s¶
->
ö_msgÀn
 -s¶->
å™sf‹m_ö
->
ivÀn
;

1478  
i
 = 0; i < 
s¶
->
å™sf‹m_ö
->
ivÀn
; i++ )

1479 
s¶
->
å™sf‹m_ö
->
iv_dec
[
i
] = s¶->
ö_iv
[i];

1483 if––
ªt
 = 
	`cùhî_¸y±
–&
s¶
->
å™sf‹m_ö
->
cùhî_˘x_dec
,

1484 
s¶
->
å™sf‹m_ö
->
iv_dec
,

1485 
s¶
->
å™sf‹m_ö
->
ivÀn
,

1486 
dec_msg
, 
dec_msgÀn
,

1487 
dec_msg_ªsu…
, &
ﬁí
 ) ) != 0 )

1489 
	`SSL_DEBUG_RET
–1, "cùhî_¸y±", 
ªt
 );

1490 –
ªt
 );

1493 if–
dec_msgÀn
 !
ﬁí
 )

1495 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

1496 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

1499 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1
)

1500 if–
s¶
->
mö‹_vî
 < 
SSL_MINOR_VERSION_2
 )

1505 
	`mem˝y
–
s¶
->
å™sf‹m_ö
->
iv_dec
,

1506 
s¶
->
å™sf‹m_ö
->
cùhî_˘x_dec
.
iv
,

1507 
s¶
->
å™sf‹m_ö
->
ivÀn
 );

1511 
∑dÀn
 = 1 + 
s¶
->
ö_msg
[s¶->
ö_msgÀn
 - 1];

1513 if–
s¶
->
ö_msgÀn
 < s¶->
å™sf‹m_ö
->
ma˛í
 + 
∑dÀn
 )

1515 #i‡
	`deföed
(
POLARSSL_SSL_DEBUG_ALL
)

1516 
	`SSL_DEBUG_MSG
( 1, ( "msglen (%d) < maclen (%d) +Öadlen (%d)",

1517 
s¶
->
ö_msgÀn
, s¶->
å™sf‹m_ö
->
ma˛í
, 
∑dÀn
 ) );

1519 
∑dÀn
 = 0;

1520 
c‹ª˘
 = 0;

1523 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
)

1524 if–
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_0
 )

1526 if–
∑dÀn
 > 
s¶
->
å™sf‹m_ö
->
ivÀn
 )

1528 #i‡
	`deföed
(
POLARSSL_SSL_DEBUG_ALL
)

1529 
	`SSL_DEBUG_MSG
( 1, ( "badÖaddingÜength: is %d, "

1531 
∑dÀn
, 
s¶
->
å™sf‹m_ö
->
ivÀn
 ) );

1533 
c‹ª˘
 = 0;

1538 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_1
) || \

1539 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

1540 if–
s¶
->
mö‹_vî
 > 
SSL_MINOR_VERSION_0
 )

1546 
size_t
 
∑d_cou¡
 = 0, 
ªÆ_cou¡
 = 1;

1547 
size_t
 
∑ddög_idx
 = 
s¶
->
ö_msgÀn
 - 
∑dÀn
 - 1;

1559 
c‹ª˘
 &–
s¶
->
ö_msgÀn
 >
∑dÀn
 + 1 );

1560 
c‹ª˘
 &–
∑ddög_idx
 < 
SSL_MAX_CONTENT_LEN
 +

1561 
s¶
->
å™sf‹m_ö
->
ma˛í
 );

1563 
∑ddög_idx
 *
c‹ª˘
;

1565  
i
 = 1; i <= 256; i++ )

1567 
ªÆ_cou¡
 &–
i
 <
∑dÀn
 );

1568 
∑d_cou¡
 +
ªÆ_cou¡
 *

1569 –
s¶
->
ö_msg
[
∑ddög_idx
 + 
i
] =
∑dÀn
 - 1 );

1572 
c‹ª˘
 &–
∑d_cou¡
 =
∑dÀn
 );

1574 #i‡
	`deföed
(
POLARSSL_SSL_DEBUG_ALL
)

1575 if–
∑dÀn
 > 0 && 
c‹ª˘
 == 0 )

1576 
	`SSL_DEBUG_MSG
( 1, ( "badÖadding byte detected" ) );

1578 
∑dÀn
 &
c‹ª˘
 * 0x1FF;

1582 
POLARSSL_SSL_PROTO_TLS1_2
 */

1584 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

1585 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

1590 –
POLARSSL_AES_C
 || 
POLARSSL_CAMELLIA_C
 ) */

1592 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

1593 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

1596 
	`SSL_DEBUG_BUF
( 4, "raw bufferáfter decryption",

1597 
s¶
->
ö_msg
, s¶->
ö_msgÀn
 );

1602 #i‡
	`deföed
(
POLARSSL_ARC4_C
Ë|| deföed(
POLARSSL_CIPHER_NULL_CIPHER
) || \

1603 –
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
) && \

1604 –
	`deföed
(
POLARSSL_AES_C
Ë|| deföed(
POLARSSL_CAMELLIA_C
) ) )

1605 if–
mode
 !
POLARSSL_MODE_GCM
 &&

1606 
mode
 !
POLARSSL_MODE_CCM
 )

1608 
tmp
[
POLARSSL_SSL_MAX_MAC_SIZE
];

1610 
s¶
->
ö_msgÀn
 -–s¶->
å™sf‹m_ö
->
ma˛í
 + 
∑dÀn
 );

1612 
s¶
->
ö_hdr
[3] = ()–s¶->
ö_msgÀn
 >> 8 );

1613 
s¶
->
ö_hdr
[4] = ()–s¶->
ö_msgÀn
 );

1615 
	`mem˝y
–
tmp
, 
s¶
->
ö_msg
 + s¶->
ö_msgÀn
, s¶->
å™sf‹m_ö
->
ma˛í
 );

1617 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
)

1618 if–
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_0
 )

1620 
	`s¶_mac
–&
s¶
->
å™sf‹m_ö
->
md_˘x_dec
,

1621 
s¶
->
å™sf‹m_ö
->
mac_dec
,

1622 
s¶
->
ö_msg
, s¶->
ö_msgÀn
,

1623 
s¶
->
ö_˘r
, s¶->
ö_msgty≥
 );

1627 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_1
) || \

1628 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

1629 if–
s¶
->
mö‹_vî
 > 
SSL_MINOR_VERSION_0
 )

1644 
size_t
 
j
, 
exåa_run
 = 0;

1645 
exåa_run
 = ( 13 + 
s¶
->
ö_msgÀn
 + 
∑dÀn
 + 8 ) / 64 -

1646 –13 + 
s¶
->
ö_msgÀn
 + 8 ) / 64;

1648 
exåa_run
 &
c‹ª˘
 * 0xFF;

1650 
	`md_hmac_upd©e
–&
s¶
->
å™sf‹m_ö
->
md_˘x_dec
, s¶->
ö_˘r
, 13 );

1651 
	`md_hmac_upd©e
–&
s¶
->
å™sf‹m_ö
->
md_˘x_dec
, s¶->
ö_msg
,

1652 
s¶
->
ö_msgÀn
 );

1653 
	`md_hmac_föish
–&
s¶
->
å™sf‹m_ö
->
md_˘x_dec
,

1654 
s¶
->
ö_msg
 + s¶->
ö_msgÀn
 );

1655  
j
 = 0; j < 
exåa_run
; j++ )

1656 
	`md_¥o˚ss
–&
s¶
->
å™sf‹m_ö
->
md_˘x_dec
, s¶->
ö_msg
 );

1658 
	`md_hmac_ª£t
–&
s¶
->
å™sf‹m_ö
->
md_˘x_dec
 );

1662 
POLARSSL_SSL_PROTO_TLS1_2
 */

1664 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

1665 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

1668 
	`SSL_DEBUG_BUF
–4, "mesßgê mac", 
tmp
, 
s¶
->
å™sf‹m_ö
->
ma˛í
 );

1669 
	`SSL_DEBUG_BUF
–4, "compuãd mac", 
s¶
->
ö_msg
 + s¶->
ö_msgÀn
,

1670 
s¶
->
å™sf‹m_ö
->
ma˛í
 );

1672 if–
	`ß„r_memcmp
–
tmp
, 
s¶
->
ö_msg
 + s¶->
ö_msgÀn
,

1673 
s¶
->
å™sf‹m_ö
->
ma˛í
 ) != 0 )

1675 #i‡
	`deföed
(
POLARSSL_SSL_DEBUG_ALL
)

1676 
	`SSL_DEBUG_MSG
( 1, ( "message mac doesÇot match" ) );

1678 
c‹ª˘
 = 0;

1684 if–
c‹ª˘
 == 0 )

1685 –
POLARSSL_ERR_SSL_INVALID_MAC
 );

1689 if–
s¶
->
ö_msgÀn
 == 0 )

1691 
s¶
->
nb_zîo
++;

1697 if–
s¶
->
nb_zîo
 > 3 )

1699 
	`SSL_DEBUG_MSG
( 1, ( "received four consecutiveÉmpty "

1701 –
POLARSSL_ERR_SSL_INVALID_MAC
 );

1705 
s¶
->
nb_zîo
 = 0;

1707  
i
 = 8; i > 0; i-- )

1708 if–++
s¶
->
ö_˘r
[
i
 - 1] != 0 )

1712 if–
i
 == 0 )

1714 
	`SSL_DEBUG_MSG
( 1, ( "incoming message counter would wrap" ) );

1715 –
POLARSSL_ERR_SSL_COUNTER_WRAPPING
 );

1718 
	`SSL_DEBUG_MSG
( 2, ( "<= decrypt buf" ) );

1721 
	}
}

1723 #i‡
deföed
(
POLARSSL_ZLIB_SUPPORT
)

1727 
	$s¶_com¥ess_buf
–
s¶_c⁄ãxt
 *
s¶
 )

1729 
ªt
;

1730 *
msg_po°
 = 
s¶
->
out_msg
;

1731 
size_t
 
Àn_¥e
 = 
s¶
->
out_msgÀn
;

1732 *
msg_¥e
 = 
s¶
->
com¥ess_buf
;

1734 
	`SSL_DEBUG_MSG
( 2, ( "=> compress buf" ) );

1736 if–
Àn_¥e
 == 0 )

1739 
	`mem˝y
–
msg_¥e
, 
s¶
->
out_msg
, 
Àn_¥e
 );

1741 
	`SSL_DEBUG_MSG
( 3, ( "before compression: msglen = %d, ",

1742 
s¶
->
out_msgÀn
 ) );

1744 
	`SSL_DEBUG_BUF
( 4, "before compression: outputÖayload",

1745 
s¶
->
out_msg
, s¶->
out_msgÀn
 );

1747 
s¶
->
å™sf‹m_out
->
˘x_deÊ©e
.
√xt_ö
 = 
msg_¥e
;

1748 
s¶
->
å™sf‹m_out
->
˘x_deÊ©e
.
avaû_ö
 = 
Àn_¥e
;

1749 
s¶
->
å™sf‹m_out
->
˘x_deÊ©e
.
√xt_out
 = 
msg_po°
;

1750 
s¶
->
å™sf‹m_out
->
˘x_deÊ©e
.
avaû_out
 = 
SSL_BUFFER_LEN
;

1752 
ªt
 = 
	`deÊ©e
–&
s¶
->
å™sf‹m_out
->
˘x_deÊ©e
, 
Z_SYNC_FLUSH
 );

1753 if–
ªt
 !
Z_OK
 )

1755 
	`SSL_DEBUG_MSG
–1, ( "ÁûedÅÿ≥rf‹m com¥essi⁄ (%d)", 
ªt
 ) );

1756 –
POLARSSL_ERR_SSL_COMPRESSION_FAILED
 );

1759 
s¶
->
out_msgÀn
 = 
SSL_BUFFER_LEN
 -

1760 
s¶
->
å™sf‹m_out
->
˘x_deÊ©e
.
avaû_out
;

1762 
	`SSL_DEBUG_MSG
( 3, ( "after compression: msglen = %d, ",

1763 
s¶
->
out_msgÀn
 ) );

1765 
	`SSL_DEBUG_BUF
( 4, "after compression: outputÖayload",

1766 
s¶
->
out_msg
, s¶->
out_msgÀn
 );

1768 
	`SSL_DEBUG_MSG
( 2, ( "<= compress buf" ) );

1771 
	}
}

1773 
	$s¶_decom¥ess_buf
–
s¶_c⁄ãxt
 *
s¶
 )

1775 
ªt
;

1776 *
msg_po°
 = 
s¶
->
ö_msg
;

1777 
size_t
 
Àn_¥e
 = 
s¶
->
ö_msgÀn
;

1778 *
msg_¥e
 = 
s¶
->
com¥ess_buf
;

1780 
	`SSL_DEBUG_MSG
( 2, ( "=> decompress buf" ) );

1782 if–
Àn_¥e
 == 0 )

1785 
	`mem˝y
–
msg_¥e
, 
s¶
->
ö_msg
, 
Àn_¥e
 );

1787 
	`SSL_DEBUG_MSG
( 3, ( "before decompression: msglen = %d, ",

1788 
s¶
->
ö_msgÀn
 ) );

1790 
	`SSL_DEBUG_BUF
( 4, "before decompression: inputÖayload",

1791 
s¶
->
ö_msg
, s¶->
ö_msgÀn
 );

1793 
s¶
->
å™sf‹m_ö
->
˘x_öÊ©e
.
√xt_ö
 = 
msg_¥e
;

1794 
s¶
->
å™sf‹m_ö
->
˘x_öÊ©e
.
avaû_ö
 = 
Àn_¥e
;

1795 
s¶
->
å™sf‹m_ö
->
˘x_öÊ©e
.
√xt_out
 = 
msg_po°
;

1796 
s¶
->
å™sf‹m_ö
->
˘x_öÊ©e
.
avaû_out
 = 
SSL_MAX_CONTENT_LEN
;

1798 
ªt
 = 
	`öÊ©e
–&
s¶
->
å™sf‹m_ö
->
˘x_öÊ©e
, 
Z_SYNC_FLUSH
 );

1799 if–
ªt
 !
Z_OK
 )

1801 
	`SSL_DEBUG_MSG
–1, ( "ÁûedÅÿ≥rf‹m decom¥essi⁄ (%d)", 
ªt
 ) );

1802 –
POLARSSL_ERR_SSL_COMPRESSION_FAILED
 );

1805 
s¶
->
ö_msgÀn
 = 
SSL_MAX_CONTENT_LEN
 -

1806 
s¶
->
å™sf‹m_ö
->
˘x_öÊ©e
.
avaû_out
;

1808 
	`SSL_DEBUG_MSG
( 3, ( "after decompression: msglen = %d, ",

1809 
s¶
->
ö_msgÀn
 ) );

1811 
	`SSL_DEBUG_BUF
( 4, "after decompression: inputÖayload",

1812 
s¶
->
ö_msg
, s¶->
ö_msgÀn
 );

1814 
	`SSL_DEBUG_MSG
( 2, ( "<= decompress buf" ) );

1817 
	}
}

1823 
	$s¶_„tch_öput
–
s¶_c⁄ãxt
 *
s¶
, 
size_t
 
nb_w™t
 )

1825 
ªt
;

1826 
size_t
 
Àn
;

1828 
	`SSL_DEBUG_MSG
( 2, ( "=> fetch input" ) );

1830 if–
nb_w™t
 > 
SSL_BUFFER_LEN
 - 8 )

1832 
	`SSL_DEBUG_MSG
( 1, ( "requesting more dataÅhan fits" ) );

1833 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

1836  
s¶
->
ö_À·
 < 
nb_w™t
 )

1838 
Àn
 = 
nb_w™t
 - 
s¶
->
ö_À·
;

1839 
ªt
 = 
s¶
->
	`f_ªcv
–s¶->
p_ªcv
, s¶->
ö_hdr
 + s¶->
ö_À·
, 
Àn
 );

1841 
	`SSL_DEBUG_MSG
( 2, ( "in_left: %d,Çb_want: %d",

1842 
s¶
->
ö_À·
, 
nb_w™t
 ) );

1843 
	`SSL_DEBUG_RET
–2, "s¶->f_ªcv", 
ªt
 );

1845 if–
ªt
 == 0 )

1846 –
POLARSSL_ERR_SSL_CONN_EOF
 );

1848 if–
ªt
 < 0 )

1849 –
ªt
 );

1851 
s¶
->
ö_À·
 +
ªt
;

1854 
	`SSL_DEBUG_MSG
( 2, ( "<= fetch input" ) );

1857 
	}
}

1862 
	$s¶_Êush_ouçut
–
s¶_c⁄ãxt
 *
s¶
 )

1864 
ªt
;

1865 *
buf
;

1867 
	`SSL_DEBUG_MSG
( 2, ( "=> flush output" ) );

1869  
s¶
->
out_À·
 > 0 )

1871 
	`SSL_DEBUG_MSG
( 2, ( "messageÜength: %d, out_left: %d",

1872 5 + 
s¶
->
out_msgÀn
, s¶->
out_À·
 ) );

1874 
buf
 = 
s¶
->
out_hdr
 + 5 + s¶->
out_msgÀn
 - s¶->
out_À·
;

1875 
ªt
 = 
s¶
->
	`f_£nd
–s¶->
p_£nd
, 
buf
, s¶->
out_À·
 );

1877 
	`SSL_DEBUG_RET
–2, "s¶->f_£nd", 
ªt
 );

1879 if–
ªt
 <= 0 )

1880 –
ªt
 );

1882 
s¶
->
out_À·
 -
ªt
;

1885 
	`SSL_DEBUG_MSG
( 2, ( "<= flush output" ) );

1888 
	}
}

1893 
	$s¶_wrôe_ªc‹d
–
s¶_c⁄ãxt
 *
s¶
 )

1895 
ªt
, 
d⁄e
 = 0;

1896 
size_t
 
Àn
 = 
s¶
->
out_msgÀn
;

1898 
	`SSL_DEBUG_MSG
( 2, ( "=> writeÑecord" ) );

1900 if–
s¶
->
out_msgty≥
 =
SSL_MSG_HANDSHAKE
 )

1902 
s¶
->
out_msg
[1] = ()––
Àn
 - 4 ) >> 16 );

1903 
s¶
->
out_msg
[2] = ()––
Àn
 - 4 ) >> 8 );

1904 
s¶
->
out_msg
[3] = ()––
Àn
 - 4 ) );

1906 if–
s¶
->
out_msg
[0] !
SSL_HS_HELLO_REQUEST
 )

1907 
s¶
->
h™dshake
->
	`upd©e_checksum
–s¶, s¶->
out_msg
, 
Àn
 );

1910 #i‡
	`deföed
(
POLARSSL_ZLIB_SUPPORT
)

1911 if–
s¶
->
å™sf‹m_out
 !
NULL
 &&

1912 
s¶
->
£ssi⁄_out
->
com¥essi⁄
 =
SSL_COMPRESS_DEFLATE
 )

1914 if––
ªt
 = 
	`s¶_com¥ess_buf
–
s¶
 ) ) != 0 )

1916 
	`SSL_DEBUG_RET
–1, "s¶_com¥ess_buf", 
ªt
 );

1917 –
ªt
 );

1920 
Àn
 = 
s¶
->
out_msgÀn
;

1924 #i‡
	`deföed
(
POLARSSL_SSL_HW_RECORD_ACCEL
)

1925 if–
s¶_hw_ªc‹d_wrôe
 !
NULL
 )

1927 
	`SSL_DEBUG_MSG
( 2, ( "going for ssl_hw_record_write()" ) );

1929 
ªt
 = 
	`s¶_hw_ªc‹d_wrôe
–
s¶
 );

1930 if–
ªt
 !0 &&Ñë !
POLARSSL_ERR_SSL_HW_ACCEL_FALLTHROUGH
 )

1932 
	`SSL_DEBUG_RET
–1, "s¶_hw_ªc‹d_wrôe", 
ªt
 );

1933 –
POLARSSL_ERR_SSL_HW_ACCEL_FAILED
 );

1936 if–
ªt
 == 0 )

1937 
d⁄e
 = 1;

1940 if–!
d⁄e
 )

1942 
s¶
->
out_hdr
[0] = (Ës¶->
out_msgty≥
;

1943 
s¶
->
out_hdr
[1] = (Ës¶->
maj‹_vî
;

1944 
s¶
->
out_hdr
[2] = (Ës¶->
mö‹_vî
;

1945 
s¶
->
out_hdr
[3] = ()–
Àn
 >> 8 );

1946 
s¶
->
out_hdr
[4] = ()–
Àn
 );

1948 if–
s¶
->
å™sf‹m_out
 !
NULL
 )

1950 if––
ªt
 = 
	`s¶_í¸y±_buf
–
s¶
 ) ) != 0 )

1952 
	`SSL_DEBUG_RET
–1, "s¶_í¸y±_buf", 
ªt
 );

1953 –
ªt
 );

1956 
Àn
 = 
s¶
->
out_msgÀn
;

1957 
s¶
->
out_hdr
[3] = ()–
Àn
 >> 8 );

1958 
s¶
->
out_hdr
[4] = ()–
Àn
 );

1961 
s¶
->
out_À·
 = 5 + s¶->
out_msgÀn
;

1963 
	`SSL_DEBUG_MSG
( 3, ( "outputÑecord: msgtype = %d, "

1965 
s¶
->
out_hdr
[0], ssl->out_hdr[1], ssl->out_hdr[2],

1966 –
s¶
->
out_hdr
[3] << 8 ) | ssl->out_hdr[4] ) );

1968 
	`SSL_DEBUG_BUF
( 4, "outputÑecord sentÅoÇetwork",

1969 
s¶
->
out_hdr
, 5 + s¶->
out_msgÀn
 );

1972 if––
ªt
 = 
	`s¶_Êush_ouçut
–
s¶
 ) ) != 0 )

1974 
	`SSL_DEBUG_RET
–1, "s¶_Êush_ouçut", 
ªt
 );

1975 –
ªt
 );

1978 
	`SSL_DEBUG_MSG
( 2, ( "<= writeÑecord" ) );

1981 
	}
}

1983 
	$s¶_ªad_ªc‹d
–
s¶_c⁄ãxt
 *
s¶
 )

1985 
ªt
, 
d⁄e
 = 0;

1987 
	`SSL_DEBUG_MSG
( 2, ( "=>ÑeadÑecord" ) );

1989 if–
s¶
->
ö_h¶í
 != 0 &&

1990 
s¶
->
ö_h¶í
 < s¶->
ö_msgÀn
 )

1995 
s¶
->
ö_msgÀn
 -s¶->
ö_h¶í
;

1997 
	`memmove
–
s¶
->
ö_msg
, s¶->ö_msg + s¶->
ö_h¶í
,

1998 
s¶
->
ö_msgÀn
 );

2000 
s¶
->
ö_h¶í
 = 4;

2001 
s¶
->
ö_h¶í
 +–s¶->
ö_msg
[2] << 8 ) | ssl->in_msg[3];

2003 
	`SSL_DEBUG_MSG
( 3, ( "handshake message: msglen ="

2005 
s¶
->
ö_msgÀn
, s¶->
ö_msg
[0], s¶->
ö_h¶í
 ) );

2007 if–
s¶
->
ö_msgÀn
 < 4 || s¶->
ö_msg
[1] != 0 )

2009 
	`SSL_DEBUG_MSG
( 1, ( "bad handshakeÜength" ) );

2010 –
POLARSSL_ERR_SSL_INVALID_RECORD
 );

2013 if–
s¶
->
ö_msgÀn
 < s¶->
ö_h¶í
 )

2015 
	`SSL_DEBUG_MSG
( 1, ( "bad handshakeÜength" ) );

2016 –
POLARSSL_ERR_SSL_INVALID_RECORD
 );

2019 if–
s¶
->
°©e
 !
SSL_HANDSHAKE_OVER
 )

2020 
s¶
->
h™dshake
->
	`upd©e_checksum
–s¶, s¶->
ö_msg
, s¶->
ö_h¶í
 );

2025 
s¶
->
ö_h¶í
 = 0;

2030 if––
ªt
 = 
	`s¶_„tch_öput
–
s¶
, 5 ) ) != 0 )

2032 
	`SSL_DEBUG_RET
–1, "s¶_„tch_öput", 
ªt
 );

2033 –
ªt
 );

2036 
s¶
->
ö_msgty≥
 = s¶->
ö_hdr
[0];

2037 
s¶
->
ö_msgÀn
 = ( s¶->
ö_hdr
[3] << 8 ) | ssl->in_hdr[4];

2039 
	`SSL_DEBUG_MSG
( 3, ( "inputÑecord: msgtype = %d, "

2041 
s¶
->
ö_hdr
[0], ssl->in_hdr[1], ssl->in_hdr[2],

2042 –
s¶
->
ö_hdr
[3] << 8 ) | ssl->in_hdr[4] ) );

2044 if–
s¶
->
ö_hdr
[1] !s¶->
maj‹_vî
 )

2046 
	`SSL_DEBUG_MSG
( 1, ( "major version mismatch" ) );

2047 –
POLARSSL_ERR_SSL_INVALID_RECORD
 );

2050 if–
s¶
->
ö_hdr
[2] > s¶->
max_mö‹_vî
 )

2052 
	`SSL_DEBUG_MSG
( 1, ( "minor version mismatch" ) );

2053 –
POLARSSL_ERR_SSL_INVALID_RECORD
 );

2057 if–
s¶
->
ö_msgÀn
 < 1 || s¶->ö_msgÀ¿> 
SSL_BUFFER_LEN
 - 13 )

2059 
	`SSL_DEBUG_MSG
( 1, ( "bad messageÜength" ) );

2060 –
POLARSSL_ERR_SSL_INVALID_RECORD
 );

2067 if–
s¶
->
å™sf‹m_ö
 =
NULL
 )

2069 if–
s¶
->
ö_msgÀn
 > 
SSL_MAX_CONTENT_LEN
 )

2071 
	`SSL_DEBUG_MSG
( 1, ( "bad messageÜength" ) );

2072 –
POLARSSL_ERR_SSL_INVALID_RECORD
 );

2077 if–
s¶
->
ö_msgÀn
 < s¶->
å™sf‹m_ö
->
möÀn
 )

2079 
	`SSL_DEBUG_MSG
( 1, ( "bad messageÜength" ) );

2080 –
POLARSSL_ERR_SSL_INVALID_RECORD
 );

2083 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
)

2084 if–
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_0
 &&

2085 
s¶
->
ö_msgÀn
 > s¶->
å™sf‹m_ö
->
möÀn
 + 
SSL_MAX_CONTENT_LEN
 )

2087 
	`SSL_DEBUG_MSG
( 1, ( "bad messageÜength" ) );

2088 –
POLARSSL_ERR_SSL_INVALID_RECORD
 );

2092 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_1
) || \

2093 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

2097 if–
s¶
->
mö‹_vî
 >
SSL_MINOR_VERSION_1
 &&

2098 
s¶
->
ö_msgÀn
 > s¶->
å™sf‹m_ö
->
möÀn
 +

2099 
SSL_MAX_CONTENT_LEN
 + 256 )

2101 
	`SSL_DEBUG_MSG
( 1, ( "bad messageÜength" ) );

2102 –
POLARSSL_ERR_SSL_INVALID_RECORD
 );

2110 if––
ªt
 = 
	`s¶_„tch_öput
–
s¶
, 5 + s¶->
ö_msgÀn
 ) ) != 0 )

2112 
	`SSL_DEBUG_RET
–1, "s¶_„tch_öput", 
ªt
 );

2113 –
ªt
 );

2116 
	`SSL_DEBUG_BUF
( 4, "inputÑecord fromÇetwork",

2117 
s¶
->
ö_hdr
, 5 + s¶->
ö_msgÀn
 );

2119 #i‡
	`deföed
(
POLARSSL_SSL_HW_RECORD_ACCEL
)

2120 if–
s¶_hw_ªc‹d_ªad
 !
NULL
 )

2122 
	`SSL_DEBUG_MSG
( 2, ( "going for ssl_hw_record_read()" ) );

2124 
ªt
 = 
	`s¶_hw_ªc‹d_ªad
–
s¶
 );

2125 if–
ªt
 !0 &&Ñë !
POLARSSL_ERR_SSL_HW_ACCEL_FALLTHROUGH
 )

2127 
	`SSL_DEBUG_RET
–1, "s¶_hw_ªc‹d_ªad", 
ªt
 );

2128 –
POLARSSL_ERR_SSL_HW_ACCEL_FAILED
 );

2131 if–
ªt
 == 0 )

2132 
d⁄e
 = 1;

2135 if–!
d⁄e
 && 
s¶
->
å™sf‹m_ö
 !
NULL
 )

2137 if––
ªt
 = 
	`s¶_de¸y±_buf
–
s¶
 ) ) != 0 )

2139 #i‡
	`deföed
(
POLARSSL_SSL_ALERT_MESSAGES
)

2140 if–
ªt
 =
POLARSSL_ERR_SSL_INVALID_MAC
 )

2142 
	`s¶_£nd_Æît_mesßge
–
s¶
,

2143 
SSL_ALERT_LEVEL_FATAL
,

2144 
SSL_ALERT_MSG_BAD_RECORD_MAC
 );

2147 
	`SSL_DEBUG_RET
–1, "s¶_de¸y±_buf", 
ªt
 );

2148 –
ªt
 );

2151 
	`SSL_DEBUG_BUF
( 4, "inputÖayloadáfter decrypt",

2152 
s¶
->
ö_msg
, s¶->
ö_msgÀn
 );

2154 if–
s¶
->
ö_msgÀn
 > 
SSL_MAX_CONTENT_LEN
 )

2156 
	`SSL_DEBUG_MSG
( 1, ( "bad messageÜength" ) );

2157 –
POLARSSL_ERR_SSL_INVALID_RECORD
 );

2161 #i‡
	`deföed
(
POLARSSL_ZLIB_SUPPORT
)

2162 if–
s¶
->
å™sf‹m_ö
 !
NULL
 &&

2163 
s¶
->
£ssi⁄_ö
->
com¥essi⁄
 =
SSL_COMPRESS_DEFLATE
 )

2165 if––
ªt
 = 
	`s¶_decom¥ess_buf
–
s¶
 ) ) != 0 )

2167 
	`SSL_DEBUG_RET
–1, "s¶_decom¥ess_buf", 
ªt
 );

2168 –
ªt
 );

2171 
s¶
->
ö_hdr
[3] = ()–s¶->
ö_msgÀn
 >> 8 );

2172 
s¶
->
ö_hdr
[4] = ()–s¶->
ö_msgÀn
 );

2176 if–
s¶
->
ö_msgty≥
 !
SSL_MSG_HANDSHAKE
 &&

2177 
s¶
->
ö_msgty≥
 !
SSL_MSG_ALERT
 &&

2178 
s¶
->
ö_msgty≥
 !
SSL_MSG_CHANGE_CIPHER_SPEC
 &&

2179 
s¶
->
ö_msgty≥
 !
SSL_MSG_APPLICATION_DATA
 )

2181 
	`SSL_DEBUG_MSG
( 1, ( "unknownÑecordÅype" ) );

2183 if––
ªt
 = 
	`s¶_£nd_Æît_mesßge
–
s¶
,

2184 
SSL_ALERT_LEVEL_FATAL
,

2185 
SSL_ALERT_MSG_UNEXPECTED_MESSAGE
 ) ) != 0 )

2187 –
ªt
 );

2190 –
POLARSSL_ERR_SSL_INVALID_RECORD
 );

2193 if–
s¶
->
ö_msgty≥
 =
SSL_MSG_HANDSHAKE
 )

2195 
s¶
->
ö_h¶í
 = 4;

2196 
s¶
->
ö_h¶í
 +–s¶->
ö_msg
[2] << 8 ) | ssl->in_msg[3];

2198 
	`SSL_DEBUG_MSG
( 3, ( "handshake message: msglen ="

2200 
s¶
->
ö_msgÀn
, s¶->
ö_msg
[0], s¶->
ö_h¶í
 ) );

2205 if–
s¶
->
ö_msgÀn
 < 4 || s¶->
ö_msg
[1] != 0 )

2207 
	`SSL_DEBUG_MSG
( 1, ( "bad handshakeÜength" ) );

2208 –
POLARSSL_ERR_SSL_INVALID_RECORD
 );

2211 if–
s¶
->
ö_msgÀn
 < s¶->
ö_h¶í
 )

2213 
	`SSL_DEBUG_MSG
( 1, ( "bad handshakeÜength" ) );

2214 –
POLARSSL_ERR_SSL_INVALID_RECORD
 );

2217 if–
s¶
->
°©e
 !
SSL_HANDSHAKE_OVER
 )

2218 
s¶
->
h™dshake
->
	`upd©e_checksum
–s¶, s¶->
ö_msg
, s¶->
ö_h¶í
 );

2221 if–
s¶
->
ö_msgty≥
 =
SSL_MSG_ALERT
 )

2223 
	`SSL_DEBUG_MSG
( 2, ( "gotánálert message,Åype: [%d:%d]",

2224 
s¶
->
ö_msg
[0], ssl->in_msg[1] ) );

2229 if–
s¶
->
ö_msg
[0] =
SSL_ALERT_LEVEL_FATAL
 )

2231 
	`SSL_DEBUG_MSG
( 1, ( "isá fatalálert message (msg %d)",

2232 
s¶
->
ö_msg
[1] ) );

2237 –
POLARSSL_ERR_SSL_FATAL_ALERT_MESSAGE
 );

2240 if–
s¶
->
ö_msg
[0] =
SSL_ALERT_LEVEL_WARNING
 &&

2241 
s¶
->
ö_msg
[1] =
SSL_ALERT_MSG_CLOSE_NOTIFY
 )

2243 
	`SSL_DEBUG_MSG
( 2, ( "isá closeÇotify message" ) );

2244 –
POLARSSL_ERR_SSL_PEER_CLOSE_NOTIFY
 );

2248 
s¶
->
ö_À·
 = 0;

2250 
	`SSL_DEBUG_MSG
( 2, ( "<=ÑeadÑecord" ) );

2253 
	}
}

2255 
	$s¶_£nd_Áèl_h™dshake_Áûuª
–
s¶_c⁄ãxt
 *
s¶
 )

2257 
ªt
;

2259 if––
ªt
 = 
	`s¶_£nd_Æît_mesßge
–
s¶
,

2260 
SSL_ALERT_LEVEL_FATAL
,

2261 
SSL_ALERT_MSG_HANDSHAKE_FAILURE
 ) ) != 0 )

2263 –
ªt
 );

2267 
	}
}

2269 
	$s¶_£nd_Æît_mesßge
–
s¶_c⁄ãxt
 *
s¶
,

2270 
Àvñ
,

2271 
mesßge
 )

2273 
ªt
;

2275 
	`SSL_DEBUG_MSG
( 2, ( "=> sendálert message" ) );

2277 
s¶
->
out_msgty≥
 = 
SSL_MSG_ALERT
;

2278 
s¶
->
out_msgÀn
 = 2;

2279 
s¶
->
out_msg
[0] = 
Àvñ
;

2280 
s¶
->
out_msg
[1] = 
mesßge
;

2282 if––
ªt
 = 
	`s¶_wrôe_ªc‹d
–
s¶
 ) ) != 0 )

2284 
	`SSL_DEBUG_RET
–1, "s¶_wrôe_ªc‹d", 
ªt
 );

2285 –
ªt
 );

2288 
	`SSL_DEBUG_MSG
( 2, ( "<= sendálert message" ) );

2291 
	}
}

2296 #i‡!
deföed
(
POLARSSL_KEY_EXCHANGE_RSA_ENABLED
) && \

2297 !
deföed
(
POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED
) && \

2298 !
deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
) && \

2299 !
deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) && \

2300 !
deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
) && \

2301 !
deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_RSA_ENABLED
) && \

2302 !
	$deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
)

2303 
	$s¶_wrôe_˚πifiˇã
–
s¶_c⁄ãxt
 *
s¶
 )

2305 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
 = 
s¶
->
å™sf‹m_√gŸüã
->ciphersuite_info;

2307 
	`SSL_DEBUG_MSG
( 2, ( "=> write certificate" ) );

2309 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_PSK
 ||

2310 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 ||

2311 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 )

2313 
	`SSL_DEBUG_MSG
( 2, ( "<= skip write certificate" ) );

2314 
s¶
->
°©e
++;

2318 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

2319 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

2320 
	}
}

2322 
	$s¶_∑r£_˚πifiˇã
–
s¶_c⁄ãxt
 *
s¶
 )

2324 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
 = 
s¶
->
å™sf‹m_√gŸüã
->ciphersuite_info;

2326 
	`SSL_DEBUG_MSG
( 2, ( "=>Öarse certificate" ) );

2328 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_PSK
 ||

2329 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 ||

2330 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 )

2332 
	`SSL_DEBUG_MSG
( 2, ( "<= skipÖarse certificate" ) );

2333 
s¶
->
°©e
++;

2337 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

2338 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

2339 
	}
}

2341 
	$s¶_wrôe_˚πifiˇã
–
s¶_c⁄ãxt
 *
s¶
 )

2343 
ªt
 = 
POLARSSL_ERR_SSL_FEATURE_UNAVAILABLE
;

2344 
size_t
 
i
, 
n
;

2345 c⁄° 
x509_¸t
 *
¸t
;

2346 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
 = 
s¶
->
å™sf‹m_√gŸüã
->ciphersuite_info;

2348 
	`SSL_DEBUG_MSG
( 2, ( "=> write certificate" ) );

2350 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_PSK
 ||

2351 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 ||

2352 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 )

2354 
	`SSL_DEBUG_MSG
( 2, ( "<= skip write certificate" ) );

2355 
s¶
->
°©e
++;

2359 if–
s¶
->
ídpoöt
 =
SSL_IS_CLIENT
 )

2361 if–
s¶
->
˛õ¡_auth
 == 0 )

2363 
	`SSL_DEBUG_MSG
( 2, ( "<= skip write certificate" ) );

2364 
s¶
->
°©e
++;

2368 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
)

2373 if–
	`s¶_own_˚π
–
s¶
 ) =
NULL
 &&

2374 
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_0
 )

2376 
s¶
->
out_msgÀn
 = 2;

2377 
s¶
->
out_msgty≥
 = 
SSL_MSG_ALERT
;

2378 
s¶
->
out_msg
[0] = 
SSL_ALERT_LEVEL_WARNING
;

2379 
s¶
->
out_msg
[1] = 
SSL_ALERT_MSG_NO_CERT
;

2381 
	`SSL_DEBUG_MSG
( 2, ( "gotÇo certificateÅo send" ) );

2382 
wrôe_msg
;

2388 if–
	`s¶_own_˚π
–
s¶
 ) =
NULL
 )

2390 
	`SSL_DEBUG_MSG
( 1, ( "gotÇo certificateÅo send" ) );

2391 –
POLARSSL_ERR_SSL_CERTIFICATE_REQUIRED
 );

2395 
	`SSL_DEBUG_CRT
–3, "ow¿˚πifiˇã", 
	`s¶_own_˚π
–
s¶
 ) );

2406 
i
 = 7;

2407 
¸t
 = 
	`s¶_own_˚π
–
s¶
 );

2409  
¸t
 !
NULL
 )

2411 
n
 = 
¸t
->
øw
.
Àn
;

2412 if–
n
 > 
SSL_MAX_CONTENT_LEN
 - 3 - 
i
 )

2414 
	`SSL_DEBUG_MSG
( 1, ( "certificateÅooÜarge, %d > %d",

2415 
i
 + 3 + 
n
, 
SSL_MAX_CONTENT_LEN
 ) );

2416 –
POLARSSL_ERR_SSL_CERTIFICATE_TOO_LARGE
 );

2419 
s¶
->
out_msg
[
i
 ] = ()–
n
 >> 16 );

2420 
s¶
->
out_msg
[
i
 + 1] = ()–
n
 >> 8 );

2421 
s¶
->
out_msg
[
i
 + 2] = ()–
n
 );

2423 
i
 +3; 
	`mem˝y
–
s¶
->
out_msg
 + i, 
¸t
->
øw
.
p
, 
n
 );

2424 
i
 +
n
; 
¸t
 = cπ->
√xt
;

2427 
s¶
->
out_msg
[4] = ()––
i
 - 7 ) >> 16 );

2428 
s¶
->
out_msg
[5] = ()––
i
 - 7 ) >> 8 );

2429 
s¶
->
out_msg
[6] = ()––
i
 - 7 ) );

2431 
s¶
->
out_msgÀn
 = 
i
;

2432 
s¶
->
out_msgty≥
 = 
SSL_MSG_HANDSHAKE
;

2433 
s¶
->
out_msg
[0] = 
SSL_HS_CERTIFICATE
;

2435 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
)

2436 
wrôe_msg
:

2439 
s¶
->
°©e
++;

2441 if––
ªt
 = 
	`s¶_wrôe_ªc‹d
–
s¶
 ) ) != 0 )

2443 
	`SSL_DEBUG_RET
–1, "s¶_wrôe_ªc‹d", 
ªt
 );

2444 –
ªt
 );

2447 
	`SSL_DEBUG_MSG
( 2, ( "<= write certificate" ) );

2449 –
ªt
 );

2450 
	}
}

2452 
	$s¶_∑r£_˚πifiˇã
–
s¶_c⁄ãxt
 *
s¶
 )

2454 
ªt
 = 
POLARSSL_ERR_SSL_FEATURE_UNAVAILABLE
;

2455 
size_t
 
i
, 
n
;

2456 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
 = 
s¶
->
å™sf‹m_√gŸüã
->ciphersuite_info;

2458 
	`SSL_DEBUG_MSG
( 2, ( "=>Öarse certificate" ) );

2460 if–
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_PSK
 ||

2461 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_DHE_PSK
 ||

2462 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
 )

2464 
	`SSL_DEBUG_MSG
( 2, ( "<= skipÖarse certificate" ) );

2465 
s¶
->
°©e
++;

2469 if–
s¶
->
ídpoöt
 =
SSL_IS_SERVER
 &&

2470 –
s¶
->
authmode
 =
SSL_VERIFY_NONE
 ||

2471 
cùhîsuôe_öfo
->
key_exch™ge
 =
POLARSSL_KEY_EXCHANGE_RSA_PSK
 ) )

2473 
s¶
->
£ssi⁄_√gŸüã
->
vîify_ªsu…
 = 
BADCERT_SKIP_VERIFY
;

2474 
	`SSL_DEBUG_MSG
( 2, ( "<= skipÖarse certificate" ) );

2475 
s¶
->
°©e
++;

2479 if––
ªt
 = 
	`s¶_ªad_ªc‹d
–
s¶
 ) ) != 0 )

2481 
	`SSL_DEBUG_RET
–1, "s¶_ªad_ªc‹d", 
ªt
 );

2482 –
ªt
 );

2485 
s¶
->
°©e
++;

2487 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
)

2491 if–
s¶
->
ídpoöt
 =
SSL_IS_SERVER
 &&

2492 
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_0
 )

2494 if–
s¶
->
ö_msgÀn
 == 2 &&

2495 
s¶
->
ö_msgty≥
 =
SSL_MSG_ALERT
 &&

2496 
s¶
->
ö_msg
[0] =
SSL_ALERT_LEVEL_WARNING
 &&

2497 
s¶
->
ö_msg
[1] =
SSL_ALERT_MSG_NO_CERT
 )

2499 
	`SSL_DEBUG_MSG
( 1, ( "SSLv3 client hasÇo certificate" ) );

2501 
s¶
->
£ssi⁄_√gŸüã
->
vîify_ªsu…
 = 
BADCERT_MISSING
;

2502 if–
s¶
->
authmode
 =
SSL_VERIFY_OPTIONAL
 )

2505 –
POLARSSL_ERR_SSL_NO_CLIENT_CERTIFICATE
 );

2510 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_1
) || \

2511 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

2512 if–
s¶
->
ídpoöt
 =
SSL_IS_SERVER
 &&

2513 
s¶
->
mö‹_vî
 !
SSL_MINOR_VERSION_0
 )

2515 if–
s¶
->
ö_h¶í
 == 7 &&

2516 
s¶
->
ö_msgty≥
 =
SSL_MSG_HANDSHAKE
 &&

2517 
s¶
->
ö_msg
[0] =
SSL_HS_CERTIFICATE
 &&

2518 
	`memcmp
–
s¶
->
ö_msg
 + 4, "\0\0\0", 3 ) == 0 )

2520 
	`SSL_DEBUG_MSG
( 1, ( "TLSv1 client hasÇo certificate" ) );

2522 
s¶
->
£ssi⁄_√gŸüã
->
vîify_ªsu…
 = 
BADCERT_MISSING
;

2523 if–
s¶
->
authmode
 =
SSL_VERIFY_REQUIRED
 )

2524 –
POLARSSL_ERR_SSL_NO_CLIENT_CERTIFICATE
 );

2530 
POLARSSL_SSL_PROTO_TLS1_2
 */

2532 if–
s¶
->
ö_msgty≥
 !
SSL_MSG_HANDSHAKE
 )

2534 
	`SSL_DEBUG_MSG
( 1, ( "bad certificate message" ) );

2535 –
POLARSSL_ERR_SSL_UNEXPECTED_MESSAGE
 );

2538 if–
s¶
->
ö_msg
[0] !
SSL_HS_CERTIFICATE
 || s¶->
ö_h¶í
 < 10 )

2540 
	`SSL_DEBUG_MSG
( 1, ( "bad certificate message" ) );

2541 –
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE
 );

2547 
n
 = ( 
s¶
->
ö_msg
[5] << 8 ) | ssl->in_msg[6];

2549 if–
s¶
->
ö_msg
[4] !0 || s¶->
ö_h¶í
 !7 + 
n
 )

2551 
	`SSL_DEBUG_MSG
( 1, ( "bad certificate message" ) );

2552 –
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE
 );

2556 if–
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
 !
NULL
 )

2558 
	`x509_¸t_‰ì
–
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
 );

2559 
	`pﬁ¨s¶_‰ì
–
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
 );

2562 if––
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
 = (
x509_¸t
 *Ë
	`pﬁ¨s¶_mÆloc
(

2563 –
x509_¸t
 ) ) ) =
NULL
 )

2565 
	`SSL_DEBUG_MSG
( 1, ( "malloc(%d bytes) failed",

2566 –
x509_¸t
 ) ) );

2567 –
POLARSSL_ERR_SSL_MALLOC_FAILED
 );

2570 
	`x509_¸t_öô
–
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
 );

2572 
i
 = 7;

2574  
i
 < 
s¶
->
ö_h¶í
 )

2576 if–
s¶
->
ö_msg
[
i
] != 0 )

2578 
	`SSL_DEBUG_MSG
( 1, ( "bad certificate message" ) );

2579 –
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE
 );

2582 
n
 = ( (Ë
s¶
->
ö_msg
[
i
 + 1] << 8 )

2583 | (Ë
s¶
->
ö_msg
[
i
 + 2];

2584 
i
 += 3;

2586 if–
n
 < 128 || 
i
 +Ç > 
s¶
->
ö_h¶í
 )

2588 
	`SSL_DEBUG_MSG
( 1, ( "bad certificate message" ) );

2589 –
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE
 );

2592 
ªt
 = 
	`x509_¸t_∑r£_dî
–
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
,

2593 
s¶
->
ö_msg
 + 
i
, 
n
 );

2594 if–
ªt
 != 0 )

2596 
	`SSL_DEBUG_RET
–1, " x509_¸t_∑r£_dî", 
ªt
 );

2597 –
ªt
 );

2600 
i
 +
n
;

2603 
	`SSL_DEBUG_CRT
–3, "≥î cîtifiˇã", 
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
 );

2609 if–
s¶
->
ídpoöt
 =
SSL_IS_CLIENT
 &&

2610 
s¶
->
ª√gŸüti⁄
 =
SSL_RENEGOTIATION
 )

2612 if–
s¶
->
£ssi⁄
->
≥î_˚π
 =
NULL
 )

2614 
	`SSL_DEBUG_MSG
( 1, ( "new server cert duringÑenegotiation" ) );

2615 –
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE
 );

2618 if–
s¶
->
£ssi⁄
->
≥î_˚π
->
øw
.
Àn
 !=

2619 
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
->
øw
.
Àn
 ||

2620 
	`memcmp
–
s¶
->
£ssi⁄
->
≥î_˚π
->
øw
.
p
,

2621 
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
->
øw
.
p
,

2622 
s¶
->
£ssi⁄
->
≥î_˚π
->
øw
.
Àn
 ) != 0 )

2624 
	`SSL_DEBUG_MSG
( 1, ( "server cert changed duringÑenegotiation" ) );

2625 –
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE
 );

2629 if–
s¶
->
authmode
 !
SSL_VERIFY_NONE
 )

2631 if–
s¶
->
ˇ_chaö
 =
NULL
 )

2633 
	`SSL_DEBUG_MSG
( 1, ( "gotÇo CA chain" ) );

2634 –
POLARSSL_ERR_SSL_CA_CHAIN_REQUIRED
 );

2640 
ªt
 = 
	`x509_¸t_vîify
–
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
,

2641 
s¶
->
ˇ_chaö
, s¶->
ˇ_¸l
, s¶->
≥î_˙
,

2642 &
s¶
->
£ssi⁄_√gŸüã
->
vîify_ªsu…
,

2643 
s¶
->
f_vrfy
, s¶->
p_vrfy
 );

2645 if–
ªt
 != 0 )

2647 
	`SSL_DEBUG_RET
–1, "x509_vîify_˚π", 
ªt
 );

2654 #i‡
	`deföed
(
POLARSSL_SSL_SET_CURVES
)

2656 
pk_c⁄ãxt
 *
pk
 = &
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
->pk;

2659 if–
	`pk_ˇn_do
–
pk
, 
POLARSSL_PK_ECKEY
 ) &&

2660 ! 
	`s¶_curve_is_ac˚±abÀ
–
s¶
, 
	`pk_ec
–*
pk
 )->
gΩ
.
id
 ) )

2662 
	`SSL_DEBUG_MSG
( 1, ( "bad certificate (EC key curve)" ) );

2663 if–
ªt
 == 0 )

2664 
ªt
 = 
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE
;

2669 if–
	`s¶_check_˚π_ußge
–
s¶
->
£ssi⁄_√gŸüã
->
≥î_˚π
,

2670 
cùhîsuôe_öfo
,

2671 ! 
s¶
->
ídpoöt
 ) != 0 )

2673 
	`SSL_DEBUG_MSG
( 1, ( "bad certificate (usageÉxtensions)" ) );

2674 if–
ªt
 == 0 )

2675 
ªt
 = 
POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE
;

2678 if–
s¶
->
authmode
 !
SSL_VERIFY_REQUIRED
 )

2679 
ªt
 = 0;

2682 
	`SSL_DEBUG_MSG
( 2, ( "<=Öarse certificate" ) );

2684 –
ªt
 );

2685 
	}
}

2687 !
	gPOLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED


2688 !
	gPOLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED


2689 !
	gPOLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED


2690 !
	gPOLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED


2691 !
	gPOLARSSL_KEY_EXCHANGE_ECDH_RSA_ENABLED


2692 !
	gPOLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
 */

2694 
	$s¶_wrôe_ch™ge_cùhî_•ec
–
s¶_c⁄ãxt
 *
s¶
 )

2696 
ªt
;

2698 
	`SSL_DEBUG_MSG
( 2, ( "=> write change cipher spec" ) );

2700 
s¶
->
out_msgty≥
 = 
SSL_MSG_CHANGE_CIPHER_SPEC
;

2701 
s¶
->
out_msgÀn
 = 1;

2702 
s¶
->
out_msg
[0] = 1;

2704 
s¶
->
°©e
++;

2706 if––
ªt
 = 
	`s¶_wrôe_ªc‹d
–
s¶
 ) ) != 0 )

2708 
	`SSL_DEBUG_RET
–1, "s¶_wrôe_ªc‹d", 
ªt
 );

2709 –
ªt
 );

2712 
	`SSL_DEBUG_MSG
( 2, ( "<= write change cipher spec" ) );

2715 
	}
}

2717 
	$s¶_∑r£_ch™ge_cùhî_•ec
–
s¶_c⁄ãxt
 *
s¶
 )

2719 
ªt
;

2721 
	`SSL_DEBUG_MSG
( 2, ( "=>Öarse change cipher spec" ) );

2723 if––
ªt
 = 
	`s¶_ªad_ªc‹d
–
s¶
 ) ) != 0 )

2725 
	`SSL_DEBUG_RET
–1, "s¶_ªad_ªc‹d", 
ªt
 );

2726 –
ªt
 );

2729 if–
s¶
->
ö_msgty≥
 !
SSL_MSG_CHANGE_CIPHER_SPEC
 )

2731 
	`SSL_DEBUG_MSG
( 1, ( "bad change cipher spec message" ) );

2732 –
POLARSSL_ERR_SSL_UNEXPECTED_MESSAGE
 );

2735 if–
s¶
->
ö_msgÀn
 !1 || s¶->
ö_msg
[0] != 1 )

2737 
	`SSL_DEBUG_MSG
( 1, ( "bad change cipher spec message" ) );

2738 –
POLARSSL_ERR_SSL_BAD_HS_CHANGE_CIPHER_SPEC
 );

2741 
s¶
->
°©e
++;

2743 
	`SSL_DEBUG_MSG
( 2, ( "<=Öarse change cipher spec" ) );

2746 
	}
}

2748 
	$s¶_›timize_checksum
–
s¶_c⁄ãxt
 *
s¶
,

2749 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
 )

2751 ((Ë
cùhîsuôe_öfo
);

2753 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1
) || \

2754 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
)

2755 if–
s¶
->
mö‹_vî
 < 
SSL_MINOR_VERSION_3
 )

2756 
s¶
->
h™dshake
->
upd©e_checksum
 = 
s¶_upd©e_checksum_md5sha1
;

2759 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

2760 #i‡
	`deföed
(
POLARSSL_SHA512_C
)

2761 if–
cùhîsuôe_öfo
->
mac
 =
POLARSSL_MD_SHA384
 )

2762 
s¶
->
h™dshake
->
upd©e_checksum
 = 
s¶_upd©e_checksum_sha384
;

2765 #i‡
	`deföed
(
POLARSSL_SHA256_C
)

2766 if–
cùhîsuôe_öfo
->
mac
 !
POLARSSL_MD_SHA384
 )

2767 
s¶
->
h™dshake
->
upd©e_checksum
 = 
s¶_upd©e_checksum_sha256
;

2772 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

2775 
	}
}

2777 
	$s¶_upd©e_checksum_°¨t
–
s¶_c⁄ãxt
 *
s¶
,

2778 c⁄° *
buf
, 
size_t
 
Àn
 )

2780 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1
) || \

2781 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
)

2782 
	`md5_upd©e
–&
s¶
->
h™dshake
->
fö_md5
 , 
buf
, 
Àn
 );

2783 
	`sha1_upd©e
–&
s¶
->
h™dshake
->
fö_sha1
, 
buf
, 
Àn
 );

2785 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

2786 #i‡
	`deföed
(
POLARSSL_SHA256_C
)

2787 
	`sha256_upd©e
–&
s¶
->
h™dshake
->
fö_sha256
, 
buf
, 
Àn
 );

2789 #i‡
	`deföed
(
POLARSSL_SHA512_C
)

2790 
	`sha512_upd©e
–&
s¶
->
h™dshake
->
fö_sha512
, 
buf
, 
Àn
 );

2793 
	}
}

2795 #i‡
deföed
(
POLARSSL_SSL_PROTO_SSL3
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1
) || \

2796 
	$deföed
(
POLARSSL_SSL_PROTO_TLS1_1
)

2797 
	$s¶_upd©e_checksum_md5sha1
–
s¶_c⁄ãxt
 *
s¶
,

2798 c⁄° *
buf
, 
size_t
 
Àn
 )

2800 
	`md5_upd©e
–&
s¶
->
h™dshake
->
fö_md5
 , 
buf
, 
Àn
 );

2801 
	`sha1_upd©e
–&
s¶
->
h™dshake
->
fö_sha1
, 
buf
, 
Àn
 );

2802 
	}
}

2805 #i‡
deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

2806 #i‡
deföed
(
POLARSSL_SHA256_C
)

2807 
	$s¶_upd©e_checksum_sha256
–
s¶_c⁄ãxt
 *
s¶
,

2808 c⁄° *
buf
, 
size_t
 
Àn
 )

2810 
	`sha256_upd©e
–&
s¶
->
h™dshake
->
fö_sha256
, 
buf
, 
Àn
 );

2811 
	}
}

2814 #i‡
deföed
(
POLARSSL_SHA512_C
)

2815 
	$s¶_upd©e_checksum_sha384
–
s¶_c⁄ãxt
 *
s¶
,

2816 c⁄° *
buf
, 
size_t
 
Àn
 )

2818 
	`sha512_upd©e
–&
s¶
->
h™dshake
->
fö_sha512
, 
buf
, 
Àn
 );

2819 
	}
}

2823 #i‡
deföed
(
POLARSSL_SSL_PROTO_SSL3
)

2824 
	$s¶_ˇlc_föished_s¶
(

2825 
s¶_c⁄ãxt
 *
s¶
, *
buf
, 
‰om
 )

2827 c⁄° *
£ndî
;

2828 
md5_c⁄ãxt
 
md5
;

2829 
sha1_c⁄ãxt
 
sha1
;

2831 
∑dbuf
[48];

2832 
md5sum
[16];

2833 
sha1sum
[20];

2835 
s¶_£ssi⁄
 *
£ssi⁄
 = 
s¶
->
£ssi⁄_√gŸüã
;

2836 if–!
£ssi⁄
 )

2837 
£ssi⁄
 = 
s¶
->session;

2839 
	`SSL_DEBUG_MSG
( 2, ( "=> calc finished ssl" ) );

2841 
	`mem˝y
–&
md5
 , &
s¶
->
h™dshake
->
fö_md5
 , (
md5_c⁄ãxt
) );

2842 
	`mem˝y
–&
sha1
, &
s¶
->
h™dshake
->
fö_sha1
, (
sha1_c⁄ãxt
) );

2853 #i‡!
	`deföed
(
POLARSSL_MD5_ALT
)

2854 
	`SSL_DEBUG_BUF
( 4, "finished md5 state", (*)

2855 
md5
.
°©e
, ( md5.state ) );

2858 #i‡!
	`deföed
(
POLARSSL_SHA1_ALT
)

2859 
	`SSL_DEBUG_BUF
( 4, "finished sha1 state", (*)

2860 
sha1
.
°©e
, ( sha1.state ) );

2863 
£ndî
 = ( 
‰om
 =
SSL_IS_CLIENT
 ) ? "CLNT"

2866 
	`mem£t
–
∑dbuf
, 0x36, 48 );

2868 
	`md5_upd©e
–&
md5
, (c⁄° *Ë
£ndî
, 4 );

2869 
	`md5_upd©e
–&
md5
, 
£ssi⁄
->
ma°î
, 48 );

2870 
	`md5_upd©e
–&
md5
, 
∑dbuf
, 48 );

2871 
	`md5_föish
–&
md5
, 
md5sum
 );

2873 
	`sha1_upd©e
–&
sha1
, (c⁄° *Ë
£ndî
, 4 );

2874 
	`sha1_upd©e
–&
sha1
, 
£ssi⁄
->
ma°î
, 48 );

2875 
	`sha1_upd©e
–&
sha1
, 
∑dbuf
, 40 );

2876 
	`sha1_föish
–&
sha1
, 
sha1sum
 );

2878 
	`mem£t
–
∑dbuf
, 0x5C, 48 );

2880 
	`md5_°¨ts
–&
md5
 );

2881 
	`md5_upd©e
–&
md5
, 
£ssi⁄
->
ma°î
, 48 );

2882 
	`md5_upd©e
–&
md5
, 
∑dbuf
, 48 );

2883 
	`md5_upd©e
–&
md5
, 
md5sum
, 16 );

2884 
	`md5_föish
–&
md5
, 
buf
 );

2886 
	`sha1_°¨ts
–&
sha1
 );

2887 
	`sha1_upd©e
–&
sha1
, 
£ssi⁄
->
ma°î
, 48 );

2888 
	`sha1_upd©e
–&
sha1
, 
∑dbuf
 , 40 );

2889 
	`sha1_upd©e
–&
sha1
, 
sha1sum
, 20 );

2890 
	`sha1_föish
–&
sha1
, 
buf
 + 16 );

2892 
	`SSL_DEBUG_BUF
–3, "ˇl¯föishedÑesu…", 
buf
, 36 );

2894 
	`md5_‰ì
–&
md5
 );

2895 
	`sha1_‰ì
–&
sha1
 );

2897 
	`pﬁ¨s¶_zîoize
–
∑dbuf
, (Öadbuf ) );

2898 
	`pﬁ¨s¶_zîoize
–
md5sum
, ( md5sum ) );

2899 
	`pﬁ¨s¶_zîoize
–
sha1sum
, ( sha1sum ) );

2901 
	`SSL_DEBUG_MSG
( 2, ( "<= calc finished" ) );

2902 
	}
}

2905 #i‡
deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_1
)

2906 
	$s¶_ˇlc_föished_és
(

2907 
s¶_c⁄ãxt
 *
s¶
, *
buf
, 
‰om
 )

2909 
Àn
 = 12;

2910 c⁄° *
£ndî
;

2911 
md5_c⁄ãxt
 
md5
;

2912 
sha1_c⁄ãxt
 
sha1
;

2913 
∑dbuf
[36];

2915 
s¶_£ssi⁄
 *
£ssi⁄
 = 
s¶
->
£ssi⁄_√gŸüã
;

2916 if–!
£ssi⁄
 )

2917 
£ssi⁄
 = 
s¶
->session;

2919 
	`SSL_DEBUG_MSG
( 2, ( "=> calc finishedÅls" ) );

2921 
	`mem˝y
–&
md5
 , &
s¶
->
h™dshake
->
fö_md5
 , (
md5_c⁄ãxt
) );

2922 
	`mem˝y
–&
sha1
, &
s¶
->
h™dshake
->
fö_sha1
, (
sha1_c⁄ãxt
) );

2930 #i‡!
	`deföed
(
POLARSSL_MD5_ALT
)

2931 
	`SSL_DEBUG_BUF
( 4, "finished md5 state", (*)

2932 
md5
.
°©e
, ( md5.state ) );

2935 #i‡!
	`deföed
(
POLARSSL_SHA1_ALT
)

2936 
	`SSL_DEBUG_BUF
( 4, "finished sha1 state", (*)

2937 
sha1
.
°©e
, ( sha1.state ) );

2940 
£ndî
 = ( 
‰om
 =
SSL_IS_CLIENT
 )

2944 
	`md5_föish
–&
md5
, 
∑dbuf
 );

2945 
	`sha1_föish
–&
sha1
, 
∑dbuf
 + 16 );

2947 
s¶
->
h™dshake
->
	`és_¥f
–
£ssi⁄
->
ma°î
, 48, 
£ndî
,

2948 
∑dbuf
, 36, 
buf
, 
Àn
 );

2950 
	`SSL_DEBUG_BUF
–3, "ˇl¯föishedÑesu…", 
buf
, 
Àn
 );

2952 
	`md5_‰ì
–&
md5
 );

2953 
	`sha1_‰ì
–&
sha1
 );

2955 
	`pﬁ¨s¶_zîoize
–
∑dbuf
, (Öadbuf ) );

2957 
	`SSL_DEBUG_MSG
( 2, ( "<= calc finished" ) );

2958 
	}
}

2961 #i‡
deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

2962 #i‡
deföed
(
POLARSSL_SHA256_C
)

2963 
	$s¶_ˇlc_föished_és_sha256
(

2964 
s¶_c⁄ãxt
 *
s¶
, *
buf
, 
‰om
 )

2966 
Àn
 = 12;

2967 c⁄° *
£ndî
;

2968 
sha256_c⁄ãxt
 
sha256
;

2969 
∑dbuf
[32];

2971 
s¶_£ssi⁄
 *
£ssi⁄
 = 
s¶
->
£ssi⁄_√gŸüã
;

2972 if–!
£ssi⁄
 )

2973 
£ssi⁄
 = 
s¶
->session;

2975 
	`SSL_DEBUG_MSG
( 2, ( "=> calc finishedÅls sha256" ) );

2977 
	`mem˝y
–&
sha256
, &
s¶
->
h™dshake
->
fö_sha256
, (
sha256_c⁄ãxt
) );

2985 #i‡!
	`deföed
(
POLARSSL_SHA256_ALT
)

2986 
	`SSL_DEBUG_BUF
( 4, "finished sha2 state", (*)

2987 
sha256
.
°©e
, ( sha256.state ) );

2990 
£ndî
 = ( 
‰om
 =
SSL_IS_CLIENT
 )

2994 
	`sha256_föish
–&
sha256
, 
∑dbuf
 );

2996 
s¶
->
h™dshake
->
	`és_¥f
–
£ssi⁄
->
ma°î
, 48, 
£ndî
,

2997 
∑dbuf
, 32, 
buf
, 
Àn
 );

2999 
	`SSL_DEBUG_BUF
–3, "ˇl¯föishedÑesu…", 
buf
, 
Àn
 );

3001 
	`sha256_‰ì
–&
sha256
 );

3003 
	`pﬁ¨s¶_zîoize
–
∑dbuf
, (Öadbuf ) );

3005 
	`SSL_DEBUG_MSG
( 2, ( "<= calc finished" ) );

3006 
	}
}

3009 #i‡
deföed
(
POLARSSL_SHA512_C
)

3010 
	$s¶_ˇlc_föished_és_sha384
(

3011 
s¶_c⁄ãxt
 *
s¶
, *
buf
, 
‰om
 )

3013 
Àn
 = 12;

3014 c⁄° *
£ndî
;

3015 
sha512_c⁄ãxt
 
sha512
;

3016 
∑dbuf
[48];

3018 
s¶_£ssi⁄
 *
£ssi⁄
 = 
s¶
->
£ssi⁄_√gŸüã
;

3019 if–!
£ssi⁄
 )

3020 
£ssi⁄
 = 
s¶
->session;

3022 
	`SSL_DEBUG_MSG
( 2, ( "=> calc finishedÅls sha384" ) );

3024 
	`mem˝y
–&
sha512
, &
s¶
->
h™dshake
->
fö_sha512
, (
sha512_c⁄ãxt
) );

3032 #i‡!
	`deföed
(
POLARSSL_SHA512_ALT
)

3033 
	`SSL_DEBUG_BUF
( 4, "finished sha512 state", (*)

3034 
sha512
.
°©e
, ( sha512.state ) );

3037 
£ndî
 = ( 
‰om
 =
SSL_IS_CLIENT
 )

3041 
	`sha512_föish
–&
sha512
, 
∑dbuf
 );

3043 
s¶
->
h™dshake
->
	`és_¥f
–
£ssi⁄
->
ma°î
, 48, 
£ndî
,

3044 
∑dbuf
, 48, 
buf
, 
Àn
 );

3046 
	`SSL_DEBUG_BUF
–3, "ˇl¯föishedÑesu…", 
buf
, 
Àn
 );

3048 
	`sha512_‰ì
–&
sha512
 );

3050 
	`pﬁ¨s¶_zîoize
–
∑dbuf
, (Öadbuf ) );

3052 
	`SSL_DEBUG_MSG
( 2, ( "<= calc finished" ) );

3053 
	}
}

3057 
	$s¶_h™dshake_wøpup
–
s¶_c⁄ãxt
 *
s¶
 )

3059 
ªsume
 = 
s¶
->
h™dshake
->resume;

3061 
	`SSL_DEBUG_MSG
( 3, ( "=> handshake wrapup" ) );

3066 
	`s¶_h™dshake_‰ì
–
s¶
->
h™dshake
 );

3067 
	`pﬁ¨s¶_‰ì
–
s¶
->
h™dshake
 );

3068 
s¶
->
h™dshake
 = 
NULL
;

3070 if–
s¶
->
ª√gŸüti⁄
 =
SSL_RENEGOTIATION
 )

3072 
s¶
->
ª√gŸüti⁄
 = 
SSL_RENEGOTIATION_DONE
;

3073 
s¶
->
ª√go_ªc‹ds_£í
 = 0;

3079 if–
s¶
->
å™sf‹m
 )

3081 
	`s¶_å™sf‹m_‰ì
–
s¶
->
å™sf‹m
 );

3082 
	`pﬁ¨s¶_‰ì
–
s¶
->
å™sf‹m
 );

3084 
s¶
->
å™sf‹m
 = s¶->
å™sf‹m_√gŸüã
;

3085 
s¶
->
å™sf‹m_√gŸüã
 = 
NULL
;

3087 if–
s¶
->
£ssi⁄
 )

3089 
	`s¶_£ssi⁄_‰ì
–
s¶
->
£ssi⁄
 );

3090 
	`pﬁ¨s¶_‰ì
–
s¶
->
£ssi⁄
 );

3092 
s¶
->
£ssi⁄
 = s¶->
£ssi⁄_√gŸüã
;

3093 
s¶
->
£ssi⁄_√gŸüã
 = 
NULL
;

3098 if–
s¶
->
f_£t_ˇche
 !
NULL
 &&

3099 
s¶
->
£ssi⁄
->
Àngth
 != 0 &&

3100 
ªsume
 == 0 )

3102 if–
s¶
->
	`f_£t_ˇche
–s¶->
p_£t_ˇche
, s¶->
£ssi⁄
 ) != 0 )

3103 
	`SSL_DEBUG_MSG
( 1, ( "cache didÇot store session" ) );

3106 
s¶
->
°©e
++;

3108 
	`SSL_DEBUG_MSG
( 3, ( "<= handshake wrapup" ) );

3109 
	}
}

3111 
	$s¶_wrôe_föished
–
s¶_c⁄ãxt
 *
s¶
 )

3113 
ªt
, 
hash_Àn
;

3115 
	`SSL_DEBUG_MSG
( 2, ( "=> write finished" ) );

3120 if–
s¶
->
mö‹_vî
 >
SSL_MINOR_VERSION_2
 )

3122 
s¶
->
out_msg
 = s¶->
out_iv
 + s¶->
å™sf‹m_√gŸüã
->
ivÀn
 -

3123 
s¶
->
å™sf‹m_√gŸüã
->
fixed_ivÀn
;

3126 
s¶
->
out_msg
 = s¶->
out_iv
;

3128 
s¶
->
h™dshake
->
	`ˇlc_föished
–s¶, s¶->
out_msg
 + 4, s¶->
ídpoöt
 );

3131 
hash_Àn
 = ( 
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_0
 ) ? 36 : 12;

3133 
s¶
->
vîify_d©a_Àn
 = 
hash_Àn
;

3134 
	`mem˝y
–
s¶
->
own_vîify_d©a
, s¶->
out_msg
 + 4, 
hash_Àn
 );

3136 
s¶
->
out_msgÀn
 = 4 + 
hash_Àn
;

3137 
s¶
->
out_msgty≥
 = 
SSL_MSG_HANDSHAKE
;

3138 
s¶
->
out_msg
[0] = 
SSL_HS_FINISHED
;

3144 if–
s¶
->
h™dshake
->
ªsume
 != 0 )

3146 if–
s¶
->
ídpoöt
 =
SSL_IS_CLIENT
 )

3147 
s¶
->
°©e
 = 
SSL_HANDSHAKE_WRAPUP
;

3149 
s¶
->
°©e
 = 
SSL_CLIENT_CHANGE_CIPHER_SPEC
;

3152 
s¶
->
°©e
++;

3158 
	`SSL_DEBUG_MSG
( 3, ( "switchingÅoÇewÅransform spec for outbound data" ) );

3159 
s¶
->
å™sf‹m_out
 = s¶->
å™sf‹m_√gŸüã
;

3160 
s¶
->
£ssi⁄_out
 = s¶->
£ssi⁄_√gŸüã
;

3161 
	`mem£t
–
s¶
->
out_˘r
, 0, 8 );

3163 #i‡
	`deföed
(
POLARSSL_SSL_HW_RECORD_ACCEL
)

3164 if–
s¶_hw_ªc‹d_a˘iv©e
 !
NULL
 )

3166 if––
ªt
 = 
	`s¶_hw_ªc‹d_a˘iv©e
–
s¶
, 
SSL_CHANNEL_OUTBOUND
 ) ) != 0 )

3168 
	`SSL_DEBUG_RET
–1, "s¶_hw_ªc‹d_a˘iv©e", 
ªt
 );

3169 –
POLARSSL_ERR_SSL_HW_ACCEL_FAILED
 );

3174 if––
ªt
 = 
	`s¶_wrôe_ªc‹d
–
s¶
 ) ) != 0 )

3176 
	`SSL_DEBUG_RET
–1, "s¶_wrôe_ªc‹d", 
ªt
 );

3177 –
ªt
 );

3180 
	`SSL_DEBUG_MSG
( 2, ( "<= write finished" ) );

3183 
	}
}

3185 
	$s¶_∑r£_föished
–
s¶_c⁄ãxt
 *
s¶
 )

3187 
ªt
;

3188 
hash_Àn
;

3189 
buf
[36];

3191 
	`SSL_DEBUG_MSG
( 2, ( "=>Öarse finished" ) );

3193 
s¶
->
h™dshake
->
	`ˇlc_föished
–s¶, 
buf
, s¶->
ídpoöt
 ^ 1 );

3199 
	`SSL_DEBUG_MSG
( 3, ( "switchingÅoÇewÅransform spec for inbound data" ) );

3200 
s¶
->
å™sf‹m_ö
 = s¶->
å™sf‹m_√gŸüã
;

3201 
s¶
->
£ssi⁄_ö
 = s¶->
£ssi⁄_√gŸüã
;

3202 
	`mem£t
–
s¶
->
ö_˘r
, 0, 8 );

3207 if–
s¶
->
mö‹_vî
 >
SSL_MINOR_VERSION_2
 )

3209 
s¶
->
ö_msg
 = s¶->
ö_iv
 + s¶->
å™sf‹m_√gŸüã
->
ivÀn
 -

3210 
s¶
->
å™sf‹m_√gŸüã
->
fixed_ivÀn
;

3213 
s¶
->
ö_msg
 = s¶->
ö_iv
;

3215 #i‡
	`deföed
(
POLARSSL_SSL_HW_RECORD_ACCEL
)

3216 if–
s¶_hw_ªc‹d_a˘iv©e
 !
NULL
 )

3218 if––
ªt
 = 
	`s¶_hw_ªc‹d_a˘iv©e
–
s¶
, 
SSL_CHANNEL_INBOUND
 ) ) != 0 )

3220 
	`SSL_DEBUG_RET
–1, "s¶_hw_ªc‹d_a˘iv©e", 
ªt
 );

3221 –
POLARSSL_ERR_SSL_HW_ACCEL_FAILED
 );

3226 if––
ªt
 = 
	`s¶_ªad_ªc‹d
–
s¶
 ) ) != 0 )

3228 
	`SSL_DEBUG_RET
–1, "s¶_ªad_ªc‹d", 
ªt
 );

3229 –
ªt
 );

3232 if–
s¶
->
ö_msgty≥
 !
SSL_MSG_HANDSHAKE
 )

3234 
	`SSL_DEBUG_MSG
( 1, ( "bad finished message" ) );

3235 –
POLARSSL_ERR_SSL_UNEXPECTED_MESSAGE
 );

3239 
hash_Àn
 = ( 
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_0
 ) ? 36 : 12;

3241 if–
s¶
->
ö_msg
[0] !
SSL_HS_FINISHED
 ||

3242 
s¶
->
ö_h¶í
 !4 + 
hash_Àn
 )

3244 
	`SSL_DEBUG_MSG
( 1, ( "bad finished message" ) );

3245 –
POLARSSL_ERR_SSL_BAD_HS_FINISHED
 );

3248 if–
	`ß„r_memcmp
–
s¶
->
ö_msg
 + 4, 
buf
, 
hash_Àn
 ) != 0 )

3250 
	`SSL_DEBUG_MSG
( 1, ( "bad finished message" ) );

3251 –
POLARSSL_ERR_SSL_BAD_HS_FINISHED
 );

3254 
s¶
->
vîify_d©a_Àn
 = 
hash_Àn
;

3255 
	`mem˝y
–
s¶
->
≥î_vîify_d©a
, 
buf
, 
hash_Àn
 );

3257 if–
s¶
->
h™dshake
->
ªsume
 != 0 )

3259 if–
s¶
->
ídpoöt
 =
SSL_IS_CLIENT
 )

3260 
s¶
->
°©e
 = 
SSL_CLIENT_CHANGE_CIPHER_SPEC
;

3262 if–
s¶
->
ídpoöt
 =
SSL_IS_SERVER
 )

3263 
s¶
->
°©e
 = 
SSL_HANDSHAKE_WRAPUP
;

3266 
s¶
->
°©e
++;

3268 
	`SSL_DEBUG_MSG
( 2, ( "<=Öarse finished" ) );

3271 
	}
}

3273 
	$s¶_h™dshake_∑øms_öô
–
s¶_h™dshake_∑øms
 *
h™dshake
 )

3275 
	`mem£t
–
h™dshake
, 0, –
s¶_h™dshake_∑øms
 ) );

3277 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1
) || \

3278 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
)

3279 
	`md5_öô
–&
h™dshake
->
fö_md5
 );

3280 
	`sha1_öô
–&
h™dshake
->
fö_sha1
 );

3281 
	`md5_°¨ts
–&
h™dshake
->
fö_md5
 );

3282 
	`sha1_°¨ts
–&
h™dshake
->
fö_sha1
 );

3284 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

3285 #i‡
	`deföed
(
POLARSSL_SHA256_C
)

3286 
	`sha256_öô
–&
h™dshake
->
fö_sha256
 );

3287 
	`sha256_°¨ts
–&
h™dshake
->
fö_sha256
, 0 );

3289 #i‡
	`deföed
(
POLARSSL_SHA512_C
)

3290 
	`sha512_öô
–&
h™dshake
->
fö_sha512
 );

3291 
	`sha512_°¨ts
–&
h™dshake
->
fö_sha512
, 1 );

3295 
h™dshake
->
upd©e_checksum
 = 
s¶_upd©e_checksum_°¨t
;

3296 
h™dshake
->
sig_Æg
 = 
SSL_HASH_SHA1
;

3298 #i‡
	`deföed
(
POLARSSL_DHM_C
)

3299 
	`dhm_öô
–&
h™dshake
->
dhm_˘x
 );

3301 #i‡
	`deföed
(
POLARSSL_ECDH_C
)

3302 
	`ecdh_öô
–&
h™dshake
->
ecdh_˘x
 );

3304 
	}
}

3306 
	$s¶_å™sf‹m_öô
–
s¶_å™sf‹m
 *
å™sf‹m
 )

3308 
	`mem£t
–
å™sf‹m
, 0, (
s¶_å™sf‹m
) );

3310 
	`cùhî_öô
–&
å™sf‹m
->
cùhî_˘x_íc
 );

3311 
	`cùhî_öô
–&
å™sf‹m
->
cùhî_˘x_dec
 );

3313 
	`md_öô
–&
å™sf‹m
->
md_˘x_íc
 );

3314 
	`md_öô
–&
å™sf‹m
->
md_˘x_dec
 );

3315 
	}
}

3317 
	$s¶_£ssi⁄_öô
–
s¶_£ssi⁄
 *
£ssi⁄
 )

3319 
	`mem£t
–
£ssi⁄
, 0, (
s¶_£ssi⁄
) );

3320 
	}
}

3322 
	$s¶_h™dshake_öô
–
s¶_c⁄ãxt
 *
s¶
 )

3325 if–
s¶
->
å™sf‹m_√gŸüã
 )

3326 
	`s¶_å™sf‹m_‰ì
–
s¶
->
å™sf‹m_√gŸüã
 );

3327 if–
s¶
->
£ssi⁄_√gŸüã
 )

3328 
	`s¶_£ssi⁄_‰ì
–
s¶
->
£ssi⁄_√gŸüã
 );

3329 if–
s¶
->
h™dshake
 )

3330 
	`s¶_h™dshake_‰ì
–
s¶
->
h™dshake
 );

3336 if–
s¶
->
å™sf‹m_√gŸüã
 =
NULL
 )

3338 
s¶
->
å™sf‹m_√gŸüã
 =

3339 (
s¶_å™sf‹m
 *Ë
	`pﬁ¨s¶_mÆloc
( (ssl_transform) );

3342 if–
s¶
->
£ssi⁄_√gŸüã
 =
NULL
 )

3344 
s¶
->
£ssi⁄_√gŸüã
 =

3345 (
s¶_£ssi⁄
 *Ë
	`pﬁ¨s¶_mÆloc
( (ssl_session) );

3348 if–
s¶
->
h™dshake
 =
NULL
)

3350 
s¶
->
h™dshake
 = (
s¶_h™dshake_∑øms
 *)

3351 
	`pﬁ¨s¶_mÆloc
–(
s¶_h™dshake_∑øms
) );

3355 if–
s¶
->
h™dshake
 =
NULL
 ||

3356 
s¶
->
å™sf‹m_√gŸüã
 =
NULL
 ||

3357 
s¶
->
£ssi⁄_√gŸüã
 =
NULL
 )

3359 
	`SSL_DEBUG_MSG
( 1, ( "malloc() of ssl sub-contexts failed" ) );

3361 
	`pﬁ¨s¶_‰ì
–
s¶
->
h™dshake
 );

3362 
	`pﬁ¨s¶_‰ì
–
s¶
->
å™sf‹m_√gŸüã
 );

3363 
	`pﬁ¨s¶_‰ì
–
s¶
->
£ssi⁄_√gŸüã
 );

3365 
s¶
->
h™dshake
 = 
NULL
;

3366 
s¶
->
å™sf‹m_√gŸüã
 = 
NULL
;

3367 
s¶
->
£ssi⁄_√gŸüã
 = 
NULL
;

3369 –
POLARSSL_ERR_SSL_MALLOC_FAILED
 );

3373 
	`s¶_£ssi⁄_öô
–
s¶
->
£ssi⁄_√gŸüã
 );

3374 
	`s¶_å™sf‹m_öô
–
s¶
->
å™sf‹m_√gŸüã
 );

3375 
	`s¶_h™dshake_∑øms_öô
–
s¶
->
h™dshake
 );

3377 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

3378 
s¶
->
h™dshake
->
key_˚π
 = ssl->key_cert;

3382 
	}
}

3387 
	$s¶_öô
–
s¶_c⁄ãxt
 *
s¶
 )

3389 
ªt
;

3390 
Àn
 = 
SSL_BUFFER_LEN
;

3392 
	`mem£t
–
s¶
, 0, –
s¶_c⁄ãxt
 ) );

3397 
s¶
->
mö_maj‹_vî
 = 
SSL_MIN_MAJOR_VERSION
;

3398 
s¶
->
mö_mö‹_vî
 = 
SSL_MIN_MINOR_VERSION
;

3399 
s¶
->
max_maj‹_vî
 = 
SSL_MAX_MAJOR_VERSION
;

3400 
s¶
->
max_mö‹_vî
 = 
SSL_MAX_MINOR_VERSION
;

3402 
	`s¶_£t_cùhîsuôes
–
s¶
, 
	`s¶_li°_cùhîsuôes
() );

3404 
s¶
->
ª√go_max_ªc‹ds
 = 
SSL_RENEGO_MAX_RECORDS_DEFAULT
;

3406 #i‡
	`deföed
(
POLARSSL_DHM_C
)

3407 if––
ªt
 = 
	`mpi_ªad_°rög
–&
s¶
->
dhm_P
, 16,

3408 
POLARSSL_DHM_RFC5114_MODP_1024_P
) ) != 0 ||

3409 –
ªt
 = 
	`mpi_ªad_°rög
–&
s¶
->
dhm_G
, 16,

3410 
POLARSSL_DHM_RFC5114_MODP_1024_G
) ) != 0 )

3412 
	`SSL_DEBUG_RET
–1, "mpi_ªad_°rög", 
ªt
 );

3413 –
ªt
 );

3420 
s¶
->
ö_˘r
 = (*Ë
	`pﬁ¨s¶_mÆloc
–
Àn
 );

3421 
s¶
->
ö_hdr
 = s¶->
ö_˘r
 + 8;

3422 
s¶
->
ö_iv
 = s¶->
ö_˘r
 + 13;

3423 
s¶
->
ö_msg
 = s¶->
ö_˘r
 + 13;

3425 if–
s¶
->
ö_˘r
 =
NULL
 )

3427 
	`SSL_DEBUG_MSG
–1, ( "mÆloc(%d byãsËÁûed", 
Àn
 ) );

3428 –
POLARSSL_ERR_SSL_MALLOC_FAILED
 );

3431 
s¶
->
out_˘r
 = (*Ë
	`pﬁ¨s¶_mÆloc
–
Àn
 );

3432 
s¶
->
out_hdr
 = s¶->
out_˘r
 + 8;

3433 
s¶
->
out_iv
 = s¶->
out_˘r
 + 13;

3434 
s¶
->
out_msg
 = s¶->
out_˘r
 + 13;

3436 if–
s¶
->
out_˘r
 =
NULL
 )

3438 
	`SSL_DEBUG_MSG
–1, ( "mÆloc(%d byãsËÁûed", 
Àn
 ) );

3439 
	`pﬁ¨s¶_‰ì
–
s¶
->
ö_˘r
 );

3440 
s¶
->
ö_˘r
 = 
NULL
;

3441 –
POLARSSL_ERR_SSL_MALLOC_FAILED
 );

3444 
	`mem£t
–
s¶
-> 
ö_˘r
, 0, 
SSL_BUFFER_LEN
 );

3445 
	`mem£t
–
s¶
->
out_˘r
, 0, 
SSL_BUFFER_LEN
 );

3447 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

3448 
s¶
->
tickë_li„time
 = 
SSL_DEFAULT_TICKET_LIFETIME
;

3451 #i‡
	`deföed
(
POLARSSL_SSL_SET_CURVES
)

3452 
s¶
->
curve_li°
 = 
	`e˝_gΩ_id_li°
( );

3455 if––
ªt
 = 
	`s¶_h™dshake_öô
–
s¶
 ) ) != 0 )

3456 –
ªt
 );

3459 
	}
}

3465 
	$s¶_£ssi⁄_ª£t
–
s¶_c⁄ãxt
 *
s¶
 )

3467 
ªt
;

3469 
s¶
->
°©e
 = 
SSL_HELLO_REQUEST
;

3470 
s¶
->
ª√gŸüti⁄
 = 
SSL_INITIAL_HANDSHAKE
;

3471 
s¶
->
£cuª_ª√gŸüti⁄
 = 
SSL_LEGACY_RENEGOTIATION
;

3473 
s¶
->
vîify_d©a_Àn
 = 0;

3474 
	`mem£t
–
s¶
->
own_vîify_d©a
, 0, 36 );

3475 
	`mem£t
–
s¶
->
≥î_vîify_d©a
, 0, 36 );

3477 
s¶
->
ö_of·
 = 
NULL
;

3479 
s¶
->
ö_msg
 = s¶->
ö_˘r
 + 13;

3480 
s¶
->
ö_msgty≥
 = 0;

3481 
s¶
->
ö_msgÀn
 = 0;

3482 
s¶
->
ö_À·
 = 0;

3484 
s¶
->
ö_h¶í
 = 0;

3485 
s¶
->
nb_zîo
 = 0;

3486 
s¶
->
ªc‹d_ªad
 = 0;

3488 
s¶
->
out_msg
 = s¶->
out_˘r
 + 13;

3489 
s¶
->
out_msgty≥
 = 0;

3490 
s¶
->
out_msgÀn
 = 0;

3491 
s¶
->
out_À·
 = 0;

3493 
s¶
->
å™sf‹m_ö
 = 
NULL
;

3494 
s¶
->
å™sf‹m_out
 = 
NULL
;

3496 
s¶
->
ª√go_ªc‹ds_£í
 = 0;

3498 
	`mem£t
–
s¶
->
out_˘r
, 0, 
SSL_BUFFER_LEN
 );

3499 
	`mem£t
–
s¶
->
ö_˘r
, 0, 
SSL_BUFFER_LEN
 );

3501 #i‡
	`deföed
(
POLARSSL_SSL_HW_RECORD_ACCEL
)

3502 if–
s¶_hw_ªc‹d_ª£t
 !
NULL
 )

3504 
	`SSL_DEBUG_MSG
( 2, ( "going for ssl_hw_record_reset()" ) );

3505 if––
ªt
 = 
	`s¶_hw_ªc‹d_ª£t
–
s¶
 ) ) != 0 )

3507 
	`SSL_DEBUG_RET
–1, "s¶_hw_ªc‹d_ª£t", 
ªt
 );

3508 –
POLARSSL_ERR_SSL_HW_ACCEL_FAILED
 );

3513 if–
s¶
->
å™sf‹m
 )

3515 
	`s¶_å™sf‹m_‰ì
–
s¶
->
å™sf‹m
 );

3516 
	`pﬁ¨s¶_‰ì
–
s¶
->
å™sf‹m
 );

3517 
s¶
->
å™sf‹m
 = 
NULL
;

3520 if–
s¶
->
£ssi⁄
 )

3522 
	`s¶_£ssi⁄_‰ì
–
s¶
->
£ssi⁄
 );

3523 
	`pﬁ¨s¶_‰ì
–
s¶
->
£ssi⁄
 );

3524 
s¶
->
£ssi⁄
 = 
NULL
;

3527 #i‡
	`deföed
(
POLARSSL_SSL_ALPN
)

3528 
s¶
->
Æ≤_cho£n
 = 
NULL
;

3531 if––
ªt
 = 
	`s¶_h™dshake_öô
–
s¶
 ) ) != 0 )

3532 –
ªt
 );

3535 
	}
}

3537 #i‡
deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

3538 
	$s¶_tickë_keys_‰ì
–
s¶_tickë_keys
 *
tkeys
 )

3540 
	`´s_‰ì
–&
tkeys
->
íc
 );

3541 
	`´s_‰ì
–&
tkeys
->
dec
 );

3543 
	`pﬁ¨s¶_zîoize
–
tkeys
, (
s¶_tickë_keys
) );

3544 
	}
}

3549 
	$s¶_tickë_keys_öô
–
s¶_c⁄ãxt
 *
s¶
 )

3551 
ªt
;

3552 
s¶_tickë_keys
 *
tkeys
;

3553 
buf
[16];

3555 if–
s¶
->
tickë_keys
 !
NULL
 )

3558 
tkeys
 = (
s¶_tickë_keys
 *Ë
	`pﬁ¨s¶_mÆloc
( (ssl_ticket_keys) );

3559 if–
tkeys
 =
NULL
 )

3560 –
POLARSSL_ERR_SSL_MALLOC_FAILED
 );

3562 
	`´s_öô
–&
tkeys
->
íc
 );

3563 
	`´s_öô
–&
tkeys
->
dec
 );

3565 if––
ªt
 = 
s¶
->
	`f_∫g
–s¶->
p_∫g
, 
tkeys
->
key_«me
, 16 ) ) != 0 )

3567 
	`s¶_tickë_keys_‰ì
–
tkeys
 );

3568 
	`pﬁ¨s¶_‰ì
–
tkeys
 );

3569 –
ªt
 );

3572 if––
ªt
 = 
s¶
->
	`f_∫g
–s¶->
p_∫g
, 
buf
, 16 ) ) != 0 ||

3573 –
ªt
 = 
	`´s_£tkey_íc
–&
tkeys
->
íc
, 
buf
, 128 ) ) != 0 ||

3574 –
ªt
 = 
	`´s_£tkey_dec
–&
tkeys
->
dec
, 
buf
, 128 ) ) != 0 )

3576 
	`s¶_tickë_keys_‰ì
–
tkeys
 );

3577 
	`pﬁ¨s¶_‰ì
–
tkeys
 );

3578 –
ªt
 );

3581 if––
ªt
 = 
s¶
->
	`f_∫g
–s¶->
p_∫g
, 
tkeys
->
mac_key
, 16 ) ) != 0 )

3583 
	`s¶_tickë_keys_‰ì
–
tkeys
 );

3584 
	`pﬁ¨s¶_‰ì
–
tkeys
 );

3585 –
ªt
 );

3588 
s¶
->
tickë_keys
 = 
tkeys
;

3591 
	}
}

3597 
	$s¶_£t_ídpoöt
–
s¶_c⁄ãxt
 *
s¶
, 
ídpoöt
 )

3599 
s¶
->
ídpoöt
 =Éndpoint;

3601 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

3602 if–
ídpoöt
 =
SSL_IS_CLIENT
 )

3603 
s¶
->
£ssi⁄_tickës
 = 
SSL_SESSION_TICKETS_ENABLED
;

3605 
	}
}

3607 
	$s¶_£t_authmode
–
s¶_c⁄ãxt
 *
s¶
, 
authmode
 )

3609 
s¶
->
authmode
 =áuthmode;

3610 
	}
}

3612 #i‡
deföed
(
POLARSSL_X509_CRT_PARSE_C
)

3613 
s¶_£t_vîify
–
s¶_c⁄ãxt
 *
s¶
,

3614 (*
f_vrfy
)(*, 
x509_¸t
 *, , *),

3615 *
p_vrfy
 )

3617 
s¶
->
f_vrfy
 = f_vrfy;

3618 
s¶
->
p_vrfy
 =Ö_vrfy;

3619 
	}
}

3622 
s¶_£t_∫g
–
s¶_c⁄ãxt
 *
s¶
,

3623 (*
f_∫g
)(*, *, 
size_t
),

3624 *
p_∫g
 )

3626 
s¶
->
f_∫g
 = f_rng;

3627 
s¶
->
p_∫g
 =Ö_rng;

3628 
	}
}

3630 
s¶_£t_dbg
–
s¶_c⁄ãxt
 *
s¶
,

3631 (*
f_dbg
)(*, , const *),

3632 *
p_dbg
 )

3634 
s¶
->
f_dbg
 = f_dbg;

3635 
s¶
->
p_dbg
 =Ö_dbg;

3636 
	}
}

3638 
s¶_£t_bio
–
s¶_c⁄ãxt
 *
s¶
,

3639 (*
f_ªcv
)(*, *, 
size_t
), *
p_ªcv
,

3640 (*
f_£nd
)(*, c⁄° *, 
size_t
), *
p_£nd
 )

3642 
s¶
->
f_ªcv
 = f_recv;

3643 
s¶
->
f_£nd
 = f_send;

3644 
s¶
->
p_ªcv
 =Ö_recv;

3645 
s¶
->
p_£nd
 =Ö_send;

3646 
	}
}

3648 
s¶_£t_£ssi⁄_ˇche
–
s¶_c⁄ãxt
 *
s¶
,

3649 (*
f_gë_ˇche
)(*, 
s¶_£ssi⁄
 *), *
p_gë_ˇche
,

3650 (*
f_£t_ˇche
)(*, c⁄° 
s¶_£ssi⁄
 *), *
p_£t_ˇche
 )

3652 
s¶
->
f_gë_ˇche
 = f_get_cache;

3653 
s¶
->
p_gë_ˇche
 =Ö_get_cache;

3654 
s¶
->
f_£t_ˇche
 = f_set_cache;

3655 
s¶
->
p_£t_ˇche
 =Ö_set_cache;

3656 
	}
}

3658 
	$s¶_£t_£ssi⁄
–
s¶_c⁄ãxt
 *
s¶
, c⁄° 
s¶_£ssi⁄
 *
£ssi⁄
 )

3660 
ªt
;

3662 if–
s¶
 =
NULL
 ||

3663 
£ssi⁄
 =
NULL
 ||

3664 
s¶
->
£ssi⁄_√gŸüã
 =
NULL
 ||

3665 
s¶
->
ídpoöt
 !
SSL_IS_CLIENT
 )

3667 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

3670 if––
ªt
 = 
	`s¶_£ssi⁄_c›y
–
s¶
->
£ssi⁄_√gŸüã
, 
£ssi⁄
 ) ) != 0 )

3671 –
ªt
 );

3673 
s¶
->
h™dshake
->
ªsume
 = 1;

3676 
	}
}

3678 
	$s¶_£t_cùhîsuôes
–
s¶_c⁄ãxt
 *
s¶
, c⁄° *
cùhîsuôes
 )

3680 
s¶
->
cùhîsuôe_li°
[
SSL_MINOR_VERSION_0
] = 
cùhîsuôes
;

3681 
s¶
->
cùhîsuôe_li°
[
SSL_MINOR_VERSION_1
] = 
cùhîsuôes
;

3682 
s¶
->
cùhîsuôe_li°
[
SSL_MINOR_VERSION_2
] = 
cùhîsuôes
;

3683 
s¶
->
cùhîsuôe_li°
[
SSL_MINOR_VERSION_3
] = 
cùhîsuôes
;

3684 
	}
}

3686 
	$s¶_£t_cùhîsuôes_f‹_vîsi⁄
–
s¶_c⁄ãxt
 *
s¶
,

3687 c⁄° *
cùhîsuôes
,

3688 
maj‹
, 
mö‹
 )

3690 if–
maj‹
 !
SSL_MAJOR_VERSION_3
 )

3693 if–
mö‹
 < 
SSL_MINOR_VERSION_0
 || mö‹ > 
SSL_MINOR_VERSION_3
 )

3696 
s¶
->
cùhîsuôe_li°
[
mö‹
] = 
cùhîsuôes
;

3697 
	}
}

3699 #i‡
deföed
(
POLARSSL_X509_CRT_PARSE_C
)

3701 
s¶_key_˚π
 *
	$s¶_add_key_˚π
–
s¶_c⁄ãxt
 *
s¶
 )

3703 
s¶_key_˚π
 *
key_˚π
, *
œ°
;

3705 
key_˚π
 = (
s¶_key_˚π
 *Ë
	`pﬁ¨s¶_mÆloc
( (ssl_key_cert) );

3706 if–
key_˚π
 =
NULL
 )

3707 –
NULL
 );

3709 
	`mem£t
–
key_˚π
, 0, –
s¶_key_˚π
 ) );

3712 if–
s¶
->
key_˚π
 =
NULL
 )

3714 
s¶
->
key_˚π
 = key_cert;

3715 if–
s¶
->
h™dshake
 !
NULL
 )

3716 
s¶
->
h™dshake
->
key_˚π
 = key_cert;

3720 
œ°
 = 
s¶
->
key_˚π
;

3721  
œ°
->
√xt
 !
NULL
 )

3722 
œ°
 =Üa°->
√xt
;

3723 
œ°
->
√xt
 = 
key_˚π
;

3726 –
key_˚π
 );

3727 
	}
}

3729 
	$s¶_£t_ˇ_chaö
–
s¶_c⁄ãxt
 *
s¶
, 
x509_¸t
 *
ˇ_chaö
,

3730 
x509_¸l
 *
ˇ_¸l
, c⁄° *
≥î_˙
 )

3732 
s¶
->
ˇ_chaö
 = ca_chain;

3733 
s¶
->
ˇ_¸l
 = ca_crl;

3734 
s¶
->
≥î_˙
 =Öeer_cn;

3735 
	}
}

3737 
	$s¶_£t_own_˚π
–
s¶_c⁄ãxt
 *
s¶
, 
x509_¸t
 *
own_˚π
,

3738 
pk_c⁄ãxt
 *
pk_key
 )

3740 
s¶_key_˚π
 *
key_˚π
 = 
	`s¶_add_key_˚π
–
s¶
 );

3742 if–
key_˚π
 =
NULL
 )

3743 –
POLARSSL_ERR_SSL_MALLOC_FAILED
 );

3745 
key_˚π
->
˚π
 = 
own_˚π
;

3746 
key_˚π
->
key
 = 
pk_key
;

3749 
	}
}

3751 #i‡
deföed
(
POLARSSL_RSA_C
)

3752 
	$s¶_£t_own_˚π_rß
–
s¶_c⁄ãxt
 *
s¶
, 
x509_¸t
 *
own_˚π
,

3753 
rß_c⁄ãxt
 *
rß_key
 )

3755 
ªt
;

3756 
s¶_key_˚π
 *
key_˚π
 = 
	`s¶_add_key_˚π
–
s¶
 );

3758 if–
key_˚π
 =
NULL
 )

3759 –
POLARSSL_ERR_SSL_MALLOC_FAILED
 );

3761 
key_˚π
->
key
 = (
pk_c⁄ãxt
 *Ë
	`pﬁ¨s¶_mÆloc
( (pk_context) );

3762 if–
key_˚π
->
key
 =
NULL
 )

3763 –
POLARSSL_ERR_SSL_MALLOC_FAILED
 );

3765 
	`pk_öô
–
key_˚π
->
key
 );

3767 
ªt
 = 
	`pk_öô_˘x
–
key_˚π
->
key
, 
	`pk_öfo_‰om_ty≥
–
POLARSSL_PK_RSA
 ) );

3768 if–
ªt
 != 0 )

3769 –
ªt
 );

3771 if––
ªt
 = 
	`rß_c›y
–
	`pk_rß
–*
key_˚π
->
key
 ), 
rß_key
 ) ) != 0 )

3772 –
ªt
 );

3774 
key_˚π
->
˚π
 = 
own_˚π
;

3775 
key_˚π
->
key_own_Æloc
 = 1;

3778 
	}
}

3781 
	$s¶_£t_own_˚π_Æt
–
s¶_c⁄ãxt
 *
s¶
, 
x509_¸t
 *
own_˚π
,

3782 *
rß_key
,

3783 
rß_de¸y±_func
 
rß_de¸y±
,

3784 
rß_sign_func
 
rß_sign
,

3785 
rß_key_Àn_func
 
rß_key_Àn
 )

3787 
ªt
;

3788 
s¶_key_˚π
 *
key_˚π
 = 
	`s¶_add_key_˚π
–
s¶
 );

3790 if–
key_˚π
 =
NULL
 )

3791 –
POLARSSL_ERR_SSL_MALLOC_FAILED
 );

3793 
key_˚π
->
key
 = (
pk_c⁄ãxt
 *Ë
	`pﬁ¨s¶_mÆloc
( (pk_context) );

3794 if–
key_˚π
->
key
 =
NULL
 )

3795 –
POLARSSL_ERR_SSL_MALLOC_FAILED
 );

3797 
	`pk_öô
–
key_˚π
->
key
 );

3799 if––
ªt
 = 
	`pk_öô_˘x_rß_Æt
–
key_˚π
->
key
, 
rß_key
,

3800 
rß_de¸y±
, 
rß_sign
, 
rß_key_Àn
 ) ) != 0 )

3801 –
ªt
 );

3803 
key_˚π
->
˚π
 = 
own_˚π
;

3804 
key_˚π
->
key_own_Æloc
 = 1;

3807 
	}
}

3810 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

3811 
	$s¶_£t_psk
–
s¶_c⁄ãxt
 *
s¶
, c⁄° *
psk
, 
size_t
 
psk_Àn
,

3812 c⁄° *
psk_idítôy
, 
size_t
 
psk_idítôy_Àn
 )

3814 if–
psk
 =
NULL
 || 
psk_idítôy
 == NULL )

3815 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

3817 if–
psk_Àn
 > 
POLARSSL_PSK_MAX_LEN
 )

3818 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

3820 if–
s¶
->
psk
 !
NULL
 )

3822 
	`pﬁ¨s¶_‰ì
–
s¶
->
psk
 );

3823 
	`pﬁ¨s¶_‰ì
–
s¶
->
psk_idítôy
 );

3826 
s¶
->
psk_Àn
 =Ösk_len;

3827 
s¶
->
psk_idítôy_Àn
 =Ösk_identity_len;

3829 
s¶
->
psk
 = (*Ë
	`pﬁ¨s¶_mÆloc
–s¶->
psk_Àn
 );

3830 
s¶
->
psk_idítôy
 = (*)

3831 
	`pﬁ¨s¶_mÆloc
–
s¶
->
psk_idítôy_Àn
 );

3833 if–
s¶
->
psk
 =
NULL
 || s¶->
psk_idítôy
 == NULL )

3834 –
POLARSSL_ERR_SSL_MALLOC_FAILED
 );

3836 
	`mem˝y
–
s¶
->
psk
,Ösk, s¶->
psk_Àn
 );

3837 
	`mem˝y
–
s¶
->
psk_idítôy
,Ösk_idítôy, s¶->
psk_idítôy_Àn
 );

3840 
	}
}

3842 
s¶_£t_psk_cb
–
s¶_c⁄ãxt
 *
s¶
,

3843 (*
f_psk
)(*, 
s¶_c⁄ãxt
 *, const *,

3844 
size_t
),

3845 *
p_psk
 )

3847 
s¶
->
f_psk
 = f_psk;

3848 
s¶
->
p_psk
 =Ö_psk;

3849 
	}
}

3852 #i‡
deföed
(
POLARSSL_DHM_C
)

3853 
	$s¶_£t_dh_∑øm
–
s¶_c⁄ãxt
 *
s¶
, c⁄° *
dhm_P
, c⁄° *
dhm_G
 )

3855 
ªt
;

3857 if––
ªt
 = 
	`mpi_ªad_°rög
–&
s¶
->
dhm_P
, 16, dhm_P ) ) != 0 )

3859 
	`SSL_DEBUG_RET
–1, "mpi_ªad_°rög", 
ªt
 );

3860 –
ªt
 );

3863 if––
ªt
 = 
	`mpi_ªad_°rög
–&
s¶
->
dhm_G
, 16, dhm_G ) ) != 0 )

3865 
	`SSL_DEBUG_RET
–1, "mpi_ªad_°rög", 
ªt
 );

3866 –
ªt
 );

3870 
	}
}

3872 
	$s¶_£t_dh_∑øm_˘x
–
s¶_c⁄ãxt
 *
s¶
, 
dhm_c⁄ãxt
 *
dhm_˘x
 )

3874 
ªt
;

3876 if––
ªt
 = 
	`mpi_c›y
–&
s¶
->
dhm_P
, &
dhm_˘x
->
P
 ) ) != 0 )

3878 
	`SSL_DEBUG_RET
–1, "mpi_c›y", 
ªt
 );

3879 –
ªt
 );

3882 if––
ªt
 = 
	`mpi_c›y
–&
s¶
->
dhm_G
, &
dhm_˘x
->
G
 ) ) != 0 )

3884 
	`SSL_DEBUG_RET
–1, "mpi_c›y", 
ªt
 );

3885 –
ªt
 );

3889 
	}
}

3892 #i‡
deföed
(
POLARSSL_SSL_SET_CURVES
)

3896 
	$s¶_£t_curves
–
s¶_c⁄ãxt
 *
s¶
, c⁄° 
e˝_group_id
 *
curve_li°
 )

3898 
s¶
->
curve_li°
 = curve_list;

3899 
	}
}

3902 #i‡
deföed
(
POLARSSL_SSL_SERVER_NAME_INDICATION
)

3903 
	$s¶_£t_ho°«me
–
s¶_c⁄ãxt
 *
s¶
, c⁄° *
ho°«me
 )

3905 if–
ho°«me
 =
NULL
 )

3906 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

3908 
s¶
->
ho°«me_Àn
 = 
	`°æí
–
ho°«me
 );

3910 if–
s¶
->
ho°«me_Àn
 + 1 == 0 )

3911 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

3913 
s¶
->
ho°«me
 = (*Ë
	`pﬁ¨s¶_mÆloc
–s¶->
ho°«me_Àn
 + 1 );

3915 if–
s¶
->
ho°«me
 =
NULL
 )

3916 –
POLARSSL_ERR_SSL_MALLOC_FAILED
 );

3918 
	`mem˝y
–
s¶
->
ho°«me
, (const *) hostname,

3919 
s¶
->
ho°«me_Àn
 );

3921 
s¶
->
ho°«me
[s¶->
ho°«me_Àn
] = '\0';

3924 
	}
}

3926 
s¶_£t_¢i
–
s¶_c⁄ãxt
 *
s¶
,

3927 (*
f_¢i
)(*, 
s¶_c⁄ãxt
 *,

3928 c⁄° *, 
size_t
),

3929 *
p_¢i
 )

3931 
s¶
->
f_¢i
 = f_sni;

3932 
s¶
->
p_¢i
 =Ö_sni;

3933 
	}
}

3936 #i‡
deföed
(
POLARSSL_SSL_ALPN
)

3937 
	$s¶_£t_Æ≤_¥Ÿocﬁs
–
s¶_c⁄ãxt
 *
s¶
, c⁄° **
¥Ÿos
 )

3939 
size_t
 
cur_Àn
, 
tŸ_Àn
;

3940 c⁄° **
p
;

3946 
tŸ_Àn
 = 0;

3947  
p
 = 
¥Ÿos
; *∞!
NULL
;Ö++ )

3949 
cur_Àn
 = 
	`°æí
–*
p
 );

3950 
tŸ_Àn
 +
cur_Àn
;

3952 if–
cur_Àn
 =0 || cur_À¿> 255 || 
tŸ_Àn
 > 65535 )

3953 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

3956 
s¶
->
Æ≤_li°
 = 
¥Ÿos
;

3959 
	}
}

3961 c⁄° *
	$s¶_gë_Æ≤_¥Ÿocﬁ
–c⁄° 
s¶_c⁄ãxt
 *
s¶
 )

3963 –
s¶
->
Æ≤_cho£n
 );

3964 
	}
}

3967 
	$s¶_£t_max_vîsi⁄
–
s¶_c⁄ãxt
 *
s¶
, 
maj‹
, 
mö‹
 )

3969 if–
maj‹
 >
SSL_MIN_MAJOR_VERSION
 && maj‹ <
SSL_MAX_MAJOR_VERSION
 &&

3970 
mö‹
 >
SSL_MIN_MINOR_VERSION
 && mö‹ <
SSL_MAX_MINOR_VERSION
 )

3972 
s¶
->
max_maj‹_vî
 = 
maj‹
;

3973 
s¶
->
max_mö‹_vî
 = 
mö‹
;

3975 
	}
}

3977 
	$s¶_£t_mö_vîsi⁄
–
s¶_c⁄ãxt
 *
s¶
, 
maj‹
, 
mö‹
 )

3979 if–
maj‹
 >
SSL_MIN_MAJOR_VERSION
 && maj‹ <
SSL_MAX_MAJOR_VERSION
 &&

3980 
mö‹
 >
SSL_MIN_MINOR_VERSION
 && mö‹ <
SSL_MAX_MINOR_VERSION
 )

3982 
s¶
->
mö_maj‹_vî
 = 
maj‹
;

3983 
s¶
->
mö_mö‹_vî
 = 
mö‹
;

3985 
	}
}

3987 #i‡
deföed
(
POLARSSL_SSL_MAX_FRAGMENT_LENGTH
)

3988 
	$s¶_£t_max_‰ag_Àn
–
s¶_c⁄ãxt
 *
s¶
, 
mÊ_code
 )

3990 if–
mÊ_code
 >
SSL_MAX_FRAG_LEN_INVALID
 ||

3991 
mÊ_code_to_Àngth
[
mÊ_code
] > 
SSL_MAX_CONTENT_LEN
 )

3993 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

3996 
s¶
->
mÊ_code
 = mfl_code;

3999 
	}
}

4002 #i‡
deföed
(
POLARSSL_SSL_TRUNCATED_HMAC
)

4003 
	$s¶_£t_åunˇãd_hmac
–
s¶_c⁄ãxt
 *
s¶
, 
åunˇã
 )

4005 if–
s¶
->
ídpoöt
 !
SSL_IS_CLIENT
 )

4006 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

4008 
s¶
->
åunc_hmac
 = 
åunˇã
;

4011 
	}
}

4014 
	$s¶_£t_ª√gŸüti⁄
–
s¶_c⁄ãxt
 *
s¶
, 
ª√gŸüti⁄
 )

4016 
s¶
->
dißbÀ_ª√gŸüti⁄
 = 
ª√gŸüti⁄
;

4017 
	}
}

4019 
	$s¶_Àgacy_ª√gŸüti⁄
–
s¶_c⁄ãxt
 *
s¶
, 
Ælow_Àgacy
 )

4021 
s¶
->
Ælow_Àgacy_ª√gŸüti⁄
 = 
Ælow_Àgacy
;

4022 
	}
}

4024 
	$s¶_£t_ª√gŸüti⁄_íf‹˚d
–
s¶_c⁄ãxt
 *
s¶
, 
max_ªc‹ds
 )

4026 
s¶
->
ª√go_max_ªc‹ds
 = 
max_ªc‹ds
;

4027 
	}
}

4029 #i‡
deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

4030 
	$s¶_£t_£ssi⁄_tickës
–
s¶_c⁄ãxt
 *
s¶
, 
u£_tickës
 )

4032 
s¶
->
£ssi⁄_tickës
 = 
u£_tickës
;

4034 if–
s¶
->
ídpoöt
 =
SSL_IS_CLIENT
 )

4037 if–
s¶
->
f_∫g
 =
NULL
 )

4038 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

4040 –
	`s¶_tickë_keys_öô
–
s¶
 ) );

4041 
	}
}

4043 
	$s¶_£t_£ssi⁄_tickë_li„time
–
s¶_c⁄ãxt
 *
s¶
, 
li„time
 )

4045 
s¶
->
tickë_li„time
 = 
li„time
;

4046 
	}
}

4052 
size_t
 
	$s¶_gë_byãs_avaû
–c⁄° 
s¶_c⁄ãxt
 *
s¶
 )

4054 –
s¶
->
ö_of·
 =
NULL
 ? 0 : s¶->
ö_msgÀn
 );

4055 
	}
}

4057 
	$s¶_gë_vîify_ªsu…
–c⁄° 
s¶_c⁄ãxt
 *
s¶
 )

4059 –
s¶
->
£ssi⁄
->
vîify_ªsu…
 );

4060 
	}
}

4062 c⁄° *
	$s¶_gë_cùhîsuôe
–c⁄° 
s¶_c⁄ãxt
 *
s¶
 )

4064 if–
s¶
 =
NULL
 || s¶->
£ssi⁄
 == NULL )

4065 –
NULL
 );

4067  
	`s¶_gë_cùhîsuôe_«me
–
s¶
->
£ssi⁄
->
cùhîsuôe
 );

4068 
	}
}

4070 c⁄° *
	$s¶_gë_vîsi⁄
–c⁄° 
s¶_c⁄ãxt
 *
s¶
 )

4072  
s¶
->
mö‹_vî
 )

4074 
SSL_MINOR_VERSION_0
:

4077 
SSL_MINOR_VERSION_1
:

4080 
SSL_MINOR_VERSION_2
:

4083 
SSL_MINOR_VERSION_3
:

4090 
	}
}

4092 #i‡
deföed
(
POLARSSL_X509_CRT_PARSE_C
)

4093 c⁄° 
x509_¸t
 *
	$s¶_gë_≥î_˚π
–c⁄° 
s¶_c⁄ãxt
 *
s¶
 )

4095 if–
s¶
 =
NULL
 || s¶->
£ssi⁄
 == NULL )

4096 –
NULL
 );

4098 –
s¶
->
£ssi⁄
->
≥î_˚π
 );

4099 
	}
}

4102 
	$s¶_gë_£ssi⁄
–c⁄° 
s¶_c⁄ãxt
 *
s¶
, 
s¶_£ssi⁄
 *
d°
 )

4104 if–
s¶
 =
NULL
 ||

4105 
d°
 =
NULL
 ||

4106 
s¶
->
£ssi⁄
 =
NULL
 ||

4107 
s¶
->
ídpoöt
 !
SSL_IS_CLIENT
 )

4109 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

4112 –
	`s¶_£ssi⁄_c›y
–
d°
, 
s¶
->
£ssi⁄
 ) );

4113 
	}
}

4118 
	$s¶_h™dshake_°ï
–
s¶_c⁄ãxt
 *
s¶
 )

4120 
ªt
 = 
POLARSSL_ERR_SSL_FEATURE_UNAVAILABLE
;

4122 #i‡
	`deföed
(
POLARSSL_SSL_CLI_C
)

4123 if–
s¶
->
ídpoöt
 =
SSL_IS_CLIENT
 )

4124 
ªt
 = 
	`s¶_h™dshake_˛õ¡_°ï
–
s¶
 );

4127 #i‡
	`deföed
(
POLARSSL_SSL_SRV_C
)

4128 if–
s¶
->
ídpoöt
 =
SSL_IS_SERVER
 )

4129 
ªt
 = 
	`s¶_h™dshake_£rvî_°ï
–
s¶
 );

4132 –
ªt
 );

4133 
	}
}

4138 
	$s¶_h™dshake
–
s¶_c⁄ãxt
 *
s¶
 )

4140 
ªt
 = 0;

4142 
	`SSL_DEBUG_MSG
( 2, ( "=> handshake" ) );

4144  
s¶
->
°©e
 !
SSL_HANDSHAKE_OVER
 )

4146 
ªt
 = 
	`s¶_h™dshake_°ï
–
s¶
 );

4148 if–
ªt
 != 0 )

4152 
	`SSL_DEBUG_MSG
( 2, ( "<= handshake" ) );

4154 –
ªt
 );

4155 
	}
}

4157 #i‡
deföed
(
POLARSSL_SSL_SRV_C
)

4161 
	$s¶_wrôe_hñlo_ªque°
–
s¶_c⁄ãxt
 *
s¶
 )

4163 
ªt
;

4165 
	`SSL_DEBUG_MSG
( 2, ( "=> write helloÑequest" ) );

4167 
s¶
->
out_msgÀn
 = 4;

4168 
s¶
->
out_msgty≥
 = 
SSL_MSG_HANDSHAKE
;

4169 
s¶
->
out_msg
[0] = 
SSL_HS_HELLO_REQUEST
;

4171 if––
ªt
 = 
	`s¶_wrôe_ªc‹d
–
s¶
 ) ) != 0 )

4173 
	`SSL_DEBUG_RET
–1, "s¶_wrôe_ªc‹d", 
ªt
 );

4174 –
ªt
 );

4177 
s¶
->
ª√gŸüti⁄
 = 
SSL_RENEGOTIATION_PENDING
;

4179 
	`SSL_DEBUG_MSG
( 2, ( "<= write helloÑequest" ) );

4182 
	}
}

4194 
	$s¶_°¨t_ª√gŸüti⁄
–
s¶_c⁄ãxt
 *
s¶
 )

4196 
ªt
;

4198 
	`SSL_DEBUG_MSG
( 2, ( "=>Ñenegotiate" ) );

4200 if––
ªt
 = 
	`s¶_h™dshake_öô
–
s¶
 ) ) != 0 )

4201 –
ªt
 );

4203 
s¶
->
°©e
 = 
SSL_HELLO_REQUEST
;

4204 
s¶
->
ª√gŸüti⁄
 = 
SSL_RENEGOTIATION
;

4206 if––
ªt
 = 
	`s¶_h™dshake
–
s¶
 ) ) != 0 )

4208 
	`SSL_DEBUG_RET
–1, "s¶_h™dshake", 
ªt
 );

4209 –
ªt
 );

4212 
	`SSL_DEBUG_MSG
( 2, ( "<=Ñenegotiate" ) );

4215 
	}
}

4221 
	$s¶_ª√gŸüã
–
s¶_c⁄ãxt
 *
s¶
 )

4223 
ªt
 = 
POLARSSL_ERR_SSL_FEATURE_UNAVAILABLE
;

4225 #i‡
	`deföed
(
POLARSSL_SSL_SRV_C
)

4227 if–
s¶
->
ídpoöt
 =
SSL_IS_SERVER
 )

4229 if–
s¶
->
°©e
 !
SSL_HANDSHAKE_OVER
 )

4230 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

4232 –
	`s¶_wrôe_hñlo_ªque°
–
s¶
 ) );

4236 #i‡
	`deföed
(
POLARSSL_SSL_CLI_C
)

4241 if–
s¶
->
ª√gŸüti⁄
 !
SSL_RENEGOTIATION
 )

4243 if–
s¶
->
°©e
 !
SSL_HANDSHAKE_OVER
 )

4244 –
POLARSSL_ERR_SSL_BAD_INPUT_DATA
 );

4246 if––
ªt
 = 
	`s¶_°¨t_ª√gŸüti⁄
–
s¶
 ) ) != 0 )

4248 
	`SSL_DEBUG_RET
–1, "s¶_°¨t_ª√gŸüti⁄", 
ªt
 );

4249 –
ªt
 );

4254 if––
ªt
 = 
	`s¶_h™dshake
–
s¶
 ) ) != 0 )

4256 
	`SSL_DEBUG_RET
–1, "s¶_h™dshake", 
ªt
 );

4257 –
ªt
 );

4262 –
ªt
 );

4263 
	}
}

4268 
	$s¶_ªad
–
s¶_c⁄ãxt
 *
s¶
, *
buf
, 
size_t
 
Àn
 )

4270 
ªt
;

4271 
size_t
 
n
;

4273 
	`SSL_DEBUG_MSG
( 2, ( "=>Ñead" ) );

4275 if–
s¶
->
°©e
 !
SSL_HANDSHAKE_OVER
 )

4277 if––
ªt
 = 
	`s¶_h™dshake
–
s¶
 ) ) != 0 )

4279 
	`SSL_DEBUG_RET
–1, "s¶_h™dshake", 
ªt
 );

4280 –
ªt
 );

4284 if–
s¶
->
ö_of·
 =
NULL
 )

4286 if––
ªt
 = 
	`s¶_ªad_ªc‹d
–
s¶
 ) ) != 0 )

4288 if–
ªt
 =
POLARSSL_ERR_SSL_CONN_EOF
 )

4291 
	`SSL_DEBUG_RET
–1, "s¶_ªad_ªc‹d", 
ªt
 );

4292 –
ªt
 );

4295 if–
s¶
->
ö_msgÀn
 == 0 &&

4296 
s¶
->
ö_msgty≥
 =
SSL_MSG_APPLICATION_DATA
 )

4301 if––
ªt
 = 
	`s¶_ªad_ªc‹d
–
s¶
 ) ) != 0 )

4303 if–
ªt
 =
POLARSSL_ERR_SSL_CONN_EOF
 )

4306 
	`SSL_DEBUG_RET
–1, "s¶_ªad_ªc‹d", 
ªt
 );

4307 –
ªt
 );

4311 if–
s¶
->
ö_msgty≥
 =
SSL_MSG_HANDSHAKE
 )

4313 
	`SSL_DEBUG_MSG
( 1, ( "received handshake message" ) );

4315 if–
s¶
->
ídpoöt
 =
SSL_IS_CLIENT
 &&

4316 –
s¶
->
ö_msg
[0] !
SSL_HS_HELLO_REQUEST
 ||

4317 
s¶
->
ö_h¶í
 != 4 ) )

4319 
	`SSL_DEBUG_MSG
( 1, ( "handshakeÑeceived (not HelloRequest)" ) );

4320 –
POLARSSL_ERR_SSL_UNEXPECTED_MESSAGE
 );

4323 if–
s¶
->
dißbÀ_ª√gŸüti⁄
 =
SSL_RENEGOTIATION_DISABLED
 ||

4324 –
s¶
->
£cuª_ª√gŸüti⁄
 =
SSL_LEGACY_RENEGOTIATION
 &&

4325 
s¶
->
Ælow_Àgacy_ª√gŸüti⁄
 ==

4326 
SSL_LEGACY_NO_RENEGOTIATION
 ) )

4328 
	`SSL_DEBUG_MSG
( 3, ( "ignoringÑenegotiation, sendingálert" ) );

4330 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
)

4331 if–
s¶
->
mö‹_vî
 =
SSL_MINOR_VERSION_0
 )

4336 if––
ªt
 = 
	`s¶_£nd_Áèl_h™dshake_Áûuª
–
s¶
 ) ) != 0 )

4337 –
ªt
 );

4341 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë|| deföed(
POLARSSL_SSL_PROTO_TLS1_1
) || \

4342 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

4343 if–
s¶
->
mö‹_vî
 >
SSL_MINOR_VERSION_1
 )

4345 if––
ªt
 = 
	`s¶_£nd_Æît_mesßge
–
s¶
,

4346 
SSL_ALERT_LEVEL_WARNING
,

4347 
SSL_ALERT_MSG_NO_RENEGOTIATION
 ) ) != 0 )

4349 –
ªt
 );

4354 
POLARSSL_SSL_PROTO_TLS1_2
 */

4356 
	`SSL_DEBUG_MSG
( 1, ( "shouldÇever happen" ) );

4357 –
POLARSSL_ERR_SSL_INTERNAL_ERROR
 );

4362 if––
ªt
 = 
	`s¶_°¨t_ª√gŸüti⁄
–
s¶
 ) ) != 0 )

4364 
	`SSL_DEBUG_RET
–1, "s¶_°¨t_ª√gŸüti⁄", 
ªt
 );

4365 –
ªt
 );

4368 –
POLARSSL_ERR_NET_WANT_READ
 );

4371 if–
s¶
->
ª√gŸüti⁄
 =
SSL_RENEGOTIATION_PENDING
 )

4373 
s¶
->
ª√go_ªc‹ds_£í
++;

4375 if–
s¶
->
ª√go_max_ªc‹ds
 >= 0 &&

4376 
s¶
->
ª√go_ªc‹ds_£í
 > s¶->
ª√go_max_ªc‹ds
 )

4378 
	`SSL_DEBUG_MSG
( 1, ( "renegotiationÑequested, "

4380 –
POLARSSL_ERR_SSL_UNEXPECTED_MESSAGE
 );

4383 if–
s¶
->
ö_msgty≥
 !
SSL_MSG_APPLICATION_DATA
 )

4385 
	`SSL_DEBUG_MSG
( 1, ( "badápplication data message" ) );

4386 –
POLARSSL_ERR_SSL_UNEXPECTED_MESSAGE
 );

4389 
s¶
->
ö_of·
 = s¶->
ö_msg
;

4392 
n
 = ( 
Àn
 < 
s¶
->
ö_msgÀn
 )

4393 ? 
Àn
 : 
s¶
->
ö_msgÀn
;

4395 
	`mem˝y
–
buf
, 
s¶
->
ö_of·
, 
n
 );

4396 
s¶
->
ö_msgÀn
 -
n
;

4398 if–
s¶
->
ö_msgÀn
 == 0 )

4400 
s¶
->
ö_of·
 = 
NULL
;

4403 
s¶
->
ö_of·
 +
n
;

4405 
	`SSL_DEBUG_MSG
( 2, ( "<=Ñead" ) );

4407 –(Ë
n
 );

4408 
	}
}

4413 
	$s¶_wrôe
–
s¶_c⁄ãxt
 *
s¶
, c⁄° *
buf
, 
size_t
 
Àn
 )

4415 
ªt
;

4416 
size_t
 
n
;

4417 
max_Àn
 = 
SSL_MAX_CONTENT_LEN
;

4419 
	`SSL_DEBUG_MSG
( 2, ( "=> write" ) );

4421 if–
s¶
->
°©e
 !
SSL_HANDSHAKE_OVER
 )

4423 if––
ªt
 = 
	`s¶_h™dshake
–
s¶
 ) ) != 0 )

4425 
	`SSL_DEBUG_RET
–1, "s¶_h™dshake", 
ªt
 );

4426 –
ªt
 );

4430 #i‡
	`deföed
(
POLARSSL_SSL_MAX_FRAGMENT_LENGTH
)

4434 
max_Àn
 = 
mÊ_code_to_Àngth
[
s¶
->
mÊ_code
];

4439 if–
s¶
->
£ssi⁄_out
 !
NULL
 &&

4440 
mÊ_code_to_Àngth
[
s¶
->
£ssi⁄_out
->
mÊ_code
] < 
max_Àn
 )

4442 
max_Àn
 = 
mÊ_code_to_Àngth
[
s¶
->
£ssi⁄_out
->
mÊ_code
];

4446 
n
 = ( 
Àn
 < 
max_Àn
) ?Üen : max_len;

4448 if–
s¶
->
out_À·
 != 0 )

4450 if––
ªt
 = 
	`s¶_Êush_ouçut
–
s¶
 ) ) != 0 )

4452 
	`SSL_DEBUG_RET
–1, "s¶_Êush_ouçut", 
ªt
 );

4453 –
ªt
 );

4458 
s¶
->
out_msgÀn
 = 
n
;

4459 
s¶
->
out_msgty≥
 = 
SSL_MSG_APPLICATION_DATA
;

4460 
	`mem˝y
–
s¶
->
out_msg
, 
buf
, 
n
 );

4462 if––
ªt
 = 
	`s¶_wrôe_ªc‹d
–
s¶
 ) ) != 0 )

4464 
	`SSL_DEBUG_RET
–1, "s¶_wrôe_ªc‹d", 
ªt
 );

4465 –
ªt
 );

4469 
	`SSL_DEBUG_MSG
( 2, ( "<= write" ) );

4471 –(Ë
n
 );

4472 
	}
}

4477 
	$s¶_˛o£_nŸify
–
s¶_c⁄ãxt
 *
s¶
 )

4479 
ªt
;

4481 
	`SSL_DEBUG_MSG
( 2, ( "=> write closeÇotify" ) );

4483 if––
ªt
 = 
	`s¶_Êush_ouçut
–
s¶
 ) ) != 0 )

4485 
	`SSL_DEBUG_RET
–1, "s¶_Êush_ouçut", 
ªt
 );

4486 –
ªt
 );

4489 if–
s¶
->
°©e
 =
SSL_HANDSHAKE_OVER
 )

4491 if––
ªt
 = 
	`s¶_£nd_Æît_mesßge
–
s¶
,

4492 
SSL_ALERT_LEVEL_WARNING
,

4493 
SSL_ALERT_MSG_CLOSE_NOTIFY
 ) ) != 0 )

4495 –
ªt
 );

4499 
	`SSL_DEBUG_MSG
( 2, ( "<= write closeÇotify" ) );

4501 –
ªt
 );

4502 
	}
}

4504 
	$s¶_å™sf‹m_‰ì
–
s¶_å™sf‹m
 *
å™sf‹m
 )

4506 if–
å™sf‹m
 =
NULL
 )

4509 #i‡
	`deföed
(
POLARSSL_ZLIB_SUPPORT
)

4510 
	`deÊ©eEnd
–&
å™sf‹m
->
˘x_deÊ©e
 );

4511 
	`öÊ©eEnd
–&
å™sf‹m
->
˘x_öÊ©e
 );

4514 
	`cùhî_‰ì
–&
å™sf‹m
->
cùhî_˘x_íc
 );

4515 
	`cùhî_‰ì
–&
å™sf‹m
->
cùhî_˘x_dec
 );

4517 
	`md_‰ì
–&
å™sf‹m
->
md_˘x_íc
 );

4518 
	`md_‰ì
–&
å™sf‹m
->
md_˘x_dec
 );

4520 
	`pﬁ¨s¶_zîoize
–
å™sf‹m
, –
s¶_å™sf‹m
 ) );

4521 
	}
}

4523 #i‡
deföed
(
POLARSSL_X509_CRT_PARSE_C
)

4524 
	$s¶_key_˚π_‰ì
–
s¶_key_˚π
 *
key_˚π
 )

4526 
s¶_key_˚π
 *
cur
 = 
key_˚π
, *
√xt
;

4528  
cur
 !
NULL
 )

4530 
√xt
 = 
cur
->next;

4532 if–
cur
->
key_own_Æloc
 )

4534 
	`pk_‰ì
–
cur
->
key
 );

4535 
	`pﬁ¨s¶_‰ì
–
cur
->
key
 );

4537 
	`pﬁ¨s¶_‰ì
–
cur
 );

4539 
cur
 = 
√xt
;

4541 
	}
}

4544 
	$s¶_h™dshake_‰ì
–
s¶_h™dshake_∑øms
 *
h™dshake
 )

4546 if–
h™dshake
 =
NULL
 )

4549 #i‡
	`deföed
(
POLARSSL_DHM_C
)

4550 
	`dhm_‰ì
–&
h™dshake
->
dhm_˘x
 );

4552 #i‡
	`deföed
(
POLARSSL_ECDH_C
)

4553 
	`ecdh_‰ì
–&
h™dshake
->
ecdh_˘x
 );

4556 #i‡
	`deföed
(
POLARSSL_ECDH_C
Ë|| deföed(
POLARSSL_ECDSA_C
)

4558 
	`pﬁ¨s¶_‰ì
–(*Ë
h™dshake
->
curves
 );

4561 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
) && \

4562 
	`deföed
(
POLARSSL_SSL_SERVER_NAME_INDICATION
)

4567 if–
h™dshake
->
¢i_key_˚π
 !
NULL
 )

4569 
s¶_key_˚π
 *
cur
 = 
h™dshake
->
¢i_key_˚π
, *
√xt
;

4571  
cur
 !
NULL
 )

4573 
√xt
 = 
cur
->next;

4574 
	`pﬁ¨s¶_‰ì
–
cur
 );

4575 
cur
 = 
√xt
;

4580 
	`pﬁ¨s¶_zîoize
–
h™dshake
, –
s¶_h™dshake_∑øms
 ) );

4581 
	}
}

4583 
	$s¶_£ssi⁄_‰ì
–
s¶_£ssi⁄
 *
£ssi⁄
 )

4585 if–
£ssi⁄
 =
NULL
 )

4588 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

4589 if–
£ssi⁄
->
≥î_˚π
 !
NULL
 )

4591 
	`x509_¸t_‰ì
–
£ssi⁄
->
≥î_˚π
 );

4592 
	`pﬁ¨s¶_‰ì
–
£ssi⁄
->
≥î_˚π
 );

4596 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

4597 
	`pﬁ¨s¶_‰ì
–
£ssi⁄
->
tickë
 );

4600 
	`pﬁ¨s¶_zîoize
–
£ssi⁄
, –
s¶_£ssi⁄
 ) );

4601 
	}
}

4606 
	$s¶_‰ì
–
s¶_c⁄ãxt
 *
s¶
 )

4608 if–
s¶
 =
NULL
 )

4611 
	`SSL_DEBUG_MSG
( 2, ( "=> free" ) );

4613 if–
s¶
->
out_˘r
 !
NULL
 )

4615 
	`pﬁ¨s¶_zîoize
–
s¶
->
out_˘r
, 
SSL_BUFFER_LEN
 );

4616 
	`pﬁ¨s¶_‰ì
–
s¶
->
out_˘r
 );

4619 if–
s¶
->
ö_˘r
 !
NULL
 )

4621 
	`pﬁ¨s¶_zîoize
–
s¶
->
ö_˘r
, 
SSL_BUFFER_LEN
 );

4622 
	`pﬁ¨s¶_‰ì
–
s¶
->
ö_˘r
 );

4625 #i‡
	`deföed
(
POLARSSL_ZLIB_SUPPORT
)

4626 if–
s¶
->
com¥ess_buf
 !
NULL
 )

4628 
	`pﬁ¨s¶_zîoize
–
s¶
->
com¥ess_buf
, 
SSL_BUFFER_LEN
 );

4629 
	`pﬁ¨s¶_‰ì
–
s¶
->
com¥ess_buf
 );

4633 #i‡
	`deföed
(
POLARSSL_DHM_C
)

4634 
	`mpi_‰ì
–&
s¶
->
dhm_P
 );

4635 
	`mpi_‰ì
–&
s¶
->
dhm_G
 );

4638 if–
s¶
->
å™sf‹m
 )

4640 
	`s¶_å™sf‹m_‰ì
–
s¶
->
å™sf‹m
 );

4641 
	`pﬁ¨s¶_‰ì
–
s¶
->
å™sf‹m
 );

4644 if–
s¶
->
h™dshake
 )

4646 
	`s¶_h™dshake_‰ì
–
s¶
->
h™dshake
 );

4647 
	`s¶_å™sf‹m_‰ì
–
s¶
->
å™sf‹m_√gŸüã
 );

4648 
	`s¶_£ssi⁄_‰ì
–
s¶
->
£ssi⁄_√gŸüã
 );

4650 
	`pﬁ¨s¶_‰ì
–
s¶
->
h™dshake
 );

4651 
	`pﬁ¨s¶_‰ì
–
s¶
->
å™sf‹m_√gŸüã
 );

4652 
	`pﬁ¨s¶_‰ì
–
s¶
->
£ssi⁄_√gŸüã
 );

4655 if–
s¶
->
£ssi⁄
 )

4657 
	`s¶_£ssi⁄_‰ì
–
s¶
->
£ssi⁄
 );

4658 
	`pﬁ¨s¶_‰ì
–
s¶
->
£ssi⁄
 );

4661 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

4662 if–
s¶
->
tickë_keys
 )

4664 
	`s¶_tickë_keys_‰ì
–
s¶
->
tickë_keys
 );

4665 
	`pﬁ¨s¶_‰ì
–
s¶
->
tickë_keys
 );

4669 #i‡
	`deföed
(
POLARSSL_SSL_SERVER_NAME_INDICATION
)

4670 if–
s¶
->
ho°«me
 !
NULL
 )

4672 
	`pﬁ¨s¶_zîoize
–
s¶
->
ho°«me
, s¶->
ho°«me_Àn
 );

4673 
	`pﬁ¨s¶_‰ì
–
s¶
->
ho°«me
 );

4674 
s¶
->
ho°«me_Àn
 = 0;

4678 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

4679 if–
s¶
->
psk
 !
NULL
 )

4681 
	`pﬁ¨s¶_zîoize
–
s¶
->
psk
, s¶->
psk_Àn
 );

4682 
	`pﬁ¨s¶_zîoize
–
s¶
->
psk_idítôy
, s¶->
psk_idítôy_Àn
 );

4683 
	`pﬁ¨s¶_‰ì
–
s¶
->
psk
 );

4684 
	`pﬁ¨s¶_‰ì
–
s¶
->
psk_idítôy
 );

4685 
s¶
->
psk_Àn
 = 0;

4686 
s¶
->
psk_idítôy_Àn
 = 0;

4690 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

4691 
	`s¶_key_˚π_‰ì
–
s¶
->
key_˚π
 );

4694 #i‡
	`deföed
(
POLARSSL_SSL_HW_RECORD_ACCEL
)

4695 if–
s¶_hw_ªc‹d_föish
 !
NULL
 )

4697 
	`SSL_DEBUG_MSG
( 2, ( "going for ssl_hw_record_finish()" ) );

4698 
	`s¶_hw_ªc‹d_föish
–
s¶
 );

4702 
	`SSL_DEBUG_MSG
( 2, ( "<= free" ) );

4705 
	`pﬁ¨s¶_zîoize
–
s¶
, –
s¶_c⁄ãxt
 ) );

4706 
	}
}

4708 #i‡
deföed
(
POLARSSL_PK_C
)

4712 
	$s¶_sig_‰om_pk
–
pk_c⁄ãxt
 *
pk
 )

4714 #i‡
	`deföed
(
POLARSSL_RSA_C
)

4715 if–
	`pk_ˇn_do
–
pk
, 
POLARSSL_PK_RSA
 ) )

4716 –
SSL_SIG_RSA
 );

4718 #i‡
	`deföed
(
POLARSSL_ECDSA_C
)

4719 if–
	`pk_ˇn_do
–
pk
, 
POLARSSL_PK_ECDSA
 ) )

4720 –
SSL_SIG_ECDSA
 );

4722 –
SSL_SIG_ANON
 );

4723 
	}
}

4725 
pk_ty≥_t
 
	$s¶_pk_Æg_‰om_sig
–
sig
 )

4727  
sig
 )

4729 #i‡
	`deföed
(
POLARSSL_RSA_C
)

4730 
SSL_SIG_RSA
:

4731 –
POLARSSL_PK_RSA
 );

4733 #i‡
	`deföed
(
POLARSSL_ECDSA_C
)

4734 
SSL_SIG_ECDSA
:

4735 –
POLARSSL_PK_ECDSA
 );

4738 –
POLARSSL_PK_NONE
 );

4740 
	}
}

4746 
md_ty≥_t
 
	$s¶_md_Æg_‰om_hash
–
hash
 )

4748  
hash
 )

4750 #i‡
	`deföed
(
POLARSSL_MD5_C
)

4751 
SSL_HASH_MD5
:

4752 –
POLARSSL_MD_MD5
 );

4754 #i‡
	`deföed
(
POLARSSL_SHA1_C
)

4755 
SSL_HASH_SHA1
:

4756 –
POLARSSL_MD_SHA1
 );

4758 #i‡
	`deföed
(
POLARSSL_SHA256_C
)

4759 
SSL_HASH_SHA224
:

4760 –
POLARSSL_MD_SHA224
 );

4761 
SSL_HASH_SHA256
:

4762 –
POLARSSL_MD_SHA256
 );

4764 #i‡
	`deföed
(
POLARSSL_SHA512_C
)

4765 
SSL_HASH_SHA384
:

4766 –
POLARSSL_MD_SHA384
 );

4767 
SSL_HASH_SHA512
:

4768 –
POLARSSL_MD_SHA512
 );

4771 –
POLARSSL_MD_NONE
 );

4773 
	}
}

4775 #i‡
deföed
(
POLARSSL_SSL_SET_CURVES
)

4780 
	$s¶_curve_is_ac˚±abÀ
–c⁄° 
s¶_c⁄ãxt
 *
s¶
, 
e˝_group_id
 
gΩ_id
 )

4782 c⁄° 
e˝_group_id
 *
gid
;

4784  
gid
 = 
s¶
->
curve_li°
; *gid !
POLARSSL_ECP_DP_NONE
; gid++ )

4785 if–*
gid
 =
gΩ_id
 )

4789 
	}
}

4792 #i‡
deföed
(
POLARSSL_X509_CRT_PARSE_C
)

4793 
	$s¶_check_˚π_ußge
–c⁄° 
x509_¸t
 *
˚π
,

4794 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe
,

4795 
˚π_ídpoöt
 )

4797 #i‡
	`deföed
(
POLARSSL_X509_CHECK_KEY_USAGE
)

4798 
ußge
 = 0;

4800 #i‡
	`deföed
(
POLARSSL_X509_CHECK_EXTENDED_KEY_USAGE
)

4801 c⁄° *
ext_oid
;

4802 
size_t
 
ext_Àn
;

4805 #i‡!
	`deföed
(
POLARSSL_X509_CHECK_KEY_USAGE
) && \

4806 !
	`deföed
(
POLARSSL_X509_CHECK_EXTENDED_KEY_USAGE
)

4807 ((Ë
˚π
);

4808 ((Ë
˚π_ídpoöt
);

4811 #i‡
	`deföed
(
POLARSSL_X509_CHECK_KEY_USAGE
)

4812 if–
˚π_ídpoöt
 =
SSL_IS_SERVER
 )

4815  
cùhîsuôe
->
key_exch™ge
 )

4817 
POLARSSL_KEY_EXCHANGE_RSA
:

4818 
POLARSSL_KEY_EXCHANGE_RSA_PSK
:

4819 
ußge
 = 
KU_KEY_ENCIPHERMENT
;

4822 
POLARSSL_KEY_EXCHANGE_DHE_RSA
:

4823 
POLARSSL_KEY_EXCHANGE_ECDHE_RSA
:

4824 
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA
:

4825 
ußge
 = 
KU_DIGITAL_SIGNATURE
;

4828 
POLARSSL_KEY_EXCHANGE_ECDH_RSA
:

4829 
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA
:

4830 
ußge
 = 
KU_KEY_AGREEMENT
;

4834 
POLARSSL_KEY_EXCHANGE_NONE
:

4835 
POLARSSL_KEY_EXCHANGE_PSK
:

4836 
POLARSSL_KEY_EXCHANGE_DHE_PSK
:

4837 
POLARSSL_KEY_EXCHANGE_ECDHE_PSK
:

4838 
ußge
 = 0;

4844 
ußge
 = 
KU_DIGITAL_SIGNATURE
;

4847 if–
	`x509_¸t_check_key_ußge
–
˚π
, 
ußge
 ) != 0 )

4850 ((Ë
cùhîsuôe
);

4853 #i‡
	`deföed
(
POLARSSL_X509_CHECK_EXTENDED_KEY_USAGE
)

4854 if–
˚π_ídpoöt
 =
SSL_IS_SERVER
 )

4856 
ext_oid
 = 
OID_SERVER_AUTH
;

4857 
ext_Àn
 = 
	`OID_SIZE
–
OID_SERVER_AUTH
 );

4861 
ext_oid
 = 
OID_CLIENT_AUTH
;

4862 
ext_Àn
 = 
	`OID_SIZE
–
OID_CLIENT_AUTH
 );

4865 if–
	`x509_¸t_check_exãnded_key_ußge
–
˚π
, 
ext_oid
, 
ext_Àn
 ) != 0 )

4870 
	}
}

	@polarssl/library/threading.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_THREADING_C
)

34 
	~"pﬁ¨s¶/thªadög.h
"

36 #i‡
deföed
(
POLARSSL_THREADING_PTHREAD
)

37 
	$thªadög_muãx_öô_±hªad
–
thªadög_muãx_t
 *
muãx
 )

39 if–
muãx
 =
NULL
 )

40 –
POLARSSL_ERR_THREADING_BAD_INPUT_DATA
 );

42 if–
	`±hªad_muãx_öô
–
muãx
, 
NULL
 ) != 0 )

43 –
POLARSSL_ERR_THREADING_MUTEX_ERROR
 );

46 
	}
}

48 
	$thªadög_muãx_‰ì_±hªad
–
thªadög_muãx_t
 *
muãx
 )

50 if–
muãx
 =
NULL
 )

51 –
POLARSSL_ERR_THREADING_BAD_INPUT_DATA
 );

53 if–
	`±hªad_muãx_de°roy
–
muãx
 ) != 0 )

54 –
POLARSSL_ERR_THREADING_MUTEX_ERROR
 );

57 
	}
}

59 
	$thªadög_muãx_lock_±hªad
–
thªadög_muãx_t
 *
muãx
 )

61 if–
muãx
 =
NULL
 )

62 –
POLARSSL_ERR_THREADING_BAD_INPUT_DATA
 );

64 if–
	`±hªad_muãx_lock
–
muãx
 ) != 0 )

65 –
POLARSSL_ERR_THREADING_MUTEX_ERROR
 );

68 
	}
}

70 
	$thªadög_muãx_u∆ock_±hªad
–
thªadög_muãx_t
 *
muãx
 )

72 if–
muãx
 =
NULL
 )

73 –
POLARSSL_ERR_THREADING_BAD_INPUT_DATA
 );

75 if–
	`±hªad_muãx_u∆ock
–
muãx
 ) != 0 )

76 –
POLARSSL_ERR_THREADING_MUTEX_ERROR
 );

79 
	}
}

81 (*
pﬁ¨s¶_muãx_öô
)–
thªadög_muãx_t
 * ) = 
thªadög_muãx_öô_±hªad
;

82 (*
pﬁ¨s¶_muãx_‰ì
)–
thªadög_muãx_t
 * ) = 
thªadög_muãx_‰ì_±hªad
;

83 (*
pﬁ¨s¶_muãx_lock
)–
thªadög_muãx_t
 * ) = 
thªadög_muãx_lock_±hªad
;

84 (*
pﬁ¨s¶_muãx_u∆ock
)–
thªadög_muãx_t
 * ) = 
thªadög_muãx_u∆ock_±hªad
;

87 #i‡
	`deföed
(
POLARSSL_THREADING_ALT
)

88 
	$thªadög_muãx_Áû
–
thªadög_muãx_t
 *
muãx
 )

90 ((Ë
muãx
 );

91 –
POLARSSL_ERR_THREADING_BAD_INPUT_DATA
 );

92 
	}
}

94 (*
pﬁ¨s¶_muãx_öô
)–
thªadög_muãx_t
 * ) = 
thªadög_muãx_Áû
;

95 (*
pﬁ¨s¶_muãx_‰ì
)–
thªadög_muãx_t
 * ) = 
thªadög_muãx_Áû
;

96 (*
pﬁ¨s¶_muãx_lock
)–
thªadög_muãx_t
 * ) = 
thªadög_muãx_Áû
;

97 (*
pﬁ¨s¶_muãx_u∆ock
)–
thªadög_muãx_t
 * ) = 
thªadög_muãx_Áû
;

99 
	`thªadög_£t_Æt
–(*
muãx_öô
)–
thªadög_muãx_t
 * ),

100 (*
muãx_‰ì
)–
thªadög_muãx_t
 * ),

101 (*
muãx_lock
)–
thªadög_muãx_t
 * ),

102 (*
muãx_u∆ock
)–
thªadög_muãx_t
 * ) )

104 
pﬁ¨s¶_muãx_öô
 = 
muãx_öô
;

105 
pﬁ¨s¶_muãx_‰ì
 = 
muãx_‰ì
;

106 
pﬁ¨s¶_muãx_lock
 = 
muãx_lock
;

107 
pﬁ¨s¶_muãx_u∆ock
 = 
muãx_u∆ock
;

110 
	}
}

	@polarssl/library/timing.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_SELF_TEST
Ë&& deföed(
POLARSSL_PLATFORM_C
)

33 
	~"pﬁ¨s¶/∂©f‹m.h
"

35 
	~<°dio.h
>

36 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

39 #i‡
deföed
(
POLARSSL_TIMING_C
Ë&& !deföed(
POLARSSL_TIMING_ALT
)

41 
	~"pﬁ¨s¶/timög.h
"

43 #i‡
deföed
(
_WIN32
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

45 
	~<wödows.h
>

46 
	~<wöba£.h
>

48 
	s_hr_time


50 
LARGE_INTEGER
 
	m°¨t
;

55 
	~<uni°d.h
>

56 
	~<sys/ty≥s.h
>

57 
	~<sys/time.h
>

58 
	~<sig«l.h
>

59 
	~<time.h
>

61 
	s_hr_time


63 
timevÆ
 
	m°¨t
;

68 #i‡!
deföed
(
POLARSSL_HAVE_HARDCLOCK
Ë&& deföed(
POLARSSL_HAVE_ASM
) && \

69 –
deföed
(
_MSC_VER
Ë&& deföed(
_M_IX86
ËË|| 
	$deföed
(
__WATCOMC__
)

71 
	#POLARSSL_HAVE_HARDCLOCK


	)

73 
	$h¨d˛ock
( )

75 
tsc
;

76 
__asm
 
rdtsc


77 
__asm
 
mov
 [
tsc
], 
óx


78 –
tsc
 );

79 
	}
}

81 –
	g_MSC_VER
 && 
	g_M_IX86
 ) || 
	g__WATCOMC__
 */

83 #i‡!
deföed
(
POLARSSL_HAVE_HARDCLOCK
Ë&& deföed(
POLARSSL_HAVE_ASM
) && \

84 
deföed
(
__GNUC__
Ë&& 
	$deföed
(
__i386__
)

86 
	#POLARSSL_HAVE_HARDCLOCK


	)

88 
	$h¨d˛ock
( )

90 
lo
, 
hi
;

91 
asm
 vﬁ©ûe–"rdtsc" : "˜" (
lo
), "=d" (
hi
) );

92 –
lo
 );

93 
	}
}

95 
	g__GNUC__
 && 
	g__i386__
 */

97 #i‡!
deföed
(
POLARSSL_HAVE_HARDCLOCK
Ë&& deföed(
POLARSSL_HAVE_ASM
) && \

98 
deföed
(
__GNUC__
Ë&& ( deföed(
__amd64__
Ë|| 
	$deföed
(
__x86_64__
) )

100 
	#POLARSSL_HAVE_HARDCLOCK


	)

102 
	$h¨d˛ock
( )

104 
lo
, 
hi
;

105 
asm
 vﬁ©ûe–"rdtsc" : "˜" (
lo
), "=d" (
hi
) );

106 –
lo
 | ( 
hi
 << 32 ) );

107 
	}
}

109 
	g__GNUC__
 && ( 
	g__amd64__
 || 
	g__x86_64__
 ) */

111 #i‡!
deföed
(
POLARSSL_HAVE_HARDCLOCK
Ë&& deföed(
POLARSSL_HAVE_ASM
) && \

112 
deföed
(
__GNUC__
Ë&& ( deföed(
__powîpc__
Ë|| 
	$deföed
(
__µc__
) )

114 
	#POLARSSL_HAVE_HARDCLOCK


	)

116 
	$h¨d˛ock
( )

118 
tbl
, 
tbu0
, 
tbu1
;

122 
asm
 vﬁ©ûe–"m·bu %0" : "Ù" (
tbu0
) );

123 
asm
 vﬁ©ûe–"m·b %0" : "Ù" (
tbl
 ) );

124 
asm
 vﬁ©ûe–"m·bu %0" : "Ù" (
tbu1
) );

126  
tbu0
 !
tbu1
 );

128 –
tbl
 );

129 
	}
}

131 
	g__GNUC__
 && ( 
	g__powîpc__
 || 
	g__µc__
 ) */

133 #i‡!
deföed
(
POLARSSL_HAVE_HARDCLOCK
Ë&& deföed(
POLARSSL_HAVE_ASM
) && \

134 
deföed
(
__GNUC__
Ë&& 
	$deföed
(
__•¨c64__
)

136 #i‡
	`deföed
(
__O≥nBSD__
)

137 #w¨nög 
O≥nBSD
 
d€s
 
nŸ
 
Ælow
 
ac˚ss
 
to
 
tick
 
usög
 
so·w¨e
 
vîsi⁄
 
ö°ód


139 
	#POLARSSL_HAVE_HARDCLOCK


	)

141 
	$h¨d˛ock
( )

143 
tick
;

144 
asm
 vﬁ©ûe–"rd¥ %%tick, %0;" : "=&r" (
tick
) );

145 –
tick
 );

146 
	}
}

149 
	g__GNUC__
 && 
	g__•¨c64__
 */

151 #i‡!
deföed
(
POLARSSL_HAVE_HARDCLOCK
Ë&& deföed(
POLARSSL_HAVE_ASM
) && \

152 
deföed
(
__GNUC__
Ë&& deföed(
__•¨c__
Ë&& !
	$deföed
(
__•¨c64__
)

154 
	#POLARSSL_HAVE_HARDCLOCK


	)

156 
	$h¨d˛ock
( )

158 
tick
;

159 
asm
 volatile( ".byte 0x83, 0x41, 0x00, 0x00" );

160 
asm
 vﬁ©ûe–"mov %%g1, %0" : "Ù" (
tick
) );

161 –
tick
 );

162 
	}
}

164 
	g__GNUC__
 && 
	g__•¨c__
 && !
	g__•¨c64__
 */

166 #i‡!
deföed
(
POLARSSL_HAVE_HARDCLOCK
Ë&& deföed(
POLARSSL_HAVE_ASM
) && \

167 
deföed
(
__GNUC__
Ë&& 
	$deföed
(
__Æpha__
)

169 
	#POLARSSL_HAVE_HARDCLOCK


	)

171 
	$h¨d˛ock
( )

173 
cc
;

174 
asm
 vﬁ©ûe–"Ωc¯%0" : "Ù" (
cc
) );

175 –
cc
 & 0xFFFFFFFF );

176 
	}
}

178 
	g__GNUC__
 && 
	g__Æpha__
 */

180 #i‡!
deföed
(
POLARSSL_HAVE_HARDCLOCK
Ë&& deföed(
POLARSSL_HAVE_ASM
) && \

181 
deföed
(
__GNUC__
Ë&& 
	$deföed
(
__ü64__
)

183 
	#POLARSSL_HAVE_HARDCLOCK


	)

185 
	$h¨d˛ock
( )

187 
ôc
;

188 
asm
 vﬁ©ûe–"mov %0 =ár.ôc" : "Ù" (
ôc
) );

189 –
ôc
 );

190 
	}
}

192 
	g__GNUC__
 && 
	g__ü64__
 */

194 #i‡!
deföed
(
POLARSSL_HAVE_HARDCLOCK
Ë&& deföed(
_MSC_VER
) && \

195 !
deföed
(
EFIX64
Ë&& !
	$deföed
(
EFI32
)

197 
	#POLARSSL_HAVE_HARDCLOCK


	)

199 
	$h¨d˛ock
( )

201 
LARGE_INTEGER
 
off£t
;

203 
	`QuîyPîf‹m™˚Cou¡î
–&
off£t
 );

205 –()–
off£t
.
QuadP¨t
 ) );

206 
	}
}

209 #i‡!
deföed
(
POLARSSL_HAVE_HARDCLOCK
)

211 
	#POLARSSL_HAVE_HARDCLOCK


	)

213 
	gh¨d˛ock_öô
 = 0;

214 
timevÆ
 
	gtv_öô
;

216 
	$h¨d˛ock
( )

218 
timevÆ
 
tv_cur
;

220 if–
h¨d˛ock_öô
 == 0 )

222 
	`gëtimeofday
–&
tv_öô
, 
NULL
 );

223 
h¨d˛ock_öô
 = 1;

226 
	`gëtimeofday
–&
tv_cur
, 
NULL
 );

227 ––
tv_cur
.
tv_£c
 - 
tv_öô
.tv_sec ) * 1000000

228 + ( 
tv_cur
.
tv_u£c
 - 
tv_öô
.tv_usec ) );

229 
	}
}

232 vﬁ©ûê
	gÆ¨med
 = 0;

234 #i‡
deföed
(
_WIN32
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

236 
	$gë_timî
–
hr_time
 *
vÆ
, 
ª£t
 )

238 
dñè
;

239 
LARGE_INTEGER
 
off£t
, 
h‰eq
;

240 
_hr_time
 *
t
 = (_hr_timê*Ë
vÆ
;

242 
	`QuîyPîf‹m™˚Cou¡î
–&
off£t
 );

243 
	`QuîyPîf‹m™˚Fªquícy
–&
h‰eq
 );

245 
dñè
 = ()( ( 1000 *

246 –
off£t
.
QuadP¨t
 - 
t
->
°¨t
.QuadPart ) ) /

247 
h‰eq
.
QuadP¨t
 );

249 if–
ª£t
 )

250 
	`QuîyPîf‹m™˚Cou¡î
–&
t
->
°¨t
 );

252 –
dñè
 );

253 
	}
}

255 
DWORD
 
WINAPI
 
	$TimîProc
–
LPVOID
 
uEœp£
 )

257 
	`SÀï
–(
DWORD
Ë
uEœp£
 );

258 
Æ¨med
 = 1;

259 –
TRUE
 );

260 
	}
}

262 
	$£t_Æ¨m
–
£c⁄ds
 )

264 
DWORD
 
ThªadId
;

266 
Æ¨med
 = 0;

267 
	`Clo£H™dÀ
–
	`Cª©eThªad
–
NULL
, 0, 
TimîProc
,

268 (
LPVOID
Ë–
£c⁄ds
 * 1000 ), 0, &
ThªadId
 ) );

269 
	}
}

271 
	$m_¶ìp
–
mûli£c⁄ds
 )

273 
	`SÀï
–
mûli£c⁄ds
 );

274 
	}
}

278 
	$gë_timî
–
hr_time
 *
vÆ
, 
ª£t
 )

280 
dñè
;

281 
timevÆ
 
off£t
;

282 
_hr_time
 *
t
 = (_hr_timê*Ë
vÆ
;

284 
	`gëtimeofday
–&
off£t
, 
NULL
 );

286 
dñè
 = ( 
off£t
.
tv_£c
 - 
t
->
°¨t
.tv_sec ) * 1000

287 + ( 
off£t
.
tv_u£c
 - 
t
->
°¨t
.tv_usec ) / 1000;

289 if–
ª£t
 )

291 
t
->
°¨t
.
tv_£c
 = 
off£t
.tv_sec;

292 
t
->
°¨t
.
tv_u£c
 = 
off£t
.tv_usec;

295 –
dñè
 );

296 
	}
}

298 #i‡
deföed
(
INTEGRITY
)

299 
	$m_¶ìp
–
mûli£c⁄ds
 )

301 
	`u¶ìp
–
mûli£c⁄ds
 * 1000 );

302 
	}
}

306 
	$sigh™dÀr
–
signum
 )

308 
Æ¨med
 = 1;

309 
	`sig«l
–
signum
, 
sigh™dÀr
 );

310 
	}
}

312 
	$£t_Æ¨m
–
£c⁄ds
 )

314 
Æ¨med
 = 0;

315 
	`sig«l
–
SIGALRM
, 
sigh™dÀr
 );

316 
	`Æ¨m
–
£c⁄ds
 );

317 
	}
}

319 
	$m_¶ìp
–
mûli£c⁄ds
 )

321 
timevÆ
 
tv
;

323 
tv
.
tv_£c
 = 
mûli£c⁄ds
 / 1000;

324 
tv
.
tv_u£c
 = ( 
mûli£c⁄ds
 % 1000 ) * 1000;

326 
	`£À˘
–0, 
NULL
, NULL, NULL, &
tv
 );

327 
	}
}

332 #i‡
deföed
(
POLARSSL_SELF_TEST
)

335 #i‡
deföed
(
POLARSSL_NET_C
)

336 
	~"pﬁ¨s¶/√t.h
"

343 
	$busy_m¶ìp
–
m£c
 )

345 
hr_time
 
húes
;

346 
i
 = 0;

347 vﬁ©ûê
j
;

349 (Ë
	`gë_timî
–&
húes
, 1 );

351  
	`gë_timî
–&
húes
, 0 ) < 
m£c
 )

352 
i
++;

354 
j
 = 
i
;

355 (Ë
j
;

356 
	}
}

364 
	$timög_£lf_ã°
–
vîbo£
 )

366 
cy˛es
, 
øtio
;

367 
mûli£cs
, 
£cs
;

368 
h¨dÁû
;

369 
hr_time
 
húes
;

371 if–
vîbo£
 != 0 )

372 
	`pﬁ¨s¶_¥ötf
( " TIMINGÅestsÇote: willÅake someÅime!\n" );

374 if–
vîbo£
 != 0 )

375 
	`pﬁ¨s¶_¥ötf
( " TIMINGÅest #1 (m_sleep / get_timer): " );

377  
£cs
 = 1; secs <= 3; secs++ )

379 (Ë
	`gë_timî
–&
húes
, 1 );

381 
	`m_¶ìp
–500 * 
£cs
 );

383 
mûli£cs
 = 
	`gë_timî
–&
húes
, 0 );

385 if–
mûli£cs
 < 450 * 
£cs
 || millisecs > 550 * secs )

387 if–
vîbo£
 != 0 )

388 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

394 if–
vîbo£
 != 0 )

395 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

397 if–
vîbo£
 != 0 )

398 
	`pﬁ¨s¶_¥ötf
( " TIMINGÅest #2 (set_alarm / get_timer): " );

400  
£cs
 = 1; secs <= 3; secs++ )

402 (Ë
	`gë_timî
–&
húes
, 1 );

404 
	`£t_Æ¨m
–
£cs
 );

405  !
Æ¨med
 )

408 
mûli£cs
 = 
	`gë_timî
–&
húes
, 0 );

410 if–
mûli£cs
 < 900 * 
£cs
 || millisecs > 1100 * secs )

412 if–
vîbo£
 != 0 )

413 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

419 if–
vîbo£
 != 0 )

420 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

422 if–
vîbo£
 != 0 )

423 
	`pﬁ¨s¶_¥ötf
( " TIMINGÅest #3 (hardclock / get_timer): " );

430 
h¨dÁû
 = 0;

432 
h¨d_ã°
:

433 if–
h¨dÁû
 > 1 )

435 if–
vîbo£
 != 0 )

436 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

442 
mûli£cs
 = 1;

443 
cy˛es
 = 
	`h¨d˛ock
();

444 
	`busy_m¶ìp
–
mûli£cs
 );

445 
cy˛es
 = 
	`h¨d˛ock
() - cycles;

446 
øtio
 = 
cy˛es
 / 
mûli£cs
;

449  
mûli£cs
 = 2; millisecs <= 4; millisecs++ )

451 
cy˛es
 = 
	`h¨d˛ock
();

452 
	`busy_m¶ìp
–
mûli£cs
 );

453 
cy˛es
 = 
	`h¨d˛ock
() - cycles;

456 if–
cy˛es
 / 
mûli£cs
 < 
øtio
 -Ñatio / 5 ||

457 
cy˛es
 / 
mûli£cs
 > 
øtio
 +Ñatio / 5 )

459 
h¨dÁû
++;

460 
h¨d_ã°
;

464 if–
vîbo£
 != 0 )

465 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

467 #i‡
	`deföed
(
POLARSSL_NET_C
)

468 if–
vîbo£
 != 0 )

469 
	`pﬁ¨s¶_¥ötf
( " TIMINGÅest #4 (net_usleep/ get_timer): " );

471  
£cs
 = 1; secs <= 3; secs++ )

473 (Ë
	`gë_timî
–&
húes
, 1 );

475 
	`√t_u¶ìp
–500000 * 
£cs
 );

477 
mûli£cs
 = 
	`gë_timî
–&
húes
, 0 );

479 if–
mûli£cs
 < 450 * 
£cs
 || millisecs > 550 * secs )

481 if–
vîbo£
 != 0 )

482 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

488 if–
vîbo£
 != 0 )

489 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

492 if–
vîbo£
 != 0 )

493 
	`pﬁ¨s¶_¥ötf
( "\n" );

496 
	}
}

	@polarssl/library/version.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_VERSION_C
)

34 
	~"pﬁ¨s¶/vîsi⁄.h
"

35 
	~<°rög.h
>

37 c⁄° 
	gvîsi⁄
[] = 
POLARSSL_VERSION_STRING
;

39 
	$vîsi⁄_gë_numbî
()

41 –
POLARSSL_VERSION_NUMBER
 );

42 
	}
}

44 
	$vîsi⁄_gë_°rög
–*
°rög
 )

46 
	`mem˝y
–
°rög
, 
POLARSSL_VERSION_STRING
,

47 –
POLARSSL_VERSION_STRING
 ) );

48 
	}
}

50 
	$vîsi⁄_gë_°rög_fuŒ
–*
°rög
 )

52 
	`mem˝y
–
°rög
, 
POLARSSL_VERSION_STRING_FULL
,

53 –
POLARSSL_VERSION_STRING_FULL
 ) );

54 
	}
}

	@polarssl/library/version_features.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_VERSION_C
)

34 
	~"pﬁ¨s¶/vîsi⁄.h
"

36 
	~<°rög.h
>

38 #i‡
deföed
(
_MSC_VER
Ë&& !deföed 
°rˇ£cmp
 && !deföed(
EFIX64
) && \

39 !
	$deföed
(
EFI32
)

40 
	#°rˇ£cmp
 
_°ricmp


	)

43 c⁄° *
„©uªs
[] = {

44 #i‡
	`deföed
(
POLARSSL_VERSION_FEATURES
)

45 #i‡
	`deföed
(
POLARSSL_HAVE_INT8
)

48 #i‡
	`deföed
(
POLARSSL_HAVE_INT16
)

51 #i‡
	`deföed
(
POLARSSL_HAVE_LONGLONG
)

54 #i‡
	`deföed
(
POLARSSL_HAVE_ASM
)

57 #i‡
	`deföed
(
POLARSSL_HAVE_SSE2
)

60 #i‡
	`deföed
(
POLARSSL_HAVE_TIME
)

63 #i‡
	`deföed
(
POLARSSL_HAVE_IPV6
)

66 #i‡
	`deföed
(
POLARSSL_PLATFORM_MEMORY
)

69 #i‡
	`deföed
(
POLARSSL_PLATFORM_NO_STD_FUNCTIONS
)

72 #i‡
	`deföed
(
POLARSSL_PLATFORM_PRINTF_ALT
)

75 #i‡
	`deföed
(
POLARSSL_PLATFORM_FPRINTF_ALT
)

78 #i‡
	`deföed
(
POLARSSL_TIMING_ALT
)

81 #i‡
	`deföed
(
POLARSSL_AES_ALT
)

84 #i‡
	`deföed
(
POLARSSL_ARC4_ALT
)

87 #i‡
	`deföed
(
POLARSSL_BLOWFISH_ALT
)

90 #i‡
	`deföed
(
POLARSSL_CAMELLIA_ALT
)

93 #i‡
	`deföed
(
POLARSSL_DES_ALT
)

96 #i‡
	`deföed
(
POLARSSL_XTEA_ALT
)

99 #i‡
	`deföed
(
POLARSSL_MD2_ALT
)

102 #i‡
	`deföed
(
POLARSSL_MD4_ALT
)

105 #i‡
	`deföed
(
POLARSSL_MD5_ALT
)

108 #i‡
	`deföed
(
POLARSSL_RIPEMD160_ALT
)

111 #i‡
	`deföed
(
POLARSSL_SHA1_ALT
)

114 #i‡
	`deföed
(
POLARSSL_SHA256_ALT
)

117 #i‡
	`deföed
(
POLARSSL_SHA512_ALT
)

120 #i‡
	`deföed
(
POLARSSL_AES_ROM_TABLES
)

123 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
)

126 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CFB
)

129 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CTR
)

132 #i‡
	`deföed
(
POLARSSL_CIPHER_NULL_CIPHER
)

135 #i‡
	`deföed
(
POLARSSL_CIPHER_PADDING_PKCS7
)

138 #i‡
	`deföed
(
POLARSSL_CIPHER_PADDING_ONE_AND_ZEROS
)

141 #i‡
	`deföed
(
POLARSSL_CIPHER_PADDING_ZEROS_AND_LEN
)

144 #i‡
	`deföed
(
POLARSSL_CIPHER_PADDING_ZEROS
)

147 #i‡
	`deföed
(
POLARSSL_ENABLE_WEAK_CIPHERSUITES
)

150 #i‡
	`deföed
(
POLARSSL_REMOVE_ARC4_CIPHERSUITES
)

153 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP192R1_ENABLED
)

156 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP224R1_ENABLED
)

159 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP256R1_ENABLED
)

162 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP384R1_ENABLED
)

165 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP521R1_ENABLED
)

168 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP192K1_ENABLED
)

171 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP224K1_ENABLED
)

174 #i‡
	`deföed
(
POLARSSL_ECP_DP_SECP256K1_ENABLED
)

177 #i‡
	`deföed
(
POLARSSL_ECP_DP_BP256R1_ENABLED
)

180 #i‡
	`deföed
(
POLARSSL_ECP_DP_BP384R1_ENABLED
)

183 #i‡
	`deföed
(
POLARSSL_ECP_DP_BP512R1_ENABLED
)

186 #i‡
	`deföed
(
POLARSSL_ECP_DP_M221_ENABLED
)

189 #i‡
	`deföed
(
POLARSSL_ECP_DP_M255_ENABLED
)

192 #i‡
	`deföed
(
POLARSSL_ECP_DP_M383_ENABLED
)

195 #i‡
	`deföed
(
POLARSSL_ECP_DP_M511_ENABLED
)

198 #i‡
	`deföed
(
POLARSSL_ECP_NIST_OPTIM
)

201 #i‡
	`deföed
(
POLARSSL_ECDSA_DETERMINISTIC
)

204 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_PSK_ENABLED
)

207 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
)

210 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED
)

213 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED
)

216 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_RSA_ENABLED
)

219 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
)

222 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
)

225 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
)

228 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
)

231 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDH_RSA_ENABLED
)

234 #i‡
	`deföed
(
POLARSSL_PK_PARSE_EC_EXTENDED
)

237 #i‡
	`deföed
(
POLARSSL_ERROR_STRERROR_BC
)

240 #i‡
	`deföed
(
POLARSSL_ERROR_STRERROR_DUMMY
)

243 #i‡
	`deföed
(
POLARSSL_GENPRIME
)

246 #i‡
	`deföed
(
POLARSSL_FS_IO
)

249 #i‡
	`deföed
(
POLARSSL_NO_DEFAULT_ENTROPY_SOURCES
)

252 #i‡
	`deföed
(
POLARSSL_NO_PLATFORM_ENTROPY
)

255 #i‡
	`deföed
(
POLARSSL_ENTROPY_FORCE_SHA256
)

258 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

261 #i‡
	`deföed
(
POLARSSL_MEMORY_BACKTRACE
)

264 #i‡
	`deföed
(
POLARSSL_PKCS1_V15
)

267 #i‡
	`deföed
(
POLARSSL_PKCS1_V21
)

270 #i‡
	`deföed
(
POLARSSL_RSA_NO_CRT
)

273 #i‡
	`deföed
(
POLARSSL_SELF_TEST
)

276 #i‡
	`deföed
(
POLARSSL_SSL_ALERT_MESSAGES
)

279 #i‡
	`deföed
(
POLARSSL_SSL_DEBUG_ALL
)

282 #i‡
	`deföed
(
POLARSSL_SSL_HW_RECORD_ACCEL
)

285 #i‡
	`deföed
(
POLARSSL_SSL_SRV_SUPPORT_SSLV2_CLIENT_HELLO
)

288 #i‡
	`deföed
(
POLARSSL_SSL_SRV_RESPECT_CLIENT_PREFERENCE
)

291 #i‡
	`deföed
(
POLARSSL_SSL_MAX_FRAGMENT_LENGTH
)

294 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_SSL3
)

297 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
)

300 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
)

303 #i‡
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
)

306 #i‡
	`deföed
(
POLARSSL_SSL_ALPN
)

309 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

312 #i‡
	`deföed
(
POLARSSL_SSL_SERVER_NAME_INDICATION
)

315 #i‡
	`deföed
(
POLARSSL_SSL_TRUNCATED_HMAC
)

318 #i‡
	`deföed
(
POLARSSL_SSL_SET_CURVES
)

321 #i‡
	`deföed
(
POLARSSL_THREADING_ALT
)

324 #i‡
	`deföed
(
POLARSSL_THREADING_PTHREAD
)

327 #i‡
	`deföed
(
POLARSSL_VERSION_FEATURES
)

330 #i‡
	`deföed
(
POLARSSL_X509_ALLOW_EXTENSIONS_NON_V3
)

333 #i‡
	`deföed
(
POLARSSL_X509_ALLOW_UNSUPPORTED_CRITICAL_EXTENSION
)

336 #i‡
	`deföed
(
POLARSSL_X509_CHECK_KEY_USAGE
)

339 #i‡
	`deföed
(
POLARSSL_X509_CHECK_EXTENDED_KEY_USAGE
)

342 #i‡
	`deföed
(
POLARSSL_X509_RSASSA_PSS_SUPPORT
)

345 #i‡
	`deföed
(
POLARSSL_ZLIB_SUPPORT
)

348 #i‡
	`deföed
(
POLARSSL_AESNI_C
)

351 #i‡
	`deföed
(
POLARSSL_AES_C
)

354 #i‡
	`deföed
(
POLARSSL_ARC4_C
)

357 #i‡
	`deföed
(
POLARSSL_ASN1_PARSE_C
)

360 #i‡
	`deföed
(
POLARSSL_ASN1_WRITE_C
)

363 #i‡
	`deföed
(
POLARSSL_BASE64_C
)

366 #i‡
	`deföed
(
POLARSSL_BIGNUM_C
)

369 #i‡
	`deföed
(
POLARSSL_BLOWFISH_C
)

372 #i‡
	`deföed
(
POLARSSL_CAMELLIA_C
)

375 #i‡
	`deföed
(
POLARSSL_CCM_C
)

378 #i‡
	`deföed
(
POLARSSL_CERTS_C
)

381 #i‡
	`deföed
(
POLARSSL_CIPHER_C
)

384 #i‡
	`deföed
(
POLARSSL_CTR_DRBG_C
)

387 #i‡
	`deföed
(
POLARSSL_DEBUG_C
)

390 #i‡
	`deföed
(
POLARSSL_DES_C
)

393 #i‡
	`deföed
(
POLARSSL_DHM_C
)

396 #i‡
	`deföed
(
POLARSSL_ECDH_C
)

399 #i‡
	`deföed
(
POLARSSL_ECDSA_C
)

402 #i‡
	`deföed
(
POLARSSL_ECP_C
)

405 #i‡
	`deföed
(
POLARSSL_ENTROPY_C
)

408 #i‡
	`deföed
(
POLARSSL_ERROR_C
)

411 #i‡
	`deföed
(
POLARSSL_GCM_C
)

414 #i‡
	`deföed
(
POLARSSL_HAVEGE_C
)

417 #i‡
	`deföed
(
POLARSSL_HMAC_DRBG_C
)

420 #i‡
	`deföed
(
POLARSSL_MD_C
)

423 #i‡
	`deföed
(
POLARSSL_MD2_C
)

426 #i‡
	`deföed
(
POLARSSL_MD4_C
)

429 #i‡
	`deföed
(
POLARSSL_MD5_C
)

432 #i‡
	`deföed
(
POLARSSL_MEMORY_C
)

435 #i‡
	`deföed
(
POLARSSL_MEMORY_BUFFER_ALLOC_C
)

438 #i‡
	`deföed
(
POLARSSL_NET_C
)

441 #i‡
	`deföed
(
POLARSSL_OID_C
)

444 #i‡
	`deföed
(
POLARSSL_PADLOCK_C
)

447 #i‡
	`deföed
(
POLARSSL_PBKDF2_C
)

450 #i‡
	`deföed
(
POLARSSL_PEM_PARSE_C
)

453 #i‡
	`deföed
(
POLARSSL_PEM_WRITE_C
)

456 #i‡
	`deföed
(
POLARSSL_PK_C
)

459 #i‡
	`deföed
(
POLARSSL_PK_PARSE_C
)

462 #i‡
	`deföed
(
POLARSSL_PK_WRITE_C
)

465 #i‡
	`deföed
(
POLARSSL_PKCS5_C
)

468 #i‡
	`deföed
(
POLARSSL_PKCS11_C
)

471 #i‡
	`deföed
(
POLARSSL_PKCS12_C
)

474 #i‡
	`deföed
(
POLARSSL_PLATFORM_C
)

477 #i‡
	`deföed
(
POLARSSL_RIPEMD160_C
)

480 #i‡
	`deföed
(
POLARSSL_RSA_C
)

483 #i‡
	`deföed
(
POLARSSL_SHA1_C
)

486 #i‡
	`deföed
(
POLARSSL_SHA256_C
)

489 #i‡
	`deföed
(
POLARSSL_SHA512_C
)

492 #i‡
	`deföed
(
POLARSSL_SSL_CACHE_C
)

495 #i‡
	`deföed
(
POLARSSL_SSL_CLI_C
)

498 #i‡
	`deföed
(
POLARSSL_SSL_SRV_C
)

501 #i‡
	`deföed
(
POLARSSL_SSL_TLS_C
)

504 #i‡
	`deföed
(
POLARSSL_THREADING_C
)

507 #i‡
	`deföed
(
POLARSSL_TIMING_C
)

510 #i‡
	`deföed
(
POLARSSL_VERSION_C
)

513 #i‡
	`deföed
(
POLARSSL_X509_USE_C
)

516 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

519 #i‡
	`deföed
(
POLARSSL_X509_CRL_PARSE_C
)

522 #i‡
	`deföed
(
POLARSSL_X509_CSR_PARSE_C
)

525 #i‡
	`deföed
(
POLARSSL_X509_CREATE_C
)

528 #i‡
	`deföed
(
POLARSSL_X509_CRT_WRITE_C
)

531 #i‡
	`deföed
(
POLARSSL_X509_CSR_WRITE_C
)

534 #i‡
	`deföed
(
POLARSSL_XTEA_C
)

538 
NULL


539 
	}
};

541 
	$vîsi⁄_check_„©uª
–c⁄° *
„©uª
 )

543 c⁄° **
idx
 = 
„©uªs
;

545 if–*
idx
 =
NULL
 )

548 if–
„©uª
 =
NULL
 )

551  *
idx
 !
NULL
 )

553 if–!
	`°rˇ£cmp
–*
idx
, 
„©uª
 ) )

555 
idx
++;

558 
	}
}

	@polarssl/library/x509.c

36 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

37 
	~"pﬁ¨s¶/c⁄fig.h
"

39 #ö˛udê
POLARSSL_CONFIG_FILE


42 #i‡
deföed
(
POLARSSL_X509_USE_C
)

44 
	~"pﬁ¨s¶/x509.h
"

45 
	~"pﬁ¨s¶/a¢1.h
"

46 
	~"pﬁ¨s¶/oid.h
"

47 #i‡
deföed
(
POLARSSL_PEM_PARSE_C
)

48 
	~"pﬁ¨s¶/≥m.h
"

51 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

52 
	~"pﬁ¨s¶/∂©f‹m.h
"

54 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

55 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

56 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

59 
	~<°rög.h
>

60 
	~<°dlib.h
>

61 #i‡
deföed
(
_WIN32
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

62 
	~<wödows.h
>

64 
	~<time.h
>

67 #i‡
deföed
(
EFIX64
Ë|| deföed(
EFI32
)

68 
	~<°dio.h
>

71 #i‡
deföed
(
POLARSSL_FS_IO
)

72 
	~<°dio.h
>

73 #i‡!
deföed
(
_WIN32
)

74 
	~<sys/ty≥s.h
>

75 
	~<sys/°©.h
>

76 
	~<dúít.h
>

83 
	$x509_gë_£rül
–**
p
, c⁄° *
íd
,

84 
x509_buf
 *
£rül
 )

86 
ªt
;

88 if––
íd
 - *
p
 ) < 1 )

89 –
POLARSSL_ERR_X509_INVALID_SERIAL
 +

90 
POLARSSL_ERR_ASN1_OUT_OF_DATA
 );

92 if–**
p
 !–
ASN1_CONTEXT_SPECIFIC
 | 
ASN1_PRIMITIVE
 | 2 ) &&

93 **
p
 !
ASN1_INTEGER
 )

94 –
POLARSSL_ERR_X509_INVALID_SERIAL
 +

95 
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 );

97 
£rül
->
èg
 = *(*
p
)++;

99 if––
ªt
 = 
	`a¢1_gë_Àn
–
p
, 
íd
, &
£rül
->
Àn
 ) ) != 0 )

100 –
POLARSSL_ERR_X509_INVALID_SERIAL
 + 
ªt
 );

102 
£rül
->
p
 = *p;

103 *
p
 +
£rül
->
Àn
;

106 
	}
}

114 
	$x509_gë_Æg_nuŒ
–**
p
, c⁄° *
íd
,

115 
x509_buf
 *
Æg
 )

117 
ªt
;

119 if––
ªt
 = 
	`a¢1_gë_Æg_nuŒ
–
p
, 
íd
, 
Æg
 ) ) != 0 )

120 –
POLARSSL_ERR_X509_INVALID_ALG
 + 
ªt
 );

123 
	}
}

128 
	$x509_gë_Æg
–**
p
, c⁄° *
íd
,

129 
x509_buf
 *
Æg
, x509_bu‡*
∑øms
 )

131 
ªt
;

133 if––
ªt
 = 
	`a¢1_gë_Æg
–
p
, 
íd
, 
Æg
, 
∑øms
 ) ) != 0 )

134 –
POLARSSL_ERR_X509_INVALID_ALG
 + 
ªt
 );

137 
	}
}

139 #i‡
deföed
(
POLARSSL_X509_RSASSA_PSS_SUPPORT
)

149 
	$x509_gë_hash_Æg
–c⁄° 
x509_buf
 *
Æg
, 
md_ty≥_t
 *
md_Æg
 )

151 
ªt
;

152 *
p
;

153 c⁄° *
íd
;

154 
x509_buf
 
md_oid
;

155 
size_t
 
Àn
;

158 if–
Æg
->
èg
 !–
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) )

159 –
POLARSSL_ERR_X509_INVALID_ALG
 +

160 
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 );

162 
p
 = (*Ë
Æg
->p;

163 
íd
 = 
p
 + 
Æg
->
Àn
;

165 if–
p
 >
íd
 )

166 –
POLARSSL_ERR_X509_INVALID_ALG
 +

167 
POLARSSL_ERR_ASN1_OUT_OF_DATA
 );

170 
md_oid
.
èg
 = *
p
;

172 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
md_oid
.
Àn
, 
ASN1_OID
 ) ) != 0 )

173 –
POLARSSL_ERR_X509_INVALID_ALG
 + 
ªt
 );

175 
md_oid
.
p
 =Ö;

176 
p
 +
md_oid
.
Àn
;

179 if––
ªt
 = 
	`oid_gë_md_Æg
–&
md_oid
, 
md_Æg
 ) ) != 0 )

180 –
POLARSSL_ERR_X509_INVALID_ALG
 + 
ªt
 );

183 if–
p
 =
íd
 )

186 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
, 
ASN1_NULL
 ) ) != 0 ||Üen != 0 )

187 –
POLARSSL_ERR_X509_INVALID_ALG
 + 
ªt
 );

189 if–
p
 !
íd
 )

190 –
POLARSSL_ERR_X509_INVALID_ALG
 +

191 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

194 
	}
}

208 
	$x509_gë_rßsß_pss_∑øms
–c⁄° 
x509_buf
 *
∑øms
,

209 
md_ty≥_t
 *
md_Æg
, md_ty≥_à*
mgf_md
,

210 *
ß…_Àn
 )

212 
ªt
;

213 *
p
;

214 c⁄° *
íd
, *
íd2
;

215 
size_t
 
Àn
;

216 
x509_buf
 
Æg_id
, 
Æg_∑øms
;

219 *
md_Æg
 = 
POLARSSL_MD_SHA1
;

220 *
mgf_md
 = 
POLARSSL_MD_SHA1
;

221 *
ß…_Àn
 = 20;

224 if–
∑øms
->
èg
 !–
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) )

225 –
POLARSSL_ERR_X509_INVALID_ALG
 +

226 
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 );

228 
p
 = (*Ë
∑øms
->p;

229 
íd
 = 
p
 + 
∑øms
->
Àn
;

231 if–
p
 =
íd
 )

237 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

238 
ASN1_CONTEXT_SPECIFIC
 | 
ASN1_CONSTRUCTED
 | 0 ) ) == 0 )

240 
íd2
 = 
p
 + 
Àn
;

243 if––
ªt
 = 
	`x509_gë_Æg_nuŒ
–&
p
, 
íd2
, &
Æg_id
 ) ) != 0 )

244 –
ªt
 );

246 if––
ªt
 = 
	`oid_gë_md_Æg
–&
Æg_id
, 
md_Æg
 ) ) != 0 )

247 –
POLARSSL_ERR_X509_INVALID_ALG
 + 
ªt
 );

249 if–
p
 !
íd2
 )

250 –
POLARSSL_ERR_X509_INVALID_ALG
 +

251 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

253 if–
ªt
 !
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 )

254 –
POLARSSL_ERR_X509_INVALID_ALG
 + 
ªt
 );

256 if–
p
 =
íd
 )

262 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

263 
ASN1_CONTEXT_SPECIFIC
 | 
ASN1_CONSTRUCTED
 | 1 ) ) == 0 )

265 
íd2
 = 
p
 + 
Àn
;

268 if––
ªt
 = 
	`x509_gë_Æg
–&
p
, 
íd2
, &
Æg_id
, &
Æg_∑øms
 ) ) != 0 )

269 –
ªt
 );

272 if–! 
	`OID_CMP
–
OID_MGF1
, &
Æg_id
 ) )

273 –
POLARSSL_ERR_X509_FEATURE_UNAVAILABLE
 +

274 
POLARSSL_ERR_OID_NOT_FOUND
 );

277 if––
ªt
 = 
	`x509_gë_hash_Æg
–&
Æg_∑øms
, 
mgf_md
 ) ) != 0 )

278 –
ªt
 );

280 if–
p
 !
íd2
 )

281 –
POLARSSL_ERR_X509_INVALID_ALG
 +

282 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

284 if–
ªt
 !
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 )

285 –
POLARSSL_ERR_X509_INVALID_ALG
 + 
ªt
 );

287 if–
p
 =
íd
 )

293 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

294 
ASN1_CONTEXT_SPECIFIC
 | 
ASN1_CONSTRUCTED
 | 2 ) ) == 0 )

296 
íd2
 = 
p
 + 
Àn
;

298 if––
ªt
 = 
	`a¢1_gë_öt
–&
p
, 
íd2
, 
ß…_Àn
 ) ) != 0 )

299 –
POLARSSL_ERR_X509_INVALID_ALG
 + 
ªt
 );

301 if–
p
 !
íd2
 )

302 –
POLARSSL_ERR_X509_INVALID_ALG
 +

303 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

305 if–
ªt
 !
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 )

306 –
POLARSSL_ERR_X509_INVALID_ALG
 + 
ªt
 );

308 if–
p
 =
íd
 )

314 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

315 
ASN1_CONTEXT_SPECIFIC
 | 
ASN1_CONSTRUCTED
 | 3 ) ) == 0 )

317 
åaûî_fõld
;

319 
íd2
 = 
p
 + 
Àn
;

321 if––
ªt
 = 
	`a¢1_gë_öt
–&
p
, 
íd2
, &
åaûî_fõld
 ) ) != 0 )

322 –
POLARSSL_ERR_X509_INVALID_ALG
 + 
ªt
 );

324 if–
p
 !
íd2
 )

325 –
POLARSSL_ERR_X509_INVALID_ALG
 +

326 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

328 if–
åaûî_fõld
 != 1 )

329 –
POLARSSL_ERR_X509_INVALID_ALG
 );

331 if–
ªt
 !
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 )

332 –
POLARSSL_ERR_X509_INVALID_ALG
 + 
ªt
 );

334 if–
p
 !
íd
 )

335 –
POLARSSL_ERR_X509_INVALID_ALG
 +

336 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

339 
	}
}

351 
	$x509_gë_©å_ty≥_vÆue
–**
p
,

352 c⁄° *
íd
,

353 
x509_«me
 *
cur
 )

355 
ªt
;

356 
size_t
 
Àn
;

357 
x509_buf
 *
oid
;

358 
x509_buf
 *
vÆ
;

360 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
Àn
,

361 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

362 –
POLARSSL_ERR_X509_INVALID_NAME
 + 
ªt
 );

364 if––
íd
 - *
p
 ) < 1 )

365 –
POLARSSL_ERR_X509_INVALID_NAME
 +

366 
POLARSSL_ERR_ASN1_OUT_OF_DATA
 );

368 
oid
 = &
cur
->oid;

369 
oid
->
èg
 = **
p
;

371 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
oid
->
Àn
, 
ASN1_OID
 ) ) != 0 )

372 –
POLARSSL_ERR_X509_INVALID_NAME
 + 
ªt
 );

374 
oid
->
p
 = *p;

375 *
p
 +
oid
->
Àn
;

377 if––
íd
 - *
p
 ) < 1 )

378 –
POLARSSL_ERR_X509_INVALID_NAME
 +

379 
POLARSSL_ERR_ASN1_OUT_OF_DATA
 );

381 if–**
p
 !
ASN1_BMP_STRING
 && **∞!
ASN1_UTF8_STRING
 &&

382 **
p
 !
ASN1_T61_STRING
 && **∞!
ASN1_PRINTABLE_STRING
 &&

383 **
p
 !
ASN1_IA5_STRING
 && **∞!
ASN1_UNIVERSAL_STRING
 )

384 –
POLARSSL_ERR_X509_INVALID_NAME
 +

385 
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 );

387 
vÆ
 = &
cur
->val;

388 
vÆ
->
èg
 = *(*
p
)++;

390 if––
ªt
 = 
	`a¢1_gë_Àn
–
p
, 
íd
, &
vÆ
->
Àn
 ) ) != 0 )

391 –
POLARSSL_ERR_X509_INVALID_NAME
 + 
ªt
 );

393 
vÆ
->
p
 = *p;

394 *
p
 +
vÆ
->
Àn
;

396 
cur
->
√xt
 = 
NULL
;

399 
	}
}

413 
	$x509_gë_«me
–**
p
, c⁄° *
íd
,

414 
x509_«me
 *
cur
 )

416 
ªt
;

417 
size_t
 
Àn
;

418 c⁄° *
íd2
;

419 
x509_«me
 *
u£
;

421 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
Àn
,

422 
ASN1_CONSTRUCTED
 | 
ASN1_SET
 ) ) != 0 )

423 –
POLARSSL_ERR_X509_INVALID_NAME
 + 
ªt
 );

425 
íd2
 = 
íd
;

426 
íd
 = *
p
 + 
Àn
;

427 
u£
 = 
cur
;

431 if––
ªt
 = 
	`x509_gë_©å_ty≥_vÆue
–
p
, 
íd
, 
u£
 ) ) != 0 )

432 –
ªt
 );

434 if–*
p
 !
íd
 )

436 
u£
->
√xt
 = (
x509_«me
 *Ë
	`pﬁ¨s¶_mÆloc
(

437 –
x509_«me
 ) );

439 if–
u£
->
√xt
 =
NULL
 )

440 –
POLARSSL_ERR_X509_MALLOC_FAILED
 );

442 
	`mem£t
–
u£
->
√xt
, 0, –
x509_«me
 ) );

444 
u£
 = u£->
√xt
;

447  *
p
 !
íd
 );

452 if–*
p
 =
íd2
 )

455 
cur
->
√xt
 = (
x509_«me
 *Ë
	`pﬁ¨s¶_mÆloc
(

456 –
x509_«me
 ) );

458 if–
cur
->
√xt
 =
NULL
 )

459 –
POLARSSL_ERR_X509_MALLOC_FAILED
 );

461 
	`mem£t
–
cur
->
√xt
, 0, –
x509_«me
 ) );

463 –
	`x509_gë_«me
–
p
, 
íd2
, 
cur
->
√xt
 ) );

464 
	}
}

471 
	$x509_gë_time
–**
p
, c⁄° *
íd
,

472 
x509_time
 *
time
 )

474 
ªt
;

475 
size_t
 
Àn
;

476 
d©e
[64];

477 
èg
;

479 if––
íd
 - *
p
 ) < 1 )

480 –
POLARSSL_ERR_X509_INVALID_DATE
 +

481 
POLARSSL_ERR_ASN1_OUT_OF_DATA
 );

483 
èg
 = **
p
;

485 if–
èg
 =
ASN1_UTC_TIME
 )

487 (*
p
)++;

488 
ªt
 = 
	`a¢1_gë_Àn
–
p
, 
íd
, &
Àn
 );

490 if–
ªt
 != 0 )

491 –
POLARSSL_ERR_X509_INVALID_DATE
 + 
ªt
 );

493 
	`mem£t
–
d©e
, 0, ( date ) );

494 
	`mem˝y
–
d©e
, *
p
, ( 
Àn
 < ( date ) - 1 ) ?

495 
Àn
 : –
d©e
 ) - 1 );

497 if–
	`ssˇnf
–
d©e
, "%2d%2d%2d%2d%2d%2dZ",

498 &
time
->
yór
, &time->
m⁄
, &time->
day
,

499 &
time
->
hour
, &time->
mö
, &time->
£c
 ) < 5 )

500 –
POLARSSL_ERR_X509_INVALID_DATE
 );

502 
time
->
yór
 += 100 * (Åime->year < 50 );

503 
time
->
yór
 += 1900;

505 *
p
 +
Àn
;

509 if–
èg
 =
ASN1_GENERALIZED_TIME
 )

511 (*
p
)++;

512 
ªt
 = 
	`a¢1_gë_Àn
–
p
, 
íd
, &
Àn
 );

514 if–
ªt
 != 0 )

515 –
POLARSSL_ERR_X509_INVALID_DATE
 + 
ªt
 );

517 
	`mem£t
–
d©e
, 0, ( date ) );

518 
	`mem˝y
–
d©e
, *
p
, ( 
Àn
 < ( date ) - 1 ) ?

519 
Àn
 : –
d©e
 ) - 1 );

521 if–
	`ssˇnf
–
d©e
, "%4d%2d%2d%2d%2d%2dZ",

522 &
time
->
yór
, &time->
m⁄
, &time->
day
,

523 &
time
->
hour
, &time->
mö
, &time->
£c
 ) < 5 )

524 –
POLARSSL_ERR_X509_INVALID_DATE
 );

526 *
p
 +
Àn
;

531 –
POLARSSL_ERR_X509_INVALID_DATE
 +

532 
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 );

533 
	}
}

535 
	$x509_gë_sig
–**
p
, c⁄° *
íd
, 
x509_buf
 *
sig
 )

537 
ªt
;

538 
size_t
 
Àn
;

540 if––
íd
 - *
p
 ) < 1 )

541 –
POLARSSL_ERR_X509_INVALID_SIGNATURE
 +

542 
POLARSSL_ERR_ASN1_OUT_OF_DATA
 );

544 
sig
->
èg
 = **
p
;

546 if––
ªt
 = 
	`a¢1_gë_bô°rög_nuŒ
–
p
, 
íd
, &
Àn
 ) ) != 0 )

547 –
POLARSSL_ERR_X509_INVALID_SIGNATURE
 + 
ªt
 );

549 
sig
->
Àn
 =Üen;

550 
sig
->
p
 = *p;

552 *
p
 +
Àn
;

555 
	}
}

560 
	$x509_gë_sig_Æg
–c⁄° 
x509_buf
 *
sig_oid
, c⁄° x509_bu‡*
sig_∑øms
,

561 
md_ty≥_t
 *
md_Æg
, 
pk_ty≥_t
 *
pk_Æg
,

562 **
sig_›ts
 )

564 
ªt
;

566 if–*
sig_›ts
 !
NULL
 )

567 –
POLARSSL_ERR_X509_BAD_INPUT_DATA
 );

569 if––
ªt
 = 
	`oid_gë_sig_Æg
–
sig_oid
, 
md_Æg
, 
pk_Æg
 ) ) != 0 )

570 –
POLARSSL_ERR_X509_UNKNOWN_SIG_ALG
 + 
ªt
 );

572 #i‡
	`deföed
(
POLARSSL_X509_RSASSA_PSS_SUPPORT
)

573 if–*
pk_Æg
 =
POLARSSL_PK_RSASSA_PSS
 )

575 
pk_rßsß_pss_›ti⁄s
 *
pss_›ts
;

577 
pss_›ts
 = 
	`pﬁ¨s¶_mÆloc
––
pk_rßsß_pss_›ti⁄s
 ) );

578 if–
pss_›ts
 =
NULL
 )

579 –
POLARSSL_ERR_X509_MALLOC_FAILED
 );

581 
ªt
 = 
	`x509_gë_rßsß_pss_∑øms
–
sig_∑øms
,

582 
md_Æg
,

583 &
pss_›ts
->
mgf1_hash_id
,

584 &
pss_›ts
->
ex≥˘ed_ß…_Àn
 );

585 if–
ªt
 != 0 )

587 
	`pﬁ¨s¶_‰ì
–
pss_›ts
 );

588 –
ªt
 );

591 *
sig_›ts
 = (*Ë
pss_›ts
;

597 if––
sig_∑øms
->
èg
 !
ASN1_NULL
 && sig_params->tag != 0 ) ||

598 
sig_∑øms
->
Àn
 != 0 )

599 –
POLARSSL_ERR_X509_INVALID_ALG
 );

603 
	}
}

609 
	$x509_gë_ext
–**
p
, c⁄° *
íd
,

610 
x509_buf
 *
ext
, 
èg
 )

612 
ªt
;

613 
size_t
 
Àn
;

615 if–*
p
 =
íd
 )

618 
ext
->
èg
 = **
p
;

620 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
ext
->
Àn
,

621 
ASN1_CONTEXT_SPECIFIC
 | 
ASN1_CONSTRUCTED
 | 
èg
 ) ) != 0 )

622 –
ªt
 );

624 
ext
->
p
 = *p;

625 
íd
 = *
p
 + 
ext
->
Àn
;

635 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
Àn
,

636 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

637 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 + 
ªt
 );

639 if–
íd
 !*
p
 + 
Àn
 )

640 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 +

641 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

644 
	}
}

646 #i‡
deföed
(
POLARSSL_FS_IO
)

650 
	$x509_lﬂd_fûe
–c⁄° *
∑th
, **
buf
, 
size_t
 *
n
 )

652 
FILE
 *
f
;

653 
size
;

655 if––
f
 = 
	`f›í
–
∑th
, "rb" ) ) =
NULL
 )

656 –
POLARSSL_ERR_X509_FILE_IO_ERROR
 );

658 
	`f£ek
–
f
, 0, 
SEEK_END
 );

659 if––
size
 = 
	`·ñl
–
f
 ) ) == -1 )

661 
	`f˛o£
–
f
 );

662 –
POLARSSL_ERR_X509_FILE_IO_ERROR
 );

664 
	`f£ek
–
f
, 0, 
SEEK_SET
 );

666 *
n
 = (
size_t
Ë
size
;

668 if–*
n
 + 1 == 0 ||

669 –*
buf
 = (*Ë
	`pﬁ¨s¶_mÆloc
–*
n
 + 1 ) ) =
NULL
 )

671 
	`f˛o£
–
f
 );

672 –
POLARSSL_ERR_X509_MALLOC_FAILED
 );

675 if–
	`‰ód
–*
buf
, 1, *
n
, 
f
 ) != *n )

677 
	`f˛o£
–
f
 );

678 
	`pﬁ¨s¶_‰ì
–*
buf
 );

679 –
POLARSSL_ERR_X509_FILE_IO_ERROR
 );

682 
	`f˛o£
–
f
 );

684 (*
buf
)[*
n
] = '\0';

687 
	}
}

690 #i‡
deföed
(
_MSC_VER
Ë&& !deföed 
¢¥ötf
 && !deföed(
EFIX64
) && \

691 !
	$deföed
(
EFI32
)

692 
	~<°d¨g.h
>

694 #i‡!
deföed
 
v¢¥ötf


695 
	#v¢¥ötf
 
_v¢¥ötf


	)

705 
	$com∑t_¢¥ötf
–*
°r
, 
size_t
 
size
, c⁄° *
f‹m©
, ... )

707 
va_li°
 
≠
;

708 
ªs
 = -1;

710 
	`va_°¨t
–
≠
, 
f‹m©
 );

712 
ªs
 = 
	`v¢¥ötf
–
°r
, 
size
, 
f‹m©
, 
≠
 );

714 
	`va_íd
–
≠
 );

717 if–
ªs
 < 0 )

718 –(Ë
size
 + 20 );

720 –
ªs
 );

721 
	}
}

723 
	#¢¥ötf
 
com∑t_¢¥ötf


	)

726 
	#POLARSSL_ERR_DEBUG_BUF_TOO_SMALL
 -2

	)

728 
	#SAFE_SNPRINTF
() \

730 if–
ªt
 == -1 ) \

733 if–(Ë
ªt
 > 
n
 ) { \

734 
p
[
n
 - 1] = '\0'; \

735 –
POLARSSL_ERR_DEBUG_BUF_TOO_SMALL
 ); \

738 
n
 -(Ë
ªt
; \

739 
p
 +(Ë
ªt
; \

740 }

	)

746 
	$x509_dn_gës
–*
buf
, 
size_t
 
size
, c⁄° 
x509_«me
 *
dn
 )

748 
ªt
;

749 
size_t
 
i
, 
n
;

750 
c
;

751 c⁄° 
x509_«me
 *
«me
;

752 c⁄° *
sh‹t_«me
 = 
NULL
;

753 
s
[128], *
p
;

755 
	`mem£t
–
s
, 0, ( s ) );

757 
«me
 = 
dn
;

758 
p
 = 
buf
;

759 
n
 = 
size
;

761  
«me
 !
NULL
 )

763 if–!
«me
->
oid
.
p
 )

765 
«me
 =Çame->
√xt
;

769 if–
«me
 !
dn
 )

771 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, ", " );

772 
	`SAFE_SNPRINTF
();

775 
ªt
 = 
	`oid_gë_©å_sh‹t_«me
–&
«me
->
oid
, &
sh‹t_«me
 );

777 if–
ªt
 == 0 )

778 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "%s=", 
sh‹t_«me
 );

780 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\?\?=" );

781 
	`SAFE_SNPRINTF
();

783  
i
 = 0; i < 
«me
->
vÆ
.
Àn
; i++ )

785 if–
i
 >–
s
 ) - 1 )

788 
c
 = 
«me
->
vÆ
.
p
[
i
];

789 if–
c
 < 32 || c == 127 || ( c > 128 && c < 160 ) )

790 
s
[
i
] = '?';

791 
s
[
i
] = 
c
;

793 
s
[
i
] = '\0';

794 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "%s", 
s
 );

795 
	`SAFE_SNPRINTF
();

796 
«me
 =Çame->
√xt
;

799 –(Ë–
size
 - 
n
 ) );

800 
	}
}

806 
	$x509_£rül_gës
–*
buf
, 
size_t
 
size
, c⁄° 
x509_buf
 *
£rül
 )

808 
ªt
;

809 
size_t
 
i
, 
n
, 
ƒ
;

810 *
p
;

812 
p
 = 
buf
;

813 
n
 = 
size
;

815 
ƒ
 = ( 
£rül
->
Àn
 <= 32 )

816 ? 
£rül
->
Àn
 : 28;

818  
i
 = 0; i < 
ƒ
; i++ )

820 if–
i
 =0 && 
ƒ
 > 1 && 
£rül
->
p
[i] == 0x0 )

823 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "%02X%s",

824 
£rül
->
p
[
i
], ( i < 
ƒ
 - 1 ) ? ":" : "" );

825 
	`SAFE_SNPRINTF
();

828 if–
ƒ
 !
£rül
->
Àn
 )

830 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "...." );

831 
	`SAFE_SNPRINTF
();

834 –(Ë–
size
 - 
n
 ) );

835 
	}
}

840 
	$x509_sig_Æg_gës
–*
buf
, 
size_t
 
size
, c⁄° 
x509_buf
 *
sig_oid
,

841 
pk_ty≥_t
 
pk_Æg
, 
md_ty≥_t
 
md_Æg
,

842 c⁄° *
sig_›ts
 )

844 
ªt
;

845 *
p
 = 
buf
;

846 
size_t
 
n
 = 
size
;

847 c⁄° *
desc
 = 
NULL
;

849 
ªt
 = 
	`oid_gë_sig_Æg_desc
–
sig_oid
, &
desc
 );

850 if–
ªt
 != 0 )

851 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "???" );

853 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "%s", 
desc
 );

854 
	`SAFE_SNPRINTF
();

856 #i‡
	`deföed
(
POLARSSL_X509_RSASSA_PSS_SUPPORT
)

857 if–
pk_Æg
 =
POLARSSL_PK_RSASSA_PSS
 )

859 c⁄° 
pk_rßsß_pss_›ti⁄s
 *
pss_›ts
;

860 c⁄° 
md_öfo_t
 *
md_öfo
, *
mgf_md_öfo
;

862 
pss_›ts
 = (c⁄° 
pk_rßsß_pss_›ti⁄s
 *Ë
sig_›ts
;

864 
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
md_Æg
 );

865 
mgf_md_öfo
 = 
	`md_öfo_‰om_ty≥
–
pss_›ts
->
mgf1_hash_id
 );

867 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, " (%s, MGF1-%s, 0x%02X)",

868 
md_öfo
 ? md_öfo->
«me
 : "???",

869 
mgf_md_öfo
 ? mgf_md_öfo->
«me
 : "???",

870 
pss_›ts
->
ex≥˘ed_ß…_Àn
 );

871 
	`SAFE_SNPRINTF
();

874 ((Ë
pk_Æg
);

875 ((Ë
md_Æg
);

876 ((Ë
sig_›ts
);

879 –(Ë
size
 - 
n
 );

880 
	}
}

885 
	$x509_key_size_hñ≥r
–*
buf
, 
size_t
 
size
, c⁄° *
«me
 )

887 *
p
 = 
buf
;

888 
size_t
 
n
 = 
size
;

889 
ªt
;

891 if–
	`°æí
–
«me
 ) + –" key size" ) > 
size
 )

892 –
POLARSSL_ERR_DEBUG_BUF_TOO_SMALL
 );

894 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "%†key size", 
«me
 );

895 
	`SAFE_SNPRINTF
();

898 
	}
}

903 c⁄° *
	$x509_oid_gë_des¸ùti⁄
–
x509_buf
 *
oid
 )

905 c⁄° *
desc
 = 
NULL
;

906 
ªt
;

908 
ªt
 = 
	`oid_gë_exãnded_key_ußge
–
oid
, &
desc
 );

910 if–
ªt
 != 0 )

911 –
NULL
 );

913 –
desc
 );

914 
	}
}

917 
	$x509_oid_gë_numîic_°rög
–*
buf
, 
size_t
 
size
, 
x509_buf
 *
oid
 )

919  
	`oid_gë_numîic_°rög
–
buf
, 
size
, 
oid
 );

920 
	}
}

925 #i‡
deföed
(
POLARSSL_HAVE_TIME
)

927 
	$x509_gë_cuºít_time
–
x509_time
 *
now
 )

929 #i‡
	`deföed
(
_WIN32
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

930 
SYSTEMTIME
 
°
;

932 
	`GëSy°emTime
–&
°
 );

934 
now
->
yór
 = 
°
.
wYór
;

935 
now
->
m⁄
 = 
°
.
wM⁄th
;

936 
now
->
day
 = 
°
.
wDay
;

937 
now
->
hour
 = 
°
.
wHour
;

938 
now
->
mö
 = 
°
.
wMöuã
;

939 
now
->
£c
 = 
°
.
wSec⁄d
;

941 
tm
 
…
;

942 
time_t
 
â
;

944 
â
 = 
	`time
–
NULL
 );

945 
	`gmtime_r
–&
â
, &
…
 );

947 
now
->
yór
 = 
…
.
tm_yór
 + 1900;

948 
now
->
m⁄
 = 
…
.
tm_m⁄
 + 1;

949 
now
->
day
 = 
…
.
tm_mday
;

950 
now
->
hour
 = 
…
.
tm_hour
;

951 
now
->
mö
 = 
…
.
tm_mö
;

952 
now
->
£c
 = 
…
.
tm_£c
;

954 
	}
}

959 
	$x509_check_time
–c⁄° 
x509_time
 *
bef‹e
, c⁄° x509_timê*
a·î
 )

961 if–
bef‹e
->
yór
 > 
a·î
->year )

964 if–
bef‹e
->
yór
 =
a·î
->year &&

965 
bef‹e
->
m⁄
 > 
a·î
->mon )

968 if–
bef‹e
->
yór
 =
a·î
->year &&

969 
bef‹e
->
m⁄
 =
a·î
->mon &&

970 
bef‹e
->
day
 > 
a·î
->day )

973 if–
bef‹e
->
yór
 =
a·î
->year &&

974 
bef‹e
->
m⁄
 =
a·î
->mon &&

975 
bef‹e
->
day
 =
a·î
->day &&

976 
bef‹e
->
hour
 > 
a·î
->hour )

979 if–
bef‹e
->
yór
 =
a·î
->year &&

980 
bef‹e
->
m⁄
 =
a·î
->mon &&

981 
bef‹e
->
day
 =
a·î
->day &&

982 
bef‹e
->
hour
 =
a·î
->hour &&

983 
bef‹e
->
mö
 > 
a·î
->min )

986 if–
bef‹e
->
yór
 =
a·î
->year &&

987 
bef‹e
->
m⁄
 =
a·î
->mon &&

988 
bef‹e
->
day
 =
a·î
->day &&

989 
bef‹e
->
hour
 =
a·î
->hour &&

990 
bef‹e
->
mö
 =
a·î
->min &&

991 
bef‹e
->
£c
 > 
a·î
->sec )

995 
	}
}

997 
	$x509_time_expúed
–c⁄° 
x509_time
 *
to
 )

999 
x509_time
 
now
;

1001 
	`x509_gë_cuºít_time
–&
now
 );

1003 –
	`x509_check_time
–&
now
, 
to
 ) );

1004 
	}
}

1006 
	$x509_time_futuª
–c⁄° 
x509_time
 *
‰om
 )

1008 
x509_time
 
now
;

1010 
	`x509_gë_cuºít_time
–&
now
 );

1012 –
	`x509_check_time
–
‰om
, &
now
 ) );

1013 
	}
}

1017 
	$x509_time_expúed
–c⁄° 
x509_time
 *
to
 )

1019 ((Ë
to
);

1021 
	}
}

1023 
	$x509_time_futuª
–c⁄° 
x509_time
 *
‰om
 )

1025 ((Ë
‰om
);

1027 
	}
}

1030 #i‡
deföed
(
POLARSSL_SELF_TEST
)

1032 
	~"pﬁ¨s¶/x509_¸t.h
"

1033 
	~"pﬁ¨s¶/˚πs.h
"

1038 
	$x509_£lf_ã°
–
vîbo£
 )

1040 #i‡
	`deföed
(
POLARSSL_CERTS_C
Ë&& deföed(
POLARSSL_SHA1_C
)

1041 
ªt
;

1042 
Êags
;

1043 
x509_¸t
 
ˇ˚π
;

1044 
x509_¸t
 
˛i˚π
;

1046 if–
vîbo£
 != 0 )

1047 
	`pﬁ¨s¶_¥ötf
( " X.509 certificateÜoad: " );

1049 
	`x509_¸t_öô
–&
˛i˚π
 );

1051 
ªt
 = 
	`x509_¸t_∑r£
–&
˛i˚π
, (c⁄° *Ë
ã°_˛i_¸t
,

1052 
	`°æí
–
ã°_˛i_¸t
 ) );

1053 if–
ªt
 != 0 )

1055 if–
vîbo£
 != 0 )

1056 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1058 –
ªt
 );

1061 
	`x509_¸t_öô
–&
ˇ˚π
 );

1063 
ªt
 = 
	`x509_¸t_∑r£
–&
ˇ˚π
, (c⁄° *Ë
ã°_ˇ_¸t
,

1064 
	`°æí
–
ã°_ˇ_¸t
 ) );

1065 if–
ªt
 != 0 )

1067 if–
vîbo£
 != 0 )

1068 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1070 –
ªt
 );

1073 if–
vîbo£
 != 0 )

1074 
	`pﬁ¨s¶_¥ötf
( "passed\n X.509 signature verify: ");

1076 
ªt
 = 
	`x509_¸t_vîify
–&
˛i˚π
, &
ˇ˚π
, 
NULL
, NULL, &
Êags
, NULL, NULL );

1077 if–
ªt
 != 0 )

1079 if–
vîbo£
 != 0 )

1080 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

1082 
	`pﬁ¨s¶_¥ötf
–"ªà%d, &Êag†%04x\n", 
ªt
, 
Êags
 );

1084 –
ªt
 );

1087 if–
vîbo£
 != 0 )

1088 
	`pﬁ¨s¶_¥ötf
( "passed\n\n");

1090 
	`x509_¸t_‰ì
–&
ˇ˚π
 );

1091 
	`x509_¸t_‰ì
–&
˛i˚π
 );

1095 ((Ë
vîbo£
);

1096 –
POLARSSL_ERR_X509_FEATURE_UNAVAILABLE
 );

1098 
	}
}

	@polarssl/library/x509_create.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_X509_CREATE_C
)

34 
	~"pﬁ¨s¶/x509.h
"

35 
	~"pﬁ¨s¶/a¢1wrôe.h
"

36 
	~"pﬁ¨s¶/oid.h
"

38 #i‡
deföed
(
_MSC_VER
Ë&& !deföed 
°∫ˇ£cmp
 && !deföed(
EFIX64
) && \

39 !
	$deföed
(
EFI32
)

40 
	#°∫ˇ£cmp
 
_°∫icmp


	)

44 c⁄° *
«me
;

45 
size_t
 
«me_Àn
;

46 c⁄° *
oid
;

47 } 
	tx509_©å_des¸ùt‹_t
;

49 
	#ADD_STRLEN
–
s
 ) s, –†Ë- 1

	)

51 c⁄° 
x509_©å_des¸ùt‹_t
 
x509_©ås
[] =

53 { 
	`ADD_STRLEN
–"CN" ), 
OID_AT_CN
 },

54 { 
	`ADD_STRLEN
–"comm⁄Name" ), 
OID_AT_CN
 },

55 { 
	`ADD_STRLEN
–"C" ), 
OID_AT_COUNTRY
 },

56 { 
	`ADD_STRLEN
–"cou¡ryName" ), 
OID_AT_COUNTRY
 },

57 { 
	`ADD_STRLEN
–"O" ), 
OID_AT_ORGANIZATION
 },

58 { 
	`ADD_STRLEN
–"‹g™iz©i⁄Name" ), 
OID_AT_ORGANIZATION
 },

59 { 
	`ADD_STRLEN
–"L" ), 
OID_AT_LOCALITY
 },

60 { 
	`ADD_STRLEN
–"loˇlôy" ), 
OID_AT_LOCALITY
 },

61 { 
	`ADD_STRLEN
–"R" ), 
OID_PKCS9_EMAIL
 },

62 { 
	`ADD_STRLEN
–"OU" ), 
OID_AT_ORG_UNIT
 },

63 { 
	`ADD_STRLEN
–"‹g™iz©i⁄ÆUnôName" ), 
OID_AT_ORG_UNIT
 },

64 { 
	`ADD_STRLEN
–"ST" ), 
OID_AT_STATE
 },

65 { 
	`ADD_STRLEN
–"°©eOrProvö˚Name" ), 
OID_AT_STATE
 },

66 { 
	`ADD_STRLEN
–"emaûAddªss" ), 
OID_PKCS9_EMAIL
 },

67 { 
	`ADD_STRLEN
–"£rülNumbî" ), 
OID_AT_SERIAL_NUMBER
 },

68 { 
	`ADD_STRLEN
–"po°ÆAddªss" ), 
OID_AT_POSTAL_ADDRESS
 },

69 { 
	`ADD_STRLEN
–"po°ÆCode" ), 
OID_AT_POSTAL_CODE
 },

70 { 
	`ADD_STRLEN
–"dnQuÆifõr" ), 
OID_AT_DN_QUALIFIER
 },

71 { 
	`ADD_STRLEN
–"tôÀ" ), 
OID_AT_TITLE
 },

72 { 
	`ADD_STRLEN
–"surName" ), 
OID_AT_SUR_NAME
 },

73 { 
	`ADD_STRLEN
–"SN" ), 
OID_AT_SUR_NAME
 },

74 { 
	`ADD_STRLEN
–"givíName" ), 
OID_AT_GIVEN_NAME
 },

75 { 
	`ADD_STRLEN
–"GN" ), 
OID_AT_GIVEN_NAME
 },

76 { 
	`ADD_STRLEN
–"öôüls" ), 
OID_AT_INITIALS
 },

77 { 
	`ADD_STRLEN
–"p£ud⁄ym" ), 
OID_AT_PSEUDONYM
 },

78 { 
	`ADD_STRLEN
–"gíî©i⁄QuÆifõr" ), 
OID_AT_GENERATION_QUALIFIER
 },

79 { 
	`ADD_STRLEN
–"domaöComp⁄ít" ), 
OID_DOMAIN_COMPONENT
 },

80 { 
	`ADD_STRLEN
–"DC" ), 
OID_DOMAIN_COMPONENT
 },

81 { 
NULL
, 0, NULL }

82 
	}
};

84 c⁄° *
	$x509_©_oid_‰om_«me
–c⁄° *
«me
, 
size_t
 
«me_Àn
 )

86 c⁄° 
x509_©å_des¸ùt‹_t
 *
cur
;

88  
cur
 = 
x509_©ås
; cur->
«me
 !
NULL
; cur++ )

89 if–
cur
->
«me_Àn
 ==Çame_len &&

90 
	`°∫ˇ£cmp
–
cur
->
«me
,Çame, 
«me_Àn
 ) == 0 )

93 –
cur
->
oid
 );

94 
	}
}

96 
	$x509_°rög_to_«mes
–
a¢1_«med_d©a
 **
hód
, c⁄° *
«me
 )

98 
ªt
 = 0;

99 c⁄° *
s
 = 
«me
, *
c
 = s;

100 c⁄° *
íd
 = 
s
 + 
	`°æí
( s );

101 c⁄° *
oid
 = 
NULL
;

102 
ö_èg
 = 1;

105 
	`a¢1_‰ì_«med_d©a_li°
–
hód
 );

107  
c
 <
íd
 )

109 if–
ö_èg
 && *
c
 == '=' )

111 if––
oid
 = 
	`x509_©_oid_‰om_«me
–
s
, 
c
 - s ) ) =
NULL
 )

113 
ªt
 = 
POLARSSL_ERR_X509_UNKNOWN_OID
;

114 
exô
;

117 
s
 = 
c
 + 1;

118 
ö_èg
 = 0;

121 if–!
ö_èg
 && ( *
c
 =',' || c =
íd
 ) )

123 if–
	`a¢1_°‹e_«med_d©a
–
hód
, 
oid
, 
	`°æí
( oid ),

124 (*Ë
s
,

125 
c
 - 
s
 ) =
NULL
 )

127 –
POLARSSL_ERR_X509_MALLOC_FAILED
 );

130  
c
 < 
íd
 && *(c + 1) == ' ' )

131 
c
++;

133 
s
 = 
c
 + 1;

134 
ö_èg
 = 1;

136 
c
++;

139 
exô
:

141 –
ªt
 );

142 
	}
}

147 
	$x509_£t_exãnsi⁄
–
a¢1_«med_d©a
 **
hód
, c⁄° *
oid
, 
size_t
 
oid_Àn
,

148 
¸ôiˇl
, c⁄° *
vÆ
, 
size_t
 
vÆ_Àn
 )

150 
a¢1_«med_d©a
 *
cur
;

152 if––
cur
 = 
	`a¢1_°‹e_«med_d©a
–
hód
, 
oid
, 
oid_Àn
,

153 
NULL
, 
vÆ_Àn
 + 1 ) ) == NULL )

155 –
POLARSSL_ERR_X509_MALLOC_FAILED
 );

158 
cur
->
vÆ
.
p
[0] = 
¸ôiˇl
;

159 
	`mem˝y
–
cur
->
vÆ
.
p
 + 1, vÆ, 
vÆ_Àn
 );

162 
	}
}

176 
	$x509_wrôe_«me
–**
p
, *
°¨t
,

177 c⁄° *
oid
, 
size_t
 
oid_Àn
,

178 c⁄° *
«me
, 
size_t
 
«me_Àn
 )

180 
ªt
;

181 
size_t
 
Àn
 = 0;

185 if–
	`OID_SIZE
–
OID_PKCS9_EMAIL
 ) =
oid_Àn
 &&

186 
	`memcmp
–
oid
, 
OID_PKCS9_EMAIL
, 
oid_Àn
 ) == 0 )

188 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_ü5_°rög
–
p
, 
°¨t
,

189 (c⁄° *Ë
«me
,

190 
«me_Àn
 ) );

194 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_¥öèbÀ_°rög
–
p
, 
°¨t
,

195 (c⁄° *Ë
«me
,

196 
«me_Àn
 ) );

201 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_oid
–
p
, 
°¨t
, 
oid
, 
oid_Àn
 ) );

203 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
,Üen ) );

204 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–
p
, 
°¨t
, 
ASN1_CONSTRUCTED
 |

205 
ASN1_SEQUENCE
 ) );

207 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
,Üen ) );

208 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–
p
, 
°¨t
, 
ASN1_CONSTRUCTED
 |

209 
ASN1_SET
 ) );

211 –(Ë
Àn
 );

212 
	}
}

214 
	$x509_wrôe_«mes
–**
p
, *
°¨t
,

215 
a¢1_«med_d©a
 *
fú°
 )

217 
ªt
;

218 
size_t
 
Àn
 = 0;

219 
a¢1_«med_d©a
 *
cur
 = 
fú°
;

221  
cur
 !
NULL
 )

223 
	`ASN1_CHK_ADD
–
Àn
, 
	`x509_wrôe_«me
–
p
, 
°¨t
, (*Ë
cur
->
oid
.p,

224 
cur
->
oid
.
Àn
,

225 
cur
->
vÆ
.
p
, cur->vÆ.
Àn
 ) );

226 
cur
 = cur->
√xt
;

229 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
,Üen ) );

230 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–
p
, 
°¨t
, 
ASN1_CONSTRUCTED
 |

231 
ASN1_SEQUENCE
 ) );

233 –(Ë
Àn
 );

234 
	}
}

236 
	$x509_wrôe_sig
–**
p
, *
°¨t
,

237 c⁄° *
oid
, 
size_t
 
oid_Àn
,

238 *
sig
, 
size_t
 
size
 )

240 
ªt
;

241 
size_t
 
Àn
 = 0;

243 if–*
p
 - 
°¨t
 < (Ë
size
 + 1 )

244 –
POLARSSL_ERR_ASN1_BUF_TOO_SMALL
 );

246 
Àn
 = 
size
;

247 (*
p
Ë-
Àn
;

248 
	`mem˝y
–*
p
, 
sig
, 
Àn
 );

250 *--(*
p
) = 0;

251 
Àn
 += 1;

253 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
,Üen ) );

254 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–
p
, 
°¨t
, 
ASN1_BIT_STRING
 ) );

258 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Æg‹ôhm_idítifõr
–
p
, 
°¨t
, 
oid
,

259 
oid_Àn
, 0 ) );

261 –(Ë
Àn
 );

262 
	}
}

264 
	$x509_wrôe_exãnsi⁄
–**
p
, *
°¨t
,

265 
a¢1_«med_d©a
 *
ext
 )

267 
ªt
;

268 
size_t
 
Àn
 = 0;

270 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_øw_buf„r
–
p
, 
°¨t
, 
ext
->
vÆ
.p + 1,

271 
ext
->
vÆ
.
Àn
 - 1 ) );

272 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
, 
ext
->
vÆ
.len - 1 ) );

273 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–
p
, 
°¨t
, 
ASN1_OCTET_STRING
 ) );

275 if–
ext
->
vÆ
.
p
[0] != 0 )

277 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_boﬁ
–
p
, 
°¨t
, 1 ) );

280 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_øw_buf„r
–
p
, 
°¨t
, 
ext
->
oid
.p,

281 
ext
->
oid
.
Àn
 ) );

282 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
, 
ext
->
oid
.len ) );

283 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–
p
, 
°¨t
, 
ASN1_OID
 ) );

285 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
,Üen ) );

286 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–
p
, 
°¨t
, 
ASN1_CONSTRUCTED
 |

287 
ASN1_SEQUENCE
 ) );

289 –(Ë
Àn
 );

290 
	}
}

302 
	$x509_wrôe_exãnsi⁄s
–**
p
, *
°¨t
,

303 
a¢1_«med_d©a
 *
fú°
 )

305 
ªt
;

306 
size_t
 
Àn
 = 0;

307 
a¢1_«med_d©a
 *
cur_ext
 = 
fú°
;

309  
cur_ext
 !
NULL
 )

311 
	`ASN1_CHK_ADD
–
Àn
, 
	`x509_wrôe_exãnsi⁄
–
p
, 
°¨t
, 
cur_ext
 ) );

312 
cur_ext
 = cur_ext->
√xt
;

315 –(Ë
Àn
 );

316 
	}
}

	@polarssl/library/x509_crl.c

36 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

37 
	~"pﬁ¨s¶/c⁄fig.h
"

39 #ö˛udê
POLARSSL_CONFIG_FILE


42 #i‡
deföed
(
POLARSSL_X509_CRL_PARSE_C
)

44 
	~"pﬁ¨s¶/x509_¸l.h
"

45 
	~"pﬁ¨s¶/oid.h
"

46 #i‡
deföed
(
POLARSSL_PEM_PARSE_C
)

47 
	~"pﬁ¨s¶/≥m.h
"

50 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

51 
	~"pﬁ¨s¶/∂©f‹m.h
"

53 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

54 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

57 
	~<°rög.h
>

58 
	~<°dlib.h
>

59 #i‡
deföed
(
_WIN32
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

61 
	~<wödows.h
>

63 
	~<time.h
>

66 #i‡
deföed
(
POLARSSL_FS_IO
Ë|| deföed(
EFIX64
Ë|| deföed(
EFI32
)

67 
	~<°dio.h
>

71 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

72 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

73 
	}
}

78 
	$x509_¸l_gë_vîsi⁄
–**
p
,

79 c⁄° *
íd
,

80 *
vî
 )

82 
ªt
;

84 if––
ªt
 = 
	`a¢1_gë_öt
–
p
, 
íd
, 
vî
 ) ) != 0 )

86 if–
ªt
 =
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 )

88 *
vî
 = 0;

92 –
POLARSSL_ERR_X509_INVALID_VERSION
 + 
ªt
 );

96 
	}
}

101 
	$x509_gë_¸l_ext
–**
p
,

102 c⁄° *
íd
,

103 
x509_buf
 *
ext
 )

105 
ªt
;

106 
size_t
 
Àn
 = 0;

109 if––
ªt
 = 
	`x509_gë_ext
–
p
, 
íd
, 
ext
, 0) ) != 0 )

111 if–
ªt
 =
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 )

114 –
ªt
 );

117  *
p
 < 
íd
 )

119 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
Àn
,

120 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

121 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 + 
ªt
 );

123 *
p
 +
Àn
;

126 if–*
p
 !
íd
 )

127 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 +

128 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

131 
	}
}

136 
	$x509_gë_¸l_íåy_ext
–**
p
,

137 c⁄° *
íd
,

138 
x509_buf
 *
ext
 )

140 
ªt
;

141 
size_t
 
Àn
 = 0;

144 if–
íd
 <*
p
 )

147 
ext
->
èg
 = **
p
;

148 
ext
->
p
 = *p;

154 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
ext
->
Àn
,

155 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

157 if–
ªt
 =
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 )

159 
ext
->
p
 = 
NULL
;

162 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 + 
ªt
 );

165 
íd
 = *
p
 + 
ext
->
Àn
;

167 if–
íd
 !*
p
 + 
ext
->
Àn
 )

168 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 +

169 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

171  *
p
 < 
íd
 )

173 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
Àn
,

174 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

175 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 + 
ªt
 );

177 *
p
 +
Àn
;

180 if–*
p
 !
íd
 )

181 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 +

182 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

185 
	}
}

190 
	$x509_gë_íåõs
–**
p
,

191 c⁄° *
íd
,

192 
x509_¸l_íåy
 *
íåy
 )

194 
ªt
;

195 
size_t
 
íåy_Àn
;

196 
x509_¸l_íåy
 *
cur_íåy
 = 
íåy
;

198 if–*
p
 =
íd
 )

201 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
íåy_Àn
,

202 
ASN1_SEQUENCE
 | 
ASN1_CONSTRUCTED
 ) ) != 0 )

204 if–
ªt
 =
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 )

207 –
ªt
 );

210 
íd
 = *
p
 + 
íåy_Àn
;

212  *
p
 < 
íd
 )

214 
size_t
 
Àn2
;

215 c⁄° *
íd2
;

217 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
Àn2
,

218 
ASN1_SEQUENCE
 | 
ASN1_CONSTRUCTED
 ) ) != 0 )

220 –
ªt
 );

223 
cur_íåy
->
øw
.
èg
 = **
p
;

224 
cur_íåy
->
øw
.
p
 = *p;

225 
cur_íåy
->
øw
.
Àn
 = 
Àn2
;

226 
íd2
 = *
p
 + 
Àn2
;

228 if––
ªt
 = 
	`x509_gë_£rül
–
p
, 
íd2
, &
cur_íåy
->
£rül
 ) ) != 0 )

229 –
ªt
 );

231 if––
ªt
 = 
	`x509_gë_time
–
p
, 
íd2
,

232 &
cur_íåy
->
ªvoˇti⁄_d©e
 ) ) != 0 )

233 –
ªt
 );

235 if––
ªt
 = 
	`x509_gë_¸l_íåy_ext
–
p
, 
íd2
,

236 &
cur_íåy
->
íåy_ext
 ) ) != 0 )

237 –
ªt
 );

239 if–*
p
 < 
íd
 )

241 
cur_íåy
->
√xt
 = 
	`pﬁ¨s¶_mÆloc
––
x509_¸l_íåy
 ) );

243 if–
cur_íåy
->
√xt
 =
NULL
 )

244 –
POLARSSL_ERR_X509_MALLOC_FAILED
 );

246 
cur_íåy
 = cur_íåy->
√xt
;

247 
	`mem£t
–
cur_íåy
, 0, –
x509_¸l_íåy
 ) );

252 
	}
}

257 
	$x509_¸l_∑r£
–
x509_¸l
 *
chaö
, c⁄° *
buf
, 
size_t
 
buÊí
 )

259 
ªt
;

260 
size_t
 
Àn
;

261 *
p
, *
íd
;

262 
x509_¸l
 *
¸l
;

263 
x509_buf
 
sig_∑øms1
, 
sig_∑øms2
;

265 #i‡
	`deföed
(
POLARSSL_PEM_PARSE_C
)

266 
size_t
 
u£_Àn
;

267 
≥m_c⁄ãxt
 
≥m
;

270 
	`mem£t
–&
sig_∑øms1
, 0, –
x509_buf
 ) );

271 
	`mem£t
–&
sig_∑øms2
, 0, –
x509_buf
 ) );

273 
¸l
 = 
chaö
;

278 if–
¸l
 =
NULL
 || 
buf
 == NULL )

279 –
POLARSSL_ERR_X509_BAD_INPUT_DATA
 );

281  
¸l
->
vîsi⁄
 !0 && cæ->
√xt
 !
NULL
 )

282 
¸l
 = cæ->
√xt
;

287 if–
¸l
->
vîsi⁄
 !0 && cæ->
√xt
 =
NULL
 )

289 
¸l
->
√xt
 = (
x509_¸l
 *Ë
	`pﬁ¨s¶_mÆloc
( ( x509_crl ) );

291 if–
¸l
->
√xt
 =
NULL
 )

293 
	`x509_¸l_‰ì
–
¸l
 );

294 –
POLARSSL_ERR_X509_MALLOC_FAILED
 );

297 
¸l
 = cæ->
√xt
;

298 
	`x509_¸l_öô
–
¸l
 );

301 #i‡
	`deföed
(
POLARSSL_PEM_PARSE_C
)

302 
	`≥m_öô
–&
≥m
 );

303 
ªt
 = 
	`≥m_ªad_buf„r
–&
≥m
,

306 
buf
, 
NULL
, 0, &
u£_Àn
 );

308 if–
ªt
 == 0 )

313 
buÊí
 -
u£_Àn
;

314 
buf
 +
u£_Àn
;

319 
p
 = 
≥m
.
buf
;

320 
≥m
.
buf
 = 
NULL
;

321 
Àn
 = 
≥m
.
buÊí
;

322 
	`≥m_‰ì
–&
≥m
 );

324 if–
ªt
 !
POLARSSL_ERR_PEM_NO_HEADER_FOOTER_PRESENT
 )

326 
	`≥m_‰ì
–&
≥m
 );

327 –
ªt
 );

335 
p
 = (*Ë
	`pﬁ¨s¶_mÆloc
–
Àn
 = 
buÊí
 );

337 if–
p
 =
NULL
 )

338 –
POLARSSL_ERR_X509_MALLOC_FAILED
 );

340 
	`mem˝y
–
p
, 
buf
, 
buÊí
 );

342 
buÊí
 = 0;

345 
¸l
->
øw
.
p
 =Ö;

346 
¸l
->
øw
.
Àn
 =Üen;

347 
íd
 = 
p
 + 
Àn
;

355 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

356 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

358 
	`x509_¸l_‰ì
–
¸l
 );

359 –
POLARSSL_ERR_X509_INVALID_FORMAT
 );

362 if–
Àn
 !(
size_t
Ë–
íd
 - 
p
 ) )

364 
	`x509_¸l_‰ì
–
¸l
 );

365 –
POLARSSL_ERR_X509_INVALID_FORMAT
 +

366 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

372 
¸l
->
tbs
.
p
 =Ö;

374 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

375 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

377 
	`x509_¸l_‰ì
–
¸l
 );

378 –
POLARSSL_ERR_X509_INVALID_FORMAT
 + 
ªt
 );

381 
íd
 = 
p
 + 
Àn
;

382 
¸l
->
tbs
.
Àn
 = 
íd
 - cæ->tbs.
p
;

390 if––
ªt
 = 
	`x509_¸l_gë_vîsi⁄
–&
p
, 
íd
, &
¸l
->
vîsi⁄
 ) ) != 0 ||

391 –
ªt
 = 
	`x509_gë_Æg
–&
p
, 
íd
, &
¸l
->
sig_oid1
, &
sig_∑øms1
 ) ) != 0 )

393 
	`x509_¸l_‰ì
–
¸l
 );

394 –
ªt
 );

397 
¸l
->
vîsi⁄
++;

399 if–
¸l
->
vîsi⁄
 > 2 )

401 
	`x509_¸l_‰ì
–
¸l
 );

402 –
POLARSSL_ERR_X509_UNKNOWN_VERSION
 );

405 if––
ªt
 = 
	`x509_gë_sig_Æg
–&
¸l
->
sig_oid1
, &
sig_∑øms1
,

406 &
¸l
->
sig_md
, &¸l->
sig_pk
,

407 &
¸l
->
sig_›ts
 ) ) != 0 )

409 
	`x509_¸l_‰ì
–
¸l
 );

410 –
POLARSSL_ERR_X509_UNKNOWN_SIG_ALG
 );

416 
¸l
->
issuî_øw
.
p
 =Ö;

418 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

419 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

421 
	`x509_¸l_‰ì
–
¸l
 );

422 –
POLARSSL_ERR_X509_INVALID_FORMAT
 + 
ªt
 );

425 if––
ªt
 = 
	`x509_gë_«me
–&
p
,Ö + 
Àn
, &
¸l
->
issuî
 ) ) != 0 )

427 
	`x509_¸l_‰ì
–
¸l
 );

428 –
ªt
 );

431 
¸l
->
issuî_øw
.
Àn
 = 
p
 - crl->issuer_raw.p;

437 if––
ªt
 = 
	`x509_gë_time
–&
p
, 
íd
, &
¸l
->
this_upd©e
 ) ) != 0 )

439 
	`x509_¸l_‰ì
–
¸l
 );

440 –
ªt
 );

443 if––
ªt
 = 
	`x509_gë_time
–&
p
, 
íd
, &
¸l
->
√xt_upd©e
 ) ) != 0 )

445 if–
ªt
 !–
POLARSSL_ERR_X509_INVALID_DATE
 +

446 
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 ) &&

447 
ªt
 !–
POLARSSL_ERR_X509_INVALID_DATE
 +

448 
POLARSSL_ERR_ASN1_OUT_OF_DATA
 ) )

450 
	`x509_¸l_‰ì
–
¸l
 );

451 –
ªt
 );

463 if––
ªt
 = 
	`x509_gë_íåõs
–&
p
, 
íd
, &
¸l
->
íåy
 ) ) != 0 )

465 
	`x509_¸l_‰ì
–
¸l
 );

466 –
ªt
 );

473 if–
¸l
->
vîsi⁄
 == 2 )

475 
ªt
 = 
	`x509_gë_¸l_ext
–&
p
, 
íd
, &
¸l
->
¸l_ext
 );

477 if–
ªt
 != 0 )

479 
	`x509_¸l_‰ì
–
¸l
 );

480 –
ªt
 );

484 if–
p
 !
íd
 )

486 
	`x509_¸l_‰ì
–
¸l
 );

487 –
POLARSSL_ERR_X509_INVALID_FORMAT
 +

488 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

491 
íd
 = 
¸l
->
øw
.
p
 + cæ->øw.
Àn
;

497 if––
ªt
 = 
	`x509_gë_Æg
–&
p
, 
íd
, &
¸l
->
sig_oid2
, &
sig_∑øms2
 ) ) != 0 )

499 
	`x509_¸l_‰ì
–
¸l
 );

500 –
ªt
 );

503 if–
¸l
->
sig_oid1
.
Àn
 !¸l->
sig_oid2
.len ||

504 
	`memcmp
–
¸l
->
sig_oid1
.
p
, cæ->
sig_oid2
.p, cæ->sig_oid1.
Àn
 ) != 0 ||

505 
sig_∑øms1
.
Àn
 !
sig_∑øms2
.len ||

506 
	`memcmp
–
sig_∑øms1
.
p
, 
sig_∑øms2
.p, sig_∑øms1.
Àn
 ) != 0 )

508 
	`x509_¸l_‰ì
–
¸l
 );

509 –
POLARSSL_ERR_X509_SIG_MISMATCH
 );

512 if––
ªt
 = 
	`x509_gë_sig
–&
p
, 
íd
, &
¸l
->
sig
 ) ) != 0 )

514 
	`x509_¸l_‰ì
–
¸l
 );

515 –
ªt
 );

518 if–
p
 !
íd
 )

520 
	`x509_¸l_‰ì
–
¸l
 );

521 –
POLARSSL_ERR_X509_INVALID_FORMAT
 +

522 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

525 if–
buÊí
 > 0 )

527 
¸l
->
√xt
 = (
x509_¸l
 *Ë
	`pﬁ¨s¶_mÆloc
( ( x509_crl ) );

529 if–
¸l
->
√xt
 =
NULL
 )

531 
	`x509_¸l_‰ì
–
¸l
 );

532 –
POLARSSL_ERR_X509_MALLOC_FAILED
 );

535 
¸l
 = cæ->
√xt
;

536 
	`x509_¸l_öô
–
¸l
 );

538 –
	`x509_¸l_∑r£
–
¸l
, 
buf
, 
buÊí
 ) );

542 
	}
}

544 #i‡
deföed
(
POLARSSL_FS_IO
)

548 
	$x509_¸l_∑r£_fûe
–
x509_¸l
 *
chaö
, c⁄° *
∑th
 )

550 
ªt
;

551 
size_t
 
n
;

552 *
buf
;

554 if––
ªt
 = 
	`x509_lﬂd_fûe
–
∑th
, &
buf
, &
n
 ) ) != 0 )

555 –
ªt
 );

557 
ªt
 = 
	`x509_¸l_∑r£
–
chaö
, 
buf
, 
n
 );

559 
	`pﬁ¨s¶_zîoize
–
buf
, 
n
 + 1 );

560 
	`pﬁ¨s¶_‰ì
–
buf
 );

562 –
ªt
 );

563 
	}
}

566 #i‡
deföed
(
_MSC_VER
Ë&& !deföed 
¢¥ötf
 && !deföed(
EFIX64
) && \

567 !
	$deföed
(
EFI32
)

568 
	~<°d¨g.h
>

570 #i‡!
deföed
 
v¢¥ötf


571 
	#v¢¥ötf
 
_v¢¥ötf


	)

581 
	$com∑t_¢¥ötf
–*
°r
, 
size_t
 
size
, c⁄° *
f‹m©
, ... )

583 
va_li°
 
≠
;

584 
ªs
 = -1;

586 
	`va_°¨t
–
≠
, 
f‹m©
 );

588 
ªs
 = 
	`v¢¥ötf
–
°r
, 
size
, 
f‹m©
, 
≠
 );

590 
	`va_íd
–
≠
 );

593 if–
ªs
 < 0 )

594 –(Ë
size
 + 20 );

596 –
ªs
 );

597 
	}
}

599 
	#¢¥ötf
 
com∑t_¢¥ötf


	)

602 
	#POLARSSL_ERR_DEBUG_BUF_TOO_SMALL
 -2

	)

604 
	#SAFE_SNPRINTF
() \

606 if–
ªt
 == -1 ) \

609 if–(Ë
ªt
 > 
n
 ) { \

610 
p
[
n
 - 1] = '\0'; \

611 –
POLARSSL_ERR_DEBUG_BUF_TOO_SMALL
 ); \

614 
n
 -(Ë
ªt
; \

615 
p
 +(Ë
ªt
; \

616 }

	)

621 
	#BEFORE_COLON
 14

	)

622 
	#BC
 "14"

	)

626 
	$x509_¸l_öfo
–*
buf
, 
size_t
 
size
, c⁄° *
¥efix
,

627 c⁄° 
x509_¸l
 *
¸l
 )

629 
ªt
;

630 
size_t
 
n
;

631 *
p
;

632 c⁄° 
x509_¸l_íåy
 *
íåy
;

634 
p
 = 
buf
;

635 
n
 = 
size
;

637 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "%sCRL version : %d",

638 
¥efix
, 
¸l
->
vîsi⁄
 );

639 
	`SAFE_SNPRINTF
();

641 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%sissuîÇamê : ", 
¥efix
 );

642 
	`SAFE_SNPRINTF
();

643 
ªt
 = 
	`x509_dn_gës
–
p
, 
n
, &
¸l
->
issuî
 );

644 
	`SAFE_SNPRINTF
();

646 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%sthis update : " \

647 "%04d-%02d-%02d %02d:%02d:%02d", 
¥efix
,

648 
¸l
->
this_upd©e
.
yór
, cæ->this_upd©e.
m⁄
,

649 
¸l
->
this_upd©e
.
day
, cæ->this_upd©e.
hour
,

650 
¸l
->
this_upd©e
.
mö
, cæ->this_upd©e.
£c
 );

651 
	`SAFE_SNPRINTF
();

653 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%snext update : " \

654 "%04d-%02d-%02d %02d:%02d:%02d", 
¥efix
,

655 
¸l
->
√xt_upd©e
.
yór
, cæ->√xt_upd©e.
m⁄
,

656 
¸l
->
√xt_upd©e
.
day
, cæ->√xt_upd©e.
hour
,

657 
¸l
->
√xt_upd©e
.
mö
, cæ->√xt_upd©e.
£c
 );

658 
	`SAFE_SNPRINTF
();

660 
íåy
 = &
¸l
->entry;

662 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%sRevoked certificates:",

663 
¥efix
 );

664 
	`SAFE_SNPRINTF
();

666  
íåy
 !
NULL
 &&É¡ry->
øw
.
Àn
 != 0 )

668 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%sserialÇumber: ",

669 
¥efix
 );

670 
	`SAFE_SNPRINTF
();

672 
ªt
 = 
	`x509_£rül_gës
–
p
, 
n
, &
íåy
->
£rül
 );

673 
	`SAFE_SNPRINTF
();

675 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "Ñevocation date: " \

677 
íåy
->
ªvoˇti⁄_d©e
.
yór
,É¡ry->ªvoˇti⁄_d©e.
m⁄
,

678 
íåy
->
ªvoˇti⁄_d©e
.
day
,É¡ry->ªvoˇti⁄_d©e.
hour
,

679 
íåy
->
ªvoˇti⁄_d©e
.
mö
,É¡ry->ªvoˇti⁄_d©e.
£c
 );

680 
	`SAFE_SNPRINTF
();

682 
íåy
 =É¡ry->
√xt
;

685 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%ssig√d usög : ", 
¥efix
 );

686 
	`SAFE_SNPRINTF
();

688 
ªt
 = 
	`x509_sig_Æg_gës
–
p
, 
n
, &
¸l
->
sig_oid1
, cæ->
sig_pk
, cæ->
sig_md
,

689 
¸l
->
sig_›ts
 );

690 
	`SAFE_SNPRINTF
();

692 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n" );

693 
	`SAFE_SNPRINTF
();

695 –(Ë–
size
 - 
n
 ) );

696 
	}
}

701 
	$x509_¸l_öô
–
x509_¸l
 *
¸l
 )

703 
	`mem£t
–
¸l
, 0, (
x509_¸l
) );

704 
	}
}

709 
	$x509_¸l_‰ì
–
x509_¸l
 *
¸l
 )

711 
x509_¸l
 *
¸l_cur
 = 
¸l
;

712 
x509_¸l
 *
¸l_¥v
;

713 
x509_«me
 *
«me_cur
;

714 
x509_«me
 *
«me_¥v
;

715 
x509_¸l_íåy
 *
íåy_cur
;

716 
x509_¸l_íåy
 *
íåy_¥v
;

718 if–
¸l
 =
NULL
 )

723 #i‡
	`deföed
(
POLARSSL_X509_RSASSA_PSS_SUPPORT
)

724 
	`pﬁ¨s¶_‰ì
–
¸l_cur
->
sig_›ts
 );

727 
«me_cur
 = 
¸l_cur
->
issuî
.
√xt
;

728  
«me_cur
 !
NULL
 )

730 
«me_¥v
 = 
«me_cur
;

731 
«me_cur
 =Çame_cur->
√xt
;

732 
	`pﬁ¨s¶_zîoize
–
«me_¥v
, –
x509_«me
 ) );

733 
	`pﬁ¨s¶_‰ì
–
«me_¥v
 );

736 
íåy_cur
 = 
¸l_cur
->
íåy
.
√xt
;

737  
íåy_cur
 !
NULL
 )

739 
íåy_¥v
 = 
íåy_cur
;

740 
íåy_cur
 =É¡ry_cur->
√xt
;

741 
	`pﬁ¨s¶_zîoize
–
íåy_¥v
, –
x509_¸l_íåy
 ) );

742 
	`pﬁ¨s¶_‰ì
–
íåy_¥v
 );

745 if–
¸l_cur
->
øw
.
p
 !
NULL
 )

747 
	`pﬁ¨s¶_zîoize
–
¸l_cur
->
øw
.
p
, cæ_cur->øw.
Àn
 );

748 
	`pﬁ¨s¶_‰ì
–
¸l_cur
->
øw
.
p
 );

751 
¸l_cur
 = cæ_cur->
√xt
;

753  
¸l_cur
 !
NULL
 );

755 
¸l_cur
 = 
¸l
;

758 
¸l_¥v
 = 
¸l_cur
;

759 
¸l_cur
 = cæ_cur->
√xt
;

761 
	`pﬁ¨s¶_zîoize
–
¸l_¥v
, –
x509_¸l
 ) );

762 if–
¸l_¥v
 !
¸l
 )

763 
	`pﬁ¨s¶_‰ì
–
¸l_¥v
 );

765  
¸l_cur
 !
NULL
 );

766 
	}
}

	@polarssl/library/x509_crt.c

36 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

37 
	~"pﬁ¨s¶/c⁄fig.h
"

39 #ö˛udê
POLARSSL_CONFIG_FILE


42 #i‡
deföed
(
POLARSSL_X509_CRT_PARSE_C
)

44 
	~"pﬁ¨s¶/x509_¸t.h
"

45 
	~"pﬁ¨s¶/oid.h
"

46 #i‡
deföed
(
POLARSSL_PEM_PARSE_C
)

47 
	~"pﬁ¨s¶/≥m.h
"

50 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

51 
	~"pﬁ¨s¶/∂©f‹m.h
"

53 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

54 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

57 #i‡
deföed
(
POLARSSL_THREADING_C
)

58 
	~"pﬁ¨s¶/thªadög.h
"

61 
	~<°rög.h
>

62 
	~<°dlib.h
>

63 #i‡
deföed
(
_WIN32
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

64 
	~<wödows.h
>

66 
	~<time.h
>

69 #i‡
deföed
(
EFIX64
Ë|| deföed(
EFI32
)

70 
	~<°dio.h
>

73 #i‡
deföed
(
POLARSSL_FS_IO
)

74 
	~<°dio.h
>

75 #i‡!
deföed
(
_WIN32
Ë|| deföed(
EFIX64
Ë|| deföed(
EFI32
)

76 
	~<sys/ty≥s.h
>

77 
	~<sys/°©.h
>

78 
	~<dúít.h
>

83 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

84 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

85 
	}
}

90 
	$x509_gë_vîsi⁄
–**
p
,

91 c⁄° *
íd
,

92 *
vî
 )

94 
ªt
;

95 
size_t
 
Àn
;

97 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
Àn
,

98 
ASN1_CONTEXT_SPECIFIC
 | 
ASN1_CONSTRUCTED
 | 0 ) ) != 0 )

100 if–
ªt
 =
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 )

102 *
vî
 = 0;

106 –
ªt
 );

109 
íd
 = *
p
 + 
Àn
;

111 if––
ªt
 = 
	`a¢1_gë_öt
–
p
, 
íd
, 
vî
 ) ) != 0 )

112 –
POLARSSL_ERR_X509_INVALID_VERSION
 + 
ªt
 );

114 if–*
p
 !
íd
 )

115 –
POLARSSL_ERR_X509_INVALID_VERSION
 +

116 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

119 
	}
}

126 
	$x509_gë_d©es
–**
p
,

127 c⁄° *
íd
,

128 
x509_time
 *
‰om
,

129 
x509_time
 *
to
 )

131 
ªt
;

132 
size_t
 
Àn
;

134 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
Àn
,

135 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

136 –
POLARSSL_ERR_X509_INVALID_DATE
 + 
ªt
 );

138 
íd
 = *
p
 + 
Àn
;

140 if––
ªt
 = 
	`x509_gë_time
–
p
, 
íd
, 
‰om
 ) ) != 0 )

141 –
ªt
 );

143 if––
ªt
 = 
	`x509_gë_time
–
p
, 
íd
, 
to
 ) ) != 0 )

144 –
ªt
 );

146 if–*
p
 !
íd
 )

147 –
POLARSSL_ERR_X509_INVALID_DATE
 +

148 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

151 
	}
}

156 
	$x509_gë_uid
–**
p
,

157 c⁄° *
íd
,

158 
x509_buf
 *
uid
, 
n
 )

160 
ªt
;

162 if–*
p
 =
íd
 )

165 
uid
->
èg
 = **
p
;

167 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
uid
->
Àn
,

168 
ASN1_CONTEXT_SPECIFIC
 | 
ASN1_CONSTRUCTED
 | 
n
 ) ) != 0 )

170 if–
ªt
 =
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 )

173 –
ªt
 );

176 
uid
->
p
 = *p;

177 *
p
 +
uid
->
Àn
;

180 
	}
}

182 
	$x509_gë_basic_c⁄°øöts
–**
p
,

183 c⁄° *
íd
,

184 *
ˇ_i°rue
,

185 *
max_∑thÀn
 )

187 
ªt
;

188 
size_t
 
Àn
;

195 *
ˇ_i°rue
 = 0;

196 *
max_∑thÀn
 = 0;

198 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
Àn
,

199 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

200 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 + 
ªt
 );

202 if–*
p
 =
íd
 )

205 if––
ªt
 = 
	`a¢1_gë_boﬁ
–
p
, 
íd
, 
ˇ_i°rue
 ) ) != 0 )

207 if–
ªt
 =
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 )

208 
ªt
 = 
	`a¢1_gë_öt
–
p
, 
íd
, 
ˇ_i°rue
 );

210 if–
ªt
 != 0 )

211 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 + 
ªt
 );

213 if–*
ˇ_i°rue
 != 0 )

214 *
ˇ_i°rue
 = 1;

217 if–*
p
 =
íd
 )

220 if––
ªt
 = 
	`a¢1_gë_öt
–
p
, 
íd
, 
max_∑thÀn
 ) ) != 0 )

221 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 + 
ªt
 );

223 if–*
p
 !
íd
 )

224 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 +

225 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

227 (*
max_∑thÀn
)++;

230 
	}
}

232 
	$x509_gë_ns_˚π_ty≥
–**
p
,

233 c⁄° *
íd
,

234 *
ns_˚π_ty≥
)

236 
ªt
;

237 
x509_bô°rög
 
bs
 = { 0, 0, 
NULL
 };

239 if––
ªt
 = 
	`a¢1_gë_bô°rög
–
p
, 
íd
, &
bs
 ) ) != 0 )

240 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 + 
ªt
 );

242 if–
bs
.
Àn
 != 1 )

243 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 +

244 
POLARSSL_ERR_ASN1_INVALID_LENGTH
 );

247 *
ns_˚π_ty≥
 = *
bs
.
p
;

249 
	}
}

251 
	$x509_gë_key_ußge
–**
p
,

252 c⁄° *
íd
,

253 *
key_ußge
)

255 
ªt
;

256 
x509_bô°rög
 
bs
 = { 0, 0, 
NULL
 };

258 if––
ªt
 = 
	`a¢1_gë_bô°rög
–
p
, 
íd
, &
bs
 ) ) != 0 )

259 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 + 
ªt
 );

261 if–
bs
.
Àn
 < 1 )

262 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 +

263 
POLARSSL_ERR_ASN1_INVALID_LENGTH
 );

266 *
key_ußge
 = *
bs
.
p
;

268 
	}
}

275 
	$x509_gë_ext_key_ußge
–**
p
,

276 c⁄° *
íd
,

277 
x509_£quí˚
 *
ext_key_ußge
)

279 
ªt
;

281 if––
ªt
 = 
	`a¢1_gë_£quí˚_of
–
p
, 
íd
, 
ext_key_ußge
, 
ASN1_OID
 ) ) != 0 )

282 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 + 
ªt
 );

285 if–
ext_key_ußge
->
buf
.
p
 =
NULL
 )

286 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 +

287 
POLARSSL_ERR_ASN1_INVALID_LENGTH
 );

290 
	}
}

318 
	$x509_gë_subje˘_Æt_«me
–**
p
,

319 c⁄° *
íd
,

320 
x509_£quí˚
 *
subje˘_Æt_«me
 )

322 
ªt
;

323 
size_t
 
Àn
, 
èg_Àn
;

324 
a¢1_buf
 *
buf
;

325 
èg
;

326 
a¢1_£quí˚
 *
cur
 = 
subje˘_Æt_«me
;

329 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
Àn
,

330 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

331 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 + 
ªt
 );

333 if–*
p
 + 
Àn
 !
íd
 )

334 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 +

335 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

337  *
p
 < 
íd
 )

339 if––
íd
 - *
p
 ) < 1 )

340 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 +

341 
POLARSSL_ERR_ASN1_OUT_OF_DATA
 );

343 
èg
 = **
p
;

344 (*
p
)++;

345 if––
ªt
 = 
	`a¢1_gë_Àn
–
p
, 
íd
, &
èg_Àn
 ) ) != 0 )

346 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 + 
ªt
 );

348 if––
èg
 & 
ASN1_CONTEXT_SPECIFIC
 ) != ASN1_CONTEXT_SPECIFIC )

349 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 +

350 
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 );

353 if–
èg
 !–
ASN1_CONTEXT_SPECIFIC
 | 2 ) )

355 *
p
 +
èg_Àn
;

360 if–
cur
->
buf
.
p
 !
NULL
 )

362 
cur
->
√xt
 = (
a¢1_£quí˚
 *Ë
	`pﬁ¨s¶_mÆloc
(

363 –
a¢1_£quí˚
 ) );

365 if–
cur
->
√xt
 =
NULL
 )

366 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 +

367 
POLARSSL_ERR_ASN1_MALLOC_FAILED
 );

369 
	`mem£t
–
cur
->
√xt
, 0, –
a¢1_£quí˚
 ) );

370 
cur
 = cur->
√xt
;

373 
buf
 = &(
cur
->buf);

374 
buf
->
èg
 =Åag;

375 
buf
->
p
 = *p;

376 
buf
->
Àn
 = 
èg_Àn
;

377 *
p
 +
buf
->
Àn
;

381 
cur
->
√xt
 = 
NULL
;

383 if–*
p
 !
íd
 )

384 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 +

385 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

388 
	}
}

397 
	$x509_gë_¸t_ext
–**
p
,

398 c⁄° *
íd
,

399 
x509_¸t
 *
¸t
 )

401 
ªt
;

402 
size_t
 
Àn
;

403 *
íd_ext_d©a
, *
íd_ext_o˘ë
;

405 if––
ªt
 = 
	`x509_gë_ext
–
p
, 
íd
, &
¸t
->
v3_ext
, 3 ) ) != 0 )

407 if–
ªt
 =
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 )

410 –
ªt
 );

413  *
p
 < 
íd
 )

421 
x509_buf
 
exä_oid
 = {0, 0, 
NULL
};

422 
is_¸ôiˇl
 = 0;

423 
ext_ty≥
 = 0;

425 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
Àn
,

426 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

427 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 + 
ªt
 );

429 
íd_ext_d©a
 = *
p
 + 
Àn
;

432 
exä_oid
.
èg
 = **
p
;

434 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd
, &
exä_oid
.
Àn
, 
ASN1_OID
 ) ) != 0 )

435 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 + 
ªt
 );

437 
exä_oid
.
p
 = *p;

438 *
p
 +
exä_oid
.
Àn
;

440 if––
íd
 - *
p
 ) < 1 )

441 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 +

442 
POLARSSL_ERR_ASN1_OUT_OF_DATA
 );

445 if––
ªt
 = 
	`a¢1_gë_boﬁ
–
p
, 
íd_ext_d©a
, &
is_¸ôiˇl
 ) ) != 0 &&

446 –
ªt
 !
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 ) )

447 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 + 
ªt
 );

450 if––
ªt
 = 
	`a¢1_gë_èg
–
p
, 
íd_ext_d©a
, &
Àn
,

451 
ASN1_OCTET_STRING
 ) ) != 0 )

452 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 + 
ªt
 );

454 
íd_ext_o˘ë
 = *
p
 + 
Àn
;

456 if–
íd_ext_o˘ë
 !
íd_ext_d©a
 )

457 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 +

458 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

463 
ªt
 = 
	`oid_gë_x509_ext_ty≥
–&
exä_oid
, &
ext_ty≥
 );

465 if–
ªt
 != 0 )

468 *
p
 = 
íd_ext_o˘ë
;

470 #i‡!
	`deföed
(
POLARSSL_X509_ALLOW_UNSUPPORTED_CRITICAL_EXTENSION
)

471 if–
is_¸ôiˇl
 )

474 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 +

475 
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 );

481 
¸t
->
ext_ty≥s
 |
ext_ty≥
;

483  
ext_ty≥
 )

485 
EXT_BASIC_CONSTRAINTS
:

487 if––
ªt
 = 
	`x509_gë_basic_c⁄°øöts
–
p
, 
íd_ext_o˘ë
,

488 &
¸t
->
ˇ_i°rue
, &¸t->
max_∑thÀn
 ) ) != 0 )

489 –
ªt
 );

492 
EXT_KEY_USAGE
:

494 if––
ªt
 = 
	`x509_gë_key_ußge
–
p
, 
íd_ext_o˘ë
,

495 &
¸t
->
key_ußge
 ) ) != 0 )

496 –
ªt
 );

499 
EXT_EXTENDED_KEY_USAGE
:

501 if––
ªt
 = 
	`x509_gë_ext_key_ußge
–
p
, 
íd_ext_o˘ë
,

502 &
¸t
->
ext_key_ußge
 ) ) != 0 )

503 –
ªt
 );

506 
EXT_SUBJECT_ALT_NAME
:

508 if––
ªt
 = 
	`x509_gë_subje˘_Æt_«me
–
p
, 
íd_ext_o˘ë
,

509 &
¸t
->
subje˘_Æt_«mes
 ) ) != 0 )

510 –
ªt
 );

513 
EXT_NS_CERT_TYPE
:

515 if––
ªt
 = 
	`x509_gë_ns_˚π_ty≥
–
p
, 
íd_ext_o˘ë
,

516 &
¸t
->
ns_˚π_ty≥
 ) ) != 0 )

517 –
ªt
 );

521 –
POLARSSL_ERR_X509_FEATURE_UNAVAILABLE
 );

525 if–*
p
 !
íd
 )

526 –
POLARSSL_ERR_X509_INVALID_EXTENSIONS
 +

527 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

530 
	}
}

535 
	$x509_¸t_∑r£_dî_c‹e
–
x509_¸t
 *
¸t
, c⁄° *
buf
,

536 
size_t
 
buÊí
 )

538 
ªt
;

539 
size_t
 
Àn
;

540 *
p
, *
íd
, *
¸t_íd
;

541 
x509_buf
 
sig_∑øms1
, 
sig_∑øms2
;

543 
	`mem£t
–&
sig_∑øms1
, 0, –
x509_buf
 ) );

544 
	`mem£t
–&
sig_∑øms2
, 0, –
x509_buf
 ) );

549 if–
¸t
 =
NULL
 || 
buf
 == NULL )

550 –
POLARSSL_ERR_X509_BAD_INPUT_DATA
 );

552 
p
 = (*Ë
	`pﬁ¨s¶_mÆloc
–
Àn
 = 
buÊí
 );

554 if–
p
 =
NULL
 )

555 –
POLARSSL_ERR_X509_MALLOC_FAILED
 );

557 
	`mem˝y
–
p
, 
buf
, 
buÊí
 );

559 
¸t
->
øw
.
p
 =Ö;

560 
¸t
->
øw
.
Àn
 =Üen;

561 
íd
 = 
p
 + 
Àn
;

569 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

570 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

572 
	`x509_¸t_‰ì
–
¸t
 );

573 –
POLARSSL_ERR_X509_INVALID_FORMAT
 );

576 if–
Àn
 > (
size_t
Ë–
íd
 - 
p
 ) )

578 
	`x509_¸t_‰ì
–
¸t
 );

579 –
POLARSSL_ERR_X509_INVALID_FORMAT
 +

580 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

582 
¸t_íd
 = 
p
 + 
Àn
;

587 
¸t
->
tbs
.
p
 =Ö;

589 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

590 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

592 
	`x509_¸t_‰ì
–
¸t
 );

593 –
POLARSSL_ERR_X509_INVALID_FORMAT
 + 
ªt
 );

596 
íd
 = 
p
 + 
Àn
;

597 
¸t
->
tbs
.
Àn
 = 
íd
 - cπ->tbs.
p
;

606 if––
ªt
 = 
	`x509_gë_vîsi⁄
–&
p
, 
íd
, &
¸t
->
vîsi⁄
 ) ) != 0 ||

607 –
ªt
 = 
	`x509_gë_£rül
–&
p
, 
íd
, &
¸t
->
£rül
 ) ) != 0 ||

608 –
ªt
 = 
	`x509_gë_Æg
–&
p
, 
íd
, &
¸t
->
sig_oid1
,

609 &
sig_∑øms1
 ) ) != 0 )

611 
	`x509_¸t_‰ì
–
¸t
 );

612 –
ªt
 );

615 
¸t
->
vîsi⁄
++;

617 if–
¸t
->
vîsi⁄
 > 3 )

619 
	`x509_¸t_‰ì
–
¸t
 );

620 –
POLARSSL_ERR_X509_UNKNOWN_VERSION
 );

623 if––
ªt
 = 
	`x509_gë_sig_Æg
–&
¸t
->
sig_oid1
, &
sig_∑øms1
,

624 &
¸t
->
sig_md
, &¸t->
sig_pk
,

625 &
¸t
->
sig_›ts
 ) ) != 0 )

627 
	`x509_¸t_‰ì
–
¸t
 );

628 –
ªt
 );

634 
¸t
->
issuî_øw
.
p
 =Ö;

636 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

637 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

639 
	`x509_¸t_‰ì
–
¸t
 );

640 –
POLARSSL_ERR_X509_INVALID_FORMAT
 + 
ªt
 );

643 if––
ªt
 = 
	`x509_gë_«me
–&
p
,Ö + 
Àn
, &
¸t
->
issuî
 ) ) != 0 )

645 
	`x509_¸t_‰ì
–
¸t
 );

646 –
ªt
 );

649 
¸t
->
issuî_øw
.
Àn
 = 
p
 - crt->issuer_raw.p;

657 if––
ªt
 = 
	`x509_gë_d©es
–&
p
, 
íd
, &
¸t
->
vÆid_‰om
,

658 &
¸t
->
vÆid_to
 ) ) != 0 )

660 
	`x509_¸t_‰ì
–
¸t
 );

661 –
ªt
 );

667 
¸t
->
subje˘_øw
.
p
 =Ö;

669 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

670 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

672 
	`x509_¸t_‰ì
–
¸t
 );

673 –
POLARSSL_ERR_X509_INVALID_FORMAT
 + 
ªt
 );

676 if–
Àn
 && ( 
ªt
 = 
	`x509_gë_«me
–&
p
,Ö +Üí, &
¸t
->
subje˘
 ) ) != 0 )

678 
	`x509_¸t_‰ì
–
¸t
 );

679 –
ªt
 );

682 
¸t
->
subje˘_øw
.
Àn
 = 
p
 - crt->subject_raw.p;

687 if––
ªt
 = 
	`pk_∑r£_subpubkey
–&
p
, 
íd
, &
¸t
->
pk
 ) ) != 0 )

689 
	`x509_¸t_‰ì
–
¸t
 );

690 –
ªt
 );

701 if–
¸t
->
vîsi⁄
 == 2 || crt->version == 3 )

703 
ªt
 = 
	`x509_gë_uid
–&
p
, 
íd
, &
¸t
->
issuî_id
, 1 );

704 if–
ªt
 != 0 )

706 
	`x509_¸t_‰ì
–
¸t
 );

707 –
ªt
 );

711 if–
¸t
->
vîsi⁄
 == 2 || crt->version == 3 )

713 
ªt
 = 
	`x509_gë_uid
–&
p
, 
íd
, &
¸t
->
subje˘_id
, 2 );

714 if–
ªt
 != 0 )

716 
	`x509_¸t_‰ì
–
¸t
 );

717 –
ªt
 );

721 #i‡!
	`deföed
(
POLARSSL_X509_ALLOW_EXTENSIONS_NON_V3
)

722 if–
¸t
->
vîsi⁄
 == 3 )

725 
ªt
 = 
	`x509_gë_¸t_ext
–&
p
, 
íd
, 
¸t
 );

726 if–
ªt
 != 0 )

728 
	`x509_¸t_‰ì
–
¸t
 );

729 –
ªt
 );

731 #i‡!
	`deföed
(
POLARSSL_X509_ALLOW_EXTENSIONS_NON_V3
)

735 if–
p
 !
íd
 )

737 
	`x509_¸t_‰ì
–
¸t
 );

738 –
POLARSSL_ERR_X509_INVALID_FORMAT
 +

739 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

742 
íd
 = 
¸t_íd
;

751 if––
ªt
 = 
	`x509_gë_Æg
–&
p
, 
íd
, &
¸t
->
sig_oid2
, &
sig_∑øms2
 ) ) != 0 )

753 
	`x509_¸t_‰ì
–
¸t
 );

754 –
ªt
 );

757 if–
¸t
->
sig_oid1
.
Àn
 !¸t->
sig_oid2
.len ||

758 
	`memcmp
–
¸t
->
sig_oid1
.
p
, cπ->
sig_oid2
.p, cπ->sig_oid1.
Àn
 ) != 0 ||

759 
sig_∑øms1
.
Àn
 !
sig_∑øms2
.len ||

760 
	`memcmp
–
sig_∑øms1
.
p
, 
sig_∑øms2
.p, sig_∑øms1.
Àn
 ) != 0 )

762 
	`x509_¸t_‰ì
–
¸t
 );

763 –
POLARSSL_ERR_X509_SIG_MISMATCH
 );

766 if––
ªt
 = 
	`x509_gë_sig
–&
p
, 
íd
, &
¸t
->
sig
 ) ) != 0 )

768 
	`x509_¸t_‰ì
–
¸t
 );

769 –
ªt
 );

772 if–
p
 !
íd
 )

774 
	`x509_¸t_‰ì
–
¸t
 );

775 –
POLARSSL_ERR_X509_INVALID_FORMAT
 +

776 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

780 
	}
}

786 
	$x509_¸t_∑r£_dî
–
x509_¸t
 *
chaö
, c⁄° *
buf
,

787 
size_t
 
buÊí
 )

789 
ªt
;

790 
x509_¸t
 *
¸t
 = 
chaö
, *
¥ev
 = 
NULL
;

795 if–
¸t
 =
NULL
 || 
buf
 == NULL )

796 –
POLARSSL_ERR_X509_BAD_INPUT_DATA
 );

798  
¸t
->
vîsi⁄
 !0 && cπ->
√xt
 !
NULL
 )

800 
¥ev
 = 
¸t
;

801 
¸t
 = cπ->
√xt
;

807 if–
¸t
->
vîsi⁄
 !0 && cπ->
√xt
 =
NULL
 )

809 
¸t
->
√xt
 = (
x509_¸t
 *Ë
	`pﬁ¨s¶_mÆloc
( ( x509_crt ) );

811 if–
¸t
->
√xt
 =
NULL
 )

812 –
POLARSSL_ERR_X509_MALLOC_FAILED
 );

814 
¥ev
 = 
¸t
;

815 
¸t
 = cπ->
√xt
;

816 
	`x509_¸t_öô
–
¸t
 );

819 if––
ªt
 = 
	`x509_¸t_∑r£_dî_c‹e
–
¸t
, 
buf
, 
buÊí
 ) ) != 0 )

821 if–
¥ev
 )

822 
¥ev
->
√xt
 = 
NULL
;

824 if–
¸t
 !
chaö
 )

825 
	`pﬁ¨s¶_‰ì
–
¸t
 );

827 –
ªt
 );

831 
	}
}

837 
	$x509_¸t_∑r£
–
x509_¸t
 *
chaö
, c⁄° *
buf
, 
size_t
 
buÊí
 )

839 
suc˚ss
 = 0, 
fú°_îr‹
 = 0, 
tŸÆ_Áûed
 = 0;

840 
buf_f‹m©
 = 
X509_FORMAT_DER
;

845 if–
chaö
 =
NULL
 || 
buf
 == NULL )

846 –
POLARSSL_ERR_X509_BAD_INPUT_DATA
 );

852 #i‡
	`deföed
(
POLARSSL_PEM_PARSE_C
)

853 if–
	`°r°r
–(c⁄° *Ë
buf
, "-----BEGIN CERTIFICATE-----" ) !
NULL
 )

854 
buf_f‹m©
 = 
X509_FORMAT_PEM
;

857 if–
buf_f‹m©
 =
X509_FORMAT_DER
 )

858  
	`x509_¸t_∑r£_dî
–
chaö
, 
buf
, 
buÊí
 );

860 #i‡
	`deföed
(
POLARSSL_PEM_PARSE_C
)

861 if–
buf_f‹m©
 =
X509_FORMAT_PEM
 )

863 
ªt
;

864 
≥m_c⁄ãxt
 
≥m
;

866  
buÊí
 > 0 )

868 
size_t
 
u£_Àn
;

869 
	`≥m_öô
–&
≥m
 );

871 
ªt
 = 
	`≥m_ªad_buf„r
–&
≥m
,

874 
buf
, 
NULL
, 0, &
u£_Àn
 );

876 if–
ªt
 == 0 )

881 
buÊí
 -
u£_Àn
;

882 
buf
 +
u£_Àn
;

884 if–
ªt
 =
POLARSSL_ERR_PEM_BAD_INPUT_DATA
 )

886 –
ªt
 );

888 if–
ªt
 !
POLARSSL_ERR_PEM_NO_HEADER_FOOTER_PRESENT
 )

890 
	`≥m_‰ì
–&
≥m
 );

895 
buÊí
 -
u£_Àn
;

896 
buf
 +
u£_Àn
;

898 if–
fú°_îr‹
 == 0 )

899 
fú°_îr‹
 = 
ªt
;

906 
ªt
 = 
	`x509_¸t_∑r£_dî
–
chaö
, 
≥m
.
buf
,Öem.
buÊí
 );

908 
	`≥m_‰ì
–&
≥m
 );

910 if–
ªt
 != 0 )

915 if–
ªt
 =
POLARSSL_ERR_X509_MALLOC_FAILED
 )

916 –
ªt
 );

918 if–
fú°_îr‹
 == 0 )

919 
fú°_îr‹
 = 
ªt
;

921 
tŸÆ_Áûed
++;

925 
suc˚ss
 = 1;

930 if–
suc˚ss
 )

931 –
tŸÆ_Áûed
 );

932 if–
fú°_îr‹
 )

933 –
fú°_îr‹
 );

935 –
POLARSSL_ERR_X509_CERT_UNKNOWN_FORMAT
 );

936 
	}
}

938 #i‡
deföed
(
POLARSSL_FS_IO
)

942 
	$x509_¸t_∑r£_fûe
–
x509_¸t
 *
chaö
, c⁄° *
∑th
 )

944 
ªt
;

945 
size_t
 
n
;

946 *
buf
;

948 if––
ªt
 = 
	`x509_lﬂd_fûe
–
∑th
, &
buf
, &
n
 ) ) != 0 )

949 –
ªt
 );

951 
ªt
 = 
	`x509_¸t_∑r£
–
chaö
, 
buf
, 
n
 );

953 
	`pﬁ¨s¶_zîoize
–
buf
, 
n
 + 1 );

954 
	`pﬁ¨s¶_‰ì
–
buf
 );

956 –
ªt
 );

957 
	}
}

959 #i‡
deföed
(
POLARSSL_THREADING_PTHREAD
)

960 
thªadög_muãx_t
 
	gªaddú_muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

963 
	$x509_¸t_∑r£_∑th
–
x509_¸t
 *
chaö
, c⁄° *
∑th
 )

965 
ªt
 = 0;

966 #i‡
	`deföed
(
_WIN32
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

967 
w_ªt
;

968 
WCHAR
 
szDú
[
MAX_PATH
];

969 
fûíame
[
MAX_PATH
];

970 *
p
;

971 
Àn
 = (Ë
	`°æí
–
∑th
 );

973 
WIN32_FIND_DATAW
 
fûe_d©a
;

974 
HANDLE
 
hFöd
;

976 if–
Àn
 > 
MAX_PATH
 - 3 )

977 –
POLARSSL_ERR_X509_BAD_INPUT_DATA
 );

979 
	`mem£t
–
szDú
, 0, (szDir) );

980 
	`mem£t
–
fûíame
, 0, 
MAX_PATH
 );

981 
	`mem˝y
–
fûíame
, 
∑th
, 
Àn
 );

982 
fûíame
[
Àn
++] = '\\';

983 
p
 = 
fûíame
 + 
Àn
;

984 
fûíame
[
Àn
++] = '*';

986 
w_ªt
 = 
	`Mu…iByãToWideCh¨
–
CP_ACP
, 0, 
fûíame
, 
Àn
, 
szDú
,

987 
MAX_PATH
 - 3 );

989 
hFöd
 = 
	`FödFú°FûeW
–
szDú
, &
fûe_d©a
 );

990 if–
hFöd
 =
INVALID_HANDLE_VALUE
 )

991 –
POLARSSL_ERR_X509_FILE_IO_ERROR
 );

993 
Àn
 = 
MAX_PATH
 -Üen;

996 
	`mem£t
–
p
, 0, 
Àn
 );

998 if–
fûe_d©a
.
dwFûeAâribuãs
 & 
FILE_ATTRIBUTE_DIRECTORY
 )

1001 
w_ªt
 = 
	`WideCh¨ToMu…iByã
–
CP_ACP
, 0, 
fûe_d©a
.
cFûeName
,

1002 
	`l°æíW
–
fûe_d©a
.
cFûeName
 ),

1003 
p
, 
Àn
 - 1,

1004 
NULL
, NULL );

1006 
w_ªt
 = 
	`x509_¸t_∑r£_fûe
–
chaö
, 
fûíame
 );

1007 if–
w_ªt
 < 0 )

1008 
ªt
++;

1010 
ªt
 +
w_ªt
;

1012  
	`FödNextFûeW
–
hFöd
, &
fûe_d©a
 ) != 0 );

1014 if–
	`GëLa°Eº‹
(Ë!
ERROR_NO_MORE_FILES
 )

1015 
ªt
 = 
POLARSSL_ERR_X509_FILE_IO_ERROR
;

1017 
	`FödClo£
–
hFöd
 );

1019 
t_ªt
;

1020 
°©
 
sb
;

1021 
dúít
 *
íåy
;

1022 
íåy_«me
[255];

1023 
DIR
 *
dú
 = 
	`›ídú
–
∑th
 );

1025 if–
dú
 =
NULL
 )

1026 –
POLARSSL_ERR_X509_FILE_IO_ERROR
 );

1028 #i‡
	`deföed
(
POLARSSL_THREADING_PTHREAD
)

1029 if––
ªt
 = 
	`pﬁ¨s¶_muãx_lock
–&
ªaddú_muãx
 ) ) != 0 )

1030 –
ªt
 );

1033  ( 
íåy
 = 
	`ªaddú
–
dú
 ) ) !
NULL
 )

1035 
	`¢¥ötf
–
íåy_«me
, É¡ry_«me, "%s/%s", 
∑th
, 
íåy
->
d_«me
 );

1037 if–
	`°©
–
íåy_«me
, &
sb
 ) == -1 )

1039 
	`˛o£dú
–
dú
 );

1040 
ªt
 = 
POLARSSL_ERR_X509_FILE_IO_ERROR
;

1041 
˛ónup
;

1044 if–!
	`S_ISREG
–
sb
.
°_mode
 ) )

1049 
t_ªt
 = 
	`x509_¸t_∑r£_fûe
–
chaö
, 
íåy_«me
 );

1050 if–
t_ªt
 < 0 )

1051 
ªt
++;

1053 
ªt
 +
t_ªt
;

1055 
	`˛o£dú
–
dú
 );

1057 
˛ónup
:

1058 #i‡
	`deföed
(
POLARSSL_THREADING_PTHREAD
)

1059 if–
	`pﬁ¨s¶_muãx_u∆ock
–&
ªaddú_muãx
 ) != 0 )

1060 
ªt
 = 
POLARSSL_ERR_THREADING_MUTEX_ERROR
;

1065 –
ªt
 );

1066 
	}
}

1069 #i‡
deföed
(
_MSC_VER
Ë&& !deföed 
¢¥ötf
 && !deföed(
EFIX64
) && \

1070 !
	$deföed
(
EFI32
)

1071 
	~<°d¨g.h
>

1073 #i‡!
deföed
 
v¢¥ötf


1074 
	#v¢¥ötf
 
_v¢¥ötf


	)

1084 
	$com∑t_¢¥ötf
–*
°r
, 
size_t
 
size
, c⁄° *
f‹m©
, ... )

1086 
va_li°
 
≠
;

1087 
ªs
 = -1;

1089 
	`va_°¨t
–
≠
, 
f‹m©
 );

1091 
ªs
 = 
	`v¢¥ötf
–
°r
, 
size
, 
f‹m©
, 
≠
 );

1093 
	`va_íd
–
≠
 );

1096 if–
ªs
 < 0 )

1097 –(Ë
size
 + 20 );

1099 –
ªs
 );

1100 
	}
}

1102 
	#¢¥ötf
 
com∑t_¢¥ötf


	)

1105 
	#POLARSSL_ERR_DEBUG_BUF_TOO_SMALL
 -2

	)

1107 
	#SAFE_SNPRINTF
() \

1109 if–
ªt
 == -1 ) \

1112 if–(Ë
ªt
 > 
n
 ) { \

1113 
p
[
n
 - 1] = '\0'; \

1114 –
POLARSSL_ERR_DEBUG_BUF_TOO_SMALL
 ); \

1117 
n
 -(Ë
ªt
; \

1118 
p
 +(Ë
ªt
; \

1119 }

	)

1121 
	$x509_öfo_subje˘_Æt_«me
–**
buf
, 
size_t
 *
size
,

1122 c⁄° 
x509_£quí˚
 *
subje˘_Æt_«me
 )

1124 
size_t
 
i
;

1125 
size_t
 
n
 = *
size
;

1126 *
p
 = *
buf
;

1127 c⁄° 
x509_£quí˚
 *
cur
 = 
subje˘_Æt_«me
;

1128 c⁄° *
£p
 = "";

1129 
size_t
 
£p_Àn
 = 0;

1131  
cur
 !
NULL
 )

1133 if–
cur
->
buf
.
Àn
 + 
£p_Àn
 >
n
 )

1135 *
p
 = '\0';

1136 –
POLARSSL_ERR_DEBUG_BUF_TOO_SMALL
 );

1139 
n
 -
cur
->
buf
.
Àn
 + 
£p_Àn
;

1140  
i
 = 0; i < 
£p_Àn
; i++ )

1141 *
p
++ = 
£p
[
i
];

1142  
i
 = 0; i < 
cur
->
buf
.
Àn
; i++ )

1143 *
p
++ = 
cur
->
buf
.p[
i
];

1145 
£p
 = ", ";

1146 
£p_Àn
 = 2;

1148 
cur
 = cur->
√xt
;

1151 *
p
 = '\0';

1153 *
size
 = 
n
;

1154 *
buf
 = 
p
;

1157 
	}
}

1159 
	#PRINT_ITEM
(
i
) \

1161 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "%s" 
i
, 
£p
 ); \

1162 
	`SAFE_SNPRINTF
(); \

1163 
£p
 = ", "; \

1164 }

	)

1166 
	#CERT_TYPE
(
ty≥
,
«me
) \

1167 if–
ns_˚π_ty≥
 & 
ty≥
 ) \

1168 
	`PRINT_ITEM
–
«me
 );

	)

1170 
	$x509_öfo_˚π_ty≥
–**
buf
, 
size_t
 *
size
,

1171 
ns_˚π_ty≥
 )

1173 
ªt
;

1174 
size_t
 
n
 = *
size
;

1175 *
p
 = *
buf
;

1176 c⁄° *
£p
 = "";

1178 
	`CERT_TYPE
–
NS_CERT_TYPE_SSL_CLIENT
, "SSL Client" );

1179 
	`CERT_TYPE
–
NS_CERT_TYPE_SSL_SERVER
, "SSL Server" );

1180 
	`CERT_TYPE
–
NS_CERT_TYPE_EMAIL
, "Email" );

1181 
	`CERT_TYPE
–
NS_CERT_TYPE_OBJECT_SIGNING
, "Object Signing" );

1182 
	`CERT_TYPE
–
NS_CERT_TYPE_RESERVED
, "Reserved" );

1183 
	`CERT_TYPE
–
NS_CERT_TYPE_SSL_CA
, "SSL CA" );

1184 
	`CERT_TYPE
–
NS_CERT_TYPE_EMAIL_CA
, "Email CA" );

1185 
	`CERT_TYPE
–
NS_CERT_TYPE_OBJECT_SIGNING_CA
, "Object Signing CA" );

1187 *
size
 = 
n
;

1188 *
buf
 = 
p
;

1191 
	}
}

1193 
	#KEY_USAGE
(
code
,
«me
) \

1194 if–
key_ußge
 & 
code
 ) \

1195 
	`PRINT_ITEM
–
«me
 );

	)

1197 
	$x509_öfo_key_ußge
–**
buf
, 
size_t
 *
size
,

1198 
key_ußge
 )

1200 
ªt
;

1201 
size_t
 
n
 = *
size
;

1202 *
p
 = *
buf
;

1203 c⁄° *
£p
 = "";

1205 
	`KEY_USAGE
–
KU_DIGITAL_SIGNATURE
, "Digital Signature" );

1206 
	`KEY_USAGE
–
KU_NON_REPUDIATION
, "Non Repudiation" );

1207 
	`KEY_USAGE
–
KU_KEY_ENCIPHERMENT
, "Key Encipherment" );

1208 
	`KEY_USAGE
–
KU_DATA_ENCIPHERMENT
, "Data Encipherment" );

1209 
	`KEY_USAGE
–
KU_KEY_AGREEMENT
, "Key Agreement" );

1210 
	`KEY_USAGE
–
KU_KEY_CERT_SIGN
, "Key Cert Sign" );

1211 
	`KEY_USAGE
–
KU_CRL_SIGN
, "CRL Sign" );

1213 *
size
 = 
n
;

1214 *
buf
 = 
p
;

1217 
	}
}

1219 
	$x509_öfo_ext_key_ußge
–**
buf
, 
size_t
 *
size
,

1220 c⁄° 
x509_£quí˚
 *
exãnded_key_ußge
 )

1222 
ªt
;

1223 c⁄° *
desc
;

1224 
size_t
 
n
 = *
size
;

1225 *
p
 = *
buf
;

1226 c⁄° 
x509_£quí˚
 *
cur
 = 
exãnded_key_ußge
;

1227 c⁄° *
£p
 = "";

1229  
cur
 !
NULL
 )

1231 if–
	`oid_gë_exãnded_key_ußge
–&
cur
->
buf
, &
desc
 ) != 0 )

1232 
desc
 = "???";

1234 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "%s%s", 
£p
, 
desc
 );

1235 
	`SAFE_SNPRINTF
();

1237 
£p
 = ", ";

1239 
cur
 = cur->
√xt
;

1242 *
size
 = 
n
;

1243 *
buf
 = 
p
;

1246 
	}
}

1251 
	#BEFORE_COLON
 18

	)

1252 
	#BC
 "18"

	)

1253 
	$x509_¸t_öfo
–*
buf
, 
size_t
 
size
, c⁄° *
¥efix
,

1254 c⁄° 
x509_¸t
 *
¸t
 )

1256 
ªt
;

1257 
size_t
 
n
;

1258 *
p
;

1259 
key_size_°r
[
BEFORE_COLON
];

1261 
p
 = 
buf
;

1262 
n
 = 
size
;

1264 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "%scert. version : %d\n",

1265 
¥efix
, 
¸t
->
vîsi⁄
 );

1266 
	`SAFE_SNPRINTF
();

1267 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "%sserialÇumber : ",

1268 
¥efix
 );

1269 
	`SAFE_SNPRINTF
();

1271 
ªt
 = 
	`x509_£rül_gës
–
p
, 
n
, &
¸t
->
£rül
 );

1272 
	`SAFE_SNPRINTF
();

1274 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%sissuîÇamê : ", 
¥efix
 );

1275 
	`SAFE_SNPRINTF
();

1276 
ªt
 = 
	`x509_dn_gës
–
p
, 
n
, &
¸t
->
issuî
 );

1277 
	`SAFE_SNPRINTF
();

1279 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%ssubje˘Çamê : ", 
¥efix
 );

1280 
	`SAFE_SNPRINTF
();

1281 
ªt
 = 
	`x509_dn_gës
–
p
, 
n
, &
¸t
->
subje˘
 );

1282 
	`SAFE_SNPRINTF
();

1284 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%sissued on : " \

1285 "%04d-%02d-%02d %02d:%02d:%02d", 
¥efix
,

1286 
¸t
->
vÆid_‰om
.
yór
, cπ->vÆid_‰om.
m⁄
,

1287 
¸t
->
vÆid_‰om
.
day
, cπ->vÆid_‰om.
hour
,

1288 
¸t
->
vÆid_‰om
.
mö
, cπ->vÆid_‰om.
£c
 );

1289 
	`SAFE_SNPRINTF
();

1291 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%sexpires on : " \

1292 "%04d-%02d-%02d %02d:%02d:%02d", 
¥efix
,

1293 
¸t
->
vÆid_to
.
yór
, cπ->vÆid_to.
m⁄
,

1294 
¸t
->
vÆid_to
.
day
, cπ->vÆid_to.
hour
,

1295 
¸t
->
vÆid_to
.
mö
, cπ->vÆid_to.
£c
 );

1296 
	`SAFE_SNPRINTF
();

1298 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%ssig√d usög : ", 
¥efix
 );

1299 
	`SAFE_SNPRINTF
();

1301 
ªt
 = 
	`x509_sig_Æg_gës
–
p
, 
n
, &
¸t
->
sig_oid1
, cπ->
sig_pk
,

1302 
¸t
->
sig_md
, cπ->
sig_›ts
 );

1303 
	`SAFE_SNPRINTF
();

1306 if––
ªt
 = 
	`x509_key_size_hñ≥r
–
key_size_°r
, 
BEFORE_COLON
,

1307 
	`pk_gë_«me
–&
¸t
->
pk
 ) ) ) != 0 )

1309 –
ªt
 );

1312 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%s%-" 
BC
 "s: %d bôs", 
¥efix
, 
key_size_°r
,

1313 (Ë
	`pk_gë_size
–&
¸t
->
pk
 ) );

1314 
	`SAFE_SNPRINTF
();

1320 if–
¸t
->
ext_ty≥s
 & 
EXT_BASIC_CONSTRAINTS
 )

1322 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%sbasi¯c⁄°øöt†: CA=%s", 
¥efix
,

1323 
¸t
->
ˇ_i°rue
 ? "true" : "false" );

1324 
	`SAFE_SNPRINTF
();

1326 if–
¸t
->
max_∑thÀn
 > 0 )

1328 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, ", max_∑thÀn=%d", 
¸t
->
max_∑thÀn
 - 1 );

1329 
	`SAFE_SNPRINTF
();

1333 if–
¸t
->
ext_ty≥s
 & 
EXT_SUBJECT_ALT_NAME
 )

1335 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%ssubje˘á…Çamê : ", 
¥efix
 );

1336 
	`SAFE_SNPRINTF
();

1338 if––
ªt
 = 
	`x509_öfo_subje˘_Æt_«me
–&
p
, &
n
,

1339 &
¸t
->
subje˘_Æt_«mes
 ) ) != 0 )

1340 –
ªt
 );

1343 if–
¸t
->
ext_ty≥s
 & 
EXT_NS_CERT_TYPE
 )

1345 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%s˚π.Åy≥ : ", 
¥efix
 );

1346 
	`SAFE_SNPRINTF
();

1348 if––
ªt
 = 
	`x509_öfo_˚π_ty≥
–&
p
, &
n
, 
¸t
->
ns_˚π_ty≥
 ) ) != 0 )

1349 –
ªt
 );

1352 if–
¸t
->
ext_ty≥s
 & 
EXT_KEY_USAGE
 )

1354 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%skey ußgê : ", 
¥efix
 );

1355 
	`SAFE_SNPRINTF
();

1357 if––
ªt
 = 
	`x509_öfo_key_ußge
–&
p
, &
n
, 
¸t
->
key_ußge
 ) ) != 0 )

1358 –
ªt
 );

1361 if–
¸t
->
ext_ty≥s
 & 
EXT_EXTENDED_KEY_USAGE
 )

1363 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%£xàkey ußgê : ", 
¥efix
 );

1364 
	`SAFE_SNPRINTF
();

1366 if––
ªt
 = 
	`x509_öfo_ext_key_ußge
–&
p
, &
n
,

1367 &
¸t
->
ext_key_ußge
 ) ) != 0 )

1368 –
ªt
 );

1371 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n" );

1372 
	`SAFE_SNPRINTF
();

1374 –(Ë–
size
 - 
n
 ) );

1375 
	}
}

1377 #i‡
deföed
(
POLARSSL_X509_CHECK_KEY_USAGE
)

1378 
	$x509_¸t_check_key_ußge
–c⁄° 
x509_¸t
 *
¸t
, 
ußge
 )

1380 if––
¸t
->
ext_ty≥s
 & 
EXT_KEY_USAGE
 ) != 0 &&

1381 –
¸t
->
key_ußge
 & 
ußge
 ) != usage )

1382 –
POLARSSL_ERR_X509_BAD_INPUT_DATA
 );

1385 
	}
}

1388 #i‡
deföed
(
POLARSSL_X509_CHECK_EXTENDED_KEY_USAGE
)

1389 
	$x509_¸t_check_exãnded_key_ußge
–c⁄° 
x509_¸t
 *
¸t
,

1390 c⁄° *
ußge_oid
,

1391 
size_t
 
ußge_Àn
 )

1393 c⁄° 
x509_£quí˚
 *
cur
;

1396 if––
¸t
->
ext_ty≥s
 & 
EXT_EXTENDED_KEY_USAGE
 ) == 0 )

1402  
cur
 = &
¸t
->
ext_key_ußge
; cu∏!
NULL
; cu∏cur->
√xt
 )

1404 c⁄° 
x509_buf
 *
cur_oid
 = &
cur
->
buf
;

1406 if–
cur_oid
->
Àn
 =
ußge_Àn
 &&

1407 
	`memcmp
–
cur_oid
->
p
, 
ußge_oid
, 
ußge_Àn
 ) == 0 )

1412 if–
	`OID_CMP
–
OID_ANY_EXTENDED_KEY_USAGE
, 
cur_oid
 ) )

1416 –
POLARSSL_ERR_X509_BAD_INPUT_DATA
 );

1417 
	}
}

1420 #i‡
deföed
(
POLARSSL_X509_CRL_PARSE_C
)

1424 
	$x509_¸t_ªvoked
–c⁄° 
x509_¸t
 *
¸t
, c⁄° 
x509_¸l
 *
¸l
 )

1426 c⁄° 
x509_¸l_íåy
 *
cur
 = &
¸l
->
íåy
;

1428  
cur
 !
NULL
 && cur->
£rül
.
Àn
 != 0 )

1430 if–
¸t
->
£rül
.
Àn
 =
cur
->serial.len &&

1431 
	`memcmp
–
¸t
->
£rül
.
p
, 
cur
->£rül.p, cπ->£rül.
Àn
 ) == 0 )

1433 if–
	`x509_time_expúed
–&
cur
->
ªvoˇti⁄_d©e
 ) )

1437 
cur
 = cur->
√xt
;

1441 
	}
}

1446 
	$x509_¸t_vîify¸l
–
x509_¸t
 *
¸t
, x509_¸à*
ˇ
,

1447 
x509_¸l
 *
¸l_li°
)

1449 
Êags
 = 0;

1450 
hash
[
POLARSSL_MD_MAX_SIZE
];

1451 c⁄° 
md_öfo_t
 *
md_öfo
;

1453 if–
ˇ
 =
NULL
 )

1454 –
Êags
 );

1462  
¸l_li°
 !
NULL
 )

1464 if–
¸l_li°
->
vîsi⁄
 == 0 ||

1465 
¸l_li°
->
issuî_øw
.
Àn
 !
ˇ
->
subje˘_øw
.len ||

1466 
	`memcmp
–
¸l_li°
->
issuî_øw
.
p
, 
ˇ
->
subje˘_øw
.p,

1467 
¸l_li°
->
issuî_øw
.
Àn
 ) != 0 )

1469 
¸l_li°
 = cæ_li°->
√xt
;

1476 #i‡
	`deföed
(
POLARSSL_X509_CHECK_KEY_USAGE
)

1477 if–
	`x509_¸t_check_key_ußge
–
ˇ
, 
KU_CRL_SIGN
 ) != 0 )

1479 
Êags
 |
BADCRL_NOT_TRUSTED
;

1487 
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
¸l_li°
->
sig_md
 );

1488 if–
md_öfo
 =
NULL
 )

1493 
Êags
 |
BADCRL_NOT_TRUSTED
;

1497 
	`md
–
md_öfo
, 
¸l_li°
->
tbs
.
p
, cæ_li°->tbs.
Àn
, 
hash
 );

1499 if–
	`pk_vîify_ext
–
¸l_li°
->
sig_pk
, cæ_li°->
sig_›ts
, &
ˇ
->
pk
,

1500 
¸l_li°
->
sig_md
, 
hash
, 
md_öfo
->
size
,

1501 
¸l_li°
->
sig
.
p
, cæ_li°->sig.
Àn
 ) != 0 )

1503 
Êags
 |
BADCRL_NOT_TRUSTED
;

1510 if–
	`x509_time_expúed
–&
¸l_li°
->
√xt_upd©e
 ) )

1511 
Êags
 |
BADCRL_EXPIRED
;

1513 if–
	`x509_time_futuª
–&
¸l_li°
->
this_upd©e
 ) )

1514 
Êags
 |
BADCRL_FUTURE
;

1519 if–
	`x509_¸t_ªvoked
–
¸t
, 
¸l_li°
 ) )

1521 
Êags
 |
BADCERT_REVOKED
;

1525 
¸l_li°
 = cæ_li°->
√xt
;

1527 –
Êags
 );

1528 
	}
}

1532 
	$x509_«me_cmp
–c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
Àn
 )

1534 
size_t
 
i
;

1535 
diff
;

1536 c⁄° *
n1
 = 
s1
, *
n2
 = 
s2
;

1538  
i
 = 0; i < 
Àn
; i++ )

1540 
diff
 = 
n1
[
i
] ^ 
n2
[i];

1542 if–
diff
 == 0 )

1545 if–
diff
 == 32 &&

1546 ––
n1
[
i
] >= 'a' &&Ç1[i] <= 'z' ) ||

1547 –
n1
[
i
] >= 'A' &&Ç1[i] <= 'Z' ) ) )

1556 
	}
}

1558 
	$x509_wûdˇrd_vîify
–c⁄° *
˙
, 
x509_buf
 *
«me
 )

1560 
size_t
 
i
;

1561 
size_t
 
˙_idx
 = 0, 
˙_Àn
 = 
	`°æí
–
˙
 );

1563 if–
«me
->
Àn
 < 3 ||Çame->
p
[0] != '*' ||Çame->p[1] != '.' )

1566  
i
 = 0; i < 
˙_Àn
; ++i )

1568 if–
˙
[
i
] == '.' )

1570 
˙_idx
 = 
i
;

1575 if–
˙_idx
 == 0 )

1578 if–
˙_Àn
 - 
˙_idx
 =
«me
->
Àn
 - 1 &&

1579 
	`x509_«me_cmp
–
«me
->
p
 + 1, 
˙
 + 
˙_idx
,Çame->
Àn
 - 1 ) == 0 )

1585 
	}
}

1594 
	$x509_¸t_check_∑ª¡
–c⁄° 
x509_¸t
 *
chûd
,

1595 c⁄° 
x509_¸t
 *
∑ª¡
,

1596 
t›
, 
bŸtom
 )

1598 
√ed_ˇ_bô
;

1601 if–
chûd
->
issuî_øw
.
Àn
 !
∑ª¡
->
subje˘_øw
.len ||

1602 
	`memcmp
–
chûd
->
issuî_øw
.
p
, 
∑ª¡
->
subje˘_øw
.p,

1603 
chûd
->
issuî_øw
.
Àn
 ) != 0 )

1609 
√ed_ˇ_bô
 = 1;

1612 if–
t›
 && 
∑ª¡
->
vîsi⁄
 < 3 )

1613 
√ed_ˇ_bô
 = 0;

1616 if–
t›
 && 
bŸtom
 &&

1617 
chûd
->
øw
.
Àn
 =
∑ª¡
->raw.len &&

1618 
	`memcmp
–
chûd
->
øw
.
p
, 
∑ª¡
->øw.p, chûd->øw.
Àn
 ) == 0 )

1620 
√ed_ˇ_bô
 = 0;

1623 if–
√ed_ˇ_bô
 && ! 
∑ª¡
->
ˇ_i°rue
 )

1626 #i‡
	`deföed
(
POLARSSL_X509_CHECK_KEY_USAGE
)

1627 if–
√ed_ˇ_bô
 &&

1628 
	`x509_¸t_check_key_ußge
–
∑ª¡
, 
KU_KEY_CERT_SIGN
 ) != 0 )

1635 
	}
}

1637 
x509_¸t_vîify_t›
(

1638 
x509_¸t
 *
chûd
, x509_¸à*
åu°_ˇ
,

1639 
x509_¸l
 *
ˇ_¸l
, 
∑th_˙t
, *
Êags
,

1640 (*
f_vrfy
)(*, 
x509_¸t
 *, , *),

1641 *
p_vrfy
 )

1643 
ªt
;

1644 
ˇ_Êags
 = 0, 
check_∑th_˙t
 = 
∑th_˙t
 + 1;

1645 
hash
[
POLARSSL_MD_MAX_SIZE
];

1646 c⁄° 
md_öfo_t
 *
md_öfo
;

1648 if–
	`x509_time_expúed
–&
chûd
->
vÆid_to
 ) )

1649 *
Êags
 |
BADCERT_EXPIRED
;

1651 if–
	`x509_time_futuª
–&
chûd
->
vÆid_‰om
 ) )

1652 *
Êags
 |
BADCERT_FUTURE
;

1657 *
Êags
 |
BADCERT_NOT_TRUSTED
;

1659 
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
chûd
->
sig_md
 );

1660 if–
md_öfo
 =
NULL
 )

1665 
åu°_ˇ
 = 
NULL
;

1668 
	`md
–
md_öfo
, 
chûd
->
tbs
.
p
, chûd->tbs.
Àn
, 
hash
 );

1670  ; 
åu°_ˇ
 !
NULL
;Åru°_ˇ =Åru°_ˇ->
√xt
 )

1672 if–
	`x509_¸t_check_∑ª¡
–
chûd
, 
åu°_ˇ
, 1, 
∑th_˙t
 == 0 ) != 0 )

1679 if–
chûd
->
subje˘_øw
.
Àn
 =
åu°_ˇ
->subject_raw.len &&

1680 
	`memcmp
–
chûd
->
subje˘_øw
.
p
, 
åu°_ˇ
->subject_raw.p,

1681 
chûd
->
issuî_øw
.
Àn
 ) == 0 )

1683 
check_∑th_˙t
--;

1686 if–
åu°_ˇ
->
max_∑thÀn
 > 0 &&

1687 
åu°_ˇ
->
max_∑thÀn
 < 
check_∑th_˙t
 )

1692 if–
	`pk_vîify_ext
–
chûd
->
sig_pk
, chûd->
sig_›ts
, &
åu°_ˇ
->
pk
,

1693 
chûd
->
sig_md
, 
hash
, 
md_öfo
->
size
,

1694 
chûd
->
sig
.
p
, chûd->sig.
Àn
 ) != 0 )

1702 *
Êags
 &~
BADCERT_NOT_TRUSTED
;

1711 if–
åu°_ˇ
 !
NULL
 &&

1712 –
chûd
->
subje˘_øw
.
Àn
 !
åu°_ˇ
->subject_raw.len ||

1713 
	`memcmp
–
chûd
->
subje˘_øw
.
p
, 
åu°_ˇ
->subject_raw.p,

1714 
chûd
->
issuî_øw
.
Àn
 ) != 0 ) )

1716 #i‡
	`deföed
(
POLARSSL_X509_CRL_PARSE_C
)

1718 *
Êags
 |
	`x509_¸t_vîify¸l
–
chûd
, 
åu°_ˇ
, 
ˇ_¸l
 );

1720 ((Ë
ˇ_¸l
);

1723 if–
	`x509_time_expúed
–&
åu°_ˇ
->
vÆid_to
 ) )

1724 
ˇ_Êags
 |
BADCERT_EXPIRED
;

1726 if–
	`x509_time_futuª
–&
åu°_ˇ
->
vÆid_‰om
 ) )

1727 
ˇ_Êags
 |
BADCERT_FUTURE
;

1729 if–
NULL
 !
f_vrfy
 )

1731 if––
ªt
 = 
	`f_vrfy
–
p_vrfy
, 
åu°_ˇ
, 
∑th_˙t
 + 1,

1732 &
ˇ_Êags
 ) ) != 0 )

1734 –
ªt
 );

1740 if–
NULL
 !
f_vrfy
 )

1742 if––
ªt
 = 
	`f_vrfy
–
p_vrfy
, 
chûd
, 
∑th_˙t
, 
Êags
 ) ) != 0 )

1743 –
ªt
 );

1746 *
Êags
 |
ˇ_Êags
;

1749 
	}
}

1751 
x509_¸t_vîify_chûd
(

1752 
x509_¸t
 *
chûd
, x509_¸à*
∑ª¡
, x509_¸à*
åu°_ˇ
,

1753 
x509_¸l
 *
ˇ_¸l
, 
∑th_˙t
, *
Êags
,

1754 (*
f_vrfy
)(*, 
x509_¸t
 *, , *),

1755 *
p_vrfy
 )

1757 
ªt
;

1758 
∑ª¡_Êags
 = 0;

1759 
hash
[
POLARSSL_MD_MAX_SIZE
];

1760 
x509_¸t
 *
gønd∑ª¡
;

1761 c⁄° 
md_öfo_t
 *
md_öfo
;

1763 if–
	`x509_time_expúed
–&
chûd
->
vÆid_to
 ) )

1764 *
Êags
 |
BADCERT_EXPIRED
;

1766 if–
	`x509_time_futuª
–&
chûd
->
vÆid_‰om
 ) )

1767 *
Êags
 |
BADCERT_FUTURE
;

1769 
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
chûd
->
sig_md
 );

1770 if–
md_öfo
 =
NULL
 )

1775 *
Êags
 |
BADCERT_NOT_TRUSTED
;

1779 
	`md
–
md_öfo
, 
chûd
->
tbs
.
p
, chûd->tbs.
Àn
, 
hash
 );

1781 if–
	`pk_vîify_ext
–
chûd
->
sig_pk
, chûd->
sig_›ts
, &
∑ª¡
->
pk
,

1782 
chûd
->
sig_md
, 
hash
, 
md_öfo
->
size
,

1783 
chûd
->
sig
.
p
, chûd->sig.
Àn
 ) != 0 )

1785 *
Êags
 |
BADCERT_NOT_TRUSTED
;

1789 #i‡
	`deföed
(
POLARSSL_X509_CRL_PARSE_C
)

1791 *
Êags
 |
	`x509_¸t_vîify¸l
(
chûd
, 
∑ª¡
, 
ˇ_¸l
);

1795  
gønd∑ª¡
 = 
∑ª¡
->
√xt
;

1796 
gønd∑ª¡
 !
NULL
;

1797 
gønd∑ª¡
 = gønd∑ª¡->
√xt
 )

1799 if–
	`x509_¸t_check_∑ª¡
–
∑ª¡
, 
gønd∑ª¡
,

1800 0, 
∑th_˙t
 == 0 ) == 0 )

1805 if–
gønd∑ª¡
 !
NULL
 )

1807 
ªt
 = 
	`x509_¸t_vîify_chûd
–
∑ª¡
, 
gønd∑ª¡
, 
åu°_ˇ
, 
ˇ_¸l
,

1808 
∑th_˙t
 + 1, &
∑ª¡_Êags
, 
f_vrfy
, 
p_vrfy
 );

1809 if–
ªt
 != 0 )

1810 –
ªt
 );

1814 
ªt
 = 
	`x509_¸t_vîify_t›
–
∑ª¡
, 
åu°_ˇ
, 
ˇ_¸l
,

1815 
∑th_˙t
 + 1, &
∑ª¡_Êags
, 
f_vrfy
, 
p_vrfy
 );

1816 if–
ªt
 != 0 )

1817 –
ªt
 );

1821 if–
NULL
 !
f_vrfy
 )

1822 if––
ªt
 = 
	`f_vrfy
–
p_vrfy
, 
chûd
, 
∑th_˙t
, 
Êags
 ) ) != 0 )

1823 –
ªt
 );

1825 *
Êags
 |
∑ª¡_Êags
;

1828 
	}
}

1833 
x509_¸t_vîify
–
x509_¸t
 *
¸t
,

1834 
x509_¸t
 *
åu°_ˇ
,

1835 
x509_¸l
 *
ˇ_¸l
,

1836 c⁄° *
˙
, *
Êags
,

1837 (*
f_vrfy
)(*, 
x509_¸t
 *, , *),

1838 *
p_vrfy
 )

1840 
size_t
 
˙_Àn
;

1841 
ªt
;

1842 
∑thÀn
 = 0;

1843 
x509_¸t
 *
∑ª¡
;

1844 
x509_«me
 *
«me
;

1845 
x509_£quí˚
 *
cur
 = 
NULL
;

1847 *
Êags
 = 0;

1849 if–
˙
 !
NULL
 )

1851 
«me
 = &
¸t
->
subje˘
;

1852 
˙_Àn
 = 
	`°æí
–
˙
 );

1854 if–
¸t
->
ext_ty≥s
 & 
EXT_SUBJECT_ALT_NAME
 )

1856 
cur
 = &
¸t
->
subje˘_Æt_«mes
;

1858  
cur
 !
NULL
 )

1860 if–
cur
->
buf
.
Àn
 =
˙_Àn
 &&

1861 
	`x509_«me_cmp
–
˙
, 
cur
->
buf
.
p
, 
˙_Àn
 ) == 0 )

1864 if–
cur
->
buf
.
Àn
 > 2 &&

1865 
	`memcmp
–
cur
->
buf
.
p
, "*.", 2 ) == 0 &&

1866 
	`x509_wûdˇrd_vîify
–
˙
, &
cur
->
buf
 ) )

1869 
cur
 = cur->
√xt
;

1872 if–
cur
 =
NULL
 )

1873 *
Êags
 |
BADCERT_CN_MISMATCH
;

1877  
«me
 !
NULL
 )

1879 if–
	`OID_CMP
–
OID_AT_CN
, &
«me
->
oid
 ) )

1881 if–
«me
->
vÆ
.
Àn
 =
˙_Àn
 &&

1882 
	`x509_«me_cmp
–
«me
->
vÆ
.
p
, 
˙
, 
˙_Àn
 ) == 0 )

1885 if–
«me
->
vÆ
.
Àn
 > 2 &&

1886 
	`memcmp
–
«me
->
vÆ
.
p
, "*.", 2 ) == 0 &&

1887 
	`x509_wûdˇrd_vîify
–
˙
, &
«me
->
vÆ
 ) )

1891 
«me
 =Çame->
√xt
;

1894 if–
«me
 =
NULL
 )

1895 *
Êags
 |
BADCERT_CN_MISMATCH
;

1900  
∑ª¡
 = 
¸t
->
√xt
;Ö¨íà!
NULL
;Öarent =Öarent->next )

1902 if–
	`x509_¸t_check_∑ª¡
–
¸t
, 
∑ª¡
, 0, 
∑thÀn
 == 0 ) == 0 )

1907 if–
∑ª¡
 !
NULL
 )

1909 
ªt
 = 
	`x509_¸t_vîify_chûd
–
¸t
, 
∑ª¡
, 
åu°_ˇ
, 
ˇ_¸l
,

1910 
∑thÀn
, 
Êags
, 
f_vrfy
, 
p_vrfy
 );

1911 if–
ªt
 != 0 )

1912 –
ªt
 );

1916 
ªt
 = 
	`x509_¸t_vîify_t›
–
¸t
, 
åu°_ˇ
, 
ˇ_¸l
,

1917 
∑thÀn
, 
Êags
, 
f_vrfy
, 
p_vrfy
 );

1918 if–
ªt
 != 0 )

1919 –
ªt
 );

1922 if–*
Êags
 != 0 )

1923 –
POLARSSL_ERR_X509_CERT_VERIFY_FAILED
 );

1926 
	}
}

1931 
	$x509_¸t_öô
–
x509_¸t
 *
¸t
 )

1933 
	`mem£t
–
¸t
, 0, (
x509_¸t
) );

1934 
	}
}

1939 
	$x509_¸t_‰ì
–
x509_¸t
 *
¸t
 )

1941 
x509_¸t
 *
˚π_cur
 = 
¸t
;

1942 
x509_¸t
 *
˚π_¥v
;

1943 
x509_«me
 *
«me_cur
;

1944 
x509_«me
 *
«me_¥v
;

1945 
x509_£quí˚
 *
£q_cur
;

1946 
x509_£quí˚
 *
£q_¥v
;

1948 if–
¸t
 =
NULL
 )

1953 
	`pk_‰ì
–&
˚π_cur
->
pk
 );

1955 #i‡
	`deföed
(
POLARSSL_X509_RSASSA_PSS_SUPPORT
)

1956 
	`pﬁ¨s¶_‰ì
–
˚π_cur
->
sig_›ts
 );

1959 
«me_cur
 = 
˚π_cur
->
issuî
.
√xt
;

1960  
«me_cur
 !
NULL
 )

1962 
«me_¥v
 = 
«me_cur
;

1963 
«me_cur
 =Çame_cur->
√xt
;

1964 
	`pﬁ¨s¶_zîoize
–
«me_¥v
, –
x509_«me
 ) );

1965 
	`pﬁ¨s¶_‰ì
–
«me_¥v
 );

1968 
«me_cur
 = 
˚π_cur
->
subje˘
.
√xt
;

1969  
«me_cur
 !
NULL
 )

1971 
«me_¥v
 = 
«me_cur
;

1972 
«me_cur
 =Çame_cur->
√xt
;

1973 
	`pﬁ¨s¶_zîoize
–
«me_¥v
, –
x509_«me
 ) );

1974 
	`pﬁ¨s¶_‰ì
–
«me_¥v
 );

1977 
£q_cur
 = 
˚π_cur
->
ext_key_ußge
.
√xt
;

1978  
£q_cur
 !
NULL
 )

1980 
£q_¥v
 = 
£q_cur
;

1981 
£q_cur
 = seq_cur->
√xt
;

1982 
	`pﬁ¨s¶_zîoize
–
£q_¥v
, –
x509_£quí˚
 ) );

1983 
	`pﬁ¨s¶_‰ì
–
£q_¥v
 );

1986 
£q_cur
 = 
˚π_cur
->
subje˘_Æt_«mes
.
√xt
;

1987  
£q_cur
 !
NULL
 )

1989 
£q_¥v
 = 
£q_cur
;

1990 
£q_cur
 = seq_cur->
√xt
;

1991 
	`pﬁ¨s¶_zîoize
–
£q_¥v
, –
x509_£quí˚
 ) );

1992 
	`pﬁ¨s¶_‰ì
–
£q_¥v
 );

1995 if–
˚π_cur
->
øw
.
p
 !
NULL
 )

1997 
	`pﬁ¨s¶_zîoize
–
˚π_cur
->
øw
.
p
, cît_cur->øw.
Àn
 );

1998 
	`pﬁ¨s¶_‰ì
–
˚π_cur
->
øw
.
p
 );

2001 
˚π_cur
 = cît_cur->
√xt
;

2003  
˚π_cur
 !
NULL
 );

2005 
˚π_cur
 = 
¸t
;

2008 
˚π_¥v
 = 
˚π_cur
;

2009 
˚π_cur
 = cît_cur->
√xt
;

2011 
	`pﬁ¨s¶_zîoize
–
˚π_¥v
, –
x509_¸t
 ) );

2012 if–
˚π_¥v
 !
¸t
 )

2013 
	`pﬁ¨s¶_‰ì
–
˚π_¥v
 );

2015  
˚π_cur
 !
NULL
 );

2016 
	}
}

	@polarssl/library/x509_csr.c

36 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

37 
	~"pﬁ¨s¶/c⁄fig.h
"

39 #ö˛udê
POLARSSL_CONFIG_FILE


42 #i‡
deföed
(
POLARSSL_X509_CSR_PARSE_C
)

44 
	~"pﬁ¨s¶/x509_c§.h
"

45 
	~"pﬁ¨s¶/oid.h
"

46 #i‡
deföed
(
POLARSSL_PEM_PARSE_C
)

47 
	~"pﬁ¨s¶/≥m.h
"

50 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

51 
	~"pﬁ¨s¶/∂©f‹m.h
"

53 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

54 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

57 
	~<°rög.h
>

58 
	~<°dlib.h
>

60 #i‡
deföed
(
POLARSSL_FS_IO
Ë|| deföed(
EFIX64
Ë|| deföed(
EFI32
)

61 
	~<°dio.h
>

65 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

66 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

67 
	}
}

72 
	$x509_c§_gë_vîsi⁄
–**
p
,

73 c⁄° *
íd
,

74 *
vî
 )

76 
ªt
;

78 if––
ªt
 = 
	`a¢1_gë_öt
–
p
, 
íd
, 
vî
 ) ) != 0 )

80 if–
ªt
 =
POLARSSL_ERR_ASN1_UNEXPECTED_TAG
 )

82 *
vî
 = 0;

86 –
POLARSSL_ERR_X509_INVALID_VERSION
 + 
ªt
 );

90 
	}
}

95 
	$x509_c§_∑r£_dî
–
x509_c§
 *
c§
,

96 c⁄° *
buf
, 
size_t
 
buÊí
 )

98 
ªt
;

99 
size_t
 
Àn
;

100 *
p
, *
íd
;

101 
x509_buf
 
sig_∑øms
;

103 
	`mem£t
–&
sig_∑øms
, 0, –
x509_buf
 ) );

108 if–
c§
 =
NULL
 || 
buf
 == NULL )

109 –
POLARSSL_ERR_X509_BAD_INPUT_DATA
 );

111 
	`x509_c§_öô
–
c§
 );

116 
p
 = (*Ë
	`pﬁ¨s¶_mÆloc
–
Àn
 = 
buÊí
 );

118 if–
p
 =
NULL
 )

119 –
POLARSSL_ERR_X509_MALLOC_FAILED
 );

121 
	`mem˝y
–
p
, 
buf
, 
buÊí
 );

123 
c§
->
øw
.
p
 =Ö;

124 
c§
->
øw
.
Àn
 =Üen;

125 
íd
 = 
p
 + 
Àn
;

134 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

135 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

137 
	`x509_c§_‰ì
–
c§
 );

138 –
POLARSSL_ERR_X509_INVALID_FORMAT
 );

141 if–
Àn
 !(
size_t
Ë–
íd
 - 
p
 ) )

143 
	`x509_c§_‰ì
–
c§
 );

144 –
POLARSSL_ERR_X509_INVALID_FORMAT
 +

145 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

151 
c§
->
¸i
.
p
 =Ö;

153 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

154 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

156 
	`x509_c§_‰ì
–
c§
 );

157 –
POLARSSL_ERR_X509_INVALID_FORMAT
 + 
ªt
 );

160 
íd
 = 
p
 + 
Àn
;

161 
c§
->
¸i
.
Àn
 = 
íd
 - c§->¸i.
p
;

166 if––
ªt
 = 
	`x509_c§_gë_vîsi⁄
–&
p
, 
íd
, &
c§
->
vîsi⁄
 ) ) != 0 )

168 
	`x509_c§_‰ì
–
c§
 );

169 –
ªt
 );

172 
c§
->
vîsi⁄
++;

174 if–
c§
->
vîsi⁄
 != 1 )

176 
	`x509_c§_‰ì
–
c§
 );

177 –
POLARSSL_ERR_X509_UNKNOWN_VERSION
 );

183 
c§
->
subje˘_øw
.
p
 =Ö;

185 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

186 
ASN1_CONSTRUCTED
 | 
ASN1_SEQUENCE
 ) ) != 0 )

188 
	`x509_c§_‰ì
–
c§
 );

189 –
POLARSSL_ERR_X509_INVALID_FORMAT
 + 
ªt
 );

192 if––
ªt
 = 
	`x509_gë_«me
–&
p
,Ö + 
Àn
, &
c§
->
subje˘
 ) ) != 0 )

194 
	`x509_c§_‰ì
–
c§
 );

195 –
ªt
 );

198 
c§
->
subje˘_øw
.
Àn
 = 
p
 - csr->subject_raw.p;

203 if––
ªt
 = 
	`pk_∑r£_subpubkey
–&
p
, 
íd
, &
c§
->
pk
 ) ) != 0 )

205 
	`x509_c§_‰ì
–
c§
 );

206 –
ªt
 );

212 if––
ªt
 = 
	`a¢1_gë_èg
–&
p
, 
íd
, &
Àn
,

213 
ASN1_CONSTRUCTED
 | 
ASN1_CONTEXT_SPECIFIC
 ) ) != 0 )

215 
	`x509_c§_‰ì
–
c§
 );

216 –
POLARSSL_ERR_X509_INVALID_FORMAT
 + 
ªt
 );

220 
p
 +
Àn
;

222 
íd
 = 
c§
->
øw
.
p
 + c§->øw.
Àn
;

228 if––
ªt
 = 
	`x509_gë_Æg
–&
p
, 
íd
, &
c§
->
sig_oid
, &
sig_∑øms
 ) ) != 0 )

230 
	`x509_c§_‰ì
–
c§
 );

231 –
ªt
 );

234 if––
ªt
 = 
	`x509_gë_sig_Æg
–&
c§
->
sig_oid
, &
sig_∑øms
,

235 &
c§
->
sig_md
, &c§->
sig_pk
,

236 &
c§
->
sig_›ts
 ) ) != 0 )

238 
	`x509_c§_‰ì
–
c§
 );

239 –
POLARSSL_ERR_X509_UNKNOWN_SIG_ALG
 );

242 if––
ªt
 = 
	`x509_gë_sig
–&
p
, 
íd
, &
c§
->
sig
 ) ) != 0 )

244 
	`x509_c§_‰ì
–
c§
 );

245 –
ªt
 );

248 if–
p
 !
íd
 )

250 
	`x509_c§_‰ì
–
c§
 );

251 –
POLARSSL_ERR_X509_INVALID_FORMAT
 +

252 
POLARSSL_ERR_ASN1_LENGTH_MISMATCH
 );

256 
	}
}

261 
	$x509_c§_∑r£
–
x509_c§
 *
c§
, c⁄° *
buf
, 
size_t
 
buÊí
 )

263 
ªt
;

264 #i‡
	`deföed
(
POLARSSL_PEM_PARSE_C
)

265 
size_t
 
u£_Àn
;

266 
≥m_c⁄ãxt
 
≥m
;

272 if–
c§
 =
NULL
 || 
buf
 == NULL )

273 –
POLARSSL_ERR_X509_BAD_INPUT_DATA
 );

275 #i‡
	`deföed
(
POLARSSL_PEM_PARSE_C
)

276 
	`≥m_öô
–&
≥m
 );

277 
ªt
 = 
	`≥m_ªad_buf„r
–&
≥m
,

280 
buf
, 
NULL
, 0, &
u£_Àn
 );

282 if–
ªt
 == 0 )

287 if––
ªt
 = 
	`x509_c§_∑r£_dî
–
c§
, 
≥m
.
buf
,Öem.
buÊí
 ) ) != 0 )

288 –
ªt
 );

290 
	`≥m_‰ì
–&
≥m
 );

293 if–
ªt
 !
POLARSSL_ERR_PEM_NO_HEADER_FOOTER_PRESENT
 )

295 
	`≥m_‰ì
–&
≥m
 );

296 –
ªt
 );

300 –
	`x509_c§_∑r£_dî
–
c§
, 
buf
, 
buÊí
 ) );

301 
	}
}

303 #i‡
deföed
(
POLARSSL_FS_IO
)

307 
	$x509_c§_∑r£_fûe
–
x509_c§
 *
c§
, c⁄° *
∑th
 )

309 
ªt
;

310 
size_t
 
n
;

311 *
buf
;

313 if––
ªt
 = 
	`x509_lﬂd_fûe
–
∑th
, &
buf
, &
n
 ) ) != 0 )

314 –
ªt
 );

316 
ªt
 = 
	`x509_c§_∑r£
–
c§
, 
buf
, 
n
 );

318 
	`pﬁ¨s¶_zîoize
–
buf
, 
n
 + 1 );

319 
	`pﬁ¨s¶_‰ì
–
buf
 );

321 –
ªt
 );

322 
	}
}

325 #i‡
deföed
(
_MSC_VER
Ë&& !deföed 
¢¥ötf
 && !deföed(
EFIX64
) && \

326 !
	$deföed
(
EFI32
)

327 
	~<°d¨g.h
>

329 #i‡!
deföed
 
v¢¥ötf


330 
	#v¢¥ötf
 
_v¢¥ötf


	)

340 
	$com∑t_¢¥ötf
–*
°r
, 
size_t
 
size
, c⁄° *
f‹m©
, ... )

342 
va_li°
 
≠
;

343 
ªs
 = -1;

345 
	`va_°¨t
–
≠
, 
f‹m©
 );

347 
ªs
 = 
	`v¢¥ötf
–
°r
, 
size
, 
f‹m©
, 
≠
 );

349 
	`va_íd
–
≠
 );

352 if–
ªs
 < 0 )

353 –(Ë
size
 + 20 );

355 –
ªs
 );

356 
	}
}

358 
	#¢¥ötf
 
com∑t_¢¥ötf


	)

361 
	#POLARSSL_ERR_DEBUG_BUF_TOO_SMALL
 -2

	)

363 
	#SAFE_SNPRINTF
() \

365 if–
ªt
 == -1 ) \

368 if–(Ë
ªt
 > 
n
 ) { \

369 
p
[
n
 - 1] = '\0'; \

370 –
POLARSSL_ERR_DEBUG_BUF_TOO_SMALL
 ); \

373 
n
 -(Ë
ªt
; \

374 
p
 +(Ë
ªt
; \

375 }

	)

377 
	#BEFORE_COLON
 14

	)

378 
	#BC
 "14"

	)

382 
	$x509_c§_öfo
–*
buf
, 
size_t
 
size
, c⁄° *
¥efix
,

383 c⁄° 
x509_c§
 *
c§
 )

385 
ªt
;

386 
size_t
 
n
;

387 *
p
;

388 
key_size_°r
[
BEFORE_COLON
];

390 
p
 = 
buf
;

391 
n
 = 
size
;

393 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "%sCSR version : %d",

394 
¥efix
, 
c§
->
vîsi⁄
 );

395 
	`SAFE_SNPRINTF
();

397 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%ssubje˘Çamê : ", 
¥efix
 );

398 
	`SAFE_SNPRINTF
();

399 
ªt
 = 
	`x509_dn_gës
–
p
, 
n
, &
c§
->
subje˘
 );

400 
	`SAFE_SNPRINTF
();

402 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%ssig√d usög : ", 
¥efix
 );

403 
	`SAFE_SNPRINTF
();

405 
ªt
 = 
	`x509_sig_Æg_gës
–
p
, 
n
, &
c§
->
sig_oid
, c§->
sig_pk
, c§->
sig_md
,

406 
c§
->
sig_›ts
 );

407 
	`SAFE_SNPRINTF
();

409 if––
ªt
 = 
	`x509_key_size_hñ≥r
–
key_size_°r
, 
BEFORE_COLON
,

410 
	`pk_gë_«me
–&
c§
->
pk
 ) ) ) != 0 )

412 –
ªt
 );

415 
ªt
 = 
	`¢¥ötf
–
p
, 
n
, "\n%s%-" 
BC
 "s: %d bôs\n", 
¥efix
, 
key_size_°r
,

416 (Ë
	`pk_gë_size
–&
c§
->
pk
 ) );

417 
	`SAFE_SNPRINTF
();

419 –(Ë–
size
 - 
n
 ) );

420 
	}
}

425 
	$x509_c§_öô
–
x509_c§
 *
c§
 )

427 
	`mem£t
–
c§
, 0, (
x509_c§
) );

428 
	}
}

433 
	$x509_c§_‰ì
–
x509_c§
 *
c§
 )

435 
x509_«me
 *
«me_cur
;

436 
x509_«me
 *
«me_¥v
;

438 if–
c§
 =
NULL
 )

441 
	`pk_‰ì
–&
c§
->
pk
 );

443 #i‡
	`deföed
(
POLARSSL_X509_RSASSA_PSS_SUPPORT
)

444 
	`pﬁ¨s¶_‰ì
–
c§
->
sig_›ts
 );

447 
«me_cur
 = 
c§
->
subje˘
.
√xt
;

448  
«me_cur
 !
NULL
 )

450 
«me_¥v
 = 
«me_cur
;

451 
«me_cur
 =Çame_cur->
√xt
;

452 
	`pﬁ¨s¶_zîoize
–
«me_¥v
, –
x509_«me
 ) );

453 
	`pﬁ¨s¶_‰ì
–
«me_¥v
 );

456 if–
c§
->
øw
.
p
 !
NULL
 )

458 
	`pﬁ¨s¶_zîoize
–
c§
->
øw
.
p
, c§->øw.
Àn
 );

459 
	`pﬁ¨s¶_‰ì
–
c§
->
øw
.
p
 );

462 
	`pﬁ¨s¶_zîoize
–
c§
, –
x509_c§
 ) );

463 
	}
}

	@polarssl/library/x509write_crt.c

32 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

33 
	~"pﬁ¨s¶/c⁄fig.h
"

35 #ö˛udê
POLARSSL_CONFIG_FILE


38 #i‡
deföed
(
POLARSSL_X509_CRT_WRITE_C
)

40 
	~"pﬁ¨s¶/x509_¸t.h
"

41 
	~"pﬁ¨s¶/oid.h
"

42 
	~"pﬁ¨s¶/a¢1wrôe.h
"

43 
	~"pﬁ¨s¶/sha1.h
"

45 #i‡
deföed
(
POLARSSL_PEM_WRITE_C
)

46 
	~"pﬁ¨s¶/≥m.h
"

50 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

51 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

52 
	}
}

54 
	$x509wrôe_¸t_öô
–
x509wrôe_˚π
 *
˘x
 )

56 
	`mem£t
–
˘x
, 0, (
x509wrôe_˚π
) );

58 
	`mpi_öô
–&
˘x
->
£rül
 );

59 
˘x
->
vîsi⁄
 = 
X509_CRT_VERSION_3
;

60 
	}
}

62 
	$x509wrôe_¸t_‰ì
–
x509wrôe_˚π
 *
˘x
 )

64 
	`mpi_‰ì
–&
˘x
->
£rül
 );

66 
	`a¢1_‰ì_«med_d©a_li°
–&
˘x
->
subje˘
 );

67 
	`a¢1_‰ì_«med_d©a_li°
–&
˘x
->
issuî
 );

68 
	`a¢1_‰ì_«med_d©a_li°
–&
˘x
->
exãnsi⁄s
 );

70 
	`pﬁ¨s¶_zîoize
–
˘x
, (
x509wrôe_˚π
) );

71 
	}
}

73 
	$x509wrôe_¸t_£t_vîsi⁄
–
x509wrôe_˚π
 *
˘x
, 
vîsi⁄
 )

75 
˘x
->
vîsi⁄
 = version;

76 
	}
}

78 
	$x509wrôe_¸t_£t_md_Æg
–
x509wrôe_˚π
 *
˘x
, 
md_ty≥_t
 
md_Æg
 )

80 
˘x
->
md_Æg
 = md_alg;

81 
	}
}

83 
	$x509wrôe_¸t_£t_subje˘_key
–
x509wrôe_˚π
 *
˘x
, 
pk_c⁄ãxt
 *
key
 )

85 
˘x
->
subje˘_key
 = 
key
;

86 
	}
}

88 
	$x509wrôe_¸t_£t_issuî_key
–
x509wrôe_˚π
 *
˘x
, 
pk_c⁄ãxt
 *
key
 )

90 
˘x
->
issuî_key
 = 
key
;

91 
	}
}

93 
	$x509wrôe_¸t_£t_subje˘_«me
–
x509wrôe_˚π
 *
˘x
,

94 c⁄° *
subje˘_«me
 )

96  
	`x509_°rög_to_«mes
–&
˘x
->
subje˘
, 
subje˘_«me
 );

97 
	}
}

99 
	$x509wrôe_¸t_£t_issuî_«me
–
x509wrôe_˚π
 *
˘x
,

100 c⁄° *
issuî_«me
 )

102  
	`x509_°rög_to_«mes
–&
˘x
->
issuî
, 
issuî_«me
 );

103 
	}
}

105 
	$x509wrôe_¸t_£t_£rül
–
x509wrôe_˚π
 *
˘x
, c⁄° 
mpi
 *
£rül
 )

107 
ªt
;

109 if––
ªt
 = 
	`mpi_c›y
–&
˘x
->
£rül
, serial ) ) != 0 )

110 –
ªt
 );

113 
	}
}

115 
	$x509wrôe_¸t_£t_vÆidôy
–
x509wrôe_˚π
 *
˘x
, c⁄° *
nŸ_bef‹e
,

116 c⁄° *
nŸ_a·î
 )

118 if–
	`°æí
–
nŸ_bef‹e
 ) !
X509_RFC5280_UTC_TIME_LEN
 - 1 ||

119 
	`°æí
–
nŸ_a·î
 ) !
X509_RFC5280_UTC_TIME_LEN
 - 1 )

121 –
POLARSSL_ERR_X509_BAD_INPUT_DATA
 );

123 
	`°∫˝y
–
˘x
->
nŸ_bef‹e
,ÇŸ_bef‹e, 
X509_RFC5280_UTC_TIME_LEN
 );

124 
	`°∫˝y
–
˘x
->
nŸ_a·î
 ,ÇŸ_a·î , 
X509_RFC5280_UTC_TIME_LEN
 );

125 
˘x
->
nŸ_bef‹e
[
X509_RFC5280_UTC_TIME_LEN
 - 1] = 'Z';

126 
˘x
->
nŸ_a·î
[
X509_RFC5280_UTC_TIME_LEN
 - 1] = 'Z';

129 
	}
}

131 
	$x509wrôe_¸t_£t_exãnsi⁄
–
x509wrôe_˚π
 *
˘x
,

132 c⁄° *
oid
, 
size_t
 
oid_Àn
,

133 
¸ôiˇl
,

134 c⁄° *
vÆ
, 
size_t
 
vÆ_Àn
 )

136  
	`x509_£t_exãnsi⁄
–&
˘x
->
exãnsi⁄s
, 
oid
, 
oid_Àn
,

137 
¸ôiˇl
, 
vÆ
, 
vÆ_Àn
 );

138 
	}
}

140 
	$x509wrôe_¸t_£t_basic_c⁄°øöts
–
x509wrôe_˚π
 *
˘x
,

141 
is_ˇ
, 
max_∑thÀn
 )

143 
ªt
;

144 
buf
[9];

145 *
c
 = 
buf
 + (buf);

146 
size_t
 
Àn
 = 0;

148 
	`mem£t
–
buf
, 0, (buf) );

150 if–
is_ˇ
 && 
max_∑thÀn
 > 127 )

151 –
POLARSSL_ERR_X509_BAD_INPUT_DATA
 );

153 if–
is_ˇ
 )

155 if–
max_∑thÀn
 >= 0 )

157 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_öt
–&
c
, 
buf
, 
max_∑thÀn
 ) );

159 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_boﬁ
–&
c
, 
buf
, 1 ) );

162 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
buf
,Üen ) );

163 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
buf
, 
ASN1_CONSTRUCTED
 |

164 
ASN1_SEQUENCE
 ) );

166  
	`x509wrôe_¸t_£t_exãnsi⁄
–
˘x
, 
OID_BASIC_CONSTRAINTS
,

167 
	`OID_SIZE
–
OID_BASIC_CONSTRAINTS
 ),

168 0, 
buf
 + (bufË- 
Àn
,Üen );

169 
	}
}

171 #i‡
deföed
(
POLARSSL_SHA1_C
)

172 
	$x509wrôe_¸t_£t_subje˘_key_idítifõr
–
x509wrôe_˚π
 *
˘x
 )

174 
ªt
;

175 
buf
[
POLARSSL_MPI_MAX_SIZE
 * 2 + 20];

176 *
c
 = 
buf
 + (buf);

177 
size_t
 
Àn
 = 0;

179 
	`mem£t
–
buf
, 0, (buf) );

180 
	`ASN1_CHK_ADD
–
Àn
, 
	`pk_wrôe_pubkey
–&
c
, 
buf
, 
˘x
->
subje˘_key
 ) );

182 
	`sha1
–
buf
 + (bufË- 
Àn
,Üen, buf + (buf) - 20 );

183 
c
 = 
buf
 + (buf) - 20;

184 
Àn
 = 20;

186 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
buf
,Üen ) );

187 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
buf
, 
ASN1_OCTET_STRING
 ) );

189  
	`x509wrôe_¸t_£t_exãnsi⁄
–
˘x
, 
OID_SUBJECT_KEY_IDENTIFIER
,

190 
	`OID_SIZE
–
OID_SUBJECT_KEY_IDENTIFIER
 ),

191 0, 
buf
 + (bufË- 
Àn
,Üen );

192 
	}
}

194 
	$x509wrôe_¸t_£t_auth‹ôy_key_idítifõr
–
x509wrôe_˚π
 *
˘x
 )

196 
ªt
;

197 
buf
[
POLARSSL_MPI_MAX_SIZE
 * 2 + 20];

198 *
c
 = 
buf
 + (buf);

199 
size_t
 
Àn
 = 0;

201 
	`mem£t
–
buf
, 0, (buf) );

202 
	`ASN1_CHK_ADD
–
Àn
, 
	`pk_wrôe_pubkey
–&
c
, 
buf
, 
˘x
->
issuî_key
 ) );

204 
	`sha1
–
buf
 + (bufË- 
Àn
,Üen, buf + (buf) - 20 );

205 
c
 = 
buf
 + (buf) - 20;

206 
Àn
 = 20;

208 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
buf
,Üen ) );

209 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
buf
, 
ASN1_CONTEXT_SPECIFIC
 | 0 ) );

211 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
buf
,Üen ) );

212 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
buf
, 
ASN1_CONSTRUCTED
 |

213 
ASN1_SEQUENCE
 ) );

215  
	`x509wrôe_¸t_£t_exãnsi⁄
–
˘x
, 
OID_AUTHORITY_KEY_IDENTIFIER
,

216 
	`OID_SIZE
–
OID_AUTHORITY_KEY_IDENTIFIER
 ),

217 0, 
buf
 + (bufË- 
Àn
,Üen );

218 
	}
}

221 
	$x509wrôe_¸t_£t_key_ußge
–
x509wrôe_˚π
 *
˘x
, 
key_ußge
 )

223 
buf
[4];

224 *
c
;

225 
ªt
;

227 
c
 = 
buf
 + 4;

229 if––
ªt
 = 
	`a¢1_wrôe_bô°rög
–&
c
, 
buf
, &
key_ußge
, 7 ) ) != 4 )

230 –
ªt
 );

232 
ªt
 = 
	`x509wrôe_¸t_£t_exãnsi⁄
–
˘x
, 
OID_KEY_USAGE
,

233 
	`OID_SIZE
–
OID_KEY_USAGE
 ),

234 1, 
buf
, 4 );

235 if–
ªt
 != 0 )

236 –
ªt
 );

239 
	}
}

241 
	$x509wrôe_¸t_£t_ns_˚π_ty≥
–
x509wrôe_˚π
 *
˘x
,

242 
ns_˚π_ty≥
 )

244 
buf
[4];

245 *
c
;

246 
ªt
;

248 
c
 = 
buf
 + 4;

250 if––
ªt
 = 
	`a¢1_wrôe_bô°rög
–&
c
, 
buf
, &
ns_˚π_ty≥
, 8 ) ) != 4 )

251 –
ªt
 );

253 
ªt
 = 
	`x509wrôe_¸t_£t_exãnsi⁄
–
˘x
, 
OID_NS_CERT_TYPE
,

254 
	`OID_SIZE
–
OID_NS_CERT_TYPE
 ),

255 0, 
buf
, 4 );

256 if–
ªt
 != 0 )

257 –
ªt
 );

260 
	}
}

262 
	$x509_wrôe_time
–**
p
, *
°¨t
,

263 c⁄° *
time
, 
size_t
 
size
 )

265 
ªt
;

266 
size_t
 
Àn
 = 0;

271 if–
time
[0] == '2' &&Åime[1] == '0' &&Åime [2] < '5' )

273 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_øw_buf„r
–
p
, 
°¨t
,

274 (c⁄° *Ë
time
 + 2,

275 
size
 - 2 ) );

276 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
,Üen ) );

277 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–
p
, 
°¨t
, 
ASN1_UTC_TIME
 ) );

281 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_øw_buf„r
–
p
, 
°¨t
,

282 (c⁄° *Ë
time
,

283 
size
 ) );

284 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–
p
, 
°¨t
,Üen ) );

285 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–
p
, 
°¨t
, 
ASN1_GENERALIZED_TIME
 ) );

288 –(Ë
Àn
 );

289 
	}
}

291 
x509wrôe_¸t_dî
–
x509wrôe_˚π
 *
˘x
, *
buf
, 
size_t
 
size
,

292 (*
f_∫g
)(*, *, 
size_t
),

293 *
p_∫g
 )

295 
ªt
;

296 c⁄° *
sig_oid
;

297 
size_t
 
sig_oid_Àn
 = 0;

298 *
c
, *
c2
;

299 
hash
[64];

300 
sig
[
POLARSSL_MPI_MAX_SIZE
];

301 
tmp_buf
[2048];

302 
size_t
 
sub_Àn
 = 0, 
pub_Àn
 = 0, 
sig_™d_oid_Àn
 = 0, 
sig_Àn
;

303 
size_t
 
Àn
 = 0;

304 
pk_ty≥_t
 
pk_Æg
;

309 
c
 = 
tmp_buf
 + (Åmp_buf );

312 
pk_Æg
 = 
	`pk_gë_ty≥
–
˘x
->
issuî_key
 );

313 if–
pk_Æg
 =
POLARSSL_PK_ECKEY
 )

314 
pk_Æg
 = 
POLARSSL_PK_ECDSA
;

316 if––
ªt
 = 
	`oid_gë_oid_by_sig_Æg
–
pk_Æg
, 
˘x
->
md_Æg
,

317 &
sig_oid
, &
sig_oid_Àn
 ) ) != 0 )

319 –
ªt
 );

325 
	`ASN1_CHK_ADD
–
Àn
, 
	`x509_wrôe_exãnsi⁄s
–&
c
, 
tmp_buf
, 
˘x
->
exãnsi⁄s
 ) );

326 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
tmp_buf
,Üen ) );

327 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
tmp_buf
, 
ASN1_CONSTRUCTED
 |

328 
ASN1_SEQUENCE
 ) );

329 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
tmp_buf
,Üen ) );

330 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
tmp_buf
, 
ASN1_CONTEXT_SPECIFIC
 |

331 
ASN1_CONSTRUCTED
 | 3 ) );

336 
	`ASN1_CHK_ADD
–
pub_Àn
, 
	`pk_wrôe_pubkey_dî
–
˘x
->
subje˘_key
,

337 
tmp_buf
, 
c
 -Åmp_buf ) );

338 
c
 -
pub_Àn
;

339 
Àn
 +
pub_Àn
;

344 
	`ASN1_CHK_ADD
–
Àn
, 
	`x509_wrôe_«mes
–&
c
, 
tmp_buf
, 
˘x
->
subje˘
 ) );

351 
sub_Àn
 = 0;

353 
	`ASN1_CHK_ADD
–
sub_Àn
, 
	`x509_wrôe_time
–&
c
, 
tmp_buf
, 
˘x
->
nŸ_a·î
,

354 
X509_RFC5280_UTC_TIME_LEN
 ) );

356 
	`ASN1_CHK_ADD
–
sub_Àn
, 
	`x509_wrôe_time
–&
c
, 
tmp_buf
, 
˘x
->
nŸ_bef‹e
,

357 
X509_RFC5280_UTC_TIME_LEN
 ) );

359 
Àn
 +
sub_Àn
;

360 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
tmp_buf
, 
sub_Àn
 ) );

361 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
tmp_buf
, 
ASN1_CONSTRUCTED
 |

362 
ASN1_SEQUENCE
 ) );

367 
	`ASN1_CHK_ADD
–
Àn
, 
	`x509_wrôe_«mes
–&
c
, 
tmp_buf
, 
˘x
->
issuî
 ) );

372 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Æg‹ôhm_idítifõr
–&
c
, 
tmp_buf
,

373 
sig_oid
, 
	`°æí
( sig_oid ), 0 ) );

378 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_mpi
–&
c
, 
tmp_buf
, &
˘x
->
£rül
 ) );

383 
sub_Àn
 = 0;

384 
	`ASN1_CHK_ADD
–
sub_Àn
, 
	`a¢1_wrôe_öt
–&
c
, 
tmp_buf
, 
˘x
->
vîsi⁄
 ) );

385 
Àn
 +
sub_Àn
;

386 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
tmp_buf
, 
sub_Àn
 ) );

387 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
tmp_buf
, 
ASN1_CONTEXT_SPECIFIC
 |

388 
ASN1_CONSTRUCTED
 | 0 ) );

390 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
tmp_buf
,Üen ) );

391 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
tmp_buf
, 
ASN1_CONSTRUCTED
 |

392 
ASN1_SEQUENCE
 ) );

397 
	`md
–
	`md_öfo_‰om_ty≥
–
˘x
->
md_Æg
 ), 
c
, 
Àn
, 
hash
 );

399 if––
ªt
 = 
	`pk_sign
–
˘x
->
issuî_key
, ctx->
md_Æg
, 
hash
, 0, 
sig
, &
sig_Àn
,

400 
f_∫g
, 
p_∫g
 ) ) != 0 )

402 –
ªt
 );

408 
c2
 = 
buf
 + 
size
;

409 
	`ASN1_CHK_ADD
–
sig_™d_oid_Àn
, 
	`x509_wrôe_sig
–&
c2
, 
buf
,

410 
sig_oid
, 
sig_oid_Àn
, 
sig
, 
sig_Àn
 ) );

412 
c2
 -
Àn
;

413 
	`mem˝y
–
c2
, 
c
, 
Àn
 );

415 
Àn
 +
sig_™d_oid_Àn
;

416 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c2
, 
buf
,Üen ) );

417 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c2
, 
buf
, 
ASN1_CONSTRUCTED
 |

418 
ASN1_SEQUENCE
 ) );

420 –(Ë
Àn
 );

421 
	}
}

423 
	#PEM_BEGIN_CRT
 "-----BEGIN CERTIFICATE-----\n"

	)

424 
	#PEM_END_CRT
 "-----END CERTIFICATE-----\n"

	)

426 #i‡
deföed
(
POLARSSL_PEM_WRITE_C
)

427 
x509wrôe_¸t_≥m
–
x509wrôe_˚π
 *
¸t
, *
buf
, 
size_t
 
size
,

428 (*
f_∫g
)(*, *, 
size_t
),

429 *
p_∫g
 )

431 
ªt
;

432 
ouçut_buf
[4096];

433 
size_t
 
ﬁí
 = 0;

435 if––
ªt
 = 
	`x509wrôe_¸t_dî
–
¸t
, 
ouçut_buf
, (output_buf),

436 
f_∫g
, 
p_∫g
 ) ) < 0 )

438 –
ªt
 );

441 if––
ªt
 = 
	`≥m_wrôe_buf„r
–
PEM_BEGIN_CRT
, 
PEM_END_CRT
,

442 
ouçut_buf
 + (ouçut_bufË- 
ªt
,

443 
ªt
, 
buf
, 
size
, &
ﬁí
 ) ) != 0 )

445 –
ªt
 );

449 
	}
}

	@polarssl/library/x509write_csr.c

31 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

32 
	~"pﬁ¨s¶/c⁄fig.h
"

34 #ö˛udê
POLARSSL_CONFIG_FILE


37 #i‡
deföed
(
POLARSSL_X509_CSR_WRITE_C
)

39 
	~"pﬁ¨s¶/x509_c§.h
"

40 
	~"pﬁ¨s¶/oid.h
"

41 
	~"pﬁ¨s¶/a¢1wrôe.h
"

43 #i‡
deföed
(
POLARSSL_PEM_WRITE_C
)

44 
	~"pﬁ¨s¶/≥m.h
"

47 
	~<°rög.h
>

48 
	~<°dlib.h
>

51 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

52 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

53 
	}
}

55 
	$x509wrôe_c§_öô
–
x509wrôe_c§
 *
˘x
 )

57 
	`mem£t
–
˘x
, 0, (
x509wrôe_c§
) );

58 
	}
}

60 
	$x509wrôe_c§_‰ì
–
x509wrôe_c§
 *
˘x
 )

62 
	`a¢1_‰ì_«med_d©a_li°
–&
˘x
->
subje˘
 );

63 
	`a¢1_‰ì_«med_d©a_li°
–&
˘x
->
exãnsi⁄s
 );

65 
	`pﬁ¨s¶_zîoize
–
˘x
, (
x509wrôe_c§
) );

66 
	}
}

68 
	$x509wrôe_c§_£t_md_Æg
–
x509wrôe_c§
 *
˘x
, 
md_ty≥_t
 
md_Æg
 )

70 
˘x
->
md_Æg
 = md_alg;

71 
	}
}

73 
	$x509wrôe_c§_£t_key
–
x509wrôe_c§
 *
˘x
, 
pk_c⁄ãxt
 *
key
 )

75 
˘x
->
key
 = key;

76 
	}
}

78 
	$x509wrôe_c§_£t_subje˘_«me
–
x509wrôe_c§
 *
˘x
,

79 c⁄° *
subje˘_«me
 )

81  
	`x509_°rög_to_«mes
–&
˘x
->
subje˘
, 
subje˘_«me
 );

82 
	}
}

84 
	$x509wrôe_c§_£t_exãnsi⁄
–
x509wrôe_c§
 *
˘x
,

85 c⁄° *
oid
, 
size_t
 
oid_Àn
,

86 c⁄° *
vÆ
, 
size_t
 
vÆ_Àn
 )

88  
	`x509_£t_exãnsi⁄
–&
˘x
->
exãnsi⁄s
, 
oid
, 
oid_Àn
,

89 0, 
vÆ
, 
vÆ_Àn
 );

90 
	}
}

92 
	$x509wrôe_c§_£t_key_ußge
–
x509wrôe_c§
 *
˘x
, 
key_ußge
 )

94 
buf
[4];

95 *
c
;

96 
ªt
;

98 
c
 = 
buf
 + 4;

100 if––
ªt
 = 
	`a¢1_wrôe_bô°rög
–&
c
, 
buf
, &
key_ußge
, 7 ) ) != 4 )

101 –
ªt
 );

103 
ªt
 = 
	`x509wrôe_c§_£t_exãnsi⁄
–
˘x
, 
OID_KEY_USAGE
,

104 
	`OID_SIZE
–
OID_KEY_USAGE
 ),

105 
buf
, 4 );

106 if–
ªt
 != 0 )

107 –
ªt
 );

110 
	}
}

112 
	$x509wrôe_c§_£t_ns_˚π_ty≥
–
x509wrôe_c§
 *
˘x
,

113 
ns_˚π_ty≥
 )

115 
buf
[4];

116 *
c
;

117 
ªt
;

119 
c
 = 
buf
 + 4;

121 if––
ªt
 = 
	`a¢1_wrôe_bô°rög
–&
c
, 
buf
, &
ns_˚π_ty≥
, 8 ) ) != 4 )

122 –
ªt
 );

124 
ªt
 = 
	`x509wrôe_c§_£t_exãnsi⁄
–
˘x
, 
OID_NS_CERT_TYPE
,

125 
	`OID_SIZE
–
OID_NS_CERT_TYPE
 ),

126 
buf
, 4 );

127 if–
ªt
 != 0 )

128 –
ªt
 );

131 
	}
}

133 
x509wrôe_c§_dî
–
x509wrôe_c§
 *
˘x
, *
buf
, 
size_t
 
size
,

134 (*
f_∫g
)(*, *, 
size_t
),

135 *
p_∫g
 )

137 
ªt
;

138 c⁄° *
sig_oid
;

139 
size_t
 
sig_oid_Àn
 = 0;

140 *
c
, *
c2
;

141 
hash
[64];

142 
sig
[
POLARSSL_MPI_MAX_SIZE
];

143 
tmp_buf
[2048];

144 
size_t
 
pub_Àn
 = 0, 
sig_™d_oid_Àn
 = 0, 
sig_Àn
;

145 
size_t
 
Àn
 = 0;

146 
pk_ty≥_t
 
pk_Æg
;

151 
c
 = 
tmp_buf
 + (Åmp_buf );

153 
	`ASN1_CHK_ADD
–
Àn
, 
	`x509_wrôe_exãnsi⁄s
–&
c
, 
tmp_buf
, 
˘x
->
exãnsi⁄s
 ) );

155 if–
Àn
 )

157 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
tmp_buf
,Üen ) );

158 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
tmp_buf
, 
ASN1_CONSTRUCTED
 |

159 
ASN1_SEQUENCE
 ) );

161 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
tmp_buf
,Üen ) );

162 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
tmp_buf
, 
ASN1_CONSTRUCTED
 |

163 
ASN1_SET
 ) );

165 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_oid
–&
c
, 
tmp_buf
, 
OID_PKCS9_CSR_EXT_REQ
,

166 
	`OID_SIZE
–
OID_PKCS9_CSR_EXT_REQ
 ) ) );

168 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
tmp_buf
,Üen ) );

169 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
tmp_buf
, 
ASN1_CONSTRUCTED
 |

170 
ASN1_SEQUENCE
 ) );

173 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
tmp_buf
,Üen ) );

174 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
tmp_buf
, 
ASN1_CONSTRUCTED
 |

175 
ASN1_CONTEXT_SPECIFIC
 ) );

177 
	`ASN1_CHK_ADD
–
pub_Àn
, 
	`pk_wrôe_pubkey_dî
–
˘x
->
key
,

178 
tmp_buf
, 
c
 -Åmp_buf ) );

179 
c
 -
pub_Àn
;

180 
Àn
 +
pub_Àn
;

185 
	`ASN1_CHK_ADD
–
Àn
, 
	`x509_wrôe_«mes
–&
c
, 
tmp_buf
, 
˘x
->
subje˘
 ) );

190 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_öt
–&
c
, 
tmp_buf
, 0 ) );

192 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c
, 
tmp_buf
,Üen ) );

193 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c
, 
tmp_buf
, 
ASN1_CONSTRUCTED
 |

194 
ASN1_SEQUENCE
 ) );

199 
	`md
–
	`md_öfo_‰om_ty≥
–
˘x
->
md_Æg
 ), 
c
, 
Àn
, 
hash
 );

201 
pk_Æg
 = 
	`pk_gë_ty≥
–
˘x
->
key
 );

202 if–
pk_Æg
 =
POLARSSL_PK_ECKEY
 )

203 
pk_Æg
 = 
POLARSSL_PK_ECDSA
;

205 if––
ªt
 = 
	`pk_sign
–
˘x
->
key
, ctx->
md_Æg
, 
hash
, 0, 
sig
, &
sig_Àn
,

206 
f_∫g
, 
p_∫g
 ) ) != 0 ||

207 –
ªt
 = 
	`oid_gë_oid_by_sig_Æg
–
pk_Æg
, 
˘x
->
md_Æg
,

208 &
sig_oid
, &
sig_oid_Àn
 ) ) != 0 )

210 –
ªt
 );

216 
c2
 = 
buf
 + 
size
;

217 
	`ASN1_CHK_ADD
–
sig_™d_oid_Àn
, 
	`x509_wrôe_sig
–&
c2
, 
buf
,

218 
sig_oid
, 
sig_oid_Àn
, 
sig
, 
sig_Àn
 ) );

220 
c2
 -
Àn
;

221 
	`mem˝y
–
c2
, 
c
, 
Àn
 );

223 
Àn
 +
sig_™d_oid_Àn
;

224 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_Àn
–&
c2
, 
buf
,Üen ) );

225 
	`ASN1_CHK_ADD
–
Àn
, 
	`a¢1_wrôe_èg
–&
c2
, 
buf
, 
ASN1_CONSTRUCTED
 |

226 
ASN1_SEQUENCE
 ) );

228 –(Ë
Àn
 );

229 
	}
}

231 
	#PEM_BEGIN_CSR
 "-----BEGIN CERTIFICATE REQUEST-----\n"

	)

232 
	#PEM_END_CSR
 "-----END CERTIFICATE REQUEST-----\n"

	)

234 #i‡
deföed
(
POLARSSL_PEM_WRITE_C
)

235 
x509wrôe_c§_≥m
–
x509wrôe_c§
 *
˘x
, *
buf
, 
size_t
 
size
,

236 (*
f_∫g
)(*, *, 
size_t
),

237 *
p_∫g
 )

239 
ªt
;

240 
ouçut_buf
[4096];

241 
size_t
 
ﬁí
 = 0;

243 if––
ªt
 = 
	`x509wrôe_c§_dî
–
˘x
, 
ouçut_buf
, (output_buf),

244 
f_∫g
, 
p_∫g
 ) ) < 0 )

246 –
ªt
 );

249 if––
ªt
 = 
	`≥m_wrôe_buf„r
–
PEM_BEGIN_CSR
, 
PEM_END_CSR
,

250 
ouçut_buf
 + (ouçut_bufË- 
ªt
,

251 
ªt
, 
buf
, 
size
, &
ﬁí
 ) ) != 0 )

253 –
ªt
 );

257 
	}
}

	@polarssl/library/xtea.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
POLARSSL_XTEA_C
)

34 
	~"pﬁ¨s¶/xãa.h
"

36 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

37 
	~"pﬁ¨s¶/∂©f‹m.h
"

39 
	#pﬁ¨s¶_¥ötf
 
¥ötf


	)

42 #i‡!
deföed
(
POLARSSL_XTEA_ALT
)

45 
	$pﬁ¨s¶_zîoize
–*
v
, 
size_t
 
n
 ) {

46 vﬁ©ûê*
p
 = 
v
;  
n
-- ) *p++ = 0;

47 
	}
}

52 #i‚de‡
GET_UINT32_BE


53 
	#GET_UINT32_BE
(
n
,
b
,
i
) \

55 (
n
Ë–(
uöt32_t
Ë(
b
)[(
i
) ] << 24 ) \

56 | ( (
uöt32_t
Ë(
b
)[(
i
) + 1] << 16 ) \

57 | ( (
uöt32_t
Ë(
b
)[(
i
) + 2] << 8 ) \

58 | ( (
uöt32_t
Ë(
b
)[(
i
) + 3] ); \

59 }

	)

62 #i‚de‡
PUT_UINT32_BE


63 
	#PUT_UINT32_BE
(
n
,
b
,
i
) \

65 (
b
)[(
i
Ë] = (Ë–(
n
) >> 24 ); \

66 (
b
)[(
i
Ë+ 1] = (Ë–(
n
) >> 16 ); \

67 (
b
)[(
i
Ë+ 2] = (Ë–(
n
) >> 8 ); \

68 (
b
)[(
i
Ë+ 3] = (Ë–(
n
) ); \

69 }

	)

72 
	$xãa_öô
–
xãa_c⁄ãxt
 *
˘x
 )

74 
	`mem£t
–
˘x
, 0, –
xãa_c⁄ãxt
 ) );

75 
	}
}

77 
	$xãa_‰ì
–
xãa_c⁄ãxt
 *
˘x
 )

79 if–
˘x
 =
NULL
 )

82 
	`pﬁ¨s¶_zîoize
–
˘x
, –
xãa_c⁄ãxt
 ) );

83 
	}
}

88 
	$xãa_£tup
–
xãa_c⁄ãxt
 *
˘x
, c⁄° 
key
[16] )

90 
i
;

92 
	`mem£t
–
˘x
, 0, (
xãa_c⁄ãxt
) );

94  
i
 = 0; i < 4; i++ )

96 
	`GET_UINT32_BE
–
˘x
->
k
[
i
], 
key
, i << 2 );

98 
	}
}

103 
	$xãa_¸y±_ecb
–
xãa_c⁄ãxt
 *
˘x
, 
mode
,

104 c⁄° 
öput
[8], 
ouçut
[8])

106 
uöt32_t
 *
k
, 
v0
, 
v1
, 
i
;

108 
k
 = 
˘x
->k;

110 
	`GET_UINT32_BE
–
v0
, 
öput
, 0 );

111 
	`GET_UINT32_BE
–
v1
, 
öput
, 4 );

113 if–
mode
 =
XTEA_ENCRYPT
 )

115 
uöt32_t
 
sum
 = 0, 
dñè
 = 0x9E3779B9;

117  
i
 = 0; i < 32; i++ )

119 
v0
 +(((
v1
 << 4Ë^ (v1 >> 5)Ë+ v1Ë^ (
sum
 + 
k
[sum & 3]);

120 
sum
 +
dñè
;

121 
v1
 +(((
v0
 << 4Ë^ (v0 >> 5)Ë+ v0Ë^ (
sum
 + 
k
[(sum>>11) & 3]);

126 
uöt32_t
 
dñè
 = 0x9E3779B9, 
sum
 = delta * 32;

128  
i
 = 0; i < 32; i++ )

130 
v1
 -(((
v0
 << 4Ë^ (v0 >> 5)Ë+ v0Ë^ (
sum
 + 
k
[(sum>>11) & 3]);

131 
sum
 -
dñè
;

132 
v0
 -(((
v1
 << 4Ë^ (v1 >> 5)Ë+ v1Ë^ (
sum
 + 
k
[sum & 3]);

136 
	`PUT_UINT32_BE
–
v0
, 
ouçut
, 0 );

137 
	`PUT_UINT32_BE
–
v1
, 
ouçut
, 4 );

140 
	}
}

142 #i‡
deföed
(
POLARSSL_CIPHER_MODE_CBC
)

146 
	$xãa_¸y±_cbc
–
xãa_c⁄ãxt
 *
˘x
, 
mode
, 
size_t
 
Àngth
,

147 
iv
[8], c⁄° *
öput
,

148 *
ouçut
)

150 
i
;

151 
ãmp
[8];

153 if–
Àngth
 % 8 )

154 –
POLARSSL_ERR_XTEA_INVALID_INPUT_LENGTH
 );

156 if–
mode
 =
XTEA_DECRYPT
 )

158  
Àngth
 > 0 )

160 
	`mem˝y
–
ãmp
, 
öput
, 8 );

161 
	`xãa_¸y±_ecb
–
˘x
, 
mode
, 
öput
, 
ouçut
 );

163  
i
 = 0; i < 8; i++ )

164 
ouçut
[
i
] = ()–ouçut[i] ^ 
iv
[i] );

166 
	`mem˝y
–
iv
, 
ãmp
, 8 );

168 
öput
 += 8;

169 
ouçut
 += 8;

170 
Àngth
 -= 8;

175  
Àngth
 > 0 )

177  
i
 = 0; i < 8; i++ )

178 
ouçut
[
i
] = ()–
öput
[i] ^ 
iv
[i] );

180 
	`xãa_¸y±_ecb
–
˘x
, 
mode
, 
ouçut
, output );

181 
	`mem˝y
–
iv
, 
ouçut
, 8 );

183 
öput
 += 8;

184 
ouçut
 += 8;

185 
Àngth
 -= 8;

190 
	}
}

194 #i‡
deföed
(
POLARSSL_SELF_TEST
)

196 
	~<°rög.h
>

197 
	~<°dio.h
>

203 c⁄° 
	gxãa_ã°_key
[6][16] =

219 c⁄° 
	gxãa_ã°_±
[6][8] =

229 c⁄° 
	gxãa_ã°_˘
[6][8] =

242 
	$xãa_£lf_ã°
–
vîbo£
 )

244 
i
, 
ªt
 = 0;

245 
buf
[8];

246 
xãa_c⁄ãxt
 
˘x
;

248 
	`xãa_öô
–&
˘x
 );

249  
i
 = 0; i < 6; i++ )

251 if–
vîbo£
 != 0 )

252 
	`pﬁ¨s¶_¥ötf
–" XTEAÅe° #%d: ", 
i
 + 1 );

254 
	`mem˝y
–
buf
, 
xãa_ã°_±
[
i
], 8 );

256 
	`xãa_£tup
–&
˘x
, 
xãa_ã°_key
[
i
] );

257 
	`xãa_¸y±_ecb
–&
˘x
, 
XTEA_ENCRYPT
, 
buf
, buf );

259 if–
	`memcmp
–
buf
, 
xãa_ã°_˘
[
i
], 8 ) != 0 )

261 if–
vîbo£
 != 0 )

262 
	`pﬁ¨s¶_¥ötf
( "failed\n" );

264 
ªt
 = 1;

265 
exô
;

268 if–
vîbo£
 != 0 )

269 
	`pﬁ¨s¶_¥ötf
( "passed\n" );

272 if–
vîbo£
 != 0 )

273 
	`pﬁ¨s¶_¥ötf
( "\n" );

275 
exô
:

276 
	`xãa_‰ì
–&
˘x
 );

278 –
ªt
 );

279 
	}
}

	@polarssl/programs/aes/aescrypt2.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
_WIN32
)

33 
	~<wödows.h
>

34 #i‡!
deföed
(
_WIN32_WCE
)

35 
	~<io.h
>

38 
	~<sys/ty≥s.h
>

39 
	~<uni°d.h
>

42 
	~<°rög.h
>

43 
	~<°dlib.h
>

44 
	~<°dio.h
>

45 
	~<time.h
>

47 
	~"pﬁ¨s¶/´s.h
"

48 
	~"pﬁ¨s¶/sha256.h
"

50 
	#MODE_ENCRYPT
 0

	)

51 
	#MODE_DECRYPT
 1

	)

53 
	#USAGE
 \

57 "\n"

	)

59 #i‡!
deföed
(
POLARSSL_AES_C
Ë|| !deföed(
POLARSSL_SHA256_C
)

60 
	$maö
–
¨gc
, *
¨gv
[] )

62 ((Ë
¨gc
);

63 ((Ë
¨gv
);

64 
	`¥ötf
("POLARSSL_AES_Cánd/or POLARSSL_SHA256_CÇot defined.\n");

66 
	}
}

68 
	$maö
–
¨gc
, *
¨gv
[] )

70 
ªt
 = 1;

72 
i
, 
n
;

73 
mode
, 
œ°n
;

74 
size_t
 
keyÀn
;

75 
FILE
 *
fkey
, *
fö
 = 
NULL
, *
fout
 = NULL;

77 *
p
;

78 
IV
[16];

79 
key
[512];

80 
dige°
[32];

81 
buf„r
[1024];

82 
diff
;

84 
´s_c⁄ãxt
 
´s_˘x
;

85 
sha256_c⁄ãxt
 
sha_˘x
;

87 #i‡
	`deföed
(
_WIN32_WCE
)

88 
fûesize
, 
off£t
;

89 #ñi‡
	`deföed
(
_WIN32
)

90 
LARGE_INTEGER
 
li_size
;

91 
__öt64
 
fûesize
, 
off£t
;

93 
off_t
 
fûesize
, 
off£t
;

96 
	`´s_öô
–&
´s_˘x
 );

97 
	`sha256_öô
–&
sha_˘x
 );

102 if–
¨gc
 != 5 )

104 
	`¥ötf
–
USAGE
 );

106 #i‡
	`deföed
(
_WIN32
)

107 
	`¥ötf
( "\n Press EnterÅoÉxitÅhisÖrogram.\n" );

108 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

111 
exô
;

114 
mode
 = 
	`©oi
–
¨gv
[1] );

116 if–
mode
 !
MODE_ENCRYPT
 && modê!
MODE_DECRYPT
 )

118 
	`Ârötf
–
°dîr
, "invalide operation mode\n" );

119 
exô
;

122 if–
	`°rcmp
–
¨gv
[2],árgv[3] ) == 0 )

124 
	`Ârötf
–
°dîr
, "inputánd output filenames must differ\n" );

125 
exô
;

128 if––
fö
 = 
	`f›í
–
¨gv
[2], "rb" ) ) =
NULL
 )

130 
	`Ârötf
–
°dîr
, "f›í(%s,rbËÁûed\n", 
¨gv
[2] );

131 
exô
;

134 if––
fout
 = 
	`f›í
–
¨gv
[3], "wb+" ) ) =
NULL
 )

136 
	`Ârötf
–
°dîr
, "f›í(%s,wb+ËÁûed\n", 
¨gv
[3] );

137 
exô
;

143 if––
fkey
 = 
	`f›í
–
¨gv
[4], "rb" ) ) !
NULL
 )

145 
keyÀn
 = 
	`‰ód
–
key
, 1, –key ), 
fkey
 );

146 
	`f˛o£
–
fkey
 );

150 if–
	`memcmp
–
¨gv
[4], "hex:", 4 ) == 0 )

152 
p
 = &
¨gv
[4][4];

153 
keyÀn
 = 0;

155  
	`ssˇnf
–
p
, "%02X", &
n
 ) > 0 &&

156 
keyÀn
 < (Ë–
key
 ) )

158 
key
[
keyÀn
++] = (Ë
n
;

159 
p
 += 2;

164 
keyÀn
 = 
	`°æí
–
¨gv
[4] );

166 if–
keyÀn
 > (Ë–
key
 ) )

167 
keyÀn
 = (Ë–
key
 );

169 
	`mem˝y
–
key
, 
¨gv
[4], 
keyÀn
 );

173 
	`mem£t
–
¨gv
[4], 0, 
	`°æí
(árgv[4] ) );

175 #i‡
	`deföed
(
_WIN32_WCE
)

176 
fûesize
 = 
	`f£ek
–
fö
, 0L, 
SEEK_END
 );

178 #i‡
	`deföed
(
_WIN32
)

182 
li_size
.
QuadP¨t
 = 0;

183 
li_size
.
LowP¨t
 =

184 
	`SëFûePoöãr
–(
HANDLE
Ë
	`_gë_osfh™dÀ
–
	`_fûío
–
fö
 ) ),

185 
li_size
.
LowP¨t
, &li_size.
HighP¨t
, 
FILE_END
 );

187 if–
li_size
.
LowP¨t
 =0xFFFFFFFF && 
	`GëLa°Eº‹
(Ë!
NO_ERROR
 )

189 
	`Ârötf
–
°dîr
, "SetFilePointer(0,FILE_END) failed\n" );

190 
exô
;

193 
fûesize
 = 
li_size
.
QuadP¨t
;

195 if––
fûesize
 = 
	`l£ek
–
	`fûío
–
fö
 ), 0, 
SEEK_END
 ) ) < 0 )

197 
	`≥º‹
( "lseek" );

198 
exô
;

203 if–
	`f£ek
–
fö
, 0, 
SEEK_SET
 ) < 0 )

205 
	`Ârötf
–
°dîr
, "fseek(0,SEEK_SET) failed\n" );

206 
exô
;

209 if–
mode
 =
MODE_ENCRYPT
 )

215  
i
 = 0; i < 8; i++ )

216 
buf„r
[
i
] = ()–
fûesize
 >> ( i << 3 ) );

218 
p
 = 
¨gv
[2];

220 
	`sha256_°¨ts
–&
sha_˘x
, 0 );

221 
	`sha256_upd©e
–&
sha_˘x
, 
buf„r
, 8 );

222 
	`sha256_upd©e
–&
sha_˘x
, (*Ë
p
, 
	`°æí
(Ö ) );

223 
	`sha256_föish
–&
sha_˘x
, 
dige°
 );

225 
	`mem˝y
–
IV
, 
dige°
, 16 );

231 
œ°n
 = ()–
fûesize
 & 0x0F );

233 
IV
[15] = ()

234 ––
IV
[15] & 0xF0 ) | 
œ°n
 );

239 if–
	`fwrôe
–
IV
, 1, 16, 
fout
 ) != 16 )

241 
	`Ârötf
–
°dîr
, "fwrite(%d bytes) failed\n", 16 );

242 
exô
;

249 
	`mem£t
–
dige°
, 0, 32 );

250 
	`mem˝y
–
dige°
, 
IV
, 16 );

252  
i
 = 0; i < 8192; i++ )

254 
	`sha256_°¨ts
–&
sha_˘x
, 0 );

255 
	`sha256_upd©e
–&
sha_˘x
, 
dige°
, 32 );

256 
	`sha256_upd©e
–&
sha_˘x
, 
key
, 
keyÀn
 );

257 
	`sha256_föish
–&
sha_˘x
, 
dige°
 );

260 
	`mem£t
–
key
, 0, ( key ) );

261 
	`´s_£tkey_íc
–&
´s_˘x
, 
dige°
, 256 );

262 
	`sha256_hmac_°¨ts
–&
sha_˘x
, 
dige°
, 32, 0 );

267  
off£t
 = 0; off£à< 
fûesize
; offset += 16 )

269 
n
 = ( 
fûesize
 - 
off£t
 > 16 ) ? 16 : ()

270 –
fûesize
 - 
off£t
 );

272 if–
	`‰ód
–
buf„r
, 1, 
n
, 
fö
 ) !(
size_t
)Ç )

274 
	`Ârötf
–
°dîr
, "‰ód(%d byãsËÁûed\n", 
n
 );

275 
exô
;

278  
i
 = 0; i < 16; i++ )

279 
buf„r
[
i
] = ()–buf„r[i] ^ 
IV
[i] );

281 
	`´s_¸y±_ecb
–&
´s_˘x
, 
AES_ENCRYPT
, 
buf„r
, buffer );

282 
	`sha256_hmac_upd©e
–&
sha_˘x
, 
buf„r
, 16 );

284 if–
	`fwrôe
–
buf„r
, 1, 16, 
fout
 ) != 16 )

286 
	`Ârötf
–
°dîr
, "fwrite(%d bytes) failed\n", 16 );

287 
exô
;

290 
	`mem˝y
–
IV
, 
buf„r
, 16 );

296 
	`sha256_hmac_föish
–&
sha_˘x
, 
dige°
 );

298 if–
	`fwrôe
–
dige°
, 1, 32, 
fout
 ) != 32 )

300 
	`Ârötf
–
°dîr
, "fwrite(%d bytes) failed\n", 16 );

301 
exô
;

305 if–
mode
 =
MODE_DECRYPT
 )

307 
tmp
[16];

318 if–
fûesize
 < 48 )

320 
	`Ârötf
–
°dîr
, "FileÅoo shortÅo beÉncrypted.\n" );

321 
exô
;

324 if––
fûesize
 & 0x0F ) != 0 )

326 
	`Ârötf
–
°dîr
, "File sizeÇotá multiple of 16.\n" );

327 
exô
;

333 
fûesize
 -= ( 16 + 32 );

338 if–
	`‰ód
–
buf„r
, 1, 16, 
fö
 ) != 16 )

340 
	`Ârötf
–
°dîr
, "fread(%d bytes) failed\n", 16 );

341 
exô
;

344 
	`mem˝y
–
IV
, 
buf„r
, 16 );

345 
œ°n
 = 
IV
[15] & 0x0F;

351 
	`mem£t
–
dige°
, 0, 32 );

352 
	`mem˝y
–
dige°
, 
IV
, 16 );

354  
i
 = 0; i < 8192; i++ )

356 
	`sha256_°¨ts
–&
sha_˘x
, 0 );

357 
	`sha256_upd©e
–&
sha_˘x
, 
dige°
, 32 );

358 
	`sha256_upd©e
–&
sha_˘x
, 
key
, 
keyÀn
 );

359 
	`sha256_föish
–&
sha_˘x
, 
dige°
 );

362 
	`mem£t
–
key
, 0, ( key ) );

363 
	`´s_£tkey_dec
–&
´s_˘x
, 
dige°
, 256 );

364 
	`sha256_hmac_°¨ts
–&
sha_˘x
, 
dige°
, 32, 0 );

369  
off£t
 = 0; off£à< 
fûesize
; offset += 16 )

371 if–
	`‰ód
–
buf„r
, 1, 16, 
fö
 ) != 16 )

373 
	`Ârötf
–
°dîr
, "fread(%d bytes) failed\n", 16 );

374 
exô
;

377 
	`mem˝y
–
tmp
, 
buf„r
, 16 );

379 
	`sha256_hmac_upd©e
–&
sha_˘x
, 
buf„r
, 16 );

380 
	`´s_¸y±_ecb
–&
´s_˘x
, 
AES_DECRYPT
, 
buf„r
, buffer );

382  
i
 = 0; i < 16; i++ )

383 
buf„r
[
i
] = ()–buf„r[i] ^ 
IV
[i] );

385 
	`mem˝y
–
IV
, 
tmp
, 16 );

387 
n
 = ( 
œ°n
 > 0 && 
off£t
 =
fûesize
 - 16 )

388 ? 
œ°n
 : 16;

390 if–
	`fwrôe
–
buf„r
, 1, 
n
, 
fout
 ) !(
size_t
)Ç )

392 
	`Ârötf
–
°dîr
, "fwrôe(%d byãsËÁûed\n", 
n
 );

393 
exô
;

400 
	`sha256_hmac_föish
–&
sha_˘x
, 
dige°
 );

402 if–
	`‰ód
–
buf„r
, 1, 32, 
fö
 ) != 32 )

404 
	`Ârötf
–
°dîr
, "fread(%d bytes) failed\n", 32 );

405 
exô
;

409 
diff
 = 0;

410  
i
 = 0; i < 32; i++ )

411 
diff
 |
dige°
[
i
] ^ 
buf„r
[i];

413 if–
diff
 != 0 )

415 
	`Ârötf
–
°dîr
, "HMAC check failed: wrong key, "

417 
exô
;

421 
ªt
 = 0;

423 
exô
:

424 if–
fö
 )

425 
	`f˛o£
–
fö
 );

426 if–
fout
 )

427 
	`f˛o£
–
fout
 );

429 
	`mem£t
–
buf„r
, 0, ( buffer ) );

430 
	`mem£t
–
dige°
, 0, ( digest ) );

432 
	`´s_‰ì
–&
´s_˘x
 );

433 
	`sha256_‰ì
–&
sha_˘x
 );

435 –
ªt
 );

436 
	}
}

	@polarssl/programs/aes/crypt_and_hash.c

27 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

28 
	~"pﬁ¨s¶/c⁄fig.h
"

30 #ö˛udê
POLARSSL_CONFIG_FILE


33 #i‡
deföed
(
_WIN32
)

34 
	~<wödows.h
>

35 #i‡!
deföed
(
_WIN32_WCE
)

36 
	~<io.h
>

39 
	~<sys/ty≥s.h
>

40 
	~<uni°d.h
>

43 
	~<°rög.h
>

44 
	~<°dlib.h
>

45 
	~<°dio.h
>

46 
	~<time.h
>

48 
	~"pﬁ¨s¶/cùhî.h
"

49 
	~"pﬁ¨s¶/md.h
"

51 
	#MODE_ENCRYPT
 0

	)

52 
	#MODE_DECRYPT
 1

	)

54 
	#USAGE
 \

58 "\n"

	)

60 #i‡!
deföed
(
POLARSSL_CIPHER_C
Ë|| !deföed(
POLARSSL_MD_C
)

61 
	$maö
–
¨gc
, *
¨gv
[] )

63 ((Ë
¨gc
);

64 ((Ë
¨gv
);

66 
	`¥ötf
("POLARSSL_CIPHER_Cánd/or POLARSSL_MD_CÇot defined.\n");

68 
	}
}

70 
	$maö
–
¨gc
, *
¨gv
[] )

72 
ªt
 = 1, 
i
, 
n
;

73 
mode
, 
œ°n
;

74 
size_t
 
keyÀn
, 
ûí
, 
ﬁí
;

75 
FILE
 *
fkey
, *
fö
 = 
NULL
, *
fout
 = NULL;

77 *
p
;

78 
IV
[16];

79 
key
[512];

80 
dige°
[
POLARSSL_MD_MAX_SIZE
];

81 
buf„r
[1024];

82 
ouçut
[1024];

83 
diff
;

85 c⁄° 
cùhî_öfo_t
 *
cùhî_öfo
;

86 c⁄° 
md_öfo_t
 *
md_öfo
;

87 
cùhî_c⁄ãxt_t
 
cùhî_˘x
;

88 
md_c⁄ãxt_t
 
md_˘x
;

89 #i‡
	`deföed
(
_WIN32_WCE
)

90 
fûesize
, 
off£t
;

91 #ñi‡
	`deföed
(
_WIN32
)

92 
LARGE_INTEGER
 
li_size
;

93 
__öt64
 
fûesize
, 
off£t
;

95 
off_t
 
fûesize
, 
off£t
;

98 
	`cùhî_öô
–&
cùhî_˘x
 );

99 
	`md_öô
–&
md_˘x
 );

104 if–
¨gc
 != 7 )

106 c⁄° *
li°
;

108 
	`¥ötf
–
USAGE
 );

110 
	`¥ötf
( "Available ciphers:\n" );

111 
li°
 = 
	`cùhî_li°
();

112  *
li°
 )

114 
cùhî_öfo
 = 
	`cùhî_öfo_‰om_ty≥
–*
li°
 );

115 
	`¥ötf
–" %s\n", 
cùhî_öfo
->
«me
 );

116 
li°
++;

119 
	`¥ötf
( "\nAvailable message digests:\n" );

120 
li°
 = 
	`md_li°
();

121  *
li°
 )

123 
md_öfo
 = 
	`md_öfo_‰om_ty≥
–*
li°
 );

124 
	`¥ötf
–" %s\n", 
md_öfo
->
«me
 );

125 
li°
++;

128 #i‡
	`deföed
(
_WIN32
)

129 
	`¥ötf
( "\n Press EnterÅoÉxitÅhisÖrogram.\n" );

130 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

133 
exô
;

136 
mode
 = 
	`©oi
–
¨gv
[1] );

138 if–
mode
 !
MODE_ENCRYPT
 && modê!
MODE_DECRYPT
 )

140 
	`Ârötf
–
°dîr
, "invalid operation mode\n" );

141 
exô
;

144 if–
	`°rcmp
–
¨gv
[2],árgv[3] ) == 0 )

146 
	`Ârötf
–
°dîr
, "inputánd output filenames must differ\n" );

147 
exô
;

150 if––
fö
 = 
	`f›í
–
¨gv
[2], "rb" ) ) =
NULL
 )

152 
	`Ârötf
–
°dîr
, "f›í(%s,rbËÁûed\n", 
¨gv
[2] );

153 
exô
;

156 if––
fout
 = 
	`f›í
–
¨gv
[3], "wb+" ) ) =
NULL
 )

158 
	`Ârötf
–
°dîr
, "f›í(%s,wb+ËÁûed\n", 
¨gv
[3] );

159 
exô
;

165 
cùhî_öfo
 = 
	`cùhî_öfo_‰om_°rög
–
¨gv
[4] );

166 if–
cùhî_öfo
 =
NULL
 )

168 
	`Ârötf
–
°dîr
, "Cùhî '%s'ÇŸ found\n", 
¨gv
[4] );

169 
exô
;

171 if––
ªt
 = 
	`cùhî_öô_˘x
–&
cùhî_˘x
, 
cùhî_öfo
) ) != 0 )

173 
	`Ârötf
–
°dîr
, "cipher_init_ctx failed\n" );

174 
exô
;

177 
md_öfo
 = 
	`md_öfo_‰om_°rög
–
¨gv
[5] );

178 if–
md_öfo
 =
NULL
 )

180 
	`Ârötf
–
°dîr
, "MesßgêDige° '%s'ÇŸ found\n", 
¨gv
[5] );

181 
exô
;

183 
	`md_öô_˘x
–&
md_˘x
, 
md_öfo
);

188 if––
fkey
 = 
	`f›í
–
¨gv
[6], "rb" ) ) !
NULL
 )

190 
keyÀn
 = 
	`‰ód
–
key
, 1, –key ), 
fkey
 );

191 
	`f˛o£
–
fkey
 );

195 if–
	`memcmp
–
¨gv
[6], "hex:", 4 ) == 0 )

197 
p
 = &
¨gv
[6][4];

198 
keyÀn
 = 0;

200  
	`ssˇnf
–
p
, "%02X", &
n
 ) > 0 &&

201 
keyÀn
 < (Ë–
key
 ) )

203 
key
[
keyÀn
++] = (Ë
n
;

204 
p
 += 2;

209 
keyÀn
 = 
	`°æí
–
¨gv
[6] );

211 if–
keyÀn
 > (Ë–
key
 ) )

212 
keyÀn
 = (Ë–
key
 );

214 
	`mem˝y
–
key
, 
¨gv
[6], 
keyÀn
 );

218 
	`mem£t
–
¨gv
[6], 0, 
	`°æí
(árgv[6] ) );

220 #i‡
	`deföed
(
_WIN32_WCE
)

221 
fûesize
 = 
	`f£ek
–
fö
, 0L, 
SEEK_END
 );

223 #i‡
	`deföed
(
_WIN32
)

227 
li_size
.
QuadP¨t
 = 0;

228 
li_size
.
LowP¨t
 =

229 
	`SëFûePoöãr
–(
HANDLE
Ë
	`_gë_osfh™dÀ
–
	`_fûío
–
fö
 ) ),

230 
li_size
.
LowP¨t
, &li_size.
HighP¨t
, 
FILE_END
 );

232 if–
li_size
.
LowP¨t
 =0xFFFFFFFF && 
	`GëLa°Eº‹
(Ë!
NO_ERROR
 )

234 
	`Ârötf
–
°dîr
, "SetFilePointer(0,FILE_END) failed\n" );

235 
exô
;

238 
fûesize
 = 
li_size
.
QuadP¨t
;

240 if––
fûesize
 = 
	`l£ek
–
	`fûío
–
fö
 ), 0, 
SEEK_END
 ) ) < 0 )

242 
	`≥º‹
( "lseek" );

243 
exô
;

248 if–
	`f£ek
–
fö
, 0, 
SEEK_SET
 ) < 0 )

250 
	`Ârötf
–
°dîr
, "fseek(0,SEEK_SET) failed\n" );

251 
exô
;

254 if–
mode
 =
MODE_ENCRYPT
 )

260  
i
 = 0; i < 8; i++ )

261 
buf„r
[
i
] = ()–
fûesize
 >> ( i << 3 ) );

263 
p
 = 
¨gv
[2];

265 
	`md_°¨ts
–&
md_˘x
 );

266 
	`md_upd©e
–&
md_˘x
, 
buf„r
, 8 );

267 
	`md_upd©e
–&
md_˘x
, (*Ë
p
, 
	`°æí
(Ö ) );

268 
	`md_föish
–&
md_˘x
, 
dige°
 );

270 
	`mem˝y
–
IV
, 
dige°
, 16 );

276 
œ°n
 = ()–
fûesize
 & 0x0F );

278 
IV
[15] = ()

279 ––
IV
[15] & 0xF0 ) | 
œ°n
 );

284 if–
	`fwrôe
–
IV
, 1, 16, 
fout
 ) != 16 )

286 
	`Ârötf
–
°dîr
, "fwrite(%d bytes) failed\n", 16 );

287 
exô
;

294 
	`mem£t
–
dige°
, 0, 32 );

295 
	`mem˝y
–
dige°
, 
IV
, 16 );

297  
i
 = 0; i < 8192; i++ )

299 
	`md_°¨ts
–&
md_˘x
 );

300 
	`md_upd©e
–&
md_˘x
, 
dige°
, 32 );

301 
	`md_upd©e
–&
md_˘x
, 
key
, 
keyÀn
 );

302 
	`md_föish
–&
md_˘x
, 
dige°
 );

306 
	`mem£t
–
key
, 0, ( key ) );

308 if–
	`cùhî_£tkey
–&
cùhî_˘x
, 
dige°
, 
cùhî_öfo
->
key_Àngth
,

309 
POLARSSL_ENCRYPT
 ) != 0 )

311 
	`Ârötf
–
°dîr
, "cipher_setkey()ÑeturnedÉrror\n");

312 
exô
;

314 if–
	`cùhî_£t_iv
–&
cùhî_˘x
, 
IV
, 16 ) != 0 )

316 
	`Ârötf
–
°dîr
, "cipher_set_iv()ÑeturnedÉrror\n");

317 
exô
;

319 if–
	`cùhî_ª£t
–&
cùhî_˘x
 ) != 0 )

321 
	`Ârötf
–
°dîr
, "cipher_reset()ÑeturnedÉrror\n");

322 
exô
;

325 
	`md_hmac_°¨ts
–&
md_˘x
, 
dige°
, 32 );

330  
off£t
 = 0; off£à< 
fûesize
; off£à+
	`cùhî_gë_block_size
–&
cùhî_˘x
 ) )

332 
ûí
 = ( (Ë
fûesize
 - 
off£t
 > 
	`cùhî_gë_block_size
–&
cùhî_˘x
 ) ) ?

333 
	`cùhî_gë_block_size
–&
cùhî_˘x
 ) : (Ë–
fûesize
 - 
off£t
 );

335 if–
	`‰ód
–
buf„r
, 1, 
ûí
, 
fö
 ) != ilen )

337 
	`Ârötf
–
°dîr
, "‰ód(%ld byãsËÁûed\n", (Ë
ûí
 );

338 
exô
;

341 if–
	`cùhî_upd©e
–&
cùhî_˘x
, 
buf„r
, 
ûí
, 
ouçut
, &
ﬁí
 ) != 0 )

343 
	`Ârötf
–
°dîr
, "cipher_update()ÑeturnedÉrror\n");

344 
exô
;

347 
	`md_hmac_upd©e
–&
md_˘x
, 
ouçut
, 
ﬁí
 );

349 if–
	`fwrôe
–
ouçut
, 1, 
ﬁí
, 
fout
 ) != olen )

351 
	`Ârötf
–
°dîr
, "fwrôe(%ld byãsËÁûed\n", (Ë
ﬁí
 );

352 
exô
;

356 if–
	`cùhî_föish
–&
cùhî_˘x
, 
ouçut
, &
ﬁí
 ) != 0 )

358 
	`Ârötf
–
°dîr
, "cipher_finish()ÑeturnedÉrror\n" );

359 
exô
;

361 
	`md_hmac_upd©e
–&
md_˘x
, 
ouçut
, 
ﬁí
 );

363 if–
	`fwrôe
–
ouçut
, 1, 
ﬁí
, 
fout
 ) != olen )

365 
	`Ârötf
–
°dîr
, "fwrôe(%ld byãsËÁûed\n", (Ë
ﬁí
 );

366 
exô
;

372 
	`md_hmac_föish
–&
md_˘x
, 
dige°
 );

374 if–
	`fwrôe
–
dige°
, 1, 
	`md_gë_size
–
md_öfo
 ), 
fout
 ) != md_get_size( md_info ) )

376 
	`Ârötf
–
°dîr
, "fwrôe(%d byãsËÁûed\n", 
	`md_gë_size
–
md_öfo
 ) );

377 
exô
;

381 if–
mode
 =
MODE_DECRYPT
 )

392 if–
fûesize
 < 16 + 
	`md_gë_size
–
md_öfo
 ) )

394 
	`Ârötf
–
°dîr
, "FileÅoo shortÅo beÉncrypted.\n" );

395 
exô
;

398 if–––
fûesize
 - 
	`md_gë_size
–
md_öfo
 ) ) %

399 
	`cùhî_gë_block_size
–&
cùhî_˘x
 ) ) != 0 )

401 
	`Ârötf
–
°dîr
, "File contentÇotá multiple ofÅhe block size (%d).\n",

402 
	`cùhî_gë_block_size
–&
cùhî_˘x
 ));

403 
exô
;

409 
fûesize
 -–16 + 
	`md_gë_size
–
md_öfo
 ) );

414 if–
	`‰ód
–
buf„r
, 1, 16, 
fö
 ) != 16 )

416 
	`Ârötf
–
°dîr
, "fread(%d bytes) failed\n", 16 );

417 
exô
;

420 
	`mem˝y
–
IV
, 
buf„r
, 16 );

421 
œ°n
 = 
IV
[15] & 0x0F;

427 
	`mem£t
–
dige°
, 0, 32 );

428 
	`mem˝y
–
dige°
, 
IV
, 16 );

430  
i
 = 0; i < 8192; i++ )

432 
	`md_°¨ts
–&
md_˘x
 );

433 
	`md_upd©e
–&
md_˘x
, 
dige°
, 32 );

434 
	`md_upd©e
–&
md_˘x
, 
key
, 
keyÀn
 );

435 
	`md_föish
–&
md_˘x
, 
dige°
 );

438 
	`mem£t
–
key
, 0, ( key ) );

440 if–
	`cùhî_£tkey
–&
cùhî_˘x
, 
dige°
, 
cùhî_öfo
->
key_Àngth
,

441 
POLARSSL_DECRYPT
 ) != 0 )

443 
	`Ârötf
–
°dîr
, "cipher_setkey()ÑeturnedÉrror\n" );

444 
exô
;

447 if–
	`cùhî_£t_iv
–&
cùhî_˘x
, 
IV
, 16 ) != 0 )

449 
	`Ârötf
–
°dîr
, "cipher_set_iv()ÑeturnedÉrror\n" );

450 
exô
;

453 if–
	`cùhî_ª£t
–&
cùhî_˘x
 ) != 0 )

455 
	`Ârötf
–
°dîr
, "cipher_reset()ÑeturnedÉrror\n" );

456 
exô
;

459 
	`md_hmac_°¨ts
–&
md_˘x
, 
dige°
, 32 );

464  
off£t
 = 0; off£à< 
fûesize
; off£à+
	`cùhî_gë_block_size
–&
cùhî_˘x
 ) )

466 if–
	`‰ód
–
buf„r
, 1, 
	`cùhî_gë_block_size
–&
cùhî_˘x
 ), 
fö
 ) !=

467 (
size_t
Ë
	`cùhî_gë_block_size
–&
cùhî_˘x
 ) )

469 
	`Ârötf
–
°dîr
, "fread(%d bytes) failed\n",

470 
	`cùhî_gë_block_size
–&
cùhî_˘x
 ) );

471 
exô
;

474 
	`md_hmac_upd©e
–&
md_˘x
, 
buf„r
, 
	`cùhî_gë_block_size
–&
cùhî_˘x
 ) );

475 if–
	`cùhî_upd©e
–&
cùhî_˘x
, 
buf„r
,

476 
	`cùhî_gë_block_size
–&
cùhî_˘x
 ),

477 
ouçut
, &
ﬁí
 ) != 0 )

479 
	`Ârötf
–
°dîr
, "cipher_update()ÑeturnedÉrror\n" );

480 
exô
;

483 if–
	`fwrôe
–
ouçut
, 1, 
ﬁí
, 
fout
 ) != olen )

485 
	`Ârötf
–
°dîr
, "fwrôe(%ld byãsËÁûed\n", (Ë
ﬁí
 );

486 
exô
;

493 
	`md_hmac_föish
–&
md_˘x
, 
dige°
 );

495 if–
	`‰ód
–
buf„r
, 1, 
	`md_gë_size
–
md_öfo
 ), 
fö
 ) != md_get_size( md_info ) )

497 
	`Ârötf
–
°dîr
, "‰ód(%d byãsËÁûed\n", 
	`md_gë_size
–
md_öfo
 ) );

498 
exô
;

502 
diff
 = 0;

503  
i
 = 0; i < 
	`md_gë_size
–
md_öfo
 ); i++ )

504 
diff
 |
dige°
[
i
] ^ 
buf„r
[i];

506 if–
diff
 != 0 )

508 
	`Ârötf
–
°dîr
, "HMAC check failed: wrong key, "

510 
exô
;

516 
	`cùhî_föish
–&
cùhî_˘x
, 
ouçut
, &
ﬁí
 );

518 if–
	`fwrôe
–
ouçut
, 1, 
ﬁí
, 
fout
 ) != olen )

520 
	`Ârötf
–
°dîr
, "fwrôe(%ld byãsËÁûed\n", (Ë
ﬁí
 );

521 
exô
;

525 
ªt
 = 0;

527 
exô
:

528 if–
fö
 )

529 
	`f˛o£
–
fö
 );

530 if–
fout
 )

531 
	`f˛o£
–
fout
 );

533 
	`mem£t
–
buf„r
, 0, ( buffer ) );

534 
	`mem£t
–
dige°
, 0, ( digest ) );

536 
	`cùhî_‰ì
–&
cùhî_˘x
 );

537 
	`md_‰ì
–&
md_˘x
 );

539 –
ªt
 );

540 
	}
}

	@polarssl/programs/hash/generic_sum.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

35 
	~"pﬁ¨s¶/md.h
"

37 #i‡!
deföed
(
POLARSSL_MD_C
)

38 
	$maö
–
¨gc
, *
¨gv
[] )

40 ((Ë
¨gc
);

41 ((Ë
¨gv
);

43 
	`¥ötf
("POLARSSL_MD_CÇot defined.\n");

45 
	}
}

47 
	$gíîic_wøµî
–c⁄° 
md_öfo_t
 *
md_öfo
, *
fûíame
, *
sum
 )

49 
ªt
 = 
	`md_fûe
–
md_öfo
, 
fûíame
, 
sum
 );

51 if–
ªt
 == 1 )

52 
	`Ârötf
–
°dîr
, "ÁûedÅÿ›í: %s\n", 
fûíame
 );

54 if–
ªt
 == 2 )

55 
	`Ârötf
–
°dîr
, "ÁûedÅÿªad: %s\n", 
fûíame
 );

57 –
ªt
 );

58 
	}
}

60 
	$gíîic_¥öt
–c⁄° 
md_öfo_t
 *
md_öfo
, *
fûíame
 )

62 
i
;

63 
sum
[
POLARSSL_MD_MAX_SIZE
];

65 if–
	`gíîic_wøµî
–
md_öfo
, 
fûíame
, 
sum
 ) != 0 )

68  
i
 = 0; i < 
md_öfo
->
size
; i++ )

69 
	`¥ötf
–"%02x", 
sum
[
i
] );

71 
	`¥ötf
–" %s\n", 
fûíame
 );

73 
	}
}

75 
	$gíîic_check
–c⁄° 
md_öfo_t
 *
md_öfo
, *
fûíame
 )

77 
i
;

78 
size_t
 
n
;

79 
FILE
 *
f
;

80 
nb_îr1
, 
nb_îr2
;

81 
nb_tŸ1
, 
nb_tŸ2
;

82 
sum
[
POLARSSL_MD_MAX_SIZE
];

83 
buf
[
POLARSSL_MD_MAX_SIZE
 * 2 + 1], 
löe
[1024];

84 
diff
;

86 if––
f
 = 
	`f›í
–
fûíame
, "rb" ) ) =
NULL
 )

88 
	`¥ötf
–"ÁûedÅÿ›í: %s\n", 
fûíame
 );

92 
nb_îr1
 = 
nb_îr2
 = 0;

93 
nb_tŸ1
 = 
nb_tŸ2
 = 0;

95 
	`mem£t
–
löe
, 0, (Üine ) );

97 
n
 = –
löe
 );

99  
	`fgës
–
löe
, (Ë
n
 - 1, 
f
 ) !
NULL
 )

101 
n
 = 
	`°æí
–
löe
 );

103 if–
n
 < (
size_t
Ë2 * 
md_öfo
->
size
 + 4 )

105 
	`¥ötf
("Nÿ'%s' hash found o¿löe.\n", 
md_öfo
->
«me
);

109 if–
löe
[2 * 
md_öfo
->
size
] != ' ' ||Üine[2 * md_info->size + 1] != ' ' )

111 
	`¥ötf
("Nÿ'%s' hash found o¿löe.\n", 
md_öfo
->
«me
);

115 if–
löe
[
n
 - 1] == '\n' ) {Ç--;Üine[n] = '\0'; }

116 if–
löe
[
n
 - 1] == '\r' ) {Ç--;Üine[n] = '\0'; }

118 
nb_tŸ1
++;

120 if–
	`gíîic_wøµî
–
md_öfo
, 
löe
 + 2 + 2 * md_öfo->
size
, 
sum
 ) != 0 )

122 
nb_îr1
++;

126 
nb_tŸ2
++;

128  
i
 = 0; i < 
md_öfo
->
size
; i++ )

129 
	`•rötf
–
buf
 + 
i
 * 2, "%02x", 
sum
[i] );

132 
diff
 = 0;

133  
i
 = 0; i < 2 * 
md_öfo
->
size
; i++ )

134 
diff
 |
löe
[
i
] ^ 
buf
[i];

136 if–
diff
 != 0 )

138 
nb_îr2
++;

139 
	`Ârötf
–
°dîr
, "wr⁄g checksum: %s\n", 
löe
 + 66 );

142 
n
 = –
löe
 );

145 if–
nb_îr1
 != 0 )

147 
	`¥ötf
( "WARNING: %d (out of %d) input files could "

148 "nŸ bêªad\n", 
nb_îr1
, 
nb_tŸ1
 );

151 if–
nb_îr2
 != 0 )

153 
	`¥ötf
( "WARNING: %d (out of %d) computed checksums did "

154 "nŸ m©ch\n", 
nb_îr2
, 
nb_tŸ2
 );

157 
	`f˛o£
–
f
 );

159 –
nb_îr1
 !0 || 
nb_îr2
 != 0 );

160 
	}
}

162 
	$maö
–
¨gc
, *
¨gv
[] )

164 
ªt
, 
i
;

165 c⁄° 
md_öfo_t
 *
md_öfo
;

166 
md_c⁄ãxt_t
 
md_˘x
;

168 
	`md_öô
–&
md_˘x
 );

170 if–
¨gc
 == 1 )

172 c⁄° *
li°
;

174 
	`¥ötf
( "print mode: generic_sum <md> <file> <file> ...\n" );

175 
	`¥ötf
( "check mode: generic_sum <md> -c <checksum file>\n" );

177 
	`¥ötf
( "\nAvailable message digests:\n" );

178 
li°
 = 
	`md_li°
();

179  *
li°
 )

181 
md_öfo
 = 
	`md_öfo_‰om_ty≥
–*
li°
 );

182 
	`¥ötf
–" %s\n", 
md_öfo
->
«me
 );

183 
li°
++;

186 #i‡
	`deföed
(
_WIN32
)

187 
	`¥ötf
( "\n Press EnterÅoÉxitÅhisÖrogram.\n" );

188 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

197 
md_öfo
 = 
	`md_öfo_‰om_°rög
–
¨gv
[1] );

198 if–
md_öfo
 =
NULL
 )

200 
	`Ârötf
–
°dîr
, "MesßgêDige° '%s'ÇŸ found\n", 
¨gv
[1] );

203 if–
	`md_öô_˘x
–&
md_˘x
, 
md_öfo
) )

205 
	`Ârötf
–
°dîr
, "FailedÅo initialize context.\n" );

209 
ªt
 = 0;

210 if–
¨gc
 =4 && 
	`°rcmp
–"-c", 
¨gv
[2] ) == 0 )

212 
ªt
 |
	`gíîic_check
–
md_öfo
, 
¨gv
[3] );

213 
exô
;

216  
i
 = 2; i < 
¨gc
; i++ )

217 
ªt
 |
	`gíîic_¥öt
–
md_öfo
, 
¨gv
[
i
] );

219 
exô
:

220 
	`md_‰ì
–&
md_˘x
 );

222 –
ªt
 );

223 
	}
}

	@polarssl/programs/hash/hello.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°dio.h
>

34 
	~"pﬁ¨s¶/md5.h
"

36 #i‡!
deföed
(
POLARSSL_MD5_C
)

37 
	$maö
–
¨gc
, *
¨gv
[] )

39 ((Ë
¨gc
);

40 ((Ë
¨gv
);

42 
	`¥ötf
("POLARSSL_MD5_CÇot defined.\n");

44 
	}
}

46 
	$maö
–
¨gc
, *
¨gv
[] )

48 
i
;

49 
dige°
[16];

50 
°r
[] = "Hello, world!";

52 ((Ë
¨gc
);

53 ((Ë
¨gv
);

55 
	`¥ötf
–"\¿ MD5('%s'Ë", 
°r
 );

57 
	`md5
–(*Ë
°r
, 13, 
dige°
 );

59  
i
 = 0; i < 16; i++ )

60 
	`¥ötf
–"%02x", 
dige°
[
i
] );

62 
	`¥ötf
( "\n\n" );

64 #i‡
	`deföed
(
_WIN32
)

65 
	`¥ötf
( " Press EnterÅoÉxitÅhisÖrogram.\n" );

66 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

70 
	}
}

	@polarssl/programs/hash/md5sum.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

35 
	~"pﬁ¨s¶/md5.h
"

37 #i‡!
deföed
(
POLARSSL_MD5_C
Ë|| !deföed(
POLARSSL_FS_IO
)

38 
	$maö
–
¨gc
, *
¨gv
[] )

40 ((Ë
¨gc
);

41 ((Ë
¨gv
);

43 
	`¥ötf
("POLARSSL_MD5_Cánd/or POLARSSL_FS_IOÇot defined.\n");

45 
	}
}

47 
	$md5_wøµî
–*
fûíame
, *
sum
 )

49 
ªt
 = 
	`md5_fûe
–
fûíame
, 
sum
 );

51 if–
ªt
 == 1 )

52 
	`Ârötf
–
°dîr
, "ÁûedÅÿ›í: %s\n", 
fûíame
 );

54 if–
ªt
 == 2 )

55 
	`Ârötf
–
°dîr
, "ÁûedÅÿªad: %s\n", 
fûíame
 );

57 –
ªt
 );

58 
	}
}

60 
	$md5_¥öt
–*
fûíame
 )

62 
i
;

63 
sum
[16];

65 if–
	`md5_wøµî
–
fûíame
, 
sum
 ) != 0 )

68  
i
 = 0; i < 16; i++ )

69 
	`¥ötf
–"%02x", 
sum
[
i
] );

71 
	`¥ötf
–" %s\n", 
fûíame
 );

73 
	}
}

75 
	$md5_check
–*
fûíame
 )

77 
i
;

78 
size_t
 
n
;

79 
FILE
 *
f
;

80 
nb_îr1
, 
nb_îr2
;

81 
nb_tŸ1
, 
nb_tŸ2
;

82 
sum
[16];

83 
buf
[33], 
löe
[1024];

84 
diff
;

86 if––
f
 = 
	`f›í
–
fûíame
, "rb" ) ) =
NULL
 )

88 
	`¥ötf
–"ÁûedÅÿ›í: %s\n", 
fûíame
 );

92 
nb_îr1
 = 
nb_îr2
 = 0;

93 
nb_tŸ1
 = 
nb_tŸ2
 = 0;

95 
	`mem£t
–
löe
, 0, (Üine ) );

97 
n
 = –
löe
 );

99  
	`fgës
–
löe
, (Ë
n
 - 1, 
f
 ) !
NULL
 )

101 
n
 = 
	`°æí
–
löe
 );

103 if–
n
 < 36 )

106 if–
löe
[32] != ' ' ||Üine[33] != ' ' )

109 if–
löe
[
n
 - 1] == '\n' ) {Ç--;Üine[n] = '\0'; }

110 if–
löe
[
n
 - 1] == '\r' ) {Ç--;Üine[n] = '\0'; }

112 
nb_tŸ1
++;

114 if–
	`md5_wøµî
–
löe
 + 34, 
sum
 ) != 0 )

116 
nb_îr1
++;

120 
nb_tŸ2
++;

122  
i
 = 0; i < 16; i++ )

123 
	`•rötf
–
buf
 + 
i
 * 2, "%02x", 
sum
[i] );

126 
diff
 = 0;

127  
i
 = 0; i < 32; i++ )

128 
diff
 |
löe
[
i
] ^ 
buf
[i];

130 if–
diff
 != 0 )

132 
nb_îr2
++;

133 
	`Ârötf
–
°dîr
, "wr⁄g checksum: %s\n", 
löe
 + 34 );

136 
n
 = –
löe
 );

139 
	`f˛o£
–
f
 );

141 if–
nb_îr1
 != 0 )

143 
	`¥ötf
( "WARNING: %d (out of %d) input files could "

144 "nŸ bêªad\n", 
nb_îr1
, 
nb_tŸ1
 );

147 if–
nb_îr2
 != 0 )

149 
	`¥ötf
( "WARNING: %d (out of %d) computed checksums did "

150 "nŸ m©ch\n", 
nb_îr2
, 
nb_tŸ2
 );

153 –
nb_îr1
 !0 || 
nb_îr2
 != 0 );

154 
	}
}

156 
	$maö
–
¨gc
, *
¨gv
[] )

158 
ªt
, 
i
;

160 if–
¨gc
 == 1 )

162 
	`¥ötf
( "print mode: md5sum <file> <file> ...\n" );

163 
	`¥ötf
( "check mode: md5sum -c <checksum file>\n" );

165 #i‡
	`deföed
(
_WIN32
)

166 
	`¥ötf
( "\n Press EnterÅoÉxitÅhisÖrogram.\n" );

167 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

173 if–
¨gc
 =3 && 
	`°rcmp
–"-c", 
¨gv
[1] ) == 0 )

174 –
	`md5_check
–
¨gv
[2] ) );

176 
ªt
 = 0;

177  
i
 = 1; i < 
¨gc
; i++ )

178 
ªt
 |
	`md5_¥öt
–
¨gv
[
i
] );

180 –
ªt
 );

181 
	}
}

	@polarssl/programs/hash/sha1sum.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

35 
	~"pﬁ¨s¶/sha1.h
"

37 #i‡!
deföed
(
POLARSSL_SHA1_C
Ë|| !deföed(
POLARSSL_FS_IO
)

38 
	$maö
–
¨gc
, *
¨gv
[] )

40 ((Ë
¨gc
);

41 ((Ë
¨gv
);

43 
	`¥ötf
("POLARSSL_SHA1_Cánd/or POLARSSL_FS_IOÇot defined.\n");

45 
	}
}

47 
	$sha1_wøµî
–*
fûíame
, *
sum
 )

49 
ªt
 = 
	`sha1_fûe
–
fûíame
, 
sum
 );

51 if–
ªt
 == 1 )

52 
	`Ârötf
–
°dîr
, "ÁûedÅÿ›í: %s\n", 
fûíame
 );

54 if–
ªt
 == 2 )

55 
	`Ârötf
–
°dîr
, "ÁûedÅÿªad: %s\n", 
fûíame
 );

57 –
ªt
 );

58 
	}
}

60 
	$sha1_¥öt
–*
fûíame
 )

62 
i
;

63 
sum
[20];

65 if–
	`sha1_wøµî
–
fûíame
, 
sum
 ) != 0 )

68  
i
 = 0; i < 20; i++ )

69 
	`¥ötf
–"%02x", 
sum
[
i
] );

71 
	`¥ötf
–" %s\n", 
fûíame
 );

73 
	}
}

75 
	$sha1_check
–*
fûíame
 )

77 
i
;

78 
size_t
 
n
;

79 
FILE
 *
f
;

80 
nb_îr1
, 
nb_îr2
;

81 
nb_tŸ1
, 
nb_tŸ2
;

82 
sum
[20];

83 
buf
[41], 
löe
[1024];

84 
diff
;

86 if––
f
 = 
	`f›í
–
fûíame
, "rb" ) ) =
NULL
 )

88 
	`¥ötf
–"ÁûedÅÿ›í: %s\n", 
fûíame
 );

92 
nb_îr1
 = 
nb_îr2
 = 0;

93 
nb_tŸ1
 = 
nb_tŸ2
 = 0;

95 
	`mem£t
–
löe
, 0, (Üine ) );

97 
n
 = –
löe
 );

99  
	`fgës
–
löe
, (Ë
n
 - 1, 
f
 ) !
NULL
 )

101 
n
 = 
	`°æí
–
löe
 );

103 if–
n
 < 44 )

106 if–
löe
[40] != ' ' ||Üine[41] != ' ' )

109 if–
löe
[
n
 - 1] == '\n' ) {Ç--;Üine[n] = '\0'; }

110 if–
löe
[
n
 - 1] == '\r' ) {Ç--;Üine[n] = '\0'; }

112 
nb_tŸ1
++;

114 if–
	`sha1_wøµî
–
löe
 + 42, 
sum
 ) != 0 )

116 
nb_îr1
++;

120 
nb_tŸ2
++;

122  
i
 = 0; i < 20; i++ )

123 
	`•rötf
–
buf
 + 
i
 * 2, "%02x", 
sum
[i] );

126 
diff
 = 0;

127  
i
 = 0; i < 40; i++ )

128 
diff
 |
löe
[
i
] ^ 
buf
[i];

130 if–
diff
 != 0 )

132 
nb_îr2
++;

133 
	`Ârötf
–
°dîr
, "wr⁄g checksum: %s\n", 
löe
 + 42 );

136 
n
 = –
löe
 );

139 
	`f˛o£
–
f
 );

141 if–
nb_îr1
 != 0 )

143 
	`¥ötf
( "WARNING: %d (out of %d) input files could "

144 "nŸ bêªad\n", 
nb_îr1
, 
nb_tŸ1
 );

147 if–
nb_îr2
 != 0 )

149 
	`¥ötf
( "WARNING: %d (out of %d) computed checksums did "

150 "nŸ m©ch\n", 
nb_îr2
, 
nb_tŸ2
 );

153 –
nb_îr1
 !0 || 
nb_îr2
 != 0 );

154 
	}
}

156 
	$maö
–
¨gc
, *
¨gv
[] )

158 
ªt
, 
i
;

160 if–
¨gc
 == 1 )

162 
	`¥ötf
( "print mode: sha1sum <file> <file> ...\n" );

163 
	`¥ötf
( "check mode: sha1sum -c <checksum file>\n" );

165 #i‡
	`deföed
(
_WIN32
)

166 
	`¥ötf
( "\n Press EnterÅoÉxitÅhisÖrogram.\n" );

167 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

173 if–
¨gc
 =3 && 
	`°rcmp
–"-c", 
¨gv
[1] ) == 0 )

174 –
	`sha1_check
–
¨gv
[2] ) );

176 
ªt
 = 0;

177  
i
 = 1; i < 
¨gc
; i++ )

178 
ªt
 |
	`sha1_¥öt
–
¨gv
[
i
] );

180 –
ªt
 );

181 
	}
}

	@polarssl/programs/hash/sha2sum.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

35 
	~"pﬁ¨s¶/sha256.h
"

37 #i‡!
deföed
(
POLARSSL_SHA256_C
Ë|| !deföed(
POLARSSL_FS_IO
)

38 
	$maö
–
¨gc
, *
¨gv
[] )

40 ((Ë
¨gc
);

41 ((Ë
¨gv
);

43 
	`¥ötf
("POLARSSL_SHA256_Cánd/or POLARSSL_FS_IOÇot defined.\n");

45 
	}
}

47 
	$sha256_wøµî
–*
fûíame
, *
sum
 )

49 
ªt
 = 
	`sha256_fûe
–
fûíame
, 
sum
, 0 );

51 if–
ªt
 == 1 )

52 
	`Ârötf
–
°dîr
, "ÁûedÅÿ›í: %s\n", 
fûíame
 );

54 if–
ªt
 == 2 )

55 
	`Ârötf
–
°dîr
, "ÁûedÅÿªad: %s\n", 
fûíame
 );

57 –
ªt
 );

58 
	}
}

60 
	$sha256_¥öt
–*
fûíame
 )

62 
i
;

63 
sum
[32];

65 if–
	`sha256_wøµî
–
fûíame
, 
sum
 ) != 0 )

68  
i
 = 0; i < 32; i++ )

69 
	`¥ötf
–"%02x", 
sum
[
i
] );

71 
	`¥ötf
–" %s\n", 
fûíame
 );

73 
	}
}

75 
	$sha256_check
–*
fûíame
 )

77 
i
;

78 
size_t
 
n
;

79 
FILE
 *
f
;

80 
nb_îr1
, 
nb_îr2
;

81 
nb_tŸ1
, 
nb_tŸ2
;

82 
sum
[32];

83 
buf
[65], 
löe
[1024];

84 
diff
;

86 if––
f
 = 
	`f›í
–
fûíame
, "rb" ) ) =
NULL
 )

88 
	`¥ötf
–"ÁûedÅÿ›í: %s\n", 
fûíame
 );

92 
nb_îr1
 = 
nb_îr2
 = 0;

93 
nb_tŸ1
 = 
nb_tŸ2
 = 0;

95 
	`mem£t
–
löe
, 0, (Üine ) );

97 
n
 = –
löe
 );

99  
	`fgës
–
löe
, (Ë
n
 - 1, 
f
 ) !
NULL
 )

101 
n
 = 
	`°æí
–
löe
 );

103 if–
n
 < 68 )

106 if–
löe
[64] != ' ' ||Üine[65] != ' ' )

109 if–
löe
[
n
 - 1] == '\n' ) {Ç--;Üine[n] = '\0'; }

110 if–
löe
[
n
 - 1] == '\r' ) {Ç--;Üine[n] = '\0'; }

112 
nb_tŸ1
++;

114 if–
	`sha256_wøµî
–
löe
 + 66, 
sum
 ) != 0 )

116 
nb_îr1
++;

120 
nb_tŸ2
++;

122  
i
 = 0; i < 32; i++ )

123 
	`•rötf
–
buf
 + 
i
 * 2, "%02x", 
sum
[i] );

126 
diff
 = 0;

127  
i
 = 0; i < 64; i++ )

128 
diff
 |
löe
[
i
] ^ 
buf
[i];

130 if–
diff
 != 0 )

132 
nb_îr2
++;

133 
	`Ârötf
–
°dîr
, "wr⁄g checksum: %s\n", 
löe
 + 66 );

136 
n
 = –
löe
 );

139 
	`f˛o£
–
f
 );

141 if–
nb_îr1
 != 0 )

143 
	`¥ötf
( "WARNING: %d (out of %d) input files could "

144 "nŸ bêªad\n", 
nb_îr1
, 
nb_tŸ1
 );

147 if–
nb_îr2
 != 0 )

149 
	`¥ötf
( "WARNING: %d (out of %d) computed checksums did "

150 "nŸ m©ch\n", 
nb_îr2
, 
nb_tŸ2
 );

153 –
nb_îr1
 !0 || 
nb_îr2
 != 0 );

154 
	}
}

156 
	$maö
–
¨gc
, *
¨gv
[] )

158 
ªt
, 
i
;

160 if–
¨gc
 == 1 )

162 
	`¥ötf
( "print mode: sha256sum <file> <file> ...\n" );

163 
	`¥ötf
( "check mode: sha256sum -c <checksum file>\n" );

165 #i‡
	`deföed
(
_WIN32
)

166 
	`¥ötf
( "\n Press EnterÅoÉxitÅhisÖrogram.\n" );

167 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

173 if–
¨gc
 =3 && 
	`°rcmp
–"-c", 
¨gv
[1] ) == 0 )

174 –
	`sha256_check
–
¨gv
[2] ) );

176 
ªt
 = 0;

177  
i
 = 1; i < 
¨gc
; i++ )

178 
ªt
 |
	`sha256_¥öt
–
¨gv
[
i
] );

180 –
ªt
 );

181 
	}
}

	@polarssl/programs/pkey/dh_client.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

35 
	~"pﬁ¨s¶/√t.h
"

36 
	~"pﬁ¨s¶/´s.h
"

37 
	~"pﬁ¨s¶/dhm.h
"

38 
	~"pﬁ¨s¶/rß.h
"

39 
	~"pﬁ¨s¶/sha1.h
"

40 
	~"pﬁ¨s¶/íå›y.h
"

41 
	~"pﬁ¨s¶/˘r_drbg.h
"

43 
	#SERVER_NAME
 "loˇlho°"

	)

44 
	#SERVER_PORT
 11999

	)

46 #i‡!
deföed
(
POLARSSL_AES_C
Ë|| !deföed(
POLARSSL_DHM_C
) || \

47 !
deföed
(
POLARSSL_ENTROPY_C
Ë|| !deföed(
POLARSSL_NET_C
) || \

48 !
deföed
(
POLARSSL_RSA_C
Ë|| !deföed(
POLARSSL_SHA1_C
) || \

49 !
deföed
(
POLARSSL_FS_IO
Ë|| !
	$deföed
(
POLARSSL_CTR_DRBG_C
)

50 
	$maö
–
¨gc
, *
¨gv
[] )

52 ((Ë
¨gc
);

53 ((Ë
¨gv
);

55 
	`¥ötf
("POLARSSL_AES_Cánd/or POLARSSL_DHM_Cánd/or POLARSSL_ENTROPY_C "

60 
	}
}

62 
	$maö
–
¨gc
, *
¨gv
[] )

64 
FILE
 *
f
;

66 
ªt
;

67 
size_t
 
n
, 
buÊí
;

68 
£rvî_fd
 = -1;

70 *
p
, *
íd
;

71 
buf
[2048];

72 
hash
[20];

73 c⁄° *
≥rs
 = "dh_client";

75 
íå›y_c⁄ãxt
 
íå›y
;

76 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

77 
rß_c⁄ãxt
 
rß
;

78 
dhm_c⁄ãxt
 
dhm
;

79 
´s_c⁄ãxt
 
´s
;

81 ((Ë
¨gc
);

82 ((Ë
¨gv
);

84 
	`mem£t
–&
rß
, 0, (Ñsa ) );

85 
	`dhm_öô
–&
dhm
 );

86 
	`´s_öô
–&
´s
 );

91 
	`¥ötf
( "\n . SeedingÅheÑandomÇumber generator" );

92 
	`fÊush
–
°dout
 );

94 
	`íå›y_öô
–&
íå›y
 );

95 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

96 (c⁄° *Ë
≥rs
,

97 
	`°æí
–
≥rs
 ) ) ) != 0 )

99 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed %d\n", 
ªt
 );

100 
exô
;

106 
	`¥ötf
( "\n . ReadingÖublic key fromÑsa_pub.txt" );

107 
	`fÊush
–
°dout
 );

109 if––
f
 = 
	`f›í
–"rß_pub.txt", "rb" ) ) =
NULL
 )

111 
ªt
 = 1;

112 
	`¥ötf
( " failed\n ! CouldÇot openÑsa_pub.txt\n" \

114 
exô
;

117 
	`rß_öô
–&
rß
, 
RSA_PKCS_V15
, 0 );

119 if––
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
N
, 16, 
f
 ) ) != 0 ||

120 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
E
, 16, 
f
 ) ) != 0 )

122 
	`¥ötf
–" faûed\¿ ! mpi_ªad_fûêªtu∫ed %d\n\n", 
ªt
 );

123 
exô
;

126 
rß
.
Àn
 = ( 
	`mpi_msb
–&rß.
N
 ) + 7 ) >> 3;

128 
	`f˛o£
–
f
 );

133 
	`¥ötf
–"\¿ . C⁄√˘ögÅÿt˝/%s/%d", 
SERVER_NAME
,

134 
SERVER_PORT
 );

135 
	`fÊush
–
°dout
 );

137 if––
ªt
 = 
	`√t_c⁄√˘
–&
£rvî_fd
, 
SERVER_NAME
,

138 
SERVER_PORT
 ) ) != 0 )

140 
	`¥ötf
–" faûed\¿ !Çë_c⁄√˘Ñëu∫ed %d\n\n", 
ªt
 );

141 
exô
;

147 
	`¥ötf
( "\n . ReceivingÅhe server's DHÖarameters" );

148 
	`fÊush
–
°dout
 );

150 
	`mem£t
–
buf
, 0, ( buf ) );

152 if––
ªt
 = 
	`√t_ªcv
–&
£rvî_fd
, 
buf
, 2 ) ) != 2 )

154 
	`¥ötf
–" faûed\¿ !Çë_ªcvÑëu∫ed %d\n\n", 
ªt
 );

155 
exô
;

158 
n
 = 
buÊí
 = ( 
buf
[0] << 8 ) | buf[1];

159 if–
buÊí
 < 1 || buÊí > –
buf
 ) )

161 
	`¥ötf
( " failed\n ! Gotán invalid bufferÜength\n\n" );

162 
exô
;

168 
	`mem£t
–
buf
, 0, ( buf ) );

170 if––
ªt
 = 
	`√t_ªcv
–&
£rvî_fd
, 
buf
, 
n
 ) ) != ()Ç )

172 
	`¥ötf
–" faûed\¿ !Çë_ªcvÑëu∫ed %d\n\n", 
ªt
 );

173 
exô
;

176 
p
 = 
buf
, 
íd
 = bu‡+ 
buÊí
;

178 if––
ªt
 = 
	`dhm_ªad_∑øms
–&
dhm
, &
p
, 
íd
 ) ) != 0 )

180 
	`¥ötf
–" faûed\¿ ! dhm_ªad_∑øm†ªtu∫ed %d\n\n", 
ªt
 );

181 
exô
;

184 if–
dhm
.
Àn
 < 64 || dhm.len > 512 )

186 
ªt
 = 1;

187 
	`¥ötf
( " failed\n ! Invalid DHM modulus size\n\n" );

188 
exô
;

195 
	`¥ötf
( "\n . VerifyingÅhe server's RSA signature" );

196 
	`fÊush
–
°dout
 );

198 
p
 += 2;

200 if––
n
 = (
size_t
Ë–
íd
 - 
p
 ) ) !
rß
.
Àn
 )

202 
ªt
 = 1;

203 
	`¥ötf
( " failed\n ! Invalid RSA signature size\n\n" );

204 
exô
;

207 
	`sha1
–
buf
, ()–
p
 - 2 - bu‡), 
hash
 );

209 if––
ªt
 = 
	`rß_pkcs1_vîify
–&
rß
, 
NULL
, NULL, 
RSA_PUBLIC
,

210 
POLARSSL_MD_SHA1
, 0, 
hash
, 
p
 ) ) != 0 )

212 
	`¥ötf
–" faûed\¿ !Ñß_pkcs1_vîifyÑëu∫ed %d\n\n", 
ªt
 );

213 
exô
;

219 
	`¥ötf
( "\n . Sending ownÖublic valueÅo server" );

220 
	`fÊush
–
°dout
 );

222 
n
 = 
dhm
.
Àn
;

223 if––
ªt
 = 
	`dhm_make_public
–&
dhm
, (Ëdhm.
Àn
, 
buf
, 
n
,

224 
˘r_drbg_øndom
, &
˘r_drbg
 ) ) != 0 )

226 
	`¥ötf
–" faûed\¿ ! dhm_make_publi¯ªtu∫ed %d\n\n", 
ªt
 );

227 
exô
;

230 if––
ªt
 = 
	`√t_£nd
–&
£rvî_fd
, 
buf
, 
n
 ) ) != ()Ç )

232 
	`¥ötf
–" faûed\¿ !Çë_£ndÑëu∫ed %d\n\n", 
ªt
 );

233 
exô
;

239 
	`¥ötf
( "\n . Shared secret: " );

240 
	`fÊush
–
°dout
 );

242 
n
 = 
dhm
.
Àn
;

243 if––
ªt
 = 
	`dhm_ˇlc_£¸ë
–&
dhm
, 
buf
, &
n
,

244 
˘r_drbg_øndom
, &
˘r_drbg
 ) ) != 0 )

246 
	`¥ötf
–" faûed\¿ ! dhm_ˇlc_£¸ëÑëu∫ed %d\n\n", 
ªt
 );

247 
exô
;

250  
n
 = 0;Ç < 16;Ç++ )

251 
	`¥ötf
–"%02x", 
buf
[
n
] );

261 
	`¥ötf
( "...\n . Receivingánd decryptingÅhe ciphertext" );

262 
	`fÊush
–
°dout
 );

264 
	`´s_£tkey_dec
–&
´s
, 
buf
, 256 );

266 
	`mem£t
–
buf
, 0, ( buf ) );

268 if––
ªt
 = 
	`√t_ªcv
–&
£rvî_fd
, 
buf
, 16 ) ) != 16 )

270 
	`¥ötf
–" faûed\¿ !Çë_ªcvÑëu∫ed %d\n\n", 
ªt
 );

271 
exô
;

274 
	`´s_¸y±_ecb
–&
´s
, 
AES_DECRYPT
, 
buf
, buf );

275 
buf
[16] = '\0';

276 
	`¥ötf
–"\¿ . Pœöãxài†\"%s\"\n\n", (*Ë
buf
 );

278 
exô
:

280 if–
£rvî_fd
 != -1 )

281 
	`√t_˛o£
–
£rvî_fd
 );

283 
	`´s_‰ì
–&
´s
 );

284 
	`rß_‰ì
–&
rß
 );

285 
	`dhm_‰ì
–&
dhm
 );

286 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

287 
	`íå›y_‰ì
–&
íå›y
 );

289 #i‡
	`deföed
(
_WIN32
)

290 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

291 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

294 –
ªt
 );

295 
	}
}

297 
	gPOLARSSL_NET_C
 && 
	gPOLARSSL_RSA_C
 && 
	gPOLARSSL_SHA1_C
 &&

298 
	gPOLARSSL_FS_IO
 && 
	gPOLARSSL_CTR_DRBG_C
 */

	@polarssl/programs/pkey/dh_genprime.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°dio.h
>

34 
	~"pﬁ¨s¶/bignum.h
"

35 
	~"pﬁ¨s¶/íå›y.h
"

36 
	~"pﬁ¨s¶/˘r_drbg.h
"

42 
	#DH_P_SIZE
 1024

	)

43 
	#GENERATOR
 "4"

	)

45 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_ENTROPY_C
) || \

46 !
deföed
(
POLARSSL_FS_IO
Ë|| !deföed(
POLARSSL_CTR_DRBG_C
) || \

47 !
	$deföed
(
POLARSSL_GENPRIME
)

48 
	$maö
–
¨gc
, *
¨gv
[] )

50 ((Ë
¨gc
);

51 ((Ë
¨gv
);

53 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_ENTROPY_Cánd/or "

57 
	}
}

59 
	$maö
–
¨gc
, *
¨gv
[] )

61 
ªt
 = 1;

62 
mpi
 
G
, 
P
, 
Q
;

63 
íå›y_c⁄ãxt
 
íå›y
;

64 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

65 c⁄° *
≥rs
 = "dh_genprime";

66 
FILE
 *
fout
;

68 ((Ë
¨gc
);

69 ((Ë
¨gv
);

71 
	`mpi_öô
–&
G
 ); mpi_öô–&
P
 ); mpi_öô–&
Q
 );

72 
	`íå›y_öô
–&
íå›y
 );

74 if––
ªt
 = 
	`mpi_ªad_°rög
–&
G
, 10, 
GENERATOR
 ) ) != 0 )

76 
	`¥ötf
–" faûed\¿ ! mpi_ªad_°rögÑëu∫ed %d\n", 
ªt
 );

77 
exô
;

80 
	`¥ötf
( "\nWARNING: You shouldÇot generateánd use your own DHMÖrimes\n" );

81 
	`¥ötf
( " unless youáre very certain of what youáre doing!\n" );

82 
	`¥ötf
( " FailingÅo followÅhis instruction mayÑesult in\n" );

83 
	`¥ötf
( " weak security for your connections! UseÅhe\n" );

84 
	`¥ötf
( "Öredefined DHMÖarameters from dhm.h instead!\n\n" );

85 
	`¥ötf
( "============================================================\n\n" );

87 
	`¥ötf
( " ! GeneratingÜargeÖrimes mayÅake minutes!\n" );

89 
	`¥ötf
( "\n . SeedingÅheÑandomÇumber generator..." );

90 
	`fÊush
–
°dout
 );

92 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

93 (c⁄° *Ë
≥rs
,

94 
	`°æí
–
≥rs
 ) ) ) != 0 )

96 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed %d\n", 
ªt
 );

97 
exô
;

100 
	`¥ötf
( " ok\n . GeneratingÅhe modulus,Ölease wait..." );

101 
	`fÊush
–
°dout
 );

106 if––
ªt
 = 
	`mpi_gí_¥ime
–&
P
, 
DH_P_SIZE
, 1,

107 
˘r_drbg_øndom
, &
˘r_drbg
 ) ) != 0 )

109 
	`¥ötf
–" faûed\¿ ! mpi_gí_¥imêªtu∫ed %d\n\n", 
ªt
 );

110 
exô
;

113 
	`¥ötf
( " ok\n . VerifyingÅhat Q = (P-1)/2 isÖrime..." );

114 
	`fÊush
–
°dout
 );

116 if––
ªt
 = 
	`mpi_sub_öt
–&
Q
, &
P
, 1 ) ) != 0 )

118 
	`¥ötf
–" faûed\¿ ! mpi_sub_öàªtu∫ed %d\n\n", 
ªt
 );

119 
exô
;

122 if––
ªt
 = 
	`mpi_div_öt
–&
Q
, 
NULL
, &Q, 2 ) ) != 0 )

124 
	`¥ötf
–" faûed\¿ ! mpi_div_öàªtu∫ed %d\n\n", 
ªt
 );

125 
exô
;

128 if––
ªt
 = 
	`mpi_is_¥ime
–&
Q
, 
˘r_drbg_øndom
, &
˘r_drbg
 ) ) != 0 )

130 
	`¥ötf
–" faûed\¿ ! mpi_is_¥imêªtu∫ed %d\n\n", 
ªt
 );

131 
exô
;

134 
	`¥ötf
( " ok\n . ExportingÅhe value in dh_prime.txt..." );

135 
	`fÊush
–
°dout
 );

137 if––
fout
 = 
	`f›í
–"dh_¥ime.txt", "wb+" ) ) =
NULL
 )

139 
ªt
 = 1;

140 
	`¥ötf
( " failed\n ! CouldÇot create dh_prime.txt\n\n" );

141 
exô
;

144 if––
ªt
 = 
	`mpi_wrôe_fûe
–"P = ", &
P
, 16, 
fout
 ) != 0 ) ||

145 –
ªt
 = 
	`mpi_wrôe_fûe
–"G = ", &
G
, 16, 
fout
 ) != 0 ) )

147 
	`¥ötf
–" faûed\¿ ! mpi_wrôe_fûêªtu∫ed %d\n\n", 
ªt
 );

148 
exô
;

151 
	`¥ötf
( " ok\n\n" );

152 
	`f˛o£
–
fout
 );

154 
exô
:

156 
	`mpi_‰ì
–&
G
 ); mpi_‰ì–&
P
 ); mpi_‰ì–&
Q
 );

157 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

158 
	`íå›y_‰ì
–&
íå›y
 );

160 #i‡
	`deföed
(
_WIN32
)

161 
	`¥ötf
( " Press EnterÅoÉxitÅhisÖrogram.\n" );

162 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

165 –
ªt
 );

166 
	}
}

168 
	gPOLARSSL_CTR_DRBG_C
 && 
	gPOLARSSL_GENPRIME
 */

	@polarssl/programs/pkey/dh_server.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

35 
	~"pﬁ¨s¶/√t.h
"

36 
	~"pﬁ¨s¶/´s.h
"

37 
	~"pﬁ¨s¶/dhm.h
"

38 
	~"pﬁ¨s¶/rß.h
"

39 
	~"pﬁ¨s¶/sha1.h
"

40 
	~"pﬁ¨s¶/íå›y.h
"

41 
	~"pﬁ¨s¶/˘r_drbg.h
"

43 
	#SERVER_PORT
 11999

	)

44 
	#PLAINTEXT
 "==Hñlÿthîe!=="

	)

46 #i‡!
deföed
(
POLARSSL_AES_C
Ë|| !deföed(
POLARSSL_DHM_C
) || \

47 !
deföed
(
POLARSSL_ENTROPY_C
Ë|| !deföed(
POLARSSL_NET_C
) || \

48 !
deföed
(
POLARSSL_RSA_C
Ë|| !deföed(
POLARSSL_SHA1_C
) || \

49 !
deföed
(
POLARSSL_FS_IO
Ë|| !
	$deföed
(
POLARSSL_CTR_DRBG_C
)

50 
	$maö
–
¨gc
, *
¨gv
[] )

52 ((Ë
¨gc
);

53 ((Ë
¨gv
);

55 
	`¥ötf
("POLARSSL_AES_Cánd/or POLARSSL_DHM_Cánd/or POLARSSL_ENTROPY_C "

60 
	}
}

62 
	$maö
–
¨gc
, *
¨gv
[] )

64 
FILE
 *
f
;

66 
ªt
;

67 
size_t
 
n
, 
buÊí
;

68 
li°í_fd
 = -1;

69 
˛õ¡_fd
 = -1;

71 
buf
[2048];

72 
hash
[20];

73 
buf2
[2];

74 c⁄° *
≥rs
 = "dh_server";

76 
íå›y_c⁄ãxt
 
íå›y
;

77 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

78 
rß_c⁄ãxt
 
rß
;

79 
dhm_c⁄ãxt
 
dhm
;

80 
´s_c⁄ãxt
 
´s
;

82 ((Ë
¨gc
);

83 ((Ë
¨gv
);

85 
	`mem£t
–&
rß
, 0, (Ñsa ) );

86 
	`dhm_öô
–&
dhm
 );

87 
	`´s_öô
–&
´s
 );

92 
	`¥ötf
( "\n . SeedingÅheÑandomÇumber generator" );

93 
	`fÊush
–
°dout
 );

95 
	`íå›y_öô
–&
íå›y
 );

96 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

97 (c⁄° *Ë
≥rs
,

98 
	`°æí
–
≥rs
 ) ) ) != 0 )

100 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed %d\n", 
ªt
 );

101 
exô
;

107 
	`¥ötf
( "\n . ReadingÖrivate key fromÑsa_priv.txt" );

108 
	`fÊush
–
°dout
 );

110 if––
f
 = 
	`f›í
–"rß_¥iv.txt", "rb" ) ) =
NULL
 )

112 
ªt
 = 1;

113 
	`¥ötf
( " failed\n ! CouldÇot openÑsa_priv.txt\n" \

115 
exô
;

118 
	`rß_öô
–&
rß
, 
RSA_PKCS_V15
, 0 );

120 if––
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
N
 , 16, 
f
 ) ) != 0 ||

121 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
E
 , 16, 
f
 ) ) != 0 ||

122 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
D
 , 16, 
f
 ) ) != 0 ||

123 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
P
 , 16, 
f
 ) ) != 0 ||

124 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
Q
 , 16, 
f
 ) ) != 0 ||

125 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
DP
, 16, 
f
 ) ) != 0 ||

126 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
DQ
, 16, 
f
 ) ) != 0 ||

127 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
QP
, 16, 
f
 ) ) != 0 )

129 
	`¥ötf
–" faûed\¿ ! mpi_ªad_fûêªtu∫ed %d\n\n", 
ªt
 );

130 
exô
;

133 
rß
.
Àn
 = ( 
	`mpi_msb
–&rß.
N
 ) + 7 ) >> 3;

135 
	`f˛o£
–
f
 );

140 
	`¥ötf
( "\n . Reading DHÖarameters from dh_prime.txt" );

141 
	`fÊush
–
°dout
 );

143 if––
f
 = 
	`f›í
–"dh_¥ime.txt", "rb" ) ) =
NULL
 )

145 
ªt
 = 1;

146 
	`¥ötf
( " failed\n ! CouldÇot open dh_prime.txt\n" \

148 
exô
;

151 if–
	`mpi_ªad_fûe
–&
dhm
.
P
, 16, 
f
 ) != 0 ||

152 
	`mpi_ªad_fûe
–&
dhm
.
G
, 16, 
f
 ) != 0 )

154 
	`¥ötf
( " failed\n ! Invalid DHÖarameter file\n\n" );

155 
exô
;

158 
	`f˛o£
–
f
 );

163 
	`¥ötf
( "\n . Waiting foráÑemote connection" );

164 
	`fÊush
–
°dout
 );

166 if––
ªt
 = 
	`√t_böd
–&
li°í_fd
, 
NULL
, 
SERVER_PORT
 ) ) != 0 )

168 
	`¥ötf
–" faûed\¿ !Çë_bödÑëu∫ed %d\n\n", 
ªt
 );

169 
exô
;

172 if––
ªt
 = 
	`√t_ac˚±
–
li°í_fd
, &
˛õ¡_fd
, 
NULL
 ) ) != 0 )

174 
	`¥ötf
–" faûed\¿ !Çë_ac˚±Ñëu∫ed %d\n\n", 
ªt
 );

175 
exô
;

181 
	`¥ötf
( "\n . SendingÅhe server's DHÖarameters" );

182 
	`fÊush
–
°dout
 );

184 
	`mem£t
–
buf
, 0, ( buf ) );

186 if––
ªt
 = 
	`dhm_make_∑øms
–&
dhm
, (Ë
	`mpi_size
–&dhm.
P
 ), 
buf
, &
n
,

187 
˘r_drbg_øndom
, &
˘r_drbg
 ) ) != 0 )

189 
	`¥ötf
–" faûed\¿ ! dhm_make_∑øm†ªtu∫ed %d\n\n", 
ªt
 );

190 
exô
;

196 
	`sha1
–
buf
, 
n
, 
hash
 );

198 
buf
[
n
 ] = ()–
rß
.
Àn
 >> 8 );

199 
buf
[
n
 + 1] = ()–
rß
.
Àn
 );

201 if––
ªt
 = 
	`rß_pkcs1_sign
–&
rß
, 
NULL
, NULL, 
RSA_PRIVATE
, 
POLARSSL_MD_SHA1
,

202 0, 
hash
, 
buf
 + 
n
 + 2 ) ) != 0 )

204 
	`¥ötf
–" faûed\¿ !Ñß_pkcs1_sig¿ªtu∫ed %d\n\n", 
ªt
 );

205 
exô
;

208 
buÊí
 = 
n
 + 2 + 
rß
.
Àn
;

209 
buf2
[0] = ()–
buÊí
 >> 8 );

210 
buf2
[1] = ()–
buÊí
 );

212 if––
ªt
 = 
	`√t_£nd
–&
˛õ¡_fd
, 
buf2
, 2 ) ) != 2 ||

213 –
ªt
 = 
	`√t_£nd
–&
˛õ¡_fd
, 
buf
, 
buÊí
 ) ) != () buflen )

215 
	`¥ötf
–" faûed\¿ !Çë_£ndÑëu∫ed %d\n\n", 
ªt
 );

216 
exô
;

222 
	`¥ötf
( "\n . ReceivingÅhe client'sÖublic value" );

223 
	`fÊush
–
°dout
 );

225 
	`mem£t
–
buf
, 0, ( buf ) );

226 
n
 = 
dhm
.
Àn
;

228 if––
ªt
 = 
	`√t_ªcv
–&
˛õ¡_fd
, 
buf
, 
n
 ) ) != ()Ç )

230 
	`¥ötf
–" faûed\¿ !Çë_ªcvÑëu∫ed %d\n\n", 
ªt
 );

231 
exô
;

234 if––
ªt
 = 
	`dhm_ªad_public
–&
dhm
, 
buf
, dhm.
Àn
 ) ) != 0 )

236 
	`¥ötf
–" faûed\¿ ! dhm_ªad_publi¯ªtu∫ed %d\n\n", 
ªt
 );

237 
exô
;

243 
	`¥ötf
( "\n . Shared secret: " );

244 
	`fÊush
–
°dout
 );

246 if––
ªt
 = 
	`dhm_ˇlc_£¸ë
–&
dhm
, 
buf
, &
n
,

247 
˘r_drbg_øndom
, &
˘r_drbg
 ) ) != 0 )

249 
	`¥ötf
–" faûed\¿ ! dhm_ˇlc_£¸ëÑëu∫ed %d\n\n", 
ªt
 );

250 
exô
;

253  
n
 = 0;Ç < 16;Ç++ )

254 
	`¥ötf
–"%02x", 
buf
[
n
] );

264 
	`¥ötf
( "...\n . Encryptingánd sendingÅhe ciphertext" );

265 
	`fÊush
–
°dout
 );

267 
	`´s_£tkey_íc
–&
´s
, 
buf
, 256 );

268 
	`mem˝y
–
buf
, 
PLAINTEXT
, 16 );

269 
	`´s_¸y±_ecb
–&
´s
, 
AES_ENCRYPT
, 
buf
, buf );

271 if––
ªt
 = 
	`√t_£nd
–&
˛õ¡_fd
, 
buf
, 16 ) ) != 16 )

273 
	`¥ötf
–" faûed\¿ !Çë_£ndÑëu∫ed %d\n\n", 
ªt
 );

274 
exô
;

277 
	`¥ötf
( "\n\n" );

279 
exô
:

281 if–
˛õ¡_fd
 != -1 )

282 
	`√t_˛o£
–
˛õ¡_fd
 );

284 
	`´s_‰ì
–&
´s
 );

285 
	`rß_‰ì
–&
rß
 );

286 
	`dhm_‰ì
–&
dhm
 );

287 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

288 
	`íå›y_‰ì
–&
íå›y
 );

290 #i‡
	`deföed
(
_WIN32
)

291 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

292 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

295 –
ªt
 );

296 
	}
}

298 
	gPOLARSSL_NET_C
 && 
	gPOLARSSL_RSA_C
 && 
	gPOLARSSL_SHA1_C
 &&

299 
	gPOLARSSL_FS_IO
 && 
	gPOLARSSL_CTR_DRBG_C
 */

	@polarssl/programs/pkey/ecdsa.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~"pﬁ¨s¶/íå›y.h
"

33 
	~"pﬁ¨s¶/˘r_drbg.h
"

34 
	~"pﬁ¨s¶/ecdß.h
"

36 
	~<°rög.h
>

37 
	~<°dio.h
>

42 
	#VERBOSE


	)

47 
	#ECPARAMS
 
POLARSSL_ECP_DP_SECP192R1


	)

49 #i‡!
deföed
(
ECPARAMS
)

50 
	#ECPARAMS
 
	`e˝_curve_li°
()->
gΩ_id


	)

53 #i‡!
deföed
(
POLARSSL_ECDSA_C
) || \

54 !
deföed
(
POLARSSL_ENTROPY_C
Ë|| !
	$deföed
(
POLARSSL_CTR_DRBG_C
)

55 
	$maö
–
¨gc
, *
¨gv
[] )

57 ((Ë
¨gc
);

58 ((Ë
¨gv
);

60 
	`¥ötf
("POLARSSL_ECDSA_Cánd/or "

63 
	}
}

66 #i‡
deföed
(
VERBOSE
)

67 
	$dump_buf
–c⁄° *
tôÀ
, *
buf
, 
size_t
 
Àn
 )

69 
size_t
 
i
;

71 
	`¥ötf
–"%s", 
tôÀ
 );

72  
i
 = 0; i < 
Àn
; i++ )

73 
	`¥ötf
("%c%c", "0123456789ABCDEF" [
buf
[
i
] / 16],

74 "0123456789ABCDEF" [
buf
[
i
] % 16] );

75 
	`¥ötf
( "\n" );

76 
	}
}

78 
	$dump_pubkey
–c⁄° *
tôÀ
, 
ecdß_c⁄ãxt
 *
key
 )

80 
buf
[300];

81 
size_t
 
Àn
;

83 if–
	`e˝_poöt_wrôe_bö¨y
–&
key
->
gΩ
, &key->
Q
,

84 
POLARSSL_ECP_PF_UNCOMPRESSED
, &
Àn
, 
buf
,  buf ) != 0 )

86 
	`¥ötf
("internalÉrror\n");

90 
	`dump_buf
–
tôÀ
, 
buf
, 
Àn
 );

91 
	}
}

93 
	#dump_buf
–
a
, 
b
, 
c
 )

	)

94 
	#dump_pubkey
–
a
, 
b
 )

	)

97 
	$maö
–
¨gc
, *
¨gv
[] )

99 
ªt
;

100 
ecdß_c⁄ãxt
 
˘x_sign
, 
˘x_vîify
;

101 
íå›y_c⁄ãxt
 
íå›y
;

102 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

103 
hash
[] = "This should beÅhe hash ofá message.";

104 
sig
[512];

105 
size_t
 
sig_Àn
;

106 c⁄° *
≥rs
 = "ecdsa";

107 ((Ë
¨gv
);

109 
	`ecdß_öô
–&
˘x_sign
 );

110 
	`ecdß_öô
–&
˘x_vîify
 );

112 
	`mem£t
(
sig
, 0, ( sig ) );

113 
ªt
 = 1;

115 if–
¨gc
 != 1 )

117 
	`¥ötf
( "usage:Écdsa\n" );

119 #i‡
	`deföed
(
_WIN32
)

120 
	`¥ötf
( "\n" );

123 
exô
;

129 
	`¥ötf
( "\n . SeedingÅheÑandomÇumber generator..." );

130 
	`fÊush
–
°dout
 );

132 
	`íå›y_öô
–&
íå›y
 );

133 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

134 (c⁄° *Ë
≥rs
,

135 
	`°æí
–
≥rs
 ) ) ) != 0 )

137 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed %d\n", 
ªt
 );

138 
exô
;

141 
	`¥ötf
( " ok\n . Generating keyÖair..." );

142 
	`fÊush
–
°dout
 );

144 if––
ªt
 = 
	`ecdß_gíkey
–&
˘x_sign
, 
ECPARAMS
,

145 
˘r_drbg_øndom
, &
˘r_drbg
 ) ) != 0 )

147 
	`¥ötf
–" faûed\¿ !Écdß_gíkeyÑëu∫ed %d\n", 
ªt
 );

148 
exô
;

151 
	`¥ötf
–" ok (key size: %d bôs)\n", (Ë
˘x_sign
.
gΩ
.
pbôs
 );

153 
	`dump_pubkey
–" + Publi¯key: ", &
˘x_sign
 );

158 
	`¥ötf
( " . Signing message..." );

159 
	`fÊush
–
°dout
 );

161 if––
ªt
 = 
	`ecdß_wrôe_sig«tuª
–&
˘x_sign
,

162 
hash
, ( hash ),

163 
sig
, &
sig_Àn
,

164 
˘r_drbg_øndom
, &
˘r_drbg
 ) ) != 0 )

166 
	`¥ötf
–" faûed\¿ !Écdß_gíkeyÑëu∫ed %d\n", 
ªt
 );

167 
exô
;

169 
	`¥ötf
–" ok (sig«tuªÜígth = %u)\n", (Ë
sig_Àn
 );

171 
	`dump_buf
–" + Hash: ", 
hash
,  hash );

172 
	`dump_buf
–" + Sig«tuª: ", 
sig
, 
sig_Àn
 );

178 #ifde‡
POLARSSL_FS_IO


179 
	`mpi_wrôe_fûe
–"Ñ = ", &
˘x_sign
.
r
, 16, 
NULL
 );

180 
	`mpi_wrôe_fûe
–" s = ", &
˘x_sign
.
s
, 16, 
NULL
 );

190 
	`¥ötf
( " . Preparing verification context..." );

191 
	`fÊush
–
°dout
 );

193 if––
ªt
 = 
	`e˝_group_c›y
–&
˘x_vîify
.
gΩ
, &
˘x_sign
.grp ) ) != 0 )

195 
	`¥ötf
–" faûed\¿ !É˝_group_c›yÑëu∫ed %d\n", 
ªt
 );

196 
exô
;

199 if––
ªt
 = 
	`e˝_c›y
–&
˘x_vîify
.
Q
, &
˘x_sign
.Q ) ) != 0 )

201 
	`¥ötf
–" faûed\¿ !É˝_c›yÑëu∫ed %d\n", 
ªt
 );

202 
exô
;

205 
ªt
 = 0;

210 
	`¥ötf
( " ok\n . Verifying signature..." );

211 
	`fÊush
–
°dout
 );

213 if––
ªt
 = 
	`ecdß_ªad_sig«tuª
–&
˘x_vîify
,

214 
hash
, ( hash ),

215 
sig
, 
sig_Àn
 ) ) != 0 )

217 
	`¥ötf
–" faûed\¿ !Écdß_ªad_sig«tuªÑëu∫ed %d\n", 
ªt
 );

218 
exô
;

221 
	`¥ötf
( " ok\n" );

223 
exô
:

225 #i‡
	`deföed
(
_WIN32
)

226 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

227 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

230 
	`ecdß_‰ì
–&
˘x_vîify
 );

231 
	`ecdß_‰ì
–&
˘x_sign
 );

232 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

233 
	`íå›y_‰ì
–&
íå›y
 );

235 –
ªt
 );

236 
	}
}

238 
	gECPARAMS
 */

	@polarssl/programs/pkey/gen_key.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dlib.h
>

34 
	~<°dio.h
>

36 #i‡!
deföed
(
_WIN32
Ë&& deföed(
POLARSSL_FS_IO
)

37 
	~<uni°d.h
>

40 
	~"pﬁ¨s¶/îr‹.h
"

41 
	~"pﬁ¨s¶/pk.h
"

42 
	~"pﬁ¨s¶/ecdß.h
"

43 
	~"pﬁ¨s¶/rß.h
"

44 
	~"pﬁ¨s¶/îr‹.h
"

45 
	~"pﬁ¨s¶/íå›y.h
"

46 
	~"pﬁ¨s¶/˘r_drbg.h
"

48 #i‡!
deföed
(
POLARSSL_PK_WRITE_C
Ë|| !deföed(
POLARSSL_FS_IO
) || \

49 !
deföed
(
POLARSSL_ENTROPY_C
Ë|| !
	$deföed
(
POLARSSL_CTR_DRBG_C
)

50 
	$maö
–
¨gc
, *
¨gv
[] )

52 ((Ë
¨gc
);

53 ((Ë
¨gv
);

55 
	`¥ötf
( "POLARSSL_PK_WRITE_Cánd/or POLARSSL_FS_IOánd/or "

59 
	}
}

62 
	#FORMAT_PEM
 0

	)

63 
	#FORMAT_DER
 1

	)

65 
	#DFL_TYPE
 
POLARSSL_PK_RSA


	)

66 
	#DFL_RSA_KEYSIZE
 4096

	)

67 
	#DFL_EC_CURVE
 
	`e˝_curve_li°
()->
gΩ_id


	)

68 
	#DFL_FILENAME
 "keyfûe.key"

	)

69 
	#DFL_FORMAT
 
FORMAT_PEM


	)

70 
	#DFL_USE_DEV_RANDOM
 0

	)

75 
	s›ti⁄s


77 
	mty≥
;

78 
	mrß_keysize
;

79 
	mec_curve
;

80 c⁄° *
	mfûíame
;

81 
	mf‹m©
;

82 
	mu£_dev_øndom
;

83 } 
	g›t
;

85 #i‡!
deföed
(
_WIN32
Ë&& deföed(
POLARSSL_FS_IO
)

87 
	#DEV_RANDOM_THRESHOLD
 32

	)

89 
	$dev_øndom_íå›y_pﬁl
–*
d©a
, *
ouçut
,

90 
size_t
 
Àn
, size_à*
ﬁí
 )

92 
FILE
 *
fûe
;

93 
size_t
 
ªt
, 
À·
 = 
Àn
;

94 *
p
 = 
ouçut
;

95 ((Ë
d©a
);

97 *
ﬁí
 = 0;

99 
fûe
 = 
	`f›í
( "/dev/random", "rb" );

100 if–
fûe
 =
NULL
 )

101 –
POLARSSL_ERR_ENTROPY_SOURCE_FAILED
 );

103  
À·
 > 0 )

106 
ªt
 = 
	`‰ód
–
p
, 1, 
À·
, 
fûe
 );

107 if–
ªt
 =0 && 
	`„º‹
–
fûe
 ) )

109 
	`f˛o£
–
fûe
 );

110 –
POLARSSL_ERR_ENTROPY_SOURCE_FAILED
 );

113 
p
 +
ªt
;

114 
À·
 -
ªt
;

115 
	`¶ìp
( 1 );

117 
	`f˛o£
–
fûe
 );

118 *
ﬁí
 = 
Àn
;

121 
	}
}

124 
	$wrôe_¥iv©e_key
–
pk_c⁄ãxt
 *
key
, c⁄° *
ouçut_fûe
 )

126 
ªt
;

127 
FILE
 *
f
;

128 
ouçut_buf
[16000];

129 *
c
 = 
ouçut_buf
;

130 
size_t
 
Àn
 = 0;

132 
	`mem£t
(
ouçut_buf
, 0, 16000);

133 if–
›t
.
f‹m©
 =
FORMAT_PEM
 )

135 if––
ªt
 = 
	`pk_wrôe_key_≥m
–
key
, 
ouçut_buf
, 16000 ) ) != 0 )

136 –
ªt
 );

138 
Àn
 = 
	`°æí
–(*Ë
ouçut_buf
 );

142 if––
ªt
 = 
	`pk_wrôe_key_dî
–
key
, 
ouçut_buf
, 16000 ) ) < 0 )

143 –
ªt
 );

145 
Àn
 = 
ªt
;

146 
c
 = 
ouçut_buf
 + (ouçut_bufË- 
Àn
;

149 if––
f
 = 
	`f›í
–
ouçut_fûe
, "wb" ) ) =
NULL
 )

152 if–
	`fwrôe
–
c
, 1, 
Àn
, 
f
 ) !=Üen )

154 
	`f˛o£
–
f
 );

158 
	`f˛o£
–
f
 );

161 
	}
}

163 #i‡!
deföed
(
_WIN32
Ë&& deföed(
POLARSSL_FS_IO
)

164 
	#USAGE_DEV_RANDOM
 \

165 " u£_dev_øndom=0|1 deÁu…: 0\n"

	)

167 
	#USAGE_DEV_RANDOM
 ""

	)

170 
	#USAGE
 \

178 
USAGE_DEV_RANDOM
 \

179 "\n"

	)

181 
	$maö
–
¨gc
, *
¨gv
[] )

183 
ªt
 = 0;

184 
pk_c⁄ãxt
 
key
;

185 
buf
[1024];

186 
i
;

187 *
p
, *
q
;

188 
íå›y_c⁄ãxt
 
íå›y
;

189 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

190 c⁄° *
≥rs
 = "gen_key";

191 #i‡
	`deföed
(
POLARSSL_ECP_C
)

192 c⁄° 
e˝_curve_öfo
 *
curve_öfo
;

198 
	`pk_öô
–&
key
 );

199 
	`mem£t
–
buf
, 0, ( buf ) );

201 if–
¨gc
 == 0 )

203 
ußge
:

204 
ªt
 = 1;

205 
	`¥ötf
–
USAGE
 );

206 #i‡
	`deföed
(
POLARSSL_ECP_C
)

207 
	`¥ötf
( "ávailabledÉc_curve values:\n" );

208 
curve_öfo
 = 
	`e˝_curve_li°
();

209 
	`¥ötf
–" %†(deÁu…)\n", 
curve_öfo
->
«me
 );

210  ( ++
curve_öfo
 )->
«me
 !
NULL
 )

211 
	`¥ötf
–" %s\n", 
curve_öfo
->
«me
 );

213 
exô
;

216 
›t
.
ty≥
 = 
DFL_TYPE
;

217 
›t
.
rß_keysize
 = 
DFL_RSA_KEYSIZE
;

218 
›t
.
ec_curve
 = 
DFL_EC_CURVE
;

219 
›t
.
fûíame
 = 
DFL_FILENAME
;

220 
›t
.
f‹m©
 = 
DFL_FORMAT
;

221 
›t
.
u£_dev_øndom
 = 
DFL_USE_DEV_RANDOM
;

223  
i
 = 1; i < 
¨gc
; i++ )

225 
p
 = 
¨gv
[
i
];

226 if––
q
 = 
	`°rchr
–
p
, '=' ) ) =
NULL
 )

227 
ußge
;

228 *
q
++ = '\0';

230 if–
	`°rcmp
–
p
, "type" ) == 0 )

232 if–
	`°rcmp
–
q
, "rsa" ) == 0 )

233 
›t
.
ty≥
 = 
POLARSSL_PK_RSA
;

234 if–
	`°rcmp
–
q
, "ec" ) == 0 )

235 
›t
.
ty≥
 = 
POLARSSL_PK_ECKEY
;

237 
ußge
;

239 if–
	`°rcmp
–
p
, "format" ) == 0 )

241 if–
	`°rcmp
–
q
, "pem" ) == 0 )

242 
›t
.
f‹m©
 = 
FORMAT_PEM
;

243 if–
	`°rcmp
–
q
, "der" ) == 0 )

244 
›t
.
f‹m©
 = 
FORMAT_DER
;

246 
ußge
;

248 if–
	`°rcmp
–
p
, "rsa_keysize" ) == 0 )

250 
›t
.
rß_keysize
 = 
	`©oi
–
q
 );

251 if–
›t
.
rß_keysize
 < 1024 || opt.rsa_keysize > 8192 )

252 
ußge
;

254 if–
	`°rcmp
–
p
, "ec_curve" ) == 0 )

256 if––
curve_öfo
 = 
	`e˝_curve_öfo_‰om_«me
–
q
 ) ) =
NULL
 )

257 
ußge
;

258 
›t
.
ec_curve
 = 
curve_öfo
->
gΩ_id
;

260 if–
	`°rcmp
–
p
, "filename" ) == 0 )

261 
›t
.
fûíame
 = 
q
;

262 if–
	`°rcmp
–
p
, "use_dev_random" ) == 0 )

264 
›t
.
u£_dev_øndom
 = 
	`©oi
–
q
 );

265 if–
›t
.
u£_dev_øndom
 < 0 || opt.use_dev_random > 1 )

266 
ußge
;

269 
ußge
;

272 
	`¥ötf
( "\n . SeedingÅheÑandomÇumber generator..." );

273 
	`fÊush
–
°dout
 );

275 
	`íå›y_öô
–&
íå›y
 );

276 #i‡!
	`deföed
(
_WIN32
Ë&& deföed(
POLARSSL_FS_IO
)

277 if–
›t
.
u£_dev_øndom
 )

279 if––
ªt
 = 
	`íå›y_add_sour˚
–&
íå›y
, 
dev_øndom_íå›y_pﬁl
,

280 
NULL
, 
DEV_RANDOM_THRESHOLD
 ) ) != 0 )

282 
	`¥ötf
–" faûed\¿ !É¡r›y_add_sour˚Ñëu∫ed -0x%04x\n", -
ªt
 );

283 
exô
;

286 
	`¥ötf
("\n Using /dev/random, so canÅakeáÜongÅime! " );

287 
	`fÊush
–
°dout
 );

291 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

292 (c⁄° *Ë
≥rs
,

293 
	`°æí
–
≥rs
 ) ) ) != 0 )

295 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed -0x%04x\n", -
ªt
 );

296 
exô
;

302 
	`¥ötf
( "\n . GeneratingÅheÖrivate key ..." );

303 
	`fÊush
–
°dout
 );

305 if––
ªt
 = 
	`pk_öô_˘x
–&
key
, 
	`pk_öfo_‰om_ty≥
–
›t
.
ty≥
 ) ) ) != 0 )

307 
	`¥ötf
–" faûed\¿ !Ök_öô_˘xÑëu∫ed -0x%04x", -
ªt
 );

308 
exô
;

311 #i‡
	`deföed
(
POLARSSL_RSA_C
Ë&& deföed(
POLARSSL_GENPRIME
)

312 if–
›t
.
ty≥
 =
POLARSSL_PK_RSA
 )

314 
ªt
 = 
	`rß_gí_key
–
	`pk_rß
–
key
 ), 
˘r_drbg_øndom
, &
˘r_drbg
,

315 
›t
.
rß_keysize
, 65537 );

316 if–
ªt
 != 0 )

318 
	`¥ötf
–" faûed\¿ !Ñß_gí_keyÑëu∫ed -0x%04x", -
ªt
 );

319 
exô
;

324 #i‡
	`deföed
(
POLARSSL_ECP_C
)

325 if–
›t
.
ty≥
 =
POLARSSL_PK_ECKEY
 )

327 
ªt
 = 
	`e˝_gí_key
–
›t
.
ec_curve
, 
	`pk_ec
–
key
 ),

328 
˘r_drbg_øndom
, &
˘r_drbg
 );

329 if–
ªt
 != 0 )

331 
	`¥ötf
–" faûed\¿ !Ñß_gí_keyÑëu∫ed -0x%04x", -
ªt
 );

332 
exô
;

338 
	`¥ötf
( " failed\n ! keyÅypeÇot supported\n" );

339 
exô
;

345 
	`¥ötf
( " ok\n . Key information:\n" );

347 #i‡
	`deföed
(
POLARSSL_RSA_C
)

348 if–
	`pk_gë_ty≥
–&
key
 ) =
POLARSSL_PK_RSA
 )

350 
rß_c⁄ãxt
 *
rß
 = 
	`pk_rß
–
key
 );

351 
	`mpi_wrôe_fûe
–"N: ", &
rß
->
N
, 16, 
NULL
 );

352 
	`mpi_wrôe_fûe
–"E: ", &
rß
->
E
, 16, 
NULL
 );

353 
	`mpi_wrôe_fûe
–"D: ", &
rß
->
D
, 16, 
NULL
 );

354 
	`mpi_wrôe_fûe
–"P: ", &
rß
->
P
, 16, 
NULL
 );

355 
	`mpi_wrôe_fûe
–"Q: ", &
rß
->
Q
, 16, 
NULL
 );

356 
	`mpi_wrôe_fûe
–"DP: ", &
rß
->
DP
, 16, 
NULL
 );

357 
	`mpi_wrôe_fûe
–"DQ: ", &
rß
->
DQ
, 16, 
NULL
 );

358 
	`mpi_wrôe_fûe
–"QP: ", &
rß
->
QP
, 16, 
NULL
 );

362 #i‡
	`deföed
(
POLARSSL_ECP_C
)

363 if–
	`pk_gë_ty≥
–&
key
 ) =
POLARSSL_PK_ECKEY
 )

365 
e˝_key∑ú
 *
e˝
 = 
	`pk_ec
–
key
 );

366 
	`¥ötf
( "curve: %s\n",

367 
	`e˝_curve_öfo_‰om_gΩ_id
–
e˝
->
gΩ
.
id
 )->
«me
 );

368 
	`mpi_wrôe_fûe
–"X_Q: ", &
e˝
->
Q
.
X
, 16, 
NULL
 );

369 
	`mpi_wrôe_fûe
–"Y_Q: ", &
e˝
->
Q
.
Y
, 16, 
NULL
 );

370 
	`mpi_wrôe_fûe
–"D: ", &
e˝
->
d
 , 16, 
NULL
 );

374 
	`¥ötf
(" ! keyÅypeÇot supported\n");

376 
	`wrôe_¥iv©e_key
–&
key
, 
›t
.
fûíame
 );

378 
exô
:

380 if–
ªt
 != 0 &&Ñet != 1)

382 #ifde‡
POLARSSL_ERROR_C


383 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, ( buf ) );

384 
	`¥ötf
–" - %s\n", 
buf
 );

386 
	`¥ötf
("\n");

390 
	`pk_‰ì
–&
key
 );

391 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

392 
	`íå›y_‰ì
–&
íå›y
 );

394 #i‡
	`deföed
(
_WIN32
)

395 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

396 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

399 –
ªt
 );

400 
	}
}

	@polarssl/programs/pkey/key_app.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dlib.h
>

34 
	~<°dio.h
>

36 
	~"pﬁ¨s¶/îr‹.h
"

37 
	~"pﬁ¨s¶/rß.h
"

38 
	~"pﬁ¨s¶/x509.h
"

40 #i‡!
deföed
(
POLARSSL_BIGNUM_C
) || \

41 !
deföed
(
POLARSSL_PK_PARSE_C
Ë|| !
	$deföed
(
POLARSSL_FS_IO
)

42 
	$maö
–
¨gc
, *
¨gv
[] )

44 ((Ë
¨gc
);

45 ((Ë
¨gv
);

47 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or "

50 
	}
}

53 
	#MODE_NONE
 0

	)

54 
	#MODE_PRIVATE
 1

	)

55 
	#MODE_PUBLIC
 2

	)

57 
	#DFL_MODE
 
MODE_NONE


	)

58 
	#DFL_FILENAME
 "keyfûe.key"

	)

59 
	#DFL_PASSWORD
 ""

	)

60 
	#DFL_PASSWORD_FILE
 ""

	)

61 
	#DFL_DEBUG_LEVEL
 0

	)

66 
	s›ti⁄s


68 
	mmode
;

69 c⁄° *
	mfûíame
;

70 c⁄° *
	m∑ssw‹d
;

71 c⁄° *
	m∑ssw‹d_fûe
;

72 } 
	g›t
;

74 
	#USAGE
 \

81 "\n"

	)

83 
	$maö
–
¨gc
, *
¨gv
[] )

85 
ªt
 = 0;

86 
pk_c⁄ãxt
 
pk
;

87 
buf
[1024];

88 
i
;

89 *
p
, *
q
;

94 
	`pk_öô
–&
pk
 );

95 
	`mem£t
–
buf
, 0, (buf) );

97 if–
¨gc
 == 0 )

99 
ußge
:

100 
	`¥ötf
–
USAGE
 );

101 
exô
;

104 
›t
.
mode
 = 
DFL_MODE
;

105 
›t
.
fûíame
 = 
DFL_FILENAME
;

106 
›t
.
∑ssw‹d
 = 
DFL_PASSWORD
;

107 
›t
.
∑ssw‹d_fûe
 = 
DFL_PASSWORD_FILE
;

109  
i
 = 1; i < 
¨gc
; i++ )

111 
p
 = 
¨gv
[
i
];

112 if––
q
 = 
	`°rchr
–
p
, '=' ) ) =
NULL
 )

113 
ußge
;

114 *
q
++ = '\0';

116 if–
	`°rcmp
–
p
, "mode" ) == 0 )

118 if–
	`°rcmp
–
q
, "private" ) == 0 )

119 
›t
.
mode
 = 
MODE_PRIVATE
;

120 if–
	`°rcmp
–
q
, "public" ) == 0 )

121 
›t
.
mode
 = 
MODE_PUBLIC
;

123 
ußge
;

125 if–
	`°rcmp
–
p
, "filename" ) == 0 )

126 
›t
.
fûíame
 = 
q
;

127 if–
	`°rcmp
–
p
, "password" ) == 0 )

128 
›t
.
∑ssw‹d
 = 
q
;

129 if–
	`°rcmp
–
p
, "password_file" ) == 0 )

130 
›t
.
∑ssw‹d_fûe
 = 
q
;

132 
ußge
;

135 if–
›t
.
mode
 =
MODE_PRIVATE
 )

137 if–
	`°æí
–
›t
.
∑ssw‹d
 ) && såÀn–›t.
∑ssw‹d_fûe
 ) )

139 
	`¥ötf
( "Error: cannot have bothÖasswordándÖassword_file\n" );

140 
ußge
;

143 if–
	`°æí
–
›t
.
∑ssw‹d_fûe
 ) )

145 
FILE
 *
f
;

147 
	`¥ötf
( "\n . LoadingÅheÖassword file ..." );

148 if––
f
 = 
	`f›í
–
›t
.
∑ssw‹d_fûe
, "rb" ) ) =
NULL
 )

150 
	`¥ötf
( " failed\n ! fopenÑeturned NULL\n" );

151 
exô
;

153 if–
	`fgës
–
buf
, (buf), 
f
 ) =
NULL
 )

155 
	`f˛o£
–
f
 );

156 
	`¥ötf
( "Error: fgets() failedÅoÑetrieveÖassword\n" );

157 
exô
;

159 
	`f˛o£
–
f
 );

161 
i
 = (Ë
	`°æí
–
buf
 );

162 if–
buf
[
i
 - 1] == '\n' ) buf[i - 1] = '\0';

163 if–
buf
[
i
 - 2] == '\r' ) buf[i - 2] = '\0';

164 
›t
.
∑ssw‹d
 = 
buf
;

170 
	`¥ötf
( "\n . LoadingÅheÖrivate key ..." );

171 
	`fÊush
–
°dout
 );

173 
ªt
 = 
	`pk_∑r£_keyfûe
–&
pk
, 
›t
.
fûíame
, o±.
∑ssw‹d
 );

175 if–
ªt
 != 0 )

177 
	`¥ötf
–" faûed\¿ !Ök_∑r£_keyfûêªtu∫ed -0x%04x\n", -
ªt
 );

178 
exô
;

181 
	`¥ötf
( " ok\n" );

186 
	`¥ötf
( " . Key information ...\n" );

187 #i‡
	`deföed
(
POLARSSL_RSA_C
)

188 if–
	`pk_gë_ty≥
–&
pk
 ) =
POLARSSL_PK_RSA
 )

190 
rß_c⁄ãxt
 *
rß
 = 
	`pk_rß
–
pk
 );

191 
	`mpi_wrôe_fûe
–"N: ", &
rß
->
N
, 16, 
NULL
 );

192 
	`mpi_wrôe_fûe
–"E: ", &
rß
->
E
, 16, 
NULL
 );

193 
	`mpi_wrôe_fûe
–"D: ", &
rß
->
D
, 16, 
NULL
 );

194 
	`mpi_wrôe_fûe
–"P: ", &
rß
->
P
, 16, 
NULL
 );

195 
	`mpi_wrôe_fûe
–"Q: ", &
rß
->
Q
, 16, 
NULL
 );

196 
	`mpi_wrôe_fûe
–"DP: ", &
rß
->
DP
, 16, 
NULL
 );

197 
	`mpi_wrôe_fûe
–"DQ: ", &
rß
->
DQ
, 16, 
NULL
 );

198 
	`mpi_wrôe_fûe
–"QP: ", &
rß
->
QP
, 16, 
NULL
 );

202 #i‡
	`deföed
(
POLARSSL_ECP_C
)

203 if–
	`pk_gë_ty≥
–&
pk
 ) =
POLARSSL_PK_ECKEY
 )

205 
e˝_key∑ú
 *
e˝
 = 
	`pk_ec
–
pk
 );

206 
	`mpi_wrôe_fûe
–"Q(X): ", &
e˝
->
Q
.
X
, 16, 
NULL
 );

207 
	`mpi_wrôe_fûe
–"Q(Y): ", &
e˝
->
Q
.
Y
, 16, 
NULL
 );

208 
	`mpi_wrôe_fûe
–"Q(Z): ", &
e˝
->
Q
.
Z
, 16, 
NULL
 );

209 
	`mpi_wrôe_fûe
–"D : ", &
e˝
->
d
 , 16, 
NULL
 );

214 
	`¥ötf
("DoÇot know howÅoÖrint key information forÅhisÅype\n" );

215 
exô
;

218 if–
›t
.
mode
 =
MODE_PUBLIC
 )

223 
	`¥ötf
( "\n . LoadingÅheÖublic key ..." );

224 
	`fÊush
–
°dout
 );

226 
ªt
 = 
	`pk_∑r£_public_keyfûe
–&
pk
, 
›t
.
fûíame
 );

228 if–
ªt
 != 0 )

230 
	`¥ötf
–" faûed\¿ !Ök_∑r£_public_keyfûêªtu∫ed -0x%04x\n", -
ªt
 );

231 
exô
;

234 
	`¥ötf
( " ok\n" );

236 
	`¥ötf
( " . Key information ...\n" );

237 #i‡
	`deföed
(
POLARSSL_RSA_C
)

238 if–
	`pk_gë_ty≥
–&
pk
 ) =
POLARSSL_PK_RSA
 )

240 
rß_c⁄ãxt
 *
rß
 = 
	`pk_rß
–
pk
 );

241 
	`mpi_wrôe_fûe
–"N: ", &
rß
->
N
, 16, 
NULL
 );

242 
	`mpi_wrôe_fûe
–"E: ", &
rß
->
E
, 16, 
NULL
 );

246 #i‡
	`deföed
(
POLARSSL_ECP_C
)

247 if–
	`pk_gë_ty≥
–&
pk
 ) =
POLARSSL_PK_ECKEY
 )

249 
e˝_key∑ú
 *
e˝
 = 
	`pk_ec
–
pk
 );

250 
	`mpi_wrôe_fûe
–"Q(X): ", &
e˝
->
Q
.
X
, 16, 
NULL
 );

251 
	`mpi_wrôe_fûe
–"Q(Y): ", &
e˝
->
Q
.
Y
, 16, 
NULL
 );

252 
	`mpi_wrôe_fûe
–"Q(Z): ", &
e˝
->
Q
.
Z
, 16, 
NULL
 );

257 
	`¥ötf
("DoÇot know howÅoÖrint key information forÅhisÅype\n" );

258 
exô
;

262 
ußge
;

264 
exô
:

266 #i‡
	`deföed
(
POLARSSL_ERROR_C
)

267 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, (buf) );

268 
	`¥ötf
–" ! La°Éº‹ was: %s\n", 
buf
 );

271 
	`pk_‰ì
–&
pk
 );

273 #i‡
	`deföed
(
_WIN32
)

274 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

275 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

278 –
ªt
 );

279 
	}
}

	@polarssl/programs/pkey/key_app_writer.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dlib.h
>

34 
	~<°dio.h
>

36 
	~"pﬁ¨s¶/îr‹.h
"

37 
	~"pﬁ¨s¶/pk.h
"

38 
	~"pﬁ¨s¶/îr‹.h
"

40 #i‡!
deföed
(
POLARSSL_PK_WRITE_C
Ë|| !deföed(
POLARSSL_FS_IO
)

41 
	$maö
–
¨gc
, *
¨gv
[] )

43 ((Ë
¨gc
);

44 ((Ë
¨gv
);

46 
	`¥ötf
( "POLARSSL_PK_WRITE_Cánd/or POLARSSL_FS_IOÇot defined.\n" );

48 
	}
}

51 
	#MODE_NONE
 0

	)

52 
	#MODE_PRIVATE
 1

	)

53 
	#MODE_PUBLIC
 2

	)

55 
	#OUTPUT_MODE_NONE
 0

	)

56 
	#OUTPUT_MODE_PRIVATE
 1

	)

57 
	#OUTPUT_MODE_PUBLIC
 2

	)

59 
	#OUTPUT_FORMAT_PEM
 0

	)

60 
	#OUTPUT_FORMAT_DER
 1

	)

62 
	#DFL_MODE
 
MODE_NONE


	)

63 
	#DFL_FILENAME
 "keyfûe.key"

	)

64 
	#DFL_DEBUG_LEVEL
 0

	)

65 
	#DFL_OUTPUT_MODE
 
OUTPUT_MODE_NONE


	)

66 #i‡
deföed
(
POLARSSL_PEM_WRITE_C
)

67 
	#DFL_OUTPUT_FILENAME
 "keyfûe.≥m"

	)

68 
	#DFL_OUTPUT_FORMAT
 
OUTPUT_FORMAT_PEM


	)

70 
	#DFL_OUTPUT_FILENAME
 "keyfûe.dî"

	)

71 
	#DFL_OUTPUT_FORMAT
 
OUTPUT_FORMAT_DER


	)

77 
	s›ti⁄s


79 
	mmode
;

80 c⁄° *
	mfûíame
;

81 
	mouçut_mode
;

82 c⁄° *
	mouçut_fûe
;

83 
	mouçut_f‹m©
;

84 } 
	g›t
;

86 
	$wrôe_public_key
–
pk_c⁄ãxt
 *
key
, c⁄° *
ouçut_fûe
 )

88 
ªt
;

89 
FILE
 *
f
;

90 
ouçut_buf
[16000];

91 *
c
 = 
ouçut_buf
;

92 
size_t
 
Àn
 = 0;

94 
	`mem£t
(
ouçut_buf
, 0, 16000);

96 #i‡
	`deföed
(
POLARSSL_PEM_WRITE_C
)

97 if–
›t
.
ouçut_f‹m©
 =
OUTPUT_FORMAT_PEM
 )

99 if––
ªt
 = 
	`pk_wrôe_pubkey_≥m
–
key
, 
ouçut_buf
, 16000 ) ) != 0 )

100 –
ªt
 );

102 
Àn
 = 
	`°æí
–(*Ë
ouçut_buf
 );

107 if––
ªt
 = 
	`pk_wrôe_pubkey_dî
–
key
, 
ouçut_buf
, 16000 ) ) < 0 )

108 –
ªt
 );

110 
Àn
 = 
ªt
;

111 
c
 = 
ouçut_buf
 + (ouçut_bufË- 
Àn
 - 1;

114 if––
f
 = 
	`f›í
–
ouçut_fûe
, "w" ) ) =
NULL
 )

117 if–
	`fwrôe
–
c
, 1, 
Àn
, 
f
 ) !=Üen )

119 
	`f˛o£
–
f
 );

123 
	`f˛o£
–
f
 );

126 
	}
}

128 
	$wrôe_¥iv©e_key
–
pk_c⁄ãxt
 *
key
, c⁄° *
ouçut_fûe
 )

130 
ªt
;

131 
FILE
 *
f
;

132 
ouçut_buf
[16000];

133 *
c
 = 
ouçut_buf
;

134 
size_t
 
Àn
 = 0;

136 
	`mem£t
(
ouçut_buf
, 0, 16000);

138 #i‡
	`deföed
(
POLARSSL_PEM_WRITE_C
)

139 if–
›t
.
ouçut_f‹m©
 =
OUTPUT_FORMAT_PEM
 )

141 if––
ªt
 = 
	`pk_wrôe_key_≥m
–
key
, 
ouçut_buf
, 16000 ) ) != 0 )

142 –
ªt
 );

144 
Àn
 = 
	`°æí
–(*Ë
ouçut_buf
 );

149 if––
ªt
 = 
	`pk_wrôe_key_dî
–
key
, 
ouçut_buf
, 16000 ) ) < 0 )

150 –
ªt
 );

152 
Àn
 = 
ªt
;

153 
c
 = 
ouçut_buf
 + (ouçut_bufË- 
Àn
 - 1;

156 if––
f
 = 
	`f›í
–
ouçut_fûe
, "w" ) ) =
NULL
 )

159 if–
	`fwrôe
–
c
, 1, 
Àn
, 
f
 ) !=Üen )

161 
	`f˛o£
–
f
 );

165 
	`f˛o£
–
f
 );

168 
	}
}

170 #i‡
deföed
(
POLARSSL_PEM_WRITE_C
)

171 
	#USAGE_OUT
 \

173 " ouçut_f‹m©ıem|dî deÁu…:Öem\n"

	)

175 
	#USAGE_OUT
 \

177 " ouçut_f‹m©=dî deÁu…: dî\n"

	)

180 
	#USAGE
 \

186 
USAGE_OUT
 \

187 "\n"

	)

189 
	$maö
–
¨gc
, *
¨gv
[] )

191 
ªt
 = 0;

192 
pk_c⁄ãxt
 
key
;

193 
buf
[1024];

194 
i
;

195 *
p
, *
q
;

200 
	`pk_öô
–&
key
 );

201 
	`mem£t
–
buf
, 0, ( buf ) );

203 if–
¨gc
 == 0 )

205 
ußge
:

206 
ªt
 = 1;

207 
	`¥ötf
–
USAGE
 );

208 
exô
;

211 
›t
.
mode
 = 
DFL_MODE
;

212 
›t
.
fûíame
 = 
DFL_FILENAME
;

213 
›t
.
ouçut_mode
 = 
DFL_OUTPUT_MODE
;

214 
›t
.
ouçut_fûe
 = 
DFL_OUTPUT_FILENAME
;

215 
›t
.
ouçut_f‹m©
 = 
DFL_OUTPUT_FORMAT
;

217  
i
 = 1; i < 
¨gc
; i++ )

219 
p
 = 
¨gv
[
i
];

220 if––
q
 = 
	`°rchr
–
p
, '=' ) ) =
NULL
 )

221 
ußge
;

222 *
q
++ = '\0';

224 if–
	`°rcmp
–
p
, "mode" ) == 0 )

226 if–
	`°rcmp
–
q
, "private" ) == 0 )

227 
›t
.
mode
 = 
MODE_PRIVATE
;

228 if–
	`°rcmp
–
q
, "public" ) == 0 )

229 
›t
.
mode
 = 
MODE_PUBLIC
;

231 
ußge
;

233 if–
	`°rcmp
–
p
, "output_mode" ) == 0 )

235 if–
	`°rcmp
–
q
, "private" ) == 0 )

236 
›t
.
ouçut_mode
 = 
OUTPUT_MODE_PRIVATE
;

237 if–
	`°rcmp
–
q
, "public" ) == 0 )

238 
›t
.
ouçut_mode
 = 
OUTPUT_MODE_PUBLIC
;

240 
ußge
;

242 if–
	`°rcmp
–
p
, "output_format" ) == 0 )

244 #i‡
	`deföed
(
POLARSSL_PEM_WRITE_C
)

245 if–
	`°rcmp
–
q
, "pem" ) == 0 )

246 
›t
.
ouçut_f‹m©
 = 
OUTPUT_FORMAT_PEM
;

249 if–
	`°rcmp
–
q
, "der" ) == 0 )

250 
›t
.
ouçut_f‹m©
 = 
OUTPUT_FORMAT_DER
;

252 
ußge
;

254 if–
	`°rcmp
–
p
, "filename" ) == 0 )

255 
›t
.
fûíame
 = 
q
;

256 if–
	`°rcmp
–
p
, "output_file" ) == 0 )

257 
›t
.
ouçut_fûe
 = 
q
;

259 
ußge
;

262 if–
›t
.
mode
 =
MODE_NONE
 && o±.
ouçut_mode
 !
OUTPUT_MODE_NONE
 )

264 
	`¥ötf
( "\nCannot outputá key withoutÑeading one.\n");

265 
exô
;

268 if–
›t
.
mode
 =
MODE_PUBLIC
 && o±.
ouçut_mode
 =
OUTPUT_MODE_PRIVATE
 )

270 
	`¥ötf
( "\nCannot outputáÖrivate key fromáÖublic key.\n");

271 
exô
;

274 if–
›t
.
mode
 =
MODE_PRIVATE
 )

279 
	`¥ötf
( "\n . LoadingÅheÖrivate key ..." );

280 
	`fÊush
–
°dout
 );

282 
ªt
 = 
	`pk_∑r£_keyfûe
–&
key
, 
›t
.
fûíame
, 
NULL
 );

284 if–
ªt
 != 0 )

286 
	`pﬁ¨s¶_°ªº‹
–
ªt
, (*Ë
buf
, (buf) );

287 
	`¥ötf
–" faûed\¿ !Ök_∑r£_keyfûêªtu∫ed -0x%04x - %s\n\n", -
ªt
, 
buf
 );

288 
exô
;

291 
	`¥ötf
( " ok\n" );

296 
	`¥ötf
( " . Key information ...\n" );

298 #i‡
	`deföed
(
POLARSSL_RSA_C
)

299 if–
	`pk_gë_ty≥
–&
key
 ) =
POLARSSL_PK_RSA
 )

301 
rß_c⁄ãxt
 *
rß
 = 
	`pk_rß
–
key
 );

302 
	`mpi_wrôe_fûe
–"N: ", &
rß
->
N
, 16, 
NULL
 );

303 
	`mpi_wrôe_fûe
–"E: ", &
rß
->
E
, 16, 
NULL
 );

304 
	`mpi_wrôe_fûe
–"D: ", &
rß
->
D
, 16, 
NULL
 );

305 
	`mpi_wrôe_fûe
–"P: ", &
rß
->
P
, 16, 
NULL
 );

306 
	`mpi_wrôe_fûe
–"Q: ", &
rß
->
Q
, 16, 
NULL
 );

307 
	`mpi_wrôe_fûe
–"DP: ", &
rß
->
DP
, 16, 
NULL
 );

308 
	`mpi_wrôe_fûe
–"DQ: ", &
rß
->
DQ
, 16, 
NULL
 );

309 
	`mpi_wrôe_fûe
–"QP: ", &
rß
->
QP
, 16, 
NULL
 );

313 #i‡
	`deföed
(
POLARSSL_ECP_C
)

314 if–
	`pk_gë_ty≥
–&
key
 ) =
POLARSSL_PK_ECKEY
 )

316 
e˝_key∑ú
 *
e˝
 = 
	`pk_ec
–
key
 );

317 
	`mpi_wrôe_fûe
–"Q(X): ", &
e˝
->
Q
.
X
, 16, 
NULL
 );

318 
	`mpi_wrôe_fûe
–"Q(Y): ", &
e˝
->
Q
.
Y
, 16, 
NULL
 );

319 
	`mpi_wrôe_fûe
–"Q(Z): ", &
e˝
->
Q
.
Z
, 16, 
NULL
 );

320 
	`mpi_wrôe_fûe
–"D : ", &
e˝
->
d
 , 16, 
NULL
 );

324 
	`¥ötf
("keyÅypeÇot supported yet\n");

327 if–
›t
.
mode
 =
MODE_PUBLIC
 )

332 
	`¥ötf
( "\n . LoadingÅheÖublic key ..." );

333 
	`fÊush
–
°dout
 );

335 
ªt
 = 
	`pk_∑r£_public_keyfûe
–&
key
, 
›t
.
fûíame
 );

337 if–
ªt
 != 0 )

339 
	`pﬁ¨s¶_°ªº‹
–
ªt
, (*Ë
buf
, (buf) );

340 
	`¥ötf
–" faûed\¿ !Ök_∑r£_public_keyÑëu∫ed -0x%04x - %s\n\n", -
ªt
, 
buf
 );

341 
exô
;

344 
	`¥ötf
( " ok\n" );

349 
	`¥ötf
( " . Key information ...\n" );

351 #i‡
	`deföed
(
POLARSSL_RSA_C
)

352 if–
	`pk_gë_ty≥
–&
key
 ) =
POLARSSL_PK_RSA
 )

354 
rß_c⁄ãxt
 *
rß
 = 
	`pk_rß
–
key
 );

355 
	`mpi_wrôe_fûe
–"N: ", &
rß
->
N
, 16, 
NULL
 );

356 
	`mpi_wrôe_fûe
–"E: ", &
rß
->
E
, 16, 
NULL
 );

360 #i‡
	`deföed
(
POLARSSL_ECP_C
)

361 if–
	`pk_gë_ty≥
–&
key
 ) =
POLARSSL_PK_ECKEY
 )

363 
e˝_key∑ú
 *
e˝
 = 
	`pk_ec
–
key
 );

364 
	`mpi_wrôe_fûe
–"Q(X): ", &
e˝
->
Q
.
X
, 16, 
NULL
 );

365 
	`mpi_wrôe_fûe
–"Q(Y): ", &
e˝
->
Q
.
Y
, 16, 
NULL
 );

366 
	`mpi_wrôe_fûe
–"Q(Z): ", &
e˝
->
Q
.
Z
, 16, 
NULL
 );

370 
	`¥ötf
("keyÅypeÇot supported yet\n");

373 
ußge
;

375 if–
›t
.
ouçut_mode
 =
OUTPUT_MODE_PUBLIC
 )

377 
	`wrôe_public_key
–&
key
, 
›t
.
ouçut_fûe
 );

379 if–
›t
.
ouçut_mode
 =
OUTPUT_MODE_PRIVATE
 )

381 
	`wrôe_¥iv©e_key
–&
key
, 
›t
.
ouçut_fûe
 );

384 
exô
:

386 if–
ªt
 != 0 &&Ñet != 1)

388 #ifde‡
POLARSSL_ERROR_C


389 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, ( buf ) );

390 
	`¥ötf
–" - %s\n", 
buf
 );

392 
	`¥ötf
("\n");

396 
	`pk_‰ì
–&
key
 );

398 #i‡
	`deföed
(
_WIN32
)

399 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

400 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

403 –
ªt
 );

404 
	}
}

	@polarssl/programs/pkey/mpi_demo.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°dio.h
>

34 
	~"pﬁ¨s¶/bignum.h
"

36 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_FS_IO
)

37 
	$maö
–
¨gc
, *
¨gv
[] )

39 ((Ë
¨gc
);

40 ((Ë
¨gv
);

42 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_FS_IOÇot defined.\n");

44 
	}
}

46 
	$maö
–
¨gc
, *
¨gv
[] )

48 
mpi
 
E
, 
P
, 
Q
, 
N
, 
H
, 
D
, 
X
, 
Y
, 
Z
;

50 ((Ë
¨gc
);

51 ((Ë
¨gv
);

53 
	`mpi_öô
–&
E
 ); mpi_öô–&
P
 ); mpi_öô–&
Q
 ); mpi_öô–&
N
 );

54 
	`mpi_öô
–&
H
 ); mpi_öô–&
D
 ); mpi_öô–&
X
 ); mpi_öô–&
Y
 );

55 
	`mpi_öô
–&
Z
 );

57 
	`mpi_ªad_°rög
–&
P
, 10, "2789" );

58 
	`mpi_ªad_°rög
–&
Q
, 10, "3203" );

59 
	`mpi_ªad_°rög
–&
E
, 10, "257" );

60 
	`mpi_mul_mpi
–&
N
, &
P
, &
Q
 );

62 
	`¥ötf
( "\n Public key:\n\n" );

63 
	`mpi_wrôe_fûe
–" N = ", &
N
, 10, 
NULL
 );

64 
	`mpi_wrôe_fûe
–" E = ", &
E
, 10, 
NULL
 );

66 
	`¥ötf
( "\n Private key:\n\n" );

67 
	`mpi_wrôe_fûe
–" P = ", &
P
, 10, 
NULL
 );

68 
	`mpi_wrôe_fûe
–" Q = ", &
Q
, 10, 
NULL
 );

70 #i‡
	`deföed
(
POLARSSL_GENPRIME
)

71 
	`mpi_sub_öt
–&
P
, &P, 1 );

72 
	`mpi_sub_öt
–&
Q
, &Q, 1 );

73 
	`mpi_mul_mpi
–&
H
, &
P
, &
Q
 );

74 
	`mpi_öv_mod
–&
D
, &
E
, &
H
 );

76 
	`mpi_wrôe_fûe
( " D = E^-1 mod (P-1)*(Q-1) = ",

77 &
D
, 10, 
NULL
 );

79 
	`¥ötf
("\nTest skipped (POLARSSL_GENPRIMEÇot defined).\n\n");

81 
	`mpi_ªad_°rög
–&
X
, 10, "55555" );

82 
	`mpi_exp_mod
–&
Y
, &
X
, &
E
, &
N
, 
NULL
 );

83 
	`mpi_exp_mod
–&
Z
, &
Y
, &
D
, &
N
, 
NULL
 );

85 
	`¥ötf
( "\n RSA operation:\n\n" );

86 
	`mpi_wrôe_fûe
–" X (∂aöãxtË = ", &
X
, 10, 
NULL
 );

87 
	`mpi_wrôe_fûe
–" Y (cùhîãxtËX^E mod N = ", &
Y
, 10, 
NULL
 );

88 
	`mpi_wrôe_fûe
–" Z (de¸y±edË = Y^D mod N = ", &
Z
, 10, 
NULL
 );

89 
	`¥ötf
( "\n" );

91 
	`mpi_‰ì
–&
E
 ); mpi_‰ì–&
P
 ); mpi_‰ì–&
Q
 ); mpi_‰ì–&
N
 );

92 
	`mpi_‰ì
–&
H
 ); mpi_‰ì–&
D
 ); mpi_‰ì–&
X
 ); mpi_‰ì–&
Y
 );

93 
	`mpi_‰ì
–&
Z
 );

95 #i‡
	`deföed
(
_WIN32
)

96 
	`¥ötf
( " Press EnterÅoÉxitÅhisÖrogram.\n" );

97 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

101 
	}
}

	@polarssl/programs/pkey/pk_decrypt.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

35 
	~"pﬁ¨s¶/îr‹.h
"

36 
	~"pﬁ¨s¶/pk.h
"

37 
	~"pﬁ¨s¶/íå›y.h
"

38 
	~"pﬁ¨s¶/˘r_drbg.h
"

40 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_PK_PARSE_C
) || \

41 !
deföed
(
POLARSSL_FS_IO
Ë|| !deföed(
POLARSSL_ENTROPY_C
) || \

42 !
	$deföed
(
POLARSSL_CTR_DRBG_C
)

43 
	$maö
–
¨gc
, *
¨gv
[] )

45 ((Ë
¨gc
);

46 ((Ë
¨gv
);

48 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_PK_PARSE_Cánd/or "

52 
	}
}

54 
	$maö
–
¨gc
, *
¨gv
[] )

56 
FILE
 *
f
;

57 
ªt
, 
c
;

58 
size_t
 
i
, 
ﬁí
 = 0;

59 
pk_c⁄ãxt
 
pk
;

60 
íå›y_c⁄ãxt
 
íå›y
;

61 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

62 
ªsu…
[1024];

63 
buf
[512];

64 c⁄° *
≥rs
 = "pk_decrypt";

65 ((Ë
¨gv
);

67 
	`mem£t
(
ªsu…
, 0, (Ñesult ) );

68 
ªt
 = 1;

70 if–
¨gc
 != 2 )

72 
	`¥ötf
( "usage:Ök_decrypt <key_file>\n" );

74 #i‡
	`deföed
(
_WIN32
)

75 
	`¥ötf
( "\n" );

78 
exô
;

81 
	`¥ötf
( "\n . SeedingÅheÑandomÇumber generator..." );

82 
	`fÊush
–
°dout
 );

84 
	`íå›y_öô
–&
íå›y
 );

85 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

86 (c⁄° *Ë
≥rs
,

87 
	`°æí
–
≥rs
 ) ) ) != 0 )

89 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed %d\n", 
ªt
 );

90 
exô
;

93 
	`¥ötf
–"\¿ . RódögÖriv©êkey from '%s'", 
¨gv
[1] );

94 
	`fÊush
–
°dout
 );

96 
	`pk_öô
–&
pk
 );

98 if––
ªt
 = 
	`pk_∑r£_keyfûe
–&
pk
, 
¨gv
[1], "" ) ) != 0 )

100 
	`¥ötf
–" faûed\¿ !Ök_∑r£_keyfûêªtu∫ed -0x%04x\n", -
ªt
 );

101 
exô
;

107 
ªt
 = 1;

109 if––
f
 = 
	`f›í
–"ªsu…-íc.txt", "rb" ) ) =
NULL
 )

111 
	`¥ötf
( "\n ! CouldÇot open %s\n\n", "result-enc.txt" );

112 
exô
;

115 
i
 = 0;

117  
	`fsˇnf
–
f
, "%02X", &
c
 ) > 0 &&

118 
i
 < (Ë–
buf
 ) )

119 
buf
[
i
++] = (Ë
c
;

121 
	`f˛o£
–
f
 );

126 
	`¥ötf
( "\n . DecryptingÅheÉncrypted data" );

127 
	`fÊush
–
°dout
 );

129 if––
ªt
 = 
	`pk_de¸y±
–&
pk
, 
buf
, 
i
, 
ªsu…
, &
ﬁí
, (result),

130 
˘r_drbg_øndom
, &
˘r_drbg
 ) ) != 0 )

132 
	`¥ötf
–" faûed\¿ !Ök_de¸y±Ñëu∫ed -0x%04x\n", -
ªt
 );

133 
exô
;

136 
	`¥ötf
( "\n . OK\n\n" );

138 
	`¥ötf
–"Thêde¸y±edÑesu… is: '%s'\n\n", 
ªsu…
 );

140 
ªt
 = 0;

142 
exô
:

143 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

144 
	`íå›y_‰ì
–&
íå›y
 );

146 #i‡
	`deföed
(
POLARSSL_ERROR_C
)

147 
	`pﬁ¨s¶_°ªº‹
–
ªt
, (*Ë
buf
, (buf) );

148 
	`¥ötf
–" ! La°Éº‹ was: %s\n", 
buf
 );

151 #i‡
	`deföed
(
_WIN32
)

152 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

153 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

156 –
ªt
 );

157 
	}
}

159 
	gPOLARSSL_ENTROPY_C
 && 
	gPOLARSSL_CTR_DRBG_C
 */

	@polarssl/programs/pkey/pk_encrypt.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

35 
	~"pﬁ¨s¶/îr‹.h
"

36 
	~"pﬁ¨s¶/pk.h
"

37 
	~"pﬁ¨s¶/íå›y.h
"

38 
	~"pﬁ¨s¶/˘r_drbg.h
"

40 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_PK_PARSE_C
) || \

41 !
deföed
(
POLARSSL_ENTROPY_C
Ë|| !deföed(
POLARSSL_FS_IO
) || \

42 !
	$deföed
(
POLARSSL_CTR_DRBG_C
)

43 
	$maö
–
¨gc
, *
¨gv
[] )

45 ((Ë
¨gc
);

46 ((Ë
¨gv
);

48 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_PK_PARSE_Cánd/or "

52 
	}
}

54 
	$maö
–
¨gc
, *
¨gv
[] )

56 
FILE
 *
f
;

57 
ªt
;

58 
size_t
 
i
, 
ﬁí
 = 0;

59 
pk_c⁄ãxt
 
pk
;

60 
íå›y_c⁄ãxt
 
íå›y
;

61 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

62 
öput
[1024];

63 
buf
[512];

64 c⁄° *
≥rs
 = "pk_encrypt";

66 
ªt
 = 1;

68 if–
¨gc
 != 3 )

70 
	`¥ötf
( "usage:Ök_encrypt <key_file> <string of max 100 characters>\n" );

72 #i‡
	`deföed
(
_WIN32
)

73 
	`¥ötf
( "\n" );

76 
exô
;

79 
	`¥ötf
( "\n . SeedingÅheÑandomÇumber generator..." );

80 
	`fÊush
–
°dout
 );

82 
	`íå›y_öô
–&
íå›y
 );

83 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

84 (c⁄° *Ë
≥rs
,

85 
	`°æí
–
≥rs
 ) ) ) != 0 )

87 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed -0x%04x\n", -
ªt
 );

88 
exô
;

91 
	`¥ötf
–"\¿ . RódögÖubli¯key from '%s'", 
¨gv
[1] );

92 
	`fÊush
–
°dout
 );

94 
	`pk_öô
–&
pk
 );

96 if––
ªt
 = 
	`pk_∑r£_public_keyfûe
–&
pk
, 
¨gv
[1] ) ) != 0 )

98 
	`¥ötf
–" faûed\¿ !Ök_∑r£_public_keyfûêªtu∫ed -0x%04x\n", -
ªt
 );

99 
exô
;

102 if–
	`°æí
–
¨gv
[2] ) > 100 )

104 
	`¥ötf
( " Input dataÜargerÅhan 100 characters.\n\n" );

105 
exô
;

108 
	`mem˝y
–
öput
, 
¨gv
[2], 
	`°æí
(árgv[2] ) );

113 
	`¥ötf
( "\n . GeneratingÅheÉncrypted value" );

114 
	`fÊush
–
°dout
 );

116 if––
ªt
 = 
	`pk_í¸y±
–&
pk
, 
öput
, 
	`°æí
–
¨gv
[2] ),

117 
buf
, &
ﬁí
, (buf),

118 
˘r_drbg_øndom
, &
˘r_drbg
 ) ) != 0 )

120 
	`¥ötf
–" faûed\¿ !Ök_í¸y±Ñëu∫ed -0x%04x\n", -
ªt
 );

121 
exô
;

127 if––
f
 = 
	`f›í
–"ªsu…-íc.txt", "wb+" ) ) =
NULL
 )

129 
ªt
 = 1;

130 
	`¥ötf
( " failed\n ! CouldÇot create %s\n\n", "result-enc.txt" );

131 
exô
;

134  
i
 = 0; i < 
ﬁí
; i++ )

135 
	`Ârötf
–
f
, "%02X%s", 
buf
[
i
],

136 –
i
 + 1 ) % 16 == 0 ? "\r\n" : " " );

138 
	`f˛o£
–
f
 );

140 
	`¥ötf
( "\n . Done (created \"%s\")\n\n", "result-enc.txt" );

142 
exô
:

143 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

144 
	`íå›y_‰ì
–&
íå›y
 );

146 #i‡
	`deföed
(
POLARSSL_ERROR_C
)

147 
	`pﬁ¨s¶_°ªº‹
–
ªt
, (*Ë
buf
, (buf) );

148 
	`¥ötf
–" ! La°Éº‹ was: %s\n", 
buf
 );

151 #i‡
	`deföed
(
_WIN32
)

152 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

153 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

156 –
ªt
 );

157 
	}
}

159 
	gPOLARSSL_FS_IO
 && 
	gPOLARSSL_CTR_DRBG_C
 */

	@polarssl/programs/pkey/pk_sign.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

35 
	~"pﬁ¨s¶/îr‹.h
"

36 
	~"pﬁ¨s¶/íå›y.h
"

37 
	~"pﬁ¨s¶/˘r_drbg.h
"

38 
	~"pﬁ¨s¶/md.h
"

39 
	~"pﬁ¨s¶/pk.h
"

40 
	~"pﬁ¨s¶/sha1.h
"

42 #i‡
deföed
 
_MSC_VER
 && !deföed 
¢¥ötf


43 
	#¢¥ötf
 
_¢¥ötf


	)

46 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_ENTROPY_C
) || \

47 !
deföed
(
POLARSSL_SHA1_C
) || \

48 !
deföed
(
POLARSSL_PK_PARSE_C
Ë|| !deföed(
POLARSSL_FS_IO
) || \

49 !
	$deföed
(
POLARSSL_CTR_DRBG_C
)

50 
	$maö
–
¨gc
, *
¨gv
[] )

52 ((Ë
¨gc
);

53 ((Ë
¨gv
);

55 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_ENTROPY_Cánd/or "

60 
	}
}

62 
	$maö
–
¨gc
, *
¨gv
[] )

64 
FILE
 *
f
;

65 
ªt
 = 1;

66 
pk_c⁄ãxt
 
pk
;

67 
íå›y_c⁄ãxt
 
íå›y
;

68 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

69 
hash
[20];

70 
buf
[
POLARSSL_MPI_MAX_SIZE
];

71 
fûíame
[512];

72 c⁄° *
≥rs
 = "pk_sign";

73 
size_t
 
ﬁí
 = 0;

75 
	`íå›y_öô
–&
íå›y
 );

76 
	`pk_öô
–&
pk
 );

78 if–
¨gc
 != 3 )

80 
	`¥ötf
( "usage:Ök_sign <key_file> <filename>\n" );

82 #i‡
	`deföed
(
_WIN32
)

83 
	`¥ötf
( "\n" );

86 
exô
;

89 
	`¥ötf
( "\n . SeedingÅheÑandomÇumber generator..." );

90 
	`fÊush
–
°dout
 );

92 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

93 (c⁄° *Ë
≥rs
,

94 
	`°æí
–
≥rs
 ) ) ) != 0 )

96 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed -0x%04x\n", -
ªt
 );

97 
exô
;

100 
	`¥ötf
–"\¿ . RódögÖriv©êkey from '%s'", 
¨gv
[1] );

101 
	`fÊush
–
°dout
 );

103 if––
ªt
 = 
	`pk_∑r£_keyfûe
–&
pk
, 
¨gv
[1], "" ) ) != 0 )

105 
ªt
 = 1;

106 
	`¥ötf
–" faûed\¿ ! CouldÇŸ o≥¿'%s'\n", 
¨gv
[1] );

107 
exô
;

114 
	`¥ötf
( "\n . GeneratingÅhe SHA-1 signature" );

115 
	`fÊush
–
°dout
 );

117 if––
ªt
 = 
	`sha1_fûe
–
¨gv
[2], 
hash
 ) ) != 0 )

119 
	`¥ötf
–" faûed\¿ ! CouldÇŸ o≥¿‹Ñód %s\n\n", 
¨gv
[2] );

120 
exô
;

123 if––
ªt
 = 
	`pk_sign
–&
pk
, 
POLARSSL_MD_SHA1
, 
hash
, 0, 
buf
, &
ﬁí
,

124 
˘r_drbg_øndom
, &
˘r_drbg
 ) ) != 0 )

126 
	`¥ötf
–" faûed\¿ !Ök_sig¿ªtu∫ed -0x%04x\n", -
ªt
 );

127 
exô
;

133 
	`¢¥ötf
–
fûíame
, (fûíame), "%s.sig", 
¨gv
[2] );

135 if––
f
 = 
	`f›í
–
fûíame
, "wb+" ) ) =
NULL
 )

137 
ªt
 = 1;

138 
	`¥ötf
–" faûed\¿ ! CouldÇŸ cª©ê%s\n\n", 
fûíame
 );

139 
exô
;

142 if–
	`fwrôe
–
buf
, 1, 
ﬁí
, 
f
 ) != olen )

144 
	`¥ötf
( "failed\n ! fwrite failed\n\n" );

145 
exô
;

148 
	`f˛o£
–
f
 );

150 
	`¥ötf
–"\¿ . D⁄ê(¸óãd \"%s\")\n\n", 
fûíame
 );

152 
exô
:

153 
	`pk_‰ì
–&
pk
 );

154 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

155 
	`íå›y_‰ì
–&
íå›y
 );

157 #i‡
	`deföed
(
POLARSSL_ERROR_C
)

158 
	`pﬁ¨s¶_°ªº‹
–
ªt
, (*Ë
buf
, (buf) );

159 
	`¥ötf
–" ! La°Éº‹ was: %s\n", 
buf
 );

162 #i‡
	`deföed
(
_WIN32
)

163 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

164 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

167 –
ªt
 );

168 
	}
}

170 
	gPOLARSSL_SHA1_C
 && 
	gPOLARSSL_PK_PARSE_C
 && 
	gPOLARSSL_FS_IO
 &&

171 
	gPOLARSSL_CTR_DRBG_C
 */

	@polarssl/programs/pkey/pk_verify.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

35 
	~"pﬁ¨s¶/îr‹.h
"

36 
	~"pﬁ¨s¶/md.h
"

37 
	~"pﬁ¨s¶/pk.h
"

38 
	~"pﬁ¨s¶/sha1.h
"

40 #i‡
deföed
 
_MSC_VER
 && !deföed 
¢¥ötf


41 
	#¢¥ötf
 
_¢¥ötf


	)

44 #i‡!
deföed
(
POLARSSL_BIGNUM_C
) || \

45 !
deföed
(
POLARSSL_SHA1_C
Ë|| !deföed(
POLARSSL_PK_PARSE_C
) || \

46 !
	$deföed
(
POLARSSL_FS_IO
)

47 
	$maö
–
¨gc
, *
¨gv
[] )

49 ((Ë
¨gc
);

50 ((Ë
¨gv
);

52 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or "

56 
	}
}

58 
	$maö
–
¨gc
, *
¨gv
[] )

60 
FILE
 *
f
;

61 
ªt
 = 1;

62 
size_t
 
i
;

63 
pk_c⁄ãxt
 
pk
;

64 
hash
[20];

65 
buf
[
POLARSSL_MPI_MAX_SIZE
];

66 
fûíame
[512];

68 
	`pk_öô
–&
pk
 );

70 if–
¨gc
 != 3 )

72 
	`¥ötf
( "usage:Ök_verify <key_file> <filename>\n" );

74 #i‡
	`deföed
(
_WIN32
)

75 
	`¥ötf
( "\n" );

78 
exô
;

81 
	`¥ötf
–"\¿ . RódögÖubli¯key from '%s'", 
¨gv
[1] );

82 
	`fÊush
–
°dout
 );

84 if––
ªt
 = 
	`pk_∑r£_public_keyfûe
–&
pk
, 
¨gv
[1] ) ) != 0 )

86 
	`¥ötf
–" faûed\¿ !Ök_∑r£_public_keyfûêªtu∫ed -0x%04x\n", -
ªt
 );

87 
exô
;

93 
ªt
 = 1;

94 
	`¢¥ötf
–
fûíame
, (fûíame), "%s.sig", 
¨gv
[2] );

96 if––
f
 = 
	`f›í
–
fûíame
, "rb" ) ) =
NULL
 )

98 
	`¥ötf
–"\¿ ! CouldÇŸ o≥¿%s\n\n", 
fûíame
 );

99 
exô
;

103 
i
 = 
	`‰ód
–
buf
, 1, (buf), 
f
 );

105 
	`f˛o£
–
f
 );

111 
	`¥ötf
( "\n . VerifyingÅhe SHA-1 signature" );

112 
	`fÊush
–
°dout
 );

114 if––
ªt
 = 
	`sha1_fûe
–
¨gv
[2], 
hash
 ) ) != 0 )

116 
	`¥ötf
–" faûed\¿ ! CouldÇŸ o≥¿‹Ñód %s\n\n", 
¨gv
[2] );

117 
exô
;

120 if––
ªt
 = 
	`pk_vîify
–&
pk
, 
POLARSSL_MD_SHA1
, 
hash
, 0,

121 
buf
, 
i
 ) ) != 0 )

123 
	`¥ötf
–" faûed\¿ !Ök_vîifyÑëu∫ed -0x%04x\n", -
ªt
 );

124 
exô
;

127 
	`¥ötf
( "\n . OK (the decrypted SHA-1 hash matches)\n\n" );

129 
ªt
 = 0;

131 
exô
:

132 
	`pk_‰ì
–&
pk
 );

134 #i‡
	`deföed
(
POLARSSL_ERROR_C
)

135 
	`pﬁ¨s¶_°ªº‹
–
ªt
, (*Ë
buf
, (buf) );

136 
	`¥ötf
–" ! La°Éº‹ was: %s\n", 
buf
 );

139 #i‡
	`deföed
(
_WIN32
)

140 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

141 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

144 –
ªt
 );

145 
	}
}

147 
	gPOLARSSL_PK_PARSE_C
 && 
	gPOLARSSL_FS_IO
 */

	@polarssl/programs/pkey/rsa_decrypt.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

35 
	~"pﬁ¨s¶/rß.h
"

36 
	~"pﬁ¨s¶/íå›y.h
"

37 
	~"pﬁ¨s¶/˘r_drbg.h
"

39 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_RSA_C
) || \

40 !
deföed
(
POLARSSL_FS_IO
Ë|| !deföed(
POLARSSL_ENTROPY_C
) || \

41 !
	$deföed
(
POLARSSL_CTR_DRBG_C
)

42 
	$maö
–
¨gc
, *
¨gv
[] )

44 ((Ë
¨gc
);

45 ((Ë
¨gv
);

47 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_RSA_Cánd/or "

51 
	}
}

53 
	$maö
–
¨gc
, *
¨gv
[] )

55 
FILE
 *
f
;

56 
ªt
, 
c
;

57 
size_t
 
i
;

58 
rß_c⁄ãxt
 
rß
;

59 
íå›y_c⁄ãxt
 
íå›y
;

60 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

61 
ªsu…
[1024];

62 
buf
[512];

63 c⁄° *
≥rs
 = "rsa_decrypt";

64 ((Ë
¨gv
);

66 
	`mem£t
(
ªsu…
, 0, (Ñesult ) );

67 
ªt
 = 1;

69 if–
¨gc
 != 1 )

71 
	`¥ötf
( "usage:Ñsa_decrypt\n" );

73 #i‡
	`deföed
(
_WIN32
)

74 
	`¥ötf
( "\n" );

77 
exô
;

80 
	`¥ötf
( "\n . SeedingÅheÑandomÇumber generator..." );

81 
	`fÊush
–
°dout
 );

83 
	`íå›y_öô
–&
íå›y
 );

84 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

85 (c⁄° *Ë
≥rs
,

86 
	`°æí
–
≥rs
 ) ) ) != 0 )

88 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed %d\n", 
ªt
 );

89 
exô
;

92 
	`¥ötf
( "\n . ReadingÖrivate key fromÑsa_priv.txt" );

93 
	`fÊush
–
°dout
 );

95 if––
f
 = 
	`f›í
–"rß_¥iv.txt", "rb" ) ) =
NULL
 )

97 
	`¥ötf
( " failed\n ! CouldÇot openÑsa_priv.txt\n" \

99 
exô
;

102 
	`rß_öô
–&
rß
, 
RSA_PKCS_V15
, 0 );

104 if––
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
N
 , 16, 
f
 ) ) != 0 ||

105 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
E
 , 16, 
f
 ) ) != 0 ||

106 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
D
 , 16, 
f
 ) ) != 0 ||

107 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
P
 , 16, 
f
 ) ) != 0 ||

108 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
Q
 , 16, 
f
 ) ) != 0 ||

109 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
DP
, 16, 
f
 ) ) != 0 ||

110 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
DQ
, 16, 
f
 ) ) != 0 ||

111 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
QP
, 16, 
f
 ) ) != 0 )

113 
	`¥ötf
–" faûed\¿ ! mpi_ªad_fûêªtu∫ed %d\n\n", 
ªt
 );

114 
exô
;

117 
rß
.
Àn
 = ( 
	`mpi_msb
–&rß.
N
 ) + 7 ) >> 3;

119 
	`f˛o£
–
f
 );

124 
ªt
 = 1;

126 if––
f
 = 
	`f›í
–"ªsu…-íc.txt", "rb" ) ) =
NULL
 )

128 
	`¥ötf
( "\n ! CouldÇot open %s\n\n", "result-enc.txt" );

129 
exô
;

132 
i
 = 0;

134  
	`fsˇnf
–
f
, "%02X", &
c
 ) > 0 &&

135 
i
 < (Ë–
buf
 ) )

136 
buf
[
i
++] = (Ë
c
;

138 
	`f˛o£
–
f
 );

140 if–
i
 !
rß
.
Àn
 )

142 
	`¥ötf
( "\n ! Invalid RSA signature format\n\n" );

143 
exô
;

149 
	`¥ötf
( "\n . DecryptingÅheÉncrypted data" );

150 
	`fÊush
–
°dout
 );

152 if––
ªt
 = 
	`rß_pkcs1_de¸y±
–&
rß
, 
˘r_drbg_øndom
, &
˘r_drbg
,

153 
RSA_PRIVATE
, &
i
, 
buf
, 
ªsu…
,

156 
	`¥ötf
–" faûed\¿ !Ñß_pkcs1_de¸y±Ñëu∫ed %d\n\n", 
ªt
 );

157 
exô
;

160 
	`¥ötf
( "\n . OK\n\n" );

162 
	`¥ötf
–"Thêde¸y±edÑesu… is: '%s'\n\n", 
ªsu…
 );

164 
ªt
 = 0;

166 
exô
:

167 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

168 
	`íå›y_‰ì
–&
íå›y
 );

170 #i‡
	`deföed
(
_WIN32
)

171 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

172 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

175 –
ªt
 );

176 
	}
}

	@polarssl/programs/pkey/rsa_encrypt.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

35 
	~"pﬁ¨s¶/rß.h
"

36 
	~"pﬁ¨s¶/íå›y.h
"

37 
	~"pﬁ¨s¶/˘r_drbg.h
"

39 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_RSA_C
) || \

40 !
deföed
(
POLARSSL_ENTROPY_C
Ë|| !deföed(
POLARSSL_FS_IO
) || \

41 !
	$deföed
(
POLARSSL_CTR_DRBG_C
)

42 
	$maö
–
¨gc
, *
¨gv
[] )

44 ((Ë
¨gc
);

45 ((Ë
¨gv
);

47 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_RSA_Cánd/or "

51 
	}
}

53 
	$maö
–
¨gc
, *
¨gv
[] )

55 
FILE
 *
f
;

56 
ªt
;

57 
size_t
 
i
;

58 
rß_c⁄ãxt
 
rß
;

59 
íå›y_c⁄ãxt
 
íå›y
;

60 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

61 
öput
[1024];

62 
buf
[512];

63 c⁄° *
≥rs
 = "rsa_encrypt";

65 
ªt
 = 1;

67 if–
¨gc
 != 2 )

69 
	`¥ötf
( "usage:Ñsa_encrypt <string of max 100 characters>\n" );

71 #i‡
	`deföed
(
_WIN32
)

72 
	`¥ötf
( "\n" );

75 
exô
;

78 
	`¥ötf
( "\n . SeedingÅheÑandomÇumber generator..." );

79 
	`fÊush
–
°dout
 );

81 
	`íå›y_öô
–&
íå›y
 );

82 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

83 (c⁄° *Ë
≥rs
,

84 
	`°æí
–
≥rs
 ) ) ) != 0 )

86 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed %d\n", 
ªt
 );

87 
exô
;

90 
	`¥ötf
( "\n . ReadingÖublic key fromÑsa_pub.txt" );

91 
	`fÊush
–
°dout
 );

93 if––
f
 = 
	`f›í
–"rß_pub.txt", "rb" ) ) =
NULL
 )

95 
ªt
 = 1;

96 
	`¥ötf
( " failed\n ! CouldÇot openÑsa_pub.txt\n" \

98 
exô
;

101 
	`rß_öô
–&
rß
, 
RSA_PKCS_V15
, 0 );

103 if––
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
N
, 16, 
f
 ) ) != 0 ||

104 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
E
, 16, 
f
 ) ) != 0 )

106 
	`¥ötf
–" faûed\¿ ! mpi_ªad_fûêªtu∫ed %d\n\n", 
ªt
 );

107 
exô
;

110 
rß
.
Àn
 = ( 
	`mpi_msb
–&rß.
N
 ) + 7 ) >> 3;

112 
	`f˛o£
–
f
 );

114 if–
	`°æí
–
¨gv
[1] ) > 100 )

116 
	`¥ötf
( " Input dataÜargerÅhan 100 characters.\n\n" );

117 
exô
;

120 
	`mem˝y
–
öput
, 
¨gv
[1], 
	`°æí
(árgv[1] ) );

125 
	`¥ötf
( "\n . GeneratingÅhe RSAÉncrypted value" );

126 
	`fÊush
–
°dout
 );

128 if––
ªt
 = 
	`rß_pkcs1_í¸y±
–&
rß
, 
˘r_drbg_øndom
, &
˘r_drbg
,

129 
RSA_PUBLIC
, 
	`°æí
–
¨gv
[1] ),

130 
öput
, 
buf
 ) ) != 0 )

132 
	`¥ötf
–" faûed\¿ !Ñß_pkcs1_í¸y±Ñëu∫ed %d\n\n", 
ªt
 );

133 
exô
;

139 if––
f
 = 
	`f›í
–"ªsu…-íc.txt", "wb+" ) ) =
NULL
 )

141 
ªt
 = 1;

142 
	`¥ötf
( " failed\n ! CouldÇot create %s\n\n", "result-enc.txt" );

143 
exô
;

146  
i
 = 0; i < 
rß
.
Àn
; i++ )

147 
	`Ârötf
–
f
, "%02X%s", 
buf
[
i
],

148 –
i
 + 1 ) % 16 == 0 ? "\r\n" : " " );

150 
	`f˛o£
–
f
 );

152 
	`¥ötf
( "\n . Done (created \"%s\")\n\n", "result-enc.txt" );

154 
exô
:

155 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

156 
	`íå›y_‰ì
–&
íå›y
 );

158 #i‡
	`deföed
(
_WIN32
)

159 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

160 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

163 –
ªt
 );

164 
	}
}

166 
	gPOLARSSL_FS_IO
 && 
	gPOLARSSL_CTR_DRBG_C
 */

	@polarssl/programs/pkey/rsa_genkey.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°dio.h
>

34 
	~"pﬁ¨s¶/íå›y.h
"

35 
	~"pﬁ¨s¶/˘r_drbg.h
"

36 
	~"pﬁ¨s¶/bignum.h
"

37 
	~"pﬁ¨s¶/x509.h
"

38 
	~"pﬁ¨s¶/rß.h
"

40 
	#KEY_SIZE
 1024

	)

41 
	#EXPONENT
 65537

	)

43 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_ENTROPY_C
) || \

44 !
deföed
(
POLARSSL_RSA_C
Ë|| !deföed(
POLARSSL_GENPRIME
) || \

45 !
deföed
(
POLARSSL_FS_IO
Ë|| !
	$deföed
(
POLARSSL_CTR_DRBG_C
)

46 
	$maö
–
¨gc
, *
¨gv
[] )

48 ((Ë
¨gc
);

49 ((Ë
¨gv
);

51 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_ENTROPY_Cánd/or "

55 
	}
}

57 
	$maö
–
¨gc
, *
¨gv
[] )

59 
ªt
;

60 
rß_c⁄ãxt
 
rß
;

61 
íå›y_c⁄ãxt
 
íå›y
;

62 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

63 
FILE
 *
Âub
 = 
NULL
;

64 
FILE
 *
Âriv
 = 
NULL
;

65 c⁄° *
≥rs
 = "rsa_genkey";

67 ((Ë
¨gc
);

68 ((Ë
¨gv
);

70 
	`¥ötf
( "\n . SeedingÅheÑandomÇumber generator..." );

71 
	`fÊush
–
°dout
 );

73 
	`íå›y_öô
–&
íå›y
 );

74 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

75 (c⁄° *Ë
≥rs
,

76 
	`°æí
–
≥rs
 ) ) ) != 0 )

78 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed %d\n", 
ªt
 );

79 
exô
;

82 
	`¥ötf
–" ok\¿ . Gíî©ögÅhêRSA key [ %d-bô ]...", 
KEY_SIZE
 );

83 
	`fÊush
–
°dout
 );

85 
	`rß_öô
–&
rß
, 
RSA_PKCS_V15
, 0 );

87 if––
ªt
 = 
	`rß_gí_key
–&
rß
, 
˘r_drbg_øndom
, &
˘r_drbg
, 
KEY_SIZE
,

88 
EXPONENT
 ) ) != 0 )

90 
	`¥ötf
–" faûed\¿ !Ñß_gí_keyÑëu∫ed %d\n\n", 
ªt
 );

91 
exô
;

94 
	`¥ötf
( " ok\n . ExportingÅheÖublic key inÑsa_pub.txt...." );

95 
	`fÊush
–
°dout
 );

97 if––
Âub
 = 
	`f›í
–"rß_pub.txt", "wb+" ) ) =
NULL
 )

99 
	`¥ötf
( " failed\n ! couldÇot openÑsa_pub.txt for writing\n\n" );

100 
ªt
 = 1;

101 
exô
;

104 if––
ªt
 = 
	`mpi_wrôe_fûe
–"N = ", &
rß
.
N
, 16, 
Âub
 ) ) != 0 ||

105 –
ªt
 = 
	`mpi_wrôe_fûe
–"E = ", &
rß
.
E
, 16, 
Âub
 ) ) != 0 )

107 
	`¥ötf
–" faûed\¿ ! mpi_wrôe_fûêªtu∫ed %d\n\n", 
ªt
 );

108 
exô
;

111 
	`¥ötf
( " ok\n . ExportingÅheÖrivate key inÑsa_priv.txt..." );

112 
	`fÊush
–
°dout
 );

114 if––
Âriv
 = 
	`f›í
–"rß_¥iv.txt", "wb+" ) ) =
NULL
 )

116 
	`¥ötf
( " failed\n ! couldÇot openÑsa_priv.txt for writing\n" );

117 
ªt
 = 1;

118 
exô
;

121 if––
ªt
 = 
	`mpi_wrôe_fûe
–"N = " , &
rß
.
N
 , 16, 
Âriv
 ) ) != 0 ||

122 –
ªt
 = 
	`mpi_wrôe_fûe
–"E = " , &
rß
.
E
 , 16, 
Âriv
 ) ) != 0 ||

123 –
ªt
 = 
	`mpi_wrôe_fûe
–"D = " , &
rß
.
D
 , 16, 
Âriv
 ) ) != 0 ||

124 –
ªt
 = 
	`mpi_wrôe_fûe
–"P = " , &
rß
.
P
 , 16, 
Âriv
 ) ) != 0 ||

125 –
ªt
 = 
	`mpi_wrôe_fûe
–"Q = " , &
rß
.
Q
 , 16, 
Âriv
 ) ) != 0 ||

126 –
ªt
 = 
	`mpi_wrôe_fûe
–"DP = ", &
rß
.
DP
, 16, 
Âriv
 ) ) != 0 ||

127 –
ªt
 = 
	`mpi_wrôe_fûe
–"DQ = ", &
rß
.
DQ
, 16, 
Âriv
 ) ) != 0 ||

128 –
ªt
 = 
	`mpi_wrôe_fûe
–"QP = ", &
rß
.
QP
, 16, 
Âriv
 ) ) != 0 )

130 
	`¥ötf
–" faûed\¿ ! mpi_wrôe_fûêªtu∫ed %d\n\n", 
ªt
 );

131 
exô
;

146 
	`¥ötf
( " ok\n\n" );

148 
exô
:

150 if–
Âub
 !
NULL
 )

151 
	`f˛o£
–
Âub
 );

153 if–
Âriv
 !
NULL
 )

154 
	`f˛o£
–
Âriv
 );

156 
	`rß_‰ì
–&
rß
 );

157 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

158 
	`íå›y_‰ì
–&
íå›y
 );

160 #i‡
	`deföed
(
_WIN32
)

161 
	`¥ötf
( " Press EnterÅoÉxitÅhisÖrogram.\n" );

162 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

165 –
ªt
 );

166 
	}
}

168 
	gPOLARSSL_GENPRIME
 && 
	gPOLARSSL_FS_IO
 && 
	gPOLARSSL_CTR_DRBG_C
 */

	@polarssl/programs/pkey/rsa_sign.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

35 
	~"pﬁ¨s¶/rß.h
"

36 
	~"pﬁ¨s¶/sha1.h
"

38 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_RSA_C
) || \

39 !
deföed
(
POLARSSL_SHA1_C
Ë|| !
	$deföed
(
POLARSSL_FS_IO
)

40 
	$maö
–
¨gc
, *
¨gv
[] )

42 ((Ë
¨gc
);

43 ((Ë
¨gv
);

45 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_RSA_Cánd/or "

48 
	}
}

50 
	$maö
–
¨gc
, *
¨gv
[] )

52 
FILE
 *
f
;

53 
ªt
;

54 
size_t
 
i
;

55 
rß_c⁄ãxt
 
rß
;

56 
hash
[20];

57 
buf
[
POLARSSL_MPI_MAX_SIZE
];

59 
ªt
 = 1;

61 if–
¨gc
 != 2 )

63 
	`¥ötf
( "usage:Ñsa_sign <filename>\n" );

65 #i‡
	`deföed
(
_WIN32
)

66 
	`¥ötf
( "\n" );

69 
exô
;

72 
	`¥ötf
( "\n . ReadingÖrivate key fromÑsa_priv.txt" );

73 
	`fÊush
–
°dout
 );

75 if––
f
 = 
	`f›í
–"rß_¥iv.txt", "rb" ) ) =
NULL
 )

77 
ªt
 = 1;

78 
	`¥ötf
( " failed\n ! CouldÇot openÑsa_priv.txt\n" \

80 
exô
;

83 
	`rß_öô
–&
rß
, 
RSA_PKCS_V15
, 0 );

85 if––
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
N
 , 16, 
f
 ) ) != 0 ||

86 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
E
 , 16, 
f
 ) ) != 0 ||

87 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
D
 , 16, 
f
 ) ) != 0 ||

88 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
P
 , 16, 
f
 ) ) != 0 ||

89 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
Q
 , 16, 
f
 ) ) != 0 ||

90 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
DP
, 16, 
f
 ) ) != 0 ||

91 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
DQ
, 16, 
f
 ) ) != 0 ||

92 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
QP
, 16, 
f
 ) ) != 0 )

94 
	`¥ötf
–" faûed\¿ ! mpi_ªad_fûêªtu∫ed %d\n\n", 
ªt
 );

95 
exô
;

98 
rß
.
Àn
 = ( 
	`mpi_msb
–&rß.
N
 ) + 7 ) >> 3;

100 
	`f˛o£
–
f
 );

102 
	`¥ötf
( "\n . CheckingÅheÖrivate key" );

103 
	`fÊush
–
°dout
 );

104 if––
ªt
 = 
	`rß_check_¥ivkey
–&
rß
 ) ) != 0 )

106 
	`¥ötf
–" faûed\¿ !Ñß_check_¥ivkey faûed wôh -0x%0x\n", -
ªt
 );

107 
exô
;

114 
	`¥ötf
( "\n . GeneratingÅhe RSA/SHA-1 signature" );

115 
	`fÊush
–
°dout
 );

117 if––
ªt
 = 
	`sha1_fûe
–
¨gv
[1], 
hash
 ) ) != 0 )

119 
	`¥ötf
–" faûed\¿ ! CouldÇŸ o≥¿‹Ñód %s\n\n", 
¨gv
[1] );

120 
exô
;

123 if––
ªt
 = 
	`rß_pkcs1_sign
–&
rß
, 
NULL
, NULL, 
RSA_PRIVATE
, 
POLARSSL_MD_SHA1
,

124 20, 
hash
, 
buf
 ) ) != 0 )

126 
	`¥ötf
–" faûed\¿ !Ñß_pkcs1_sig¿ªtu∫ed -0x%0x\n\n", -
ªt
 );

127 
exô
;

133 
	`mem˝y
–
¨gv
[1] + 
	`°æí
(árgv[1] ), ".sig", 5 );

135 if––
f
 = 
	`f›í
–
¨gv
[1], "wb+" ) ) =
NULL
 )

137 
ªt
 = 1;

138 
	`¥ötf
–" faûed\¿ ! CouldÇŸ cª©ê%s\n\n", 
¨gv
[1] );

139 
exô
;

142  
i
 = 0; i < 
rß
.
Àn
; i++ )

143 
	`Ârötf
–
f
, "%02X%s", 
buf
[
i
],

144 –
i
 + 1 ) % 16 == 0 ? "\r\n" : " " );

146 
	`f˛o£
–
f
 );

148 
	`¥ötf
–"\¿ . D⁄ê(¸óãd \"%s\")\n\n", 
¨gv
[1] );

150 
exô
:

152 #i‡
	`deföed
(
_WIN32
)

153 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

154 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

157 –
ªt
 );

158 
	}
}

160 
	gPOLARSSL_FS_IO
 */

	@polarssl/programs/pkey/rsa_sign_pss.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

35 
	~"pﬁ¨s¶/íå›y.h
"

36 
	~"pﬁ¨s¶/˘r_drbg.h
"

37 
	~"pﬁ¨s¶/md.h
"

38 
	~"pﬁ¨s¶/rß.h
"

39 
	~"pﬁ¨s¶/sha1.h
"

40 
	~"pﬁ¨s¶/x509.h
"

42 #i‡
deföed
 
_MSC_VER
 && !deföed 
¢¥ötf


43 
	#¢¥ötf
 
_¢¥ötf


	)

46 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_ENTROPY_C
) || \

47 !
deföed
(
POLARSSL_RSA_C
Ë|| !deföed(
POLARSSL_SHA1_C
) || \

48 !
deföed
(
POLARSSL_PK_PARSE_C
Ë|| !deföed(
POLARSSL_FS_IO
) || \

49 !
	$deföed
(
POLARSSL_CTR_DRBG_C
)

50 
	$maö
–
¨gc
, *
¨gv
[] )

52 ((Ë
¨gc
);

53 ((Ë
¨gv
);

55 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_ENTROPY_Cánd/or "

60 
	}
}

62 
	$maö
–
¨gc
, *
¨gv
[] )

64 
FILE
 *
f
;

65 
ªt
 = 1;

66 
pk_c⁄ãxt
 
pk
;

67 
íå›y_c⁄ãxt
 
íå›y
;

68 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

69 
hash
[20];

70 
buf
[
POLARSSL_MPI_MAX_SIZE
];

71 
fûíame
[512];

72 c⁄° *
≥rs
 = "rsa_sign_pss";

73 
size_t
 
ﬁí
 = 0;

75 
	`íå›y_öô
–&
íå›y
 );

76 
	`pk_öô
–&
pk
 );

78 if–
¨gc
 != 3 )

80 
	`¥ötf
( "usage:Ñsa_sign_pss <key_file> <filename>\n" );

82 #i‡
	`deföed
(
_WIN32
)

83 
	`¥ötf
( "\n" );

86 
exô
;

89 
	`¥ötf
( "\n . SeedingÅheÑandomÇumber generator..." );

90 
	`fÊush
–
°dout
 );

92 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

93 (c⁄° *Ë
≥rs
,

94 
	`°æí
–
≥rs
 ) ) ) != 0 )

96 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed %d\n", 
ªt
 );

97 
exô
;

100 
	`¥ötf
–"\¿ . RódögÖriv©êkey from '%s'", 
¨gv
[1] );

101 
	`fÊush
–
°dout
 );

103 if––
ªt
 = 
	`pk_∑r£_keyfûe
–&
pk
, 
¨gv
[1], "" ) ) != 0 )

105 
ªt
 = 1;

106 
	`¥ötf
–" faûed\¿ ! CouldÇŸÑód key from '%s'\n", 
¨gv
[1] );

107 
	`¥ötf
–" !Ök_∑r£_public_keyfûêªtu∫ed %d\n\n", 
ªt
 );

108 
exô
;

111 if–!
	`pk_ˇn_do
–&
pk
, 
POLARSSL_PK_RSA
 ) )

113 
ªt
 = 1;

114 
	`¥ötf
( " failed\n ! Key isÇotán RSA key\n" );

115 
exô
;

118 
	`rß_£t_∑ddög
–
	`pk_rß
–
pk
 ), 
RSA_PKCS_V21
, 
POLARSSL_MD_SHA1
 );

124 
	`¥ötf
( "\n . GeneratingÅhe RSA/SHA-1 signature" );

125 
	`fÊush
–
°dout
 );

127 if––
ªt
 = 
	`sha1_fûe
–
¨gv
[2], 
hash
 ) ) != 0 )

129 
	`¥ötf
–" faûed\¿ ! CouldÇŸ o≥¿‹Ñód %s\n\n", 
¨gv
[2] );

130 
exô
;

133 if––
ªt
 = 
	`pk_sign
–&
pk
, 
POLARSSL_MD_SHA1
, 
hash
, 0, 
buf
, &
ﬁí
,

134 
˘r_drbg_øndom
, &
˘r_drbg
 ) ) != 0 )

136 
	`¥ötf
–" faûed\¿ !Ök_sig¿ªtu∫ed %d\n\n", 
ªt
 );

137 
exô
;

143 
	`¢¥ötf
–
fûíame
, 512, "%s.sig", 
¨gv
[2] );

145 if––
f
 = 
	`f›í
–
fûíame
, "wb+" ) ) =
NULL
 )

147 
ªt
 = 1;

148 
	`¥ötf
–" faûed\¿ ! CouldÇŸ cª©ê%s\n\n", 
fûíame
 );

149 
exô
;

152 if–
	`fwrôe
–
buf
, 1, 
ﬁí
, 
f
 ) != olen )

154 
	`¥ötf
( "failed\n ! fwrite failed\n\n" );

155 
exô
;

158 
	`f˛o£
–
f
 );

160 
	`¥ötf
–"\¿ . D⁄ê(¸óãd \"%s\")\n\n", 
fûíame
 );

162 
exô
:

163 
	`pk_‰ì
–&
pk
 );

164 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

165 
	`íå›y_‰ì
–&
íå›y
 );

167 #i‡
	`deföed
(
_WIN32
)

168 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

169 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

172 –
ªt
 );

173 
	}
}

175 
	gPOLARSSL_SHA1_C
 && 
	gPOLARSSL_PK_PARSE_C
 && 
	gPOLARSSL_FS_IO
 &&

176 
	gPOLARSSL_CTR_DRBG_C
 */

	@polarssl/programs/pkey/rsa_verify.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

35 
	~"pﬁ¨s¶/rß.h
"

36 
	~"pﬁ¨s¶/sha1.h
"

38 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_RSA_C
) || \

39 !
deföed
(
POLARSSL_SHA1_C
Ë|| !
	$deföed
(
POLARSSL_FS_IO
)

40 
	$maö
–
¨gc
, *
¨gv
[] )

42 ((Ë
¨gc
);

43 ((Ë
¨gv
);

45 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_RSA_Cánd/or "

48 
	}
}

50 
	$maö
–
¨gc
, *
¨gv
[] )

52 
FILE
 *
f
;

53 
ªt
, 
c
;

54 
size_t
 
i
;

55 
rß_c⁄ãxt
 
rß
;

56 
hash
[20];

57 
buf
[
POLARSSL_MPI_MAX_SIZE
];

59 
ªt
 = 1;

60 if–
¨gc
 != 2 )

62 
	`¥ötf
( "usage:Ñsa_verify <filename>\n" );

64 #i‡
	`deföed
(
_WIN32
)

65 
	`¥ötf
( "\n" );

68 
exô
;

71 
	`¥ötf
( "\n . ReadingÖublic key fromÑsa_pub.txt" );

72 
	`fÊush
–
°dout
 );

74 if––
f
 = 
	`f›í
–"rß_pub.txt", "rb" ) ) =
NULL
 )

76 
	`¥ötf
( " failed\n ! CouldÇot openÑsa_pub.txt\n" \

78 
exô
;

81 
	`rß_öô
–&
rß
, 
RSA_PKCS_V15
, 0 );

83 if––
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
N
, 16, 
f
 ) ) != 0 ||

84 –
ªt
 = 
	`mpi_ªad_fûe
–&
rß
.
E
, 16, 
f
 ) ) != 0 )

86 
	`¥ötf
–" faûed\¿ ! mpi_ªad_fûêªtu∫ed %d\n\n", 
ªt
 );

87 
exô
;

90 
rß
.
Àn
 = ( 
	`mpi_msb
–&rß.
N
 ) + 7 ) >> 3;

92 
	`f˛o£
–
f
 );

97 
ªt
 = 1;

98 
i
 = 
	`°æí
–
¨gv
[1] );

99 
	`mem˝y
–
¨gv
[1] + 
i
, ".sig", 5 );

101 if––
f
 = 
	`f›í
–
¨gv
[1], "rb" ) ) =
NULL
 )

103 
	`¥ötf
–"\¿ ! CouldÇŸ o≥¿%s\n\n", 
¨gv
[1] );

104 
exô
;

107 
¨gv
[1][
i
] = '\0', i = 0;

109  
	`fsˇnf
–
f
, "%02X", &
c
 ) > 0 &&

110 
i
 < (Ë–
buf
 ) )

111 
buf
[
i
++] = (Ë
c
;

113 
	`f˛o£
–
f
 );

115 if–
i
 !
rß
.
Àn
 )

117 
	`¥ötf
( "\n ! Invalid RSA signature format\n\n" );

118 
exô
;

125 
	`¥ötf
( "\n . VerifyingÅhe RSA/SHA-1 signature" );

126 
	`fÊush
–
°dout
 );

128 if––
ªt
 = 
	`sha1_fûe
–
¨gv
[1], 
hash
 ) ) != 0 )

130 
	`¥ötf
–" faûed\¿ ! CouldÇŸ o≥¿‹Ñód %s\n\n", 
¨gv
[1] );

131 
exô
;

134 if––
ªt
 = 
	`rß_pkcs1_vîify
–&
rß
, 
NULL
, NULL, 
RSA_PUBLIC
,

135 
POLARSSL_MD_SHA1
, 20, 
hash
, 
buf
 ) ) != 0 )

137 
	`¥ötf
–" faûed\¿ !Ñß_pkcs1_vîifyÑëu∫ed -0x%0x\n\n", -
ªt
 );

138 
exô
;

141 
	`¥ötf
( "\n . OK (the decrypted SHA-1 hash matches)\n\n" );

143 
ªt
 = 0;

145 
exô
:

147 #i‡
	`deföed
(
_WIN32
)

148 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

149 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

152 –
ªt
 );

153 
	}
}

155 
	gPOLARSSL_FS_IO
 */

	@polarssl/programs/pkey/rsa_verify_pss.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

35 
	~"pﬁ¨s¶/md.h
"

36 
	~"pﬁ¨s¶/≥m.h
"

37 
	~"pﬁ¨s¶/pk.h
"

38 
	~"pﬁ¨s¶/sha1.h
"

39 
	~"pﬁ¨s¶/x509.h
"

41 #i‡
deföed
 
_MSC_VER
 && !deföed 
¢¥ötf


42 
	#¢¥ötf
 
_¢¥ötf


	)

45 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_RSA_C
) || \

46 !
deföed
(
POLARSSL_SHA1_C
Ë|| !deföed(
POLARSSL_PK_PARSE_C
) || \

47 !
	$deföed
(
POLARSSL_FS_IO
)

48 
	$maö
–
¨gc
, *
¨gv
[] )

50 ((Ë
¨gc
);

51 ((Ë
¨gv
);

53 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_RSA_Cánd/or "

57 
	}
}

59 
	$maö
–
¨gc
, *
¨gv
[] )

61 
FILE
 *
f
;

62 
ªt
 = 1;

63 
size_t
 
i
;

64 
pk_c⁄ãxt
 
pk
;

65 
hash
[20];

66 
buf
[
POLARSSL_MPI_MAX_SIZE
];

67 
fûíame
[512];

69 
	`pk_öô
–&
pk
 );

71 if–
¨gc
 != 3 )

73 
	`¥ötf
( "usage:Ñsa_verify_pss <key_file> <filename>\n" );

75 #i‡
	`deföed
(
_WIN32
)

76 
	`¥ötf
( "\n" );

79 
exô
;

82 
	`¥ötf
–"\¿ . RódögÖubli¯key from '%s'", 
¨gv
[1] );

83 
	`fÊush
–
°dout
 );

85 if––
ªt
 = 
	`pk_∑r£_public_keyfûe
–&
pk
, 
¨gv
[1] ) ) != 0 )

87 
	`¥ötf
–" faûed\¿ ! CouldÇŸÑód key from '%s'\n", 
¨gv
[1] );

88 
	`¥ötf
–" !Ök_∑r£_public_keyfûêªtu∫ed %d\n\n", 
ªt
 );

89 
exô
;

92 if–!
	`pk_ˇn_do
–&
pk
, 
POLARSSL_PK_RSA
 ) )

94 
ªt
 = 1;

95 
	`¥ötf
( " failed\n ! Key isÇotán RSA key\n" );

96 
exô
;

99 
	`rß_£t_∑ddög
–
	`pk_rß
–
pk
 ), 
RSA_PKCS_V21
, 
POLARSSL_MD_SHA1
 );

104 
ªt
 = 1;

105 
	`¢¥ötf
–
fûíame
, 512, "%s.sig", 
¨gv
[2] );

107 if––
f
 = 
	`f›í
–
fûíame
, "rb" ) ) =
NULL
 )

109 
	`¥ötf
–"\¿ ! CouldÇŸ o≥¿%s\n\n", 
fûíame
 );

110 
exô
;

114 
i
 = 
	`‰ód
–
buf
, 1, 
POLARSSL_MPI_MAX_SIZE
, 
f
 );

116 
	`f˛o£
–
f
 );

122 
	`¥ötf
( "\n . VerifyingÅhe RSA/SHA-1 signature" );

123 
	`fÊush
–
°dout
 );

125 if––
ªt
 = 
	`sha1_fûe
–
¨gv
[2], 
hash
 ) ) != 0 )

127 
	`¥ötf
–" faûed\¿ ! CouldÇŸ o≥¿‹Ñód %s\n\n", 
¨gv
[2] );

128 
exô
;

131 if––
ªt
 = 
	`pk_vîify
–&
pk
, 
POLARSSL_MD_SHA1
, 
hash
, 0,

132 
buf
, 
i
 ) ) != 0 )

134 
	`¥ötf
–" faûed\¿ !Ök_vîifyÑëu∫ed %d\n\n", 
ªt
 );

135 
exô
;

138 
	`¥ötf
( "\n . OK (the decrypted SHA-1 hash matches)\n\n" );

140 
ªt
 = 0;

142 
exô
:

143 
	`pk_‰ì
–&
pk
 );

145 #i‡
	`deföed
(
_WIN32
)

146 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

147 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

150 –
ªt
 );

151 
	}
}

153 
	gPOLARSSL_PK_PARSE_C
 && 
	gPOLARSSL_FS_IO
 */

	@polarssl/programs/random/gen_entropy.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~"pﬁ¨s¶/íå›y.h
"

34 
	~<°dio.h
>

36 #i‡!
deföed
(
POLARSSL_ENTROPY_C
)

37 
	$maö
–
¨gc
, *
¨gv
[] )

39 ((Ë
¨gc
);

40 ((Ë
¨gv
);

42 
	`¥ötf
("POLARSSL_ENTROPY_CÇot defined.\n");

44 
	}
}

46 
	$maö
–
¨gc
, *
¨gv
[] )

48 
FILE
 *
f
;

49 
i
, 
k
, 
ªt
;

50 
íå›y_c⁄ãxt
 
íå›y
;

51 
buf
[
ENTROPY_BLOCK_SIZE
];

53 if–
¨gc
 < 2 )

55 
	`Ârötf
–
°dîr
, "ußge: %†<ouçuàfûíame>\n", 
¨gv
[0] );

59 if––
f
 = 
	`f›í
–
¨gv
[1], "wb+" ) ) =
NULL
 )

61 
	`¥ötf
–"ÁûedÅÿ›í '%s' f‹ wrôög.\n", 
¨gv
[0] );

65 
	`íå›y_öô
–&
íå›y
 );

67  
i
 = 0, 
k
 = 768; i < k; i++ )

69 
ªt
 = 
	`íå›y_func
–&
íå›y
, 
buf
, ( buf ) );

70 if–
ªt
 != 0 )

72 
	`¥ötf
("failed!\n");

73 
˛ónup
;

76 
	`fwrôe
–
buf
, 1, –bu‡), 
f
 );

78 
	`¥ötf
( "Generating 32Mb of data in file '%s'... %04.1f" \

79 "%% d⁄e\r", 
¨gv
[1], (100 * (Ë(
i
 + 1)Ë/ 
k
 );

80 
	`fÊush
–
°dout
 );

83 
ªt
 = 0;

85 
˛ónup
:

87 
	`f˛o£
–
f
 );

88 
	`íå›y_‰ì
–&
íå›y
 );

90 –
ªt
 );

91 
	}
}

	@polarssl/programs/random/gen_random_ctr_drbg.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~"pﬁ¨s¶/íå›y.h
"

33 
	~"pﬁ¨s¶/˘r_drbg.h
"

35 
	~<°dio.h
>

37 #i‡!
deföed
(
POLARSSL_CTR_DRBG_C
Ë|| !deföed(
POLARSSL_ENTROPY_C
)

38 
	$maö
–
¨gc
, *
¨gv
[] )

40 ((Ë
¨gc
);

41 ((Ë
¨gv
);

43 
	`¥ötf
("POLARSSL_CTR_DRBG_C or POLARSSL_ENTROPY_CÇot defined.\n");

45 
	}
}

47 
	$maö
–
¨gc
, *
¨gv
[] )

49 
FILE
 *
f
;

50 
i
, 
k
, 
ªt
;

51 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

52 
íå›y_c⁄ãxt
 
íå›y
;

53 
buf
[1024];

55 if–
¨gc
 < 2 )

57 
	`Ârötf
–
°dîr
, "ußge: %†<ouçuàfûíame>\n", 
¨gv
[0] );

61 if––
f
 = 
	`f›í
–
¨gv
[1], "wb+" ) ) =
NULL
 )

63 
	`¥ötf
–"ÁûedÅÿ›í '%s' f‹ wrôög.\n", 
¨gv
[0] );

67 
	`íå›y_öô
–&
íå›y
 );

68 
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
, (const *) "RANDOM_GEN", 10 );

69 if–
ªt
 != 0 )

71 
	`¥ötf
–"Áûed i¿˘r_drbg_öô: %d\n", 
ªt
 );

72 
˛ónup
;

74 
	`˘r_drbg_£t_¥edi˘i⁄_ªsi°™˚
–&
˘r_drbg
, 
CTR_DRBG_PR_OFF
 );

76 #i‡
	`deföed
(
POLARSSL_FS_IO
)

77 
ªt
 = 
	`˘r_drbg_upd©e_£ed_fûe
–&
˘r_drbg
, "seedfile" );

79 if–
ªt
 =
POLARSSL_ERR_CTR_DRBG_FILE_IO_ERROR
 )

81 
	`¥ötf
( "FailedÅo open seedfile. Generating one.\n" );

82 
ªt
 = 
	`˘r_drbg_wrôe_£ed_fûe
–&
˘r_drbg
, "seedfile" );

83 if–
ªt
 != 0 )

85 
	`¥ötf
–"Áûed i¿˘r_drbg_wrôe_£ed_fûe: %d\n", 
ªt
 );

86 
˛ónup
;

89 if–
ªt
 != 0 )

91 
	`¥ötf
–"Áûed i¿˘r_drbg_upd©e_£ed_fûe: %d\n", 
ªt
 );

92 
˛ónup
;

96  
i
 = 0, 
k
 = 768; i < k; i++ )

98 
ªt
 = 
	`˘r_drbg_øndom
–&
˘r_drbg
, 
buf
, ( buf ) );

99 if–
ªt
 != 0 )

101 
	`¥ötf
("failed!\n");

102 
˛ónup
;

105 
	`fwrôe
–
buf
, 1, –bu‡), 
f
 );

107 
	`¥ötf
( "Generating 32Mb of data in file '%s'... %04.1f" \

108 "%% d⁄e\r", 
¨gv
[1], (100 * (Ë(
i
 + 1)Ë/ 
k
 );

109 
	`fÊush
–
°dout
 );

112 
ªt
 = 0;

114 
˛ónup
:

115 
	`¥ötf
("\n");

117 
	`f˛o£
–
f
 );

118 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

119 
	`íå›y_‰ì
–&
íå›y
 );

121 –
ªt
 );

122 
	}
}

	@polarssl/programs/random/gen_random_havege.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~"pﬁ¨s¶/havege.h
"

34 
	~<time.h
>

35 
	~<°dio.h
>

37 #i‡!
deföed
(
POLARSSL_HAVEGE_C
)

38 
	$maö
–
¨gc
, *
¨gv
[] )

40 ((Ë
¨gc
);

41 ((Ë
¨gv
);

43 
	`¥ötf
("POLARSSL_HAVEGE_CÇot defined.\n");

45 
	}
}

47 
	$maö
–
¨gc
, *
¨gv
[] )

49 
FILE
 *
f
;

50 
time_t
 
t
;

51 
i
, 
k
, 
ªt
 = 0;

52 
havege_°©e
 
hs
;

53 
buf
[1024];

55 if–
¨gc
 < 2 )

57 
	`Ârötf
–
°dîr
, "ußge: %†<ouçuàfûíame>\n", 
¨gv
[0] );

61 if––
f
 = 
	`f›í
–
¨gv
[1], "wb+" ) ) =
NULL
 )

63 
	`¥ötf
–"ÁûedÅÿ›í '%s' f‹ wrôög.\n", 
¨gv
[0] );

67 
	`havege_öô
–&
hs
 );

69 
t
 = 
	`time
–
NULL
 );

71  
i
 = 0, 
k
 = 768; i < k; i++ )

73 if–
	`havege_øndom
–&
hs
, 
buf
, ( buf ) ) != 0 )

75 
	`¥ötf
( "FailedÅo getÑandom from source.\n" );

77 
ªt
 = 1;

78 
exô
;

81 
	`fwrôe
–
buf
, –bu‡), 1, 
f
 );

83 
	`¥ötf
( "Generating 32Mb of data in file '%s'... %04.1f" \

84 "%% d⁄e\r", 
¨gv
[1], (100 * (Ë(
i
 + 1)Ë/ 
k
 );

85 
	`fÊush
–
°dout
 );

88 if–
t
 =
	`time
–
NULL
 ) )

89 
t
--;

91 
	`¥ötf
(" \n ");

93 
exô
:

94 
	`havege_‰ì
–&
hs
 );

95 
	`f˛o£
–
f
 );

96 –
ªt
 );

97 
	}
}

	@polarssl/programs/ssl/ssl_client1.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

35 
	~"pﬁ¨s¶/√t.h
"

36 
	~"pﬁ¨s¶/debug.h
"

37 
	~"pﬁ¨s¶/s¶.h
"

38 
	~"pﬁ¨s¶/íå›y.h
"

39 
	~"pﬁ¨s¶/˘r_drbg.h
"

40 
	~"pﬁ¨s¶/îr‹.h
"

41 
	~"pﬁ¨s¶/˚πs.h
"

43 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_ENTROPY_C
) || \

44 !
deföed
(
POLARSSL_SSL_TLS_C
Ë|| !deföed(
POLARSSL_SSL_CLI_C
) || \

45 !
deföed
(
POLARSSL_NET_C
Ë|| !deföed(
POLARSSL_RSA_C
) || \

46 !
deföed
(
POLARSSL_CTR_DRBG_C
Ë|| !
	$deföed
(
POLARSSL_X509_CRT_PARSE_C
)

47 
	$maö
–
¨gc
, *
¨gv
[] )

49 ((Ë
¨gc
);

50 ((Ë
¨gv
);

52 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_ENTROPY_Cánd/or "

58 
	}
}

61 
	#SERVER_PORT
 4433

	)

62 
	#SERVER_NAME
 "loˇlho°"

	)

63 
	#GET_REQUEST
 "GET / HTTP/1.0\r\n\r\n"

	)

65 
	#DEBUG_LEVEL
 1

	)

67 
	$my_debug
–*
˘x
, 
Àvñ
, c⁄° *
°r
 )

69 ((Ë
Àvñ
);

71 
	`Ârötf
–(
FILE
 *Ë
˘x
, "%s", 
°r
 );

72 
	`fÊush
–(
FILE
 *Ë
˘x
 );

73 
	}
}

75 
	$maö
–
¨gc
, *
¨gv
[] )

77 
ªt
, 
Àn
, 
£rvî_fd
 = -1;

78 
buf
[1024];

79 c⁄° *
≥rs
 = "ssl_client1";

81 
íå›y_c⁄ãxt
 
íå›y
;

82 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

83 
s¶_c⁄ãxt
 
s¶
;

84 
x509_¸t
 
ˇ˚π
;

86 ((Ë
¨gc
);

87 ((Ë
¨gv
);

89 #i‡
	`deföed
(
POLARSSL_DEBUG_C
)

90 
	`debug_£t_thªshﬁd
–
DEBUG_LEVEL
 );

96 
	`mem£t
–&
s¶
, 0, –
s¶_c⁄ãxt
 ) );

97 
	`x509_¸t_öô
–&
ˇ˚π
 );

99 
	`¥ötf
( "\n . SeedingÅheÑandomÇumber generator..." );

100 
	`fÊush
–
°dout
 );

102 
	`íå›y_öô
–&
íå›y
 );

103 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

104 (c⁄° *Ë
≥rs
,

105 
	`°æí
–
≥rs
 ) ) ) != 0 )

107 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed %d\n", 
ªt
 );

108 
exô
;

111 
	`¥ötf
( " ok\n" );

116 
	`¥ötf
( " . LoadingÅhe CAÑoot certificate ..." );

117 
	`fÊush
–
°dout
 );

119 #i‡
	`deföed
(
POLARSSL_CERTS_C
)

120 
ªt
 = 
	`x509_¸t_∑r£
–&
ˇ˚π
, (c⁄° *Ë
ã°_ˇ_li°
,

121 
	`°æí
–
ã°_ˇ_li°
 ) );

123 
ªt
 = 1;

124 
	`¥ötf
("POLARSSL_CERTS_CÇot defined.");

127 if–
ªt
 < 0 )

129 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£Ñëu∫ed -0x%x\n\n", -
ªt
 );

130 
exô
;

133 
	`¥ötf
–" ok (%d skù≥d)\n", 
ªt
 );

138 
	`¥ötf
–" . C⁄√˘ögÅÿt˝/%s/%4d...", 
SERVER_NAME
,

139 
SERVER_PORT
 );

140 
	`fÊush
–
°dout
 );

142 if––
ªt
 = 
	`√t_c⁄√˘
–&
£rvî_fd
, 
SERVER_NAME
,

143 
SERVER_PORT
 ) ) != 0 )

145 
	`¥ötf
–" faûed\¿ !Çë_c⁄√˘Ñëu∫ed %d\n\n", 
ªt
 );

146 
exô
;

149 
	`¥ötf
( " ok\n" );

154 
	`¥ötf
( " . Setting upÅhe SSL/TLS structure..." );

155 
	`fÊush
–
°dout
 );

157 if––
ªt
 = 
	`s¶_öô
–&
s¶
 ) ) != 0 )

159 
	`¥ötf
–" faûed\¿ ! s¶_öôÑëu∫ed %d\n\n", 
ªt
 );

160 
exô
;

163 
	`¥ötf
( " ok\n" );

165 
	`s¶_£t_ídpoöt
–&
s¶
, 
SSL_IS_CLIENT
 );

168 
	`s¶_£t_authmode
–&
s¶
, 
SSL_VERIFY_OPTIONAL
 );

169 
	`s¶_£t_ˇ_chaö
–&
s¶
, &
ˇ˚π
, 
NULL
, "PolarSSL Server 1" );

171 
	`s¶_£t_∫g
–&
s¶
, 
˘r_drbg_øndom
, &
˘r_drbg
 );

172 
	`s¶_£t_dbg
–&
s¶
, 
my_debug
, 
°dout
 );

173 
	`s¶_£t_bio
–&
s¶
, 
√t_ªcv
, &
£rvî_fd
,

174 
√t_£nd
, &
£rvî_fd
 );

179 
	`¥ötf
( " . PerformingÅhe SSL/TLS handshake..." );

180 
	`fÊush
–
°dout
 );

182  ( 
ªt
 = 
	`s¶_h™dshake
–&
s¶
 ) ) != 0 )

184 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&Ñë !
POLARSSL_ERR_NET_WANT_WRITE
 )

186 
	`¥ötf
–" faûed\¿ ! s¶_h™dshakêªtu∫ed -0x%x\n\n", -
ªt
 );

187 
exô
;

191 
	`¥ötf
( " ok\n" );

196 
	`¥ötf
( " . VerifyingÖeer X.509 certificate..." );

199 if––
ªt
 = 
	`s¶_gë_vîify_ªsu…
–&
s¶
 ) ) != 0 )

201 
	`¥ötf
( " failed\n" );

203 if––
ªt
 & 
BADCERT_EXPIRED
 ) != 0 )

204 
	`¥ötf
( " ! server certificate hasÉxpired\n" );

206 if––
ªt
 & 
BADCERT_REVOKED
 ) != 0 )

207 
	`¥ötf
( " ! server certificate has beenÑevoked\n" );

209 if––
ªt
 & 
BADCERT_CN_MISMATCH
 ) != 0 )

210 
	`¥ötf
( " ! CN mismatch (expected CN=%s)\n", "PolarSSL Server 1" );

212 if––
ªt
 & 
BADCERT_NOT_TRUSTED
 ) != 0 )

213 
	`¥ötf
( " ! self-signed orÇot signed byáÅrusted CA\n" );

215 
	`¥ötf
( "\n" );

218 
	`¥ötf
( " ok\n" );

223 
	`¥ötf
( " > WriteÅo server:" );

224 
	`fÊush
–
°dout
 );

226 
Àn
 = 
	`•rötf
–(*Ë
buf
, 
GET_REQUEST
 );

228  ( 
ªt
 = 
	`s¶_wrôe
–&
s¶
, 
buf
, 
Àn
 ) ) <= 0 )

230 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&Ñë !
POLARSSL_ERR_NET_WANT_WRITE
 )

232 
	`¥ötf
–" faûed\¿ ! s¶_wrôêªtu∫ed %d\n\n", 
ªt
 );

233 
exô
;

237 
Àn
 = 
ªt
;

238 
	`¥ötf
–" %d byã†wrôãn\n\n%s", 
Àn
, (*Ë
buf
 );

243 
	`¥ötf
( " < Read from server:" );

244 
	`fÊush
–
°dout
 );

248 
Àn
 = –
buf
 ) - 1;

249 
	`mem£t
–
buf
, 0, ( buf ) );

250 
ªt
 = 
	`s¶_ªad
–&
s¶
, 
buf
, 
Àn
 );

252 if–
ªt
 =
POLARSSL_ERR_NET_WANT_READ
 ||Ñë =
POLARSSL_ERR_NET_WANT_WRITE
 )

255 if–
ªt
 =
POLARSSL_ERR_SSL_PEER_CLOSE_NOTIFY
 )

258 if–
ªt
 < 0 )

260 
	`¥ötf
–"Áûed\¿ ! s¶_ªadÑëu∫ed %d\n\n", 
ªt
 );

264 if–
ªt
 == 0 )

266 
	`¥ötf
( "\n\nEOF\n\n" );

270 
Àn
 = 
ªt
;

271 
	`¥ötf
–" %d byã†ªad\n\n%s", 
Àn
, (*Ë
buf
 );

275 
	`s¶_˛o£_nŸify
–&
s¶
 );

277 
exô
:

279 #ifde‡
POLARSSL_ERROR_C


280 if–
ªt
 != 0 )

282 
îr‹_buf
[100];

283 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
îr‹_buf
, 100 );

284 
	`¥ötf
("La°Éº‹ was: %d - %s\n\n", 
ªt
, 
îr‹_buf
 );

288 if–
£rvî_fd
 != -1 )

289 
	`√t_˛o£
–
£rvî_fd
 );

291 
	`x509_¸t_‰ì
–&
ˇ˚π
 );

292 
	`s¶_‰ì
–&
s¶
 );

293 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

294 
	`íå›y_‰ì
–&
íå›y
 );

296 
	`mem£t
–&
s¶
, 0, ( ssl ) );

298 #i‡
	`deföed
(
_WIN32
)

299 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

300 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

303 –
ªt
 );

304 
	}
}

306 
	gPOLARSSL_SSL_CLI_C
 && 
	gPOLARSSL_NET_C
 && 
	gPOLARSSL_RSA_C
 &&

307 
	gPOLARSSL_CTR_DRBG_C
 */

	@polarssl/programs/ssl/ssl_client2.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡!
deföed
(
POLARSSL_ENTROPY_C
) || \

33 !
deföed
(
POLARSSL_SSL_TLS_C
Ë|| !deföed(
POLARSSL_SSL_CLI_C
) || \

34 !
deföed
(
POLARSSL_NET_C
Ë|| !
	$deföed
(
POLARSSL_CTR_DRBG_C
)

35 
	~<°dio.h
>

36 
	$maö
–
¨gc
, *
¨gv
[] )

38 ((Ë
¨gc
);

39 ((Ë
¨gv
);

41 
	`¥ötf
("POLARSSL_ENTROPY_Cánd/or "

45 
	}
}

48 
	~<°rög.h
>

49 
	~<°dlib.h
>

50 
	~<°dio.h
>

52 
	~"pﬁ¨s¶/√t.h
"

53 
	~"pﬁ¨s¶/s¶.h
"

54 
	~"pﬁ¨s¶/íå›y.h
"

55 
	~"pﬁ¨s¶/˘r_drbg.h
"

56 
	~"pﬁ¨s¶/˚πs.h
"

57 
	~"pﬁ¨s¶/x509.h
"

58 
	~"pﬁ¨s¶/îr‹.h
"

59 
	~"pﬁ¨s¶/debug.h
"

61 #i‡
deföed
(
POLARSSL_TIMING_C
)

62 
	~"pﬁ¨s¶/timög.h
"

65 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
EFIX64
Ë&& !deföed(
EFI32
)

66 #i‡!
deföed
 
¢¥ötf


67 
	#¢¥ötf
 
_¢¥ötf


	)

71 
	#DFL_SERVER_NAME
 "loˇlho°"

	)

72 
	#DFL_SERVER_ADDR
 
NULL


	)

73 
	#DFL_SERVER_PORT
 4433

	)

74 
	#DFL_REQUEST_PAGE
 "/"

	)

75 
	#DFL_REQUEST_SIZE
 -1

	)

76 
	#DFL_DEBUG_LEVEL
 0

	)

77 
	#DFL_NBIO
 0

	)

78 
	#DFL_CA_FILE
 ""

	)

79 
	#DFL_CA_PATH
 ""

	)

80 
	#DFL_CRT_FILE
 ""

	)

81 
	#DFL_KEY_FILE
 ""

	)

82 
	#DFL_PSK
 ""

	)

83 
	#DFL_PSK_IDENTITY
 "Clõ¡_idítôy"

	)

84 
	#DFL_FORCE_CIPHER
 0

	)

85 
	#DFL_RENEGOTIATION
 
SSL_RENEGOTIATION_DISABLED


	)

86 
	#DFL_ALLOW_LEGACY
 
SSL_LEGACY_NO_RENEGOTIATION


	)

87 
	#DFL_RENEGOTIATE
 0

	)

88 
	#DFL_MIN_VERSION
 -1

	)

89 
	#DFL_MAX_VERSION
 -1

	)

90 
	#DFL_AUTH_MODE
 
SSL_VERIFY_REQUIRED


	)

91 
	#DFL_MFL_CODE
 
SSL_MAX_FRAG_LEN_NONE


	)

92 
	#DFL_TRUNC_HMAC
 0

	)

93 
	#DFL_RECONNECT
 0

	)

94 
	#DFL_RECO_DELAY
 0

	)

95 
	#DFL_TICKETS
 
SSL_SESSION_TICKETS_ENABLED


	)

96 
	#DFL_ALPN_STRING
 
NULL


	)

98 
	#GET_REQUEST
 "GET %†HTTP/1.0\r\nExåa-hódî: "

	)

99 
	#GET_REQUEST_END
 "\r\n\r\n"

	)

104 
	s›ti⁄s


106 c⁄° *
	m£rvî_«me
;

107 c⁄° *
	m£rvî_addr
;

108 
	m£rvî_p‹t
;

109 
	mdebug_Àvñ
;

110 
	mnbio
;

111 c⁄° *
	mªque°_∑ge
;

112 
	mªque°_size
;

113 c⁄° *
	mˇ_fûe
;

114 c⁄° *
	mˇ_∑th
;

115 c⁄° *
	m¸t_fûe
;

116 c⁄° *
	mkey_fûe
;

117 c⁄° *
	mpsk
;

118 c⁄° *
	mpsk_idítôy
;

119 
	mf‹˚_cùhîsuôe
[2];

120 
	mª√gŸüti⁄
;

121 
	mÆlow_Àgacy
;

122 
	mª√gŸüã
;

123 
	mmö_vîsi⁄
;

124 
	mmax_vîsi⁄
;

125 
	mauth_mode
;

126 
	mmÊ_code
;

127 
	måunc_hmac
;

128 
	mªc⁄√˘
;

129 
	mªco_dñay
;

130 
	mtickës
;

131 c⁄° *
	mÆ≤_°rög
;

132 } 
	g›t
;

134 
	$my_debug
–*
˘x
, 
Àvñ
, c⁄° *
°r
 )

136 ((Ë
Àvñ
);

138 
	`Ârötf
–(
FILE
 *Ë
˘x
, "%s", 
°r
 );

139 
	`fÊush
–(
FILE
 *Ë
˘x
 );

140 
	}
}

146 
	$my_ªcv
–*
˘x
, *
buf
, 
size_t
 
Àn
 )

148 
fú°_åy
 = 1;

149 
ªt
;

151 if–
fú°_åy
 )

153 
fú°_åy
 = 0;

154 –
POLARSSL_ERR_NET_WANT_READ
 );

157 
ªt
 = 
	`√t_ªcv
–
˘x
, 
buf
, 
Àn
 );

158 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 )

159 
fú°_åy
 = 1;

160 –
ªt
 );

161 
	}
}

163 
	$my_£nd
–*
˘x
, c⁄° *
buf
, 
size_t
 
Àn
 )

165 
fú°_åy
 = 1;

166 
ªt
;

168 if–
fú°_åy
 )

170 
fú°_åy
 = 0;

171 –
POLARSSL_ERR_NET_WANT_WRITE
 );

174 
ªt
 = 
	`√t_£nd
–
˘x
, 
buf
, 
Àn
 );

175 if–
ªt
 !
POLARSSL_ERR_NET_WANT_WRITE
 )

176 
fú°_åy
 = 1;

177 –
ªt
 );

178 
	}
}

180 #i‡
deföed
(
POLARSSL_X509_CRT_PARSE_C
)

184 
	$my_vîify
–*
d©a
, 
x509_¸t
 *
¸t
, 
dïth
, *
Êags
 )

186 
buf
[1024];

187 ((Ë
d©a
);

189 
	`¥ötf
–"\nVîifyÑeque°ed f‹ (Dïth %d):\n", 
dïth
 );

190 
	`x509_¸t_öfo
–
buf
, –bu‡Ë- 1, "", 
¸t
 );

191 
	`¥ötf
–"%s", 
buf
 );

193 if––(*
Êags
Ë& 
BADCERT_EXPIRED
 ) != 0 )

194 
	`¥ötf
( " ! server certificate hasÉxpired\n" );

196 if––(*
Êags
Ë& 
BADCERT_REVOKED
 ) != 0 )

197 
	`¥ötf
( " ! server certificate has beenÑevoked\n" );

199 if––(*
Êags
Ë& 
BADCERT_CN_MISMATCH
 ) != 0 )

200 
	`¥ötf
( " ! CN mismatch\n" );

202 if––(*
Êags
Ë& 
BADCERT_NOT_TRUSTED
 ) != 0 )

203 
	`¥ötf
( " ! self-signed orÇot signed byáÅrusted CA\n" );

205 if––(*
Êags
Ë& 
BADCRL_NOT_TRUSTED
 ) != 0 )

206 
	`¥ötf
( " ! CRLÇotÅrusted\n" );

208 if––(*
Êags
Ë& 
BADCRL_EXPIRED
 ) != 0 )

209 
	`¥ötf
( " ! CRLÉxpired\n" );

211 if––(*
Êags
Ë& 
BADCERT_OTHER
 ) != 0 )

212 
	`¥ötf
( " ! other (unknown) flag\n" );

214 i‡––*
Êags
 ) == 0 )

215 
	`¥ötf
( " This certificate hasÇo flags\n" );

218 
	}
}

221 #i‡
deföed
(
POLARSSL_X509_CRT_PARSE_C
)

222 #i‡
deföed
(
POLARSSL_FS_IO
)

223 
	#USAGE_IO
 \

230 " key_fûe=%%† deÁu…: \"\" (¥e-lﬂded)\n"

	)

232 
	#USAGE_IO
 \

233 " Nÿfûê›î©i⁄†avaûabÀ (POLARSSL_FS_IOÇŸ deföed)\n"

	)

236 
	#USAGE_IO
 ""

	)

239 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

240 
	#USAGE_PSK
 \

242 "Ösk_idítôy=%%† deÁu…: \"Clõ¡_idítôy\"\n"

	)

244 
	#USAGE_PSK
 ""

	)

247 #i‡
deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

248 
	#USAGE_TICKETS
 \

249 "Åickës=%%d deÁu…: 1 (íabÀd)\n"

	)

251 
	#USAGE_TICKETS
 ""

	)

254 #i‡
deföed
(
POLARSSL_SSL_TRUNCATED_HMAC
)

255 
	#USAGE_TRUNC_HMAC
 \

256 "Årunc_hmac=%%d deÁu…: 0 (dißbÀd)\n"

	)

258 
	#USAGE_TRUNC_HMAC
 ""

	)

261 #i‡
deföed
(
POLARSSL_SSL_MAX_FRAGMENT_LENGTH
)

262 
	#USAGE_MAX_FRAG_LEN
 \

264 " o±i⁄s: 512, 1024, 2048, 4096\n"

	)

266 
	#USAGE_MAX_FRAG_LEN
 ""

	)

269 #i‡
deföed
(
POLARSSL_TIMING_C
)

270 
	#USAGE_TIME
 \

271 "Ñeco_dñay=%%d deÁu…: 0 sec⁄ds\n"

	)

273 
	#USAGE_TIME
 ""

	)

276 #i‡
deföed
(
POLARSSL_SSL_ALPN
)

277 
	#USAGE_ALPN
 \

279 "Éxam∂e: spdy/1,hâp/1.1\n"

	)

281 
	#USAGE_ALPN
 ""

	)

284 
	#USAGE
 \

299 
USAGE_IO
 \

301 
USAGE_PSK
 \

307 
USAGE_TIME
 \

308 
USAGE_TICKETS
 \

309 
USAGE_MAX_FRAG_LEN
 \

310 
USAGE_TRUNC_HMAC
 \

311 
USAGE_ALPN
 \

321 "ác˚±abÀ cùhîsuôê«mes:\n"

	)

323 
	$maö
–
¨gc
, *
¨gv
[] )

325 
ªt
 = 0, 
Àn
, 
£rvî_fd
, 
i
, 
wrôãn
, 
‰ags
;

326 
buf
[
SSL_MAX_CONTENT_LEN
 + 1];

327 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

328 
psk
[
POLARSSL_PSK_MAX_LEN
];

329 
size_t
 
psk_Àn
 = 0;

331 #i‡
	`deföed
(
POLARSSL_SSL_ALPN
)

332 c⁄° *
Æ≤_li°
[10];

334 c⁄° *
≥rs
 = "ssl_client2";

336 
íå›y_c⁄ãxt
 
íå›y
;

337 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

338 
s¶_c⁄ãxt
 
s¶
;

339 
s¶_£ssi⁄
 
ßved_£ssi⁄
;

340 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

341 
x509_¸t
 
ˇ˚π
;

342 
x509_¸t
 
˛i˚π
;

343 
pk_c⁄ãxt
 
pkey
;

345 *
p
, *
q
;

346 c⁄° *
li°
;

351 
£rvî_fd
 = 0;

352 
	`mem£t
–&
s¶
, 0, –
s¶_c⁄ãxt
 ) );

353 
	`mem£t
–&
ßved_£ssi⁄
, 0, –
s¶_£ssi⁄
 ) );

354 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

355 
	`x509_¸t_öô
–&
ˇ˚π
 );

356 
	`x509_¸t_öô
–&
˛i˚π
 );

357 
	`pk_öô
–&
pkey
 );

359 #i‡
	`deföed
(
POLARSSL_SSL_ALPN
)

360 
	`mem£t
–(* ) 
Æ≤_li°
, 0, (álpn_list ) );

363 if–
¨gc
 == 0 )

365 
ußge
:

366 if–
ªt
 == 0 )

367 
ªt
 = 1;

369 
	`¥ötf
–
USAGE
 );

371 
li°
 = 
	`s¶_li°_cùhîsuôes
();

372  *
li°
 )

374 
	`¥ötf
(" %-42s", 
	`s¶_gë_cùhîsuôe_«me
–*
li°
 ) );

375 
li°
++;

376 if–!*
li°
 )

378 
	`¥ötf
(" %s\n", 
	`s¶_gë_cùhîsuôe_«me
–*
li°
 ) );

379 
li°
++;

381 
	`¥ötf
("\n");

382 
exô
;

385 
›t
.
£rvî_«me
 = 
DFL_SERVER_NAME
;

386 
›t
.
£rvî_addr
 = 
DFL_SERVER_ADDR
;

387 
›t
.
£rvî_p‹t
 = 
DFL_SERVER_PORT
;

388 
›t
.
debug_Àvñ
 = 
DFL_DEBUG_LEVEL
;

389 
›t
.
nbio
 = 
DFL_NBIO
;

390 
›t
.
ªque°_∑ge
 = 
DFL_REQUEST_PAGE
;

391 
›t
.
ªque°_size
 = 
DFL_REQUEST_SIZE
;

392 
›t
.
ˇ_fûe
 = 
DFL_CA_FILE
;

393 
›t
.
ˇ_∑th
 = 
DFL_CA_PATH
;

394 
›t
.
¸t_fûe
 = 
DFL_CRT_FILE
;

395 
›t
.
key_fûe
 = 
DFL_KEY_FILE
;

396 
›t
.
psk
 = 
DFL_PSK
;

397 
›t
.
psk_idítôy
 = 
DFL_PSK_IDENTITY
;

398 
›t
.
f‹˚_cùhîsuôe
[0]
DFL_FORCE_CIPHER
;

399 
›t
.
ª√gŸüti⁄
 = 
DFL_RENEGOTIATION
;

400 
›t
.
Ælow_Àgacy
 = 
DFL_ALLOW_LEGACY
;

401 
›t
.
ª√gŸüã
 = 
DFL_RENEGOTIATE
;

402 
›t
.
mö_vîsi⁄
 = 
DFL_MIN_VERSION
;

403 
›t
.
max_vîsi⁄
 = 
DFL_MAX_VERSION
;

404 
›t
.
auth_mode
 = 
DFL_AUTH_MODE
;

405 
›t
.
mÊ_code
 = 
DFL_MFL_CODE
;

406 
›t
.
åunc_hmac
 = 
DFL_TRUNC_HMAC
;

407 
›t
.
ªc⁄√˘
 = 
DFL_RECONNECT
;

408 
›t
.
ªco_dñay
 = 
DFL_RECO_DELAY
;

409 
›t
.
tickës
 = 
DFL_TICKETS
;

410 
›t
.
Æ≤_°rög
 = 
DFL_ALPN_STRING
;

412  
i
 = 1; i < 
¨gc
; i++ )

414 
p
 = 
¨gv
[
i
];

415 if––
q
 = 
	`°rchr
–
p
, '=' ) ) =
NULL
 )

416 
ußge
;

417 *
q
++ = '\0';

419 if–
	`°rcmp
–
p
, "server_name" ) == 0 )

420 
›t
.
£rvî_«me
 = 
q
;

421 if–
	`°rcmp
–
p
, "server_addr" ) == 0 )

422 
›t
.
£rvî_addr
 = 
q
;

423 if–
	`°rcmp
–
p
, "server_port" ) == 0 )

425 
›t
.
£rvî_p‹t
 = 
	`©oi
–
q
 );

426 if–
›t
.
£rvî_p‹t
 < 1 || opt.server_port > 65535 )

427 
ußge
;

429 if–
	`°rcmp
–
p
, "debug_level" ) == 0 )

431 
›t
.
debug_Àvñ
 = 
	`©oi
–
q
 );

432 if–
›t
.
debug_Àvñ
 < 0 || opt.debug_level > 65535 )

433 
ußge
;

435 if–
	`°rcmp
–
p
, "nbio" ) == 0 )

437 
›t
.
nbio
 = 
	`©oi
–
q
 );

438 if–
›t
.
nbio
 < 0 || opt.nbio > 2 )

439 
ußge
;

441 if–
	`°rcmp
–
p
, "request_page" ) == 0 )

442 
›t
.
ªque°_∑ge
 = 
q
;

443 if–
	`°rcmp
–
p
, "request_size" ) == 0 )

445 
›t
.
ªque°_size
 = 
	`©oi
–
q
 );

446 if–
›t
.
ªque°_size
 < 0 || o±.ªque°_sizê> 
SSL_MAX_CONTENT_LEN
 )

447 
ußge
;

449 if–
	`°rcmp
–
p
, "ca_file" ) == 0 )

450 
›t
.
ˇ_fûe
 = 
q
;

451 if–
	`°rcmp
–
p
, "ca_path" ) == 0 )

452 
›t
.
ˇ_∑th
 = 
q
;

453 if–
	`°rcmp
–
p
, "crt_file" ) == 0 )

454 
›t
.
¸t_fûe
 = 
q
;

455 if–
	`°rcmp
–
p
, "key_file" ) == 0 )

456 
›t
.
key_fûe
 = 
q
;

457 if–
	`°rcmp
–
p
, "psk" ) == 0 )

458 
›t
.
psk
 = 
q
;

459 if–
	`°rcmp
–
p
, "psk_identity" ) == 0 )

460 
›t
.
psk_idítôy
 = 
q
;

461 if–
	`°rcmp
–
p
, "force_ciphersuite" ) == 0 )

463 
›t
.
f‹˚_cùhîsuôe
[0] = 
	`s¶_gë_cùhîsuôe_id
–
q
 );

465 if–
›t
.
f‹˚_cùhîsuôe
[0] == 0 )

467 
ªt
 = 2;

468 
ußge
;

470 
›t
.
f‹˚_cùhîsuôe
[1] = 0;

472 if–
	`°rcmp
–
p
, "renegotiation" ) == 0 )

474 
›t
.
ª√gŸüti⁄
 = (
	`©oi
–
q
 )Ë? 
SSL_RENEGOTIATION_ENABLED
 :

475 
SSL_RENEGOTIATION_DISABLED
;

477 if–
	`°rcmp
–
p
, "allow_legacy" ) == 0 )

479 
›t
.
Ælow_Àgacy
 = 
	`©oi
–
q
 );

480 if–
›t
.
Ælow_Àgacy
 < 0 || opt.allow_legacy > 1 )

481 
ußge
;

483 if–
	`°rcmp
–
p
, "renegotiate" ) == 0 )

485 
›t
.
ª√gŸüã
 = 
	`©oi
–
q
 );

486 if–
›t
.
ª√gŸüã
 < 0 || opt.renegotiate > 1 )

487 
ußge
;

489 if–
	`°rcmp
–
p
, "reconnect" ) == 0 )

491 
›t
.
ªc⁄√˘
 = 
	`©oi
–
q
 );

492 if–
›t
.
ªc⁄√˘
 < 0 || opt.reconnect > 2 )

493 
ußge
;

495 if–
	`°rcmp
–
p
, "reco_delay" ) == 0 )

497 
›t
.
ªco_dñay
 = 
	`©oi
–
q
 );

498 if–
›t
.
ªco_dñay
 < 0 )

499 
ußge
;

501 if–
	`°rcmp
–
p
, "tickets" ) == 0 )

503 
›t
.
tickës
 = 
	`©oi
–
q
 );

504 if–
›t
.
tickës
 < 0 || opt.tickets > 2 )

505 
ußge
;

507 if–
	`°rcmp
–
p
, "alpn" ) == 0 )

509 
›t
.
Æ≤_°rög
 = 
q
;

511 if–
	`°rcmp
–
p
, "min_version" ) == 0 )

513 if–
	`°rcmp
–
q
, "ssl3" ) == 0 )

514 
›t
.
mö_vîsi⁄
 = 
SSL_MINOR_VERSION_0
;

515 if–
	`°rcmp
–
q
, "tls1" ) == 0 )

516 
›t
.
mö_vîsi⁄
 = 
SSL_MINOR_VERSION_1
;

517 if–
	`°rcmp
–
q
, "tls1_1" ) == 0 )

518 
›t
.
mö_vîsi⁄
 = 
SSL_MINOR_VERSION_2
;

519 if–
	`°rcmp
–
q
, "tls1_2" ) == 0 )

520 
›t
.
mö_vîsi⁄
 = 
SSL_MINOR_VERSION_3
;

522 
ußge
;

524 if–
	`°rcmp
–
p
, "max_version" ) == 0 )

526 if–
	`°rcmp
–
q
, "ssl3" ) == 0 )

527 
›t
.
max_vîsi⁄
 = 
SSL_MINOR_VERSION_0
;

528 if–
	`°rcmp
–
q
, "tls1" ) == 0 )

529 
›t
.
max_vîsi⁄
 = 
SSL_MINOR_VERSION_1
;

530 if–
	`°rcmp
–
q
, "tls1_1" ) == 0 )

531 
›t
.
max_vîsi⁄
 = 
SSL_MINOR_VERSION_2
;

532 if–
	`°rcmp
–
q
, "tls1_2" ) == 0 )

533 
›t
.
max_vîsi⁄
 = 
SSL_MINOR_VERSION_3
;

535 
ußge
;

537 if–
	`°rcmp
–
p
, "force_version" ) == 0 )

539 if–
	`°rcmp
–
q
, "ssl3" ) == 0 )

541 
›t
.
mö_vîsi⁄
 = 
SSL_MINOR_VERSION_0
;

542 
›t
.
max_vîsi⁄
 = 
SSL_MINOR_VERSION_0
;

544 if–
	`°rcmp
–
q
, "tls1" ) == 0 )

546 
›t
.
mö_vîsi⁄
 = 
SSL_MINOR_VERSION_1
;

547 
›t
.
max_vîsi⁄
 = 
SSL_MINOR_VERSION_1
;

549 if–
	`°rcmp
–
q
, "tls1_1" ) == 0 )

551 
›t
.
mö_vîsi⁄
 = 
SSL_MINOR_VERSION_2
;

552 
›t
.
max_vîsi⁄
 = 
SSL_MINOR_VERSION_2
;

554 if–
	`°rcmp
–
q
, "tls1_2" ) == 0 )

556 
›t
.
mö_vîsi⁄
 = 
SSL_MINOR_VERSION_3
;

557 
›t
.
max_vîsi⁄
 = 
SSL_MINOR_VERSION_3
;

560 
ußge
;

562 if–
	`°rcmp
–
p
, "auth_mode" ) == 0 )

564 if–
	`°rcmp
–
q
, "none" ) == 0 )

565 
›t
.
auth_mode
 = 
SSL_VERIFY_NONE
;

566 if–
	`°rcmp
–
q
, "optional" ) == 0 )

567 
›t
.
auth_mode
 = 
SSL_VERIFY_OPTIONAL
;

568 if–
	`°rcmp
–
q
, "required" ) == 0 )

569 
›t
.
auth_mode
 = 
SSL_VERIFY_REQUIRED
;

571 
ußge
;

573 if–
	`°rcmp
–
p
, "max_frag_len" ) == 0 )

575 if–
	`°rcmp
–
q
, "512" ) == 0 )

576 
›t
.
mÊ_code
 = 
SSL_MAX_FRAG_LEN_512
;

577 if–
	`°rcmp
–
q
, "1024" ) == 0 )

578 
›t
.
mÊ_code
 = 
SSL_MAX_FRAG_LEN_1024
;

579 if–
	`°rcmp
–
q
, "2048" ) == 0 )

580 
›t
.
mÊ_code
 = 
SSL_MAX_FRAG_LEN_2048
;

581 if–
	`°rcmp
–
q
, "4096" ) == 0 )

582 
›t
.
mÊ_code
 = 
SSL_MAX_FRAG_LEN_4096
;

584 
ußge
;

586 if–
	`°rcmp
–
p
, "trunc_hmac" ) == 0 )

588 
›t
.
åunc_hmac
 = 
	`©oi
–
q
 );

589 if–
›t
.
åunc_hmac
 < 0 || opt.trunc_hmac > 1 )

590 
ußge
;

593 
ußge
;

596 #i‡
	`deföed
(
POLARSSL_DEBUG_C
)

597 
	`debug_£t_thªshﬁd
–
›t
.
debug_Àvñ
 );

600 if–
›t
.
f‹˚_cùhîsuôe
[0] > 0 )

602 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
;

603 
cùhîsuôe_öfo
 = 
	`s¶_cùhîsuôe_‰om_id
–
›t
.
f‹˚_cùhîsuôe
[0] );

605 if–
›t
.
max_vîsi⁄
 != -1 &&

606 
cùhîsuôe_öfo
->
mö_mö‹_vî
 > 
›t
.
max_vîsi⁄
 )

608 
	`¥ötf
("forced ciphersuiteÇotállowed withÅhisÖrotocol version\n");

609 
ªt
 = 2;

610 
ußge
;

612 if–
›t
.
mö_vîsi⁄
 != -1 &&

613 
cùhîsuôe_öfo
->
max_mö‹_vî
 < 
›t
.
mö_vîsi⁄
 )

615 
	`¥ötf
("forced ciphersuiteÇotállowed withÅhisÖrotocol version\n");

616 
ªt
 = 2;

617 
ußge
;

619 if–
›t
.
max_vîsi⁄
 > 
cùhîsuôe_öfo
->
max_mö‹_vî
 )

620 
›t
.
max_vîsi⁄
 = 
cùhîsuôe_öfo
->
max_mö‹_vî
;

621 if–
›t
.
mö_vîsi⁄
 < 
cùhîsuôe_öfo
->
mö_mö‹_vî
 )

622 
›t
.
mö_vîsi⁄
 = 
cùhîsuôe_öfo
->
mö_mö‹_vî
;

625 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

629 if–
	`°æí
–
›t
.
psk
 ) )

631 
c
;

632 
size_t
 
j
;

634 if–
	`°æí
–
›t
.
psk
 ) % 2 != 0 )

636 
	`¥ötf
("pre-shared keyÇot valid hex\n");

637 
exô
;

640 
psk_Àn
 = 
	`°æí
–
›t
.
psk
 ) / 2;

642  
j
 = 0; j < 
	`°æí
–
›t
.
psk
 ); j += 2 )

644 
c
 = 
›t
.
psk
[
j
];

645 if–
c
 >= '0' && c <= '9' )

646 
c
 -= '0';

647 if–
c
 >= 'a' && c <= 'f' )

648 
c
 -= 'a' - 10;

649 if–
c
 >= 'A' && c <= 'F' )

650 
c
 -= 'A' - 10;

653 
	`¥ötf
("pre-shared keyÇot valid hex\n");

654 
exô
;

656 
psk
[ 
j
 / 2 ] = 
c
 << 4;

658 
c
 = 
›t
.
psk
[
j
 + 1];

659 if–
c
 >= '0' && c <= '9' )

660 
c
 -= '0';

661 if–
c
 >= 'a' && c <= 'f' )

662 
c
 -= 'a' - 10;

663 if–
c
 >= 'A' && c <= 'F' )

664 
c
 -= 'A' - 10;

667 
	`¥ötf
("pre-shared keyÇot valid hex\n");

668 
exô
;

670 
psk
[ 
j
 / 2 ] |
c
;

675 #i‡
	`deföed
(
POLARSSL_SSL_ALPN
)

676 if–
›t
.
Æ≤_°rög
 !
NULL
 )

678 
p
 = (*Ë
›t
.
Æ≤_°rög
;

679 
i
 = 0;

682  
i
 < (Ë 
Æ≤_li°
 - 1 && *
p
 != '\0' )

684 
Æ≤_li°
[
i
++] = 
p
;

687  *
p
 != ',' && *p != '\0' )

688 
p
++;

689 if–*
p
 == ',' )

690 *
p
++ = '\0';

698 
	`¥ötf
( "\n . SeedingÅheÑandomÇumber generator..." );

699 
	`fÊush
–
°dout
 );

701 
	`íå›y_öô
–&
íå›y
 );

702 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

703 (c⁄° *Ë
≥rs
,

704 
	`°æí
–
≥rs
 ) ) ) != 0 )

706 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed -0x%x\n", -
ªt
 );

707 
exô
;

710 
	`¥ötf
( " ok\n" );

712 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

716 
	`¥ötf
( " . LoadingÅhe CAÑoot certificate ..." );

717 
	`fÊush
–
°dout
 );

719 #i‡
	`deföed
(
POLARSSL_FS_IO
)

720 if–
	`°æí
–
›t
.
ˇ_∑th
 ) )

721 if–
	`°rcmp
–
›t
.
ˇ_∑th
, "none" ) == 0 )

722 
ªt
 = 0;

724 
ªt
 = 
	`x509_¸t_∑r£_∑th
–&
ˇ˚π
, 
›t
.
ˇ_∑th
 );

725 if–
	`°æí
–
›t
.
ˇ_fûe
 ) )

726 if–
	`°rcmp
–
›t
.
ˇ_fûe
, "none" ) == 0 )

727 
ªt
 = 0;

729 
ªt
 = 
	`x509_¸t_∑r£_fûe
–&
ˇ˚π
, 
›t
.
ˇ_fûe
 );

732 #i‡
	`deföed
(
POLARSSL_CERTS_C
)

733 
ªt
 = 
	`x509_¸t_∑r£
–&
ˇ˚π
, (c⁄° *Ë
ã°_ˇ_li°
,

734 
	`°æí
–
ã°_ˇ_li°
 ) );

737 
ªt
 = 1;

738 
	`¥ötf
("POLARSSL_CERTS_CÇot defined.");

741 if–
ªt
 < 0 )

743 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£Ñëu∫ed -0x%x\n\n", -
ªt
 );

744 
exô
;

747 
	`¥ötf
–" ok (%d skù≥d)\n", 
ªt
 );

754 
	`¥ötf
( " . LoadingÅhe client cert.ánd key..." );

755 
	`fÊush
–
°dout
 );

757 #i‡
	`deföed
(
POLARSSL_FS_IO
)

758 if–
	`°æí
–
›t
.
¸t_fûe
 ) )

759 if–
	`°rcmp
–
›t
.
¸t_fûe
, "none" ) == 0 )

760 
ªt
 = 0;

762 
ªt
 = 
	`x509_¸t_∑r£_fûe
–&
˛i˚π
, 
›t
.
¸t_fûe
 );

765 #i‡
	`deföed
(
POLARSSL_CERTS_C
)

766 
ªt
 = 
	`x509_¸t_∑r£
–&
˛i˚π
, (c⁄° *Ë
ã°_˛i_¸t
,

767 
	`°æí
–
ã°_˛i_¸t
 ) );

770 
ªt
 = 1;

771 
	`¥ötf
("POLARSSL_CERTS_CÇot defined.");

774 if–
ªt
 != 0 )

776 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£Ñëu∫ed -0x%x\n\n", -
ªt
 );

777 
exô
;

780 #i‡
	`deföed
(
POLARSSL_FS_IO
)

781 if–
	`°æí
–
›t
.
key_fûe
 ) )

782 if–
	`°rcmp
–
›t
.
key_fûe
, "none" ) == 0 )

783 
ªt
 = 0;

785 
ªt
 = 
	`pk_∑r£_keyfûe
–&
pkey
, 
›t
.
key_fûe
, "" );

788 #i‡
	`deföed
(
POLARSSL_CERTS_C
)

789 
ªt
 = 
	`pk_∑r£_key
–&
pkey
, (c⁄° *Ë
ã°_˛i_key
,

790 
	`°æí
–
ã°_˛i_key
 ), 
NULL
, 0 );

793 
ªt
 = 1;

794 
	`¥ötf
("POLARSSL_CERTS_CÇot defined.");

797 if–
ªt
 != 0 )

799 
	`¥ötf
–" faûed\¿ !Ök_∑r£_keyÑëu∫ed -0x%x\n\n", -
ªt
 );

800 
exô
;

803 
	`¥ötf
( " ok\n" );

809 if–
›t
.
£rvî_addr
 =
NULL
)

810 
›t
.
£rvî_addr
 = o±.
£rvî_«me
;

812 
	`¥ötf
–" . C⁄√˘ögÅÿt˝/%s/%-4d...", 
›t
.
£rvî_addr
,

813 
›t
.
£rvî_p‹t
 );

814 
	`fÊush
–
°dout
 );

816 if––
ªt
 = 
	`√t_c⁄√˘
–&
£rvî_fd
, 
›t
.
£rvî_addr
,

817 
›t
.
£rvî_p‹t
 ) ) != 0 )

819 
	`¥ötf
–" faûed\¿ !Çë_c⁄√˘Ñëu∫ed -0x%x\n\n", -
ªt
 );

820 
exô
;

823 if–
›t
.
nbio
 > 0 )

824 
ªt
 = 
	`√t_£t_n⁄block
–
£rvî_fd
 );

826 
ªt
 = 
	`√t_£t_block
–
£rvî_fd
 );

827 if–
ªt
 != 0 )

829 
	`¥ötf
–" faûed\¿ !Çë_£t_“⁄)block(Ëªtu∫ed -0x%x\n\n", -
ªt
 );

830 
exô
;

833 
	`¥ötf
( " ok\n" );

838 
	`¥ötf
( " . Setting upÅhe SSL/TLS structure..." );

839 
	`fÊush
–
°dout
 );

841 if––
ªt
 = 
	`s¶_öô
–&
s¶
 ) ) != 0 )

843 
	`¥ötf
–" faûed\¿ ! s¶_öôÑëu∫ed -0x%x\n\n", -
ªt
 );

844 
exô
;

847 
	`¥ötf
( " ok\n" );

849 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

850 if–
›t
.
debug_Àvñ
 > 0 )

851 
	`s¶_£t_vîify
–&
s¶
, 
my_vîify
, 
NULL
 );

854 
	`s¶_£t_ídpoöt
–&
s¶
, 
SSL_IS_CLIENT
 );

855 
	`s¶_£t_authmode
–&
s¶
, 
›t
.
auth_mode
 );

857 #i‡
	`deföed
(
POLARSSL_SSL_MAX_FRAGMENT_LENGTH
)

858 if––
ªt
 = 
	`s¶_£t_max_‰ag_Àn
–&
s¶
, 
›t
.
mÊ_code
 ) ) != 0 )

860 
	`¥ötf
–" faûed\¿ ! s¶_£t_max_‰ag_À¿ªtu∫ed %d\n\n", 
ªt
 );

861 
exô
;

865 #i‡
	`deföed
(
POLARSSL_SSL_TRUNCATED_HMAC
)

866 if–
›t
.
åunc_hmac
 != 0 )

867 if––
ªt
 = 
	`s¶_£t_åunˇãd_hmac
–&
s¶
, 
SSL_TRUNC_HMAC_ENABLED
 ) ) != 0 )

869 
	`¥ötf
–" faûed\¿ ! s¶_£t_åunˇãd_hma¯ªtu∫ed %d\n\n", 
ªt
 );

870 
exô
;

874 #i‡
	`deföed
(
POLARSSL_SSL_ALPN
)

875 if–
›t
.
Æ≤_°rög
 !
NULL
 )

876 if––
ªt
 = 
	`s¶_£t_Æ≤_¥Ÿocﬁs
–&
s¶
, 
Æ≤_li°
 ) ) != 0 )

878 
	`¥ötf
–" faûed\¿ ! s¶_£t_Æ≤_¥Ÿocﬁ†ªtu∫ed %d\n\n", 
ªt
 );

879 
exô
;

883 
	`s¶_£t_∫g
–&
s¶
, 
˘r_drbg_øndom
, &
˘r_drbg
 );

884 
	`s¶_£t_dbg
–&
s¶
, 
my_debug
, 
°dout
 );

886 if–
›t
.
nbio
 == 2 )

887 
	`s¶_£t_bio
–&
s¶
, 
my_ªcv
, &
£rvî_fd
, 
my_£nd
, &server_fd );

889 
	`s¶_£t_bio
–&
s¶
, 
√t_ªcv
, &
£rvî_fd
, 
√t_£nd
, &server_fd );

891 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

892 if––
ªt
 = 
	`s¶_£t_£ssi⁄_tickës
–&
s¶
, 
›t
.
tickës
 ) ) != 0 )

894 
	`¥ötf
–" faûed\¿ ! s¶_£t_£ssi⁄_tickë†ªtu∫ed %d\n\n", 
ªt
 );

895 
exô
;

899 if–
›t
.
f‹˚_cùhîsuôe
[0] !
DFL_FORCE_CIPHER
 )

900 
	`s¶_£t_cùhîsuôes
–&
s¶
, 
›t
.
f‹˚_cùhîsuôe
 );

902 
	`s¶_£t_ª√gŸüti⁄
–&
s¶
, 
›t
.
ª√gŸüti⁄
 );

903 
	`s¶_Àgacy_ª√gŸüti⁄
–&
s¶
, 
›t
.
Ælow_Àgacy
 );

905 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

906 if–
	`°rcmp
–
›t
.
ˇ_∑th
, "none" ) != 0 &&

907 
	`°rcmp
–
›t
.
ˇ_fûe
, "none" ) != 0 )

909 
	`s¶_£t_ˇ_chaö
–&
s¶
, &
ˇ˚π
, 
NULL
, 
›t
.
£rvî_«me
 );

911 if–
	`°rcmp
–
›t
.
¸t_fûe
, "none" ) != 0 &&

912 
	`°rcmp
–
›t
.
key_fûe
, "none" ) != 0 )

914 if––
ªt
 = 
	`s¶_£t_own_˚π
–&
s¶
, &
˛i˚π
, &
pkey
 ) ) != 0 )

916 
	`¥ötf
–" faûed\¿ ! s¶_£t_own_˚πÑëu∫ed %d\n\n", 
ªt
 );

917 
exô
;

922 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

923 if––
ªt
 = 
	`s¶_£t_psk
–&
s¶
, 
psk
, 
psk_Àn
,

924 (c⁄° *Ë
›t
.
psk_idítôy
,

925 
	`°æí
–
›t
.
psk_idítôy
 ) ) ) != 0 )

927 
	`¥ötf
–" faûed\¿ ! s¶_£t_pskÑëu∫ed %d\n\n", 
ªt
 );

928 
exô
;

932 #i‡
	`deföed
(
POLARSSL_SSL_SERVER_NAME_INDICATION
)

933 if––
ªt
 = 
	`s¶_£t_ho°«me
–&
s¶
, 
›t
.
£rvî_«me
 ) ) != 0 )

935 
	`¥ötf
–" faûed\¿ ! s¶_£t_ho°«mêªtu∫ed %d\n\n", 
ªt
 );

936 
exô
;

940 if–
›t
.
mö_vîsi⁄
 != -1 )

941 
	`s¶_£t_mö_vîsi⁄
–&
s¶
, 
SSL_MAJOR_VERSION_3
, 
›t
.
mö_vîsi⁄
 );

942 if–
›t
.
max_vîsi⁄
 != -1 )

943 
	`s¶_£t_max_vîsi⁄
–&
s¶
, 
SSL_MAJOR_VERSION_3
, 
›t
.
max_vîsi⁄
 );

948 
	`¥ötf
( " . PerformingÅhe SSL/TLS handshake..." );

949 
	`fÊush
–
°dout
 );

951  ( 
ªt
 = 
	`s¶_h™dshake
–&
s¶
 ) ) != 0 )

953 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&Ñë !
POLARSSL_ERR_NET_WANT_WRITE
 )

955 
	`¥ötf
–" faûed\¿ ! s¶_h™dshakêªtu∫ed -0x%x\n", -
ªt
 );

956 if–
ªt
 =
POLARSSL_ERR_X509_CERT_VERIFY_FAILED
 )

957 
	`¥ötf
(

964 
	`¥ötf
( "\n" );

965 
exô
;

969 
	`¥ötf
( " ok\n [ Protocol is %s ]\n [ Ciphersuite is %s ]\n",

970 
	`s¶_gë_vîsi⁄
–&
s¶
 ), 
	`s¶_gë_cùhîsuôe
( &ssl ) );

972 #i‡
	`deföed
(
POLARSSL_SSL_ALPN
)

973 if–
›t
.
Æ≤_°rög
 !
NULL
 )

975 c⁄° *
Æp
 = 
	`s¶_gë_Æ≤_¥Ÿocﬁ
–&
s¶
 );

976 
	`¥ötf
( " [ Application Layer Protocol is %s ]\n",

977 
Æp
 ?álp : "(none)" );

981 if–
›t
.
ªc⁄√˘
 != 0 )

983 
	`¥ötf
(" . Saving session forÑeuse..." );

984 
	`fÊush
–
°dout
 );

986 if––
ªt
 = 
	`s¶_gë_£ssi⁄
–&
s¶
, &
ßved_£ssi⁄
 ) ) != 0 )

988 
	`¥ötf
–" faûed\¿ ! s¶_gë_£ssi⁄Ñëu∫ed -0x%x\n\n", -
ªt
 );

989 
exô
;

992 
	`¥ötf
( " ok\n" );

995 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

999 
	`¥ötf
( " . VerifyingÖeer X.509 certificate..." );

1001 if––
ªt
 = 
	`s¶_gë_vîify_ªsu…
–&
s¶
 ) ) != 0 )

1003 
	`¥ötf
( " failed\n" );

1005 if––
ªt
 & 
BADCERT_EXPIRED
 ) != 0 )

1006 
	`¥ötf
( " ! server certificate hasÉxpired\n" );

1008 if––
ªt
 & 
BADCERT_REVOKED
 ) != 0 )

1009 
	`¥ötf
( " ! server certificate has beenÑevoked\n" );

1011 if––
ªt
 & 
BADCERT_CN_MISMATCH
 ) != 0 )

1012 
	`¥ötf
–" ! CN mism©ch (ex≥˘ed CN=%s)\n", 
›t
.
£rvî_«me
 );

1014 if––
ªt
 & 
BADCERT_NOT_TRUSTED
 ) != 0 )

1015 
	`¥ötf
( " ! self-signed orÇot signed byáÅrusted CA\n" );

1017 
	`¥ötf
( "\n" );

1020 
	`¥ötf
( " ok\n" );

1022 if–
	`s¶_gë_≥î_˚π
–&
s¶
 ) !
NULL
 )

1024 
	`¥ötf
( " . Peer certificate information ...\n" );

1025 
	`x509_¸t_öfo
–(*Ë
buf
, ( buf ) - 1, " ",

1026 
	`s¶_gë_≥î_˚π
–&
s¶
 ) );

1027 
	`¥ötf
–"%s\n", 
buf
 );

1031 if–
›t
.
ª√gŸüã
 )

1037 
	`¥ötf
( " . PerformingÑenegotiation..." );

1038 
	`fÊush
–
°dout
 );

1039  ( 
ªt
 = 
	`s¶_ª√gŸüã
–&
s¶
 ) ) != 0 )

1041 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&

1042 
ªt
 !
POLARSSL_ERR_NET_WANT_WRITE
 )

1044 
	`¥ötf
–" faûed\¿ ! s¶_ª√gŸüãÑëu∫ed %d\n\n", 
ªt
 );

1045 
exô
;

1048 
	`¥ötf
( " ok\n" );

1054 
£nd_ªque°
:

1055 
	`¥ötf
( " > WriteÅo server:" );

1056 
	`fÊush
–
°dout
 );

1058 if–
	`°rcmp
–
›t
.
ªque°_∑ge
, "SERVERQUIT" ) == 0 )

1059 
Àn
 = 
	`•rötf
–(*Ë
buf
, "%s", 
›t
.
ªque°_∑ge
 );

1062 
size_t
 
èû_Àn
 = 
	`°æí
–
GET_REQUEST_END
 );

1064 
Àn
 = 
	`¢¥ötf
–(*Ë
buf
, (bufË- 1, 
GET_REQUEST
,

1065 
›t
.
ªque°_∑ge
 );

1068 if–
›t
.
ªque°_size
 !
DFL_REQUEST_SIZE
 &&

1069 
Àn
 + 
èû_Àn
 < (
size_t
Ë
›t
.
ªque°_size
 )

1071 
	`mem£t
–
buf
 + 
Àn
, 'A', 
›t
.
ªque°_size
 -Üí - 
èû_Àn
 );

1072 
Àn
 +
›t
.
ªque°_size
 -Üí - 
èû_Àn
;

1075 
	`°∫˝y
–(*Ë
buf
 + 
Àn
, 
GET_REQUEST_END
, (buf) -Üen - 1 );

1076 
Àn
 +
èû_Àn
;

1080 if–
›t
.
ªque°_size
 !
DFL_REQUEST_SIZE
 &&

1081 
Àn
 > 
›t
.
ªque°_size
 )

1083 
Àn
 = 
›t
.
ªque°_size
;

1086 if–
Àn
 >2 ) 
buf
[len - 2] = '\r';

1087 if–
Àn
 >1 ) 
buf
[len - 1] = '\n';

1090  
wrôãn
 = 0, 
‰ags
 = 0; wrôã¿< 
Àn
; wrôã¿+
ªt
, frags++ )

1092  ( 
ªt
 = 
	`s¶_wrôe
–&
s¶
, 
buf
 + 
wrôãn
, 
Àn
 - written ) ) <= 0 )

1094 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&Ñë !
POLARSSL_ERR_NET_WANT_WRITE
 )

1096 
	`¥ötf
–" faûed\¿ ! s¶_wrôêªtu∫ed -0x%x\n\n", -
ªt
 );

1097 
exô
;

1102 
buf
[
wrôãn
] = '\0';

1103 
	`¥ötf
–" %d byã†wrôã¿ö %d føgmíts\n\n%s\n", 
wrôãn
, 
‰ags
, (*Ë
buf
 );

1108 
	`¥ötf
( " < Read from server:" );

1109 
	`fÊush
–
°dout
 );

1113 
Àn
 = –
buf
 ) - 1;

1114 
	`mem£t
–
buf
, 0, ( buf ) );

1115 
ªt
 = 
	`s¶_ªad
–&
s¶
, 
buf
, 
Àn
 );

1117 if–
ªt
 =
POLARSSL_ERR_NET_WANT_READ
 ||Ñë =
POLARSSL_ERR_NET_WANT_WRITE
 )

1120 if–
ªt
 =
POLARSSL_ERR_SSL_PEER_CLOSE_NOTIFY
 )

1123 if–
ªt
 < 0 )

1125 
	`¥ötf
–"Áûed\¿ ! s¶_ªadÑëu∫ed -0x%x\n\n", -
ªt
 );

1129 if–
ªt
 == 0 )

1131 
	`¥ötf
("\n\nEOF\n\n");

1132 
	`s¶_˛o£_nŸify
–&
s¶
 );

1136 
Àn
 = 
ªt
;

1137 
buf
[
Àn
] = '\0';

1138 
	`¥ötf
–" %d byã†ªad\n\n%s", 
Àn
, (*Ë
buf
 );

1142 if–
›t
.
ªc⁄√˘
 != 0 )

1144 --
›t
.
ªc⁄√˘
;

1146 
	`√t_˛o£
–
£rvî_fd
 );

1148 #i‡
	`deföed
(
POLARSSL_TIMING_C
)

1149 if–
›t
.
ªco_dñay
 > 0 )

1150 
	`m_¶ìp
–1000 * 
›t
.
ªco_dñay
 );

1153 
	`¥ötf
( " . Reconnecting with saved session..." );

1154 
	`fÊush
–
°dout
 );

1156 if––
ªt
 = 
	`s¶_£ssi⁄_ª£t
–&
s¶
 ) ) != 0 )

1158 
	`¥ötf
–" faûed\¿ ! s¶_£ssi⁄_ª£àªtu∫ed -0x%x\n\n", -
ªt
 );

1159 
exô
;

1162 if––
ªt
 = 
	`s¶_£t_£ssi⁄
–&
s¶
, &
ßved_£ssi⁄
 ) ) != 0 )

1164 
	`¥ötf
–" faûed\¿ ! s¶_£t_£ssi⁄Ñëu∫ed %d\n\n", 
ªt
 );

1165 
exô
;

1168 if––
ªt
 = 
	`√t_c⁄√˘
–&
£rvî_fd
, 
›t
.
£rvî_«me
,

1169 
›t
.
£rvî_p‹t
 ) ) != 0 )

1171 
	`¥ötf
–" faûed\¿ !Çë_c⁄√˘Ñëu∫ed -0x%x\n\n", -
ªt
 );

1172 
exô
;

1175  ( 
ªt
 = 
	`s¶_h™dshake
–&
s¶
 ) ) != 0 )

1177 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&

1178 
ªt
 !
POLARSSL_ERR_NET_WANT_WRITE
 )

1180 
	`¥ötf
–" faûed\¿ ! s¶_h™dshakêªtu∫ed -0x%x\n\n", -
ªt
 );

1181 
exô
;

1185 
	`¥ötf
( " ok\n" );

1187 
£nd_ªque°
;

1190 
exô
:

1191 if–
ªt
 =
POLARSSL_ERR_SSL_PEER_CLOSE_NOTIFY
 )

1192 
ªt
 = 0;

1194 #ifde‡
POLARSSL_ERROR_C


1195 if–
ªt
 != 0 )

1197 
îr‹_buf
[100];

1198 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
îr‹_buf
, 100 );

1199 
	`¥ötf
("La°Éº‹ was: -0x%X - %s\n\n", -
ªt
, 
îr‹_buf
 );

1203 if–
£rvî_fd
 )

1204 
	`√t_˛o£
–
£rvî_fd
 );

1205 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

1206 
	`x509_¸t_‰ì
–&
˛i˚π
 );

1207 
	`x509_¸t_‰ì
–&
ˇ˚π
 );

1208 
	`pk_‰ì
–&
pkey
 );

1210 
	`s¶_£ssi⁄_‰ì
–&
ßved_£ssi⁄
 );

1211 
	`s¶_‰ì
–&
s¶
 );

1212 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

1213 
	`íå›y_‰ì
–&
íå›y
 );

1215 
	`mem£t
–&
s¶
, 0, ( ssl ) );

1217 #i‡
	`deföed
(
_WIN32
)

1218 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

1219 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

1223 if–
ªt
 < 0 )

1224 
ªt
 = 1;

1226 –
ªt
 );

1227 
	}
}

1229 
	gPOLARSSL_SSL_CLI_C
 && 
	gPOLARSSL_NET_C
 && 
	gPOLARSSL_RSA_C
 &&

1230 
	gPOLARSSL_CTR_DRBG_C
 */

	@polarssl/programs/ssl/ssl_fork_server.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
_WIN32
)

33 
	~<wödows.h
>

36 
	~<°rög.h
>

37 
	~<°dlib.h
>

38 
	~<°dio.h
>

39 
	~<sig«l.h
>

41 #i‡!
deföed
(
_MSC_VER
Ë|| deföed(
EFIX64
Ë|| deföed(
EFI32
)

42 
	~<uni°d.h
>

45 
	~"pﬁ¨s¶/íå›y.h
"

46 
	~"pﬁ¨s¶/˘r_drbg.h
"

47 
	~"pﬁ¨s¶/˚πs.h
"

48 
	~"pﬁ¨s¶/x509.h
"

49 
	~"pﬁ¨s¶/s¶.h
"

50 
	~"pﬁ¨s¶/√t.h
"

51 
	~"pﬁ¨s¶/timög.h
"

53 
	#HTTP_RESPONSE
 \

56 "<p>Suc˚ssfu»c⁄√˘i⁄ usög: %s</p>\r\n"

	)

58 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_CERTS_C
) || \

59 !
deföed
(
POLARSSL_ENTROPY_C
Ë|| !deföed(
POLARSSL_SSL_TLS_C
) || \

60 !
deföed
(
POLARSSL_SSL_SRV_C
Ë|| !deföed(
POLARSSL_NET_C
) || \

61 !
deföed
(
POLARSSL_RSA_C
Ë|| !deföed(
POLARSSL_CTR_DRBG_C
) || \

62 !
deföed
(
POLARSSL_X509_CRT_PARSE_C
Ë|| !
	$deföed
(
POLARSSL_TIMING_C
)

63 
	$maö
–
¨gc
, *
¨gv
[] )

65 ((Ë
¨gc
);

66 ((Ë
¨gv
);

68 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_CERTS_Cánd/or POLARSSL_ENTROPY_C "

74 
	}
}

75 #ñi‡
deföed
(
_WIN32
)

76 
	$maö
–
¨gc
, *
¨gv
[] )

78 ((Ë
¨gc
);

79 ((Ë
¨gv
);

81 
	`¥ötf
("_WIN32 defined. ThisápplicationÑequires fork()ánd signals "

84 
	}
}

87 
	#DEBUG_LEVEL
 0

	)

89 
	$my_debug
–*
˘x
, 
Àvñ
, c⁄° *
°r
 )

91 if–
Àvñ
 < 
DEBUG_LEVEL
 )

93 
	`Ârötf
–(
FILE
 *Ë
˘x
, "%s", 
°r
 );

94 
	`fÊush
–(
FILE
 *Ë
˘x
 );

96 
	}
}

98 
	$maö
–
¨gc
, *
¨gv
[] )

100 
ªt
, 
Àn
, 
˙t
 = 0, 
pid
;

101 
li°í_fd
;

102 
˛õ¡_fd
 = -1;

103 
buf
[1024];

104 c⁄° *
≥rs
 = "ssl_fork_server";

106 
íå›y_c⁄ãxt
 
íå›y
;

107 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

108 
s¶_c⁄ãxt
 
s¶
;

109 
x509_¸t
 
§v˚π
;

110 
pk_c⁄ãxt
 
pkey
;

112 ((Ë
¨gc
);

113 ((Ë
¨gv
);

115 
	`mem£t
–&
s¶
, 0, (
s¶_c⁄ãxt
) );

117 
	`íå›y_öô
–&
íå›y
 );

118 
	`pk_öô
–&
pkey
 );

119 
	`x509_¸t_öô
–&
§v˚π
 );

121 
	`sig«l
–
SIGCHLD
, 
SIG_IGN
 );

126 
	`¥ötf
( "\n . Initial seeding ofÅheÑandom generator..." );

127 
	`fÊush
–
°dout
 );

129 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

130 (c⁄° *Ë
≥rs
,

131 
	`°æí
–
≥rs
 ) ) ) != 0 )

133 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed %d\n", 
ªt
 );

134 
exô
;

137 
	`¥ötf
( " ok\n" );

142 
	`¥ötf
( " . LoadingÅhe server cert.ánd key..." );

143 
	`fÊush
–
°dout
 );

150 
ªt
 = 
	`x509_¸t_∑r£
–&
§v˚π
, (c⁄° *Ë
ã°_§v_¸t
,

151 
	`°æí
–
ã°_§v_¸t
 ) );

152 if–
ªt
 != 0 )

154 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£Ñëu∫ed %d\n\n", 
ªt
 );

155 
exô
;

158 
ªt
 = 
	`x509_¸t_∑r£
–&
§v˚π
, (c⁄° *Ë
ã°_ˇ_li°
,

159 
	`°æí
–
ã°_ˇ_li°
 ) );

160 if–
ªt
 != 0 )

162 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£Ñëu∫ed %d\n\n", 
ªt
 );

163 
exô
;

166 
ªt
 = 
	`pk_∑r£_key
–&
pkey
, (c⁄° *Ë
ã°_§v_key
,

167 
	`°æí
–
ã°_§v_key
 ), 
NULL
, 0 );

168 if–
ªt
 != 0 )

170 
	`¥ötf
–" faûed\¿ !Ök_∑r£_keyÑëu∫ed %d\n\n", 
ªt
 );

171 
exô
;

174 
	`¥ötf
( " ok\n" );

179 
	`¥ötf
( " . Bind on https://localhost:4433/ ..." );

180 
	`fÊush
–
°dout
 );

182 if––
ªt
 = 
	`√t_böd
–&
li°í_fd
, 
NULL
, 4433 ) ) != 0 )

184 
	`¥ötf
–" faûed\¿ !Çë_bödÑëu∫ed %d\n\n", 
ªt
 );

185 
exô
;

188 
	`¥ötf
( " ok\n" );

195 
˛õ¡_fd
 = -1;

196 
	`mem£t
–&
s¶
, 0, ( ssl ) );

198 
	`¥ötf
( " . Waiting foráÑemote connection ..." );

199 
	`fÊush
–
°dout
 );

201 if––
ªt
 = 
	`√t_ac˚±
–
li°í_fd
, &
˛õ¡_fd
, 
NULL
 ) ) != 0 )

203 
	`¥ötf
–" faûed\¿ !Çë_ac˚±Ñëu∫ed %d\n\n", 
ªt
 );

204 
exô
;

207 
	`¥ötf
( " ok\n" );

213 
pid
 = 
	`f‹k
();

215 
	`¥ötf
( " . ForkingÅo handle connection ..." );

216 
	`fÊush
–
°dout
 );

218 if–
pid
 < 0 )

220 
	`¥ötf
(" faûed\¿ ! f‹kÑëu∫ed %d\n\n", 
pid
 );

221 
exô
;

224 
	`¥ötf
( " ok\n" );

226 if–
pid
 != 0 )

228 if––
ªt
 = 
	`˘r_drbg_ª£ed
–&
˘r_drbg
,

232 
	`¥ötf
–" faûed\¿ ! cå_drbg_ª£edÑëu∫ed %d\n", 
ªt
 );

233 
exô
;

236 
	`˛o£
–
˛õ¡_fd
 );

240 
	`˛o£
–
li°í_fd
 );

245 
	`¥ötf
( " . Setting upÅhe SSL data...." );

246 
	`fÊush
–
°dout
 );

248 if––
ªt
 = 
	`˘r_drbg_ª£ed
–&
˘r_drbg
,

252 
	`¥ötf
–" faûed\¿ ! cå_drbg_ª£edÑëu∫ed %d\n", 
ªt
 );

253 
exô
;

256 if––
ªt
 = 
	`s¶_öô
–&
s¶
 ) ) != 0 )

258 
	`¥ötf
–" faûed\¿ ! s¶_öôÑëu∫ed %d\n\n", 
ªt
 );

259 
exô
;

262 
	`¥ötf
( " ok\n" );

264 
	`s¶_£t_ídpoöt
–&
s¶
, 
SSL_IS_SERVER
 );

265 
	`s¶_£t_authmode
–&
s¶
, 
SSL_VERIFY_NONE
 );

267 
	`s¶_£t_∫g
–&
s¶
, 
˘r_drbg_øndom
, &
˘r_drbg
 );

268 
	`s¶_£t_dbg
–&
s¶
, 
my_debug
, 
°dout
 );

269 
	`s¶_£t_bio
–&
s¶
, 
√t_ªcv
, &
˛õ¡_fd
,

270 
√t_£nd
, &
˛õ¡_fd
 );

272 
	`s¶_£t_ˇ_chaö
–&
s¶
, 
§v˚π
.
√xt
, 
NULL
, NULL );

273 if––
ªt
 = 
	`s¶_£t_own_˚π
–&
s¶
, &
§v˚π
, &
pkey
 ) ) != 0 )

275 
	`¥ötf
–" faûed\¿ ! s¶_£t_own_˚πÑëu∫ed %d\n\n", 
ªt
 );

276 
exô
;

282 
	`¥ötf
( " . PerformingÅhe SSL/TLS handshake..." );

283 
	`fÊush
–
°dout
 );

285  ( 
ªt
 = 
	`s¶_h™dshake
–&
s¶
 ) ) != 0 )

287 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&Ñë !
POLARSSL_ERR_NET_WANT_WRITE
 )

289 
	`¥ötf
–" faûed\¿ ! s¶_h™dshakêªtu∫ed %d\n\n", 
ªt
 );

290 
exô
;

294 
	`¥ötf
( " ok\n" );

299 
	`¥ötf
( " < Read from client:" );

300 
	`fÊush
–
°dout
 );

304 
Àn
 = –
buf
 ) - 1;

305 
	`mem£t
–
buf
, 0, ( buf ) );

306 
ªt
 = 
	`s¶_ªad
–&
s¶
, 
buf
, 
Àn
 );

308 if–
ªt
 =
POLARSSL_ERR_NET_WANT_READ
 ||Ñë =
POLARSSL_ERR_NET_WANT_WRITE
 )

311 if–
ªt
 <= 0 )

313  
ªt
 )

315 
POLARSSL_ERR_SSL_PEER_CLOSE_NOTIFY
:

316 
	`¥ötf
( " connection was closed gracefully\n" );

319 
POLARSSL_ERR_NET_CONN_RESET
:

320 
	`¥ötf
( " connection wasÑeset byÖeer\n" );

324 
	`¥ötf
–" s¶_ªadÑëu∫ed %d\n", 
ªt
 );

331 
Àn
 = 
ªt
;

332 
	`¥ötf
–" %d byã†ªad\n\n%s", 
Àn
, (*Ë
buf
 );

339 
	`¥ötf
( " > WriteÅo client:" );

340 
	`fÊush
–
°dout
 );

342 
Àn
 = 
	`•rötf
–(*Ë
buf
, 
HTTP_RESPONSE
,

343 
	`s¶_gë_cùhîsuôe
–&
s¶
 ) );

345  
˙t
++ < 100 )

347  ( 
ªt
 = 
	`s¶_wrôe
–&
s¶
, 
buf
, 
Àn
 ) ) <= 0 )

349 if–
ªt
 =
POLARSSL_ERR_NET_CONN_RESET
 )

351 
	`¥ötf
( " failed\n !Öeer closedÅhe connection\n\n" );

352 
exô
;

355 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&Ñë !
POLARSSL_ERR_NET_WANT_WRITE
 )

357 
	`¥ötf
–" faûed\¿ ! s¶_wrôêªtu∫ed %d\n\n", 
ªt
 );

358 
exô
;

361 
Àn
 = 
ªt
;

362 
	`¥ötf
–" %d byã†wrôãn\n\n%s\n", 
Àn
, (*Ë
buf
 );

364 
	`m_¶ìp
( 1000 );

367 
	`s¶_˛o£_nŸify
–&
s¶
 );

368 
exô
;

371 
exô
:

373 if–
˛õ¡_fd
 != -1 )

374 
	`√t_˛o£
–
˛õ¡_fd
 );

376 
	`x509_¸t_‰ì
–&
§v˚π
 );

377 
	`pk_‰ì
–&
pkey
 );

378 
	`s¶_‰ì
–&
s¶
 );

379 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

380 
	`íå›y_‰ì
–&
íå›y
 );

382 #i‡
	`deföed
(
_WIN32
)

383 
	`¥ötf
( " Press EnterÅoÉxitÅhisÖrogram.\n" );

384 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

387 –
ªt
 );

388 
	}
}

390 
	gPOLARSSL_SSL_TLS_C
 && 
	gPOLARSSL_SSL_SRV_C
 && 
	gPOLARSSL_NET_C
 &&

391 
	gPOLARSSL_RSA_C
 && 
	gPOLARSSL_CTR_DRBG_C
 */

	@polarssl/programs/ssl/ssl_mail_client.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dlib.h
>

34 
	~<°dio.h
>

36 #i‡!
deföed
(
_MSC_VER
Ë|| deföed(
EFIX64
Ë|| deföed(
EFI32
)

37 
	~<uni°d.h
>

39 
	~<io.h
>

40 
	#ªad
 
_ªad


	)

41 
	#wrôe
 
_wrôe


	)

44 #i‡
deföed
(
_WIN32
Ë|| deföed(
_WIN32_WCE
)

46 
	~<wösock2.h
>

47 
	~<wödows.h
>

49 #i‡
deföed
(
_MSC_VER
)

50 #i‡
deföed
(
_WIN32_WCE
)

51 #¥agm®
commít
–
lib
, "ws2.lib" )

53 #¥agm®
commít
–
lib
, "ws2_32.lib" )

58 
	~"pﬁ¨s¶/ba£64.h
"

59 
	~"pﬁ¨s¶/îr‹.h
"

60 
	~"pﬁ¨s¶/√t.h
"

61 
	~"pﬁ¨s¶/s¶.h
"

62 
	~"pﬁ¨s¶/íå›y.h
"

63 
	~"pﬁ¨s¶/˘r_drbg.h
"

64 
	~"pﬁ¨s¶/˚πs.h
"

65 
	~"pﬁ¨s¶/x509.h
"

67 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_ENTROPY_C
) || \

68 !
deföed
(
POLARSSL_SSL_TLS_C
Ë|| !deföed(
POLARSSL_SSL_CLI_C
) || \

69 !
deföed
(
POLARSSL_NET_C
Ë|| !deföed(
POLARSSL_RSA_C
) || \

70 !
deföed
(
POLARSSL_CTR_DRBG_C
Ë|| !
	$deföed
(
POLARSSL_X509_CRT_PARSE_C
)

71 
	$maö
–
¨gc
, *
¨gv
[] )

73 ((Ë
¨gc
);

74 ((Ë
¨gv
);

76 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_ENTROPY_Cánd/or "

82 
	}
}

85 
	#DFL_SERVER_NAME
 "loˇlho°"

	)

86 
	#DFL_SERVER_PORT
 465

	)

87 
	#DFL_USER_NAME
 "u£r"

	)

88 
	#DFL_USER_PWD
 "∑ssw‹d"

	)

89 
	#DFL_MAIL_FROM
 ""

	)

90 
	#DFL_MAIL_TO
 ""

	)

91 
	#DFL_DEBUG_LEVEL
 0

	)

92 
	#DFL_CA_FILE
 ""

	)

93 
	#DFL_CRT_FILE
 ""

	)

94 
	#DFL_KEY_FILE
 ""

	)

95 
	#DFL_FORCE_CIPHER
 0

	)

96 
	#DFL_MODE
 0

	)

97 
	#DFL_AUTHENTICATION
 0

	)

99 
	#MODE_SSL_TLS
 0

	)

100 
	#MODE_STARTTLS
 0

	)

105 
	s›ti⁄s


107 c⁄° *
	m£rvî_«me
;

108 
	m£rvî_p‹t
;

109 
	mdebug_Àvñ
;

110 
	mauthítiˇti⁄
;

111 
	mmode
;

112 c⁄° *
	mu£r_«me
;

113 c⁄° *
	mu£r_pwd
;

114 c⁄° *
	mmaû_‰om
;

115 c⁄° *
	mmaû_to
;

116 c⁄° *
	mˇ_fûe
;

117 c⁄° *
	m¸t_fûe
;

118 c⁄° *
	mkey_fûe
;

119 
	mf‹˚_cùhîsuôe
[2];

120 } 
	g›t
;

122 
	$my_debug
–*
˘x
, 
Àvñ
, c⁄° *
°r
 )

124 if–
Àvñ
 < 
›t
.
debug_Àvñ
 )

126 
	`Ârötf
–(
FILE
 *Ë
˘x
, "%s", 
°r
 );

127 
	`fÊush
–(
FILE
 *Ë
˘x
 );

129 
	}
}

131 
	$do_h™dshake
–
s¶_c⁄ãxt
 *
s¶
, 
›ti⁄s
 *
›t
 )

133 
ªt
;

134 
buf
[1024];

135 
	`mem£t
(
buf
, 0, 1024);

140 
	`¥ötf
( " . PerformingÅhe SSL/TLS handshake..." );

141 
	`fÊush
–
°dout
 );

143  ( 
ªt
 = 
	`s¶_h™dshake
–
s¶
 ) ) != 0 )

145 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&Ñë !
POLARSSL_ERR_NET_WANT_WRITE
 )

147 #i‡
	`deföed
(
POLARSSL_ERROR_C
)

148 
	`pﬁ¨s¶_°ªº‹
–
ªt
, (*Ë
buf
, 1024 );

150 
	`¥ötf
–" faûed\¿ ! s¶_h™dshakêªtu∫ed %d: %s\n\n", 
ªt
, 
buf
 );

155 
	`¥ötf
( " ok\n [ Ciphersuite is %s ]\n",

156 
	`s¶_gë_cùhîsuôe
–
s¶
 ) );

161 
	`¥ötf
( " . VerifyingÖeer X.509 certificate..." );

164 if––
ªt
 = 
	`s¶_gë_vîify_ªsu…
–
s¶
 ) ) != 0 )

166 
	`¥ötf
( " failed\n" );

168 if––
ªt
 & 
BADCERT_EXPIRED
 ) != 0 )

169 
	`¥ötf
( " ! server certificate hasÉxpired\n" );

171 if––
ªt
 & 
BADCERT_REVOKED
 ) != 0 )

172 
	`¥ötf
( " ! server certificate has beenÑevoked\n" );

174 if––
ªt
 & 
BADCERT_CN_MISMATCH
 ) != 0 )

175 
	`¥ötf
–" ! CN mism©ch (ex≥˘ed CN=%s)\n", 
›t
->
£rvî_«me
 );

177 if––
ªt
 & 
BADCERT_NOT_TRUSTED
 ) != 0 )

178 
	`¥ötf
( " ! self-signed orÇot signed byáÅrusted CA\n" );

180 
	`¥ötf
( "\n" );

183 
	`¥ötf
( " ok\n" );

185 
	`¥ötf
( " . Peer certificate information ...\n" );

186 
	`x509_¸t_öfo
–(*Ë
buf
, ( buf ) - 1, " ",

187 
	`s¶_gë_≥î_˚π
–
s¶
 ) );

188 
	`¥ötf
–"%s\n", 
buf
 );

191 
	}
}

193 
	$wrôe_s¶_d©a
–
s¶_c⁄ãxt
 *
s¶
, *
buf
, 
size_t
 
Àn
 )

195 
ªt
;

197 
	`¥ötf
("\n%s", 
buf
);

198  
Àn
 && ( 
ªt
 = 
	`s¶_wrôe
–
s¶
, 
buf
,Üen ) ) <= 0 )

200 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&Ñë !
POLARSSL_ERR_NET_WANT_WRITE
 )

202 
	`¥ötf
–" faûed\¿ ! s¶_wrôêªtu∫ed %d\n\n", 
ªt
 );

208 
	}
}

210 
	$wrôe_s¶_™d_gë_ª•⁄£
–
s¶_c⁄ãxt
 *
s¶
, *
buf
, 
size_t
 
Àn
 )

212 
ªt
;

213 
d©a
[128];

214 
code
[4];

215 
size_t
 
i
, 
idx
 = 0;

217 
	`¥ötf
("\n%s", 
buf
);

218  
Àn
 && ( 
ªt
 = 
	`s¶_wrôe
–
s¶
, 
buf
,Üen ) ) <= 0 )

220 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&Ñë !
POLARSSL_ERR_NET_WANT_WRITE
 )

222 
	`¥ötf
–" faûed\¿ ! s¶_wrôêªtu∫ed %d\n\n", 
ªt
 );

229 
Àn
 = –
d©a
 ) - 1;

230 
	`mem£t
–
d©a
, 0, ( data ) );

231 
ªt
 = 
	`s¶_ªad
–
s¶
, 
d©a
, 
Àn
 );

233 if–
ªt
 =
POLARSSL_ERR_NET_WANT_READ
 ||Ñë =
POLARSSL_ERR_NET_WANT_WRITE
 )

236 if–
ªt
 =
POLARSSL_ERR_SSL_PEER_CLOSE_NOTIFY
 )

239 if–
ªt
 <= 0 )

241 
	`¥ötf
–"Áûed\¿ ! s¶_ªadÑëu∫ed %d\n\n", 
ªt
 );

245 
	`¥ötf
("\n%s", 
d©a
);

246 
Àn
 = 
ªt
;

247  
i
 = 0; i < 
Àn
; i++ )

249 if–
d©a
[
i
] != '\n' )

251 if–
idx
 < 4 )

252 
code
[ 
idx
++ ] = 
d©a
[
i
];

256 if–
idx
 =4 && 
code
[0] >= '0' && code[0] <= '9' && code[3] == ' ' )

258 
code
[3] = '\0';

259  
	`©oi
–
code
 );

262 
idx
 = 0;

266 
	}
}

268 
	$wrôe_™d_gë_ª•⁄£
–
sock_fd
, *
buf
, 
size_t
 
Àn
 )

270 
ªt
;

271 
d©a
[128];

272 
code
[4];

273 
size_t
 
i
, 
idx
 = 0;

275 
	`¥ötf
("\n%s", 
buf
);

276 if–
Àn
 && ( 
ªt
 = 
	`wrôe
–
sock_fd
, 
buf
,Üen ) ) <= 0 )

278 
	`¥ötf
–" faûed\¿ ! s¶_wrôêªtu∫ed %d\n\n", 
ªt
 );

284 
Àn
 = –
d©a
 ) - 1;

285 
	`mem£t
–
d©a
, 0, ( data ) );

286 
ªt
 = 
	`ªad
–
sock_fd
, 
d©a
, 
Àn
 );

288 if–
ªt
 <= 0 )

290 
	`¥ötf
–"Áûed\¿ !ÑódÑëu∫ed %d\n\n", 
ªt
 );

294 
d©a
[
Àn
] = '\0';

295 
	`¥ötf
("\n%s", 
d©a
);

296 
Àn
 = 
ªt
;

297  
i
 = 0; i < 
Àn
; i++ )

299 if–
d©a
[
i
] != '\n' )

301 if–
idx
 < 4 )

302 
code
[ 
idx
++ ] = 
d©a
[
i
];

306 if–
idx
 =4 && 
code
[0] >= '0' && code[0] <= '9' && code[3] == ' ' )

308 
code
[3] = '\0';

309  
	`©oi
–
code
 );

312 
idx
 = 0;

316 
	}
}

318 #i‡
deföed
(
POLARSSL_BASE64_C
)

319 
	#USAGE_AUTH
 \

322 " u£r_pwd=%%† deÁu…: \"∑ssw‹d\"\n"

	)

324 
	#USAGE_AUTH
 \

325 "áuthítiˇti⁄ o±i⁄†dißbÀd. (RequúêPOLARSSL_BASE64_C)\n"

	)

328 #i‡
deföed
(
POLARSSL_FS_IO
)

329 
	#USAGE_IO
 \

332 " key_fûe=%%† deÁu…: \"\" (¥e-lﬂded)\n"

	)

334 
	#USAGE_IO
 \

335 " Nÿfûê›î©i⁄†avaûabÀ (POLARSSL_FS_IOÇŸ deföed)\n"

	)

338 
	#USAGE
 \

345 
USAGE_AUTH
 \

348 
USAGE_IO
 \

350 "ác˚±abÀ cùhîsuôê«mes:\n"

	)

352 
	$maö
–
¨gc
, *
¨gv
[] )

354 
ªt
 = 0, 
Àn
, 
£rvî_fd
;

355 
buf
[1024];

356 #i‡
	`deföed
(
POLARSSL_BASE64_C
)

357 
ba£
[1024];

359 
ho°«me
[32];

360 c⁄° *
≥rs
 = "ssl_mail_client";

362 
íå›y_c⁄ãxt
 
íå›y
;

363 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

364 
s¶_c⁄ãxt
 
s¶
;

365 
x509_¸t
 
ˇ˚π
;

366 
x509_¸t
 
˛i˚π
;

367 
pk_c⁄ãxt
 
pkey
;

368 
i
;

369 
size_t
 
n
;

370 *
p
, *
q
;

371 c⁄° *
li°
;

376 
£rvî_fd
 = 0;

377 
	`mem£t
–&
s¶
, 0, –
s¶_c⁄ãxt
 ) );

378 
	`x509_¸t_öô
–&
ˇ˚π
 );

379 
	`x509_¸t_öô
–&
˛i˚π
 );

380 
	`pk_öô
–&
pkey
 );

382 if–
¨gc
 == 0 )

384 
ußge
:

385 
	`¥ötf
–
USAGE
 );

387 
li°
 = 
	`s¶_li°_cùhîsuôes
();

388  *
li°
 )

390 
	`¥ötf
(" %s\n", 
	`s¶_gë_cùhîsuôe_«me
–*
li°
 ) );

391 
li°
++;

393 
	`¥ötf
("\n");

394 
exô
;

397 
›t
.
£rvî_«me
 = 
DFL_SERVER_NAME
;

398 
›t
.
£rvî_p‹t
 = 
DFL_SERVER_PORT
;

399 
›t
.
debug_Àvñ
 = 
DFL_DEBUG_LEVEL
;

400 
›t
.
authítiˇti⁄
 = 
DFL_AUTHENTICATION
;

401 
›t
.
mode
 = 
DFL_MODE
;

402 
›t
.
u£r_«me
 = 
DFL_USER_NAME
;

403 
›t
.
u£r_pwd
 = 
DFL_USER_PWD
;

404 
›t
.
maû_‰om
 = 
DFL_MAIL_FROM
;

405 
›t
.
maû_to
 = 
DFL_MAIL_TO
;

406 
›t
.
ˇ_fûe
 = 
DFL_CA_FILE
;

407 
›t
.
¸t_fûe
 = 
DFL_CRT_FILE
;

408 
›t
.
key_fûe
 = 
DFL_KEY_FILE
;

409 
›t
.
f‹˚_cùhîsuôe
[0]
DFL_FORCE_CIPHER
;

411  
i
 = 1; i < 
¨gc
; i++ )

413 
p
 = 
¨gv
[
i
];

414 if––
q
 = 
	`°rchr
–
p
, '=' ) ) =
NULL
 )

415 
ußge
;

416 *
q
++ = '\0';

418 if–
	`°rcmp
–
p
, "server_name" ) == 0 )

419 
›t
.
£rvî_«me
 = 
q
;

420 if–
	`°rcmp
–
p
, "server_port" ) == 0 )

422 
›t
.
£rvî_p‹t
 = 
	`©oi
–
q
 );

423 if–
›t
.
£rvî_p‹t
 < 1 || opt.server_port > 65535 )

424 
ußge
;

426 if–
	`°rcmp
–
p
, "debug_level" ) == 0 )

428 
›t
.
debug_Àvñ
 = 
	`©oi
–
q
 );

429 if–
›t
.
debug_Àvñ
 < 0 || opt.debug_level > 65535 )

430 
ußge
;

432 if–
	`°rcmp
–
p
, "authentication" ) == 0 )

434 
›t
.
authítiˇti⁄
 = 
	`©oi
–
q
 );

435 if–
›t
.
authítiˇti⁄
 < 0 || opt.authentication > 1 )

436 
ußge
;

438 if–
	`°rcmp
–
p
, "mode" ) == 0 )

440 
›t
.
mode
 = 
	`©oi
–
q
 );

441 if–
›t
.
mode
 < 0 || opt.mode > 1 )

442 
ußge
;

444 if–
	`°rcmp
–
p
, "user_name" ) == 0 )

445 
›t
.
u£r_«me
 = 
q
;

446 if–
	`°rcmp
–
p
, "user_pwd" ) == 0 )

447 
›t
.
u£r_pwd
 = 
q
;

448 if–
	`°rcmp
–
p
, "mail_from" ) == 0 )

449 
›t
.
maû_‰om
 = 
q
;

450 if–
	`°rcmp
–
p
, "mail_to" ) == 0 )

451 
›t
.
maû_to
 = 
q
;

452 if–
	`°rcmp
–
p
, "ca_file" ) == 0 )

453 
›t
.
ˇ_fûe
 = 
q
;

454 if–
	`°rcmp
–
p
, "crt_file" ) == 0 )

455 
›t
.
¸t_fûe
 = 
q
;

456 if–
	`°rcmp
–
p
, "key_file" ) == 0 )

457 
›t
.
key_fûe
 = 
q
;

458 if–
	`°rcmp
–
p
, "force_ciphersuite" ) == 0 )

460 
›t
.
f‹˚_cùhîsuôe
[0] = -1;

462 
›t
.
f‹˚_cùhîsuôe
[0] = 
	`s¶_gë_cùhîsuôe_id
–
q
 );

464 if–
›t
.
f‹˚_cùhîsuôe
[0] <= 0 )

465 
ußge
;

467 
›t
.
f‹˚_cùhîsuôe
[1] = 0;

470 
ußge
;

476 
	`¥ötf
( "\n . SeedingÅheÑandomÇumber generator..." );

477 
	`fÊush
–
°dout
 );

479 
	`íå›y_öô
–&
íå›y
 );

480 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

481 (c⁄° *Ë
≥rs
,

482 
	`°æí
–
≥rs
 ) ) ) != 0 )

484 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed %d\n", 
ªt
 );

485 
exô
;

488 
	`¥ötf
( " ok\n" );

493 
	`¥ötf
( " . LoadingÅhe CAÑoot certificate ..." );

494 
	`fÊush
–
°dout
 );

496 #i‡
	`deföed
(
POLARSSL_FS_IO
)

497 if–
	`°æí
–
›t
.
ˇ_fûe
 ) )

498 
ªt
 = 
	`x509_¸t_∑r£_fûe
–&
ˇ˚π
, 
›t
.
ˇ_fûe
 );

501 #i‡
	`deföed
(
POLARSSL_CERTS_C
)

502 
ªt
 = 
	`x509_¸t_∑r£
–&
ˇ˚π
, (c⁄° *Ë
ã°_ˇ_li°
,

503 
	`°æí
–
ã°_ˇ_li°
 ) );

506 
ªt
 = 1;

507 
	`¥ötf
("POLARSSL_CERTS_CÇot defined.");

510 if–
ªt
 < 0 )

512 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£Ñëu∫ed %d\n\n", 
ªt
 );

513 
exô
;

516 
	`¥ötf
–" ok (%d skù≥d)\n", 
ªt
 );

523 
	`¥ötf
( " . LoadingÅhe client cert.ánd key..." );

524 
	`fÊush
–
°dout
 );

526 #i‡
	`deföed
(
POLARSSL_FS_IO
)

527 if–
	`°æí
–
›t
.
¸t_fûe
 ) )

528 
ªt
 = 
	`x509_¸t_∑r£_fûe
–&
˛i˚π
, 
›t
.
¸t_fûe
 );

531 #i‡
	`deföed
(
POLARSSL_CERTS_C
)

532 
ªt
 = 
	`x509_¸t_∑r£
–&
˛i˚π
, (c⁄° *Ë
ã°_˛i_¸t
,

533 
	`°æí
–
ã°_˛i_¸t
 ) );

536 
ªt
 = -1;

537 
	`¥ötf
("POLARSSL_CERTS_CÇot defined.");

540 if–
ªt
 != 0 )

542 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£Ñëu∫ed %d\n\n", 
ªt
 );

543 
exô
;

546 #i‡
	`deföed
(
POLARSSL_FS_IO
)

547 if–
	`°æí
–
›t
.
key_fûe
 ) )

548 
ªt
 = 
	`pk_∑r£_keyfûe
–&
pkey
, 
›t
.
key_fûe
, "" );

551 #i‡
	`deföed
(
POLARSSL_CERTS_C
)

552 
ªt
 = 
	`pk_∑r£_key
–&
pkey
, (c⁄° *Ë
ã°_˛i_key
,

553 
	`°æí
–
ã°_˛i_key
 ), 
NULL
, 0 );

556 
ªt
 = -1;

557 
	`¥ötf
("POLARSSL_CERTS_CÇot defined.");

560 if–
ªt
 != 0 )

562 
	`¥ötf
–" faûed\¿ !Ök_∑r£_keyÑëu∫ed %d\n\n", 
ªt
 );

563 
exô
;

566 
	`¥ötf
( " ok\n" );

571 
	`¥ötf
–" . C⁄√˘ögÅÿt˝/%s/%-4d...", 
›t
.
£rvî_«me
,

572 
›t
.
£rvî_p‹t
 );

573 
	`fÊush
–
°dout
 );

575 if––
ªt
 = 
	`√t_c⁄√˘
–&
£rvî_fd
, 
›t
.
£rvî_«me
,

576 
›t
.
£rvî_p‹t
 ) ) != 0 )

578 
	`¥ötf
–" faûed\¿ !Çë_c⁄√˘Ñëu∫ed %d\n\n", 
ªt
 );

579 
exô
;

582 
	`¥ötf
( " ok\n" );

587 
	`¥ötf
( " . Setting upÅhe SSL/TLS structure..." );

588 
	`fÊush
–
°dout
 );

590 if––
ªt
 = 
	`s¶_öô
–&
s¶
 ) ) != 0 )

592 
	`¥ötf
–" faûed\¿ ! s¶_öôÑëu∫ed %d\n\n", 
ªt
 );

593 
exô
;

596 
	`¥ötf
( " ok\n" );

598 
	`s¶_£t_ídpoöt
–&
s¶
, 
SSL_IS_CLIENT
 );

601 
	`s¶_£t_authmode
–&
s¶
, 
SSL_VERIFY_OPTIONAL
 );

603 
	`s¶_£t_∫g
–&
s¶
, 
˘r_drbg_øndom
, &
˘r_drbg
 );

604 
	`s¶_£t_dbg
–&
s¶
, 
my_debug
, 
°dout
 );

605 
	`s¶_£t_bio
–&
s¶
, 
√t_ªcv
, &
£rvî_fd
,

606 
√t_£nd
, &
£rvî_fd
 );

608 if–
›t
.
f‹˚_cùhîsuôe
[0] !
DFL_FORCE_CIPHER
 )

609 
	`s¶_£t_cùhîsuôes
–&
s¶
, 
›t
.
f‹˚_cùhîsuôe
 );

611 
	`s¶_£t_ˇ_chaö
–&
s¶
, &
ˇ˚π
, 
NULL
, 
›t
.
£rvî_«me
 );

612 if––
ªt
 = 
	`s¶_£t_own_˚π
–&
s¶
, &
˛i˚π
, &
pkey
 ) ) != 0 )

614 
	`¥ötf
–" faûed\¿ ! s¶_£t_own_˚πÑëu∫ed %d\n\n", 
ªt
 );

615 
exô
;

618 #i‡
	`deföed
(
POLARSSL_SSL_SERVER_NAME_INDICATION
)

619 if––
ªt
 = 
	`s¶_£t_ho°«me
–&
s¶
, 
›t
.
£rvî_«me
 ) ) != 0 )

621 
	`¥ötf
–" faûed\¿ ! s¶_£t_ho°«mêªtu∫ed %d\n\n", 
ªt
 );

622 
exô
;

626 if–
›t
.
mode
 =
MODE_SSL_TLS
 )

628 if–
	`do_h™dshake
–&
s¶
, &
›t
 ) != 0 )

629 
exô
;

631 
	`¥ötf
( " > Get header from server:" );

632 
	`fÊush
–
°dout
 );

634 
ªt
 = 
	`wrôe_s¶_™d_gë_ª•⁄£
–&
s¶
, 
buf
, 0 );

635 if–
ªt
 < 200 ||Ñet > 299 )

637 
	`¥ötf
–" faûed\¿ ! sîvîÑe•⁄ded wôh %d\n\n", 
ªt
 );

638 
exô
;

641 
	`¥ötf
(" ok\n" );

643 
	`¥ötf
( " > Write EHLOÅo server:" );

644 
	`fÊush
–
°dout
 );

646 
	`gëho°«me
–
ho°«me
, 32 );

647 
Àn
 = 
	`•rötf
–(*Ë
buf
, "EHLO %s\r\n", 
ho°«me
 );

648 
ªt
 = 
	`wrôe_s¶_™d_gë_ª•⁄£
–&
s¶
, 
buf
, 
Àn
 );

649 if–
ªt
 < 200 ||Ñet > 299 )

651 
	`¥ötf
–" faûed\¿ ! sîvîÑe•⁄ded wôh %d\n\n", 
ªt
 );

652 
exô
;

657 
	`¥ötf
( " > Get header from server:" );

658 
	`fÊush
–
°dout
 );

660 
ªt
 = 
	`wrôe_™d_gë_ª•⁄£
–
£rvî_fd
, 
buf
, 0 );

661 if–
ªt
 < 200 ||Ñet > 299 )

663 
	`¥ötf
–" faûed\¿ ! sîvîÑe•⁄ded wôh %d\n\n", 
ªt
 );

664 
exô
;

667 
	`¥ötf
(" ok\n" );

669 
	`¥ötf
( " > Write EHLOÅo server:" );

670 
	`fÊush
–
°dout
 );

672 
	`gëho°«me
–
ho°«me
, 32 );

673 
Àn
 = 
	`•rötf
–(*Ë
buf
, "EHLO %s\r\n", 
ho°«me
 );

674 
ªt
 = 
	`wrôe_™d_gë_ª•⁄£
–
£rvî_fd
, 
buf
, 
Àn
 );

675 if–
ªt
 < 200 ||Ñet > 299 )

677 
	`¥ötf
–" faûed\¿ ! sîvîÑe•⁄ded wôh %d\n\n", 
ªt
 );

678 
exô
;

681 
	`¥ötf
(" ok\n" );

683 
	`¥ötf
( " > Write STARTTLSÅo server:" );

684 
	`fÊush
–
°dout
 );

686 
	`gëho°«me
–
ho°«me
, 32 );

687 
Àn
 = 
	`•rötf
–(*Ë
buf
, "STARTTLS\r\n" );

688 
ªt
 = 
	`wrôe_™d_gë_ª•⁄£
–
£rvî_fd
, 
buf
, 
Àn
 );

689 if–
ªt
 < 200 ||Ñet > 299 )

691 
	`¥ötf
–" faûed\¿ ! sîvîÑe•⁄ded wôh %d\n\n", 
ªt
 );

692 
exô
;

695 
	`¥ötf
(" ok\n" );

697 if–
	`do_h™dshake
–&
s¶
, &
›t
 ) != 0 )

698 
exô
;

701 #i‡
	`deföed
(
POLARSSL_BASE64_C
)

702 if–
›t
.
authítiˇti⁄
 )

704 
	`¥ötf
( " > Write AUTH LOGINÅo server:" );

705 
	`fÊush
–
°dout
 );

707 
Àn
 = 
	`•rötf
–(*Ë
buf
, "AUTH LOGIN\r\n" );

708 
ªt
 = 
	`wrôe_s¶_™d_gë_ª•⁄£
–&
s¶
, 
buf
, 
Àn
 );

709 if–
ªt
 < 200 ||Ñet > 399 )

711 
	`¥ötf
–" faûed\¿ ! sîvîÑe•⁄ded wôh %d\n\n", 
ªt
 );

712 
exô
;

715 
	`¥ötf
(" ok\n" );

717 
	`¥ötf
–" > Wrôêu£∫amêtÿ£rvî: %s", 
›t
.
u£r_«me
 );

718 
	`fÊush
–
°dout
 );

720 
n
 = –
buf
 );

721 
Àn
 = 
	`ba£64_ícode
–
ba£
, &
n
, (c⁄° *Ë
›t
.
u£r_«me
,

722 
	`°æí
–
›t
.
u£r_«me
 ) );

723 
Àn
 = 
	`•rötf
–(*Ë
buf
, "%s\r\n", 
ba£
 );

724 
ªt
 = 
	`wrôe_s¶_™d_gë_ª•⁄£
–&
s¶
, 
buf
, 
Àn
 );

725 if–
ªt
 < 300 ||Ñet > 399 )

727 
	`¥ötf
–" faûed\¿ ! sîvîÑe•⁄ded wôh %d\n\n", 
ªt
 );

728 
exô
;

731 
	`¥ötf
(" ok\n" );

733 
	`¥ötf
–" > Wrôê∑ssw‹dÅÿ£rvî: %s", 
›t
.
u£r_pwd
 );

734 
	`fÊush
–
°dout
 );

736 
Àn
 = 
	`ba£64_ícode
–
ba£
, &
n
, (c⁄° *Ë
›t
.
u£r_pwd
,

737 
	`°æí
–
›t
.
u£r_pwd
 ) );

738 
Àn
 = 
	`•rötf
–(*Ë
buf
, "%s\r\n", 
ba£
 );

739 
ªt
 = 
	`wrôe_s¶_™d_gë_ª•⁄£
–&
s¶
, 
buf
, 
Àn
 );

740 if–
ªt
 < 200 ||Ñet > 399 )

742 
	`¥ötf
–" faûed\¿ ! sîvîÑe•⁄ded wôh %d\n\n", 
ªt
 );

743 
exô
;

746 
	`¥ötf
(" ok\n" );

750 
	`¥ötf
( " > Write MAIL FROMÅo server:" );

751 
	`fÊush
–
°dout
 );

753 
Àn
 = 
	`•rötf
–(*Ë
buf
, "MAIL FROM:<%s>\r\n", 
›t
.
maû_‰om
 );

754 
ªt
 = 
	`wrôe_s¶_™d_gë_ª•⁄£
–&
s¶
, 
buf
, 
Àn
 );

755 if–
ªt
 < 200 ||Ñet > 299 )

757 
	`¥ötf
–" faûed\¿ ! sîvîÑe•⁄ded wôh %d\n\n", 
ªt
 );

758 
exô
;

761 
	`¥ötf
(" ok\n" );

763 
	`¥ötf
( " > Write RCPT TOÅo server:" );

764 
	`fÊush
–
°dout
 );

766 
Àn
 = 
	`•rötf
–(*Ë
buf
, "RCPT TO:<%s>\r\n", 
›t
.
maû_to
 );

767 
ªt
 = 
	`wrôe_s¶_™d_gë_ª•⁄£
–&
s¶
, 
buf
, 
Àn
 );

768 if–
ªt
 < 200 ||Ñet > 299 )

770 
	`¥ötf
–" faûed\¿ ! sîvîÑe•⁄ded wôh %d\n\n", 
ªt
 );

771 
exô
;

774 
	`¥ötf
(" ok\n" );

776 
	`¥ötf
( " > Write DATAÅo server:" );

777 
	`fÊush
–
°dout
 );

779 
Àn
 = 
	`•rötf
–(*Ë
buf
, "DATA\r\n" );

780 
ªt
 = 
	`wrôe_s¶_™d_gë_ª•⁄£
–&
s¶
, 
buf
, 
Àn
 );

781 if–
ªt
 < 300 ||Ñet > 399 )

783 
	`¥ötf
–" faûed\¿ ! sîvîÑe•⁄ded wôh %d\n\n", 
ªt
 );

784 
exô
;

787 
	`¥ötf
(" ok\n" );

789 
	`¥ötf
( " > Write contentÅo server:" );

790 
	`fÊush
–
°dout
 );

792 
Àn
 = 
	`•rötf
–(*Ë
buf
, "From: %s\r\nSubject: PolarSSL Test mail\r\n\r\n"

796 "Enjoy!", 
›t
.
maû_‰om
 );

797 
ªt
 = 
	`wrôe_s¶_d©a
–&
s¶
, 
buf
, 
Àn
 );

799 
Àn
 = 
	`•rötf
–(*Ë
buf
, "\r\n.\r\n");

800 
ªt
 = 
	`wrôe_s¶_™d_gë_ª•⁄£
–&
s¶
, 
buf
, 
Àn
 );

801 if–
ªt
 < 200 ||Ñet > 299 )

803 
	`¥ötf
–" faûed\¿ ! sîvîÑe•⁄ded wôh %d\n\n", 
ªt
 );

804 
exô
;

807 
	`¥ötf
(" ok\n" );

809 
	`s¶_˛o£_nŸify
–&
s¶
 );

811 
exô
:

813 if–
£rvî_fd
 )

814 
	`√t_˛o£
–
£rvî_fd
 );

815 
	`x509_¸t_‰ì
–&
˛i˚π
 );

816 
	`x509_¸t_‰ì
–&
ˇ˚π
 );

817 
	`pk_‰ì
–&
pkey
 );

818 
	`s¶_‰ì
–&
s¶
 );

819 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

820 
	`íå›y_‰ì
–&
íå›y
 );

822 #i‡
	`deföed
(
_WIN32
)

823 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

824 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

827 –
ªt
 );

828 
	}
}

830 
	gPOLARSSL_SSL_CLI_C
 && 
	gPOLARSSL_NET_C
 && 
POLARSSL_RSA_C
 **

831 
	gPOLARSSL_CTR_DRBG_C
 */

	@polarssl/programs/ssl/ssl_pthread_server.c

27 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

28 
	~"pﬁ¨s¶/c⁄fig.h
"

30 #ö˛udê
POLARSSL_CONFIG_FILE


33 #i‡
deföed
(
_WIN32
)

34 
	~<wödows.h
>

37 
	~<°rög.h
>

38 
	~<°dlib.h
>

39 
	~<°dio.h
>

41 
	~"pﬁ¨s¶/íå›y.h
"

42 
	~"pﬁ¨s¶/˘r_drbg.h
"

43 
	~"pﬁ¨s¶/˚πs.h
"

44 
	~"pﬁ¨s¶/x509.h
"

45 
	~"pﬁ¨s¶/s¶.h
"

46 
	~"pﬁ¨s¶/√t.h
"

47 
	~"pﬁ¨s¶/îr‹.h
"

49 #i‡
deföed
(
POLARSSL_SSL_CACHE_C
)

50 
	~"pﬁ¨s¶/s¶_ˇche.h
"

53 #i‡
deföed
(
POLARSSL_MEMORY_BUFFER_ALLOC_C
)

54 
	~"pﬁ¨s¶/mem‹y.h
"

57 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_CERTS_C
) || \

58 !
deföed
(
POLARSSL_ENTROPY_C
Ë|| !deföed(
POLARSSL_SSL_TLS_C
) || \

59 !
deföed
(
POLARSSL_SSL_SRV_C
Ë|| !deföed(
POLARSSL_NET_C
) || \

60 !
deföed
(
POLARSSL_RSA_C
Ë|| !deföed(
POLARSSL_CTR_DRBG_C
) || \

61 !
deföed
(
POLARSSL_X509_CRT_PARSE_C
) || \

62 !
deföed
(
POLARSSL_THREADING_C
Ë|| !
	$deföed
(
POLARSSL_THREADING_PTHREAD
)

63 
	$maö
–
¨gc
, *
¨gv
[] )

65 ((Ë
¨gc
);

66 ((Ë
¨gv
);

68 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_CERTS_Cánd/or POLARSSL_ENTROPY_C "

75 
	}
}

78 
	#HTTP_RESPONSE
 \

81 "<p>Suc˚ssfu»c⁄√˘i⁄ usög: %s</p>\r\n"

	)

83 
	#DEBUG_LEVEL
 0

	)

85 
thªadög_muãx_t
 
	gdebug_muãx
;

87 
	$my_muãxed_debug
–*
˘x
, 
Àvñ
, c⁄° *
°r
 )

89 
	`pﬁ¨s¶_muãx_lock
–&
debug_muãx
 );

90 if–
Àvñ
 < 
DEBUG_LEVEL
 )

92 
	`Ârötf
–(
FILE
 *Ë
˘x
, "%s", 
°r
 );

93 
	`fÊush
–(
FILE
 *Ë
˘x
 );

95 
	`pﬁ¨s¶_muãx_u∆ock
–&
debug_muãx
 );

96 
	}
}

99 
	m˛õ¡_fd
;

100 
	mthªad_com∂ëe
;

101 
íå›y_c⁄ãxt
 *
	míå›y
;

102 #i‡
deföed
(
POLARSSL_SSL_CACHE_C
)

103 
s¶_ˇche_c⁄ãxt
 *
	mˇche
;

105 
x509_¸t
 *
	mˇ_chaö
;

106 
x509_¸t
 *
	m£rvî_˚π
;

107 
pk_c⁄ãxt
 *
	m£rvî_key
;

108 } 
	tthªad_öfo_t
;

111 
	ma˘ive
;

112 
thªad_öfo_t
 
	md©a
;

113 
±hªad_t
 
	mthªad
;

114 } 
	t±hªad_öfo_t
;

116 
	#MAX_NUM_THREADS
 5

	)

118 
thªad_öfo_t
 
	gba£_öfo
;

119 
±hªad_öfo_t
 
	gthªads
[
MAX_NUM_THREADS
];

121 *
	$h™dÀ_s¶_c⁄√˘i⁄
–*
d©a
 )

123 
ªt
, 
Àn
;

124 
thªad_öfo_t
 *
thªad_öfo
 = (thªad_öfo_à*Ë
d©a
;

125 
˛õ¡_fd
 = 
thªad_öfo
->client_fd;

126 
thªad_id
 = (Ë
	`±hªad_£lf
();

127 
buf
[1024];

128 
≥rs
[50];

129 
s¶_c⁄ãxt
 
s¶
;

130 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

132 
	`¢¥ötf
–
≥rs
, ’îs), "SSL Pthªad Thªad %d", 
thªad_id
 );

133 
	`¥ötf
–" [ #%d ] Clõ¡ FD %d\n", 
thªad_id
, 
˛õ¡_fd
 );

134 
	`¥ötf
–" [ #%d ] SìdögÅhêøndomÇumbî gíî©‹...\n", 
thªad_id
 );

138 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, 
thªad_öfo
->
íå›y
,

139 (c⁄° *Ë
≥rs
,

140 
	`°æí
–
≥rs
 ) ) ) != 0 )

142 
	`¥ötf
( " [ #%d ] failed: ctr_drbg_initÑeturned -0x%04x\n",

143 
thªad_id
, -
ªt
 );

144 
thªad_exô
;

147 
	`¥ötf
–" [ #%d ] ok\n", 
thªad_id
 );

152 
	`¥ötf
–" [ #%d ] Sëtög u∞thêSSL d©a....\n", 
thªad_id
 );

154 if––
ªt
 = 
	`s¶_öô
–&
s¶
 ) ) != 0 )

156 
	`¥ötf
( " [ #%d ] failed: ssl_initÑeturned -0x%04x\n",

157 
thªad_id
, -
ªt
 );

158 
thªad_exô
;

161 
	`s¶_£t_ídpoöt
–&
s¶
, 
SSL_IS_SERVER
 );

162 
	`s¶_£t_authmode
–&
s¶
, 
SSL_VERIFY_NONE
 );

164 
	`s¶_£t_∫g
–&
s¶
, 
˘r_drbg_øndom
, &
˘r_drbg
 );

165 
	`s¶_£t_dbg
–&
s¶
, 
my_muãxed_debug
, 
°dout
 );

170 #i‡
	`deföed
(
POLARSSL_SSL_CACHE_C
)

171 
	`s¶_£t_£ssi⁄_ˇche
–&
s¶
, 
s¶_ˇche_gë
, 
thªad_öfo
->
ˇche
,

172 
s¶_ˇche_£t
, 
thªad_öfo
->
ˇche
 );

175 
	`s¶_£t_ˇ_chaö
–&
s¶
, 
thªad_öfo
->
ˇ_chaö
, 
NULL
, NULL );

176 if––
ªt
 = 
	`s¶_£t_own_˚π
–&
s¶
, 
thªad_öfo
->
£rvî_˚π
,Åhªad_öfo->
£rvî_key
 ) ) != 0 )

178 
	`¥ötf
–" faûed\¿ ! s¶_£t_own_˚πÑëu∫ed %d\n\n", 
ªt
 );

179 
exô
;

182 
	`¥ötf
–" [ #%d ] ok\n", 
thªad_id
 );

184 
	`s¶_£t_bio
–&
s¶
, 
√t_ªcv
, &
˛õ¡_fd
,

185 
√t_£nd
, &
˛õ¡_fd
 );

187 
	`¥ötf
–" [ #%d ] ok\n", 
thªad_id
 );

192 
	`¥ötf
–" [ #%d ] Pîf‹mögÅhêSSL/TLS h™dshake\n", 
thªad_id
 );

194  ( 
ªt
 = 
	`s¶_h™dshake
–&
s¶
 ) ) != 0 )

196 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&Ñë !
POLARSSL_ERR_NET_WANT_WRITE
 )

198 
	`¥ötf
( " [ #%d ] failed: ssl_handshakeÑeturned -0x%04x\n",

199 
thªad_id
, -
ªt
 );

200 
thªad_exô
;

204 
	`¥ötf
–" [ #%d ] ok\n", 
thªad_id
 );

209 
	`¥ötf
–" [ #%d ] < Ród from clõ¡\n", 
thªad_id
 );

213 
Àn
 = –
buf
 ) - 1;

214 
	`mem£t
–
buf
, 0, ( buf ) );

215 
ªt
 = 
	`s¶_ªad
–&
s¶
, 
buf
, 
Àn
 );

217 if–
ªt
 =
POLARSSL_ERR_NET_WANT_READ
 ||Ñë =
POLARSSL_ERR_NET_WANT_WRITE
 )

220 if–
ªt
 <= 0 )

222  
ªt
 )

224 
POLARSSL_ERR_SSL_PEER_CLOSE_NOTIFY
:

225 
	`¥ötf
( " [ #%d ] connection was closed gracefully\n",

226 
thªad_id
 );

227 
thªad_exô
;

229 
POLARSSL_ERR_NET_CONN_RESET
:

230 
	`¥ötf
( " [ #%d ] connection wasÑeset byÖeer\n",

231 
thªad_id
 );

232 
thªad_exô
;

235 
	`¥ötf
( " [ #%d ] ssl_readÑeturned -0x%04x\n",

236 
thªad_id
, -
ªt
 );

237 
thªad_exô
;

243 
Àn
 = 
ªt
;

244 
	`¥ötf
( " [ #%d ] %d bytesÑead\n=====\n%s\n=====\n",

245 
thªad_id
, 
Àn
, (*Ë
buf
 );

247 if–
ªt
 > 0 )

255 
	`¥ötf
–" [ #%d ] > Wrôêtÿ˛õ¡:\n", 
thªad_id
 );

257 
Àn
 = 
	`•rötf
–(*Ë
buf
, 
HTTP_RESPONSE
,

258 
	`s¶_gë_cùhîsuôe
–&
s¶
 ) );

260  ( 
ªt
 = 
	`s¶_wrôe
–&
s¶
, 
buf
, 
Àn
 ) ) <= 0 )

262 if–
ªt
 =
POLARSSL_ERR_NET_CONN_RESET
 )

264 
	`¥ötf
( " [ #%d ] failed:Öeer closedÅhe connection\n",

265 
thªad_id
 );

266 
thªad_exô
;

269 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&Ñë !
POLARSSL_ERR_NET_WANT_WRITE
 )

271 
	`¥ötf
( " [ #%d ] failed: ssl_writeÑeturned -0x%04x\n",

272 
thªad_id
, 
ªt
 );

273 
thªad_exô
;

277 
Àn
 = 
ªt
;

278 
	`¥ötf
( " [ #%d ] %d bytes written\n=====\n%s\n=====\n",

279 
thªad_id
, 
Àn
, (*Ë
buf
 );

281 
	`¥ötf
–" [ #%d ] . ClosögÅhêc⁄√˘i⁄...", 
thªad_id
 );

283  ( 
ªt
 = 
	`s¶_˛o£_nŸify
–&
s¶
 ) ) < 0 )

285 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&

286 
ªt
 !
POLARSSL_ERR_NET_WANT_WRITE
 )

288 
	`¥ötf
( " [ #%d ] failed: ssl_close_notifyÑeturned -0x%04x\n",

289 
thªad_id
, 
ªt
 );

290 
thªad_exô
;

294 
	`¥ötf
( " ok\n" );

296 
ªt
 = 0;

298 
thªad_exô
:

300 #ifde‡
POLARSSL_ERROR_C


301 if–
ªt
 != 0 )

303 
îr‹_buf
[100];

304 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
îr‹_buf
, 100 );

305 
	`¥ötf
(" [ #%d ] LastÉrror was: -0x%04x - %s\n\n",

306 
thªad_id
, -
ªt
, 
îr‹_buf
 );

310 
	`√t_˛o£
–
˛õ¡_fd
 );

311 
	`s¶_‰ì
–&
s¶
 );

313 
thªad_öfo
->
thªad_com∂ëe
 = 1;

315 –
NULL
 );

316 
	}
}

318 
	$thªad_¸óã
–
˛õ¡_fd
 )

320 
ªt
, 
i
;

325  
i
 = 0; i < 
MAX_NUM_THREADS
; i++ )

327 if–
thªads
[
i
].
a˘ive
 == 0 )

330 if–
thªads
[
i
].
d©a
.
thªad_com∂ëe
 == 1 )

332 
	`¥ötf
–" [ maö ] CÀ™ög u∞thªad %d\n", 
i
 );

333 
	`±hªad_joö
(
thªads
[
i
].
thªad
, 
NULL
 );

334 
	`mem£t
–&
thªads
[
i
], 0, (
±hªad_öfo_t
) );

339 if–
i
 =
MAX_NUM_THREADS
 )

345 
	`mem˝y
–&
thªads
[
i
].
d©a
, &
ba£_öfo
, (base_info) );

346 
thªads
[
i
].
a˘ive
 = 1;

347 
thªads
[
i
].
d©a
.
˛õ¡_fd
 = client_fd;

349 if––
ªt
 = 
	`±hªad_¸óã
–&
thªads
[
i
].
thªad
, 
NULL
, 
h™dÀ_s¶_c⁄√˘i⁄
, &thªads[i].
d©a
 ) ) != 0 )

351 –
ªt
 );

355 
	}
}

357 
	$maö
–
¨gc
, *
¨gv
[] )

359 
ªt
;

360 
li°í_fd
;

361 
˛õ¡_fd
 = -1;

363 
íå›y_c⁄ãxt
 
íå›y
;

364 
x509_¸t
 
§v˚π
;

365 
pk_c⁄ãxt
 
pkey
;

366 #i‡
	`deföed
(
POLARSSL_MEMORY_BUFFER_ALLOC_C
)

367 
Æloc_buf
[100000];

369 #i‡
	`deföed
(
POLARSSL_SSL_CACHE_C
)

370 
s¶_ˇche_c⁄ãxt
 
ˇche
;

373 ((Ë
¨gc
);

374 ((Ë
¨gv
);

376 #i‡
	`deföed
(
POLARSSL_MEMORY_BUFFER_ALLOC_C
)

377 
	`mem‹y_buf„r_Æloc_öô
–
Æloc_buf
, (alloc_buf) );

380 #i‡
	`deföed
(
POLARSSL_SSL_CACHE_C
)

381 
	`s¶_ˇche_öô
–&
ˇche
 );

382 
ba£_öfo
.
ˇche
 = &cache;

385 
	`mem£t
–
thªads
, 0, (threads) );

387 
	`pﬁ¨s¶_muãx_öô
–&
debug_muãx
 );

392 
	`íå›y_öô
–&
íå›y
 );

393 
ba£_öfo
.
íå›y
 = &entropy;

398 
	`¥ötf
( "\n . LoadingÅhe server cert.ánd key..." );

399 
	`fÊush
–
°dout
 );

401 
	`x509_¸t_öô
–&
§v˚π
 );

408 
ªt
 = 
	`x509_¸t_∑r£
–&
§v˚π
, (c⁄° *Ë
ã°_§v_¸t
,

409 
	`°æí
–
ã°_§v_¸t
 ) );

410 if–
ªt
 != 0 )

412 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£Ñëu∫ed %d\n\n", 
ªt
 );

413 
exô
;

416 
ªt
 = 
	`x509_¸t_∑r£
–&
§v˚π
, (c⁄° *Ë
ã°_ˇ_li°
,

417 
	`°æí
–
ã°_ˇ_li°
 ) );

418 if–
ªt
 != 0 )

420 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£Ñëu∫ed %d\n\n", 
ªt
 );

421 
exô
;

424 
	`pk_öô
–&
pkey
 );

425 
ªt
 = 
	`pk_∑r£_key
–&
pkey
, (c⁄° *Ë
ã°_§v_key
,

426 
	`°æí
–
ã°_§v_key
 ), 
NULL
, 0 );

427 if–
ªt
 != 0 )

429 
	`¥ötf
–" faûed\¿ !Ök_∑r£_keyÑëu∫ed %d\n\n", 
ªt
 );

430 
exô
;

433 
ba£_öfo
.
ˇ_chaö
 = 
§v˚π
.
√xt
;

434 
ba£_öfo
.
£rvî_˚π
 = &
§v˚π
;

435 
ba£_öfo
.
£rvî_key
 = &
pkey
;

437 
	`¥ötf
( " ok\n" );

442 
	`¥ötf
( " . Bind on https://localhost:4433/ ..." );

443 
	`fÊush
–
°dout
 );

445 if––
ªt
 = 
	`√t_böd
–&
li°í_fd
, 
NULL
, 4433 ) ) != 0 )

447 
	`¥ötf
–" faûed\¿ !Çë_bödÑëu∫ed %d\n\n", 
ªt
 );

448 
exô
;

451 
	`¥ötf
( " ok\n" );

453 
ª£t
:

454 #ifde‡
POLARSSL_ERROR_C


455 if–
ªt
 != 0 )

457 
îr‹_buf
[100];

458 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
îr‹_buf
, 100 );

459 
	`¥ötf
–" [ maö ] La°Éº‹ was: -0x%04x - %s\n", -
ªt
, 
îr‹_buf
 );

466 
˛õ¡_fd
 = -1;

468 
	`¥ötf
( " [ main ] Waiting foráÑemote connection\n" );

470 if––
ªt
 = 
	`√t_ac˚±
–
li°í_fd
, &
˛õ¡_fd
, 
NULL
 ) ) != 0 )

472 
	`¥ötf
–" [ maö ] faûed:Çë_ac˚±Ñëu∫ed -0x%04x\n", 
ªt
 );

473 
exô
;

476 
	`¥ötf
( " [ main ] ok\n" );

477 
	`¥ötf
( " [ main ] CreatingáÇewÅhread\n" );

479 if––
ªt
 = 
	`thªad_¸óã
–
˛õ¡_fd
 ) ) != 0 )

481 
	`¥ötf
–" [ maö ] faûed:Åhªad_¸óãÑëu∫ed %d\n", 
ªt
 );

482 
	`√t_˛o£
–
˛õ¡_fd
 );

483 
ª£t
;

486 
ªt
 = 0;

487 
ª£t
;

489 
exô
:

490 
	`x509_¸t_‰ì
–&
§v˚π
 );

491 
	`pk_‰ì
–&
pkey
 );

492 #i‡
	`deföed
(
POLARSSL_SSL_CACHE_C
)

493 
	`s¶_ˇche_‰ì
–&
ˇche
 );

495 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

496 
	`íå›y_‰ì
–&
íå›y
 );

498 
	`pﬁ¨s¶_muãx_‰ì
–&
debug_muãx
 );

500 #i‡
	`deföed
(
POLARSSL_MEMORY_BUFFER_ALLOC_C
)

501 
	`mem‹y_buf„r_Æloc_‰ì
();

504 #i‡
	`deföed
(
_WIN32
)

505 
	`¥ötf
( " Press EnterÅoÉxitÅhisÖrogram.\n" );

506 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

509 –
ªt
 );

510 
	}
}

513 
	gPOLARSSL_SSL_TLS_C
 && 
	gPOLARSSL_SSL_SRV_C
 && 
	gPOLARSSL_NET_C
 &&

514 
	gPOLARSSL_RSA_C
 && 
	gPOLARSSL_CTR_DRBG_C
 && 
	gPOLARSSL_THREADING_C
 &&

515 
	gPOLARSSL_THREADING_PTHREAD
 */

	@polarssl/programs/ssl/ssl_server.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡
deföed
(
_WIN32
)

33 
	~<wödows.h
>

36 
	~<°rög.h
>

37 
	~<°dlib.h
>

38 
	~<°dio.h
>

40 
	~"pﬁ¨s¶/íå›y.h
"

41 
	~"pﬁ¨s¶/˘r_drbg.h
"

42 
	~"pﬁ¨s¶/˚πs.h
"

43 
	~"pﬁ¨s¶/x509.h
"

44 
	~"pﬁ¨s¶/s¶.h
"

45 
	~"pﬁ¨s¶/√t.h
"

46 
	~"pﬁ¨s¶/îr‹.h
"

47 
	~"pﬁ¨s¶/debug.h
"

49 #i‡
deföed
(
POLARSSL_SSL_CACHE_C
)

50 
	~"pﬁ¨s¶/s¶_ˇche.h
"

53 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_CERTS_C
) || \

54 !
deföed
(
POLARSSL_ENTROPY_C
Ë|| !deföed(
POLARSSL_SSL_TLS_C
) || \

55 !
deföed
(
POLARSSL_SSL_SRV_C
Ë|| !deföed(
POLARSSL_NET_C
) || \

56 !
deföed
(
POLARSSL_RSA_C
Ë|| !deföed(
POLARSSL_CTR_DRBG_C
) || \

57 !
	$deföed
(
POLARSSL_X509_CRT_PARSE_C
)

58 
	$maö
–
¨gc
, *
¨gv
[] )

60 ((Ë
¨gc
);

61 ((Ë
¨gv
);

63 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_CERTS_Cánd/or POLARSSL_ENTROPY_C "

69 
	}
}

72 
	#HTTP_RESPONSE
 \

75 "<p>Suc˚ssfu»c⁄√˘i⁄ usög: %s</p>\r\n"

	)

77 
	#DEBUG_LEVEL
 0

	)

79 
	$my_debug
–*
˘x
, 
Àvñ
, c⁄° *
°r
 )

81 ((Ë
Àvñ
);

83 
	`Ârötf
–(
FILE
 *Ë
˘x
, "%s", 
°r
 );

84 
	`fÊush
–(
FILE
 *Ë
˘x
 );

85 
	}
}

87 
	$maö
–
¨gc
, *
¨gv
[] )

89 
ªt
, 
Àn
;

90 
li°í_fd
;

91 
˛õ¡_fd
 = -1;

92 
buf
[1024];

93 c⁄° *
≥rs
 = "ssl_server";

95 
íå›y_c⁄ãxt
 
íå›y
;

96 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

97 
s¶_c⁄ãxt
 
s¶
;

98 
x509_¸t
 
§v˚π
;

99 
pk_c⁄ãxt
 
pkey
;

100 #i‡
	`deföed
(
POLARSSL_SSL_CACHE_C
)

101 
s¶_ˇche_c⁄ãxt
 
ˇche
;

104 ((Ë
¨gc
);

105 ((Ë
¨gv
);

107 
	`mem£t
–&
s¶
, 0, (
s¶_c⁄ãxt
) );

108 #i‡
	`deföed
(
POLARSSL_SSL_CACHE_C
)

109 
	`s¶_ˇche_öô
–&
ˇche
 );

111 
	`x509_¸t_öô
–&
§v˚π
 );

112 
	`pk_öô
–&
pkey
 );

113 
	`íå›y_öô
–&
íå›y
 );

115 #i‡
	`deföed
(
POLARSSL_DEBUG_C
)

116 
	`debug_£t_thªshﬁd
–
DEBUG_LEVEL
 );

122 
	`¥ötf
( "\n . LoadingÅhe server cert.ánd key..." );

123 
	`fÊush
–
°dout
 );

130 
ªt
 = 
	`x509_¸t_∑r£
–&
§v˚π
, (c⁄° *Ë
ã°_§v_¸t
,

131 
	`°æí
–
ã°_§v_¸t
 ) );

132 if–
ªt
 != 0 )

134 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£Ñëu∫ed %d\n\n", 
ªt
 );

135 
exô
;

138 
ªt
 = 
	`x509_¸t_∑r£
–&
§v˚π
, (c⁄° *Ë
ã°_ˇ_li°
,

139 
	`°æí
–
ã°_ˇ_li°
 ) );

140 if–
ªt
 != 0 )

142 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£Ñëu∫ed %d\n\n", 
ªt
 );

143 
exô
;

146 
ªt
 = 
	`pk_∑r£_key
–&
pkey
, (c⁄° *Ë
ã°_§v_key
,

147 
	`°æí
–
ã°_§v_key
 ), 
NULL
, 0 );

148 if–
ªt
 != 0 )

150 
	`¥ötf
–" faûed\¿ !Ök_∑r£_keyÑëu∫ed %d\n\n", 
ªt
 );

151 
exô
;

154 
	`¥ötf
( " ok\n" );

159 
	`¥ötf
( " . Bind on https://localhost:4433/ ..." );

160 
	`fÊush
–
°dout
 );

162 if––
ªt
 = 
	`√t_böd
–&
li°í_fd
, 
NULL
, 4433 ) ) != 0 )

164 
	`¥ötf
–" faûed\¿ !Çë_bödÑëu∫ed %d\n\n", 
ªt
 );

165 
exô
;

168 
	`¥ötf
( " ok\n" );

173 
	`¥ötf
( " . SeedingÅheÑandomÇumber generator..." );

174 
	`fÊush
–
°dout
 );

176 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

177 (c⁄° *Ë
≥rs
,

178 
	`°æí
–
≥rs
 ) ) ) != 0 )

180 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed %d\n", 
ªt
 );

181 
exô
;

184 
	`¥ötf
( " ok\n" );

189 
	`¥ötf
( " . Setting upÅhe SSL data...." );

190 
	`fÊush
–
°dout
 );

192 if––
ªt
 = 
	`s¶_öô
–&
s¶
 ) ) != 0 )

194 
	`¥ötf
–" faûed\¿ ! s¶_öôÑëu∫ed %d\n\n", 
ªt
 );

195 
exô
;

198 
	`s¶_£t_ídpoöt
–&
s¶
, 
SSL_IS_SERVER
 );

199 
	`s¶_£t_authmode
–&
s¶
, 
SSL_VERIFY_NONE
 );

201 
	`s¶_£t_∫g
–&
s¶
, 
˘r_drbg_øndom
, &
˘r_drbg
 );

202 
	`s¶_£t_dbg
–&
s¶
, 
my_debug
, 
°dout
 );

204 #i‡
	`deföed
(
POLARSSL_SSL_CACHE_C
)

205 
	`s¶_£t_£ssi⁄_ˇche
–&
s¶
, 
s¶_ˇche_gë
, &
ˇche
,

206 
s¶_ˇche_£t
, &
ˇche
 );

209 
	`s¶_£t_ˇ_chaö
–&
s¶
, 
§v˚π
.
√xt
, 
NULL
, NULL );

210 if––
ªt
 = 
	`s¶_£t_own_˚π
–&
s¶
, &
§v˚π
, &
pkey
 ) ) != 0 )

212 
	`¥ötf
–" faûed\¿ ! s¶_£t_own_˚πÑëu∫ed %d\n\n", 
ªt
 );

213 
exô
;

216 
	`¥ötf
( " ok\n" );

218 
ª£t
:

219 #ifde‡
POLARSSL_ERROR_C


220 if–
ªt
 != 0 )

222 
îr‹_buf
[100];

223 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
îr‹_buf
, 100 );

224 
	`¥ötf
("La°Éº‹ was: %d - %s\n\n", 
ªt
, 
îr‹_buf
 );

228 if–
˛õ¡_fd
 != -1 )

229 
	`√t_˛o£
–
˛õ¡_fd
 );

231 
	`s¶_£ssi⁄_ª£t
–&
s¶
 );

236 
˛õ¡_fd
 = -1;

238 
	`¥ötf
( " . Waiting foráÑemote connection ..." );

239 
	`fÊush
–
°dout
 );

241 if––
ªt
 = 
	`√t_ac˚±
–
li°í_fd
, &
˛õ¡_fd
, 
NULL
 ) ) != 0 )

243 
	`¥ötf
–" faûed\¿ !Çë_ac˚±Ñëu∫ed %d\n\n", 
ªt
 );

244 
exô
;

247 
	`s¶_£t_bio
–&
s¶
, 
√t_ªcv
, &
˛õ¡_fd
,

248 
√t_£nd
, &
˛õ¡_fd
 );

250 
	`¥ötf
( " ok\n" );

255 
	`¥ötf
( " . PerformingÅhe SSL/TLS handshake..." );

256 
	`fÊush
–
°dout
 );

258  ( 
ªt
 = 
	`s¶_h™dshake
–&
s¶
 ) ) != 0 )

260 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&Ñë !
POLARSSL_ERR_NET_WANT_WRITE
 )

262 
	`¥ötf
–" faûed\¿ ! s¶_h™dshakêªtu∫ed %d\n\n", 
ªt
 );

263 
ª£t
;

267 
	`¥ötf
( " ok\n" );

272 
	`¥ötf
( " < Read from client:" );

273 
	`fÊush
–
°dout
 );

277 
Àn
 = –
buf
 ) - 1;

278 
	`mem£t
–
buf
, 0, ( buf ) );

279 
ªt
 = 
	`s¶_ªad
–&
s¶
, 
buf
, 
Àn
 );

281 if–
ªt
 =
POLARSSL_ERR_NET_WANT_READ
 ||Ñë =
POLARSSL_ERR_NET_WANT_WRITE
 )

284 if–
ªt
 <= 0 )

286  
ªt
 )

288 
POLARSSL_ERR_SSL_PEER_CLOSE_NOTIFY
:

289 
	`¥ötf
( " connection was closed gracefully\n" );

292 
POLARSSL_ERR_NET_CONN_RESET
:

293 
	`¥ötf
( " connection wasÑeset byÖeer\n" );

297 
	`¥ötf
–" s¶_ªadÑëu∫ed -0x%x\n", -
ªt
 );

304 
Àn
 = 
ªt
;

305 
	`¥ötf
–" %d byã†ªad\n\n%s", 
Àn
, (*Ë
buf
 );

307 if–
ªt
 > 0 )

315 
	`¥ötf
( " > WriteÅo client:" );

316 
	`fÊush
–
°dout
 );

318 
Àn
 = 
	`•rötf
–(*Ë
buf
, 
HTTP_RESPONSE
,

319 
	`s¶_gë_cùhîsuôe
–&
s¶
 ) );

321  ( 
ªt
 = 
	`s¶_wrôe
–&
s¶
, 
buf
, 
Àn
 ) ) <= 0 )

323 if–
ªt
 =
POLARSSL_ERR_NET_CONN_RESET
 )

325 
	`¥ötf
( " failed\n !Öeer closedÅhe connection\n\n" );

326 
ª£t
;

329 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&Ñë !
POLARSSL_ERR_NET_WANT_WRITE
 )

331 
	`¥ötf
–" faûed\¿ ! s¶_wrôêªtu∫ed %d\n\n", 
ªt
 );

332 
exô
;

336 
Àn
 = 
ªt
;

337 
	`¥ötf
–" %d byã†wrôãn\n\n%s\n", 
Àn
, (*Ë
buf
 );

339 
	`¥ötf
( " . ClosingÅhe connection..." );

341  ( 
ªt
 = 
	`s¶_˛o£_nŸify
–&
s¶
 ) ) < 0 )

343 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&

344 
ªt
 !
POLARSSL_ERR_NET_WANT_WRITE
 )

346 
	`¥ötf
–" faûed\¿ ! s¶_˛o£_nŸifyÑëu∫ed %d\n\n", 
ªt
 );

347 
ª£t
;

351 
	`¥ötf
( " ok\n" );

353 
ªt
 = 0;

354 
ª£t
;

356 
exô
:

358 #ifde‡
POLARSSL_ERROR_C


359 if–
ªt
 != 0 )

361 
îr‹_buf
[100];

362 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
îr‹_buf
, 100 );

363 
	`¥ötf
("La°Éº‹ was: %d - %s\n\n", 
ªt
, 
îr‹_buf
 );

367 if–
˛õ¡_fd
 != -1 )

368 
	`√t_˛o£
–
˛õ¡_fd
 );

370 
	`x509_¸t_‰ì
–&
§v˚π
 );

371 
	`pk_‰ì
–&
pkey
 );

372 
	`s¶_‰ì
–&
s¶
 );

373 #i‡
	`deföed
(
POLARSSL_SSL_CACHE_C
)

374 
	`s¶_ˇche_‰ì
–&
ˇche
 );

376 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

377 
	`íå›y_‰ì
–&
íå›y
 );

379 #i‡
	`deföed
(
_WIN32
)

380 
	`¥ötf
( " Press EnterÅoÉxitÅhisÖrogram.\n" );

381 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

384 –
ªt
 );

385 
	}
}

387 
	gPOLARSSL_SSL_TLS_C
 && 
	gPOLARSSL_SSL_SRV_C
 && 
	gPOLARSSL_NET_C
 &&

388 
	gPOLARSSL_RSA_C
 && 
	gPOLARSSL_CTR_DRBG_C
 */

	@polarssl/programs/ssl/ssl_server2.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 #i‡!
deföed
(
POLARSSL_ENTROPY_C
) || \

33 !
deföed
(
POLARSSL_SSL_TLS_C
Ë|| !deföed(
POLARSSL_SSL_SRV_C
) || \

34 !
deföed
(
POLARSSL_NET_C
Ë|| !
	$deföed
(
POLARSSL_CTR_DRBG_C
)

35 
	~<°dio.h
>

36 
	$maö
–
¨gc
, *
¨gv
[] )

38 ((Ë
¨gc
);

39 ((Ë
¨gv
);

41 
	`¥ötf
("POLARSSL_ENTROPY_Cánd/or "

45 
	}
}

48 #i‡
deföed
(
POLARSSL_SSL_SERVER_NAME_INDICATION
Ë&& deföed(
POLARSSL_FS_IO
)

49 
	#POLARSSL_SNI


	)

52 #i‡
deföed
(
POLARSSL_PLATFORM_C
)

53 
	~"pﬁ¨s¶/∂©f‹m.h
"

55 
	#pﬁ¨s¶_mÆloc
 
mÆloc


	)

56 
	#pﬁ¨s¶_‰ì
 
‰ì


	)

59 #i‡
deföed
(
_WIN32
)

60 
	~<wödows.h
>

63 
	~<°rög.h
>

64 
	~<°dlib.h
>

65 
	~<°dio.h
>

67 
	~"pﬁ¨s¶/√t.h
"

68 
	~"pﬁ¨s¶/s¶.h
"

69 
	~"pﬁ¨s¶/íå›y.h
"

70 
	~"pﬁ¨s¶/˘r_drbg.h
"

71 
	~"pﬁ¨s¶/˚πs.h
"

72 
	~"pﬁ¨s¶/x509.h
"

73 
	~"pﬁ¨s¶/îr‹.h
"

74 
	~"pﬁ¨s¶/debug.h
"

76 #i‡
deföed
(
POLARSSL_SSL_CACHE_C
)

77 
	~"pﬁ¨s¶/s¶_ˇche.h
"

80 #i‡
deföed
(
POLARSSL_MEMORY_BUFFER_ALLOC_C
)

81 
	~"pﬁ¨s¶/mem‹y.h
"

84 
	#DFL_SERVER_ADDR
 
NULL


	)

85 
	#DFL_SERVER_PORT
 4433

	)

86 
	#DFL_DEBUG_LEVEL
 0

	)

87 
	#DFL_NBIO
 0

	)

88 
	#DFL_CA_FILE
 ""

	)

89 
	#DFL_CA_PATH
 ""

	)

90 
	#DFL_CRT_FILE
 ""

	)

91 
	#DFL_KEY_FILE
 ""

	)

92 
	#DFL_CRT_FILE2
 ""

	)

93 
	#DFL_KEY_FILE2
 ""

	)

94 
	#DFL_PSK
 ""

	)

95 
	#DFL_PSK_IDENTITY
 "Clõ¡_idítôy"

	)

96 
	#DFL_PSK_LIST
 
NULL


	)

97 
	#DFL_FORCE_CIPHER
 0

	)

98 
	#DFL_VERSION_SUITES
 
NULL


	)

99 
	#DFL_RENEGOTIATION
 
SSL_RENEGOTIATION_DISABLED


	)

100 
	#DFL_ALLOW_LEGACY
 
SSL_LEGACY_NO_RENEGOTIATION


	)

101 
	#DFL_RENEGOTIATE
 0

	)

102 
	#DFL_RENEGO_DELAY
 -2

	)

103 
	#DFL_MIN_VERSION
 -1

	)

104 
	#DFL_MAX_VERSION
 -1

	)

105 
	#DFL_AUTH_MODE
 
SSL_VERIFY_OPTIONAL


	)

106 
	#DFL_MFL_CODE
 
SSL_MAX_FRAG_LEN_NONE


	)

107 
	#DFL_TICKETS
 
SSL_SESSION_TICKETS_ENABLED


	)

108 
	#DFL_TICKET_TIMEOUT
 -1

	)

109 
	#DFL_CACHE_MAX
 -1

	)

110 
	#DFL_CACHE_TIMEOUT
 -1

	)

111 
	#DFL_SNI
 
NULL


	)

112 
	#DFL_ALPN_STRING
 
NULL


	)

113 
	#DFL_DHM_FILE
 
NULL


	)

115 
	#LONG_RESPONSE
 "<p>01-blah-blah-blah-blah-blah-blah-blah-blah-blah\r\n" \

121 "07-bœh-bœh-bœh-bœh-bœh-bœh-bœh-bœh-bœh-bœh-bœh-bœh</p>\r\n"

	)

125 
	#HTTP_RESPONSE
 \

129 

	)

136 
	#IO_BUF_LEN
 200

	)

141 
	s›ti⁄s


143 c⁄° *
	m£rvî_addr
;

144 
	m£rvî_p‹t
;

145 
	mdebug_Àvñ
;

146 
	mnbio
;

147 c⁄° *
	mˇ_fûe
;

148 c⁄° *
	mˇ_∑th
;

149 c⁄° *
	m¸t_fûe
;

150 c⁄° *
	mkey_fûe
;

151 c⁄° *
	m¸t_fûe2
;

152 c⁄° *
	mkey_fûe2
;

153 c⁄° *
	mpsk
;

154 c⁄° *
	mpsk_idítôy
;

155 *
	mpsk_li°
;

156 
	mf‹˚_cùhîsuôe
[2];

157 c⁄° *
	mvîsi⁄_suôes
;

158 
	mª√gŸüti⁄
;

159 
	mÆlow_Àgacy
;

160 
	mª√gŸüã
;

161 
	mª√go_dñay
;

162 
	mmö_vîsi⁄
;

163 
	mmax_vîsi⁄
;

164 
	mauth_mode
;

165 
	mmÊ_code
;

166 
	mtickës
;

167 
	mtickë_timeout
;

168 
	mˇche_max
;

169 
	mˇche_timeout
;

170 *
	m¢i
;

171 c⁄° *
	mÆ≤_°rög
;

172 c⁄° *
	mdhm_fûe
;

173 } 
	g›t
;

175 
	$my_debug
–*
˘x
, 
Àvñ
, c⁄° *
°r
 )

177 ((Ë
Àvñ
);

179 
	`Ârötf
–(
FILE
 *Ë
˘x
, "%s", 
°r
 );

180 
	`fÊush
–(
FILE
 *Ë
˘x
 );

181 
	}
}

187 
	$my_ªcv
–*
˘x
, *
buf
, 
size_t
 
Àn
 )

189 
fú°_åy
 = 1;

190 
ªt
;

192 if–
fú°_åy
 )

194 
fú°_åy
 = 0;

195 –
POLARSSL_ERR_NET_WANT_READ
 );

198 
ªt
 = 
	`√t_ªcv
–
˘x
, 
buf
, 
Àn
 );

199 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 )

200 
fú°_åy
 = 1;

201 –
ªt
 );

202 
	}
}

204 
	$my_£nd
–*
˘x
, c⁄° *
buf
, 
size_t
 
Àn
 )

206 
fú°_åy
 = 1;

207 
ªt
;

209 if–
fú°_åy
 )

211 
fú°_åy
 = 0;

212 –
POLARSSL_ERR_NET_WANT_WRITE
 );

215 
ªt
 = 
	`√t_£nd
–
˘x
, 
buf
, 
Àn
 );

216 if–
ªt
 !
POLARSSL_ERR_NET_WANT_WRITE
 )

217 
fú°_åy
 = 1;

218 –
ªt
 );

219 
	}
}

221 #i‡
deföed
(
POLARSSL_X509_CRT_PARSE_C
)

222 #i‡
deföed
(
POLARSSL_FS_IO
)

223 
	#USAGE_IO
 \

237 " deÁu…:ÖªlﬂdedÖ¨amëîs\n"

	)

239 
	#USAGE_IO
 \

242 "\n"

	)

245 
	#USAGE_IO
 ""

	)

248 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

249 
	#USAGE_PSK
 \

251 "Ösk_idítôy=%%† deÁu…: \"Clõ¡_idítôy\"\n"

	)

253 
	#USAGE_PSK
 ""

	)

256 #i‡
deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

257 
	#USAGE_TICKETS
 \

259 "Åickë_timeout=%%d deÁu…:Åickë deÁu… (1d)\n"

	)

261 
	#USAGE_TICKETS
 ""

	)

264 #i‡
deföed
(
POLARSSL_SSL_CACHE_C
)

265 
	#USAGE_CACHE
 \

267 " cache_timeout=%%d deÁu…: cachêdeÁu… (1d)\n"

	)

269 
	#USAGE_CACHE
 ""

	)

272 #i‡
deföed
(
POLARSSL_SNI
)

273 
	#USAGE_SNI
 \

275 " deÁu…: dißbÀd\n"

	)

277 
	#USAGE_SNI
 ""

	)

280 #i‡
deföed
(
POLARSSL_SSL_MAX_FRAGMENT_LENGTH
)

281 
	#USAGE_MAX_FRAG_LEN
 \

283 " o±i⁄s: 512, 1024, 2048, 4096\n"

	)

285 
	#USAGE_MAX_FRAG_LEN
 ""

	)

288 #i‡
deföed
(
POLARSSL_SSL_ALPN
)

289 
	#USAGE_ALPN
 \

291 "Éxam∂e: spdy/1,hâp/1.1\n"

	)

293 
	#USAGE_ALPN
 ""

	)

296 
	#USAGE
 \

307 
USAGE_IO
 \

308 
USAGE_SNI
 \

310 
USAGE_PSK
 \

315 
USAGE_TICKETS
 \

316 
USAGE_CACHE
 \

317 
USAGE_MAX_FRAG_LEN
 \

318 
USAGE_ALPN
 \

329 "ác˚±abÀ cùhîsuôê«mes:\n"

	)

334 
	#GET_ITEM
–
d°
 ) \

335 
d°
 = 
p
; \

336  *
p
 != ',' ) \

337 if–++
p
 > 
íd
 ) \

338 –
NULL
 ); \

339 *
p
++ = '\0';

	)

341 #i‡
deföed
(
POLARSSL_SNI
)

342 
_¢i_íåy
 
	t¢i_íåy
;

344 
	s_¢i_íåy
 {

345 c⁄° *
	m«me
;

346 
x509_¸t
 *
	m˚π
;

347 
pk_c⁄ãxt
 *
	mkey
;

348 
¢i_íåy
 *
	m√xt
;

358 
¢i_íåy
 *
	$¢i_∑r£
–*
¢i_°rög
 )

360 
¢i_íåy
 *
cur
 = 
NULL
, *
√w
 = NULL;

361 *
p
 = 
¢i_°rög
;

362 *
íd
 = 
p
;

363 *
¸t_fûe
, *
key_fûe
;

365  *
íd
 != '\0' )

366 ++
íd
;

367 *
íd
 = ',';

369  
p
 <
íd
 )

371 if––
√w
 = 
	`pﬁ¨s¶_mÆloc
––
¢i_íåy
 ) ) ) =
NULL
 )

372 –
NULL
 );

374 
	`mem£t
–
√w
, 0, –
¢i_íåy
 ) );

376 if––
√w
->
˚π
 = 
	`pﬁ¨s¶_mÆloc
––
x509_¸t
 ) ) ) =
NULL
 ||

377 –
√w
->
key
 = 
	`pﬁ¨s¶_mÆloc
––
pk_c⁄ãxt
 ) ) ) =
NULL
 )

378 –
NULL
 );

380 
	`x509_¸t_öô
–
√w
->
˚π
 );

381 
	`pk_öô
–
√w
->
key
 );

383 
	`GET_ITEM
–
√w
->
«me
 );

384 
	`GET_ITEM
–
¸t_fûe
 );

385 
	`GET_ITEM
–
key_fûe
 );

387 if–
	`x509_¸t_∑r£_fûe
–
√w
->
˚π
, 
¸t_fûe
 ) != 0 ||

388 
	`pk_∑r£_keyfûe
–
√w
->
key
, 
key_fûe
, "" ) != 0 )

389 –
NULL
 );

391 
√w
->
√xt
 = 
cur
;

392 
cur
 = 
√w
;

395 –
cur
 );

396 
	}
}

398 
	$¢i_‰ì
–
¢i_íåy
 *
hód
 )

400 
¢i_íåy
 *
cur
 = 
hód
, *
√xt
;

402  
cur
 !
NULL
 )

404 
	`x509_¸t_‰ì
–
cur
->
˚π
 );

405 
	`pﬁ¨s¶_‰ì
–
cur
->
˚π
 );

407 
	`pk_‰ì
–
cur
->
key
 );

408 
	`pﬁ¨s¶_‰ì
–
cur
->
key
 );

410 
√xt
 = 
cur
->next;

411 
	`pﬁ¨s¶_‰ì
–
cur
 );

412 
cur
 = 
√xt
;

414 
	}
}

419 
	$¢i_ˇŒback
–*
p_öfo
, 
s¶_c⁄ãxt
 *
s¶
,

420 c⁄° *
«me
, 
size_t
 
«me_Àn
 )

422 
¢i_íåy
 *
cur
 = (¢i_íåy *Ë
p_öfo
;

424  
cur
 !
NULL
 )

426 if–
«me_Àn
 =
	`°æí
–
cur
->
«me
 ) &&

427 
	`memcmp
–
«me
, 
cur
->«me, 
«me_Àn
 ) == 0 )

429 –
	`s¶_£t_own_˚π
–
s¶
, 
cur
->
˚π
, cur->
key
 ) );

432 
cur
 = cur->
√xt
;

436 
	}
}

440 #i‡
deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

442 
	#HEX2NUM
–
c
 ) \

443 if–
c
 >= '0' && c <= '9' ) \

444 
c
 -= '0'; \

445 if–
c
 >= 'a' && c <= 'f' ) \

446 
c
 -= 'a' - 10; \

447 if–
c
 >= 'A' && c <= 'F' ) \

448 
c
 -= 'A' - 10; \

450 –-1 );

	)

456 
	$unhexify
–*
ouçut
, c⁄° *
öput
, 
size_t
 *
ﬁí
 )

458 
c
;

459 
size_t
 
j
;

461 *
ﬁí
 = 
	`°æí
–
öput
 );

462 if–*
ﬁí
 % 2 !0 || *ﬁí / 2 > 
POLARSSL_PSK_MAX_LEN
 )

464 *
ﬁí
 /= 2;

466  
j
 = 0; j < *
ﬁí
 * 2; j += 2 )

468 
c
 = 
öput
[
j
];

469 
	`HEX2NUM
–
c
 );

470 
ouçut
[ 
j
 / 2 ] = 
c
 << 4;

472 
c
 = 
öput
[
j
 + 1];

473 
	`HEX2NUM
–
c
 );

474 
ouçut
[ 
j
 / 2 ] |
c
;

478 
	}
}

480 
_psk_íåy
 
	tpsk_íåy
;

482 
	s_psk_íåy


484 c⁄° *
	m«me
;

485 
size_t
 
	mkey_Àn
;

486 
	mkey
[
POLARSSL_PSK_MAX_LEN
];

487 
psk_íåy
 *
	m√xt
;

497 
psk_íåy
 *
	$psk_∑r£
–*
psk_°rög
 )

499 
psk_íåy
 *
cur
 = 
NULL
, *
√w
 = NULL;

500 *
p
 = 
psk_°rög
;

501 *
íd
 = 
p
;

502 *
key_hex
;

504  *
íd
 != '\0' )

505 ++
íd
;

506 *
íd
 = ',';

508  
p
 <
íd
 )

510 if––
√w
 = 
	`pﬁ¨s¶_mÆloc
––
psk_íåy
 ) ) ) =
NULL
 )

511 –
NULL
 );

513 
	`mem£t
–
√w
, 0, –
psk_íåy
 ) );

515 
	`GET_ITEM
–
√w
->
«me
 );

516 
	`GET_ITEM
–
key_hex
 );

518 if–
	`unhexify
–
√w
->
key
, 
key_hex
, &√w->
key_Àn
 ) != 0 )

519 –
NULL
 );

521 
√w
->
√xt
 = 
cur
;

522 
cur
 = 
√w
;

525 –
cur
 );

526 
	}
}

531 
	$psk_‰ì
–
psk_íåy
 *
hód
 )

533 
psk_íåy
 *
√xt
;

535  
hód
 !
NULL
 )

537 
√xt
 = 
hód
->next;

538 
	`pﬁ¨s¶_‰ì
–
hód
 );

539 
hód
 = 
√xt
;

541 
	}
}

546 
	$psk_ˇŒback
–*
p_öfo
, 
s¶_c⁄ãxt
 *
s¶
,

547 c⁄° *
«me
, 
size_t
 
«me_Àn
 )

549 
psk_íåy
 *
cur
 = (psk_íåy *Ë
p_öfo
;

551  
cur
 !
NULL
 )

553 if–
«me_Àn
 =
	`°æí
–
cur
->
«me
 ) &&

554 
	`memcmp
–
«me
, 
cur
->«me, 
«me_Àn
 ) == 0 )

556 –
	`s¶_£t_psk
–
s¶
, 
cur
->
key
, cur->
key_Àn
,

557 
«me
, 
«me_Àn
 ) );

560 
cur
 = cur->
√xt
;

564 
	}
}

567 
	$maö
–
¨gc
, *
¨gv
[] )

569 
ªt
 = 0, 
Àn
, 
wrôãn
, 
‰ags
;

570 
li°í_fd
;

571 
˛õ¡_fd
 = -1;

572 
vîsi⁄_suôes
[4][2];

573 
buf
[
IO_BUF_LEN
];

574 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

575 
psk
[
POLARSSL_PSK_MAX_LEN
];

576 
size_t
 
psk_Àn
 = 0;

577 
psk_íåy
 *
psk_öfo
 = 
NULL
;

579 c⁄° *
≥rs
 = "ssl_server2";

581 
íå›y_c⁄ãxt
 
íå›y
;

582 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

583 
s¶_c⁄ãxt
 
s¶
;

584 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

585 
x509_¸t
 
ˇ˚π
;

586 
x509_¸t
 
§v˚π
;

587 
pk_c⁄ãxt
 
pkey
;

588 
x509_¸t
 
§v˚π2
;

589 
pk_c⁄ãxt
 
pkey2
;

590 
key_˚π_öô
 = 0, 
key_˚π_öô2
 = 0;

592 #i‡
	`deföed
(
POLARSSL_DHM_C
Ë&& deföed(
POLARSSL_FS_IO
)

593 
dhm_c⁄ãxt
 
dhm
;

595 #i‡
	`deföed
(
POLARSSL_SSL_CACHE_C
)

596 
s¶_ˇche_c⁄ãxt
 
ˇche
;

598 #i‡
	`deföed
(
POLARSSL_SNI
)

599 
¢i_íåy
 *
¢i_öfo
 = 
NULL
;

601 #i‡
	`deföed
(
POLARSSL_SSL_ALPN
)

602 c⁄° *
Æ≤_li°
[10];

604 #i‡
	`deföed
(
POLARSSL_MEMORY_BUFFER_ALLOC_C
)

605 
Æloc_buf
[100000];

608 
i
;

609 *
p
, *
q
;

610 c⁄° *
li°
;

612 #i‡
	`deföed
(
POLARSSL_MEMORY_BUFFER_ALLOC_C
)

613 
	`mem‹y_buf„r_Æloc_öô
–
Æloc_buf
, (alloc_buf) );

619 
li°í_fd
 = 0;

620 
	`mem£t
–&
s¶
, 0, –
s¶_c⁄ãxt
 ) );

621 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

622 
	`x509_¸t_öô
–&
ˇ˚π
 );

623 
	`x509_¸t_öô
–&
§v˚π
 );

624 
	`pk_öô
–&
pkey
 );

625 
	`x509_¸t_öô
–&
§v˚π2
 );

626 
	`pk_öô
–&
pkey2
 );

628 #i‡
	`deföed
(
POLARSSL_DHM_C
Ë&& deföed(
POLARSSL_FS_IO
)

629 
	`dhm_öô
–&
dhm
 );

631 #i‡
	`deföed
(
POLARSSL_SSL_CACHE_C
)

632 
	`s¶_ˇche_öô
–&
ˇche
 );

634 #i‡
	`deföed
(
POLARSSL_SSL_ALPN
)

635 
	`mem£t
–(*Ë
Æ≤_li°
, 0, (álpn_list ) );

638 if–
¨gc
 == 0 )

640 
ußge
:

641 if–
ªt
 == 0 )

642 
ªt
 = 1;

644 
	`¥ötf
–
USAGE
 );

646 
li°
 = 
	`s¶_li°_cùhîsuôes
();

647  *
li°
 )

649 
	`¥ötf
(" %-42s", 
	`s¶_gë_cùhîsuôe_«me
–*
li°
 ) );

650 
li°
++;

651 if–!*
li°
 )

653 
	`¥ötf
(" %s\n", 
	`s¶_gë_cùhîsuôe_«me
–*
li°
 ) );

654 
li°
++;

656 
	`¥ötf
("\n");

657 
exô
;

660 
›t
.
£rvî_addr
 = 
DFL_SERVER_ADDR
;

661 
›t
.
£rvî_p‹t
 = 
DFL_SERVER_PORT
;

662 
›t
.
debug_Àvñ
 = 
DFL_DEBUG_LEVEL
;

663 
›t
.
nbio
 = 
DFL_NBIO
;

664 
›t
.
ˇ_fûe
 = 
DFL_CA_FILE
;

665 
›t
.
ˇ_∑th
 = 
DFL_CA_PATH
;

666 
›t
.
¸t_fûe
 = 
DFL_CRT_FILE
;

667 
›t
.
key_fûe
 = 
DFL_KEY_FILE
;

668 
›t
.
¸t_fûe2
 = 
DFL_CRT_FILE2
;

669 
›t
.
key_fûe2
 = 
DFL_KEY_FILE2
;

670 
›t
.
psk
 = 
DFL_PSK
;

671 
›t
.
psk_idítôy
 = 
DFL_PSK_IDENTITY
;

672 
›t
.
psk_li°
 = 
DFL_PSK_LIST
;

673 
›t
.
f‹˚_cùhîsuôe
[0]
DFL_FORCE_CIPHER
;

674 
›t
.
vîsi⁄_suôes
 = 
DFL_VERSION_SUITES
;

675 
›t
.
ª√gŸüti⁄
 = 
DFL_RENEGOTIATION
;

676 
›t
.
Ælow_Àgacy
 = 
DFL_ALLOW_LEGACY
;

677 
›t
.
ª√gŸüã
 = 
DFL_RENEGOTIATE
;

678 
›t
.
ª√go_dñay
 = 
DFL_RENEGO_DELAY
;

679 
›t
.
mö_vîsi⁄
 = 
DFL_MIN_VERSION
;

680 
›t
.
max_vîsi⁄
 = 
DFL_MAX_VERSION
;

681 
›t
.
auth_mode
 = 
DFL_AUTH_MODE
;

682 
›t
.
mÊ_code
 = 
DFL_MFL_CODE
;

683 
›t
.
tickës
 = 
DFL_TICKETS
;

684 
›t
.
tickë_timeout
 = 
DFL_TICKET_TIMEOUT
;

685 
›t
.
ˇche_max
 = 
DFL_CACHE_MAX
;

686 
›t
.
ˇche_timeout
 = 
DFL_CACHE_TIMEOUT
;

687 
›t
.
¢i
 = 
DFL_SNI
;

688 
›t
.
Æ≤_°rög
 = 
DFL_ALPN_STRING
;

689 
›t
.
dhm_fûe
 = 
DFL_DHM_FILE
;

691  
i
 = 1; i < 
¨gc
; i++ )

693 
p
 = 
¨gv
[
i
];

694 if––
q
 = 
	`°rchr
–
p
, '=' ) ) =
NULL
 )

695 
ußge
;

696 *
q
++ = '\0';

698 if–
	`°rcmp
–
p
, "server_port" ) == 0 )

700 
›t
.
£rvî_p‹t
 = 
	`©oi
–
q
 );

701 if–
›t
.
£rvî_p‹t
 < 1 || opt.server_port > 65535 )

702 
ußge
;

704 if–
	`°rcmp
–
p
, "server_addr" ) == 0 )

705 
›t
.
£rvî_addr
 = 
q
;

706 if–
	`°rcmp
–
p
, "debug_level" ) == 0 )

708 
›t
.
debug_Àvñ
 = 
	`©oi
–
q
 );

709 if–
›t
.
debug_Àvñ
 < 0 || opt.debug_level > 65535 )

710 
ußge
;

712 if–
	`°rcmp
–
p
, "nbio" ) == 0 )

714 
›t
.
nbio
 = 
	`©oi
–
q
 );

715 if–
›t
.
nbio
 < 0 || opt.nbio > 2 )

716 
ußge
;

718 if–
	`°rcmp
–
p
, "ca_file" ) == 0 )

719 
›t
.
ˇ_fûe
 = 
q
;

720 if–
	`°rcmp
–
p
, "ca_path" ) == 0 )

721 
›t
.
ˇ_∑th
 = 
q
;

722 if–
	`°rcmp
–
p
, "crt_file" ) == 0 )

723 
›t
.
¸t_fûe
 = 
q
;

724 if–
	`°rcmp
–
p
, "key_file" ) == 0 )

725 
›t
.
key_fûe
 = 
q
;

726 if–
	`°rcmp
–
p
, "crt_file2" ) == 0 )

727 
›t
.
¸t_fûe2
 = 
q
;

728 if–
	`°rcmp
–
p
, "key_file2" ) == 0 )

729 
›t
.
key_fûe2
 = 
q
;

730 if–
	`°rcmp
–
p
, "dhm_file" ) == 0 )

731 
›t
.
dhm_fûe
 = 
q
;

732 if–
	`°rcmp
–
p
, "psk" ) == 0 )

733 
›t
.
psk
 = 
q
;

734 if–
	`°rcmp
–
p
, "psk_identity" ) == 0 )

735 
›t
.
psk_idítôy
 = 
q
;

736 if–
	`°rcmp
–
p
, "psk_list" ) == 0 )

737 
›t
.
psk_li°
 = 
q
;

738 if–
	`°rcmp
–
p
, "force_ciphersuite" ) == 0 )

740 
›t
.
f‹˚_cùhîsuôe
[0] = 
	`s¶_gë_cùhîsuôe_id
–
q
 );

742 if–
›t
.
f‹˚_cùhîsuôe
[0] == 0 )

744 
ªt
 = 2;

745 
ußge
;

747 
›t
.
f‹˚_cùhîsuôe
[1] = 0;

749 if–
	`°rcmp
–
p
, "version_suites" ) == 0 )

750 
›t
.
vîsi⁄_suôes
 = 
q
;

751 if–
	`°rcmp
–
p
, "renegotiation" ) == 0 )

753 
›t
.
ª√gŸüti⁄
 = (
	`©oi
–
q
 )Ë? 
SSL_RENEGOTIATION_ENABLED
 :

754 
SSL_RENEGOTIATION_DISABLED
;

756 if–
	`°rcmp
–
p
, "allow_legacy" ) == 0 )

758 
›t
.
Ælow_Àgacy
 = 
	`©oi
–
q
 );

759 if–
›t
.
Ælow_Àgacy
 < 0 || opt.allow_legacy > 1 )

760 
ußge
;

762 if–
	`°rcmp
–
p
, "renegotiate" ) == 0 )

764 
›t
.
ª√gŸüã
 = 
	`©oi
–
q
 );

765 if–
›t
.
ª√gŸüã
 < 0 || opt.renegotiate > 1 )

766 
ußge
;

768 if–
	`°rcmp
–
p
, "renego_delay" ) == 0 )

770 
›t
.
ª√go_dñay
 = 
	`©oi
–
q
 );

772 if–
	`°rcmp
–
p
, "min_version" ) == 0 )

774 if–
	`°rcmp
–
q
, "ssl3" ) == 0 )

775 
›t
.
mö_vîsi⁄
 = 
SSL_MINOR_VERSION_0
;

776 if–
	`°rcmp
–
q
, "tls1" ) == 0 )

777 
›t
.
mö_vîsi⁄
 = 
SSL_MINOR_VERSION_1
;

778 if–
	`°rcmp
–
q
, "tls1_1" ) == 0 )

779 
›t
.
mö_vîsi⁄
 = 
SSL_MINOR_VERSION_2
;

780 if–
	`°rcmp
–
q
, "tls1_2" ) == 0 )

781 
›t
.
mö_vîsi⁄
 = 
SSL_MINOR_VERSION_3
;

783 
ußge
;

785 if–
	`°rcmp
–
p
, "max_version" ) == 0 )

787 if–
	`°rcmp
–
q
, "ssl3" ) == 0 )

788 
›t
.
max_vîsi⁄
 = 
SSL_MINOR_VERSION_0
;

789 if–
	`°rcmp
–
q
, "tls1" ) == 0 )

790 
›t
.
max_vîsi⁄
 = 
SSL_MINOR_VERSION_1
;

791 if–
	`°rcmp
–
q
, "tls1_1" ) == 0 )

792 
›t
.
max_vîsi⁄
 = 
SSL_MINOR_VERSION_2
;

793 if–
	`°rcmp
–
q
, "tls1_2" ) == 0 )

794 
›t
.
max_vîsi⁄
 = 
SSL_MINOR_VERSION_3
;

796 
ußge
;

798 if–
	`°rcmp
–
p
, "force_version" ) == 0 )

800 if–
	`°rcmp
–
q
, "ssl3" ) == 0 )

802 
›t
.
mö_vîsi⁄
 = 
SSL_MINOR_VERSION_0
;

803 
›t
.
max_vîsi⁄
 = 
SSL_MINOR_VERSION_0
;

805 if–
	`°rcmp
–
q
, "tls1" ) == 0 )

807 
›t
.
mö_vîsi⁄
 = 
SSL_MINOR_VERSION_1
;

808 
›t
.
max_vîsi⁄
 = 
SSL_MINOR_VERSION_1
;

810 if–
	`°rcmp
–
q
, "tls1_1" ) == 0 )

812 
›t
.
mö_vîsi⁄
 = 
SSL_MINOR_VERSION_2
;

813 
›t
.
max_vîsi⁄
 = 
SSL_MINOR_VERSION_2
;

815 if–
	`°rcmp
–
q
, "tls1_2" ) == 0 )

817 
›t
.
mö_vîsi⁄
 = 
SSL_MINOR_VERSION_3
;

818 
›t
.
max_vîsi⁄
 = 
SSL_MINOR_VERSION_3
;

821 
ußge
;

823 if–
	`°rcmp
–
p
, "auth_mode" ) == 0 )

825 if–
	`°rcmp
–
q
, "none" ) == 0 )

826 
›t
.
auth_mode
 = 
SSL_VERIFY_NONE
;

827 if–
	`°rcmp
–
q
, "optional" ) == 0 )

828 
›t
.
auth_mode
 = 
SSL_VERIFY_OPTIONAL
;

829 if–
	`°rcmp
–
q
, "required" ) == 0 )

830 
›t
.
auth_mode
 = 
SSL_VERIFY_REQUIRED
;

832 
ußge
;

834 if–
	`°rcmp
–
p
, "max_frag_len" ) == 0 )

836 if–
	`°rcmp
–
q
, "512" ) == 0 )

837 
›t
.
mÊ_code
 = 
SSL_MAX_FRAG_LEN_512
;

838 if–
	`°rcmp
–
q
, "1024" ) == 0 )

839 
›t
.
mÊ_code
 = 
SSL_MAX_FRAG_LEN_1024
;

840 if–
	`°rcmp
–
q
, "2048" ) == 0 )

841 
›t
.
mÊ_code
 = 
SSL_MAX_FRAG_LEN_2048
;

842 if–
	`°rcmp
–
q
, "4096" ) == 0 )

843 
›t
.
mÊ_code
 = 
SSL_MAX_FRAG_LEN_4096
;

845 
ußge
;

847 if–
	`°rcmp
–
p
, "alpn" ) == 0 )

849 
›t
.
Æ≤_°rög
 = 
q
;

851 if–
	`°rcmp
–
p
, "tickets" ) == 0 )

853 
›t
.
tickës
 = 
	`©oi
–
q
 );

854 if–
›t
.
tickës
 < 0 || opt.tickets > 1 )

855 
ußge
;

857 if–
	`°rcmp
–
p
, "ticket_timeout" ) == 0 )

859 
›t
.
tickë_timeout
 = 
	`©oi
–
q
 );

860 if–
›t
.
tickë_timeout
 < 0 )

861 
ußge
;

863 if–
	`°rcmp
–
p
, "cache_max" ) == 0 )

865 
›t
.
ˇche_max
 = 
	`©oi
–
q
 );

866 if–
›t
.
ˇche_max
 < 0 )

867 
ußge
;

869 if–
	`°rcmp
–
p
, "cache_timeout" ) == 0 )

871 
›t
.
ˇche_timeout
 = 
	`©oi
–
q
 );

872 if–
›t
.
ˇche_timeout
 < 0 )

873 
ußge
;

875 if–
	`°rcmp
–
p
, "sni" ) == 0 )

877 
›t
.
¢i
 = 
q
;

880 
ußge
;

883 #i‡
	`deföed
(
POLARSSL_DEBUG_C
)

884 
	`debug_£t_thªshﬁd
–
›t
.
debug_Àvñ
 );

887 if–
›t
.
f‹˚_cùhîsuôe
[0] > 0 )

889 c⁄° 
s¶_cùhîsuôe_t
 *
cùhîsuôe_öfo
;

890 
cùhîsuôe_öfo
 = 
	`s¶_cùhîsuôe_‰om_id
–
›t
.
f‹˚_cùhîsuôe
[0] );

892 if–
›t
.
max_vîsi⁄
 != -1 &&

893 
cùhîsuôe_öfo
->
mö_mö‹_vî
 > 
›t
.
max_vîsi⁄
 )

895 
	`¥ötf
("forced ciphersuiteÇotállowed withÅhisÖrotocol version\n");

896 
ªt
 = 2;

897 
ußge
;

899 if–
›t
.
mö_vîsi⁄
 != -1 &&

900 
cùhîsuôe_öfo
->
max_mö‹_vî
 < 
›t
.
mö_vîsi⁄
 )

902 
	`¥ötf
("forced ciphersuiteÇotállowed withÅhisÖrotocol version\n");

903 
ªt
 = 2;

904 
ußge
;

906 if–
›t
.
max_vîsi⁄
 > 
cùhîsuôe_öfo
->
max_mö‹_vî
 )

907 
›t
.
max_vîsi⁄
 = 
cùhîsuôe_öfo
->
max_mö‹_vî
;

908 if–
›t
.
mö_vîsi⁄
 < 
cùhîsuôe_öfo
->
mö_mö‹_vî
 )

909 
›t
.
mö_vîsi⁄
 = 
cùhîsuôe_öfo
->
mö_mö‹_vî
;

912 if–
›t
.
vîsi⁄_suôes
 !
NULL
 )

914 c⁄° *
«me
[4] = { 0 };

917  
i
 = 0, 
p
 = (*Ë
›t
.
vîsi⁄_suôes
;

918 
i
 < 4 && *
p
 != '\0';

919 
i
++ )

921 
«me
[
i
] = 
p
;

924  *
p
 != ',' && *p != '\0' )

925 
p
++;

926 if–*
p
 == ',' )

927 *
p
++ = '\0';

930 if–
i
 != 4 )

932 
	`¥ötf
( "too few values for version_suites\n" );

933 
ªt
 = 1;

934 
exô
;

937 
	`mem£t
–
vîsi⁄_suôes
, 0, ( version_suites ) );

940  
i
 = 0; i < 4; i++ )

942 
vîsi⁄_suôes
[
i
][0] = 
	`s¶_gë_cùhîsuôe_id
–
«me
[i] );

944 if–
vîsi⁄_suôes
[
i
][0] == 0 )

946 
	`¥ötf
–"unknow¿cùhîsuôe: '%s'\n", 
«me
[
i
] );

947 
ªt
 = 2;

948 
ußge
;

953 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

957 if–
	`unhexify
–
psk
, 
›t
.psk, &
psk_Àn
 ) != 0 )

959 
	`¥ötf
( "pre-shared keyÇot valid hex\n" );

960 
exô
;

963 if–
›t
.
psk_li°
 !
NULL
 )

965 if––
psk_öfo
 = 
	`psk_∑r£
–
›t
.
psk_li°
 ) ) =
NULL
 )

967 
	`¥ötf
( "psk_list invalid" );

968 
exô
;

973 #i‡
	`deföed
(
POLARSSL_SSL_ALPN
)

974 if–
›t
.
Æ≤_°rög
 !
NULL
 )

976 
p
 = (*Ë
›t
.
Æ≤_°rög
;

977 
i
 = 0;

980  
i
 < (Ë 
Æ≤_li°
 - 1 && *
p
 != '\0' )

982 
Æ≤_li°
[
i
++] = 
p
;

985  *
p
 != ',' && *p != '\0' )

986 
p
++;

987 if–*
p
 == ',' )

988 *
p
++ = '\0';

996 
	`¥ötf
( "\n . SeedingÅheÑandomÇumber generator..." );

997 
	`fÊush
–
°dout
 );

999 
	`íå›y_öô
–&
íå›y
 );

1000 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

1001 (c⁄° *Ë
≥rs
,

1002 
	`°æí
–
≥rs
 ) ) ) != 0 )

1004 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed -0x%x\n", -
ªt
 );

1005 
exô
;

1008 
	`¥ötf
( " ok\n" );

1010 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

1014 
	`¥ötf
( " . LoadingÅhe CAÑoot certificate ..." );

1015 
	`fÊush
–
°dout
 );

1017 #i‡
	`deföed
(
POLARSSL_FS_IO
)

1018 if–
	`°æí
–
›t
.
ˇ_∑th
 ) )

1019 if–
	`°rcmp
–
›t
.
ˇ_∑th
, "none" ) == 0 )

1020 
ªt
 = 0;

1022 
ªt
 = 
	`x509_¸t_∑r£_∑th
–&
ˇ˚π
, 
›t
.
ˇ_∑th
 );

1023 if–
	`°æí
–
›t
.
ˇ_fûe
 ) )

1024 if–
	`°rcmp
–
›t
.
ˇ_fûe
, "none" ) == 0 )

1025 
ªt
 = 0;

1027 
ªt
 = 
	`x509_¸t_∑r£_fûe
–&
ˇ˚π
, 
›t
.
ˇ_fûe
 );

1030 #i‡
	`deföed
(
POLARSSL_CERTS_C
)

1031 
ªt
 = 
	`x509_¸t_∑r£
–&
ˇ˚π
, (c⁄° *Ë
ã°_ˇ_li°
,

1032 
	`°æí
–
ã°_ˇ_li°
 ) );

1035 
ªt
 = 1;

1036 
	`¥ötf
("POLARSSL_CERTS_CÇot defined.");

1039 if–
ªt
 < 0 )

1041 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£Ñëu∫ed -0x%x\n\n", -
ªt
 );

1042 
exô
;

1045 
	`¥ötf
–" ok (%d skù≥d)\n", 
ªt
 );

1050 
	`¥ötf
( " . LoadingÅhe server cert.ánd key..." );

1051 
	`fÊush
–
°dout
 );

1053 #i‡
	`deföed
(
POLARSSL_FS_IO
)

1054 if–
	`°æí
–
›t
.
¸t_fûe
 ) && 
	`°rcmp
( opt.crt_file, "none" ) != 0 )

1056 
key_˚π_öô
++;

1057 if––
ªt
 = 
	`x509_¸t_∑r£_fûe
–&
§v˚π
, 
›t
.
¸t_fûe
 ) ) != 0 )

1059 
	`¥ötf
( " failed\n ! x509_crt_parse_fileÑeturned -0x%x\n\n",

1060 -
ªt
 );

1061 
exô
;

1064 if–
	`°æí
–
›t
.
key_fûe
 ) && 
	`°rcmp
( opt.key_file, "none" ) != 0 )

1066 
key_˚π_öô
++;

1067 if––
ªt
 = 
	`pk_∑r£_keyfûe
–&
pkey
, 
›t
.
key_fûe
, "" ) ) != 0 )

1069 
	`¥ötf
–" faûed\¿ !Ök_∑r£_keyfûêªtu∫ed -0x%x\n\n", -
ªt
 );

1070 
exô
;

1073 if–
key_˚π_öô
 == 1 )

1075 
	`¥ötf
( " failed\n ! crt_file without key_file or vice-versa\n\n" );

1076 
exô
;

1079 if–
	`°æí
–
›t
.
¸t_fûe2
 ) && 
	`°rcmp
( opt.crt_file2, "none" ) != 0 )

1081 
key_˚π_öô2
++;

1082 if––
ªt
 = 
	`x509_¸t_∑r£_fûe
–&
§v˚π2
, 
›t
.
¸t_fûe2
 ) ) != 0 )

1084 
	`¥ötf
( " failed\n ! x509_crt_parse_file(2)Ñeturned -0x%x\n\n",

1085 -
ªt
 );

1086 
exô
;

1089 if–
	`°æí
–
›t
.
key_fûe2
 ) && 
	`°rcmp
( opt.key_file2, "none" ) != 0 )

1091 
key_˚π_öô2
++;

1092 if––
ªt
 = 
	`pk_∑r£_keyfûe
–&
pkey2
, 
›t
.
key_fûe2
, "" ) ) != 0 )

1094 
	`¥ötf
( " failed\n !Ök_parse_keyfile(2)Ñeturned -0x%x\n\n",

1095 -
ªt
 );

1096 
exô
;

1099 if–
key_˚π_öô2
 == 1 )

1101 
	`¥ötf
( " failed\n ! crt_file2 without key_file2 or vice-versa\n\n" );

1102 
exô
;

1105 if–
key_˚π_öô
 == 0 &&

1106 
	`°rcmp
–
›t
.
¸t_fûe
, "none" ) != 0 &&

1107 
	`°rcmp
–
›t
.
key_fûe
, "none" ) != 0 &&

1108 
key_˚π_öô2
 == 0 &&

1109 
	`°rcmp
–
›t
.
¸t_fûe2
, "none" ) != 0 &&

1110 
	`°rcmp
–
›t
.
key_fûe2
, "none" ) != 0 )

1112 #i‡!
	`deföed
(
POLARSSL_CERTS_C
)

1113 
	`¥ötf
( "Not certificated or keyÖrovided,ánd \n"

1115 
exô
;

1117 #i‡
	`deföed
(
POLARSSL_RSA_C
)

1118 if––
ªt
 = 
	`x509_¸t_∑r£
–&
§v˚π
,

1119 (c⁄° *Ë
ã°_§v_¸t_rß
,

1120 
	`°æí
–
ã°_§v_¸t_rß
 ) ) ) != 0 )

1122 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£Ñëu∫ed -0x%x\n\n", -
ªt
 );

1123 
exô
;

1125 if––
ªt
 = 
	`pk_∑r£_key
–&
pkey
,

1126 (c⁄° *Ë
ã°_§v_key_rß
,

1127 
	`°æí
–
ã°_§v_key_rß
 ), 
NULL
, 0 ) ) != 0 )

1129 
	`¥ötf
–" faûed\¿ !Ök_∑r£_keyÑëu∫ed -0x%x\n\n", -
ªt
 );

1130 
exô
;

1132 
key_˚π_öô
 = 2;

1134 #i‡
	`deföed
(
POLARSSL_ECDSA_C
)

1135 if––
ªt
 = 
	`x509_¸t_∑r£
–&
§v˚π2
,

1136 (c⁄° *Ë
ã°_§v_¸t_ec
,

1137 
	`°æí
–
ã°_§v_¸t_ec
 ) ) ) != 0 )

1139 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£2Ñëu∫ed -0x%x\n\n", -
ªt
 );

1140 
exô
;

1142 if––
ªt
 = 
	`pk_∑r£_key
–&
pkey2
,

1143 (c⁄° *Ë
ã°_§v_key_ec
,

1144 
	`°æí
–
ã°_§v_key_ec
 ), 
NULL
, 0 ) ) != 0 )

1146 
	`¥ötf
–" faûed\¿ !Ök_∑r£_key2Ñëu∫ed -0x%x\n\n", -
ªt
 );

1147 
exô
;

1149 
key_˚π_öô2
 = 2;

1154 
	`¥ötf
( " ok\n" );

1157 #i‡
	`deföed
(
POLARSSL_DHM_C
Ë&& deföed(
POLARSSL_FS_IO
)

1158 if–
›t
.
dhm_fûe
 !
NULL
 )

1160 
	`¥ötf
( " . Loading DHMÖarameters..." );

1161 
	`fÊush
–
°dout
 );

1163 if––
ªt
 = 
	`dhm_∑r£_dhmfûe
–&
dhm
, 
›t
.
dhm_fûe
 ) ) != 0 )

1165 
	`¥ötf
( " failed\n ! dhm_parse_dhmfileÑeturned -0x%04X\n\n",

1166 -
ªt
 );

1167 
exô
;

1170 
	`¥ötf
( " ok\n" );

1174 #i‡
	`deföed
(
POLARSSL_SNI
)

1175 if–
›t
.
¢i
 !
NULL
 )

1177 
	`¥ötf
( " . Setting up SNI information..." );

1178 
	`fÊush
–
°dout
 );

1180 if––
¢i_öfo
 = 
	`¢i_∑r£
–
›t
.
¢i
 ) ) =
NULL
 )

1182 
	`¥ötf
( " failed\n" );

1183 
exô
;

1186 
	`¥ötf
( " ok\n" );

1193 
	`¥ötf
–" . Böd o¿t˝://loˇlho°:%-4d/ ...", 
›t
.
£rvî_p‹t
 );

1194 
	`fÊush
–
°dout
 );

1196 if––
ªt
 = 
	`√t_böd
–&
li°í_fd
, 
›t
.
£rvî_addr
,

1197 
›t
.
£rvî_p‹t
 ) ) != 0 )

1199 
	`¥ötf
–" faûed\¿ !Çë_bödÑëu∫ed -0x%x\n\n", -
ªt
 );

1200 
exô
;

1203 
	`¥ötf
( " ok\n" );

1208 
	`¥ötf
( " . Setting upÅhe SSL/TLS structure..." );

1209 
	`fÊush
–
°dout
 );

1211 if––
ªt
 = 
	`s¶_öô
–&
s¶
 ) ) != 0 )

1213 
	`¥ötf
–" faûed\¿ ! s¶_öôÑëu∫ed -0x%x\n\n", -
ªt
 );

1214 
exô
;

1217 
	`s¶_£t_ídpoöt
–&
s¶
, 
SSL_IS_SERVER
 );

1218 
	`s¶_£t_authmode
–&
s¶
, 
›t
.
auth_mode
 );

1220 #i‡
	`deföed
(
POLARSSL_SSL_MAX_FRAGMENT_LENGTH
)

1221 if––
ªt
 = 
	`s¶_£t_max_‰ag_Àn
–&
s¶
, 
›t
.
mÊ_code
 ) ) != 0 )

1223 
	`¥ötf
–" faûed\¿ ! s¶_£t_max_‰ag_À¿ªtu∫ed %d\n\n", 
ªt
 );

1224 
exô
;

1228 #i‡
	`deföed
(
POLARSSL_SSL_ALPN
)

1229 if–
›t
.
Æ≤_°rög
 !
NULL
 )

1230 if––
ªt
 = 
	`s¶_£t_Æ≤_¥Ÿocﬁs
–&
s¶
, 
Æ≤_li°
 ) ) != 0 )

1232 
	`¥ötf
–" faûed\¿ ! s¶_£t_Æ≤_¥Ÿocﬁ†ªtu∫ed %d\n\n", 
ªt
 );

1233 
exô
;

1237 
	`s¶_£t_∫g
–&
s¶
, 
˘r_drbg_øndom
, &
˘r_drbg
 );

1238 
	`s¶_£t_dbg
–&
s¶
, 
my_debug
, 
°dout
 );

1240 #i‡
	`deföed
(
POLARSSL_SSL_CACHE_C
)

1241 if–
›t
.
ˇche_max
 != -1 )

1242 
	`s¶_ˇche_£t_max_íåõs
–&
ˇche
, 
›t
.
ˇche_max
 );

1244 if–
›t
.
ˇche_timeout
 != -1 )

1245 
	`s¶_ˇche_£t_timeout
–&
ˇche
, 
›t
.
ˇche_timeout
 );

1247 
	`s¶_£t_£ssi⁄_ˇche
–&
s¶
, 
s¶_ˇche_gë
, &
ˇche
,

1248 
s¶_ˇche_£t
, &
ˇche
 );

1251 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
)

1252 if––
ªt
 = 
	`s¶_£t_£ssi⁄_tickës
–&
s¶
, 
›t
.
tickës
 ) ) != 0 )

1254 
	`¥ötf
–" faûed\¿ ! s¶_£t_£ssi⁄_tickë†ªtu∫ed %d\n\n", 
ªt
 );

1255 
exô
;

1258 if–
›t
.
tickë_timeout
 != -1 )

1259 
	`s¶_£t_£ssi⁄_tickë_li„time
–&
s¶
, 
›t
.
tickë_timeout
 );

1262 if–
›t
.
f‹˚_cùhîsuôe
[0] !
DFL_FORCE_CIPHER
 )

1263 
	`s¶_£t_cùhîsuôes
–&
s¶
, 
›t
.
f‹˚_cùhîsuôe
 );

1265 if–
›t
.
vîsi⁄_suôes
 !
NULL
 )

1267 
	`s¶_£t_cùhîsuôes_f‹_vîsi⁄
–&
s¶
, 
vîsi⁄_suôes
[0],

1268 
SSL_MAJOR_VERSION_3
,

1269 
SSL_MINOR_VERSION_0
 );

1270 
	`s¶_£t_cùhîsuôes_f‹_vîsi⁄
–&
s¶
, 
vîsi⁄_suôes
[1],

1271 
SSL_MAJOR_VERSION_3
,

1272 
SSL_MINOR_VERSION_1
 );

1273 
	`s¶_£t_cùhîsuôes_f‹_vîsi⁄
–&
s¶
, 
vîsi⁄_suôes
[2],

1274 
SSL_MAJOR_VERSION_3
,

1275 
SSL_MINOR_VERSION_2
 );

1276 
	`s¶_£t_cùhîsuôes_f‹_vîsi⁄
–&
s¶
, 
vîsi⁄_suôes
[3],

1277 
SSL_MAJOR_VERSION_3
,

1278 
SSL_MINOR_VERSION_3
 );

1281 
	`s¶_£t_ª√gŸüti⁄
–&
s¶
, 
›t
.
ª√gŸüti⁄
 );

1282 
	`s¶_Àgacy_ª√gŸüti⁄
–&
s¶
, 
›t
.
Ælow_Àgacy
 );

1283 if–
›t
.
ª√go_dñay
 !
DFL_RENEGO_DELAY
 )

1284 
	`s¶_£t_ª√gŸüti⁄_íf‹˚d
–&
s¶
, 
›t
.
ª√go_dñay
 );

1286 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

1287 if–
	`°rcmp
–
›t
.
ˇ_∑th
, "none" ) != 0 &&

1288 
	`°rcmp
–
›t
.
ˇ_fûe
, "none" ) != 0 )

1290 
	`s¶_£t_ˇ_chaö
–&
s¶
, &
ˇ˚π
, 
NULL
, NULL );

1292 if–
key_˚π_öô
 )

1293 if––
ªt
 = 
	`s¶_£t_own_˚π
–&
s¶
, &
§v˚π
, &
pkey
 ) ) != 0 )

1295 
	`¥ötf
–" faûed\¿ ! s¶_£t_own_˚πÑëu∫ed %d\n\n", 
ªt
 );

1296 
exô
;

1298 if–
key_˚π_öô2
 )

1299 if––
ªt
 = 
	`s¶_£t_own_˚π
–&
s¶
, &
§v˚π2
, &
pkey2
 ) ) != 0 )

1301 
	`¥ötf
–" faûed\¿ ! s¶_£t_own_˚πÑëu∫ed %d\n\n", 
ªt
 );

1302 
exô
;

1306 #i‡
	`deföed
(
POLARSSL_SNI
)

1307 if–
›t
.
¢i
 !
NULL
 )

1308 
	`s¶_£t_¢i
–&
s¶
, 
¢i_ˇŒback
, 
¢i_öfo
 );

1311 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

1312 if–
	`°æí
–
›t
.
psk
 ) !0 && såÀn–›t.
psk_idítôy
 ) != 0 )

1314 
ªt
 = 
	`s¶_£t_psk
–&
s¶
, 
psk
, 
psk_Àn
,

1315 (c⁄° *Ë
›t
.
psk_idítôy
,

1316 
	`°æí
–
›t
.
psk_idítôy
 ) );

1317 if–
ªt
 != 0 )

1319 
	`¥ötf
–" faûed\¿ s¶_£t_pskÑëu∫ed -0x%04X\n\n", - 
ªt
 );

1320 
exô
;

1324 if–
›t
.
psk_li°
 !
NULL
 )

1325 
	`s¶_£t_psk_cb
–&
s¶
, 
psk_ˇŒback
, 
psk_öfo
 );

1328 #i‡
	`deföed
(
POLARSSL_DHM_C
)

1332 #i‡
	`deföed
(
POLARSSL_FS_IO
)

1333 if–
›t
.
dhm_fûe
 !
NULL
 )

1334 
ªt
 = 
	`s¶_£t_dh_∑øm_˘x
–&
s¶
, &
dhm
 );

1337 
ªt
 = 
	`s¶_£t_dh_∑øm
–&
s¶
, 
POLARSSL_DHM_RFC5114_MODP_2048_P
,

1338 
POLARSSL_DHM_RFC5114_MODP_2048_G
 );

1340 if–
ªt
 != 0 )

1342 
	`¥ötf
–" faûed\¿ s¶_£t_dh_∑ømÑëu∫ed -0x%04X\n\n", - 
ªt
 );

1343 
exô
;

1347 if–
›t
.
mö_vîsi⁄
 != -1 )

1348 
	`s¶_£t_mö_vîsi⁄
–&
s¶
, 
SSL_MAJOR_VERSION_3
, 
›t
.
mö_vîsi⁄
 );

1350 if–
›t
.
max_vîsi⁄
 != -1 )

1351 
	`s¶_£t_max_vîsi⁄
–&
s¶
, 
SSL_MAJOR_VERSION_3
, 
›t
.
max_vîsi⁄
 );

1353 
	`¥ötf
( " ok\n" );

1355 
ª£t
:

1356 #ifde‡
POLARSSL_ERROR_C


1357 if–
ªt
 != 0 )

1359 
îr‹_buf
[100];

1360 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
îr‹_buf
, 100 );

1361 
	`¥ötf
("La°Éº‹ was: %d - %s\n\n", 
ªt
, 
îr‹_buf
 );

1365 if–
˛õ¡_fd
 != -1 )

1366 
	`√t_˛o£
–
˛õ¡_fd
 );

1368 
	`s¶_£ssi⁄_ª£t
–&
s¶
 );

1373 
˛õ¡_fd
 = -1;

1375 
	`¥ötf
( " . Waiting foráÑemote connection ..." );

1376 
	`fÊush
–
°dout
 );

1378 if––
ªt
 = 
	`√t_ac˚±
–
li°í_fd
, &
˛õ¡_fd
, 
NULL
 ) ) != 0 )

1380 
	`¥ötf
–" faûed\¿ !Çë_ac˚±Ñëu∫ed -0x%x\n\n", -
ªt
 );

1381 
exô
;

1384 if–
›t
.
nbio
 > 0 )

1385 
ªt
 = 
	`√t_£t_n⁄block
–
˛õ¡_fd
 );

1387 
ªt
 = 
	`√t_£t_block
–
˛õ¡_fd
 );

1388 if–
ªt
 != 0 )

1390 
	`¥ötf
–" faûed\¿ !Çë_£t_“⁄)block(Ëªtu∫ed -0x%x\n\n", -
ªt
 );

1391 
exô
;

1394 if–
›t
.
nbio
 == 2 )

1395 
	`s¶_£t_bio
–&
s¶
, 
my_ªcv
, &
˛õ¡_fd
, 
my_£nd
, &client_fd );

1397 
	`s¶_£t_bio
–&
s¶
, 
√t_ªcv
, &
˛õ¡_fd
, 
√t_£nd
, &client_fd );

1399 
	`¥ötf
( " ok\n" );

1404 
	`¥ötf
( " . PerformingÅhe SSL/TLS handshake..." );

1405 
	`fÊush
–
°dout
 );

1407  ( 
ªt
 = 
	`s¶_h™dshake
–&
s¶
 ) ) != 0 )

1409 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&Ñë !
POLARSSL_ERR_NET_WANT_WRITE
 )

1411 
	`¥ötf
–" faûed\¿ ! s¶_h™dshakêªtu∫ed -0x%x\n\n", -
ªt
 );

1412 
ª£t
;

1416 
	`¥ötf
( " ok\n [ Protocol is %s ]\n [ Ciphersuite is %s ]\n",

1417 
	`s¶_gë_vîsi⁄
–&
s¶
 ), 
	`s¶_gë_cùhîsuôe
( &ssl ) );

1419 #i‡
	`deföed
(
POLARSSL_SSL_ALPN
)

1420 if–
›t
.
Æ≤_°rög
 !
NULL
 )

1422 c⁄° *
Æp
 = 
	`s¶_gë_Æ≤_¥Ÿocﬁ
–&
s¶
 );

1423 
	`¥ötf
( " [ Application Layer Protocol is %s ]\n",

1424 
Æp
 ?álp : "(none)" );

1428 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

1432 
	`¥ötf
( " . VerifyingÖeer X.509 certificate..." );

1434 if––
ªt
 = 
	`s¶_gë_vîify_ªsu…
–&
s¶
 ) ) != 0 )

1436 
	`¥ötf
( " failed\n" );

1438 if–!
	`s¶_gë_≥î_˚π
–&
s¶
 ) )

1439 
	`¥ötf
( " !Ço client certificate sent\n" );

1441 if––
ªt
 & 
BADCERT_EXPIRED
 ) != 0 )

1442 
	`¥ötf
( " ! client certificate hasÉxpired\n" );

1444 if––
ªt
 & 
BADCERT_REVOKED
 ) != 0 )

1445 
	`¥ötf
( " ! client certificate has beenÑevoked\n" );

1447 if––
ªt
 & 
BADCERT_NOT_TRUSTED
 ) != 0 )

1448 
	`¥ötf
( " ! self-signed orÇot signed byáÅrusted CA\n" );

1450 
	`¥ötf
( "\n" );

1453 
	`¥ötf
( " ok\n" );

1455 if–
	`s¶_gë_≥î_˚π
–&
s¶
 ) )

1457 
	`¥ötf
( " . Peer certificate information ...\n" );

1458 
	`x509_¸t_öfo
–(*Ë
buf
, ( buf ) - 1, " ",

1459 
	`s¶_gë_≥î_˚π
–&
s¶
 ) );

1460 
	`¥ötf
–"%s\n", 
buf
 );

1467 
	`¥ötf
( " < Read from client:" );

1468 
	`fÊush
–
°dout
 );

1472 
Àn
 = –
buf
 ) - 1;

1473 
	`mem£t
–
buf
, 0, ( buf ) );

1474 
ªt
 = 
	`s¶_ªad
–&
s¶
, 
buf
, 
Àn
 );

1476 if–
ªt
 =
POLARSSL_ERR_NET_WANT_READ
 ||Ñë =
POLARSSL_ERR_NET_WANT_WRITE
 )

1479 if–
ªt
 <= 0 )

1481  
ªt
 )

1483 
POLARSSL_ERR_SSL_PEER_CLOSE_NOTIFY
:

1484 
	`¥ötf
( " connection was closed gracefully\n" );

1487 
POLARSSL_ERR_NET_CONN_RESET
:

1488 
	`¥ötf
( " connection wasÑeset byÖeer\n" );

1492 
	`¥ötf
–" s¶_ªadÑëu∫ed -0x%x\n", -
ªt
 );

1499 if–
	`s¶_gë_byãs_avaû
–&
s¶
 ) == 0 )

1501 
Àn
 = 
ªt
;

1502 
buf
[
Àn
] = '\0';

1503 
	`¥ötf
–" %d byã†ªad\n\n%s\n", 
Àn
, (*Ë
buf
 );

1507 
exåa_Àn
, 
‹i_Àn
;

1508 *
œrgî_buf
;

1510 
‹i_Àn
 = 
ªt
;

1511 
exåa_Àn
 = 
	`s¶_gë_byãs_avaû
–&
s¶
 );

1513 
œrgî_buf
 = 
	`pﬁ¨s¶_mÆloc
–
‹i_Àn
 + 
exåa_Àn
 + 1 );

1514 if–
œrgî_buf
 =
NULL
 )

1516 
	`¥ötf
( " ! memoryállocation failed\n" );

1517 
ªt
 = 1;

1518 
exô
;

1521 
	`mem£t
–
œrgî_buf
, 0, 
‹i_Àn
 + 
exåa_Àn
 );

1522 
	`mem˝y
–
œrgî_buf
, 
buf
, 
‹i_Àn
 );

1525 
ªt
 = 
	`s¶_ªad
–&
s¶
, 
œrgî_buf
 + 
‹i_Àn
, 
exåa_Àn
 );

1526 if–
ªt
 !
exåa_Àn
 ||

1527 
	`s¶_gë_byãs_avaû
–&
s¶
 ) != 0 )

1529 
	`¥ötf
( " ! ssl_read failed on cached data\n" );

1530 
ªt
 = 1;

1531 
exô
;

1534 
œrgî_buf
[
‹i_Àn
 + 
exåa_Àn
] = '\0';

1535 
	`¥ötf
( " %u bytesÑead (%u + %u)\n\n%s\n",

1536 
‹i_Àn
 + 
exåa_Àn
, ori_len,Éxtra_len,

1537 (*Ë
œrgî_buf
 );

1539 
	`pﬁ¨s¶_‰ì
–
œrgî_buf
 );

1543 if–
	`memcmp
–
buf
, "SERVERQUIT", 10 ) == 0 )

1545 
ªt
 = 0;

1546 
exô
;

1549 if–
ªt
 > 0 )

1557 
	`¥ötf
( " > WriteÅo client:" );

1558 
	`fÊush
–
°dout
 );

1560 
Àn
 = 
	`•rötf
–(*Ë
buf
, 
HTTP_RESPONSE
,

1561 
	`s¶_gë_cùhîsuôe
–&
s¶
 ) );

1563  
wrôãn
 = 0, 
‰ags
 = 0; wrôã¿< 
Àn
; wrôã¿+
ªt
, frags++ )

1565  ( 
ªt
 = 
	`s¶_wrôe
–&
s¶
, 
buf
 + 
wrôãn
, 
Àn
 - written ) ) <= 0 )

1567 if–
ªt
 =
POLARSSL_ERR_NET_CONN_RESET
 )

1569 
	`¥ötf
( " failed\n !Öeer closedÅhe connection\n\n" );

1570 
ª£t
;

1573 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&Ñë !
POLARSSL_ERR_NET_WANT_WRITE
 )

1575 
	`¥ötf
–" faûed\¿ ! s¶_wrôêªtu∫ed %d\n\n", 
ªt
 );

1576 
exô
;

1581 
buf
[
wrôãn
] = '\0';

1582 
	`¥ötf
–" %d byã†wrôã¿ö %d føgmíts\n\n%s\n", 
wrôãn
, 
‰ags
, (*Ë
buf
 );

1584 if–
›t
.
ª√gŸüã
 )

1590 
	`¥ötf
( " . RequestionÑenegotiation..." );

1591 
	`fÊush
–
°dout
 );

1592  ( 
ªt
 = 
	`s¶_ª√gŸüã
–&
s¶
 ) ) != 0 )

1594 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&

1595 
ªt
 !
POLARSSL_ERR_NET_WANT_WRITE
 )

1597 
	`¥ötf
–" faûed\¿ ! s¶_ª√gŸüãÑëu∫ed %d\n\n", 
ªt
 );

1598 
exô
;

1608 if––
ªt
 = 
	`s¶_ªad
–&
s¶
, 
buf
, 0 ) ) != 0 )

1610 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&

1611 
ªt
 !
POLARSSL_ERR_NET_WANT_WRITE
 )

1613 
	`¥ötf
–" faûed\¿ ! s¶_ªadÑëu∫ed %d\n\n", 
ªt
 );

1617 if–
ªt
 =
POLARSSL_ERR_SSL_UNEXPECTED_MESSAGE
 )

1618 
ª£t
;

1620 
exô
;

1624 
	`¥ötf
( " ok\n" );

1627 
	`¥ötf
( " . ClosingÅhe connection..." );

1629  ( 
ªt
 = 
	`s¶_˛o£_nŸify
–&
s¶
 ) ) < 0 )

1631 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&

1632 
ªt
 !
POLARSSL_ERR_NET_WANT_WRITE
 )

1634 
	`¥ötf
–" faûed\¿ ! s¶_˛o£_nŸifyÑëu∫ed %d\n\n", 
ªt
 );

1635 
ª£t
;

1639 
	`¥ötf
( " ok\n" );

1641 
ªt
 = 0;

1642 
ª£t
;

1644 
exô
:

1646 #ifde‡
POLARSSL_ERROR_C


1647 if–
ªt
 != 0 )

1649 
îr‹_buf
[100];

1650 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
îr‹_buf
, 100 );

1651 
	`¥ötf
("La°Éº‹ was: -0x%X - %s\n\n", -
ªt
, 
îr‹_buf
 );

1655 if–
˛õ¡_fd
 != -1 )

1656 
	`√t_˛o£
–
˛õ¡_fd
 );

1658 #i‡
	`deföed
(
POLARSSL_DHM_C
Ë&& deföed(
POLARSSL_FS_IO
)

1659 
	`dhm_‰ì
–&
dhm
 );

1661 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
)

1662 
	`x509_¸t_‰ì
–&
ˇ˚π
 );

1663 
	`x509_¸t_‰ì
–&
§v˚π
 );

1664 
	`pk_‰ì
–&
pkey
 );

1665 
	`x509_¸t_‰ì
–&
§v˚π2
 );

1666 
	`pk_‰ì
–&
pkey2
 );

1668 #i‡
	`deföed
(
POLARSSL_SNI
)

1669 
	`¢i_‰ì
–
¢i_öfo
 );

1671 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED
)

1672 
	`psk_‰ì
–
psk_öfo
 );

1674 #i‡
	`deföed
(
POLARSSL_DHM_C
Ë&& deföed(
POLARSSL_FS_IO
)

1675 
	`dhm_‰ì
–&
dhm
 );

1678 
	`s¶_‰ì
–&
s¶
 );

1679 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

1680 
	`íå›y_‰ì
–&
íå›y
 );

1682 #i‡
	`deföed
(
POLARSSL_SSL_CACHE_C
)

1683 
	`s¶_ˇche_‰ì
–&
ˇche
 );

1686 #i‡
	`deföed
(
POLARSSL_MEMORY_BUFFER_ALLOC_C
)

1687 #i‡
	`deföed
(
POLARSSL_MEMORY_DEBUG
)

1688 
	`mem‹y_buf„r_Æloc_°©us
();

1690 
	`mem‹y_buf„r_Æloc_‰ì
();

1693 #i‡
	`deföed
(
_WIN32
)

1694 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

1695 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

1699 if–
ªt
 < 0 )

1700 
ªt
 = 1;

1702 –
ªt
 );

1703 
	}
}

1705 
	gPOLARSSL_SSL_SRV_C
 && 
	gPOLARSSL_NET_C
 && 
	gPOLARSSL_RSA_C
 &&

1706 
	gPOLARSSL_CTR_DRBG_C
 */

	@polarssl/programs/test/benchmark.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dlib.h
>

34 
	~<°dio.h
>

36 
	~"pﬁ¨s¶/timög.h
"

38 
	~"pﬁ¨s¶/md4.h
"

39 
	~"pﬁ¨s¶/md5.h
"

40 
	~"pﬁ¨s¶/rùemd160.h
"

41 
	~"pﬁ¨s¶/sha1.h
"

42 
	~"pﬁ¨s¶/sha256.h
"

43 
	~"pﬁ¨s¶/sha512.h
"

44 
	~"pﬁ¨s¶/¨c4.h
"

45 
	~"pﬁ¨s¶/des.h
"

46 
	~"pﬁ¨s¶/´s.h
"

47 
	~"pﬁ¨s¶/blowfish.h
"

48 
	~"pﬁ¨s¶/ˇmñlü.h
"

49 
	~"pﬁ¨s¶/gcm.h
"

50 
	~"pﬁ¨s¶/ccm.h
"

51 
	~"pﬁ¨s¶/havege.h
"

52 
	~"pﬁ¨s¶/˘r_drbg.h
"

53 
	~"pﬁ¨s¶/hmac_drbg.h
"

54 
	~"pﬁ¨s¶/rß.h
"

55 
	~"pﬁ¨s¶/dhm.h
"

56 
	~"pﬁ¨s¶/ecdß.h
"

57 
	~"pﬁ¨s¶/ecdh.h
"

58 
	~"pﬁ¨s¶/îr‹.h
"

60 #i‡
deföed
 
_MSC_VER
 && !deföed 
¢¥ötf


61 
	#¢¥ötf
 
_¢¥ötf


	)

64 
	#BUFSIZE
 1024

	)

65 
	#HEADER_FORMAT
 " %-24†: "

	)

66 
	#TITLE_LEN
 25

	)

68 #i‡!
deföed
(
POLARSSL_TIMING_C
)

69 
	$maö
–
¨gc
, *
¨gv
[] )

71 ((Ë
¨gc
);

72 ((Ë
¨gv
);

74 
	`¥ötf
("POLARSSL_TIMING_CÇot defined.\n");

76 
	}
}

79 
	$myønd
–*
∫g_°©e
, *
ouçut
, 
size_t
 
Àn
 )

81 
size_t
 
u£_Àn
;

82 
∫d
;

84 if–
∫g_°©e
 !
NULL
 )

85 
∫g_°©e
 = 
NULL
;

87  
Àn
 > 0 )

89 
u£_Àn
 = 
Àn
;

90 if–
u£_Àn
 > () )

91 
u£_Àn
 = ();

93 
∫d
 = 
	`ønd
();

94 
	`mem˝y
–
ouçut
, &
∫d
, 
u£_Àn
 );

95 
ouçut
 +
u£_Àn
;

96 
Àn
 -
u£_Àn
;

100 
	}
}

102 
	#TIME_AND_TSC
–
TITLE
, 
CODE
 ) \

104 
i
, 
j
, 
tsc
; \

106 
	`¥ötf
–
HEADER_FORMAT
, 
TITLE
 ); \

107 
	`fÊush
–
°dout
 ); \

109 
	`£t_Æ¨m
( 1 ); \

110  
i
 = 1; ! 
Æ¨med
; i++ ) \

112 
CODE
; \

115 
tsc
 = 
	`h¨d˛ock
(); \

116  
j
 = 0; j < 1024; j++ ) \

118 
CODE
; \

121 
	`¥ötf
–"%9lu Kb/s, %9lu cy˛es/byã\n", 
i
 * 
BUFSIZE
 / 1024, \

122 –
	`h¨d˛ock
(Ë- 
tsc
 ) / ( 
j
 * 
BUFSIZE
 ) ); \

123 }  0 )

	)

125 #i‡
deföed
(
POLARSSL_ERROR_C
)

126 
	#PRINT_ERROR
 \

127 
	`pﬁ¨s¶_°ªº‹
–
ªt
, ( * )
tmp
, (Åmp ) ); \

128 
	`¥ötf
–"FAILED: %s\n", 
tmp
 );

	)

130 
	#PRINT_ERROR
 \

131 
	`¥ötf
–"FAILED: -0x%04x\n", -
ªt
 );

	)

134 
	#TIME_PUBLIC
–
TITLE
, 
TYPE
, 
CODE
 ) \

136 
i
; \

137 
ªt
; \

139 
	`¥ötf
–
HEADER_FORMAT
, 
TITLE
 ); \

140 
	`fÊush
–
°dout
 ); \

141 
	`£t_Æ¨m
( 3 ); \

143 
ªt
 = 0; \

144  
i
 = 1; ! 
Æ¨med
 && ! 
ªt
 ; i++ ) \

146 
CODE
; \

149 if–
ªt
 != 0 ) \

151 
PRINT_ERROR
; \

154 
	`¥ötf
–"%9lu " 
TYPE
 "/s\n", 
i
 / 3 ); \

155 }  0 )

	)

157 
	gbuf
[
BUFSIZE
];

160 
	mmd4
, 
	mmd5
, 
	mrùemd160
, 
	msha1
, 
	msha256
, 
	msha512
,

161 
	m¨c4
, 
	mdes3
, 
	mdes
, 
	m´s_cbc
, 
	m´s_gcm
, 
	m´s_ccm
, 
	mˇmñlü
, 
	mblowfish
,

162 
	mhavege
, 
	m˘r_drbg
, 
	mhmac_drbg
,

163 
	mrß
, 
	mdhm
, 
	mecdß
, 
	mecdh
;

164 } 
	ttodo_li°
;

166 
	#OPTIONS
 \

170 "rß, dhm,Écdß,Écdh.\n"

	)

172 
	$maö
–
¨gc
, *
¨gv
[] )

174 
keysize
, 
i
;

175 
tmp
[200];

176 
tôÀ
[
TITLE_LEN
];

177 
todo_li°
 
todo
;

179 if–
¨gc
 == 1 )

180 
	`mem£t
–&
todo
, 1, (Åodo ) );

183 
	`mem£t
–&
todo
, 0, (Åodo ) );

185  
i
 = 1; i < 
¨gc
; i++ )

187 if–
	`°rcmp
–
¨gv
[
i
], "md4" ) == 0 )

188 
todo
.
md4
 = 1;

189 if–
	`°rcmp
–
¨gv
[
i
], "md5" ) == 0 )

190 
todo
.
md5
 = 1;

191 if–
	`°rcmp
–
¨gv
[
i
], "ripemd160" ) == 0 )

192 
todo
.
rùemd160
 = 1;

193 if–
	`°rcmp
–
¨gv
[
i
], "sha1" ) == 0 )

194 
todo
.
sha1
 = 1;

195 if–
	`°rcmp
–
¨gv
[
i
], "sha256" ) == 0 )

196 
todo
.
sha256
 = 1;

197 if–
	`°rcmp
–
¨gv
[
i
], "sha512" ) == 0 )

198 
todo
.
sha512
 = 1;

199 if–
	`°rcmp
–
¨gv
[
i
], "arc4" ) == 0 )

200 
todo
.
¨c4
 = 1;

201 if–
	`°rcmp
–
¨gv
[
i
], "des3" ) == 0 )

202 
todo
.
des3
 = 1;

203 if–
	`°rcmp
–
¨gv
[
i
], "des" ) == 0 )

204 
todo
.
des
 = 1;

205 if–
	`°rcmp
–
¨gv
[
i
], "aes_cbc" ) == 0 )

206 
todo
.
´s_cbc
 = 1;

207 if–
	`°rcmp
–
¨gv
[
i
], "aes_gcm" ) == 0 )

208 
todo
.
´s_gcm
 = 1;

209 if–
	`°rcmp
–
¨gv
[
i
], "aes_ccm" ) == 0 )

210 
todo
.
´s_ccm
 = 1;

211 if–
	`°rcmp
–
¨gv
[
i
], "camellia" ) == 0 )

212 
todo
.
ˇmñlü
 = 1;

213 if–
	`°rcmp
–
¨gv
[
i
], "blowfish" ) == 0 )

214 
todo
.
blowfish
 = 1;

215 if–
	`°rcmp
–
¨gv
[
i
], "havege" ) == 0 )

216 
todo
.
havege
 = 1;

217 if–
	`°rcmp
–
¨gv
[
i
], "ctr_drbg" ) == 0 )

218 
todo
.
˘r_drbg
 = 1;

219 if–
	`°rcmp
–
¨gv
[
i
], "hmac_drbg" ) == 0 )

220 
todo
.
hmac_drbg
 = 1;

221 if–
	`°rcmp
–
¨gv
[
i
], "rsa" ) == 0 )

222 
todo
.
rß
 = 1;

223 if–
	`°rcmp
–
¨gv
[
i
], "dhm" ) == 0 )

224 
todo
.
dhm
 = 1;

225 if–
	`°rcmp
–
¨gv
[
i
], "ecdsa" ) == 0 )

226 
todo
.
ecdß
 = 1;

227 if–
	`°rcmp
–
¨gv
[
i
], "ecdh" ) == 0 )

228 
todo
.
ecdh
 = 1;

231 
	`¥ötf
–"Uƒecognized o±i⁄: %s\n", 
¨gv
[
i
] );

232 
	`¥ötf
–"AvaûabÀ o±i⁄s: " 
OPTIONS
 );

237 
	`¥ötf
( "\n" );

239 
	`mem£t
–
buf
, 0xAA, ( buf ) );

240 
	`mem£t
–
tmp
, 0xBB, (Åmp ) );

242 #i‡
	`deföed
(
POLARSSL_MD4_C
)

243 if–
todo
.
md4
 )

244 
	`TIME_AND_TSC
–"MD4", 
	`md4
–
buf
, 
BUFSIZE
, 
tmp
 ) );

247 #i‡
	`deföed
(
POLARSSL_MD5_C
)

248 if–
todo
.
md5
 )

249 
	`TIME_AND_TSC
–"MD5", 
	`md5
–
buf
, 
BUFSIZE
, 
tmp
 ) );

252 #i‡
	`deföed
(
POLARSSL_RIPEMD160_C
)

253 if–
todo
.
rùemd160
 )

254 
	`TIME_AND_TSC
–"RIPEMD160", 
	`rùemd160
–
buf
, 
BUFSIZE
, 
tmp
 ) );

257 #i‡
	`deföed
(
POLARSSL_SHA1_C
)

258 if–
todo
.
sha1
 )

259 
	`TIME_AND_TSC
–"SHA-1", 
	`sha1
–
buf
, 
BUFSIZE
, 
tmp
 ) );

262 #i‡
	`deföed
(
POLARSSL_SHA256_C
)

263 if–
todo
.
sha256
 )

264 
	`TIME_AND_TSC
–"SHA-256", 
	`sha256
–
buf
, 
BUFSIZE
, 
tmp
, 0 ) );

267 #i‡
	`deföed
(
POLARSSL_SHA512_C
)

268 if–
todo
.
sha512
 )

269 
	`TIME_AND_TSC
–"SHA-512", 
	`sha512
–
buf
, 
BUFSIZE
, 
tmp
, 0 ) );

272 #i‡
	`deföed
(
POLARSSL_ARC4_C
)

273 if–
todo
.
¨c4
 )

275 
¨c4_c⁄ãxt
 
¨c4
;

276 
	`¨c4_öô
–&
¨c4
 );

277 
	`¨c4_£tup
–&
¨c4
, 
tmp
, 32 );

278 
	`TIME_AND_TSC
–"ARC4", 
	`¨c4_¸y±
–&
¨c4
, 
BUFSIZE
, 
buf
, buf ) );

279 
	`¨c4_‰ì
–&
¨c4
 );

283 #i‡
	`deföed
(
POLARSSL_DES_C
Ë&& deföed(
POLARSSL_CIPHER_MODE_CBC
)

284 if–
todo
.
des3
 )

286 
des3_c⁄ãxt
 
des3
;

287 
	`des3_öô
–&
des3
 );

288 
	`des3_£t3key_íc
–&
des3
, 
tmp
 );

289 
	`TIME_AND_TSC
( "3DES",

290 
	`des3_¸y±_cbc
–&
des3
, 
DES_ENCRYPT
, 
BUFSIZE
, 
tmp
, 
buf
, buf ) );

291 
	`des3_‰ì
–&
des3
 );

294 if–
todo
.
des
 )

296 
des_c⁄ãxt
 
des
;

297 
	`des_öô
–&
des
 );

298 
	`des_£tkey_íc
–&
des
, 
tmp
 );

299 
	`TIME_AND_TSC
( "DES",

300 
	`des_¸y±_cbc
–&
des
, 
DES_ENCRYPT
, 
BUFSIZE
, 
tmp
, 
buf
, buf ) );

301 
	`des_‰ì
–&
des
 );

305 #i‡
	`deföed
(
POLARSSL_AES_C
)

306 #i‡
	`deföed
(
POLARSSL_CIPHER_MODE_CBC
)

307 if–
todo
.
´s_cbc
 )

309 
´s_c⁄ãxt
 
´s
;

310 
	`´s_öô
–&
´s
 );

311  
keysize
 = 128; keysize <= 256; keysize += 64 )

313 
	`¢¥ötf
–
tôÀ
, –tôÀ ), "AES-CBC-%d", 
keysize
 );

315 
	`mem£t
–
buf
, 0, ( buf ) );

316 
	`mem£t
–
tmp
, 0, (Åmp ) );

317 
	`´s_£tkey_íc
–&
´s
, 
tmp
, 
keysize
 );

319 
	`TIME_AND_TSC
–
tôÀ
,

320 
	`´s_¸y±_cbc
–&
´s
, 
AES_ENCRYPT
, 
BUFSIZE
, 
tmp
, 
buf
, buf ) );

322 
	`´s_‰ì
–&
´s
 );

325 #i‡
	`deföed
(
POLARSSL_GCM_C
)

326 if–
todo
.
´s_gcm
 )

328 
gcm_c⁄ãxt
 
gcm
;

329  
keysize
 = 128; keysize <= 256; keysize += 64 )

331 
	`¢¥ötf
–
tôÀ
, –tôÀ ), "AES-GCM-%d", 
keysize
 );

333 
	`mem£t
–
buf
, 0, ( buf ) );

334 
	`mem£t
–
tmp
, 0, (Åmp ) );

335 
	`gcm_öô
–&
gcm
, 
POLARSSL_CIPHER_ID_AES
, 
tmp
, 
keysize
 );

337 
	`TIME_AND_TSC
–
tôÀ
,

338 
	`gcm_¸y±_™d_èg
–&
gcm
, 
GCM_ENCRYPT
, 
BUFSIZE
, 
tmp
,

339 12, 
NULL
, 0, 
buf
, buf, 16, 
tmp
 ) );

341 
	`gcm_‰ì
–&
gcm
 );

345 #i‡
	`deföed
(
POLARSSL_CCM_C
)

346 if–
todo
.
´s_ccm
 )

348 
ccm_c⁄ãxt
 
ccm
;

349  
keysize
 = 128; keysize <= 256; keysize += 64 )

351 
	`¢¥ötf
–
tôÀ
, –tôÀ ), "AES-CCM-%d", 
keysize
 );

353 
	`mem£t
–
buf
, 0, ( buf ) );

354 
	`mem£t
–
tmp
, 0, (Åmp ) );

355 
	`ccm_öô
–&
ccm
, 
POLARSSL_CIPHER_ID_AES
, 
tmp
, 
keysize
 );

357 
	`TIME_AND_TSC
–
tôÀ
,

358 
	`ccm_í¸y±_™d_èg
–&
ccm
, 
BUFSIZE
, 
tmp
,

359 12, 
NULL
, 0, 
buf
, buf, 
tmp
, 16 ) );

361 
	`ccm_‰ì
–&
ccm
 );

367 #i‡
	`deföed
(
POLARSSL_CAMELLIA_C
Ë&& deföed(
POLARSSL_CIPHER_MODE_CBC
)

368 if–
todo
.
ˇmñlü
 )

370 
ˇmñlü_c⁄ãxt
 
ˇmñlü
;

371 
	`ˇmñlü_öô
–&
ˇmñlü
 );

372  
keysize
 = 128; keysize <= 256; keysize += 64 )

374 
	`¢¥ötf
–
tôÀ
, –tôÀ ), "CAMELLIA-CBC-%d", 
keysize
 );

376 
	`mem£t
–
buf
, 0, ( buf ) );

377 
	`mem£t
–
tmp
, 0, (Åmp ) );

378 
	`ˇmñlü_£tkey_íc
–&
ˇmñlü
, 
tmp
, 
keysize
 );

380 
	`TIME_AND_TSC
–
tôÀ
,

381 
	`ˇmñlü_¸y±_cbc
–&
ˇmñlü
, 
CAMELLIA_ENCRYPT
,

382 
BUFSIZE
, 
tmp
, 
buf
, buf ) );

384 
	`ˇmñlü_‰ì
–&
ˇmñlü
 );

388 #i‡
	`deföed
(
POLARSSL_BLOWFISH_C
Ë&& deföed(
POLARSSL_CIPHER_MODE_CBC
)

389 if–
todo
.
blowfish
 )

391 
blowfish_c⁄ãxt
 
blowfish
;

392 
	`blowfish_öô
–&
blowfish
 );

394  
keysize
 = 128; keysize <= 256; keysize += 64 )

396 
	`¢¥ötf
–
tôÀ
, –tôÀ ), "BLOWFISH-CBC-%d", 
keysize
 );

398 
	`mem£t
–
buf
, 0, ( buf ) );

399 
	`mem£t
–
tmp
, 0, (Åmp ) );

400 
	`blowfish_£tkey
–&
blowfish
, 
tmp
, 
keysize
 );

402 
	`TIME_AND_TSC
–
tôÀ
,

403 
	`blowfish_¸y±_cbc
–&
blowfish
, 
BLOWFISH_ENCRYPT
, 
BUFSIZE
,

404 
tmp
, 
buf
, buf ) );

407 
	`blowfish_‰ì
–&
blowfish
 );

411 #i‡
	`deföed
(
POLARSSL_HAVEGE_C
)

412 if–
todo
.
havege
 )

414 
havege_°©e
 
hs
;

415 
	`havege_öô
–&
hs
 );

416 
	`TIME_AND_TSC
–"HAVEGE", 
	`havege_øndom
–&
hs
, 
buf
, 
BUFSIZE
 ) );

417 
	`havege_‰ì
–&
hs
 );

421 #i‡
	`deföed
(
POLARSSL_CTR_DRBG_C
)

422 if–
todo
.
˘r_drbg
 )

424 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

426 if–
	`˘r_drbg_öô
–&
˘r_drbg
, 
myønd
, 
NULL
, NULL, 0 ) != 0 )

427 
	`exô
(1);

428 
	`TIME_AND_TSC
( "CTR_DRBG (NOPR)",

429 if–
	`˘r_drbg_øndom
–&
˘r_drbg
, 
buf
, 
BUFSIZE
 ) != 0 )

430 
	`exô
(1) );

432 if–
	`˘r_drbg_öô
–&
˘r_drbg
, 
myønd
, 
NULL
, NULL, 0 ) != 0 )

433 
	`exô
(1);

434 
	`˘r_drbg_£t_¥edi˘i⁄_ªsi°™˚
–&
˘r_drbg
, 
CTR_DRBG_PR_ON
 );

435 
	`TIME_AND_TSC
( "CTR_DRBG (PR)",

436 if–
	`˘r_drbg_øndom
–&
˘r_drbg
, 
buf
, 
BUFSIZE
 ) != 0 )

437 
	`exô
(1) );

438 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

442 #i‡
	`deföed
(
POLARSSL_HMAC_DRBG_C
)

443 if–
todo
.
hmac_drbg
 )

445 
hmac_drbg_c⁄ãxt
 
hmac_drbg
;

446 c⁄° 
md_öfo_t
 *
md_öfo
;

448 #i‡
	`deföed
(
POLARSSL_SHA1_C
)

449 if––
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
POLARSSL_MD_SHA1
 ) ) =
NULL
 )

450 
	`exô
(1);

452 if–
	`hmac_drbg_öô
–&
hmac_drbg
, 
md_öfo
, 
myønd
, 
NULL
, NULL, 0 ) != 0 )

453 
	`exô
(1);

454 
	`TIME_AND_TSC
( "HMAC_DRBG SHA-1 (NOPR)",

455 if–
	`hmac_drbg_øndom
–&
hmac_drbg
, 
buf
, 
BUFSIZE
 ) != 0 )

456 
	`exô
(1) );

457 
	`hmac_drbg_‰ì
–&
hmac_drbg
 );

459 if–
	`hmac_drbg_öô
–&
hmac_drbg
, 
md_öfo
, 
myønd
, 
NULL
, NULL, 0 ) != 0 )

460 
	`exô
(1);

461 
	`hmac_drbg_£t_¥edi˘i⁄_ªsi°™˚
–&
hmac_drbg
,

462 
POLARSSL_HMAC_DRBG_PR_ON
 );

463 
	`TIME_AND_TSC
( "HMAC_DRBG SHA-1 (PR)",

464 if–
	`hmac_drbg_øndom
–&
hmac_drbg
, 
buf
, 
BUFSIZE
 ) != 0 )

465 
	`exô
(1) );

466 
	`hmac_drbg_‰ì
–&
hmac_drbg
 );

469 #i‡
	`deföed
(
POLARSSL_SHA256_C
)

470 if––
md_öfo
 = 
	`md_öfo_‰om_ty≥
–
POLARSSL_MD_SHA256
 ) ) =
NULL
 )

471 
	`exô
(1);

473 if–
	`hmac_drbg_öô
–&
hmac_drbg
, 
md_öfo
, 
myønd
, 
NULL
, NULL, 0 ) != 0 )

474 
	`exô
(1);

475 
	`TIME_AND_TSC
( "HMAC_DRBG SHA-256 (NOPR)",

476 if–
	`hmac_drbg_øndom
–&
hmac_drbg
, 
buf
, 
BUFSIZE
 ) != 0 )

477 
	`exô
(1) );

478 
	`hmac_drbg_‰ì
–&
hmac_drbg
 );

480 if–
	`hmac_drbg_öô
–&
hmac_drbg
, 
md_öfo
, 
myønd
, 
NULL
, NULL, 0 ) != 0 )

481 
	`exô
(1);

482 
	`hmac_drbg_£t_¥edi˘i⁄_ªsi°™˚
–&
hmac_drbg
,

483 
POLARSSL_HMAC_DRBG_PR_ON
 );

484 
	`TIME_AND_TSC
( "HMAC_DRBG SHA-256 (PR)",

485 if–
	`hmac_drbg_øndom
–&
hmac_drbg
, 
buf
, 
BUFSIZE
 ) != 0 )

486 
	`exô
(1) );

487 
	`hmac_drbg_‰ì
–&
hmac_drbg
 );

492 #i‡
	`deföed
(
POLARSSL_RSA_C
Ë&& deföed(
POLARSSL_GENPRIME
)

493 if–
todo
.
rß
 )

495 
rß_c⁄ãxt
 
rß
;

496  
keysize
 = 1024; keysize <= 4096; keysize *= 2 )

498 
	`¢¥ötf
–
tôÀ
, –tôÀ ), "RSA-%d", 
keysize
 );

500 
	`rß_öô
–&
rß
, 
RSA_PKCS_V15
, 0 );

501 
	`rß_gí_key
–&
rß
, 
myønd
, 
NULL
, 
keysize
, 65537 );

503 
	`TIME_PUBLIC
–
tôÀ
, "Öublic",

504 
buf
[0] = 0;

505 
ªt
 = 
	`rß_public
–&
rß
, 
buf
, buf ) );

507 
	`TIME_PUBLIC
–
tôÀ
, "private",

508 
buf
[0] = 0;

509 
ªt
 = 
	`rß_¥iv©e
–&
rß
, 
myønd
, 
NULL
, 
buf
, buf ) );

511 
	`rß_‰ì
–&
rß
 );

516 #i‡
	`deföed
(
POLARSSL_DHM_C
Ë&& deföed(
POLARSSL_BIGNUM_C
)

517 if–
todo
.
dhm
 )

519 
	#DHM_SIZES
 3

	)

520 
dhm_sizes
[
DHM_SIZES
] = { 1024, 2048, 3072 };

521 c⁄° *
dhm_P
[
DHM_SIZES
] = {

522 
POLARSSL_DHM_RFC5114_MODP_1024_P
,

523 
POLARSSL_DHM_RFC3526_MODP_2048_P
,

524 
POLARSSL_DHM_RFC3526_MODP_3072_P
,

526 c⁄° *
dhm_G
[
DHM_SIZES
] = {

527 
POLARSSL_DHM_RFC5114_MODP_1024_G
,

528 
POLARSSL_DHM_RFC3526_MODP_2048_G
,

529 
POLARSSL_DHM_RFC3526_MODP_3072_G
,

532 
dhm_c⁄ãxt
 
dhm
;

533 
size_t
 
ﬁí
;

534  
i
 = 0; i < 
DHM_SIZES
; i++ )

536 
	`dhm_öô
–&
dhm
 );

538 if–
	`mpi_ªad_°rög
–&
dhm
.
P
, 16, 
dhm_P
[
i
] ) != 0 ||

539 
	`mpi_ªad_°rög
–&
dhm
.
G
, 16, 
dhm_G
[
i
] ) != 0 )

541 
	`exô
( 1 );

544 
dhm
.
Àn
 = 
	`mpi_size
–&dhm.
P
 );

545 
	`dhm_make_public
–&
dhm
, (Ëdhm.
Àn
, 
buf
, dhm.Àn, 
myønd
, 
NULL
 );

546 if–
	`mpi_c›y
–&
dhm
.
GY
, &dhm.
GX
 ) != 0 )

547 
	`exô
( 1 );

549 
	`¢¥ötf
–
tôÀ
, –tôÀ ), "DHE-%d", 
dhm_sizes
[
i
] );

550 
	`TIME_PUBLIC
–
tôÀ
, "handshake",

551 
ﬁí
 = –
buf
 );

552 
ªt
 |
	`dhm_make_public
–&
dhm
, (Ëdhm.
Àn
, 
buf
, dhm.len,

553 
myønd
, 
NULL
 );

554 
ªt
 |
	`dhm_ˇlc_£¸ë
–&
dhm
, 
buf
, &
ﬁí
, 
myønd
, 
NULL
 ) );

556 
	`¢¥ötf
–
tôÀ
, –tôÀ ), "DH-%d", 
dhm_sizes
[
i
] );

557 
	`TIME_PUBLIC
–
tôÀ
, "handshake",

558 
ﬁí
 = –
buf
 );

559 
ªt
 |
	`dhm_ˇlc_£¸ë
–&
dhm
, 
buf
, &
ﬁí
, 
myønd
, 
NULL
 ) );

561 
	`dhm_‰ì
–&
dhm
 );

566 #i‡
	`deföed
(
POLARSSL_ECDSA_C
)

567 if–
todo
.
ecdß
 )

569 
ecdß_c⁄ãxt
 
ecdß
;

570 c⁄° 
e˝_curve_öfo
 *
curve_öfo
;

571 
size_t
 
sig_Àn
;

573 
	`mem£t
–
buf
, 0x2A, ( buf ) );

575  
curve_öfo
 = 
	`e˝_curve_li°
();

576 
curve_öfo
->
gΩ_id
 !
POLARSSL_ECP_DP_NONE
;

577 
curve_öfo
++ )

579 
	`ecdß_öô
–&
ecdß
 );

581 if–
	`ecdß_gíkey
–&
ecdß
, 
curve_öfo
->
gΩ_id
, 
myønd
, 
NULL
 ) != 0 )

582 
	`exô
( 1 );

584 
	`¢¥ötf
–
tôÀ
, (Åitle ), "ECDSA-%s",

585 
curve_öfo
->
«me
 );

586 
	`TIME_PUBLIC
–
tôÀ
, "sign",

587 
ªt
 = 
	`ecdß_wrôe_sig«tuª
–&
ecdß
, 
buf
, 
curve_öfo
->
size
,

588 
tmp
, &
sig_Àn
, 
myønd
, 
NULL
 ) );

590 
	`TIME_PUBLIC
–
tôÀ
, "verify",

591 
ªt
 = 
	`ecdß_ªad_sig«tuª
–&
ecdß
, 
buf
, 
curve_öfo
->
size
,

592 
tmp
, 
sig_Àn
 ) );

594 
	`ecdß_‰ì
–&
ecdß
 );

599 #i‡
	`deföed
(
POLARSSL_ECDH_C
)

600 if–
todo
.
ecdh
 )

602 
ecdh_c⁄ãxt
 
ecdh
;

603 c⁄° 
e˝_curve_öfo
 *
curve_öfo
;

604 
size_t
 
ﬁí
;

606  
curve_öfo
 = 
	`e˝_curve_li°
();

607 
curve_öfo
->
gΩ_id
 !
POLARSSL_ECP_DP_NONE
;

608 
curve_öfo
++ )

610 
	`ecdh_öô
–&
ecdh
 );

612 if–
	`e˝_u£_known_dp
–&
ecdh
.
gΩ
, 
curve_öfo
->
gΩ_id
 ) != 0 ||

613 
	`ecdh_make_public
–&
ecdh
, &
ﬁí
, 
buf
, ( buf),

614 
myønd
, 
NULL
 ) != 0 ||

615 
	`e˝_c›y
–&
ecdh
.
Qp
, &ecdh.
Q
 ) != 0 )

617 
	`exô
( 1 );

620 
	`¢¥ötf
–
tôÀ
, (Åitle ), "ECDHE-%s",

621 
curve_öfo
->
«me
 );

622 
	`TIME_PUBLIC
–
tôÀ
, "handshake",

623 
ªt
 |
	`ecdh_make_public
–&
ecdh
, &
ﬁí
, 
buf
, ( buf),

624 
myønd
, 
NULL
 );

625 
ªt
 |
	`ecdh_ˇlc_£¸ë
–&
ecdh
, &
ﬁí
, 
buf
, ( buf ),

626 
myønd
, 
NULL
 ) );

628 
	`¢¥ötf
–
tôÀ
, (Åitle ), "ECDH-%s",

629 
curve_öfo
->
«me
 );

630 
	`TIME_PUBLIC
–
tôÀ
, "handshake",

631 
ªt
 |
	`ecdh_ˇlc_£¸ë
–&
ecdh
, &
ﬁí
, 
buf
, ( buf ),

632 
myønd
, 
NULL
 ) );

633 
	`ecdh_‰ì
–&
ecdh
 );

637 
	`¥ötf
( "\n" );

639 #i‡
	`deföed
(
_WIN32
)

640 
	`¥ötf
( " Press EnterÅoÉxitÅhisÖrogram.\n" );

641 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

645 
	}
}

	@polarssl/programs/test/o_p_test.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

34 
	~<°dlib.h
>

35 
	~<uni°d.h
>

36 
	~<sys/°©.h
>

38 
	~<›ís¶/rß.h
>

39 #i‚de‡
OPENSSL_NO_ENGINE


40 
	~<›ís¶/ígöe.h
>

42 
	~<›ís¶/≥m.h
>

43 
	~<›ís¶/bio.h
>

45 
	~"pﬁ¨s¶/pk.h
"

46 
	~"pﬁ¨s¶/x509.h
"

47 
	~"pﬁ¨s¶/íå›y.h
"

48 
	~"pﬁ¨s¶/˘r_drbg.h
"

50 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_RSA_C
) || \

51 !
deföed
(
POLARSSL_PK_PARSE_C
Ë|| !
	$deföed
(
POLARSSL_FS_IO
)

52 
	$maö
–
¨gc
, *
¨gv
[] )

54 ((Ë
¨gc
);

55 ((Ë
¨gv
);

57 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_RSA_Cánd/or "

60 
	}
}

62 
	$maö
–
¨gc
, *
¨gv
[] )

64 
ªt
;

65 
FILE
 *
key_fûe
;

66 
size_t
 
ﬁí
;

67 
pk_c⁄ãxt
 
p_pk
;

68 
rß_c⁄ãxt
 *
p_rß
;

69 
RSA
 *
o_rß
;

70 
íå›y_c⁄ãxt
 
íå›y
;

71 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

72 
öput
[1024];

73 
p_pub_í¸y±ed
[512];

74 
o_pub_í¸y±ed
[512];

75 
p_pub_de¸y±ed
[512];

76 
o_pub_de¸y±ed
[512];

77 
p_¥iv_í¸y±ed
[512];

78 
o_¥iv_í¸y±ed
[512];

79 
p_¥iv_de¸y±ed
[512];

80 
o_¥iv_de¸y±ed
[512];

81 c⁄° *
≥rs
 = "o_p_test_example";

83 
	`íå›y_öô
–&
íå›y
 );

84 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

85 (c⁄° *Ë
≥rs
,

86 
	`°æí
–
≥rs
 ) ) ) != 0 )

88 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed %d\n", 
ªt
 );

89 
exô
;

91 
	`ERR_lﬂd_¸y±o_°rögs
();

93 
ªt
 = 1;

95 if–
¨gc
 != 3 )

97 
	`¥ötf
( "usage: o_p_test <keyfile withÖrivate_key> <string of max 100 characters>\n" );

99 #ifde‡
WIN32


100 
	`¥ötf
( "\n" );

103 
exô
;

106 
	`¥ötf
–" . RódögÖriv©êkey from %†ötÿPﬁ¨SSL ...", 
¨gv
[1] );

107 
	`fÊush
–
°dout
 );

109 
	`pk_öô
–&
p_pk
 );

110 if–
	`pk_∑r£_keyfûe
–&
p_pk
, 
¨gv
[1], 
NULL
 ) != 0 )

112 
ªt
 = 1;

113 
	`¥ötf
( " failed\n ! CouldÇotÜoad key.\n\n" );

114 
exô
;

117 if–!
	`pk_ˇn_do
–&
p_pk
, 
POLARSSL_PK_RSA
 ) )

119 
ªt
 = 1;

120 
	`¥ötf
( " failed\n ! Key isÇotán RSA key\n" );

121 
exô
;

124 
p_rß
 = 
	`pk_rß
–
p_pk
 );

126 
	`¥ötf
( "Öassed\n");

128 
	`¥ötf
–" . RódögÖriv©êkey from %†ötÿO≥nSSL ...", 
¨gv
[1] );

129 
	`fÊush
–
°dout
 );

131 
key_fûe
 = 
	`f›í
–
¨gv
[1], "r" );

132 
o_rß
 = 
	`PEM_ªad_RSAPriv©eKey
(
key_fûe
, 0, 0, 0);

133 
	`f˛o£
(
key_fûe
);

134 if–
o_rß
 =
NULL
 )

136 
ªt
 = 1;

137 
	`¥ötf
( " failed\n ! CouldÇotÜoad key.\n\n" );

138 
exô
;

141 
	`¥ötf
( "Öassed\n");

142 
	`¥ötf
( "\n" );

144 if–
	`°æí
–
¨gv
[1] ) > 100 )

146 
	`¥ötf
( " Input dataÜargerÅhan 100 characters.\n\n" );

147 
exô
;

150 
	`mem˝y
–
öput
, 
¨gv
[2], 
	`°æí
(árgv[2] ) );

155 
	`¥ötf
( " . GeneratingÅhe RSAÉncrypted value with PolarSSL (RSA_PUBLIC) ..." );

156 
	`fÊush
–
°dout
 );

158 if––
ªt
 = 
	`rß_pkcs1_í¸y±
–
p_rß
, 
˘r_drbg_øndom
, &
˘r_drbg
, 
RSA_PUBLIC
, 
	`°æí
–
¨gv
[2] ), 
öput
, 
p_pub_í¸y±ed
 ) ) != 0 )

160 
	`¥ötf
–" faûed\¿ !Ñß_pkcs1_í¸y±Ñëu∫ed %d\n\n", 
ªt
 );

161 
exô
;

164 
	`¥ötf
( "Öassed\n");

166 
	`¥ötf
( " . GeneratingÅhe RSAÉncrypted value with OpenSSL (PUBLIC) ..." );

167 
	`fÊush
–
°dout
 );

169 if––
ªt
 = 
	`RSA_public_í¸y±
–
	`°æí
–
¨gv
[2] ), 
öput
, 
o_pub_í¸y±ed
, 
o_rß
, 
RSA_PKCS1_PADDING
 ) ) == -1 )

171 
code
 = 
	`ERR_gë_îr‹
();

172 
	`¥ötf
–" faûed\¿ ! RSA_public_í¸y±Ñëu∫ed %d %s\n\n", 
ªt
, 
	`ERR_îr‹_°rög
–
code
, 
NULL
 ) );

173 
exô
;

176 
	`¥ötf
( "Öassed\n");

181 
	`¥ötf
( " . GeneratingÅhe RSAÉncrypted value with PolarSSL (RSA_PRIVATE) ..." );

182 
	`fÊush
–
°dout
 );

184 if––
ªt
 = 
	`rß_pkcs1_í¸y±
–
p_rß
, 
˘r_drbg_øndom
, &
˘r_drbg
, 
RSA_PRIVATE
, 
	`°æí
–
¨gv
[2] ), 
öput
, 
p_¥iv_í¸y±ed
 ) ) != 0 )

186 
	`¥ötf
–" faûed\¿ !Ñß_pkcs1_í¸y±Ñëu∫ed %d\n\n", 
ªt
 );

187 
exô
;

190 
	`¥ötf
( "Öassed\n");

192 
	`¥ötf
( " . GeneratingÅhe RSAÉncrypted value with OpenSSL (PRIVATE) ..." );

193 
	`fÊush
–
°dout
 );

195 if––
ªt
 = 
	`RSA_¥iv©e_í¸y±
–
	`°æí
–
¨gv
[2] ), 
öput
, 
o_¥iv_í¸y±ed
, 
o_rß
, 
RSA_PKCS1_PADDING
 ) ) == -1 )

197 
code
 = 
	`ERR_gë_îr‹
();

198 
	`¥ötf
–" faûed\¿ ! RSA_¥iv©e_í¸y±Ñëu∫ed %d %s\n\n", 
ªt
, 
	`ERR_îr‹_°rög
–
code
, 
NULL
 ) );

199 
exô
;

202 
	`¥ötf
( "Öassed\n");

204 
	`¥ötf
( "\n" );

209 
	`¥ötf
( " . GeneratingÅhe RSA decrypted value for OpenSSL (PUBLIC) with PolarSSL (PRIVATE) ..." );

210 
	`fÊush
–
°dout
 );

212 if––
ªt
 = 
	`rß_pkcs1_de¸y±
–
p_rß
, 
˘r_drbg_øndom
, &
˘r_drbg
, 
RSA_PRIVATE
, &
ﬁí
, 
o_pub_í¸y±ed
, 
p_pub_de¸y±ed
, 1024 ) ) != 0 )

214 
	`¥ötf
–" faûed\¿ !Ñß_pkcs1_de¸y±Ñëu∫ed %d\n\n", 
ªt
 );

217 
	`¥ötf
( "Öassed\n");

219 
	`¥ötf
( " . GeneratingÅhe RSA decrypted value for PolarSSL (PUBLIC) with OpenSSL (PRIVATE) ..." );

220 
	`fÊush
–
°dout
 );

222 if––
ªt
 = 
	`RSA_¥iv©e_de¸y±
–
p_rß
->
Àn
, 
p_pub_í¸y±ed
, 
o_pub_de¸y±ed
, 
o_rß
, 
RSA_PKCS1_PADDING
 ) ) == -1 )

224 
code
 = 
	`ERR_gë_îr‹
();

225 
	`¥ötf
–" faûed\¿ ! RSA_¥iv©e_de¸y±Ñëu∫ed %d %s\n\n", 
ªt
, 
	`ERR_îr‹_°rög
–
code
, 
NULL
 ) );

228 
	`¥ötf
( "Öassed\n");

233 
	`¥ötf
( " . GeneratingÅhe RSA decrypted value for OpenSSL (PRIVATE) with PolarSSL (PUBLIC) ..." );

234 
	`fÊush
–
°dout
 );

236 if––
ªt
 = 
	`rß_pkcs1_de¸y±
–
p_rß
, 
NULL
, NULL, 
RSA_PUBLIC
, &
ﬁí
, 
o_¥iv_í¸y±ed
, 
p_¥iv_de¸y±ed
, 1024 ) ) != 0 )

238 
	`¥ötf
–" faûed\¿ !Ñß_pkcs1_de¸y±Ñëu∫ed %d\n\n", 
ªt
 );

241 
	`¥ötf
( "Öassed\n");

243 
	`¥ötf
( " . GeneratingÅhe RSA decrypted value for PolarSSL (PRIVATE) with OpenSSL (PUBLIC) ..." );

244 
	`fÊush
–
°dout
 );

246 if––
ªt
 = 
	`RSA_public_de¸y±
–
p_rß
->
Àn
, 
p_¥iv_í¸y±ed
, 
o_¥iv_de¸y±ed
, 
o_rß
, 
RSA_PKCS1_PADDING
 ) ) == -1 )

248 
code
 = 
	`ERR_gë_îr‹
();

249 
	`¥ötf
–" faûed\¿ ! RSA_public_de¸y±Ñëu∫ed %d %s\n\n", 
ªt
, 
	`ERR_îr‹_°rög
–
code
, 
NULL
 ) );

252 
	`¥ötf
( "Öassed\n");

254 
	`¥ötf
( "\n" );

255 
	`¥ötf
–"Såög vÆuê(O≥nSSL Publi¯En¸y±, Pﬁ¨SSL Priv©êDe¸y±): '%s'\n", 
p_pub_de¸y±ed
 );

256 
	`¥ötf
–"Såög vÆuê(Pﬁ¨SSL Publi¯En¸y±, O≥nSSL Priv©êDe¸y±): '%s'\n", 
o_pub_de¸y±ed
 );

257 
	`¥ötf
–"Såög vÆuê(O≥nSSL Priv©êEn¸y±, Pﬁ¨SSL Publi¯De¸y±): '%s'\n", 
p_¥iv_de¸y±ed
 );

258 
	`¥ötf
–"Såög vÆuê(Pﬁ¨SSL Priv©êEn¸y±, O≥nSSL Publi¯De¸y±): '%s'\n", 
o_¥iv_de¸y±ed
 );

260 
exô
:

261 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

262 
	`íå›y_‰ì
–&
íå›y
 );

264 #ifde‡
WIN32


265 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

266 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

269 –
ªt
 );

270 
	}
}

272 
	gPOLARSSL_PK_PARSE_C
 && 
	gPOLARSSL_FS_IO
 */

	@polarssl/programs/test/selftest.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

35 
	~"pﬁ¨s¶/íå›y.h
"

36 
	~"pﬁ¨s¶/hmac_drbg.h
"

37 
	~"pﬁ¨s¶/˘r_drbg.h
"

38 
	~"pﬁ¨s¶/dhm.h
"

39 
	~"pﬁ¨s¶/gcm.h
"

40 
	~"pﬁ¨s¶/ccm.h
"

41 
	~"pﬁ¨s¶/md2.h
"

42 
	~"pﬁ¨s¶/md4.h
"

43 
	~"pﬁ¨s¶/md5.h
"

44 
	~"pﬁ¨s¶/rùemd160.h
"

45 
	~"pﬁ¨s¶/sha1.h
"

46 
	~"pﬁ¨s¶/sha256.h
"

47 
	~"pﬁ¨s¶/sha512.h
"

48 
	~"pﬁ¨s¶/¨c4.h
"

49 
	~"pﬁ¨s¶/des.h
"

50 
	~"pﬁ¨s¶/´s.h
"

51 
	~"pﬁ¨s¶/ˇmñlü.h
"

52 
	~"pﬁ¨s¶/ba£64.h
"

53 
	~"pﬁ¨s¶/bignum.h
"

54 
	~"pﬁ¨s¶/rß.h
"

55 
	~"pﬁ¨s¶/x509.h
"

56 
	~"pﬁ¨s¶/xãa.h
"

57 
	~"pﬁ¨s¶/pkcs5.h
"

58 
	~"pﬁ¨s¶/pbkdf2.h
"

59 
	~"pﬁ¨s¶/e˝.h
"

60 
	~"pﬁ¨s¶/timög.h
"

62 #i‡
deföed
(
POLARSSL_MEMORY_BUFFER_ALLOC_C
)

63 
	~"pﬁ¨s¶/mem‹y.h
"

66 
	$maö
–
¨gc
, *
¨gv
[] )

68 
ªt
 = 0, 
v
;

69 #i‡
	`deföed
(
POLARSSL_MEMORY_BUFFER_ALLOC_C
)

70 
buf
[1000000];

73 if–
¨gc
 =2 && 
	`°rcmp
–
¨gv
[1], "-quiet" ) == 0 )

74 
v
 = 0;

77 
v
 = 1;

78 
	`¥ötf
( "\n" );

81 #i‡
	`deföed
(
POLARSSL_SELF_TEST
)

83 #i‡
	`deföed
(
POLARSSL_MEMORY_BUFFER_ALLOC_C
)

84 
	`mem‹y_buf„r_Æloc_öô
–
buf
, (buf) );

87 #i‡
	`deföed
(
POLARSSL_MD2_C
)

88 if––
ªt
 = 
	`md2_£lf_ã°
–
v
 ) ) != 0 )

89 –
ªt
 );

92 #i‡
	`deföed
(
POLARSSL_MD4_C
)

93 if––
ªt
 = 
	`md4_£lf_ã°
–
v
 ) ) != 0 )

94 –
ªt
 );

97 #i‡
	`deföed
(
POLARSSL_MD5_C
)

98 if––
ªt
 = 
	`md5_£lf_ã°
–
v
 ) ) != 0 )

99 –
ªt
 );

102 #i‡
	`deföed
(
POLARSSL_RIPEMD160_C
)

103 if––
ªt
 = 
	`rùemd160_£lf_ã°
–
v
 ) ) != 0 )

104 –
ªt
 );

107 #i‡
	`deföed
(
POLARSSL_SHA1_C
)

108 if––
ªt
 = 
	`sha1_£lf_ã°
–
v
 ) ) != 0 )

109 –
ªt
 );

112 #i‡
	`deföed
(
POLARSSL_SHA256_C
)

113 if––
ªt
 = 
	`sha256_£lf_ã°
–
v
 ) ) != 0 )

114 –
ªt
 );

117 #i‡
	`deföed
(
POLARSSL_SHA512_C
)

118 if––
ªt
 = 
	`sha512_£lf_ã°
–
v
 ) ) != 0 )

119 –
ªt
 );

122 #i‡
	`deföed
(
POLARSSL_ARC4_C
)

123 if––
ªt
 = 
	`¨c4_£lf_ã°
–
v
 ) ) != 0 )

124 –
ªt
 );

127 #i‡
	`deföed
(
POLARSSL_DES_C
)

128 if––
ªt
 = 
	`des_£lf_ã°
–
v
 ) ) != 0 )

129 –
ªt
 );

132 #i‡
	`deföed
(
POLARSSL_AES_C
)

133 if––
ªt
 = 
	`´s_£lf_ã°
–
v
 ) ) != 0 )

134 –
ªt
 );

137 #i‡
	`deföed
(
POLARSSL_GCM_C
Ë&& deföed(
POLARSSL_AES_C
)

138 if––
ªt
 = 
	`gcm_£lf_ã°
–
v
 ) ) != 0 )

139 –
ªt
 );

142 #i‡
	`deföed
(
POLARSSL_CCM_C
Ë&& deföed(
POLARSSL_AES_C
)

143 if––
ªt
 = 
	`ccm_£lf_ã°
–
v
 ) ) != 0 )

144 –
ªt
 );

147 #i‡
	`deföed
(
POLARSSL_BASE64_C
)

148 if––
ªt
 = 
	`ba£64_£lf_ã°
–
v
 ) ) != 0 )

149 –
ªt
 );

152 #i‡
	`deföed
(
POLARSSL_BIGNUM_C
)

153 if––
ªt
 = 
	`mpi_£lf_ã°
–
v
 ) ) != 0 )

154 –
ªt
 );

157 #i‡
	`deföed
(
POLARSSL_RSA_C
)

158 if––
ªt
 = 
	`rß_£lf_ã°
–
v
 ) ) != 0 )

159 –
ªt
 );

162 #i‡
	`deföed
(
POLARSSL_X509_USE_C
)

163 if––
ªt
 = 
	`x509_£lf_ã°
–
v
 ) ) != 0 )

164 –
ªt
 );

167 #i‡
	`deföed
(
POLARSSL_XTEA_C
)

168 if––
ªt
 = 
	`xãa_£lf_ã°
–
v
 ) ) != 0 )

169 –
ªt
 );

172 #i‡
	`deföed
(
POLARSSL_CAMELLIA_C
)

173 if––
ªt
 = 
	`ˇmñlü_£lf_ã°
–
v
 ) ) != 0 )

174 –
ªt
 );

177 #i‡
	`deföed
(
POLARSSL_CTR_DRBG_C
)

178 if––
ªt
 = 
	`˘r_drbg_£lf_ã°
–
v
 ) ) != 0 )

179 –
ªt
 );

182 #i‡
	`deföed
(
POLARSSL_HMAC_DRBG_C
)

183 if––
ªt
 = 
	`hmac_drbg_£lf_ã°
–
v
 ) ) != 0 )

184 –
ªt
 );

187 #i‡
	`deföed
(
POLARSSL_ECP_C
)

188 if––
ªt
 = 
	`e˝_£lf_ã°
–
v
 ) ) != 0 )

189 –
ªt
 );

192 #i‡
	`deföed
(
POLARSSL_DHM_C
)

193 if––
ªt
 = 
	`dhm_£lf_ã°
–
v
 ) ) != 0 )

194 –
ªt
 );

197 #i‡
	`deföed
(
POLARSSL_ENTROPY_C
)

198 if––
ªt
 = 
	`íå›y_£lf_ã°
–
v
 ) ) != 0 )

199 –
ªt
 );

204 #i‡
	`deföed
(
POLARSSL_PBKDF2_C
)

205 if––
ªt
 = 
	`pbkdf2_£lf_ã°
–
v
 ) ) != 0 )

206 –
ªt
 );

208 #i‡
	`deföed
(
POLARSSL_PKCS5_C
)

209 if––
ªt
 = 
	`pkcs5_£lf_ã°
–
v
 ) ) != 0 )

210 –
ªt
 );

215 #i‡
__löux__
 && 
	`deföed
(
POLARSSL_TIMING_C
)

216 if––
ªt
 = 
	`timög_£lf_ã°
–
v
 ) ) != 0 )

217 –
ªt
 );

221 
	`¥ötf
( " POLARSSL_SELF_TESTÇot defined.\n" );

224 if–
v
 != 0 )

226 #i‡
	`deföed
(
POLARSSL_MEMORY_BUFFER_ALLOC_C
Ë&& deföed(
POLARSSL_MEMORY_DEBUG
)

227 
	`mem‹y_buf„r_Æloc_°©us
();

230 
	`¥ötf
( " [ AllÅestsÖassed ]\n\n" );

231 #i‡
	`deföed
(
_WIN32
)

232 
	`¥ötf
( " Press EnterÅoÉxitÅhisÖrogram.\n" );

233 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

236 #i‡
	`deföed
(
POLARSSL_MEMORY_BUFFER_ALLOC_C
)

237 
	`mem‹y_buf„r_Æloc_‰ì
();

240 –
ªt
 );

241 
	}
}

	@polarssl/programs/test/ssl_cert_test.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dio.h
>

35 #i‡!
deföed
(
POLARSSL_RSA_C
Ë|| !deföed(
POLARSSL_X509_CRT_PARSE_C
) || \

36 !
deföed
(
POLARSSL_FS_IO
Ë|| !
	$deföed
(
POLARSSL_X509_CRL_PARSE_C
)

37 
	$maö
–
¨gc
, *
¨gv
[] )

39 ((Ë
¨gc
);

40 ((Ë
¨gv
);

42 
	`¥ötf
("POLARSSL_RSA_Cánd/or POLARSSL_X509_CRT_PARSE_C "

46 
	}
}

49 
	~"pﬁ¨s¶/˚πs.h
"

50 
	~"pﬁ¨s¶/x509_¸t.h
"

52 #i‡
deföed
 
_MSC_VER
 && !deföed 
¢¥ötf


53 
	#¢¥ötf
 
_¢¥ötf


	)

57 
	#MAX_CLIENT_CERTS
 8

	)

59 c⁄° *
	g˛õ¡_˚πifiˇãs
[
MAX_CLIENT_CERTS
] =

71 c⁄° *
	g˛õ¡_¥iv©e_keys
[
MAX_CLIENT_CERTS
] =

83 
	$maö
–
¨gc
, *
¨gv
[] )

85 
ªt
, 
i
;

86 
x509_¸t
 
ˇ˚π
;

87 
x509_¸l
 
¸l
;

88 
buf
[10240];

90 ((Ë
¨gc
);

91 ((Ë
¨gv
);

93 
	`x509_¸t_öô
–&
ˇ˚π
 );

94 
	`x509_¸l_öô
–&
¸l
 );

99 
	`¥ötf
( "\n . LoadingÅhe CAÑoot certificate ..." );

100 
	`fÊush
–
°dout
 );

106 
ªt
 = 
	`x509_¸t_∑r£_fûe
–&
ˇ˚π
, "ssl/test-ca/test-ca.crt" );

107 if–
ªt
 != 0 )

109 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£_fûêªtu∫ed %d\n\n", 
ªt
 );

110 
exô
;

113 
	`¥ötf
( " ok\n" );

115 
	`x509_¸t_öfo
–
buf
, 1024, "CRT: ", &
ˇ˚π
 );

116 
	`¥ötf
("%s\n", 
buf
 );

121 
	`¥ötf
( " . LoadingÅhe CRL ..." );

122 
	`fÊush
–
°dout
 );

124 
ªt
 = 
	`x509_¸l_∑r£_fûe
–&
¸l
, "ssl/test-ca/crl.pem" );

125 if–
ªt
 != 0 )

127 
	`¥ötf
–" faûed\¿ ! x509_¸l_∑r£_fûêªtu∫ed %d\n\n", 
ªt
 );

128 
exô
;

131 
	`¥ötf
( " ok\n" );

133 
	`x509_¸l_öfo
–
buf
, 1024, "CRL: ", &
¸l
 );

134 
	`¥ötf
("%s\n", 
buf
 );

136  
i
 = 0; i < 
MAX_CLIENT_CERTS
; i++ )

141 
«me
[512];

142 
Êags
;

143 
x509_¸t
 
˛i˚π
;

144 
pk_c⁄ãxt
 
pk
;

146 
	`x509_¸t_öô
–&
˛i˚π
 );

147 
	`pk_öô
–&
pk
 );

149 
	`¢¥ötf
(
«me
, 512, "s¶/ã°-ˇ/%s", 
˛õ¡_˚πifiˇãs
[
i
]);

151 
	`¥ötf
–" . LﬂdögÅhê˛õ¡ cîtifiˇã %s...", 
«me
 );

152 
	`fÊush
–
°dout
 );

154 
ªt
 = 
	`x509_¸t_∑r£_fûe
–&
˛i˚π
, 
«me
 );

155 if–
ªt
 != 0 )

157 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£_fûêªtu∫ed %d\n\n", 
ªt
 );

158 
exô
;

161 
	`¥ötf
( " ok\n" );

166 
	`¥ötf
( " . VerifyÅhe client certificate with CA certificate..." );

167 
	`fÊush
–
°dout
 );

169 
ªt
 = 
	`x509_¸t_vîify
–&
˛i˚π
, &
ˇ˚π
, &
¸l
, 
NULL
, &
Êags
, NULL,

170 
NULL
 );

171 if–
ªt
 != 0 )

173 if–
ªt
 =
POLARSSL_ERR_X509_CERT_VERIFY_FAILED
 )

175 if–
Êags
 & 
BADCERT_CN_MISMATCH
 )

176 
	`¥ötf
( " CN_MISMATCH " );

177 if–
Êags
 & 
BADCERT_EXPIRED
 )

178 
	`¥ötf
( " EXPIRED " );

179 if–
Êags
 & 
BADCERT_REVOKED
 )

180 
	`¥ötf
( " REVOKED " );

181 if–
Êags
 & 
BADCERT_NOT_TRUSTED
 )

182 
	`¥ötf
( " NOT_TRUSTED " );

183 if–
Êags
 & 
BADCRL_NOT_TRUSTED
 )

184 
	`¥ötf
( " CRL_NOT_TRUSTED " );

185 if–
Êags
 & 
BADCRL_EXPIRED
 )

186 
	`¥ötf
( " CRL_EXPIRED " );

188 
	`¥ötf
–" faûed\¿ ! x509_¸t_vîifyÑëu∫ed %d\n\n", 
ªt
 );

189 
exô
;

193 
	`¥ötf
( " ok\n" );

198 
	`¢¥ötf
(
«me
, 512, "s¶/ã°-ˇ/%s", 
˛õ¡_¥iv©e_keys
[
i
]);

200 
	`¥ötf
–" . LﬂdögÅhê˛õ¡Öriv©êkey %s...", 
«me
 );

201 
	`fÊush
–
°dout
 );

203 
ªt
 = 
	`pk_∑r£_keyfûe
–&
pk
, 
«me
, 
NULL
 );

204 if–
ªt
 != 0 )

206 
	`¥ötf
–" faûed\¿ !Ök_∑r£_keyfûêªtu∫ed %d\n\n", 
ªt
 );

207 
exô
;

210 
	`¥ötf
( " ok\n" );

215 
	`¥ötf
( " . VerifyÅhe client certificate withÖrivate key..." );

216 
	`fÊush
–
°dout
 );

220 if–! 
	`pk_ˇn_do
–&
˛i˚π
.
pk
, 
POLARSSL_PK_RSA
 ) )

222 
	`¥ötf
( " failed\n ! certificate's key isÇot RSA\n\n" );

223 
ªt
 = 
POLARSSL_ERR_X509_FEATURE_UNAVAILABLE
;

224 
exô
;

227 
ªt
 = 
	`mpi_cmp_mpi
(&
	`pk_rß
–
pk
 )->
N
, &pk_rß–
˛i˚π
.pk )->N);

228 if–
ªt
 != 0 )

230 
	`¥ötf
–" faûed\¿ ! mpi_cmp_mpòf‹ NÑëu∫ed %d\n\n", 
ªt
 );

231 
exô
;

234 
ªt
 = 
	`mpi_cmp_mpi
(&
	`pk_rß
–
pk
 )->
E
, &pk_rß–
˛i˚π
.pk )->E);

235 if–
ªt
 != 0 )

237 
	`¥ötf
–" faûed\¿ ! mpi_cmp_mpòf‹ EÑëu∫ed %d\n\n", 
ªt
 );

238 
exô
;

241 
ªt
 = 
	`rß_check_¥ivkey
–
	`pk_rß
–
pk
 ) );

242 if–
ªt
 != 0 )

244 
	`¥ötf
–" faûed\¿ !Ñß_check_¥ivkeyÑëu∫ed %d\n\n", 
ªt
 );

245 
exô
;

248 
	`¥ötf
( " ok\n" );

250 
	`x509_¸t_‰ì
–&
˛i˚π
 );

251 
	`pk_‰ì
–&
pk
 );

254 
exô
:

255 
	`x509_¸t_‰ì
–&
ˇ˚π
 );

256 
	`x509_¸l_‰ì
–&
¸l
 );

258 #i‡
	`deföed
(
_WIN32
)

259 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

260 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

263 –
ªt
 );

264 
	}
}

266 
	gPOLARSSL_X509_CRL_PARSE_C
 */

	@polarssl/programs/test/ssl_test.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dlib.h
>

34 
	~<°dio.h
>

36 
	~"pﬁ¨s¶/√t.h
"

37 
	~"pﬁ¨s¶/s¶.h
"

38 
	~"pﬁ¨s¶/íå›y.h
"

39 
	~"pﬁ¨s¶/˘r_drbg.h
"

40 
	~"pﬁ¨s¶/˚πs.h
"

41 #i‡
deföed
(
POLARSSL_TIMING_C
)

42 
	~"pﬁ¨s¶/timög.h
"

45 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_ENTROPY_C
) || \

46 !
deföed
(
POLARSSL_SSL_TLS_C
Ë|| !deföed(
POLARSSL_SSL_SRV_C
) || \

47 !
deföed
(
POLARSSL_SSL_CLI_C
Ë|| !deföed(
POLARSSL_NET_C
) || \

48 !
deföed
(
POLARSSL_RSA_C
Ë|| !deföed(
POLARSSL_CTR_DRBG_C
) || \

49 !
	$deföed
(
POLARSSL_X509_CRT_PARSE_C
)

50 
	$maö
–
¨gc
, *
¨gv
[] )

52 ((Ë
¨gc
);

53 ((Ë
¨gv
);

55 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_ENTROPY_Cánd/or "

61 
	}
}

64 
	#OPMODE_NONE
 0

	)

65 
	#OPMODE_CLIENT
 1

	)

66 
	#OPMODE_SERVER
 2

	)

68 
	#IOMODE_BLOCK
 0

	)

69 
	#IOMODE_NONBLOCK
 1

	)

71 
	#COMMAND_READ
 1

	)

72 
	#COMMAND_WRITE
 2

	)

73 
	#COMMAND_BOTH
 3

	)

75 
	#DFL_OPMODE
 
OPMODE_NONE


	)

76 
	#DFL_IOMODE
 
IOMODE_BLOCK


	)

77 
	#DFL_SERVER_NAME
 "loˇlho°"

	)

78 
	#DFL_SERVER_PORT
 4433

	)

79 
	#DFL_COMMAND
 
COMMAND_READ


	)

80 
	#DFL_BUFFER_SIZE
 1024

	)

81 
	#DFL_MAX_BYTES
 0

	)

82 
	#DFL_DEBUG_LEVEL
 0

	)

83 
	#DFL_CONN_TIMEOUT
 0

	)

84 
	#DFL_MAX_CONNECTIONS
 0

	)

85 
	#DFL_SESSION_REUSE
 1

	)

86 
	#DFL_SESSION_LIFETIME
 86400

	)

87 
	#DFL_FORCE_CIPHER
 0

	)

89 
	g£rvî_fd
 = -1;

94 
	s›ti⁄s


96 
	m›mode
;

97 
	miomode
;

98 c⁄° *
	m£rvî_«me
;

99 
	m£rvî_p‹t
;

100 
	mcomm™d
;

101 
	mbuf„r_size
;

102 
	mmax_byãs
;

103 
	mdebug_Àvñ
;

104 #i‡
deföed
(
POLARSSL_TIMING_C
)

105 
	mc⁄n_timeout
;

107 
	mmax_c⁄√˘i⁄s
;

108 
	m£ssi⁄_ªu£
;

109 
	m£ssi⁄_li„time
;

110 
	mf‹˚_cùhîsuôe
[2];

117 
	$l˝pm5
–*
°©e
 )

119 
u
, 
v
;

121 
u
 = 
v
 = 
°©e
[4] ^ 1;

122 
°©e
[
u
 & 3] ^= u;

123 
u
 ^(
v
 << 12) ^ (v >> 12);

124 
u
 ^
v
 * 
°©e
[0]; v >>= 8;

125 
u
 ^
v
 * 
°©e
[1]; v >>= 8;

126 
u
 ^
v
 * 
°©e
[2]; v >>= 8;

127 
u
 ^
v
 * 
°©e
[3];

128 
u
 &= 0xFFFFFFFF;

129 
°©e
[4] = 
u
;

131 –
u
 );

132 
	}
}

134 
	$my_debug
–*
˘x
, 
Àvñ
, c⁄° *
°r
 )

136 if–
Àvñ
 < ((
›ti⁄s
 *Ë
˘x
)->
debug_Àvñ
 )

137 
	`Ârötf
–
°dîr
, "%s", 
°r
 );

138 
	}
}

143 
	$s¶_ã°
–
›ti⁄s
 *
›t
 )

145 
ªt
, 
i
;

146 
˛õ¡_fd
 = -1;

147 
byãs_to_ªad
;

148 
byãs_to_wrôe
;

149 
off£t_to_ªad
 = 0;

150 
off£t_to_wrôe
 = 0;

152 
nb_ªad
;

153 
nb_wrôãn
;

155 
ªad_°©e
[5];

156 
wrôe_°©e
[5];

158 *
ªad_buf
 = 
NULL
;

159 *
wrôe_buf
 = 
NULL
;

161 c⁄° *
≥rs
 = "ssl_test";

163 #i‡
	`deföed
(
POLARSSL_TIMING_C
)

164 
hr_time
 
t
;

166 
íå›y_c⁄ãxt
 
íå›y
;

167 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

168 
s¶_c⁄ãxt
 
s¶
;

169 
x509_¸t
 
§v˚π
;

170 
pk_c⁄ãxt
 
pkey
;

172 
ªt
 = 1;

174 
	`mem£t
–&
s¶
, 0, (
s¶_c⁄ãxt
) );

175 
	`íå›y_öô
–&
íå›y
 );

176 
	`x509_¸t_öô
–&
§v˚π
 );

177 
	`pk_öô
–&
pkey
 );

179 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

180 (c⁄° *Ë
≥rs
,

181 
	`°æí
–
≥rs
 ) ) ) != 0 )

183 
	`¥ötf
–" ! cå_drbg_öôÑëu∫ed %d\n", 
ªt
 );

184 
exô
;

187 #i‡
	`deföed
(
POLARSSL_TIMING_C
)

188 
	`gë_timî
–&
t
, 1 );

191 
	`mem£t
–
ªad_°©e
, 0, (Ñead_state ) );

192 
	`mem£t
–
wrôe_°©e
, 0, ( write_state ) );

195 if–
›t
->
›mode
 =
OPMODE_CLIENT
 )

197 if––
ªt
 = 
	`√t_c⁄√˘
–&
˛õ¡_fd
, 
›t
->
£rvî_«me
,

198 
›t
->
£rvî_p‹t
 ) ) != 0 )

200 
	`¥ötf
–" !Çë_c⁄√˘Ñëu∫ed %d\n\n", 
ªt
 );

201 –
ªt
 );

204 if––
ªt
 = 
	`s¶_öô
–&
s¶
 ) ) != 0 )

206 
	`¥ötf
–" ! s¶_öôÑëu∫ed %d\n\n", 
ªt
 );

207 
exô
;

210 
	`s¶_£t_ídpoöt
–&
s¶
, 
SSL_IS_CLIENT
 );

213 if–
›t
->
›mode
 =
OPMODE_SERVER
 )

215 #i‡!
	`deföed
(
POLARSSL_CERTS_C
)

216 
	`¥ötf
("POLARSSL_CERTS_CÇot defined.\n");

217 
exô
;

219 
ªt
 = 
	`x509_¸t_∑r£
–&
§v˚π
, (c⁄° *Ë
ã°_§v_¸t
,

220 
	`°æí
–
ã°_§v_¸t
 ) );

221 if–
ªt
 != 0 )

223 
	`¥ötf
–" ! x509_¸t_∑r£Ñëu∫ed %d\n\n", 
ªt
 );

224 
exô
;

227 
ªt
 = 
	`x509_¸t_∑r£
–&
§v˚π
, (c⁄° *Ë
ã°_ˇ_li°
,

228 
	`°æí
–
ã°_ˇ_li°
 ) );

229 if–
ªt
 != 0 )

231 
	`¥ötf
–" ! x509_¸t_∑r£Ñëu∫ed %d\n\n", 
ªt
 );

232 
exô
;

235 
ªt
 = 
	`pk_∑r£_key
–&
pkey
, (c⁄° *Ë
ã°_§v_key
,

236 
	`°æí
–
ã°_§v_key
 ), 
NULL
, 0 );

237 if–
ªt
 != 0 )

239 
	`¥ötf
–" !Ök_∑r£_keyÑëu∫ed %d\n\n", 
ªt
 );

240 
exô
;

244 if–
£rvî_fd
 < 0 )

246 if––
ªt
 = 
	`√t_böd
–&
£rvî_fd
, 
NULL
,

247 
›t
->
£rvî_p‹t
 ) ) != 0 )

249 
	`¥ötf
–" !Çë_bödÑëu∫ed %d\n\n", 
ªt
 );

250 –
ªt
 );

254 if––
ªt
 = 
	`√t_ac˚±
–
£rvî_fd
, &
˛õ¡_fd
, 
NULL
 ) ) != 0 )

256 
	`¥ötf
–" !Çë_ac˚±Ñëu∫ed %d\n\n", 
ªt
 );

257 –
ªt
 );

260 if––
ªt
 = 
	`s¶_öô
–&
s¶
 ) ) != 0 )

262 
	`¥ötf
–" ! s¶_öôÑëu∫ed %d\n\n", 
ªt
 );

263 –
ªt
 );

266 
	`s¶_£t_ídpoöt
–&
s¶
, 
SSL_IS_SERVER
 );

267 
	`s¶_£t_ˇ_chaö
–&
s¶
, 
§v˚π
.
√xt
, 
NULL
, NULL );

268 if––
ªt
 = 
	`s¶_£t_own_˚π
–&
s¶
, &
§v˚π
, &
pkey
 ) ) != 0 )

270 
	`¥ötf
–" faûed\¿ ! s¶_£t_own_˚πÑëu∫ed %d\n\n", 
ªt
 );

271 
exô
;

275 
	`s¶_£t_authmode
–&
s¶
, 
SSL_VERIFY_NONE
 );

277 
	`s¶_£t_∫g
–&
s¶
, 
˘r_drbg_øndom
, &
˘r_drbg
 );

278 
	`s¶_£t_dbg
–&
s¶
, 
my_debug
, 
›t
 );

279 
	`s¶_£t_bio
–&
s¶
, 
√t_ªcv
, &
˛õ¡_fd
,

280 
√t_£nd
, &
˛õ¡_fd
 );

282 if–
›t
->
f‹˚_cùhîsuôe
[0] !
DFL_FORCE_CIPHER
 )

283 
	`s¶_£t_cùhîsuôes
–&
s¶
, 
›t
->
f‹˚_cùhîsuôe
 );

285 if–
›t
->
iomode
 =
IOMODE_NONBLOCK
 )

287 if––
ªt
 = 
	`√t_£t_n⁄block
–
˛õ¡_fd
 ) ) != 0 )

289 
	`¥ötf
–" !Çë_£t_n⁄blockÑëu∫ed %d\n\n", 
ªt
 );

290 –
ªt
 );

294 
ªad_buf
 = (*Ë
	`mÆloc
–
›t
->
buf„r_size
 );

295 
wrôe_buf
 = (*Ë
	`mÆloc
–
›t
->
buf„r_size
 );

297 if–
ªad_buf
 =
NULL
 || 
wrôe_buf
 == NULL )

299 
	`¥ötf
–" ! mÆloc(%d byãsËÁûed\n\n", 
›t
->
buf„r_size
 );

300 
exô
;

303 
nb_ªad
 = 
byãs_to_ªad
 = 0;

304 
nb_wrôãn
 = 
byãs_to_wrôe
 = 0;

308 if–
›t
->
comm™d
 & 
COMMAND_WRITE
 )

310 if–
byãs_to_wrôe
 == 0 )

312  
byãs_to_wrôe
 == 0 )

313 
byãs_to_wrôe
 = 
	`ønd
(Ë% 
›t
->
buf„r_size
;

315  
i
 = 0; i < 
byãs_to_wrôe
; i++ )

316 
wrôe_buf
[
i
] = (Ë
	`l˝pm5
–
wrôe_°©e
 );

318 
off£t_to_wrôe
 = 0;

321 
ªt
 = 
	`s¶_wrôe
–&
s¶
, 
wrôe_buf
 + 
off£t_to_wrôe
,

322 
byãs_to_wrôe
 );

324 if–
ªt
 >= 0 )

326 
nb_wrôãn
 +
ªt
;

327 
byãs_to_wrôe
 -
ªt
;

328 
off£t_to_wrôe
 +
ªt
;

331 if–
ªt
 =
POLARSSL_ERR_SSL_PEER_CLOSE_NOTIFY
 ||

332 
ªt
 =
POLARSSL_ERR_NET_CONN_RESET
 )

334 
ªt
 = 0;

335 
exô
;

338 if–
ªt
 < 0 &&Ñë !
POLARSSL_ERR_NET_WANT_READ
 &&

339 
ªt
 !
POLARSSL_ERR_NET_WANT_WRITE
 )

341 
	`¥ötf
–" ! s¶_wrôêªtu∫ed %d\n\n", 
ªt
 );

346 if–
›t
->
comm™d
 & 
COMMAND_READ
 )

348  
byãs_to_ªad
 == 0 )

350 
byãs_to_ªad
 = 
	`ønd
(Ë% 
›t
->
buf„r_size
;

351 
off£t_to_ªad
 = 0;

354 
ªt
 = 
	`s¶_ªad
–&
s¶
, 
ªad_buf
 + 
off£t_to_ªad
,

355 
byãs_to_ªad
 );

357 if–
ªt
 > 0 )

359  
i
 = 0; i < 
ªt
; i++ )

361 if–
ªad_buf
[
off£t_to_ªad
 + 
i
] !=

362 (Ë
	`l˝pm5
–
ªad_°©e
 ) )

364 
ªt
 = 1;

365 
	`¥ötf
( " !Ölaintext mismatch\n\n" );

366 
exô
;

370 
nb_ªad
 +
ªt
;

371 
byãs_to_ªad
 -
ªt
;

372 
off£t_to_ªad
 +
ªt
;

375 if–
ªt
 == 0 ||

376 
ªt
 =
POLARSSL_ERR_SSL_CONN_EOF
 ||

377 
ªt
 =
POLARSSL_ERR_SSL_PEER_CLOSE_NOTIFY
 ||

378 
ªt
 =
POLARSSL_ERR_NET_CONN_RESET
 )

380 
ªt
 = 0;

381 
exô
;

384 if–
ªt
 < 0 &&Ñë !
POLARSSL_ERR_NET_WANT_READ
 &&

385 
ªt
 !
POLARSSL_ERR_NET_WANT_WRITE
 )

387 
	`¥ötf
–" ! s¶_ªadÑëu∫ed %d\n\n", 
ªt
 );

392 
ªt
 = 0;

394 if–
›t
->
max_byãs
 != 0 &&

395 –
›t
->
max_byãs
 <
nb_ªad
 ||

396 
›t
->
max_byãs
 <
nb_wrôãn
 ) )

399 #i‡
	`deföed
(
POLARSSL_TIMING_C
)

400 if–
›t
->
c⁄n_timeout
 != 0 &&

401 
›t
->
c⁄n_timeout
 <(Ë
	`gë_timî
–&
t
, 0 ) )

406 
exô
:

408 
	`fÊush
–
°dout
 );

410 if–
ªad_buf
 !
NULL
 )

411 
	`‰ì
–
ªad_buf
 );

413 if–
wrôe_buf
 !
NULL
 )

414 
	`‰ì
–
wrôe_buf
 );

416 
	`s¶_˛o£_nŸify
–&
s¶
 );

417 
	`x509_¸t_‰ì
–&
§v˚π
 );

418 
	`pk_‰ì
–&
pkey
 );

419 
	`s¶_‰ì
–&
s¶
 );

420 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

421 
	`íå›y_‰ì
–&
íå›y
 );

423 if–
˛õ¡_fd
 != -1 )

424 
	`√t_˛o£
–
˛õ¡_fd
 );

426 –
ªt
 );

427 
	}
}

429 #i‡
deföed
(
POLARSSL_TIMING_C
)

430 
	#USAGE_TIMING
 \

431 " c⁄n_timeout=%%d (msË deÁu…: 0 (nÿtimeout)\n"

	)

433 
	#USAGE_TIMING
 ""

	)

436 
	#USAGE
 \

447 
USAGE_TIMING
 \

452 "ác˚±abÀ cùhîsuôê«mes:\n"

	)

454 
	$maö
–
¨gc
, *
¨gv
[] )

456 
i
;

457 c⁄° *
li°
;

458 
ªt
 = 1;

459 
nb_c⁄n
;

460 *
p
, *
q
;

461 
›ti⁄s
 
›t
;

463 if–
¨gc
 == 1 )

465 
ußge
:

466 
	`¥ötf
–
USAGE
 );

468 
li°
 = 
	`s¶_li°_cùhîsuôes
();

469  *
li°
 )

471 
	`¥ötf
(" %s\n", 
	`s¶_gë_cùhîsuôe_«me
–*
li°
 ) );

472 
li°
++;

474 
	`¥ötf
("\n");

475 
exô
;

478 
›t
.
›mode
 = 
DFL_OPMODE
;

479 
›t
.
iomode
 = 
DFL_IOMODE
;

480 
›t
.
£rvî_«me
 = 
DFL_SERVER_NAME
;

481 
›t
.
£rvî_p‹t
 = 
DFL_SERVER_PORT
;

482 
›t
.
comm™d
 = 
DFL_COMMAND
;

483 
›t
.
buf„r_size
 = 
DFL_BUFFER_SIZE
;

484 
›t
.
max_byãs
 = 
DFL_MAX_BYTES
;

485 
›t
.
debug_Àvñ
 = 
DFL_DEBUG_LEVEL
;

486 #i‡
	`deföed
(
POLARSSL_TIMING_C
)

487 
›t
.
c⁄n_timeout
 = 
DFL_CONN_TIMEOUT
;

489 
›t
.
max_c⁄√˘i⁄s
 = 
DFL_MAX_CONNECTIONS
;

490 
›t
.
£ssi⁄_ªu£
 = 
DFL_SESSION_REUSE
;

491 
›t
.
£ssi⁄_li„time
 = 
DFL_SESSION_LIFETIME
;

492 
›t
.
f‹˚_cùhîsuôe
[0] = 
DFL_FORCE_CIPHER
;

494  
i
 = 1; i < 
¨gc
; i++ )

496 
p
 = 
¨gv
[
i
];

497 if––
q
 = 
	`°rchr
–
p
, '=' ) ) =
NULL
 )

499 *
q
++ = '\0';

501 if–
	`°rcmp
–
p
, "opmode" ) == 0 )

503 if–
	`°rcmp
–
q
, "client" ) == 0 )

504 
›t
.
›mode
 = 
OPMODE_CLIENT
;

506 if–
	`°rcmp
–
q
, "server" ) == 0 )

507 
›t
.
›mode
 = 
OPMODE_SERVER
;

508 
ußge
;

511 if–
	`°rcmp
–
p
, "iomode" ) == 0 )

513 if–
	`°rcmp
–
q
, "block" ) == 0 )

514 
›t
.
iomode
 = 
IOMODE_BLOCK
;

516 if–
	`°rcmp
–
q
, "nonblock" ) == 0 )

517 
›t
.
iomode
 = 
IOMODE_NONBLOCK
;

518 
ußge
;

521 if–
	`°rcmp
–
p
, "server_name" ) == 0 )

522 
›t
.
£rvî_«me
 = 
q
;

524 if–
	`°rcmp
–
p
, "server_port" ) == 0 )

526 
›t
.
£rvî_p‹t
 = 
	`©oi
–
q
 );

527 if–
›t
.
£rvî_p‹t
 < 1 || opt.server_port > 65535 )

528 
ußge
;

531 if–
	`°rcmp
–
p
, "command" ) == 0 )

533 if–
	`°rcmp
–
q
, "read" ) == 0 )

534 
›t
.
comm™d
 = 
COMMAND_READ
;

536 if–
	`°rcmp
–
q
, "write" ) == 0 )

537 
›t
.
comm™d
 = 
COMMAND_WRITE
;

539 if–
	`°rcmp
–
q
, "both" ) == 0 )

541 
›t
.
iomode
 = 
IOMODE_NONBLOCK
;

542 
›t
.
comm™d
 = 
COMMAND_BOTH
;

544 
ußge
;

547 if–
	`°rcmp
–
p
, "buffer_size" ) == 0 )

549 
›t
.
buf„r_size
 = 
	`©oi
–
q
 );

550 if–
›t
.
buf„r_size
 < 1 || opt.buffer_size > 1048576 )

551 
ußge
;

554 if–
	`°rcmp
–
p
, "max_bytes" ) == 0 )

555 
›t
.
max_byãs
 = 
	`©oi
–
q
 );

557 if–
	`°rcmp
–
p
, "debug_level" ) == 0 )

558 
›t
.
debug_Àvñ
 = 
	`©oi
–
q
 );

559 #i‡
	`deföed
(
POLARSSL_TIMING_C
)

560 if–
	`°rcmp
–
p
, "conn_timeout" ) == 0 )

561 
›t
.
c⁄n_timeout
 = 
	`©oi
–
q
 );

563 if–
	`°rcmp
–
p
, "max_connections" ) == 0 )

564 
›t
.
max_c⁄√˘i⁄s
 = 
	`©oi
–
q
 );

566 if–
	`°rcmp
–
p
, "session_reuse" ) == 0 )

568 if–
	`°rcmp
–
q
, "on" ) == 0 )

569 
›t
.
£ssi⁄_ªu£
 = 1;

571 if–
	`°rcmp
–
q
, "off" ) == 0 )

572 
›t
.
£ssi⁄_ªu£
 = 0;

574 
ußge
;

577 if–
	`°rcmp
–
p
, "session_lifetime" ) == 0 )

578 
›t
.
£ssi⁄_li„time
 = 
	`©oi
–
q
 );

580 if–
	`°rcmp
–
p
, "force_ciphersuite" ) == 0 )

582 
›t
.
f‹˚_cùhîsuôe
[0] = -1;

584 
›t
.
f‹˚_cùhîsuôe
[0] = 
	`s¶_gë_cùhîsuôe_id
–
q
 );

586 if–
›t
.
f‹˚_cùhîsuôe
[0] <= 0 )

587 
ußge
;

589 
›t
.
f‹˚_cùhîsuôe
[1] = 0;

593  
›t
.
›mode
 )

595 
OPMODE_CLIENT
:

598 
OPMODE_SERVER
:

602 
ußge
;

605 
nb_c⁄n
 = 0;

608 
nb_c⁄n
++;

609 
ªt
 = 
	`s¶_ã°
–&
›t
 );

610 if–
›t
.
max_c⁄√˘i⁄s
 != 0 &&

611 
›t
.
max_c⁄√˘i⁄s
 <
nb_c⁄n
 )

614  
ªt
 == 0 );

616 
exô
:

618 #i‡
	`deföed
(
_WIN32
)

619 
	`¥ötf
( " Press EnterÅoÉxitÅhisÖrogram.\n" );

620 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

623 –
ªt
 );

624 
	}
}

626 
	gPOLARSSL_SSL_SRV_C
 && 
	gPOLARSSL_SSL_CLI_C
 && 
	gPOLARSSL_NET_C
 &&

627 
	gPOLARSSL_RSA_C
 && 
	gPOLARSSL_CTR_DRBG_C
 */

	@polarssl/programs/util/pem2der.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dlib.h
>

34 
	~<°dio.h
>

36 
	~"pﬁ¨s¶/îr‹.h
"

37 
	~"pﬁ¨s¶/ba£64.h
"

39 
	#DFL_FILENAME
 "fûe.≥m"

	)

40 
	#DFL_OUTPUT_FILENAME
 "fûe.dî"

	)

42 #i‡!
deföed
(
POLARSSL_BASE64_C
Ë|| !deföed(
POLARSSL_FS_IO
)

43 
	$maö
–
¨gc
, *
¨gv
[] )

45 ((Ë
¨gc
);

46 ((Ë
¨gv
);

48 
	`¥ötf
("POLARSSL_BASE64_Cánd/or POLARSSL_FS_IOÇot defined.\n");

50 
	}
}

55 
	s›ti⁄s


57 c⁄° *
	mfûíame
;

58 c⁄° *
	mouçut_fûe
;

59 } 
	g›t
;

61 
	$c⁄vît_≥m_to_dî
–c⁄° *
öput
, 
size_t
 
ûí
,

62 *
ouçut
, 
size_t
 *
ﬁí
 )

64 
ªt
;

65 c⁄° *
s1
, *
s2
, *
íd
 = 
öput
 + 
ûí
;

66 
size_t
 
Àn
 = 0;

68 
s1
 = (*Ë
	`°r°r
–(c⁄° *Ë
öput
, "-----BEGIN" );

69 if–
s1
 =
NULL
 )

72 
s2
 = (*Ë
	`°r°r
–(c⁄° *Ë
öput
, "-----END" );

73 if–
s2
 =
NULL
 )

76 
s1
 += 10;

77  
s1
 < 
íd
 && *s1 != '-' )

78 
s1
++;

79  
s1
 < 
íd
 && *s1 == '-' )

80 
s1
++;

81 if–*
s1
 == '\r' ) s1++;

82 if–*
s1
 == '\n' ) s1++;

84 if–
s2
 <
s1
 || s2 > 
íd
 )

87 
ªt
 = 
	`ba£64_decode
–
NULL
, &
Àn
, (c⁄° *Ë
s1
, 
s2
 - s1 );

88 if–
ªt
 =
POLARSSL_ERR_BASE64_INVALID_CHARACTER
 )

89 –
ªt
 );

91 if–
Àn
 > *
ﬁí
 )

94 if––
ªt
 = 
	`ba£64_decode
–
ouçut
, &
Àn
, (c⁄° *Ë
s1
,

95 
s2
 - 
s1
 ) ) != 0 )

97 –
ªt
 );

100 *
ﬁí
 = 
Àn
;

103 
	}
}

108 
	$lﬂd_fûe
–c⁄° *
∑th
, **
buf
, 
size_t
 *
n
 )

110 
FILE
 *
f
;

111 
size
;

113 if––
f
 = 
	`f›í
–
∑th
, "rb" ) ) =
NULL
 )

116 
	`f£ek
–
f
, 0, 
SEEK_END
 );

117 if––
size
 = 
	`·ñl
–
f
 ) ) == -1 )

119 
	`f˛o£
–
f
 );

122 
	`f£ek
–
f
, 0, 
SEEK_SET
 );

124 *
n
 = (
size_t
Ë
size
;

126 if–*
n
 + 1 == 0 ||

127 –*
buf
 = (*Ë
	`mÆloc
–*
n
 + 1 ) ) =
NULL
 )

129 
	`f˛o£
–
f
 );

133 if–
	`‰ód
–*
buf
, 1, *
n
, 
f
 ) != *n )

135 
	`f˛o£
–
f
 );

136 
	`‰ì
–*
buf
 );

140 
	`f˛o£
–
f
 );

142 (*
buf
)[*
n
] = '\0';

145 
	}
}

150 
	$wrôe_fûe
–c⁄° *
∑th
, *
buf
, 
size_t
 
n
 )

152 
FILE
 *
f
;

154 if––
f
 = 
	`f›í
–
∑th
, "wb" ) ) =
NULL
 )

157 if–
	`fwrôe
–
buf
, 1, 
n
, 
f
 ) !=Ç )

159 
	`f˛o£
–
f
 );

163 
	`f˛o£
–
f
 );

165 
	}
}

167 
	#USAGE
 \

172 "\n"

	)

174 
	$maö
–
¨gc
, *
¨gv
[] )

176 
ªt
 = 0;

177 *
≥m_buf„r
 = 
NULL
;

178 
dî_buf„r
[4096];

179 
buf
[1024];

180 
size_t
 
≥m_size
, 
dî_size
 = (
dî_buf„r
);

181 
i
;

182 *
p
, *
q
;

187 
	`mem£t
–
buf
, 0, (buf) );

188 
	`mem£t
–
dî_buf„r
, 0, (der_buffer) );

190 if–
¨gc
 == 0 )

192 
ußge
:

193 
	`¥ötf
–
USAGE
 );

194 
exô
;

197 
›t
.
fûíame
 = 
DFL_FILENAME
;

198 
›t
.
ouçut_fûe
 = 
DFL_OUTPUT_FILENAME
;

200  
i
 = 1; i < 
¨gc
; i++ )

203 
p
 = 
¨gv
[
i
];

204 if––
q
 = 
	`°rchr
–
p
, '=' ) ) =
NULL
 )

205 
ußge
;

206 *
q
++ = '\0';

208 if–
	`°rcmp
–
p
, "filename" ) == 0 )

209 
›t
.
fûíame
 = 
q
;

210 if–
	`°rcmp
–
p
, "output_file" ) == 0 )

211 
›t
.
ouçut_fûe
 = 
q
;

213 
ußge
;

219 
	`¥ötf
( "\n . LoadingÅhe PEM file ..." );

220 
	`fÊush
–
°dout
 );

222 
ªt
 = 
	`lﬂd_fûe
–
›t
.
fûíame
, &
≥m_buf„r
, &
≥m_size
 );

224 if–
ªt
 != 0 )

226 #ifde‡
POLARSSL_ERROR_C


227 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

229 
	`¥ötf
–" faûed\¿ !Üﬂd_fûêªtu∫ed %d - %s\n\n", 
ªt
, 
buf
 );

230 
exô
;

233 
	`¥ötf
( " ok\n" );

238 
	`¥ötf
( " . Converting from PEMÅo DER ..." );

239 
	`fÊush
–
°dout
 );

241 if––
ªt
 = 
	`c⁄vît_≥m_to_dî
–
≥m_buf„r
, 
≥m_size
, 
dî_buf„r
, &
dî_size
 ) ) != 0 )

243 #ifde‡
POLARSSL_ERROR_C


244 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

246 
	`¥ötf
–" faûed\¿ ! c⁄vît_≥m_to_dî %d - %s\n\n", 
ªt
, 
buf
 );

247 
exô
;

250 
	`¥ötf
( " ok\n" );

255 
	`¥ötf
( " . WritingÅhe DER file ..." );

256 
	`fÊush
–
°dout
 );

258 
ªt
 = 
	`wrôe_fûe
–
›t
.
ouçut_fûe
, 
dî_buf„r
, 
dî_size
 );

260 if–
ªt
 != 0 )

262 #ifde‡
POLARSSL_ERROR_C


263 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

265 
	`¥ötf
–" faûed\¿ ! wrôe_fûêªtu∫ed %d - %s\n\n", 
ªt
, 
buf
 );

266 
exô
;

269 
	`¥ötf
( " ok\n" );

271 
exô
:

272 
	`‰ì
–
≥m_buf„r
 );

274 #i‡
	`deföed
(
_WIN32
)

275 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

276 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

279 –
ªt
 );

280 
	}
}

	@polarssl/programs/util/strerror.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°dlib.h
>

33 
	~<°rög.h
>

34 
	~<°dio.h
>

36 
	~"pﬁ¨s¶/îr‹.h
"

38 
	#USAGE
 \

40 "\¿whîê<îr‹code> c™ bê®decimÆ o∏hexadecimÆ (°¨t†wôh 0x o∏-0x)\n"

	)

42 #i‡!
deföed
(
POLARSSL_ERROR_C
Ë&& !deföed(
POLARSSL_ERROR_STRERROR_DUMMY
)

43 
	$maö
–
¨gc
, *
¨gv
[] )

45 ((Ë
¨gc
);

46 ((Ë
¨gv
);

48 
	`¥ötf
("POLARSSL_ERROR_Cánd/or POLARSSL_ERROR_STRERROR_DUMMYÇot defined.\n");

50 
	}
}

52 
	$maö
–
¨gc
, *
¨gv
[] )

54 
vÆ
;

55 *
íd
 = 
¨gv
[1];

57 if–
¨gc
 != 2 )

59 
	`¥ötf
–
USAGE
 );

63 
vÆ
 = 
	`°πﬁ
–
¨gv
[1], &
íd
, 10 );

64 if–*
íd
 != '\0' )

66 
vÆ
 = 
	`°πﬁ
–
¨gv
[1], &
íd
, 16 );

67 if–*
íd
 != '\0' )

69 
	`¥ötf
–
USAGE
 );

73 if–
vÆ
 > 0 )

74 
vÆ
 = -val;

76 if–
vÆ
 != 0 )

78 
îr‹_buf
[200];

79 
	`pﬁ¨s¶_°ªº‹
–
vÆ
, 
îr‹_buf
, 200 );

80 
	`¥ötf
("La°Éº‹ was: -0x%04x - %s\n\n", (Ë-
vÆ
, 
îr‹_buf
 );

83 #i‡
	`deföed
(
_WIN32
)

84 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

85 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

88 –
vÆ
 );

89 
	}
}

	@polarssl/programs/wince_main.c

26 #i‡
deföed
(
_WIN32_WCE
)

28 
	~<wödows.h
>

30 
maö
( , const ** );

32 
	$_tmaö
–
¨gc
, 
_TCHAR
* 
èrgv
[] )

34 **
¨gv
;

35 
i
;

37 
¨gv
 = ( ** ) 
	`ˇŒoc
–
¨gc
, ( * ) );

39  
i
 = 0; i < 
¨gc
; i++ ) {

40 
size_t
 
Àn
;

41 
Àn
 = 
	`_tc¶í
–
èrgv
[
i
] ) + 1;

42 
¨gv
[
i
] = ( * ) 
	`ˇŒoc
–
Àn
, ( ) );

43 
	`wc°ombs
–
¨gv
[
i
], 
èrgv
[i], 
Àn
 );

46  
	`maö
–
¨gc
, 
¨gv
 );

47 
	}
}

	@polarssl/programs/x509/cert_app.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dlib.h
>

34 
	~<°dio.h
>

36 
	~"pﬁ¨s¶/íå›y.h
"

37 
	~"pﬁ¨s¶/˘r_drbg.h
"

38 
	~"pﬁ¨s¶/√t.h
"

39 
	~"pﬁ¨s¶/s¶.h
"

40 
	~"pﬁ¨s¶/x509.h
"

42 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_ENTROPY_C
) || \

43 !
deföed
(
POLARSSL_SSL_TLS_C
Ë|| !deföed(
POLARSSL_SSL_CLI_C
) || \

44 !
deföed
(
POLARSSL_NET_C
Ë|| !deföed(
POLARSSL_RSA_C
) || \

45 !
deföed
(
POLARSSL_X509_CRT_PARSE_C
Ë|| !deföed(
POLARSSL_FS_IO
) || \

46 !
	$deföed
(
POLARSSL_CTR_DRBG_C
)

47 
	$maö
–
¨gc
, *
¨gv
[] )

49 ((Ë
¨gc
);

50 ((Ë
¨gv
);

52 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_ENTROPY_Cánd/or "

58 
	}
}

61 
	#MODE_NONE
 0

	)

62 
	#MODE_FILE
 1

	)

63 
	#MODE_SSL
 2

	)

65 
	#DFL_MODE
 
MODE_NONE


	)

66 
	#DFL_FILENAME
 "˚π.¸t"

	)

67 
	#DFL_CA_FILE
 ""

	)

68 
	#DFL_CRL_FILE
 ""

	)

69 
	#DFL_CA_PATH
 ""

	)

70 
	#DFL_SERVER_NAME
 "loˇlho°"

	)

71 
	#DFL_SERVER_PORT
 4433

	)

72 
	#DFL_DEBUG_LEVEL
 0

	)

73 
	#DFL_PERMISSIVE
 0

	)

78 
	s›ti⁄s


80 
	mmode
;

81 c⁄° *
	mfûíame
;

82 c⁄° *
	mˇ_fûe
;

83 c⁄° *
	m¸l_fûe
;

84 c⁄° *
	mˇ_∑th
;

85 c⁄° *
	m£rvî_«me
;

86 
	m£rvî_p‹t
;

87 
	mdebug_Àvñ
;

88 
	m≥rmissive
;

89 } 
	g›t
;

91 
	$my_debug
–*
˘x
, 
Àvñ
, c⁄° *
°r
 )

93 if–
Àvñ
 < 
›t
.
debug_Àvñ
 )

95 
	`Ârötf
–(
FILE
 *Ë
˘x
, "%s", 
°r
 );

96 
	`fÊush
–(
FILE
 *Ë
˘x
 );

98 
	}
}

100 
	$my_vîify
–*
d©a
, 
x509_¸t
 *
¸t
, 
dïth
, *
Êags
 )

102 
buf
[1024];

103 ((Ë
d©a
);

105 
	`¥ötf
–"\nVîifyÑeque°ed f‹ (Dïth %d):\n", 
dïth
 );

106 
	`x509_¸t_öfo
–
buf
, –bu‡Ë- 1, "", 
¸t
 );

107 
	`¥ötf
–"%s", 
buf
 );

109 if––(*
Êags
Ë& 
BADCERT_EXPIRED
 ) != 0 )

110 
	`¥ötf
( " ! server certificate hasÉxpired\n" );

112 if––(*
Êags
Ë& 
BADCERT_REVOKED
 ) != 0 )

113 
	`¥ötf
( " ! server certificate has beenÑevoked\n" );

115 if––(*
Êags
Ë& 
BADCERT_CN_MISMATCH
 ) != 0 )

116 
	`¥ötf
( " ! CN mismatch\n" );

118 if––(*
Êags
Ë& 
BADCERT_NOT_TRUSTED
 ) != 0 )

119 
	`¥ötf
( " ! self-signed orÇot signed byáÅrusted CA\n" );

121 if––(*
Êags
Ë& 
BADCRL_NOT_TRUSTED
 ) != 0 )

122 
	`¥ötf
( " ! CRLÇotÅrusted\n" );

124 if––(*
Êags
Ë& 
BADCRL_EXPIRED
 ) != 0 )

125 
	`¥ötf
( " ! CRLÉxpired\n" );

127 if––(*
Êags
Ë& 
BADCERT_OTHER
 ) != 0 )

128 
	`¥ötf
( " ! other (unknown) flag\n" );

130 i‡––*
Êags
 ) == 0 )

131 
	`¥ötf
( " This certificate hasÇo flags\n" );

134 
	}
}

136 
	#USAGE_IO
 \

142 " deÁu…: \"\" (n⁄eË(ovîride†ˇ_fûe)\n"

	)

144 
	#USAGE
 \

149 
USAGE_IO
 \

154 "\n"

	)

156 
	$maö
–
¨gc
, *
¨gv
[] )

158 
ªt
 = 0, 
£rvî_fd
;

159 
buf
[1024];

160 
íå›y_c⁄ãxt
 
íå›y
;

161 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

162 
s¶_c⁄ãxt
 
s¶
;

163 
x509_¸t
 
ˇ˚π
;

164 
x509_¸t
 
˛i˚π
;

165 
x509_¸l
 
ˇ¸l
;

166 
pk_c⁄ãxt
 
pkey
;

167 
i
, 
j
;

168 
Êags
, 
vîify
 = 0;

169 *
p
, *
q
;

170 c⁄° *
≥rs
 = "cert_app";

175 
£rvî_fd
 = 0;

176 
	`x509_¸t_öô
–&
ˇ˚π
 );

177 
	`x509_¸t_öô
–&
˛i˚π
 );

178 #i‡
	`deföed
(
POLARSSL_X509_CRL_PARSE_C
)

179 
	`x509_¸l_öô
–&
ˇ¸l
 );

183 
	`mem£t
–&
ˇ¸l
, 0, (
x509_¸l
) );

185 
	`pk_öô
–&
pkey
 );

187 if–
¨gc
 == 0 )

189 
ußge
:

190 
	`¥ötf
–
USAGE
 );

191 
exô
;

194 
›t
.
mode
 = 
DFL_MODE
;

195 
›t
.
fûíame
 = 
DFL_FILENAME
;

196 
›t
.
ˇ_fûe
 = 
DFL_CA_FILE
;

197 
›t
.
¸l_fûe
 = 
DFL_CRL_FILE
;

198 
›t
.
ˇ_∑th
 = 
DFL_CA_PATH
;

199 
›t
.
£rvî_«me
 = 
DFL_SERVER_NAME
;

200 
›t
.
£rvî_p‹t
 = 
DFL_SERVER_PORT
;

201 
›t
.
debug_Àvñ
 = 
DFL_DEBUG_LEVEL
;

202 
›t
.
≥rmissive
 = 
DFL_PERMISSIVE
;

204  
i
 = 1; i < 
¨gc
; i++ )

206 
p
 = 
¨gv
[
i
];

207 if––
q
 = 
	`°rchr
–
p
, '=' ) ) =
NULL
 )

208 
ußge
;

209 *
q
++ = '\0';

211  
j
 = 0; 
p
 + j < 
q
; j++ )

213 if–
¨gv
[
i
][
j
] >= 'A' &&árgv[i][j] <= 'Z' )

214 
¨gv
[
i
][
j
] |= 0x20;

217 if–
	`°rcmp
–
p
, "mode" ) == 0 )

219 if–
	`°rcmp
–
q
, "file" ) == 0 )

220 
›t
.
mode
 = 
MODE_FILE
;

221 if–
	`°rcmp
–
q
, "ssl" ) == 0 )

222 
›t
.
mode
 = 
MODE_SSL
;

224 
ußge
;

226 if–
	`°rcmp
–
p
, "filename" ) == 0 )

227 
›t
.
fûíame
 = 
q
;

228 if–
	`°rcmp
–
p
, "ca_file" ) == 0 )

229 
›t
.
ˇ_fûe
 = 
q
;

230 if–
	`°rcmp
–
p
, "crl_file" ) == 0 )

231 
›t
.
¸l_fûe
 = 
q
;

232 if–
	`°rcmp
–
p
, "ca_path" ) == 0 )

233 
›t
.
ˇ_∑th
 = 
q
;

234 if–
	`°rcmp
–
p
, "server_name" ) == 0 )

235 
›t
.
£rvî_«me
 = 
q
;

236 if–
	`°rcmp
–
p
, "server_port" ) == 0 )

238 
›t
.
£rvî_p‹t
 = 
	`©oi
–
q
 );

239 if–
›t
.
£rvî_p‹t
 < 1 || opt.server_port > 65535 )

240 
ußge
;

242 if–
	`°rcmp
–
p
, "debug_level" ) == 0 )

244 
›t
.
debug_Àvñ
 = 
	`©oi
–
q
 );

245 if–
›t
.
debug_Àvñ
 < 0 || opt.debug_level > 65535 )

246 
ußge
;

248 if–
	`°rcmp
–
p
, "permissive" ) == 0 )

250 
›t
.
≥rmissive
 = 
	`©oi
–
q
 );

251 if–
›t
.
≥rmissive
 < 0 || opt.permissive > 1 )

252 
ußge
;

255 
ußge
;

261 
	`¥ötf
( " . LoadingÅhe CAÑoot certificate ..." );

262 
	`fÊush
–
°dout
 );

264 if–
	`°æí
–
›t
.
ˇ_∑th
 ) )

266 
ªt
 = 
	`x509_¸t_∑r£_∑th
–&
ˇ˚π
, 
›t
.
ˇ_∑th
 );

267 
vîify
 = 1;

269 if–
	`°æí
–
›t
.
ˇ_fûe
 ) )

271 
ªt
 = 
	`x509_¸t_∑r£_fûe
–&
ˇ˚π
, 
›t
.
ˇ_fûe
 );

272 
vîify
 = 1;

275 if–
ªt
 < 0 )

277 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£Ñëu∫ed -0x%x\n\n", -
ªt
 );

278 
exô
;

281 
	`¥ötf
–" ok (%d skù≥d)\n", 
ªt
 );

283 #i‡
	`deföed
(
POLARSSL_X509_CRL_PARSE_C
)

284 if–
	`°æí
–
›t
.
¸l_fûe
 ) )

286 if––
ªt
 = 
	`x509_¸l_∑r£_fûe
–&
ˇ¸l
, 
›t
.
¸l_fûe
 ) ) != 0 )

288 
	`¥ötf
–" faûed\¿ ! x509_¸l_∑r£Ñëu∫ed -0x%x\n\n", -
ªt
 );

289 
exô
;

292 
vîify
 = 1;

296 if–
›t
.
mode
 =
MODE_FILE
 )

298 
x509_¸t
 
¸t
;

299 
x509_¸t
 *
cur
 = &
¸t
;

300 
	`x509_¸t_öô
–&
¸t
 );

305 
	`¥ötf
( "\n . LoadingÅhe certificate(s) ..." );

306 
	`fÊush
–
°dout
 );

308 
ªt
 = 
	`x509_¸t_∑r£_fûe
–&
¸t
, 
›t
.
fûíame
 );

310 if–
ªt
 < 0 )

312 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£_fûêªtu∫ed %d\n\n", 
ªt
 );

313 
	`x509_¸t_‰ì
–&
¸t
 );

314 
exô
;

317 if–
›t
.
≥rmissive
 =0 && 
ªt
 > 0 )

319 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£ faûedÅÿ∑r£ %d cîtifiˇãs\n\n", 
ªt
 );

320 
	`x509_¸t_‰ì
–&
¸t
 );

321 
exô
;

324 
	`¥ötf
( " ok\n" );

329  
cur
 !
NULL
 )

331 
	`¥ötf
( " . Peer certificate information ...\n" );

332 
ªt
 = 
	`x509_¸t_öfo
–(*Ë
buf
, ( buf ) - 1, " ",

333 
cur
 );

334 if–
ªt
 == -1 )

336 
	`¥ötf
–" faûed\¿ ! x509_¸t_öfÿªtu∫ed %d\n\n", 
ªt
 );

337 
	`x509_¸t_‰ì
–&
¸t
 );

338 
exô
;

341 
	`¥ötf
–"%s\n", 
buf
 );

343 
cur
 = cur->
√xt
;

349 if–
vîify
 )

351 
	`¥ötf
( " . Verifying X.509 certificate..." );

353 if––
ªt
 = 
	`x509_¸t_vîify
–&
¸t
, &
ˇ˚π
, &
ˇ¸l
, 
NULL
, &
Êags
,

354 
my_vîify
, 
NULL
 ) ) != 0 )

356 
	`¥ötf
( " failed\n" );

358 if––
ªt
 & 
BADCERT_EXPIRED
 ) != 0 )

359 
	`¥ötf
( " ! server certificate hasÉxpired\n" );

361 if––
ªt
 & 
BADCERT_REVOKED
 ) != 0 )

362 
	`¥ötf
( " ! server certificate has beenÑevoked\n" );

364 if––
ªt
 & 
BADCERT_CN_MISMATCH
 ) != 0 )

365 
	`¥ötf
–" ! CN mism©ch (ex≥˘ed CN=%s)\n", 
›t
.
£rvî_«me
 );

367 if––
ªt
 & 
BADCERT_NOT_TRUSTED
 ) != 0 )

368 
	`¥ötf
( " ! self-signed orÇot signed byáÅrusted CA\n" );

370 
	`¥ötf
( "\n" );

373 
	`¥ötf
( " ok\n" );

376 
	`x509_¸t_‰ì
–&
¸t
 );

378 if–
›t
.
mode
 =
MODE_SSL
 )

383 
	`¥ötf
( "\n . SeedingÅheÑandomÇumber generator..." );

384 
	`fÊush
–
°dout
 );

386 
	`íå›y_öô
–&
íå›y
 );

387 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

388 (c⁄° *Ë
≥rs
,

389 
	`°æí
–
≥rs
 ) ) ) != 0 )

391 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed %d\n", 
ªt
 );

392 
exô
;

395 
	`¥ötf
( " ok\n" );

400 
	`¥ötf
–" . SSL c⁄√˘i⁄Åÿt˝/%s/%-4d...", 
›t
.
£rvî_«me
,

401 
›t
.
£rvî_p‹t
 );

402 
	`fÊush
–
°dout
 );

404 if––
ªt
 = 
	`√t_c⁄√˘
–&
£rvî_fd
, 
›t
.
£rvî_«me
,

405 
›t
.
£rvî_p‹t
 ) ) != 0 )

407 
	`¥ötf
–" faûed\¿ !Çë_c⁄√˘Ñëu∫ed %d\n\n", 
ªt
 );

408 
exô
;

414 if––
ªt
 = 
	`s¶_öô
–&
s¶
 ) ) != 0 )

416 
	`¥ötf
–" faûed\¿ ! s¶_öôÑëu∫ed %d\n\n", 
ªt
 );

417 
exô
;

420 
	`s¶_£t_ídpoöt
–&
s¶
, 
SSL_IS_CLIENT
 );

421 if–
vîify
 )

423 
	`s¶_£t_authmode
–&
s¶
, 
SSL_VERIFY_REQUIRED
 );

424 
	`s¶_£t_ˇ_chaö
–&
s¶
, &
ˇ˚π
, 
NULL
, 
›t
.
£rvî_«me
 );

425 
	`s¶_£t_vîify
–&
s¶
, 
my_vîify
, 
NULL
 );

428 
	`s¶_£t_authmode
–&
s¶
, 
SSL_VERIFY_NONE
 );

430 
	`s¶_£t_∫g
–&
s¶
, 
˘r_drbg_øndom
, &
˘r_drbg
 );

431 
	`s¶_£t_dbg
–&
s¶
, 
my_debug
, 
°dout
 );

432 
	`s¶_£t_bio
–&
s¶
, 
√t_ªcv
, &
£rvî_fd
,

433 
√t_£nd
, &
£rvî_fd
 );

435 if––
ªt
 = 
	`s¶_£t_own_˚π
–&
s¶
, &
˛i˚π
, &
pkey
 ) ) != 0 )

437 
	`¥ötf
–" faûed\¿ ! s¶_£t_own_˚πÑëu∫ed %d\n\n", 
ªt
 );

438 
exô
;

441 #i‡
	`deföed
(
POLARSSL_SSL_SERVER_NAME_INDICATION
)

442 if––
ªt
 = 
	`s¶_£t_ho°«me
–&
s¶
, 
›t
.
£rvî_«me
 ) ) != 0 )

444 
	`¥ötf
–" faûed\¿ ! s¶_£t_ho°«mêªtu∫ed %d\n\n", 
ªt
 );

445 
exô
;

452  ( 
ªt
 = 
	`s¶_h™dshake
–&
s¶
 ) ) != 0 )

454 if–
ªt
 !
POLARSSL_ERR_NET_WANT_READ
 &&Ñë !
POLARSSL_ERR_NET_WANT_WRITE
 )

456 
	`¥ötf
–" faûed\¿ ! s¶_h™dshakêªtu∫ed %d\n\n", 
ªt
 );

457 
	`s¶_‰ì
–&
s¶
 );

458 
exô
;

462 
	`¥ötf
( " ok\n" );

467 
	`¥ötf
( " . Peer certificate information ...\n" );

468 
ªt
 = 
	`x509_¸t_öfo
–(*Ë
buf
, ( buf ) - 1, " ",

469 
s¶
.
£ssi⁄
->
≥î_˚π
 );

470 if–
ªt
 == -1 )

472 
	`¥ötf
–" faûed\¿ ! x509_¸t_öfÿªtu∫ed %d\n\n", 
ªt
 );

473 
	`s¶_‰ì
–&
s¶
 );

474 
exô
;

477 
	`¥ötf
–"%s\n", 
buf
 );

479 
	`s¶_˛o£_nŸify
–&
s¶
 );

480 
	`s¶_‰ì
–&
s¶
 );

483 
ußge
;

485 
exô
:

487 if–
£rvî_fd
 )

488 
	`√t_˛o£
–
£rvî_fd
 );

489 
	`x509_¸t_‰ì
–&
ˇ˚π
 );

490 
	`x509_¸t_‰ì
–&
˛i˚π
 );

491 #i‡
	`deföed
(
POLARSSL_X509_CRL_PARSE_C
)

492 
	`x509_¸l_‰ì
–&
ˇ¸l
 );

494 
	`pk_‰ì
–&
pkey
 );

495 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

496 
	`íå›y_‰ì
–&
íå›y
 );

498 #i‡
	`deföed
(
_WIN32
)

499 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

500 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

503 –
ªt
 );

504 
	}
}

506 
	gPOLARSSL_SSL_CLI_C
 && 
	gPOLARSSL_NET_C
 && 
	gPOLARSSL_RSA_C
 &&

507 
	gPOLARSSL_X509_CRT_PARSE_C
 && 
	gPOLARSSL_FS_IO
 && 
	gPOLARSSL_CTR_DRBG_C
 */

	@polarssl/programs/x509/cert_req.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dlib.h
>

34 
	~<°dio.h
>

36 
	~"pﬁ¨s¶/x509_c§.h
"

37 
	~"pﬁ¨s¶/íå›y.h
"

38 
	~"pﬁ¨s¶/˘r_drbg.h
"

39 
	~"pﬁ¨s¶/îr‹.h
"

41 #i‡!
deföed
(
POLARSSL_X509_CSR_WRITE_C
Ë|| !deföed(
POLARSSL_FS_IO
) || \

42 !
deföed
(
POLARSSL_PK_PARSE_C
) || \

43 !
deföed
(
POLARSSL_ENTROPY_C
Ë|| !
	$deföed
(
POLARSSL_CTR_DRBG_C
)

44 
	$maö
–
¨gc
, *
¨gv
[] )

46 ((Ë
¨gc
);

47 ((Ë
¨gv
);

49 
	`¥ötf
( "POLARSSL_X509_CSR_WRITE_Cánd/or POLARSSL_FS_IOánd/or "

54 
	}
}

57 
	#DFL_FILENAME
 "keyfûe.key"

	)

58 
	#DFL_DEBUG_LEVEL
 0

	)

59 
	#DFL_OUTPUT_FILENAME
 "˚π.ªq"

	)

60 
	#DFL_SUBJECT_NAME
 "CN=Cît,O=Pﬁ¨SSL,C=NL"

	)

61 
	#DFL_KEY_USAGE
 0

	)

62 
	#DFL_NS_CERT_TYPE
 0

	)

67 
	s›ti⁄s


69 c⁄° *
	mfûíame
;

70 
	mdebug_Àvñ
;

71 c⁄° *
	mouçut_fûe
;

72 c⁄° *
	msubje˘_«me
;

73 
	mkey_ußge
;

74 
	mns_˚π_ty≥
;

75 } 
	g›t
;

77 
wrôe_˚πifiˇã_ªque°
–
x509wrôe_c§
 *
ªq
, c⁄° *
ouçut_fûe
,

78 (*
f_∫g
)(*, *, 
size_t
),

79 *
p_∫g
 )

81 
ªt
;

82 
FILE
 *
f
;

83 
ouçut_buf
[4096];

84 
size_t
 
Àn
 = 0;

86 
	`mem£t
–
ouçut_buf
, 0, 4096 );

87 if––
ªt
 = 
	`x509wrôe_c§_≥m
–
ªq
, 
ouçut_buf
, 4096, 
f_∫g
, 
p_∫g
 ) ) < 0 )

88 –
ªt
 );

90 
Àn
 = 
	`°æí
–(*Ë
ouçut_buf
 );

92 if––
f
 = 
	`f›í
–
ouçut_fûe
, "w" ) ) =
NULL
 )

95 if–
	`fwrôe
–
ouçut_buf
, 1, 
Àn
, 
f
 ) !=Üen )

97 
	`f˛o£
–
f
 );

101 
	`f˛o£
–
f
 );

104 
	}
}

106 
	#USAGE
 \

131 "\n"

	)

133 
	$maö
–
¨gc
, *
¨gv
[] )

135 
ªt
 = 0;

136 
pk_c⁄ãxt
 
key
;

137 
buf
[1024];

138 
i
;

139 *
p
, *
q
, *
r
;

140 
x509wrôe_c§
 
ªq
;

141 
íå›y_c⁄ãxt
 
íå›y
;

142 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

143 c⁄° *
≥rs
 = "csrÉxampleápp";

148 
	`x509wrôe_c§_öô
–&
ªq
 );

149 
	`x509wrôe_c§_£t_md_Æg
–&
ªq
, 
POLARSSL_MD_SHA1
 );

150 
	`pk_öô
–&
key
 );

151 
	`mem£t
–
buf
, 0, ( buf ) );

153 if–
¨gc
 == 0 )

155 
ußge
:

156 
	`¥ötf
–
USAGE
 );

157 
ªt
 = 1;

158 
exô
;

161 
›t
.
fûíame
 = 
DFL_FILENAME
;

162 
›t
.
debug_Àvñ
 = 
DFL_DEBUG_LEVEL
;

163 
›t
.
ouçut_fûe
 = 
DFL_OUTPUT_FILENAME
;

164 
›t
.
subje˘_«me
 = 
DFL_SUBJECT_NAME
;

165 
›t
.
key_ußge
 = 
DFL_KEY_USAGE
;

166 
›t
.
ns_˚π_ty≥
 = 
DFL_NS_CERT_TYPE
;

168  
i
 = 1; i < 
¨gc
; i++ )

171 
p
 = 
¨gv
[
i
];

172 if––
q
 = 
	`°rchr
–
p
, '=' ) ) =
NULL
 )

173 
ußge
;

174 *
q
++ = '\0';

176 if–
	`°rcmp
–
p
, "filename" ) == 0 )

177 
›t
.
fûíame
 = 
q
;

178 if–
	`°rcmp
–
p
, "output_file" ) == 0 )

179 
›t
.
ouçut_fûe
 = 
q
;

180 if–
	`°rcmp
–
p
, "debug_level" ) == 0 )

182 
›t
.
debug_Àvñ
 = 
	`©oi
–
q
 );

183 if–
›t
.
debug_Àvñ
 < 0 || opt.debug_level > 65535 )

184 
ußge
;

186 if–
	`°rcmp
–
p
, "subject_name" ) == 0 )

188 
›t
.
subje˘_«me
 = 
q
;

190 if–
	`°rcmp
–
p
, "key_usage" ) == 0 )

192  
q
 !
NULL
 )

194 if––
r
 = 
	`°rchr
–
q
, ',' ) ) !
NULL
 )

195 *
r
++ = '\0';

197 if–
	`°rcmp
–
q
, "digital_signature" ) == 0 )

198 
›t
.
key_ußge
 |
KU_DIGITAL_SIGNATURE
;

199 if–
	`°rcmp
–
q
, "non_repudiation" ) == 0 )

200 
›t
.
key_ußge
 |
KU_NON_REPUDIATION
;

201 if–
	`°rcmp
–
q
, "key_encipherment" ) == 0 )

202 
›t
.
key_ußge
 |
KU_KEY_ENCIPHERMENT
;

203 if–
	`°rcmp
–
q
, "data_encipherment" ) == 0 )

204 
›t
.
key_ußge
 |
KU_DATA_ENCIPHERMENT
;

205 if–
	`°rcmp
–
q
, "key_agreement" ) == 0 )

206 
›t
.
key_ußge
 |
KU_KEY_AGREEMENT
;

207 if–
	`°rcmp
–
q
, "key_cert_sign" ) == 0 )

208 
›t
.
key_ußge
 |
KU_KEY_CERT_SIGN
;

209 if–
	`°rcmp
–
q
, "crl_sign" ) == 0 )

210 
›t
.
key_ußge
 |
KU_CRL_SIGN
;

212 
ußge
;

214 
q
 = 
r
;

217 if–
	`°rcmp
–
p
, "ns_cert_type" ) == 0 )

219  
q
 !
NULL
 )

221 if––
r
 = 
	`°rchr
–
q
, ',' ) ) !
NULL
 )

222 *
r
++ = '\0';

224 if–
	`°rcmp
–
q
, "ssl_client" ) == 0 )

225 
›t
.
ns_˚π_ty≥
 |
NS_CERT_TYPE_SSL_CLIENT
;

226 if–
	`°rcmp
–
q
, "ssl_server" ) == 0 )

227 
›t
.
ns_˚π_ty≥
 |
NS_CERT_TYPE_SSL_SERVER
;

228 if–
	`°rcmp
–
q
, "email" ) == 0 )

229 
›t
.
ns_˚π_ty≥
 |
NS_CERT_TYPE_EMAIL
;

230 if–
	`°rcmp
–
q
, "object_signing" ) == 0 )

231 
›t
.
ns_˚π_ty≥
 |
NS_CERT_TYPE_OBJECT_SIGNING
;

232 if–
	`°rcmp
–
q
, "ssl_ca" ) == 0 )

233 
›t
.
ns_˚π_ty≥
 |
NS_CERT_TYPE_SSL_CA
;

234 if–
	`°rcmp
–
q
, "email_ca" ) == 0 )

235 
›t
.
ns_˚π_ty≥
 |
NS_CERT_TYPE_EMAIL_CA
;

236 if–
	`°rcmp
–
q
, "object_signing_ca" ) == 0 )

237 
›t
.
ns_˚π_ty≥
 |
NS_CERT_TYPE_OBJECT_SIGNING_CA
;

239 
ußge
;

241 
q
 = 
r
;

245 
ußge
;

248 if–
›t
.
key_ußge
 )

249 
	`x509wrôe_c§_£t_key_ußge
–&
ªq
, 
›t
.
key_ußge
 );

251 if–
›t
.
ns_˚π_ty≥
 )

252 
	`x509wrôe_c§_£t_ns_˚π_ty≥
–&
ªq
, 
›t
.
ns_˚π_ty≥
 );

257 
	`¥ötf
( " . SeedingÅheÑandomÇumber generator..." );

258 
	`fÊush
–
°dout
 );

260 
	`íå›y_öô
–&
íå›y
 );

261 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

262 (c⁄° *Ë
≥rs
,

263 
	`°æí
–
≥rs
 ) ) ) != 0 )

265 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed %d", 
ªt
 );

266 
exô
;

269 
	`¥ötf
( " ok\n" );

274 
	`¥ötf
( " . Checking subjetÇame..." );

275 
	`fÊush
–
°dout
 );

277 if––
ªt
 = 
	`x509wrôe_c§_£t_subje˘_«me
–&
ªq
, 
›t
.
subje˘_«me
 ) ) != 0 )

279 
	`¥ötf
–" faûed\¿ ! x509wrôe_c§_£t_subje˘_«mêªtu∫ed %d", 
ªt
 );

280 
exô
;

283 
	`¥ötf
( " ok\n" );

288 
	`¥ötf
( " . LoadingÅheÖrivate key ..." );

289 
	`fÊush
–
°dout
 );

291 
ªt
 = 
	`pk_∑r£_keyfûe
–&
key
, 
›t
.
fûíame
, 
NULL
 );

293 if–
ªt
 != 0 )

295 
	`¥ötf
–" faûed\¿ !Ök_∑r£_keyfûêªtu∫ed %d", 
ªt
 );

296 
exô
;

299 
	`x509wrôe_c§_£t_key
–&
ªq
, &
key
 );

301 
	`¥ötf
( " ok\n" );

306 
	`¥ötf
( " . WritingÅhe certificateÑequest ..." );

307 
	`fÊush
–
°dout
 );

309 if––
ªt
 = 
	`wrôe_˚πifiˇã_ªque°
–&
ªq
, 
›t
.
ouçut_fûe
,

310 
˘r_drbg_øndom
, &
˘r_drbg
 ) ) != 0 )

312 
	`¥ötf
–" faûed\¿ ! wrôe_˚πifˇã_ªque° %d", 
ªt
 );

313 
exô
;

316 
	`¥ötf
( " ok\n" );

318 
exô
:

320 if–
ªt
 != 0 &&Ñet != 1)

322 #ifde‡
POLARSSL_ERROR_C


323 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, ( buf ) );

324 
	`¥ötf
–" - %s\n", 
buf
 );

326 
	`¥ötf
("\n");

330 
	`x509wrôe_c§_‰ì
–&
ªq
 );

331 
	`pk_‰ì
–&
key
 );

332 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

333 
	`íå›y_‰ì
–&
íå›y
 );

335 #i‡
	`deföed
(
_WIN32
)

336 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

337 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

340 –
ªt
 );

341 
	}
}

343 
	gPOLARSSL_ENTROPY_C
 && 
	gPOLARSSL_CTR_DRBG_C
 */

	@polarssl/programs/x509/cert_write.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dlib.h
>

34 
	~<°dio.h
>

36 #i‡!
deföed
(
POLARSSL_X509_CRT_WRITE_C
) || \

37 !
deföed
(
POLARSSL_X509_CRT_PARSE_C
Ë|| !deföed(
POLARSSL_FS_IO
) || \

38 !
deföed
(
POLARSSL_ENTROPY_C
Ë|| !deföed(
POLARSSL_CTR_DRBG_C
) || \

39 !
	$deföed
(
POLARSSL_ERROR_C
)

40 
	$maö
–
¨gc
, *
¨gv
[] )

42 ((Ë
¨gc
);

43 ((Ë
¨gv
);

45 
	`¥ötf
( "POLARSSL_X509_CRT_WRITE_Cánd/or POLARSSL_X509_CRT_PARSE_Cánd/or "

50 
	}
}

53 
	~"pﬁ¨s¶/x509_¸t.h
"

54 
	~"pﬁ¨s¶/x509_c§.h
"

55 
	~"pﬁ¨s¶/íå›y.h
"

56 
	~"pﬁ¨s¶/˘r_drbg.h
"

57 
	~"pﬁ¨s¶/îr‹.h
"

59 
	#DFL_ISSUER_CRT
 ""

	)

60 
	#DFL_REQUEST_FILE
 ""

	)

61 
	#DFL_SUBJECT_KEY
 "subje˘.key"

	)

62 
	#DFL_ISSUER_KEY
 "ˇ.key"

	)

63 
	#DFL_SUBJECT_PWD
 ""

	)

64 
	#DFL_ISSUER_PWD
 ""

	)

65 
	#DFL_OUTPUT_FILENAME
 "˚π.¸t"

	)

66 
	#DFL_SUBJECT_NAME
 "CN=Cît,O=Pﬁ¨SSL,C=NL"

	)

67 
	#DFL_ISSUER_NAME
 "CN=CA,O=Pﬁ¨SSL,C=NL"

	)

68 
	#DFL_NOT_BEFORE
 "20010101000000"

	)

69 
	#DFL_NOT_AFTER
 "20301231235959"

	)

70 
	#DFL_SERIAL
 "1"

	)

71 
	#DFL_SELFSIGN
 0

	)

72 
	#DFL_IS_CA
 0

	)

73 
	#DFL_MAX_PATHLEN
 -1

	)

74 
	#DFL_KEY_USAGE
 0

	)

75 
	#DFL_NS_CERT_TYPE
 0

	)

80 
	s›ti⁄s


82 c⁄° *
	missuî_¸t
;

83 c⁄° *
	mªque°_fûe
;

84 c⁄° *
	msubje˘_key
;

85 c⁄° *
	missuî_key
;

86 c⁄° *
	msubje˘_pwd
;

87 c⁄° *
	missuî_pwd
;

88 c⁄° *
	mouçut_fûe
;

89 c⁄° *
	msubje˘_«me
;

90 c⁄° *
	missuî_«me
;

91 c⁄° *
	mnŸ_bef‹e
;

92 c⁄° *
	mnŸ_a·î
;

93 c⁄° *
	m£rül
;

94 
	m£lfsign
;

95 
	mis_ˇ
;

96 
	mmax_∑thÀn
;

97 
	mkey_ußge
;

98 
	mns_˚π_ty≥
;

99 } 
	g›t
;

101 
wrôe_˚πifiˇã
–
x509wrôe_˚π
 *
¸t
, c⁄° *
ouçut_fûe
,

102 (*
f_∫g
)(*, *, 
size_t
),

103 *
p_∫g
 )

105 
ªt
;

106 
FILE
 *
f
;

107 
ouçut_buf
[4096];

108 
size_t
 
Àn
 = 0;

110 
	`mem£t
–
ouçut_buf
, 0, 4096 );

111 if––
ªt
 = 
	`x509wrôe_¸t_≥m
–
¸t
, 
ouçut_buf
, 4096, 
f_∫g
, 
p_∫g
 ) ) < 0 )

112 –
ªt
 );

114 
Àn
 = 
	`°æí
–(*Ë
ouçut_buf
 );

116 if––
f
 = 
	`f›í
–
ouçut_fûe
, "w" ) ) =
NULL
 )

119 if–
	`fwrôe
–
ouçut_buf
, 1, 
Àn
, 
f
 ) !=Üen )

121 
	`f˛o£
–
f
 );

125 
	`f˛o£
–
f
 );

128 
	}
}

130 #i‡
deföed
(
POLARSSL_X509_CSR_PARSE_C
)

131 
	#USAGE_CSR
 \

134 " subje˘_pwdánd subje˘_«mê¨êign‹ed!\n"

	)

136 
	#USAGE_CSR
 ""

	)

139 
	#USAGE
 \

142 
USAGE_CSR
 \

182 "\n"

	)

184 
	$maö
–
¨gc
, *
¨gv
[] )

186 
ªt
 = 0;

187 
x509_¸t
 
issuî_¸t
;

188 
pk_c⁄ãxt
 
lﬂded_issuî_key
, 
lﬂded_subje˘_key
;

189 
pk_c⁄ãxt
 *
issuî_key
 = &
lﬂded_issuî_key
,

190 *
subje˘_key
 = &
lﬂded_subje˘_key
;

191 
buf
[1024];

192 
issuî_«me
[128];

193 
i
;

194 *
p
, *
q
, *
r
;

195 #i‡
	`deföed
(
POLARSSL_X509_CSR_PARSE_C
)

196 
subje˘_«me
[128];

197 
x509_c§
 
c§
;

199 
x509wrôe_˚π
 
¸t
;

200 
mpi
 
£rül
;

201 
íå›y_c⁄ãxt
 
íå›y
;

202 
˘r_drbg_c⁄ãxt
 
˘r_drbg
;

203 c⁄° *
≥rs
 = "crtÉxampleápp";

208 
	`x509wrôe_¸t_öô
–&
¸t
 );

209 
	`x509wrôe_¸t_£t_md_Æg
–&
¸t
, 
POLARSSL_MD_SHA1
 );

210 
	`pk_öô
–&
lﬂded_issuî_key
 );

211 
	`pk_öô
–&
lﬂded_subje˘_key
 );

212 
	`mpi_öô
–&
£rül
 );

213 #i‡
	`deföed
(
POLARSSL_X509_CSR_PARSE_C
)

214 
	`x509_c§_öô
–&
c§
 );

216 
	`x509_¸t_öô
–&
issuî_¸t
 );

217 
	`mem£t
–
buf
, 0, 1024 );

219 if–
¨gc
 == 0 )

221 
ußge
:

222 
	`¥ötf
–
USAGE
 );

223 
ªt
 = 1;

224 
exô
;

227 
›t
.
issuî_¸t
 = 
DFL_ISSUER_CRT
;

228 
›t
.
ªque°_fûe
 = 
DFL_REQUEST_FILE
;

229 
›t
.
ªque°_fûe
 = 
DFL_REQUEST_FILE
;

230 
›t
.
subje˘_key
 = 
DFL_SUBJECT_KEY
;

231 
›t
.
issuî_key
 = 
DFL_ISSUER_KEY
;

232 
›t
.
subje˘_pwd
 = 
DFL_SUBJECT_PWD
;

233 
›t
.
issuî_pwd
 = 
DFL_ISSUER_PWD
;

234 
›t
.
ouçut_fûe
 = 
DFL_OUTPUT_FILENAME
;

235 
›t
.
subje˘_«me
 = 
DFL_SUBJECT_NAME
;

236 
›t
.
issuî_«me
 = 
DFL_ISSUER_NAME
;

237 
›t
.
nŸ_bef‹e
 = 
DFL_NOT_BEFORE
;

238 
›t
.
nŸ_a·î
 = 
DFL_NOT_AFTER
;

239 
›t
.
£rül
 = 
DFL_SERIAL
;

240 
›t
.
£lfsign
 = 
DFL_SELFSIGN
;

241 
›t
.
is_ˇ
 = 
DFL_IS_CA
;

242 
›t
.
max_∑thÀn
 = 
DFL_MAX_PATHLEN
;

243 
›t
.
key_ußge
 = 
DFL_KEY_USAGE
;

244 
›t
.
ns_˚π_ty≥
 = 
DFL_NS_CERT_TYPE
;

246  
i
 = 1; i < 
¨gc
; i++ )

249 
p
 = 
¨gv
[
i
];

250 if––
q
 = 
	`°rchr
–
p
, '=' ) ) =
NULL
 )

251 
ußge
;

252 *
q
++ = '\0';

254 if–
	`°rcmp
–
p
, "request_file" ) == 0 )

255 
›t
.
ªque°_fûe
 = 
q
;

256 if–
	`°rcmp
–
p
, "subject_key" ) == 0 )

257 
›t
.
subje˘_key
 = 
q
;

258 if–
	`°rcmp
–
p
, "issuer_key" ) == 0 )

259 
›t
.
issuî_key
 = 
q
;

260 if–
	`°rcmp
–
p
, "subject_pwd" ) == 0 )

261 
›t
.
subje˘_pwd
 = 
q
;

262 if–
	`°rcmp
–
p
, "issuer_pwd" ) == 0 )

263 
›t
.
issuî_pwd
 = 
q
;

264 if–
	`°rcmp
–
p
, "issuer_crt" ) == 0 )

265 
›t
.
issuî_¸t
 = 
q
;

266 if–
	`°rcmp
–
p
, "output_file" ) == 0 )

267 
›t
.
ouçut_fûe
 = 
q
;

268 if–
	`°rcmp
–
p
, "subject_name" ) == 0 )

270 
›t
.
subje˘_«me
 = 
q
;

272 if–
	`°rcmp
–
p
, "issuer_name" ) == 0 )

274 
›t
.
issuî_«me
 = 
q
;

276 if–
	`°rcmp
–
p
, "not_before" ) == 0 )

278 
›t
.
nŸ_bef‹e
 = 
q
;

280 if–
	`°rcmp
–
p
, "not_after" ) == 0 )

282 
›t
.
nŸ_a·î
 = 
q
;

284 if–
	`°rcmp
–
p
, "serial" ) == 0 )

286 
›t
.
£rül
 = 
q
;

288 if–
	`°rcmp
–
p
, "selfsign" ) == 0 )

290 
›t
.
£lfsign
 = 
	`©oi
–
q
 );

291 if–
›t
.
£lfsign
 < 0 || opt.selfsign > 1 )

292 
ußge
;

294 if–
	`°rcmp
–
p
, "is_ca" ) == 0 )

296 
›t
.
is_ˇ
 = 
	`©oi
–
q
 );

297 if–
›t
.
is_ˇ
 < 0 || opt.is_ca > 1 )

298 
ußge
;

300 if–
	`°rcmp
–
p
, "max_pathlen" ) == 0 )

302 
›t
.
max_∑thÀn
 = 
	`©oi
–
q
 );

303 if–
›t
.
max_∑thÀn
 < -1 || opt.max_pathlen > 127 )

304 
ußge
;

306 if–
	`°rcmp
–
p
, "key_usage" ) == 0 )

308  
q
 !
NULL
 )

310 if––
r
 = 
	`°rchr
–
q
, ',' ) ) !
NULL
 )

311 *
r
++ = '\0';

313 if–
	`°rcmp
–
q
, "digital_signature" ) == 0 )

314 
›t
.
key_ußge
 |
KU_DIGITAL_SIGNATURE
;

315 if–
	`°rcmp
–
q
, "non_repudiation" ) == 0 )

316 
›t
.
key_ußge
 |
KU_NON_REPUDIATION
;

317 if–
	`°rcmp
–
q
, "key_encipherment" ) == 0 )

318 
›t
.
key_ußge
 |
KU_KEY_ENCIPHERMENT
;

319 if–
	`°rcmp
–
q
, "data_encipherment" ) == 0 )

320 
›t
.
key_ußge
 |
KU_DATA_ENCIPHERMENT
;

321 if–
	`°rcmp
–
q
, "key_agreement" ) == 0 )

322 
›t
.
key_ußge
 |
KU_KEY_AGREEMENT
;

323 if–
	`°rcmp
–
q
, "key_cert_sign" ) == 0 )

324 
›t
.
key_ußge
 |
KU_KEY_CERT_SIGN
;

325 if–
	`°rcmp
–
q
, "crl_sign" ) == 0 )

326 
›t
.
key_ußge
 |
KU_CRL_SIGN
;

328 
ußge
;

330 
q
 = 
r
;

333 if–
	`°rcmp
–
p
, "ns_cert_type" ) == 0 )

335  
q
 !
NULL
 )

337 if––
r
 = 
	`°rchr
–
q
, ',' ) ) !
NULL
 )

338 *
r
++ = '\0';

340 if–
	`°rcmp
–
q
, "ssl_client" ) == 0 )

341 
›t
.
ns_˚π_ty≥
 |
NS_CERT_TYPE_SSL_CLIENT
;

342 if–
	`°rcmp
–
q
, "ssl_server" ) == 0 )

343 
›t
.
ns_˚π_ty≥
 |
NS_CERT_TYPE_SSL_SERVER
;

344 if–
	`°rcmp
–
q
, "email" ) == 0 )

345 
›t
.
ns_˚π_ty≥
 |
NS_CERT_TYPE_EMAIL
;

346 if–
	`°rcmp
–
q
, "object_signing" ) == 0 )

347 
›t
.
ns_˚π_ty≥
 |
NS_CERT_TYPE_OBJECT_SIGNING
;

348 if–
	`°rcmp
–
q
, "ssl_ca" ) == 0 )

349 
›t
.
ns_˚π_ty≥
 |
NS_CERT_TYPE_SSL_CA
;

350 if–
	`°rcmp
–
q
, "email_ca" ) == 0 )

351 
›t
.
ns_˚π_ty≥
 |
NS_CERT_TYPE_EMAIL_CA
;

352 if–
	`°rcmp
–
q
, "object_signing_ca" ) == 0 )

353 
›t
.
ns_˚π_ty≥
 |
NS_CERT_TYPE_OBJECT_SIGNING_CA
;

355 
ußge
;

357 
q
 = 
r
;

361 
ußge
;

364 
	`¥ötf
("\n");

369 
	`¥ötf
( " . SeedingÅheÑandomÇumber generator..." );

370 
	`fÊush
–
°dout
 );

372 
	`íå›y_öô
–&
íå›y
 );

373 if––
ªt
 = 
	`˘r_drbg_öô
–&
˘r_drbg
, 
íå›y_func
, &
íå›y
,

374 (c⁄° *Ë
≥rs
,

375 
	`°æí
–
≥rs
 ) ) ) != 0 )

377 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

378 
	`¥ötf
–" faûed\¿ ! cå_drbg_öôÑëu∫ed %d - %s\n", 
ªt
, 
buf
 );

379 
exô
;

382 
	`¥ötf
( " ok\n" );

386 
	`¥ötf
( " . Reading serialÇumber..." );

387 
	`fÊush
–
°dout
 );

389 if––
ªt
 = 
	`mpi_ªad_°rög
–&
£rül
, 10, 
›t
.serial ) ) != 0 )

391 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

392 
	`¥ötf
–" faûed\¿ ! mpi_ªad_°rögÑëu∫ed -0x%02x - %s\n\n", -
ªt
, 
buf
 );

393 
exô
;

396 
	`¥ötf
( " ok\n" );

400 if–!
›t
.
£lfsign
 && 
	`°æí
–›t.
issuî_¸t
 ) )

405 
	`¥ötf
( " . LoadingÅhe issuer certificate ..." );

406 
	`fÊush
–
°dout
 );

408 if––
ªt
 = 
	`x509_¸t_∑r£_fûe
–&
issuî_¸t
, 
›t
.issuer_crt ) ) != 0 )

410 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

411 
	`¥ötf
–" faûed\¿ ! x509_¸t_∑r£_fûêªtu∫ed -0x%02x - %s\n\n", -
ªt
, 
buf
 );

412 
exô
;

415 
ªt
 = 
	`x509_dn_gës
–
issuî_«me
, (issuer_name),

416 &
issuî_¸t
.
subje˘
 );

417 if–
ªt
 < 0 )

419 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

420 
	`¥ötf
–" faûed\¿ ! x509_dn_gë†ªtu∫ed -0x%02x - %s\n\n", -
ªt
, 
buf
 );

421 
exô
;

424 
›t
.
issuî_«me
 = issuer_name;

426 
	`¥ötf
( " ok\n" );

429 #i‡
	`deföed
(
POLARSSL_X509_CSR_PARSE_C
)

432 if–!
›t
.
£lfsign
 && 
	`°æí
–›t.
ªque°_fûe
 ) )

437 
	`¥ötf
( " . LoadingÅhe certificateÑequest ..." );

438 
	`fÊush
–
°dout
 );

440 if––
ªt
 = 
	`x509_c§_∑r£_fûe
–&
c§
, 
›t
.
ªque°_fûe
 ) ) != 0 )

442 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

443 
	`¥ötf
–" faûed\¿ ! x509_c§_∑r£_fûêªtu∫ed -0x%02x - %s\n\n", -
ªt
, 
buf
 );

444 
exô
;

447 
ªt
 = 
	`x509_dn_gës
–
subje˘_«me
, (subject_name),

448 &
c§
.
subje˘
 );

449 if–
ªt
 < 0 )

451 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

452 
	`¥ötf
–" faûed\¿ ! x509_dn_gë†ªtu∫ed -0x%02x - %s\n\n", -
ªt
, 
buf
 );

453 
exô
;

456 
›t
.
subje˘_«me
 = subject_name;

457 
subje˘_key
 = &
c§
.
pk
;

459 
	`¥ötf
( " ok\n" );

466 if–!
›t
.
£lfsign
 && !
	`°æí
–›t.
ªque°_fûe
 ) )

468 
	`¥ötf
( " . LoadingÅhe subject key ..." );

469 
	`fÊush
–
°dout
 );

471 
ªt
 = 
	`pk_∑r£_keyfûe
–&
lﬂded_subje˘_key
, 
›t
.
subje˘_key
,

472 
›t
.
subje˘_pwd
 );

473 if–
ªt
 != 0 )

475 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

476 
	`¥ötf
–" faûed\¿ !Ök_∑r£_keyfûêªtu∫ed -0x%02x - %s\n\n", -
ªt
, 
buf
 );

477 
exô
;

480 
	`¥ötf
( " ok\n" );

483 
	`¥ötf
( " . LoadingÅhe issuer key ..." );

484 
	`fÊush
–
°dout
 );

486 
ªt
 = 
	`pk_∑r£_keyfûe
–&
lﬂded_issuî_key
, 
›t
.
issuî_key
,

487 
›t
.
issuî_pwd
 );

488 if–
ªt
 != 0 )

490 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

491 
	`¥ötf
–" faûed\¿ !Ök_∑r£_keyfûêªtu∫ed -x%02x - %s\n\n", -
ªt
, 
buf
 );

492 
exô
;

497 if–
	`°æí
–
›t
.
issuî_¸t
 ) )

499 if–!
	`pk_ˇn_do
–&
issuî_¸t
.
pk
, 
POLARSSL_PK_RSA
 ) ||

500 
	`mpi_cmp_mpi
–&
	`pk_rß
–
issuî_¸t
.
pk
 )->
N
,

501 &
	`pk_rß
–*
issuî_key
 )->
N
 ) != 0 ||

502 
	`mpi_cmp_mpi
–&
	`pk_rß
–
issuî_¸t
.
pk
 )->
E
,

503 &
	`pk_rß
–*
issuî_key
 )->
E
 ) != 0 )

505 
	`¥ötf
( " failed\n ! issuer_key doesÇot match issuer certificate\n\n" );

506 
ªt
 = -1;

507 
exô
;

511 
	`¥ötf
( " ok\n" );

513 if–
›t
.
£lfsign
 )

515 
›t
.
subje˘_«me
 = o±.
issuî_«me
;

516 
subje˘_key
 = 
issuî_key
;

519 
	`x509wrôe_¸t_£t_subje˘_key
–&
¸t
, 
subje˘_key
 );

520 
	`x509wrôe_¸t_£t_issuî_key
–&
¸t
, 
issuî_key
 );

525 if––
ªt
 = 
	`x509wrôe_¸t_£t_subje˘_«me
–&
¸t
, 
›t
.
subje˘_«me
 ) ) != 0 )

527 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

528 
	`¥ötf
–" faûed\¿ ! x509wrôe_¸t_£t_subje˘_«mêªtu∫ed -0x%02x - %s\n\n", -
ªt
, 
buf
 );

529 
exô
;

532 if––
ªt
 = 
	`x509wrôe_¸t_£t_issuî_«me
–&
¸t
, 
›t
.
issuî_«me
 ) ) != 0 )

534 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

535 
	`¥ötf
–" faûed\¿ ! x509wrôe_¸t_£t_issuî_«mêªtu∫ed -0x%02x - %s\n\n", -
ªt
, 
buf
 );

536 
exô
;

539 
	`¥ötf
( " . Setting certificate values ..." );

540 
	`fÊush
–
°dout
 );

542 
ªt
 = 
	`x509wrôe_¸t_£t_£rül
–&
¸t
, &
£rül
 );

543 if–
ªt
 != 0 )

545 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

546 
	`¥ötf
–" faûed\¿ ! x509wrôe_¸t_£t_£rü»ªtu∫ed -0x%02x - %s\n\n", -
ªt
, 
buf
 );

547 
exô
;

550 
ªt
 = 
	`x509wrôe_¸t_£t_vÆidôy
–&
¸t
, 
›t
.
nŸ_bef‹e
, o±.
nŸ_a·î
 );

551 if–
ªt
 != 0 )

553 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

554 
	`¥ötf
–" faûed\¿ ! x509wrôe_¸t_£t_vÆidôyÑëu∫ed -0x%02x - %s\n\n", -
ªt
, 
buf
 );

555 
exô
;

558 
	`¥ötf
( " ok\n" );

560 
	`¥ötf
( " . AddingÅhe Basic ConstraintsÉxtension ..." );

561 
	`fÊush
–
°dout
 );

563 
ªt
 = 
	`x509wrôe_¸t_£t_basic_c⁄°øöts
–&
¸t
, 
›t
.
is_ˇ
,

564 
›t
.
max_∑thÀn
 );

565 if–
ªt
 != 0 )

567 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

568 
	`¥ötf
–" faûed\¿ ! x509wrôe_¸t_£t_basic_c⁄åaöt†ªtu∫ed -0x%02x - %s\n\n", -
ªt
, 
buf
 );

569 
exô
;

572 
	`¥ötf
( " ok\n" );

574 #i‡
	`deföed
(
POLARSSL_SHA1_C
)

575 
	`¥ötf
( " . AddingÅhe Subject Key Identifier ..." );

576 
	`fÊush
–
°dout
 );

578 
ªt
 = 
	`x509wrôe_¸t_£t_subje˘_key_idítifõr
–&
¸t
 );

579 if–
ªt
 != 0 )

581 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

582 
	`¥ötf
–" faûed\¿ ! x509wrôe_¸t_£t_subje˘_key_idítifõ∏ªtu∫ed -0x%02x - %s\n\n", -
ªt
, 
buf
 );

583 
exô
;

586 
	`¥ötf
( " ok\n" );

588 
	`¥ötf
( " . AddingÅhe Authority Key Identifier ..." );

589 
	`fÊush
–
°dout
 );

591 
ªt
 = 
	`x509wrôe_¸t_£t_auth‹ôy_key_idítifõr
–&
¸t
 );

592 if–
ªt
 != 0 )

594 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

595 
	`¥ötf
–" faûed\¿ ! x509wrôe_¸t_£t_auth‹ôy_key_idítifõ∏ªtu∫ed -0x%02x - %s\n\n", -
ªt
, 
buf
 );

596 
exô
;

599 
	`¥ötf
( " ok\n" );

602 if–
›t
.
key_ußge
 )

604 
	`¥ötf
( " . AddingÅhe Key UsageÉxtension ..." );

605 
	`fÊush
–
°dout
 );

607 
ªt
 = 
	`x509wrôe_¸t_£t_key_ußge
–&
¸t
, 
›t
.
key_ußge
 );

608 if–
ªt
 != 0 )

610 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

611 
	`¥ötf
–" faûed\¿ ! x509wrôe_¸t_£t_key_ußgêªtu∫ed -0x%02x - %s\n\n", -
ªt
, 
buf
 );

612 
exô
;

615 
	`¥ötf
( " ok\n" );

618 if–
›t
.
ns_˚π_ty≥
 )

620 
	`¥ötf
( " . AddingÅhe NS Cert TypeÉxtension ..." );

621 
	`fÊush
–
°dout
 );

623 
ªt
 = 
	`x509wrôe_¸t_£t_ns_˚π_ty≥
–&
¸t
, 
›t
.
ns_˚π_ty≥
 );

624 if–
ªt
 != 0 )

626 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

627 
	`¥ötf
–" faûed\¿ ! x509wrôe_¸t_£t_ns_˚π_ty≥Ñëu∫ed -0x%02x - %s\n\n", -
ªt
, 
buf
 );

628 
exô
;

631 
	`¥ötf
( " ok\n" );

637 
	`¥ötf
( " . WritingÅhe certificate..." );

638 
	`fÊush
–
°dout
 );

640 if––
ªt
 = 
	`wrôe_˚πifiˇã
–&
¸t
, 
›t
.
ouçut_fûe
,

641 
˘r_drbg_øndom
, &
˘r_drbg
 ) ) != 0 )

643 
	`pﬁ¨s¶_°ªº‹
–
ªt
, 
buf
, 1024 );

644 
	`¥ötf
–" faûed\¿ ! wrôe_˚πifˇã -0x%02x - %s\n\n", -
ªt
, 
buf
 );

645 
exô
;

648 
	`¥ötf
( " ok\n" );

650 
exô
:

651 
	`x509wrôe_¸t_‰ì
–&
¸t
 );

652 
	`pk_‰ì
–&
lﬂded_subje˘_key
 );

653 
	`pk_‰ì
–&
lﬂded_issuî_key
 );

654 
	`mpi_‰ì
–&
£rül
 );

655 
	`˘r_drbg_‰ì
–&
˘r_drbg
 );

656 
	`íå›y_‰ì
–&
íå›y
 );

658 #i‡
	`deföed
(
_WIN32
)

659 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

660 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

663 –
ªt
 );

664 
	}
}

666 
	gPOLARSSL_FS_IO
 && 
	gPOLARSSL_ENTROPY_C
 && 
	gPOLARSSL_CTR_DRBG_C
 &&

667 
	gPOLARSSL_ERROR_C
 */

	@polarssl/programs/x509/crl_app.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dlib.h
>

34 
	~<°dio.h
>

36 
	~"pﬁ¨s¶/x509_¸l.h
"

38 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_RSA_C
) || \

39 !
deföed
(
POLARSSL_X509_CRL_PARSE_C
Ë|| !
	$deföed
(
POLARSSL_FS_IO
)

40 
	$maö
–
¨gc
, *
¨gv
[] )

42 ((Ë
¨gc
);

43 ((Ë
¨gv
);

45 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_RSA_Cánd/or "

48 
	}
}

51 
	#DFL_FILENAME
 "¸l.≥m"

	)

52 
	#DFL_DEBUG_LEVEL
 0

	)

57 
	s›ti⁄s


59 c⁄° *
	mfûíame
;

60 } 
	g›t
;

62 
	#USAGE
 \

66 "\n"

	)

68 
	$maö
–
¨gc
, *
¨gv
[] )

70 
ªt
 = 0;

71 
buf
[100000];

72 
x509_¸l
 
¸l
;

73 
i
;

74 *
p
, *
q
;

79 
	`x509_¸l_öô
–&
¸l
 );

81 if–
¨gc
 == 0 )

83 
ußge
:

84 
	`¥ötf
–
USAGE
 );

85 
exô
;

88 
›t
.
fûíame
 = 
DFL_FILENAME
;

90  
i
 = 1; i < 
¨gc
; i++ )

92 
p
 = 
¨gv
[
i
];

93 if––
q
 = 
	`°rchr
–
p
, '=' ) ) =
NULL
 )

94 
ußge
;

95 *
q
++ = '\0';

97 if–
	`°rcmp
–
p
, "filename" ) == 0 )

98 
›t
.
fûíame
 = 
q
;

100 
ußge
;

106 
	`¥ötf
( "\n . LoadingÅhe CRL ..." );

107 
	`fÊush
–
°dout
 );

109 
ªt
 = 
	`x509_¸l_∑r£_fûe
–&
¸l
, 
›t
.
fûíame
 );

111 if–
ªt
 != 0 )

113 
	`¥ötf
–" faûed\¿ ! x509_¸l_∑r£_fûêªtu∫ed %d\n\n", 
ªt
 );

114 
	`x509_¸l_‰ì
–&
¸l
 );

115 
exô
;

118 
	`¥ötf
( " ok\n" );

123 
	`¥ötf
( " . CRL information ...\n" );

124 
ªt
 = 
	`x509_¸l_öfo
–(*Ë
buf
, –bu‡Ë- 1, " ", &
¸l
 );

125 if–
ªt
 == -1 )

127 
	`¥ötf
–" faûed\¿ ! x509_¸l_öfÿªtu∫ed %d\n\n", 
ªt
 );

128 
	`x509_¸l_‰ì
–&
¸l
 );

129 
exô
;

132 
	`¥ötf
–"%s\n", 
buf
 );

134 
exô
:

135 
	`x509_¸l_‰ì
–&
¸l
 );

137 #i‡
	`deföed
(
_WIN32
)

138 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

139 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

142 –
ªt
 );

143 
	}
}

145 
	gPOLARSSL_FS_IO
 */

	@polarssl/programs/x509/req_app.c

26 #i‡!
deföed
(
POLARSSL_CONFIG_FILE
)

27 
	~"pﬁ¨s¶/c⁄fig.h
"

29 #ö˛udê
POLARSSL_CONFIG_FILE


32 
	~<°rög.h
>

33 
	~<°dlib.h
>

34 
	~<°dio.h
>

36 
	~"pﬁ¨s¶/x509_c§.h
"

38 #i‡!
deföed
(
POLARSSL_BIGNUM_C
Ë|| !deföed(
POLARSSL_RSA_C
) || \

39 !
deföed
(
POLARSSL_X509_CSR_PARSE_C
Ë|| !
	$deföed
(
POLARSSL_FS_IO
)

40 
	$maö
–
¨gc
, *
¨gv
[] )

42 ((Ë
¨gc
);

43 ((Ë
¨gv
);

45 
	`¥ötf
("POLARSSL_BIGNUM_Cánd/or POLARSSL_RSA_Cánd/or "

48 
	}
}

51 
	#DFL_FILENAME
 "˚π.ªq"

	)

52 
	#DFL_DEBUG_LEVEL
 0

	)

57 
	s›ti⁄s


59 c⁄° *
	mfûíame
;

60 } 
	g›t
;

62 
	#USAGE
 \

66 "\n"

	)

68 
	$maö
–
¨gc
, *
¨gv
[] )

70 
ªt
 = 0;

71 
buf
[100000];

72 
x509_c§
 
c§
;

73 
i
;

74 *
p
, *
q
;

79 
	`x509_c§_öô
–&
c§
 );

81 if–
¨gc
 == 0 )

83 
ußge
:

84 
	`¥ötf
–
USAGE
 );

85 
exô
;

88 
›t
.
fûíame
 = 
DFL_FILENAME
;

90  
i
 = 1; i < 
¨gc
; i++ )

92 
p
 = 
¨gv
[
i
];

93 if––
q
 = 
	`°rchr
–
p
, '=' ) ) =
NULL
 )

94 
ußge
;

95 *
q
++ = '\0';

97 if–
	`°rcmp
–
p
, "filename" ) == 0 )

98 
›t
.
fûíame
 = 
q
;

100 
ußge
;

106 
	`¥ötf
( "\n . LoadingÅhe CSR ..." );

107 
	`fÊush
–
°dout
 );

109 
ªt
 = 
	`x509_c§_∑r£_fûe
–&
c§
, 
›t
.
fûíame
 );

111 if–
ªt
 != 0 )

113 
	`¥ötf
–" faûed\¿ ! x509_c§_∑r£_fûêªtu∫ed %d\n\n", 
ªt
 );

114 
	`x509_c§_‰ì
–&
c§
 );

115 
exô
;

118 
	`¥ötf
( " ok\n" );

123 
	`¥ötf
( " . CSR information ...\n" );

124 
ªt
 = 
	`x509_c§_öfo
–(*Ë
buf
, –bu‡Ë- 1, " ", &
c§
 );

125 if–
ªt
 == -1 )

127 
	`¥ötf
–" faûed\¿ ! x509_c§_öfÿªtu∫ed %d\n\n", 
ªt
 );

128 
	`x509_c§_‰ì
–&
c§
 );

129 
exô
;

132 
	`¥ötf
–"%s\n", 
buf
 );

134 
exô
:

135 
	`x509_c§_‰ì
–&
c§
 );

137 #i‡
	`deföed
(
_WIN32
)

138 
	`¥ötf
( " + Press EnterÅoÉxitÅhisÖrogram.\n" );

139 
	`fÊush
–
°dout
 ); 
	`gëch¨
();

142 –
ªt
 );

143 
	}
}

145 
	gPOLARSSL_FS_IO
 */

	@polarssl_config.h

31 #i‚de‡
POLARSSL_CONFIG_H


32 
	#POLARSSL_CONFIG_H


	)

34 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
_CRT_SECURE_NO_DEPRECATE
)

35 
	#_CRT_SECURE_NO_DEPRECATE
 1

	)

69 
	#POLARSSL_HAVE_LONGLONG


	)

86 
	#POLARSSL_HAVE_ASM


	)

105 
	#POLARSSL_HAVE_TIME


	)

160 
	#POLARSSL_CIPHER_MODE_CBC


	)

167 
	#POLARSSL_CIPHER_MODE_CFB


	)

174 
	#POLARSSL_CIPHER_MODE_CTR


	)

213 
	#POLARSSL_CIPHER_PADDING_PKCS7


	)

214 
	#POLARSSL_CIPHER_PADDING_ONE_AND_ZEROS


	)

215 
	#POLARSSL_CIPHER_PADDING_ZEROS_AND_LEN


	)

216 
	#POLARSSL_CIPHER_PADDING_ZEROS


	)

241 
	#POLARSSL_ECP_DP_SECP192R1_ENABLED


	)

242 
	#POLARSSL_ECP_DP_SECP224R1_ENABLED


	)

243 
	#POLARSSL_ECP_DP_SECP256R1_ENABLED


	)

244 
	#POLARSSL_ECP_DP_SECP384R1_ENABLED


	)

245 
	#POLARSSL_ECP_DP_SECP521R1_ENABLED


	)

263 
	#POLARSSL_KEY_EXCHANGE_PSK_ENABLED


	)

283 
	#POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED


	)

328 
	#POLARSSL_KEY_EXCHANGE_RSA_ENABLED


	)

350 
	#POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED


	)

373 
	#POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED


	)

395 
	#POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED


	)

406 
	#POLARSSL_ERROR_STRERROR_BC


	)

417 
	#POLARSSL_ERROR_STRERROR_DUMMY


	)

426 
	#POLARSSL_GENPRIME


	)

433 
	#POLARSSL_FS_IO


	)

493 
	#POLARSSL_PKCS1_V15


	)

503 
	#POLARSSL_PKCS1_V21


	)

520 
	#POLARSSL_SELF_TEST


	)

534 
	#POLARSSL_SSL_ALERT_MESSAGES


	)

570 
	#POLARSSL_SSL_SRV_SUPPORT_SSLV2_CLIENT_HELLO


	)

579 
	#POLARSSL_SSL_MAX_FRAGMENT_LENGTH


	)

591 
	#POLARSSL_SSL_PROTO_SSL3


	)

603 
	#POLARSSL_SSL_PROTO_TLS1


	)

615 
	#POLARSSL_SSL_PROTO_TLS1_1


	)

627 
	#POLARSSL_SSL_PROTO_TLS1_2


	)

640 
	#POLARSSL_SSL_SESSION_TICKETS


	)

649 
	#POLARSSL_SSL_SERVER_NAME_INDICATION


	)

658 
	#POLARSSL_SSL_TRUNCATED_HMAC


	)

724 
	#POLARSSL_AES_C


	)

741 
	#POLARSSL_ARC4_C


	)

751 
	#POLARSSL_ASN1_PARSE_C


	)

760 
	#POLARSSL_ASN1_WRITE_C


	)

772 
	#POLARSSL_BASE64_C


	)

787 
	#POLARSSL_BIGNUM_C


	)

796 
	#POLARSSL_BLOWFISH_C


	)

817 
	#POLARSSL_CAMELLIA_C


	)

829 
	#POLARSSL_CERTS_C


	)

841 
	#POLARSSL_CIPHER_C


	)

855 
	#POLARSSL_CTR_DRBG_C


	)

869 
	#POLARSSL_DEBUG_C


	)

889 
	#POLARSSL_DES_C


	)

915 
	#POLARSSL_DHM_C


	)

936 
	#POLARSSL_ECDH_C


	)

948 
	#POLARSSL_ECDSA_C


	)

961 
	#POLARSSL_ECP_C


	)

975 
	#POLARSSL_ENTROPY_C


	)

987 
	#POLARSSL_ERROR_C


	)

1003 
	#POLARSSL_GCM_C


	)

1026 
	#POLARSSL_HAVEGE_C


	)

1038 
	#POLARSSL_MD_C


	)

1079 
	#POLARSSL_MD5_C


	)

1116 
	#POLARSSL_NET_C


	)

1130 
	#POLARSSL_OID_C


	)

1142 
	#POLARSSL_PADLOCK_C


	)

1156 
	#POLARSSL_PBKDF2_C


	)

1171 
	#POLARSSL_PEM_PARSE_C


	)

1186 
	#POLARSSL_PEM_WRITE_C


	)

1201 
	#POLARSSL_PK_C


	)

1215 
	#POLARSSL_PK_PARSE_C


	)

1229 
	#POLARSSL_PK_WRITE_C


	)

1242 
	#POLARSSL_PKCS5_C


	)

1273 
	#POLARSSL_PKCS12_C


	)

1290 
	#POLARSSL_RSA_C


	)

1305 
	#POLARSSL_SHA1_C


	)

1320 
	#POLARSSL_SHA256_C


	)

1334 
	#POLARSSL_SHA512_C


	)

1346 
	#POLARSSL_SSL_CACHE_C


	)

1360 
	#POLARSSL_SSL_CLI_C


	)

1374 
	#POLARSSL_SSL_SRV_C


	)

1390 
	#POLARSSL_SSL_TLS_C


	)

1402 
	#POLARSSL_TIMING_C


	)

1413 
	#POLARSSL_VERSION_C


	)

1430 
	#POLARSSL_X509_USE_C


	)

1446 
	#POLARSSL_X509_CRT_PARSE_C


	)

1460 
	#POLARSSL_X509_CRL_PARSE_C


	)

1474 
	#POLARSSL_X509_CSR_PARSE_C


	)

1487 
	#POLARSSL_X509_CREATE_C


	)

1500 
	#POLARSSL_X509_CRT_WRITE_C


	)

1513 
	#POLARSSL_X509_CSR_WRITE_C


	)

1523 
	#POLARSSL_XTEA_C


	)

1547 #i‡
deföed
(
POLARSSL_CONFIG_OPTIONS
)

1551 
	#POLARSSL_MPI_WINDOW_SIZE
 6

	)

1552 
	#POLARSSL_MPI_MAX_SIZE
 512

	)

1556 
	#CTR_DRBG_ENTROPY_LEN
 48

	)

1557 
	#CTR_DRBG_RESEED_INTERVAL
 10000

	)

1558 
	#CTR_DRBG_MAX_INPUT
 256

	)

1559 
	#CTR_DRBG_MAX_REQUEST
 1024

	)

1560 
	#CTR_DRBG_MAX_SEED_INPUT
 384

	)

1564 
	#ENTROPY_MAX_SOURCES
 20

	)

1565 
	#ENTROPY_MAX_GATHER
 128

	)

1568 
	#MEMORY_ALIGN_MULTIPLE
 4

	)

1569 
	#POLARSSL_MEMORY_STDMALLOC
 
mÆloc


	)

1570 
	#POLARSSL_MEMORY_STDFREE
 
‰ì


	)

1574 
	#SSL_CACHE_DEFAULT_TIMEOUT
 86400

	)

1575 
	#SSL_CACHE_DEFAULT_MAX_ENTRIES
 50

	)

1579 
	#SSL_MAX_CONTENT_LEN
 16384

	)

1580 
	#SSL_DEFAULT_TICKET_LIFETIME
 86400

	)

1589 #i‡
deföed
(
POLARSSL_DHM_C
Ë&& !deföed(
POLARSSL_BIGNUM_C
)

1593 #i‡
deföed
(
POLARSSL_CTR_DRBG_C
Ë&& !deföed(
POLARSSL_AES_C
)

1597 #i‡
deföed
(
POLARSSL_ECDH_C
Ë&& !deföed(
POLARSSL_ECP_C
)

1601 #i‡
deföed
(
POLARSSL_ECDSA_C
) && \

1602 –!
deföed
(
POLARSSL_ECP_C
) || \

1603 !
deföed
(
POLARSSL_ASN1_PARSE_C
) || \

1604 !
	$deföed
(
POLARSSL_ASN1_WRITE_C
) )

1608 #i‡
	`deföed
(
POLARSSL_ECP_C
Ë&& !deföed(
POLARSSL_BIGNUM_C
)

1612 #i‡
	`deföed
(
POLARSSL_ENTROPY_C
Ë&& (!deföed(
POLARSSL_SHA512_C
) && \

1613 !
	$deföed
(
POLARSSL_SHA256_C
))

1616 #i‡
	`deföed
(
POLARSSL_ENTROPY_C
Ë&& deföed(
POLARSSL_SHA512_C
) && \

1617 
	`deföed
(
POLARSSL_CONFIG_OPTIONS
Ë&& (
CTR_DRBG_ENTROPY_LEN
 > 64)

1620 #i‡
	`deföed
(
POLARSSL_ENTROPY_C
Ë&& !deföed(
POLARSSL_SHA512_C
) && \

1621 
	`deföed
(
POLARSSL_CONFIG_OPTIONS
Ë&& (
CTR_DRBG_ENTROPY_LEN
 > 32)

1625 #i‡
	`deföed
(
POLARSSL_GCM_C
Ë&& !deföed(
POLARSSL_AES_C
)

1629 #i‡
	`deföed
(
POLARSSL_HAVEGE_C
Ë&& !deföed(
POLARSSL_TIMING_C
)

1633 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED
Ë&& !deföed(
POLARSSL_DHM_C
)

1637 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED
) && \

1638 –!
	`deföed
(
POLARSSL_DHM_C
Ë|| !deföed(
POLARSSL_RSA_C
) || \

1639 !
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
Ë|| !
	$deföed
(
POLARSSL_PKCS1_V15
) )

1643 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED
) && \

1644 –!
	`deföed
(
POLARSSL_ECDH_C
Ë|| !deföed(
POLARSSL_RSA_C
) || \

1645 !
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
Ë|| !
	$deföed
(
POLARSSL_PKCS1_V15
) )

1649 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
) && \

1650 –!
	`deföed
(
POLARSSL_ECDH_C
Ë|| !deföed(
POLARSSL_ECDSA_C
) || \

1651 !
	$deföed
(
POLARSSL_X509_CRT_PARSE_C
) )

1655 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED
) && \

1656 –!
	`deföed
(
POLARSSL_RSA_C
Ë|| !deföed(
POLARSSL_X509_CRT_PARSE_C
) ||\

1657 !
	$deföed
(
POLARSSL_PKCS1_V15
) )

1661 #i‡
	`deföed
(
POLARSSL_KEY_EXCHANGE_RSA_ENABLED
) && \

1662 –!
	`deföed
(
POLARSSL_RSA_C
Ë|| !deföed(
POLARSSL_X509_CRT_PARSE_C
) ||\

1663 !
	$deföed
(
POLARSSL_PKCS1_V15
) )

1667 #i‡
	`deföed
(
POLARSSL_MEMORY_BUFFER_ALLOC_C
Ë&& !deföed(
POLARSSL_MEMORY_C
)

1671 #i‡
	`deföed
(
POLARSSL_PBKDF2_C
Ë&& !deföed(
POLARSSL_MD_C
)

1675 #i‡
	`deföed
(
POLARSSL_PEM_PARSE_C
Ë&& !deföed(
POLARSSL_BASE64_C
)

1679 #i‡
	`deföed
(
POLARSSL_PEM_WRITE_C
Ë&& !deföed(
POLARSSL_BASE64_C
)

1683 #i‡
	`deföed
(
POLARSSL_PK_PARSE_C
Ë&& !deföed(
POLARSSL_PK_C
)

1687 #i‡
	`deföed
(
POLARSSL_PK_WRITE_C
Ë&& !deföed(
POLARSSL_PK_C
)

1691 #i‡
	`deföed
(
POLARSSL_PKCS11_C
Ë&& !deföed(
POLARSSL_PK_C
)

1695 #i‡
	`deföed
(
POLARSSL_RSA_C
Ë&& ( !deföed(
POLARSSL_BIGNUM_C
) || \

1696 !
	$deföed
(
POLARSSL_OID_C
) )

1700 #i‡
	`deföed
(
POLARSSL_SSL_CLI_C
Ë&& !deföed(
POLARSSL_SSL_TLS_C
)

1704 #i‡
	`deföed
(
POLARSSL_SSL_TLS_C
Ë&& ( !deföed(
POLARSSL_CIPHER_C
) || \

1705 !
	`deföed
(
POLARSSL_PK_C
Ë|| !
	$deföed
(
POLARSSL_MD_C
) )

1709 #i‡
	`deföed
(
POLARSSL_SSL_SRV_C
Ë&& !deföed(
POLARSSL_SSL_TLS_C
)

1713 #i‡
	`deföed
(
POLARSSL_SSL_TLS_C
Ë&& (!deföed(
POLARSSL_SSL_PROTO_SSL3
) && \

1714 !
	`deföed
(
POLARSSL_SSL_PROTO_TLS1
Ë&& !deföed(
POLARSSL_SSL_PROTO_TLS1_1
) && \

1715 !
	$deföed
(
POLARSSL_SSL_PROTO_TLS1_2
))

1719 #i‡
	`deföed
(
POLARSSL_SSL_TLS_C
Ë&& (deföed(
POLARSSL_SSL_PROTO_SSL3
) && \

1720 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_1
Ë&& !
	$deföed
(
POLARSSL_SSL_PROTO_TLS1
))

1724 #i‡
	`deföed
(
POLARSSL_SSL_TLS_C
Ë&& (deföed(
POLARSSL_SSL_PROTO_TLS1
) && \

1725 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
Ë&& !
	$deföed
(
POLARSSL_SSL_PROTO_TLS1_1
))

1729 #i‡
	`deföed
(
POLARSSL_SSL_TLS_C
Ë&& (deföed(
POLARSSL_SSL_PROTO_SSL3
) && \

1730 
	`deföed
(
POLARSSL_SSL_PROTO_TLS1_2
Ë&& (!deföed(
POLARSSL_SSL_PROTO_TLS1
) || \

1731 !
	$deföed
(
POLARSSL_SSL_PROTO_TLS1_1
)))

1735 #i‡
	`deföed
(
POLARSSL_SSL_SESSION_TICKETS
Ë&& deföed(
POLARSSL_SSL_TLS_C
) && \

1736 –!
	`deföed
(
POLARSSL_AES_C
Ë|| !deföed(
POLARSSL_SHA256_C
) || \

1737 !
	$deföed
(
POLARSSL_CIPHER_MODE_CBC
) )

1741 #i‡
	`deföed
(
POLARSSL_X509_USE_C
Ë&& ( !deföed(
POLARSSL_BIGNUM_C
) || \

1742 !
	`deföed
(
POLARSSL_OID_C
Ë|| !deföed(
POLARSSL_ASN1_PARSE_C
) || \

1743 !
	$deföed
(
POLARSSL_PK_PARSE_C
) )

1747 #i‡
	`deföed
(
POLARSSL_X509_CREATE_C
Ë&& ( !deföed(
POLARSSL_BIGNUM_C
) || \

1748 !
	`deföed
(
POLARSSL_OID_C
Ë|| !deföed(
POLARSSL_ASN1_WRITE_C
) || \

1749 !
	$deföed
(
POLARSSL_PK_WRITE_C
) )

1753 #i‡
	`deföed
(
POLARSSL_X509_CRT_PARSE_C
Ë&& ( !deföed(
POLARSSL_X509_USE_C
) )

1757 #i‡
	`deföed
(
POLARSSL_X509_CRL_PARSE_C
Ë&& ( !deföed(
POLARSSL_X509_USE_C
) )

1761 #i‡
	`deföed
(
POLARSSL_X509_CSR_PARSE_C
Ë&& ( !deföed(
POLARSSL_X509_USE_C
) )

1765 #i‡
	`deföed
(
POLARSSL_X509_CRT_WRITE_C
Ë&& ( !deföed(
POLARSSL_X509_CREATE_C
) )

1769 #i‡
	`deföed
(
POLARSSL_X509_CSR_WRITE_C
Ë&& ( !deföed(
POLARSSL_X509_CREATE_C
) )

	@proxy.c

35 
	~<°dio.h
>

36 
	~<°rög.h
>

37 
	~<î∫o.h
>

38 
	~<uni°d.h
>

39 
	~<°dlib.h
>

40 
	~<sys/sockë.h
>

41 
	~<dbg.h
>

42 
	~<¥oxy.h
>

43 
	~<as£π.h
>

44 
	~<°dlib.h
>

45 
	~<mem/hÆloc.h
>

46 
	~<c⁄√˘i⁄.h
>

47 
	~<hâp11/hâp˛õ¡_∑r£r.h
>

49 
	gPROXY_READ_RETRIES
 = 100;

50 
	gPROXY_READ_RETRY_WARN
 = 10;

52 
	$Proxy_de°roy
(
Proxy
 *
¥oxy
)

54 if(
¥oxy
) {

55 if(
¥oxy
->
£rvî
Ë
	`bde°roy
(proxy->server);

56 
	`h_‰ì
(
¥oxy
);

58 
	}
}

60 
Proxy
 *
	$Proxy_¸óã
(
b°rög
 
£rvî
, 
p‹t
)

62 
Proxy
 *
¥oxy
 = 
	`h_ˇŒoc
((Proxy), 1);

63 
	`check_mem
(
¥oxy
);

65 
¥oxy
->
£rvî
 = 
	`b°r˝y
(server);

66 
¥oxy
->
p‹t
 =Öort;

67 
¥oxy
->
ru¬ög
 = 1;

69  
¥oxy
;

71 
îr‹
:

72 
	`Proxy_de°roy
(
¥oxy
);

73  
NULL
;

74 
	}
}

76 
	$Proxy_ªad_™d_∑r£
(
C⁄√˘i⁄
 *
c⁄n
)

78 
avaû
 = 0;

79 
≈¨£d
 = 0;

80 *
d©a
 = 
NULL
;

81 
åõs
 = 0;

83 
	`as£π
(
c⁄n
->
˛õ¡
 && "httpclient_parserÇot configured.");

84 
	`as£π
(
c⁄n
->
¥oxy_iob
 && "conn->proxy_iobÇot configured.");

86 
	`hâp˛õ¡_∑r£r_öô
(
c⁄n
->
˛õ¡
);

88 
åõs
 = 0;Årõ†< 
PROXY_READ_RETRIES
;Åries++) {

89 
d©a
 = 
	`IOBuf_ªad_some
(
c⁄n
->
¥oxy_iob
, &
avaû
);

90 
	`check
(
d©a
 !
NULL
, "FailedÅoÑead fromÖroxy.");

91 
	`check
(
avaû
 > 0, "ProxyÑeadÑeturned %d bytes.",ávail);

93 
d©a
[
avaû
] = '\0';

94 
≈¨£d
 = 
	`hâp˛õ¡_∑r£r_execuã
(
c⁄n
->
˛õ¡
, 
d©a
, 
avaû
,Çparsed);

95 
	`check
(
≈¨£d
 != -1, "MajorÖarsing failure fromÖroxy backend, Tell Zed.");

96 
	`check
(!
	`hâp˛õ¡_∑r£r_has_îr‹
(
c⁄n
->
˛õ¡
), "ParsingÉrror from server.");

98 if(
	`hâp˛õ¡_∑r£r_föish
(
c⁄n
->
˛õ¡
) == 0) {

99 
	`fdwaô
(
c⁄n
->
¥oxy_iob
->
fd
, 'r');

105 if(
åõs
 > 
PROXY_READ_RETRY_WARN
) {

106 
	`log_w¨n
("Thê¥oxy backíd ha†®bad I/OÖ©ã∫Åh©Ñequúed %dÑód†bef‹ê®hódî wa†com∂ëed. You should w‹ryábouàô†≥rf‹m™˚.", 
åõs
);

109 
	`check
(
åõs
 < 
PROXY_READ_RETRIES
, "BackendÖroxy sendsÅoo many smallÖackets,Åried %dÅimesÅoÑead from it.",Åries);

110 
	`check
(()
c⁄n
->
˛õ¡
->
body_°¨t
 <
avaû
, "ReadÅoo much.");

113  
≈¨£d
;

115 
îr‹
:

117 
	}
}

120 
ölöe
 
	$∑r£_chunks
(*
d©a
, 
hâp˛õ¡_∑r£r
 *
˛õ¡
, 
avaû
)

123 
d©a
[
avaû
] = '\0';

124 
	`hâp˛õ¡_∑r£r_öô
(
˛õ¡
);

125 
rc
 = 
	`hâp˛õ¡_∑r£r_execuã
(
˛õ¡
, 
d©a
, 
avaû
, 0);

126 
	`check
(
rc
 != -1, "FatalÖarsingÉrror fromÖroxy, Tell Zed.");

127 
	`check
(!
	`hâp˛õ¡_∑r£r_has_îr‹
(
˛õ¡
), "ParsingÉrror from server.");

128 
	`check
(
	`hâp˛õ¡_∑r£r_föish
(
˛õ¡
), "Parser didn't getá fullÑesponse.");

130  
rc
;

131 
îr‹
:

133 
	}
}

136 
	$Proxy_°ªam_chunks
(
C⁄√˘i⁄
 *
c⁄n
)

138 
rc
 = 0;

139 
IOBuf
 *
¥oxy_iob
 = 
c⁄n
->proxy_iob;

140 
	`as£π
(
¥oxy_iob
 && "proxy IOBufÇot configured.");

142 
avaû
 = 
	`IOBuf_avaû
(
¥oxy_iob
);

143 *
d©a
 = 
NULL
;

144 
hâp˛õ¡_∑r£r
 *
˛õ¡
 = 
c⁄n
->client;

146 
	`as£π
(
˛õ¡
 && "httpclient_parserÇot configured.");

147 
	`as£π
(
˛õ¡
->
chunked
 && "parser should indicate it has chunks.");

148 
	`as£π
(!
˛õ¡
->
chunks_d⁄e
 && "parser shouldÇot be in chunks done state.");

149 
	`as£π
(
avaû
 >= 0 && "Can't haveá < 0ávail.");

151 
d©a
 = 
avaû
 =0 ? 
	`IOBuf_ªad_some
(
¥oxy_iob
, &avaûË: 
	`IOBuf_°¨t
(proxy_iob);

154 
rc
 = 
	`∑r£_chunks
(
d©a
, 
˛õ¡
, 
avaû
);

155 
	`check_debug
(
rc
 != -1, "FailedÅoÖarse chunkedÉncoding from client.");

158 
rc
 = 
	`IOBuf_°ªam
(
¥oxy_iob
, 
c⁄n
->
iob
, 
˛õ¡
->
body_°¨t
 + clõ¡->
c⁄ã¡_Àn
 + 2);

159 
	`check_debug
(
rc
 != -1, "FailedÅo stream contentÅo client.");

161  
˛õ¡
->
chunks_d⁄e
;

163 
îr‹
:

165 
	}
}

168 
	$Proxy_°ªam_to_˛o£
(
C⁄√˘i⁄
 *
c⁄n
)

170 
c⁄n
->
˛õ¡
->
˛o£
 = 1;

172 
tŸÆ
 = 
c⁄n
->
iob
->
Àn
 <c⁄n->
¥oxy_iob
->len ?

173 
c⁄n
->
iob
->
Àn
 : c⁄n->
¥oxy_iob
->len;

175 
rc
 = 
	`IOBuf_£nd_Æl
(
c⁄n
->
iob
, 
	`IOBuf_°¨t
(c⁄n->
¥oxy_iob
),

176 
	`IOBuf_avaû
(
c⁄n
->
¥oxy_iob
));

178 
	`check_debug
(
rc
 != -1, "Failure sendingáll onÖroxy stream.");

180 
	`check
(
	`IOBuf_ªad_commô
(
c⁄n
->
¥oxy_iob
, 
	`IOBuf_avaû
(conn->proxy_iob)) != -1, "Final commit failedÖroxy streaming until closed.");

182 
rc
 = 0;Ñc != -1;) {

183 
rc
 = 
	`IOBuf_°ªam
(
c⁄n
->
¥oxy_iob
, c⁄n->
iob
, 
tŸÆ
);

188 
îr‹
:

190 
	}
}

	@proxy.h

35 #i‚de‡
_¥oxy_h


36 
	#_¥oxy_h


	)

38 
	~<b°rög.h
>

40 
	sProxy
 {

41 
b°rög
 
	m£rvî
;

42 
	mp‹t
;

43 
	mru¬ög
;

44 } 
	tProxy
;

46 
Proxy
 *
Proxy_¸óã
(
b°rög
 
£rvî
, 
p‹t
);

48 
Proxy_de°roy
(
Proxy
 *
¥oxy
);

50 
	gC⁄√˘i⁄
;

51 
Proxy_°ªam_ª•⁄£
(
C⁄√˘i⁄
 *
c⁄n
, 
tŸÆ
, 
ƒód
);

53 
Proxy_°ªam_chunks
(
C⁄√˘i⁄
 *
c⁄n
);

55 
Proxy_ªad_™d_∑r£
(
C⁄√˘i⁄
 *
c⁄n
);

57 
Proxy_°ªam_to_˛o£
(
C⁄√˘i⁄
 *
c⁄n
);

59 
PROXY_READ_RETRIES
;

60 
PROXY_READ_RETRY_WARN
;

	@register.c

35 
	~<as£π.h
>

36 
	~<î∫o.h
>

37 
	~<°rög.h
>

38 
	~<uni°d.h
>

39 
	~<sys/ty≥s.h
>

40 
	~<sig«l.h
>

41 
	~"äë°rögs.h
"

42 
	~"äë°rögs_im∂.h
"

44 
	~"ªgi°î.h
"

45 
	~"c⁄√˘i⁄.h
"

46 
	~"dbg.h
"

47 
	~"èsk/èsk.h
"

48 
	~"adt/d¨øy.h
"

49 
	~"£âög.h
"

50 
	~"adt/ødixm≠.h
"

52 
uöt32_t
 
	gTHE_CURRENT_TIME_IS
 = 0;

54 
d¨øy_t
 *
	gREGISTRATIONS
 = 
NULL
;

55 
RadixM≠
 *
	gREG_ID_TO_FD
 = 
NULL
;

56 
	gNUM_REG_FD
 = 0;

58 
	$Regi°î_öô
()

60 
THE_CURRENT_TIME_IS
 = 
	`time
(
NULL
);

61 
REGISTRATIONS
 = 
	`d¨øy_¸óã
((
Regi°øti⁄
), 
MAX_REGISTERED_FDS
);

62 
REG_ID_TO_FD
 = 
	`RadixM≠_¸óã
(
MAX_REGISTERED_FDS
 * 10);

63 
	}
}

66 
	$Regi°î_de°roy
()

68 
	`d¨øy_de°roy
(
REGISTRATIONS
);

69 
	`RadixM≠_de°roy
(
REG_ID_TO_FD
);

70 
	}
}

72 
ölöe
 
	$Regi°î_˛ór
(
Regi°øti⁄
 *
ªg
)

74 
ªg
->
d©a
 = 
NULL
;

75 
ªg
->
œ°_pög
 = 0;

76 
ªg
->
byãs_ªad
 = 0;

77 
ªg
->
byãs_wrôãn
 = 0;

78 
ªg
->
œ°_ªad
 = 0;

79 
ªg
->
œ°_wrôe
 = 0;

81 if(
ªg
->
id
 !
UINT32_MAX
) {

82 
RMEÀmít
 *
ñ
 = 
	`RadixM≠_föd
(
REG_ID_TO_FD
, 
ªg
->
id
);

84 if(
ñ
 !
NULL
) {

85 
	`RadixM≠_dñëe
(
REG_ID_TO_FD
, 
ñ
);

88 
	}
}

90 
	$Regi°î_c⁄√˘
(
fd
, 
C⁄√˘i⁄
* 
d©a
)

92 
	`check
(
fd
 < 
MAX_REGISTERED_FDS
, "FD givenÅoÑegister is greaterÅhan max.");

93 
	`check
(
d©a
 !
NULL
, "data can't be NULL");

95 
Regi°øti⁄
 *
ªg
 = 
	`d¨øy_gë
(
REGISTRATIONS
, 
fd
);

97 if(
ªg
 =
NULL
) {

98 
ªg
 = 
	`d¨øy_√w
(
REGISTRATIONS
);

99 
	`check
(
ªg
 !
NULL
, "FailedÅoállocateáÇewÑegistration.");

102 
	`d¨øy_£t
(
REGISTRATIONS
, 
fd
, 
ªg
);

103 
	`d¨øy_©èch
(
REGISTRATIONS
, 
ªg
);

106 if(
	`Regi°î_vÆid
(
ªg
)) {

108 
rc
 = 
	`Regi°î_disc⁄√˘
(
fd
);

109 
	`check
(
rc
 != -1, "WeirdÉrrorÅryingÅo disconnect. Tell Zed.");

110 
	`èsksig«l
(
ªg
->
èsk
, 
SIGINT
);

113 
ªg
->
d©a
 = data;

114 
ªg
->
œ°_pög
 = 
THE_CURRENT_TIME_IS
;

115 
ªg
->
fd
 = fd;

116 
ªg
->
èsk
 = 
	`èsk£lf
();

118 
ªg
->
id
 = 
UINT32_MAX
;

121 
NUM_REG_FD
++;

124 
îr‹
:

126 
	}
}

129 
	$Regi°î_disc⁄√˘
(
fd
)

131 
	`check
(
fd
 < 
MAX_REGISTERED_FDS
, "FD givenÅoÑegister is greaterÅhan max.");

132 
	`check
(
fd
 >= 0, "Invalid FD given for disconnect.");

134 
Regi°øti⁄
 *
ªg
 = 
	`d¨øy_gë
(
REGISTRATIONS
, 
fd
);

136 
	`check_debug
(
	`Regi°î_vÆid
(
ªg
), "Aâem±Åÿuƒegi°î FD %d which i†Æªady g⁄e.", 
fd
);

137 
	`check
(
ªg
->
fd
 == fd, "AskedÅo disconnect fd %d butÑegister had %d", fd,Ñeg->fd);

139 if(
	`IOBuf_˛o£
(
ªg
->
d©a
->
iob
) != 0) {

140 
	`debug
("FailedÅo close IOBuffer,Örobably SSLÉrror.");

143 
	`Regi°î_˛ór
(
ªg
);

146 
NUM_REG_FD
--;

149 
îr‹
:

150 
	`fd˛o£
(
fd
);

152 
	}
}

154 
	$Regi°î_pög
(
fd
)

156 
	`check
(
fd
 < 
MAX_REGISTERED_FDS
, "FD givenÅoÑegister is greaterÅhan max.");

157 
	`check
(
fd
 >= 0, "Invalid FD given forÖing: %d", fd);

158 
Regi°øti⁄
 *
ªg
 = 
	`d¨øy_gë
(
REGISTRATIONS
, 
fd
);

160 
	`check_debug
(
	`Regi°î_vÆid
(
ªg
), "Aâem±Åÿpögá¿FDÅh© i¢'àªgi°îed: %d", 
fd
);

162 
ªg
->
œ°_pög
 = 
THE_CURRENT_TIME_IS
;

163  
ªg
->
œ°_pög
;

165 
îr‹
:

167 
	}
}

170 
	$Regi°î_ªad
(
fd
, 
off_t
 
byãs
)

172 
	`check
(
fd
 < 
MAX_REGISTERED_FDS
, "FD givenÅoÑegister is greaterÅhan max.");

173 
	`check
(
fd
 >= 0, "Invalid FD given for Register_read: %d", fd);

174 
Regi°øti⁄
 *
ªg
 = 
	`d¨øy_gë
(
REGISTRATIONS
, 
fd
);

176 if(
	`Regi°î_vÆid
(
ªg
)) {

177 
ªg
->
œ°_ªad
 = 
THE_CURRENT_TIME_IS
;

178 
ªg
->
byãs_ªad
 +
byãs
;

179  
ªg
->
œ°_ªad
;

182 
îr‹
:

184 
	}
}

187 
	$Regi°î_wrôe
(
fd
, 
off_t
 
byãs
)

189 
	`check
(
fd
 < 
MAX_REGISTERED_FDS
, "FD givenÅoÑegister is greaterÅhan max.");

190 
	`check
(
fd
 >= 0, "Invalid FD given for Register_write: %d", fd);

191 
Regi°øti⁄
 *
ªg
 = 
	`d¨øy_gë
(
REGISTRATIONS
, 
fd
);

193 if(
	`Regi°î_vÆid
(
ªg
)) {

194 
ªg
->
œ°_wrôe
 = 
THE_CURRENT_TIME_IS
;

195 
ªg
->
byãs_wrôãn
 +
byãs
;

196  
ªg
->
œ°_wrôe
;

199 
îr‹
:

201 
	}
}

204 
C⁄√˘i⁄
 *
	$Regi°î_fd_exi°s
(
fd
)

206 
	`check
(
fd
 < 
MAX_REGISTERED_FDS
, "FD givenÅoÑegister is greaterÅhan max.");

207 
	`check
(
fd
 >= 0, "Invalid FD given forÉxists check");

209 
Regi°øti⁄
 *
ªg
 = 
	`d¨øy_gë
(
REGISTRATIONS
, 
fd
);

211  
ªg
 !
NULL
 ?Ñeg->
d©a
 : NULL;

212 
îr‹
:

213  
NULL
;

214 
	}
}

217 
	$Regi°î_fd_f‹_id
(
uöt32_t
 
id
)

219 
RMEÀmít
 *
ñ
 = 
	`RadixM≠_föd
(
REG_ID_TO_FD
, 
id
);

221 
	`check_debug
(
ñ
 !
NULL
, "Id %dÇŸÑegi°îed.", 
id
);

223 
Regi°øti⁄
 *
ªg
 = 
	`d¨øy_gë
(
REGISTRATIONS
, 
ñ
->
d©a
.
vÆue
);

224 
	`check_debug
(
	`Regi°î_vÆid
(
ªg
), "NŸhögÑegi°îed undî id %d.", 
id
);

226  
ªg
->
fd
;

227 
îr‹
:

229 
	}
}

231 
uöt32_t
 
	$Regi°î_id_f‹_fd
(
fd
)

233 
	`check
(
fd
 < 
MAX_REGISTERED_FDS
, "FD givenÅoÑegister is greaterÅhan max.");

234 
Regi°øti⁄
 *
ªg
 = 
	`d¨øy_gë
(
REGISTRATIONS
, 
fd
);

235 
	`check_debug
(
	`Regi°î_vÆid
(
ªg
), "NÿID f‹ fd: %d", 
fd
);

237 if(
ªg
->
id
 =
UINT32_MAX
) {

239 
ªg
->
id
 = 
	`RadixM≠_push
(
REG_ID_TO_FD
,Ñeg->
fd
);

240 
	`check
(
ªg
->
id
 !
UINT32_MAX
, "FailedÅoÑegisterÇew conn_id.");

243  
ªg
->
id
;

244 
îr‹
:

246 
	}
}

248 
	#ZERO_OR_DELTA
(
N
, 
T
Ë(T =0 ? T : N - T)

	)

251 
ègb°rög
 
	gREGISTER_HEADERS
 = 
bsSètic
("86:2:id,2:fd,4:type,9:last_ping,9:last_read,10:last_write,10:bytes_read,13:bytes_written,]");

253 
äs_vÆue_t
 *
	$Regi°î_öfo
()

255 
i
 = 0;

256 
Regi°øti⁄
 *
ªg
;

257 
äs_vÆue_t
 *
rows
 = 
	`äs_√w_li°
();

258 
nsˇ¬ed
 = 0;

260 
time_t
 
now
 = 
THE_CURRENT_TIME_IS
;

262 
i
 = 0, 
nsˇ¬ed
 = 0; i < 
	`d¨øy_max
(
REGISTRATIONS
Ë&&Çsˇ¬ed < 
NUM_REG_FD
; i++) {

263 
ªg
 = 
	`d¨øy_gë
(
REGISTRATIONS
, 
i
);

265 if(
	`Regi°î_vÆid
(
ªg
)) {

266 
nsˇ¬ed
++;

268 
äs_vÆue_t
 *
d©a
 = 
	`äs_√w_li°
();

269 
	`äs_add_to_li°
(
d©a
, 
	`äs_√w_öãgî
(
ªg
->
id
 =
UINT32_MAX
 ? -1 : ()reg->id));

270 
	`äs_add_to_li°
(
d©a
, 
	`äs_√w_öãgî
(
i
));

271 
	`äs_add_to_li°
(
d©a
, 
	`äs_√w_öãgî
(
ªg
->d©a->
ty≥
));

272 
	`äs_add_to_li°
(
d©a
, 
	`äs_√w_öãgî
(
	`ZERO_OR_DELTA
(
now
, 
ªg
->
œ°_pög
)));

273 
	`äs_add_to_li°
(
d©a
, 
	`äs_√w_öãgî
(
	`ZERO_OR_DELTA
(
now
, 
ªg
->
œ°_ªad
)));

274 
	`äs_add_to_li°
(
d©a
, 
	`äs_√w_öãgî
(
	`ZERO_OR_DELTA
(
now
, 
ªg
->
œ°_wrôe
)));

275 
	`äs_add_to_li°
(
d©a
, 
	`äs_√w_öãgî
(
ªg
->
byãs_ªad
));

276 
	`äs_add_to_li°
(
d©a
, 
	`äs_√w_öãgî
(
ªg
->
byãs_wrôãn
));

277 
	`äs_add_to_li°
(
rows
, 
d©a
);

281  
	`äs_°™d¨d_èbÀ
(&
REGISTER_HEADERS
, 
rows
);

282 
	}
}

284 
	$Regi°î_˛ónout
()

286 
i
 = 0;

287 
nkûÀd
 = 0;

288 
nsˇ¬ed
 = 0;

289 
time_t
 
now
 = 
THE_CURRENT_TIME_IS
;

290 
mö_pög
 = 
	`Sëtög_gë_öt
("limôs.mö_pög", 
DEFAULT_MIN_PING
);

291 
mö_wrôe_øã
 = 
	`Sëtög_gë_öt
("limôs.mö_wrôe_øã", 
DEFAULT_MIN_READ_RATE
);

292 
mö_ªad_øã
 = 
	`Sëtög_gë_öt
("limôs.mö_ªad_øã", 
DEFAULT_MIN_WRITE_RATE
);

293 
kûl_limô
 = 
	`Sëtög_gë_öt
("limôs.kûl_limô", 
DEFAULT_KILL_LIMIT
);

295 
i
 = 0, 
nsˇ¬ed
 = 0; i < 
	`d¨øy_max
(
REGISTRATIONS
Ë&&Çsˇ¬ed < 
NUM_REG_FD
; i++) {

296 
Regi°øti⁄
 *
ªg
 = 
	`d¨øy_gë
(
REGISTRATIONS
, 
i
);

298 if(
	`Regi°î_vÆid
(
ªg
)) {

299 
nsˇ¬ed
++;

301 
œ°_pög
 = 
	`ZERO_OR_DELTA
(
now
, 
ªg
->last_ping);

302 
off_t
 
ªad_øã
 = 
ªg
->
byãs_ªad
 / (
	`ZERO_OR_DELTA
(
now
,Ñeg->
œ°_ªad
) + 1);

303 
off_t
 
wrôe_øã
 = 
ªg
->
byãs_wrôãn
 / (
	`ZERO_OR_DELTA
(
now
,Ñeg->
œ°_wrôe
) + 1);

304 
should_kûl
 = 0;

306 
	`debug
("Checking fd=%d:conn_id=%dágainstÜast_ping: %d,Ñead_rate: %d, write_rate: %d",

307 
i
, 
ªg
->
id
, 
œ°_pög
, 
ªad_øã
, 
wrôe_øã
);

310 if(
mö_pög
 !0 && 
œ°_pög
 > min_ping) {

311 
	`debug
("Connection fd=%d:conn_id=%d overÜimits.min_pingÅime: %d < %d",

312 
i
, 
ªg
->
id
, 
mö_pög
, 
œ°_pög
);

313 
should_kûl
++;

316 if(
mö_ªad_øã
 !0 && 
ªad_øã
 < min_read_rate) {

317 
	`debug
("Connection fd=%d:conn_id=%dÑeadÑateÜowerÅhanállowed: %d < %d",

318 
i
, 
ªg
->
id
, 
ªad_øã
, 
mö_ªad_øã
);

319 
should_kûl
++;

322 if(
mö_wrôe_øã
 !0 && 
wrôe_øã
 < min_write_rate) {

323 
	`debug
("Connection fd=%d:conn_id=%d writeÑateÜowerÅhanállowed: %d < %d",

324 
i
, 
ªg
->
id
, 
wrôe_øã
, 
mö_wrôe_øã
);

325 
should_kûl
++;

328 if(
should_kûl
 > 
kûl_limô
) {

329 
nkûÀd
++;

330 
	`Regi°î_disc⁄√˘
(
i
);

335 if(
nkûÀd
) {

336 
	`log_w¨n
("KûÀd %d c⁄√˘i⁄†acc‹dögÅÿmö_pög: %d, mö_wrôe_øã: %d, mö_ªad_øã: %d", 
nkûÀd
, 
mö_pög
, 
mö_wrôe_øã
, 
mö_ªad_øã
);

339  
nkûÀd
;

340 
	}
}

	@register.h

35 #i‚de‡
_ªgi°î_h


36 
	#_ªgi°î_h


	)

38 
	~<time.h
>

39 
	~<°döt.h
>

40 
	~<b°rög.h
>

41 
	~<sys/ty≥s.h
>

42 
	~"èsk/èsk.h
"

44 
	#MAX_REGISTERED_FDS
 64 * 1024

	)

45 
	#DEFAULT_MIN_PING
 120

	)

46 
	#DEFAULT_MIN_READ_RATE
 300

	)

47 
	#DEFAULT_MIN_WRITE_RATE
 300

	)

48 
	#DEFAULT_KILL_LIMIT
 2

	)

51 
uöt32_t
 
THE_CURRENT_TIME_IS
;

53 
	sRegi°øti⁄
 {

54 
C⁄√˘i⁄
 *
	md©a
;

55 
Task
 *
	mèsk
;

56 
uöt16_t
 
	mfd
;

57 
uöt32_t
 
	mid
;

58 
uöt32_t
 
	mœ°_pög
;

59 
off_t
 
	mœ°_ªad
;

60 
off_t
 
	mœ°_wrôe
;

61 
off_t
 
	mbyãs_ªad
;

62 
off_t
 
	mbyãs_wrôãn
;

63 } 
	tRegi°øti⁄
;

65 
Regi°î_c⁄√˘
(
fd
, 
C⁄√˘i⁄
 *
d©a
);

67 
Regi°î_disc⁄√˘
(
fd
);

69 
Regi°î_pög
(
fd
);

71 
Regi°î_ªad
(
fd
, 
off_t
 
byãs
);

73 
Regi°î_wrôe
(
fd
, 
off_t
 
byãs
);

75 
Regi°î_öô
();

77 
C⁄√˘i⁄
 *
Regi°î_fd_exi°s
(
fd
);

79 
uöt32_t
 
Regi°î_id_f‹_fd
(
fd
);

81 
Regi°î_fd_f‹_id
(
uöt32_t
 
id
);

83 
Regi°î_˛ónout
();

85 
Regi°î_de°roy
();

87 
äs_vÆue_t
 *
Regi°î_öfo
();

89 
	#Regi°î_vÆid
(
R
Ë((RË!
NULL
 && (R)->
d©a
 !NULL)

	)

	@request.c

35 
	#_XOPEN_SOURCE
 1

	)

37 
	~<°dlib.h
>

38 
	~<as£π.h
>

39 
	~<°rög.h
>

40 
	~<time.h
>

42 
	~"£âög.h
"

43 
	~"ªgi°î.h
"

44 
	~"hódîs.h
"

45 
	~"adt/hash.h
"

46 
	~"dbg.h
"

47 
	~"ªque°.h
"

48 
	~"äë°rögs.h
"

49 
	~"websockë.h
"

50 
	~"c⁄√˘i⁄.h
"

52 
	gMAX_HEADER_COUNT
=0;

53 
	gMAX_DUPE_HEADERS
=5;

55 
	$Reque°_öô
()

57 
MAX_HEADER_COUNT
 = 
	`Sëtög_gë_öt
("limits.header_count", 128 * 10);

58 
	`log_öfo
("MAXÜimôs.hódî_cou¡=%d", 
MAX_HEADER_COUNT
);

59 
	}
}

62 
hnode_t
 *
	$ªq_Æloc_hash
(*
nŸu£d
)

64 ()
nŸu£d
;

66  (
hnode_t
 *)
	`mÆloc
((hnode_t));

67 
	}
}

69 
	$ªq_‰ì_hash
(
hnode_t
 *
node
, *
nŸu£d
)

71 ()
nŸu£d
;

73 
	`b°rLi°De°roy
((
b°rLi°
 *)
	`hnode_gë
(
node
));

74 
	`bde°roy
((
b°rög
)
	`hnode_gëkey
(
node
));

75 
	`‰ì
(
node
);

76 
	}
}

79 
	$ªque°_mëhod_cb
(*
d©a
, c⁄° *
©
, 
size_t
 
Àngth
)

81 
Reque°
 *
ªq
 = (Reque° *)
d©a
;

82 
ªq
->
ªque°_mëhod
 = 
	`blk2b°r
(
©
, 
Àngth
);

83 
	}
}

85 
	$‰agmít_cb
(*
d©a
, c⁄° *
©
, 
size_t
 
Àngth
)

87 
Reque°
 *
ªq
 = (Reque° *)
d©a
;

88 
ªq
->
‰agmít
 = 
	`blk2b°r
(
©
, 
Àngth
);

89 
	}
}

91 
	$hâp_vîsi⁄_cb
(*
d©a
, c⁄° *
©
, 
size_t
 
Àngth
)

93 
Reque°
 *
ªq
 = (Reque° *)
d©a
;

94 
ªq
->
vîsi⁄
 = 
	`blk2b°r
(
©
, 
Àngth
);

95 
	}
}

98 
	$hódî_d⁄e_cb
(*
d©a
, c⁄° *
©
, 
size_t
 
Àngth
)

100 ()
©
;

101 ()
Àngth
;

103 
Reque°
 *
ªq
 = (Reque° *)
d©a
;

106 c⁄° *
˛í
 = 
	`bd©a
(
	`Reque°_gë
(
ªq
, &
HTTP_CONTENT_LENGTH
));

107 if(
˛í
Ë
ªq
->
∑r£r
.
c⁄ã¡_Àn
 = 
	`©oi
(clen);

110 
ªq
->
ho°
 = 
	`Reque°_gë
‘eq, &
HTTP_HOST
);

111 
cﬁ⁄
 = 
	`b°rchr
(
ªq
->
ho°
, ':');

112 if(
ªq
->
ho°
) {

113 
ªq
->
ho°_«me
 = 
cﬁ⁄
 > 0 ? 
	`bHód
‘eq->
ho°
, cﬁ⁄Ë: 
	`b°r˝y
(req->host);

115 
	}
}

117 
	$uri_cb
(*
d©a
, c⁄° *
©
, 
size_t
 
Àngth
)

119 
Reque°
 *
ªq
 = (Reque° *)
d©a
;

120 
ªq
->
uri
 = 
	`blk2b°r
(
©
, 
Àngth
);

121 
	}
}

123 
	$∑th_cb
(*
d©a
, c⁄° *
©
, 
size_t
 
Àngth
)

125 
Reque°
 *
ªq
 = (Reque° *)
d©a
;

126 
	`as£π
(
ªq
->
∑th
 =
NULL
 && "This shouldÇot happen, Tell Zed.");

127 
ªq
->
∑th
 = 
	`blk2b°r
(
©
, 
Àngth
);

128 
	}
}

130 
	$quîy_°rög_cb
(*
d©a
, c⁄° *
©
, 
size_t
 
Àngth
)

132 
Reque°
 *
ªq
 = (Reque° *)
d©a
;

133 
ªq
->
quîy_°rög
 = 
	`blk2b°r
(
©
, 
Àngth
);

134 
	}
}

137 
	$hódî_fõld_cb
(*
d©a
, c⁄° *
fõld
, 
size_t
 
Êí
,

138 c⁄° *
vÆue
, 
size_t
 
vÀn
)

140 
Reque°
 *
ªq
 = (Reque° *)
d©a
;

142 if(
	`hash_isfuŒ
(
ªq
->
hódîs
)) {

143 
	`log_îr
("Request had moreÅhan %d headersállowed byÜimits.header_count.",

144 
MAX_HEADER_COUNT
);

146 
b°rög
 
v°r
 = 
	`blk2b°r
(
vÆue
, 
vÀn
);

147 
b°rög
 
f°r
 = 
	`blk2b°r
(
fõld
, 
Êí
);

148 
	`btﬁowî
(
f°r
);

149 
	`Reque°_£t
(
ªq
, 
f°r
, 
v°r
, 0);

151 
	`bde°roy
(
f°r
);

153 
	}
}

160 
	$Reque°_£t
(
Reque°
 *
ªq
, 
b°rög
 
key
, b°rög 
vÆ
, 
ª∂a˚
)

162 
hnode_t
 *
n
 = 
	`hash_lookup
(
ªq
->
hódîs
, 
key
);

163 
b°rLi°
 *
vÆ_li°
 = 
NULL
;

164 
rc
 = 0;

165 
i
 = 0;

167 if(
n
 =
NULL
) {

169 
vÆ_li°
 = 
	`b°rLi°Cª©e
();

170 
rc
 = 
	`b°rLi°AŒoc
(
vÆ_li°
, 
MAX_DUPE_HEADERS
);

171 
	`check
(
rc
 =
BSTR_OK
, "Couldn'tállocate space for header values.");

173 
vÆ_li°
->
íåy
[0] = 
vÆ
;

174 
vÆ_li°
->
qty
 = 1;

175 
	`hash_Æloc_ö£π
(
ªq
->
hódîs
, 
	`b°r˝y
(
key
), 
vÆ_li°
);

177 
vÆ_li°
 = 
	`hnode_gë
(
n
);

178 
	`check
(
vÆ_li°
 !
NULL
, "MÆf‹medÑeque°, missög b°æi° i¿node. Tñ»Zed: %s=%s", 
	`bd©a
(
key
), bd©a(
vÆ
));

180 if(
ª∂a˚
) {

182 
i
 = 0; i < 
vÆ_li°
->
qty
; i++) {

183 
	`bde°roy
(
vÆ_li°
->
íåy
[
i
]);

186 
vÆ_li°
->
íåy
[0] = 
vÆ
;

187 
vÆ_li°
->
qty
 = 1;

189 
	`check
(
vÆ_li°
->
qty
 < 
MAX_DUPE_HEADERS
,

191 
	`bd©a
(
key
), 
MAX_DUPE_HEADERS
);

193 
vÆ_li°
->
íåy
[vÆ_li°->
qty
++] = 
vÆ
;

199 
îr‹
:

200 
	`bde°roy
(
vÆ
);

202 
	}
}

204 
Reque°
 *
	$Reque°_¸óã
()

206 
Reque°
 *
ªq
 = 
	`ˇŒoc
((Request), 1);

207 
	`check_mem
(
ªq
);

209 
ªq
->
∑r£r
.
hâp_fõld
 = 
hódî_fõld_cb
;

210 
ªq
->
∑r£r
.
ªque°_mëhod
 = 
ªque°_mëhod_cb
;

211 
ªq
->
∑r£r
.
ªque°_uri
 = 
uri_cb
;

212 
ªq
->
∑r£r
.
‰agmít
 = 
‰agmít_cb
;

213 
ªq
->
∑r£r
.
ªque°_∑th
 = 
∑th_cb
;

214 
ªq
->
∑r£r
.
quîy_°rög
 = 
quîy_°rög_cb
;

215 
ªq
->
∑r£r
.
hâp_vîsi⁄
 = 
hâp_vîsi⁄_cb
;

216 
ªq
->
∑r£r
.
hódî_d⁄e
 = 
hódî_d⁄e_cb
;

218 
ªq
->
hódîs
 = 
	`hash_¸óã
(
MAX_HEADER_COUNT
, (
hash_comp_t
)
b°rcmp
, 
b°r_hash_fun
);

219 
	`check_mem
(
ªq
->
hódîs
);

220 
	`hash_£t_Æloˇt‹
(
ªq
->
hódîs
, 
ªq_Æloc_hash
, 
ªq_‰ì_hash
, 
NULL
);

222 
ªq
->
∑r£r
.
d©a
 =Ñeq;

224  
ªq
;

226 
îr‹
:

227 
	`Reque°_de°roy
(
ªq
);

228  
NULL
;

229 
	}
}

231 
ölöe
 
	$Reque°_nuke_∑πs
(
Reque°
 *
ªq
)

233 
	`bde°roy
(
ªq
->
ªque°_mëhod
);Ñeq->ªque°_mëhod = 
NULL
;

234 
	`bde°roy
(
ªq
->
vîsi⁄
);Ñeq->vîsi⁄ = 
NULL
;

235 
	`bde°roy
(
ªq
->
uri
);Ñeq->urò
NULL
;

236 
	`bde°roy
(
ªq
->
∑th
);Ñeq->∑th = 
NULL
;

237 
	`bde°roy
(
ªq
->
quîy_°rög
);Ñeq->quîy_°rög = 
NULL
;

238 
	`bde°roy
(
ªq
->
‰agmít
);Ñeq->‰agmíà
NULL
;

239 
	`bde°roy
(
ªq
->
ho°_«me
);Ñeq->ho°_«mê
NULL
;

242 
ªq
->
∑âîn
 = 
NULL
;

243 
ªq
->
¥efix
 = 
NULL
;

244 
ªq
->
ho°
 = 
NULL
;

246 
ªq
->
°©us_code
 = 0;

247 
ªq
->
ª•⁄£_size
 = 0;

248 
ªq
->
∑r£r
.
js⁄_£¡
 = 0;

249 
ªq
->
∑r£r
.
xml_£¡
 = 0;

250 
ªq
->
ws_Êags
=0;

251 
	`bde°roy
(
ªq
->
√w_hódî
);Ñeq->√w_hódî=
NULL
;

252 
	}
}

254 
	$Reque°_de°roy
(
Reque°
 *
ªq
)

256 if(
ªq
) {

257 
	`Reque°_nuke_∑πs
(
ªq
);

258 
	`hash_‰ì_nodes
(
ªq
->
hódîs
);

259 
	`hash_de°roy
(
ªq
->
hódîs
);

260 
	`‰ì
(
ªq
);

262 
	}
}

265 
	$Reque°_°¨t
(
Reque°
 *
ªq
)

267 
	`as£π
(
ªq
 && "NULLÖointerÉrror.");

268 
	`hâp_∑r£r_öô
(&(
ªq
->
∑r£r
));

270 
	`Reque°_nuke_∑πs
(
ªq
);

272 if(
ªq
->
hódîs
) {

273 
	`hash_‰ì_nodes
(
ªq
->
hódîs
);

275 
	}
}

277 
	$Reque°_∑r£
(
Reque°
 *
ªq
, *
buf
, 
size_t
 
ƒód
, size_à*
out_≈¨£d
)

279 
	`as£π
(
ªq
 && "NULLÖointerÉrror.");

281 *
out_≈¨£d
 = 
	`hâp_∑r£r_execuã
(&(
ªq
->
∑r£r
), 
buf
, 
ƒód
, *out_nparsed);

283 
föished
 = 
	`hâp_∑r£r_föish
(&(
ªq
->
∑r£r
));

285  
föished
;

286 
	}
}

289 
b°rög
 
	$Reque°_gë
(
Reque°
 *
ªq
, 
b°rög
 
fõld
)

291 
hnode_t
 *
node
 = 
	`hash_lookup
(
ªq
->
hódîs
, 
fõld
);

292 
b°rLi°
 *
vÆs
 = 
NULL
;

294 if(
node
 =
NULL
) {

295  
NULL
;

297 
vÆs
 = 
	`hnode_gë
(
node
);

298  
vÆs
->
íåy
[0];

300 
	}
}

303 
	$Reque°_gë_d©e
(
Reque°
 *
ªq
, 
b°rög
 
fõld
, c⁄° *
f‹m©
)

305 
tm
 
tm_vÆ
;

306 
b°rög
 
vÆue
 = 
	`Reque°_gë
(
ªq
, 
fõld
);

308 if(
vÆue
) {

309 
	`mem£t
(&
tm_vÆ
, 0, (
tm
));

310 if(
	`°Ωtime
(
	`bd©a
(
vÆue
), 
f‹m©
, &
tm_vÆ
Ë=
NULL
) {

313  ()
	`mktime
(&
tm_vÆ
);

318 
	}
}

320 
ölöe
 
b°rög
 
	$js⁄_esˇ≥
(
b°rög
 
ö
)

322 if(
ö
 =
NULL
)  NULL;

325 
b°rög
 
v°r
 = 
	`b°r˝y
(
ö
);

326 
	`check_mem
(
v°r
)

328 
i
;

329 
i
 = 0; i < 
	`bÀngth
(
v°r
); i++)

331 if(
	`bch¨
(
v°r
,
i
) == '\\')

333 
	`bö£πch
(
v°r
, 
i
, 1, '\\');

334 
i
++;

336 if(
	`bch¨
(
v°r
,
i
) == '"')

338 
	`bö£πch
(
v°r
, 
i
, 1, '\\');

339 
i
++;

343  
v°r
;

344 
îr‹
:

345  
NULL
;

346 
	}
}

348 
ègb°rög
 
	gJSON_LISTSEP
 = 
bsSètic
("\",\"");

349 
ègb°rög
 
	gJSON_OBJSEP
 = 
bsSètic
("\":\"");

352 c⁄° 
	gPAYLOAD_GUESS
 = 256;

354 
ölöe
 
	$B
(
b°rög
 
hódîs
, c⁄° b°rög 
k
, c⁄° b°rög 
v
, *
fú°
)

356 if(
v
)

358 if(*
fú°
) {

359 
	`bˇtc°r
(
hódîs
, "\"");

360 *
fú°
 = 0;

362 
	`bˇtc°r
(
hódîs
, ",\"");

364 
	`bc⁄ˇt
(
hódîs
, 
k
);

365 
	`bc⁄ˇt
(
hódîs
, &
JSON_OBJSEP
);

367 
b°rög
 
v°r
 = 
	`js⁄_esˇ≥
(
v
);

368 
	`bc⁄ˇt
(
hódîs
, 
v°r
);

369 
	`bˇtc°r
(
hódîs
, "\"");

371 
	`bde°roy
(
v°r
);

373 
	}
}

375 
ölöe
 
b°rög
 
	$ªque°_dëîmöe_mëhod
(
Reque°
 *
ªq
)

377 if(
	`Reque°_is_js⁄
(
ªq
)) {

378  &
JSON_METHOD
;

379 } if(
	`Reque°_is_xml
(
ªq
)) {

380  &
XML_METHOD
;

382  
ªq
->
ªque°_mëhod
;

384 
	}
}

386 
b°rög
 
	$Reque°_to_äë°rög
(
Reque°
 *
ªq
, 
b°rög
 
uuid
, 
fd
, c⁄° *
buf
, 
size_t
 
Àn
, 
C⁄√˘i⁄
 *
c⁄n
, 
hash_t
 *
Æthódîs
)

388 
äs_outbuf
 
outbuf
 = {.
buf„r
 = 
NULL
};

389 
b°rög
 
mëhod
 = 
	`ªque°_dëîmöe_mëhod
(
ªq
);

390 
	`check
(
mëhod
, "Impossible, gotán invalidÑequest method.");

392 
uöt32_t
 
id
 = 
	`Regi°î_id_f‹_fd
(
fd
);

393 
	`check_debug
(
id
 !
UINT32_MAX
, "AskedÅÿgíî©ê®∑ylﬂd f‹á fdÅh© d€¢'àexi°: %d", 
fd
);

395 
hódî_°¨t
 = 
	`äs_ªndî_ªque°_°¨t
(&
outbuf
);

396 
	`check
(
hódî_°¨t
 != -1, "FailedÅo initialize outbuf.");

398 if(
Æthódîs
 !
NULL
) {

399 
	`check
(
	`äs_ªndî_ªque°_hódîs
(&
outbuf
, 
Æthódîs
) == 0,

402 
	`check
(
	`äs_ªndî_ªque°_hódîs
(&
outbuf
, 
ªq
->
hódîs
) == 0,

405 if(
ªq
->
∑th
Ë
	`äs_ªndî_hash_∑ú
(&
outbuf
, &
HTTP_PATH
,Ñeq->path);

406 if(
ªq
->
vîsi⁄
Ë
	`äs_ªndî_hash_∑ú
(&
outbuf
, &
HTTP_VERSION
,Ñeq->version);

407 if(
ªq
->
uri
Ë
	`äs_ªndî_hash_∑ú
(&
outbuf
, &
HTTP_URI
,Ñeq->uri);

408 if(
ªq
->
quîy_°rög
Ë
	`äs_ªndî_hash_∑ú
(&
outbuf
, &
HTTP_QUERY
,Ñeq->query_string);

409 if(
ªq
->
‰agmít
Ë
	`äs_ªndî_hash_∑ú
(&
outbuf
, &
HTTP_FRAGMENT
,Ñeq->fragment);

410 if(
ªq
->
∑âîn
Ë
	`äs_ªndî_hash_∑ú
(&
outbuf
, &
HTTP_PATTERN
,Ñeq->pattern);

412 if(
c⁄n
->
iob
->
u£_s¶
) {

413 
	`äs_ªndî_hash_∑ú
(&
outbuf
, &
HTTP_URL_SCHEME
, &
HTTP_HTTPS
);

415 
	`äs_ªndî_hash_∑ú
(&
outbuf
, &
HTTP_URL_SCHEME
, &
HTTP_HTTP
);

418 
	`äs_ªndî_hash_∑ú
(&
outbuf
, &
HTTP_METHOD
, 
mëhod
);

419 
	`äs_ªndî_hash_∑ú
(&
outbuf
, &
HTTP_REMOTE_ADDR
, 
	`b‰omc°r
(
c⁄n
->
ªmŸe
));

422 
	`check
(
	`äs_ªndî_ªque°_íd
(&
outbuf
, 
hódî_°¨t
, 
uuid
, 
id
, 
	`Reque°_∑th
(
ªq
)) != -1, "FailedÅo finalizeÑequest.");

425 
b°rög
 
hódîs
 = 
	`äs_outbuf_to_b°rög
(&
outbuf
);

426 
	`bf‹m©a
(
hódîs
, "%d:", 
Àn
);

427 
	`bˇtblk
(
hódîs
, 
buf
, 
Àn
);

428 
	`bc⁄ch¨
(
hódîs
, ',');

430  
hódîs
;

431 
îr‹
:

432 if(
outbuf
.
buf„r
Ë
	`‰ì
(outbuf.buffer);

433  
NULL
;

434 
	}
}

436 
b°rög
 
	$Reque°_to_∑ylﬂd
(
Reque°
 *
ªq
, 
b°rög
 
uuid
, 
fd
, c⁄° *
buf
, 
size_t
 
Àn
, 
C⁄√˘i⁄
 *
c⁄n
, 
hash_t
 *
Æthódîs
)

438 
b°rög
 
hódîs
 = 
NULL
;

439 
b°rög
 
ªsu…
 = 
NULL
;

440 
f
 = 1;

442 
uöt32_t
 
id
 = 
	`Regi°î_id_f‹_fd
(
fd
);

443 
	`check_debug
(
id
 !
UINT32_MAX
, "AskedÅÿgíî©ê®∑ylﬂd f‹á fdÅh© d€¢'àexi°: %d", 
fd
);

445 
hódîs
 = 
	`b‰omc°øŒoc
(
PAYLOAD_GUESS
, "{");

447 if(
Æthódîs
 =
NULL
) {

448 
	`bˇtc°r
(
hódîs
, "\"");

449 
	`bc⁄ˇt
(
hódîs
, &
HTTP_PATH
);

450 
	`bc⁄ˇt
(
hódîs
, &
JSON_OBJSEP
);

451 
	`bc⁄ˇt
(
hódîs
, 
ªq
->
∑th
);

452 
	`bc⁄ch¨
(
hódîs
, '"');

453 
f
 = 0;

456 
hsˇn_t
 
sˇn
;

457 
hnode_t
 *
i
;

458 if(
Æthódîs
 !
NULL
) {

459 
	`hash_sˇn_begö
(&
sˇn
, 
Æthódîs
);

461 
	`hash_sˇn_begö
(&
sˇn
, 
ªq
->
hódîs
);

464 
i
 = 
	`hash_sˇn_√xt
(&
sˇn
); i !
NULL
; i = hash_scan_next(&scan))

466 
b°rLi°
 *
vÆ_li°
 = 
	`hnode_gë
(
i
);

467 
b°rög
 
key
 = (b°rög)
	`hnode_gëkey
(
i
);

469 if(
vÆ_li°
->
qty
 > 1)

471 
b°rLi°
 *
esˇ≥d
 = 
	`b°rLi°Cª©e
();

472 
	`b°rLi°AŒoc
(
esˇ≥d
, 
vÆ_li°
->
qty
);

473 
esˇ≥d
->
qty
 = 
vÆ_li°
->qty;

475 
x
 = 0;

476 
x
 = 0; x < 
vÆ_li°
->
qty
; x++) {

477 
esˇ≥d
->
íåy
[
x
] = 
	`js⁄_esˇ≥
(
vÆ_li°
->entry[x]);

480 
b°rög
 
li°
 = 
	`bjoö
(
esˇ≥d
, &
JSON_LISTSEP
);

481 if(
f
) {

482 
	`bˇtc°r
(
hódîs
, "\"");

483 
f
 = 0;

485 
	`bˇtc°r
(
hódîs
, ",\"");

487 
	`bc⁄ˇt
(
hódîs
, 
key
);

488 
	`bˇtc°r
(
hódîs
, "\":[\"");

489 
	`bc⁄ˇt
(
hódîs
, 
li°
);

490 
	`bˇtc°r
(
hódîs
, "\"]");

491 
	`bde°roy
(
li°
);

492 
	`b°rLi°De°roy
(
esˇ≥d
);

496 
	`B
(
hódîs
, 
key
, 
vÆ_li°
->
íåy
[0], &
f
);

500 if(
Æthódîs
 =
NULL
) {

504 if(
	`Reque°_is_js⁄
(
ªq
)) {

505 
	`B
(
hódîs
, &
HTTP_METHOD
, &
JSON_METHOD
, &
f
);

506 } if(
	`Reque°_is_xml
(
ªq
)) {

507 
	`B
(
hódîs
, &
HTTP_METHOD
, &
XML_METHOD
, &
f
);

509 
	`B
(
hódîs
, &
HTTP_METHOD
, 
ªq
->
ªque°_mëhod
, &
f
);

512 
	`B
(
hódîs
, &
HTTP_VERSION
, 
ªq
->
vîsi⁄
, &
f
);

513 
	`B
(
hódîs
, &
HTTP_URI
, 
ªq
->
uri
, &
f
);

514 
	`B
(
hódîs
, &
HTTP_QUERY
, 
ªq
->
quîy_°rög
, &
f
);

515 
	`B
(
hódîs
, &
HTTP_FRAGMENT
, 
ªq
->
‰agmít
, &
f
);

516 
	`B
(
hódîs
, &
HTTP_PATTERN
, 
ªq
->
∑âîn
, &
f
);

519 if(
c⁄n
->
iob
->
u£_s¶
) {

520 
	`B
(
hódîs
, &
HTTP_URL_SCHEME
, &
HTTP_HTTPS
, &
f
);

522 
	`B
(
hódîs
, &
HTTP_URL_SCHEME
, &
HTTP_HTTP
, &
f
);

525 
	`B
(
hódîs
, &
HTTP_REMOTE_ADDR
, 
	`b‰omc°r
(
c⁄n
->
ªmŸe
), &
f
);

528 
	`bc⁄ch¨
(
hódîs
, '}');

530 
ªsu…
 = 
	`bf‹m©
("%†%d %†%d:%s,%d:", 
	`bd©a
(
uuid
), 
id
,

531 
	`bd©a
(
	`Reque°_∑th
(
ªq
)),

532 
	`bÀngth
(
hódîs
),

533 
	`bd©a
(
hódîs
),

534 
Àn
);

536 
	`bde°roy
(
hódîs
);

538 
	`bˇtblk
(
ªsu…
, 
buf
, 
Àn
);

539 
	`bc⁄ch¨
(
ªsu…
, ',');

541 
	`check
(
ªsu…
, "FailedÅo constructÖayloadÑesult.");

543  
ªsu…
;

545 
îr‹
:

546 
	`bde°roy
(
hódîs
);

547 
	`bde°roy
(
ªsu…
);

549  
NULL
;

550 
	}
}

	@request.h

35 #i‚de‡
_ªque°_h


36 
	#_ªque°_h


	)

38 
	~<hâp11/hâp11_∑r£r.h
>

39 
	~<adt/hash.h
>

40 
	~<b°rög.h
>

41 
	~<h™dÀr.h
>

42 
	~<hódîs.h
>

43 
	~<ho°.h
>

44 
	gC⁄√˘i⁄
;

47 
	mREQUEST_EXTRA_HEADERS
 = 6

50 
	sReque°
 {

51 
b°rög
 
	mªque°_mëhod
;

52 
b°rög
 
	mvîsi⁄
;

53 
b°rög
 
	muri
;

54 
b°rög
 
	m∑th
;

55 
b°rög
 
	mquîy_°rög
;

56 
b°rög
 
	m‰agmít
;

57 
b°rög
 
	mho°
;

58 
b°rög
 
	mho°_«me
;

59 
b°rög
 
	m∑âîn
;

60 
b°rög
 
	m¥efix
;

61 
Ho°
 *
	mèrgë_ho°
;

62 
hash_t
 *
	mhódîs
;

63 
Backíd
 *
	ma˘i⁄
;

64 
	m°©us_code
;

65 
	mª•⁄£_size
;

66 
	mws_Êags
;

67 
b°rög
 
	m√w_hódî
;

68 
hâp_∑r£r
 
	m∑r£r
;

69 } 
	tReque°
;

71 
Reque°
 *
Reque°_¸óã
();

73 
Reque°_∑r£
(
Reque°
 *
ªq
, *
buf
, 
size_t
 
ƒód
, size_à*
out_≈¨£d
);

75 
Reque°_°¨t
(
Reque°
 *
ªq
);

77 
Reque°_de°roy
(
Reque°
 *
ªq
);

79 
b°rög
 
Reque°_gë
(
Reque°
 *
ªq
, b°rög 
fõld
);

81 
Reque°_£t
(
Reque°
 *
ªq
, 
b°rög
 
key
, b°rög 
vÆ
, 
ª∂a˚
);

83 
Reque°_gë_d©e
(
Reque°
 *
ªq
, 
b°rög
 
fõld
, c⁄° *
f‹m©
);

85 
	#Reque°_∑r£r
(
R
Ë(&((R)->
∑r£r
))

	)

87 
	#Reque°_is_js⁄
(
R
Ë((R)->
∑r£r
.
js⁄_£¡
 =1)

	)

89 
	#Reque°_is_xml
(
R
Ë((R)->
∑r£r
.
xml_£¡
 =1)

	)

91 
	#Reque°_is_hâp
(
R
Ë(!(
	`Reque°_is_js⁄
(RË|| 
	`Reque°_is_xml
(R)))

	)

93 
	#Reque°_gë_a˘i⁄
(
R
, 
T
Ë((R)->
a˘i⁄
 ? (R)->a˘i⁄->
èrgë
.T : 
NULL
)

	)

95 
	#Reque°_£t_a˘i⁄
(
R
, 
V
Ë((R)->
a˘i⁄
 = (V))

	)

97 
	#Reque°_∑th
(
R
Ë((R)->
∑th
)

	)

99 
	#Reque°_c⁄ã¡_Àngth
(
R
Ë((R)->
∑r£r
.
c⁄ã¡_Àn
)

	)

101 
	#Reque°_hódî_Àngth
(
R
Ë((R)->
∑r£r
.
body_°¨t
)

	)

103 
b°rög
 
Reque°_to_äë°rög
(
Reque°
 *
ªq
, b°rög 
uuid
, 
fd
, c⁄° *
buf
, 
size_t
 
Àn
, 
C⁄√˘i⁄
 *, 
hash_t
 *
Æthódîs
);

105 
b°rög
 
Reque°_to_∑ylﬂd
(
Reque°
 *
ªq
, b°rög 
uuid
, 
fd
, c⁄° *
buf
, 
size_t
 
Àn
, 
C⁄√˘i⁄
 *, 
hash_t
 *
Æthódîs
);

107 
Reque°_öô
();

	@response.c

36 
	~<ª•⁄£.h
>

37 
	~<èsk/èsk.h
>

38 
	~<dbg.h
>

39 
	~<as£π.h
>

40 
	~"vîsi⁄.h
"

45 
ègb°rög
 
	gHTTP_100
 = 
bsSètic
("HTTP/1.1 100 Continue\r\n\r\n");

47 
ègb°rög
 
	gHTTP_400
 = 
bsSètic
("HTTP/1.1 400 Bad Request\r\n"

51 "Sîvî: " 
VERSION


55 
ègb°rög
 
	gHTTP_404
 = 
bsSètic
("HTTP/1.1 404 Not Found\r\n"

59 "Sîvî: " 
VERSION


64 
ègb°rög
 
	gHTTP_413
 = 
bsSètic
("HTTP/1.1 413 Request Entity Too Large\r\n"

68 "Sîvî: " 
VERSION


72 
ègb°rög
 
	gHTTP_501
 = 
bsSètic
("HTTP/1.1 501 Not Implemented\r\n"

76 "Sîvî: " 
VERSION


80 
ègb°rög
 
	gHTTP_502
 = 
bsSètic
("HTTP/1.1 502 Bad Gateway\r\n"

84 "Sîvî: " 
VERSION


88 
ègb°rög
 
	gHTTP_500
 = 
bsSètic
("HTTP/1.1 500 Internal Server Error\r\n"

92 "Sîvî: " 
VERSION


96 
ègb°rög
 
	gHTTP_405
 = 
bsSètic
("HTTP/1.1 405 Method Not Allowed\r\n"

100 "Sîvî: " 
VERSION


105 
ègb°rög
 
	gHTTP_412
 = 
bsSètic
("HTTP/1.1 412 Precondition Failed\r\n"

109 "Sîvî: " 
VERSION


113 
ègb°rög
 
	gHTTP_417
 = 
bsSètic
("HTTP/1.1 417 Expectation Failed\r\n"

117 "Sîvî: " 
VERSION
 "\r\n"

122 
ègb°rög
 
	gHTTP_304
 = 
bsSètic
("HTTP/1.1 304 Not Modified\r\n"

125 "Sîvî: " 
VERSION


129 
ègb°rög
 
	gFLASH_RESPONSE
 = 
bsSètic
("<?xml version=\"1.0\"?>"

133 
	$Re•⁄£_£nd_°©us
(
C⁄√˘i⁄
 *
c⁄n
, 
b°rög
 
îr‹
)

135  
	`IOBuf_£nd
(
c⁄n
->
iob
, 
	`bd©a
(
îr‹
), 
	`bÀngth
(error));

136 
	}
}

139 
	$Re•⁄£_£nd_sockë_pﬁicy
(
C⁄√˘i⁄
 *
c⁄n
)

142  
	`IOBuf_£nd
(
c⁄n
->
iob
, 
	`bd©a
(&
FLASH_RESPONSE
),

143 
	`bÀngth
(&
FLASH_RESPONSE
) + 1);

145 
	}
}

	@response.h

35 #i‚de‡
_ª•⁄£_h


36 
	#_ª•⁄£_h


	)

38 
	~<b°rög.h
>

39 
	~<c⁄√˘i⁄.h
>

41 
ègb°rög
 
HTTP_100
;

42 
ègb°rög
 
HTTP_304
;

43 
ègb°rög
 
HTTP_400
;

44 
ègb°rög
 
HTTP_404
;

45 
ègb°rög
 
HTTP_405
;

46 
ègb°rög
 
HTTP_412
;

47 
ègb°rög
 
HTTP_413
;

48 
ègb°rög
 
HTTP_417
;

49 
ègb°rög
 
HTTP_500
;

50 
ègb°rög
 
HTTP_501
;

51 
ègb°rög
 
HTTP_502
;

53 
ègb°rög
 
FLASH_RESPONSE
;

55 
Re•⁄£_£nd_°©us
(
C⁄√˘i⁄
 *
c⁄n
, 
b°rög
 
îr‹
);

57 
Re•⁄£_£nd_sockë_pﬁicy
(
C⁄√˘i⁄
 *
c⁄n
);

	@routing.c

35 
	~<routög.h
>

36 
	~<dbg.h
>

37 
	~<°rög.h
>

38 
	~<as£π.h
>

39 
	~<∑âîn.h
>

40 
	~<ho°.h
>

41 
	~<mem/hÆloc.h
>

42 
	~<b°rög.h
>

46 
RouãM≠
 *
	$RouãM≠_¸óã
(
rouãm≠_de°roy_cb
 
de°roy
)

48 
RouãM≠
 *
m≠
 = 
	`h_ˇŒoc
((RouteMap), 1);

49 
	`check_mem
(
m≠
);

51 
m≠
->
de°roy
 = destroy;

53  
m≠
;

55 
îr‹
:

56  
NULL
;

57 
	}
}

59 
	$RouãM≠_˛ónup
(*
vÆue
, *
d©a
)

61 
Rouã
 *
rouã
 = (Rouã *)
vÆue
;

62 
RouãM≠
 *
m≠
 = (RouãM≠ *)
d©a
;

64 if(
m≠
->
de°roy
) {

65 
m≠
->
	`de°roy
(
rouã
, map);

68 
	`bde°roy
(
rouã
->
∑âîn
);

69 
	`bde°roy
(
rouã
->
¥efix
);

70 
	}
}

72 
	$RouãM≠_de°roy
(
RouãM≠
 *
m≠
)

74 if(
m≠
) {

75 
	`t°_åavî£
(
m≠
->
rouãs
, 
RouãM≠_˛ónup
, map);

76 
	`t°_de°roy
(
m≠
->
rouãs
);

77 
	`h_‰ì
(
m≠
);

79 
	}
}

81 
Rouã
 *
	$RouãM≠_ö£π_ba£
(
RouãM≠
 *
m≠
, 
b°rög
 
¥efix
, b°rög 
∑âîn
)

83 
Rouã
 *
rouã
 = 
	`h_mÆloc
((Route));

84 
Rouã
 *
rouã2
;

85 
	`check_mem
(
rouã
);

87 
rouã
->
∑âîn
 =Öattern;

88 
	`check
(
rouã
->
∑âîn
, "Pattern isÑequired.");

90 
rouã
->
¥efix
 =Örefix;

91 
	`check
(
rouã
->
¥efix
, "Prefix isÑequired.");

92 
rouã
->
√xt
 = 
NULL
;

94 
	`debug
("ADDINGÖªfix: %s,Ö©ã∫: %s", 
	`bd©a
(
¥efix
), bd©a(
∑âîn
));

95 
rouã2

	`t°_£¨ch
(
m≠
->
rouãs
, 
	`bd©a
(
¥efix
), 
	`bÀngth
(prefix));

97 i‡(
rouã2
 !
NULL
) {

98 
rouã
->
√xt
=
rouã2
->next;

99 
rouã2
->
√xt
=
rouã
;

102 
m≠
->
rouãs
 = 
	`t°_ö£π
(m≠->rouãs, 
	`bd©a
(
¥efix
), 
	`bÀngth
’ªfix), 
rouã
);

105 
	`h©èch
(
rouã
, 
m≠
);

107 
	`check
(
m≠
->
rouãs
, "FailedÅo insert into TST.");

109  
rouã
;

111 
îr‹
:

112  
NULL
;

113 
	}
}

115 
	$RouãM≠_ö£π
(
RouãM≠
 *
m≠
, 
b°rög
 
∑âîn
, *
d©a
)

117 
Rouã
 *
rouã
 = 
NULL
;

118 
fú°_∑ªn
 = 
	`b°rchr
(
∑âîn
, '(');

119 
b°rög
 
¥efix
 = 
NULL
;

121 if(
fú°_∑ªn
 >= 0) {

122 
¥efix
 = 
	`bHód
(
∑âîn
, 
fú°_∑ªn
);

124 
¥efix
 = 
	`b°r˝y
(
∑âîn
);

127 
	`check_mem
(
¥efix
);

130 
rouã
 = 
	`RouãM≠_ö£π_ba£
(
m≠
, 
¥efix
, 
∑âîn
);

131 
	`check
(
rouã
, "FaûedÅÿö£πÑouã: %s", 
	`bd©a
(
∑âîn
));

134 
rouã
->
has_∑âîn
 = 
fú°_∑ªn
 >= 0;

135 
rouã
->
fú°_∑ªn
 = first_paren;

136 
rouã
->
d©a
 = data;

140 
îr‹
:

142 
	}
}

144 
	$RouãM≠_ö£π_ªvî£d
(
RouãM≠
 *
m≠
, 
b°rög
 
∑âîn
, *
d©a
)

146 
Rouã
 *
rouã
 = 
NULL
;

147 
b°rög
 
ªvî£d_¥efix
 = 
NULL
;

149 
œ°_∑ªn
 = 
	`b°ºchr
(
∑âîn
, ')');

151 if(
œ°_∑ªn
 >= 0) {

153 
ªvî£d_¥efix
 = 
	`bTaû
(
∑âîn
, 
	`bÀngth
’©ã∫Ë- 
œ°_∑ªn
 - 1);

154 
	`båunc
(
∑âîn
, 
œ°_∑ªn
 + 1);

155 
	`bc⁄ch¨
(
∑âîn
, '$');

157 
ªvî£d_¥efix
 = 
	`b°r˝y
(
∑âîn
);

160 
	`check_mem
(
ªvî£d_¥efix
);

161 
	`bRevî£
(
ªvî£d_¥efix
);

163 
rouã
 = 
	`RouãM≠_ö£π_ba£
(
m≠
, 
ªvî£d_¥efix
, 
∑âîn
);

164 
	`check
(
rouã
, "FailedÅoádd host.");

166 
rouã
->
has_∑âîn
 = 
œ°_∑ªn
 >= 0;

167 
rouã
->
¥efix
 = 
ªvî£d_¥efix
;

168 
rouã
->
d©a
 = data;

172 
îr‹
:

174 
	}
}

177 
	$RouãM≠_cﬁÀ˘_m©ch
(*
vÆue
, c⁄° *
key
, 
size_t
 
Àn
)

179 
	`as£π
(
vÆue
 && "NULL value from TST.");

180 
Rouã
 *
rouã
 = (Rouã *)
vÆue
;

182 if(
rouã
->
has_∑âîn
) {

183 if(
rouã
->
fú°_∑ªn
 >0 && (
size_t
Ïouã->fú°_∑ª¿< 
Àn
) {

185  
	`∑âîn_m©ch
(
key
 + 
rouã
->
fú°_∑ªn
,

186 
Àn
 - 
rouã
->
fú°_∑ªn
,

187 
	`bd©aofs
(
rouã
->
∑âîn
,Ñouã->
fú°_∑ªn
)Ë!
NULL
;

194 
	}
}

196 
li°_t
 *
	$RouãM≠_m©ch
(
RouãM≠
 *
m≠
, 
b°rög
 
∑th
)

198  
	`t°_cﬁÀ˘
(
m≠
->
rouãs
, 
	`bd©a
(
∑th
),

199 
	`bÀngth
(
∑th
), 
RouãM≠_cﬁÀ˘_m©ch
);

200 
	}
}

202 
ölöe
 
Rouã
 *
	$m©ch_rouã_∑âîn
(
b°rög
 
èrgë
, 
Rouã
 *
rouã
, 
suffix
)

204 c⁄° *
sour˚
 = 
suffix
 ? 
	`bd©a
(
èrgë
Ë: 
	`bd©aofs
—¨gë, 
	`bÀngth
(
rouã
->
¥efix
));

205 
sour˚_Àngth
 = 
	`bÀngth
(
èrgë
Ë- bÀngth(
rouã
->
¥efix
);

206 c⁄° *
∑âîn
 = 
suffix
 ? 
	`bd©a
(
rouã
->∑âînË: 
	`bd©aofs
‘ouã->∑âîn,Ñouã->
fú°_∑ªn
);

208 if(
sour˚_Àngth
 >0 && 
sour˚
 !
NULL
) {

209  
	`∑âîn_m©ch
(
sour˚
, 
sour˚_Àngth
, 
∑âîn
Ë? 
rouã
 : 
NULL
;

211  
NULL
;

213 
	}
}

215 
Rouã
 *
	$RouãM≠_m©ch_suffix
(
RouãM≠
 *
m≠
, 
b°rög
 
èrgë
)

217 
Rouã
 *
rouã
 = 
	`t°_£¨ch_suffix
(
m≠
->
rouãs
, 
	`bd©a
(
èrgë
), 
	`bÀngth
(target));

219 if(
rouã
) {

220 
	`debug
("Found sim∂êsuffix: %†f‹Å¨gë: %s", 
	`bd©a
(
rouã
->
∑âîn
), bd©a(
èrgë
));

222 if(
rouã
->
has_∑âîn
) {

223  
	`m©ch_rouã_∑âîn
(
èrgë
, 
rouã
, 1);

225  
rouã
;

228  
NULL
;

230 
	}
}

233 
Rouã
 *
	$RouãM≠_sim∂e_¥efix_m©ch
(
RouãM≠
 *
m≠
, 
b°rög
 
èrgë
)

235 
	`debug
("Sórchög f‹Ñouã: %†ö m≠: %p", 
	`bd©a
(
èrgë
), 
m≠
);

236 
Rouã
 *
rouã
 = 
	`t°_£¨ch_¥efix
(
m≠
->
rouãs
, 
	`bd©a
(
èrgë
), 
	`bÀngth
(target));

238 if(
rouã
) {

239 
	`debug
("Found sim∂ê¥efix: %s", 
	`bd©a
(
rouã
->
∑âîn
));

241 if(
rouã
->
has_∑âîn
) {

242 
rouã
 !
NULL
)

244 
Rouã
 *
m©ched
 = 
	`m©ch_rouã_∑âîn
(
èrgë
, 
rouã
, 0);

245 if(
m©ched
 !
NULL
) {

246  
m©ched
;

248 
rouã
Ùouã->
√xt
;

251  
rouã
;

255  
NULL
;

256 
	}
}

	@routing.h

35 #i‚de‡
_routög_h


36 
	#_routög_h


	)

38 
	~<adt/t°.h
>

39 
	~<°dlib.h
>

40 
	~<adt/li°.h
>

41 
	~<b°rög.h
>

43 
	sRouã
 {

44 
b°rög
 
	m∑âîn
;

45 
b°rög
 
	m¥efix
;

46 *
	md©a
;

47 
	mhas_∑âîn
;

48 
	mfú°_∑ªn
;

49 
Rouã
 *
	m√xt
;

50 } 
	tRouã
;

52 
	gRouãM≠
;

54 (*
	trouãm≠_de°roy_cb
)(
	tRouã
 *
	trouã
, 
	tRouãM≠
 *
	tm≠
);

56 
	sRouãM≠
 {

57 
t°_t
 *
rouãs
;

58 
rouãm≠_de°roy_cb
 
de°roy
;

59 } 
	tRouãM≠
;

61 
RouãM≠
 *
	`RouãM≠_¸óã
(
rouãm≠_de°roy_cb
 
de°roy
);

63 
	`RouãM≠_de°roy
(
RouãM≠
 *
m≠
);

65 
	`RouãM≠_ö£π
(
RouãM≠
 *
rouãs
, 
b°rög
 
∑âîn
, *
d©a
);

67 
li°_t
 *
	`RouãM≠_m©ch
(
RouãM≠
 *
rouãs
, 
b°rög
 
∑th
);

69 
	`RouãM≠_ö£π_ªvî£d
(
RouãM≠
 *
rouãs
, 
b°rög
 
∑âîn
, *
d©a
);

71 
Rouã
 *
	`RouãM≠_m©ch_suffix
(
RouãM≠
 *
m≠
, 
b°rög
 
èrgë
);

73 
Rouã
 *
	`RouãM≠_sim∂e_¥efix_m©ch
(
RouãM≠
 *
m≠
, 
b°rög
 
èrgë
);

	@server.c

35 
	~"dbg.h
"

36 
	~"èsk/èsk.h
"

37 
	~"c⁄√˘i⁄.h
"

38 
	~"ªgi°î.h
"

39 
	~"£rvî.h
"

40 
	~"ho°.h
"

41 
	~<as£π.h
>

42 
	~<°rög.h
>

43 
	~"mem/hÆloc.h
"

44 
	~"routög.h
"

45 
	~"£âög.h
"

46 
	~"∑âîn.h
"

47 
	~"c⁄fig/c⁄fig.h
"

48 
	~"unixy.h
"

49 
	~<sig«l.h
>

51 
d¨øy_t
 *
	gSERVER_QUEUE
 = 
NULL
;

52 
	gRUNNING
=1;

54 *
	gs¶_deÁu…_dhm_P
 =

64 *
	gs¶_deÁu…_dhm_G
 = "4";

66 
	sCùhîName


68 *
	m«me
;

69 
	mid
;

70 } 
	tCùhîName
;

72 
CùhîName
 
	gcùhî_èbÀ
[] =

74 { "SSL_RSA_RC4_128_MD5", 
TLS_RSA_WITH_RC4_128_MD5
 },

75 { "SSL_RSA_RC4_128_SHA", 
TLS_RSA_WITH_RC4_128_SHA
 },

76 { "SSL_RSA_DES_168_SHA", 
TLS_RSA_WITH_3DES_EDE_CBC_SHA
 },

77 { "SSL_EDH_RSA_DES_168_SHA", 
TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
 },

78 { "SSL_RSA_AES_128_SHA", 
TLS_RSA_WITH_AES_128_CBC_SHA
 },

79 { "SSL_EDH_RSA_AES_128_SHA", 
TLS_DHE_RSA_WITH_AES_128_CBC_SHA
 },

80 { "SSL_RSA_AES_256_SHA", 
TLS_RSA_WITH_AES_256_CBC_SHA
 },

81 { "SSL_EDH_RSA_AES_256_SHA", 
TLS_DHE_RSA_WITH_AES_256_CBC_SHA
 },

82 { "SSL_RSA_CAMELLIA_128_SHA", 
TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
 },

83 { "SSL_EDH_RSA_CAMELLIA_128_SHA", 
TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA
 },

84 { "SSL_RSA_CAMELLIA_256_SHA", 
TLS_RSA_WITH_CAMELLIA_256_CBC_SHA
 },

85 { "SSL_EDH_RSA_CAMELLIA_256_SHA", 
TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA
 },

86 { 
NULL
, -1 }

89 
	$ho°_de°roy_cb
(
Rouã
 *
r
, 
RouãM≠
 *
m≠
)

91 ()
m≠
;

93 if(
r
->
d©a
) {

94 
	`Ho°_de°roy
((
Ho°
 *)
r
->
d©a
);

95 
r
->
d©a
 = 
NULL
;

97 
	}
}

99 
	$Sîvî_lﬂd_cùhîs
(
Sîvî
 *
§v
, 
b°rög
 
s¶_cùhîs_vÆ
)

101 
b°rLi°
 *
s¶_cùhî_li°
 = 
	`b•lô
(
s¶_cùhîs_vÆ
, ' ');

102 
i
 = 0, 
n
 = 0;

103 
max_num_cùhîs
 = 0;

104 *
cùhîs
 = 
NULL
;

105 c⁄° *
deÁu…_cùhîsuôes
;

107 
	`check
(
s¶_cùhî_li°
 !
NULL
 && s¶_cùhî_li°->
qty
 > 0,

111 
deÁu…_cùhîsuôes
 = 
	`s¶_li°_cùhîsuôes
();

112 
deÁu…_cùhîsuôes
[
max_num_cùhîs
] != 0) {

113 
max_num_cùhîs
++;

116 
cùhîs
 = 
	`h_ˇŒoc
(
max_num_cùhîs
 + 1, ());

117 
	`check_mem
(
cùhîs
);

119 
i
 = 0; i < 
s¶_cùhî_li°
->
qty
; i++) {

120 
b°rög
 
cùhî
 = 
s¶_cùhî_li°
->
íåy
[
i
];

122 
id
 = -1;

123 
n
 = 0; 
cùhî_èbÀ
[n].
«me
 !
NULL
; ++n)

125 if(
	`bi£qc°r
(
cùhî
, 
cùhî_èbÀ
[
n
].
«me
))

127 
id
 = 
cùhî_èbÀ
[
n
].id;

132 if(
id
 != -1)

133 
cùhîs
[
i
] = 
id
;

135 
	`£¡öñ
("Uƒecognized cùhî: %s", 
	`bd©a
(
cùhî
));

138 
	`b°rLi°De°roy
(
s¶_cùhî_li°
);

139 
cùhîs
[
i
] = 0;

140 
§v
->
cùhîs
 = ciphers;

141 
	`h©èch
(
cùhîs
, 
§v
);

144 
îr‹
:

145 if(
s¶_cùhî_li°
Ë
	`b°rLi°De°roy
(ssl_cipher_list);

146 if(
cùhîs
 !
NULL
Ë
	`h_‰ì
(ciphers);

148 
	}
}

151 
	$Sîvî_öô_s¶
(
Sîvî
 *
§v
)

153 
rc
 = 0;

154 
b°rög
 
˚πdú
 = 
NULL
;

155 
b°rög
 
˚π∑th
 = 
NULL
;

156 
b°rög
 
key∑th
 = 
NULL
;

158 
b°rög
 
˚πdú_£âög
 = 
	`Sëtög_gë_°r
("˚πdú", 
NULL
);

159 
	`check
(
˚πdú_£âög
 !
NULL
, "to use ssl, you must specifyá certdir");

161 if(
§v
->
chroŸ
 !
NULL
 && !
	`Unixy_ö_chroŸ
()) {

162 
˚πdú
 = 
	`bf‹m©
("%s%s", 
	`bd©a
(
§v
->
chroŸ
), bd©a(
˚πdú_£âög
));

164 
˚πdú
 = 
	`b°r˝y
(
˚πdú_£âög
);

167 
˚π∑th
 = 
	`bf‹m©
("%s%s.¸t", 
	`bd©a
(
˚πdú
), bd©a(
§v
->
uuid
));

168 
	`check_mem
(
˚π∑th
);

170 
key∑th
 = 
	`bf‹m©
("%s%s.key", 
	`bd©a
(
˚πdú
), bd©a(
§v
->
uuid
));

171 
	`check_mem
(
key∑th
);

173 
rc
 = 
	`x509_¸t_∑r£_fûe
(&
§v
->
own_˚π
, 
	`bd©a
(
˚π∑th
));

174 
	`check
(
rc
 =0, "FaûedÅÿlﬂd cîà‰om %s", 
	`bd©a
(
˚π∑th
));

176 
rc
 = 
	`pk_∑r£_keyfûe
(&
§v
->
pk_key
, 
	`bd©a
(
key∑th
), 
NULL
);

177 
	`check
(
rc
 =0, "FaûedÅÿlﬂd key from %s", 
	`bd©a
(
key∑th
));

179 
b°rög
 
s¶_cùhîs_vÆ
 = 
	`Sëtög_gë_°r
("s¶_cùhîs", 
NULL
);

181 
b°rög
 
ˇ_chaö
 = 
	`Sëtög_gë_°r
("s¶.ˇ_chaö", 
NULL
);

183 i‡–
ˇ_chaö
 !
NULL
 ) {

185 
rc
 = 
	`x509_¸t_∑r£_fûe
(&
§v
->
ˇ_chaö
, 
	`bd©a
(ca_chain));

186 
	`check
(
rc
 =0, "FaûedÅÿlﬂd cîà‰om %s", 
	`bd©a
(
ˇ_chaö
));

191 
§v
->
ˇ_chaö
.
vîsi⁄
=-1;

194 if(
s¶_cùhîs_vÆ
 !
NULL
) {

195 
rc
 = 
	`Sîvî_lﬂd_cùhîs
(
§v
, 
s¶_cùhîs_vÆ
);

196 
	`check
(
rc
 == 0, "FailedÅoÜoadÑequested SSL ciphers.");

198 
§v
->
cùhîs
 = 
	`s¶_li°_cùhîsuôes
();

201 
§v
->
dhm_P
 = 
s¶_deÁu…_dhm_P
;

202 
§v
->
dhm_G
 = 
s¶_deÁu…_dhm_G
;

204 
	`bde°roy
(
˚πdú
);

205 
	`bde°roy
(
˚π∑th
);

206 
	`bde°roy
(
key∑th
);

210 
îr‹
:

212 if(
˚πdú
 !
NULL
Ë
	`bde°roy
(certdir);

213 if(
˚π∑th
 !
NULL
Ë
	`bde°roy
(certpath);

214 if(
key∑th
 !
NULL
Ë
	`bde°roy
(keypath);

216 
	}
}

218 
Sîvî
 *
	$Sîvî_¸óã
(
b°rög
 
uuid
, b°rög 
deÁu…_ho°
,

219 
b°rög
 
böd_addr
, 
p‹t
, b°rög 
chroŸ
, b°rög 
ac˚ss_log
,

220 
b°rög
 
îr‹_log
, b°rög 
pid_fûe
, b°rög 
c⁄åﬁ_p‹t
, 
u£_s¶
)

222 
Sîvî
 *
§v
 = 
NULL
;

223 
rc
 = 0;

225 
§v
 = 
	`h_ˇŒoc
((
Sîvî
), 1);

226 
	`check_mem
(
§v
);

228 
§v
->
ho°s
 = 
	`RouãM≠_¸óã
(
ho°_de°roy_cb
);

229 
	`check
(
§v
->
ho°s
 !
NULL
, "FailedÅo create host RouteMap.");

231 
§v
->
h™dÀrs
 = 
	`d¨øy_¸óã
((
H™dÀr
), 20);

232 
	`check_mem
(
§v
->
h™dÀrs
);

234 
	`check
(
p‹t
 > 0, "InvalidÖort given, must be > 0: %d",Öort);

235 
§v
->
p‹t
 =Öort;

236 
§v
->
li°í_fd
 = 0;

238 
§v
->
böd_addr
 = 
	`b°r˝y
(böd_addr); 
	`check_mem
(srv->bind_addr);

239 
§v
->
uuid
 = 
	`b°r˝y
(uuid); 
	`check_mem
(srv->uuid);

240 if(
	`bÀngth
(
chroŸ
) > 0) {

241 
§v
->
chroŸ
 = 
	`b°r˝y
(chroŸ); 
	`check_mem
(srv->chroot);

243 
§v
->
chroŸ
 = 
NULL
;

245 
§v
->
ac˚ss_log
 = 
	`b°r˝y
◊c˚ss_log); 
	`check_mem
(srv->access_log);

246 
§v
->
îr‹_log
 = 
	`b°r˝y
”º‹_log); 
	`check_mem
(srv->error_log);

247 
§v
->
pid_fûe
 = 
	`b°r˝y
’id_fûe); 
	`check_mem
(srv->pid_file);

248 if(
	`bÀngth
(
c⁄åﬁ_p‹t
) > 0) {

249 
§v
->
c⁄åﬁ_p‹t
 = 
	`b°r˝y
(c⁄åﬁ_p‹t); 
	`check_mem
(srv->control_port);

251 
§v
->
c⁄åﬁ_p‹t
 = 
NULL
;

253 
§v
->
deÁu…_ho°«me
 = 
	`b°r˝y
(
deÁu…_ho°
);

254 
§v
->
u£_s¶
 = use_ssl;

255 
§v
->
¸óãd_⁄
 = 
	`time
(
NULL
);

257 if(
§v
->
u£_s¶
) {

258 
rc
 = 
	`Sîvî_öô_s¶
(
§v
);

259 
	`check
(
rc
 =0, "FaûedÅÿöôülizês¶ f‹ sîvî %s", 
	`bd©a
(
uuid
));

262  
§v
;

264 
îr‹
:

265 
	`Sîvî_de°roy
(
§v
);

266  
NULL
;

267 
	}
}

270 
ölöe
 
	$Sîvî_de°roy_h™dÀrs
(
Sîvî
 *
§v
)

272 
i
 = 0;

273 
i
 = 0; i < 
	`d¨øy_íd
(
§v
->
h™dÀrs
); i++) {

274 
H™dÀr
 *
h™dÀr
 = 
	`d¨øy_gë
(
§v
->
h™dÀrs
, 
i
);

275 
	`H™dÀr_de°roy
(
h™dÀr
);

278 
	`d¨øy_de°roy
(
§v
->
h™dÀrs
);

279 
	}
}

282 
	$Sîvî_de°roy
(
Sîvî
 *
§v
)

284 if(
§v
) {

285 if(
§v
->
u£_s¶
) {

286 
	`x509_¸t_‰ì
(&
§v
->
own_˚π
);

287 
	`pk_‰ì
(&
§v
->
pk_key
);

291 
	`RouãM≠_de°roy
(
§v
->
ho°s
);

292 
	`Sîvî_de°roy_h™dÀrs
(
§v
);

294 
	`bde°roy
(
§v
->
böd_addr
);

295 
	`bde°roy
(
§v
->
uuid
);

296 
	`bde°roy
(
§v
->
chroŸ
);

297 
	`bde°roy
(
§v
->
ac˚ss_log
);

298 
	`bde°roy
(
§v
->
îr‹_log
);

299 
	`bde°roy
(
§v
->
pid_fûe
);

300 
	`bde°roy
(
§v
->
c⁄åﬁ_p‹t
);

301 
	`bde°roy
(
§v
->
deÁu…_ho°«me
);

303 if(
§v
->
li°í_fd
 >0Ë
	`fd˛o£
(srv->listen_fd);

304 
	`h_‰ì
(
§v
);

306 
	}
}

309 
	$Sîvî_öô
()

311 
mq_thªads
 = 
	`Sëtög_gë_öt
("zeromq.threads", 1);

313 if(
mq_thªads
 > 1) {

314 
	`log_öfo
("WARNING: Setting zeromq.threads greaterÅhan 1 can causeÜockups in your handlers.");

317 
	`log_öfo
("Sèπög 0MQ wôh %dÅhªads.", 
mq_thªads
);

318 
	`mqöô
(
mq_thªads
);

319 
	`Regi°î_öô
();

320 
	`Reque°_öô
();

321 
	`C⁄√˘i⁄_öô
();

322 
	}
}

325 
ölöe
 
	$Sîvî_ac˚±
(
li°í_fd
)

327 
cfd
 = -1;

328 
Ω‹t
 = -1;

329 
ªmŸe
[
IPADDR_SIZE
];

330 
rc
 = 0;

331 
C⁄√˘i⁄
 *
c⁄n
 = 
NULL
;

333 
cfd
 = 
	`√èc˚±
(
li°í_fd
, 
ªmŸe
, &
Ω‹t
);

334 
	`check
(
cfd
 >= 0, "FailedÅoáccept onÜistening socket.");

336 
Sîvî
 *
§v
 = 
	`Sîvî_queue_œã°
();

337 
	`check
(
§v
 !
NULL
, "FailedÅo getá server fromÅhe configured queue.");

339 
c⁄n
 = 
	`C⁄√˘i⁄_¸óã
(
§v
, 
cfd
, 
Ω‹t
, 
ªmŸe
);

340 
	`check
(
c⁄n
 !
NULL
, "FailedÅo create connectionáfteráccept.");

342 
rc
 = 
	`C⁄√˘i⁄_ac˚±
(
c⁄n
);

343 
	`check
(
rc
 == 0, "FailedÅoÑegister connection, overloaded.");

347 
îr‹
:

349 if(
c⁄n
 !
NULL
Ë
	`C⁄√˘i⁄_de°roy
(conn);

351 
	}
}

354 
	$Sîvî_run
()

356 
rc
 = 0;

357 
Sîvî
 *
§v
 = 
	`Sîvî_queue_œã°
();

358 
	`check
(
§v
 !
NULL
, "FailedÅo getá server fromÅhe configured queue.");

359 
li°í_fd
 = 
§v
->listen_fd;

361 
	`èsk«me
("SERVER");

363 
RUNNING
) {

364 
rc
 = 
	`Sîvî_ac˚±
(
li°í_fd
);

366 if(
rc
 =-1 && 
RUNNING
) {

367 
	`log_îr
("Sîvîác˚± faûed,áâem±ögÅÿ˛ó∏ouàdód weight: %d", 
RUNNING
);

368 
˛óªd
 = 
	`Regi°î_˛ónout
();

370 if(
˛óªd
 == 0) {

371 
	`èskdñay
(1000);

377 
îr‹
:

379 
	}
}

382 
	$Sîvî_add_ho°
(
Sîvî
 *
§v
, 
Ho°
 *
ho°
)

384 
	`check
(
ho°
->
m©chög
 !
NULL
, "Host's matching can't be NULL.");

385  
	`RouãM≠_ö£π_ªvî£d
(
§v
->
ho°s
, 
ho°
->
m©chög
, host);

387 
îr‹
:

389 
	}
}

392 
	$Sîvî_£t_deÁu…_ho°
(
Sîvî
 *
§v
, 
Ho°
 *
ho°
)

394 
§v
->
deÁu…_ho°
 = 
ho°
;

395 
	}
}

399 
Ho°
 *
	$Sîvî_m©ch_backíd
(
Sîvî
 *
§v
, 
b°rög
 
èrgë
)

401 
	`check
(
§v
 !
NULL
, "Server is NULL?!");

403 if(
§v
->
deÁu…_ho°
) {

404 
	`check
(
§v
->
deÁu…_ho°
->
m©chög
 !
NULL
, "Server hasá default_host without matching.");

407 
	`debug
("Lookög f‹Å¨gë ho°: %s", 
	`bd©a
(
èrgë
));

408 
Rouã
 *
found
 = 
	`RouãM≠_m©ch_suffix
(
§v
->
ho°s
, 
èrgë
);

410  
found
 !
NULL
 ? found->
d©a
 : 
§v
->
deÁu…_ho°
;

412 
îr‹
:

413  
NULL
;

414 
	}
}

416 
ölöe
 
	$ßme_h™dÀr
(
H™dÀr
 *
‰om
, H™dÀ∏*
to
)

418  
	`bi£q
(
‰om
->
£nd_idít
, 
to
->send_ident) &&

419 
	`bi£q
(
‰om
->
ªcv_idít
, 
to
->recv_ident) &&

420 
	`bi£q
(
‰om
->
ªcv_•ec
, 
to
->recv_spec) &&

421 
	`bi£q
(
‰om
->
£nd_•ec
, 
to
->send_spec);

422 
	}
}

424 
	sRouãUpd©î
 {

425 
H™dÀr
 *
	m‹igöÆ
;

426 
H™dÀr
 *
	mª∂a˚mít
;

427 } 
	tRouãUpd©î
;

430 
	$upd©e_rouãs
(*
vÆue
, *
d©a
)

432 
RouãUpd©î
 *
upd©e
 = 
d©a
;

433 
Backíd
 *
backíd
 = ((
Rouã
 *)
vÆue
)->
d©a
;

435 if(
backíd
->
ty≥
 =
BACKEND_HANDLER
 && backíd->
èrgë
.
h™dÀr
 =
upd©e
->
‹igöÆ
) {

436 
	`debug
("Found backendÅhatÇeedsÑeplacing: %pÑeplaced with %p",

437 
upd©e
->
‹igöÆ
, upd©e->
ª∂a˚mít
);

438 
backíd
->
èrgë
.
h™dÀr
 = 
upd©e
->
ª∂a˚mít
;

440 
	}
}

442 
	$upd©e_ho°_rouãs
(*
vÆue
, *
d©a
)

444 
Ho°
 *
ho°
 = ((
Rouã
 *)
vÆue
)->
d©a
;

445 
	`t°_åavî£
(
ho°
->
rouãs
->rouãs, 
upd©e_rouãs
, 
d©a
);

446 
	}
}

448 
ölöe
 
	$Sîvî_c›y_a˘ive_h™dÀrs
(
Sîvî
 *
§v
, Sîvî *
c›y_‰om
)

450 
i
 = 0;

451 
i
 = 0; i < 
	`d¨øy_íd
(
c›y_‰om
->
h™dÀrs
); i++) {

452 
H™dÀr
 *
‰om
 = 
	`d¨øy_gë
(
c›y_‰om
->
h™dÀrs
, 
i
);

454 
j
 = 0;

455 
j
 = 0; j < 
	`d¨øy_íd
(
§v
->
h™dÀrs
); j++) {

456 
H™dÀr
 *
to
 = 
	`d¨øy_gë
(
§v
->
h™dÀrs
, 
j
);

458 if(
	`ßme_h™dÀr
(
‰om
, 
to
))

460 
	`debug
("Sw≠pög %∞‹igöÆ f‹ %∞ª∂a˚mít", 
to
, 
‰om
);

461 
RouãUpd©î
 
upd©e
 = {.
‹igöÆ
 = 
to
, .
ª∂a˚mít
 = 
‰om
};

462 
	`t°_åavî£
(
§v
->
ho°s
->
rouãs
, 
upd©e_ho°_rouãs
, &
upd©e
);

464 
	`d¨øy_£t
(
§v
->
h™dÀrs
, 
j
, 
‰om
);

466 
	`d¨øy_£t
(
c›y_‰om
->
h™dÀrs
, 
i
, 
to
);

467 
to
->
ru¬ög
 = 0;

474 
	}
}

476 
	$Sîvî_°¨t_h™dÀrs
(
Sîvî
 *
§v
, Sîvî *
c›y_‰om
)

478 
i
 = 0;

479 
rc
 = 0;

481 if(
c›y_‰om
 !
NULL
) {

482 
rc
 = 
	`Sîvî_c›y_a˘ive_h™dÀrs
(
§v
, 
c›y_‰om
);

483 
	`check
(
rc
 != -1, "FailedÅo copy old handlersÅoÇew server config.");

486 
i
 = 0; i < 
	`d¨øy_íd
(
§v
->
h™dÀrs
); i++) {

487 
H™dÀr
 *
h™dÀr
 = 
	`d¨øy_gë
(
§v
->
h™dÀrs
, 
i
);

488 
	`check
(
h™dÀr
 !
NULL
, "Invalid handler, can't be NULL.");

490 if(!
h™dÀr
->
ru¬ög
) {

491 
	`log_öfo
("LOADING H™dÀ∏%s", 
	`bd©a
(
h™dÀr
->
£nd_•ec
));

492 
rc
 = 
	`èsk¸óã
(
H™dÀr_èsk
, 
h™dÀr
, 
HANDLER_STACK
);

493 
	`check
(
rc
 != -1, "FailedÅo start handlerÅask.");

494 
h™dÀr
->
ru¬ög
 = 1;

499 
îr‹
:

501 
	}
}

504 
	$Sîvî_°›_h™dÀrs
(
Sîvî
 *
§v
)

506 
i
 = 0;

507 
i
 = 0; i < 
	`d¨øy_íd
(
§v
->
h™dÀrs
); i++) {

508 
H™dÀr
 *
h™dÀr
 = 
	`d¨øy_gë
(
§v
->
h™dÀrs
, 
i
);

509 
	`check
(
h™dÀr
 !
NULL
, "Invalid handler, can't be NULL.");

511 if(
h™dÀr
->
ru¬ög
) {

512 
	`log_öfo
("STOPPING HANDLER %s", 
	`bd©a
(
h™dÀr
->
£nd_•ec
));

513 if(
h™dÀr
->
èsk
 !
NULL
) {

514 
	`èsksig«l
(
h™dÀr
->
èsk
, 
SIGINT
);

515 
h™dÀr
->
ru¬ög
 = 0;

516 
	`èskdñay
(1);

520 if(
h™dÀr
->
ªcv_sockë
Ë
	`zmq_˛o£
(handler->recv_socket);

521 if(
h™dÀr
->
£nd_sockë
Ë
	`zmq_˛o£
(handler->send_socket);

522 
h™dÀr
->
ªcv_sockë
 = 
NULL
;

523 
h™dÀr
->
£nd_sockë
 = 
NULL
;

527 
îr‹
:

529 
	}
}

532 
	$Sîvî_queue_öô
()

534 
SERVER_QUEUE
 = 
	`d¨øy_¸óã
((
Sîvî
), 100);

535 
	`check
(
SERVER_QUEUE
 !
NULL
, "FailedÅo create server management queue.");

537 
îr‹
:

539 
	}
}

541 c⁄° 
	gSERVER_TTL
 = 10;

542 c⁄° 
	gSERVER_ACTIVE
 = 5;

544 
	$Sîvî_queue_˛ónup
()

546 if(
	`d¨øy_íd
(
SERVER_QUEUE
Ë< 
SERVER_ACTIVE
) {

552 
Sîvî
 *
cur_§v
 = 
	`d¨øy_p›
(
SERVER_QUEUE
);

553 
uöt32_t
 
too_ﬁd
 = 
	`time
(
NULL
Ë- 
SERVER_TTL
;

554 
i
 = 0;

558 
i
 = 0; i < 
	`d¨øy_íd
(
SERVER_QUEUE
Ë- 
SERVER_ACTIVE
; i++) {

559 
Sîvî
 *
§v
 = 
	`d¨øy_gë
(
SERVER_QUEUE
, 
i
);

561 if(
§v
->
¸óãd_⁄
 < 
too_ﬁd
) {

562 
Sîvî
 *
ª∂a˚
 = 
	`d¨øy_p›
(
SERVER_QUEUE
);

563 
	`d¨øy_£t
(
SERVER_QUEUE
, 
i
, 
ª∂a˚
);

565 
§v
->
li°í_fd
 = -1;

566 
	`Sîvî_de°roy
(
§v
);

571 
	`d¨øy_push
(
SERVER_QUEUE
, 
cur_§v
);

574 
	}
}

577 
	$Sîvî_queue_push
(
Sîvî
 *
§v
)

579 
	`Sîvî_queue_˛ónup
();

580 
	`d¨øy_push
(
SERVER_QUEUE
, 
§v
);

581 
	`h©èch
(
§v
, 
SERVER_QUEUE
);

582 
	}
}

585 
	$Sîvî_queue_de°roy
()

587 
i
 = 0;

588 
Sîvî
 *
§v
 = 
NULL
;

590 
i
 = 0; i < 
	`d¨øy_íd
(
SERVER_QUEUE
); i++) {

591 
§v
 = 
	`d¨øy_gë
(
SERVER_QUEUE
, 
i
);

592 
	`check
(
§v
 !
NULL
, "Gotá NULL value fromÅhe server queue.");

593 
	`Sîvî_de°roy
(
§v
);

596 
	`d¨øy_de°roy
(
SERVER_QUEUE
);

599 
îr‹
:

601 
	}
}

	@server.h

35 #i‚de‡
_£rvî_h


36 
	#_£rvî_h


	)

38 
	~"adt/t°.h
"

39 
	~"adt/d¨øy.h
"

40 
	~"ho°.h
"

41 
	~"routög.h
"

42 
	~<pﬁ¨s¶/s¶.h
>

43 
	~<pﬁ¨s¶/x509.h
>

44 
	~<pﬁ¨s¶/pk.h
>

48 
	mIPADDR_SIZE
 = 40

51 
d¨øy_t
 *
SERVER_QUEUE
;

53 
	sSîvî
 {

54 
	mp‹t
;

55 
	mli°í_fd
;

56 
Ho°
 *
	mdeÁu…_ho°
;

57 
RouãM≠
 *
	mho°s
;

58 
d¨øy_t
 *
	mh™dÀrs
;

59 
b°rög
 
	mböd_addr
;

60 
b°rög
 
	muuid
;

61 
b°rög
 
	mchroŸ
;

62 
b°rög
 
	mac˚ss_log
;

63 
b°rög
 
	mîr‹_log
;

64 
b°rög
 
	mpid_fûe
;

65 
b°rög
 
	mc⁄åﬁ_p‹t
;

66 
b°rög
 
	mdeÁu…_ho°«me
;

67 
uöt32_t
 
	m¸óãd_⁄
;

68 
	mu£_s¶
;

69 
x509_¸t
 
	mown_˚π
;

70 
x509_¸t
 
	mˇ_chaö
;

71 
pk_c⁄ãxt
 
	mpk_key
;

72 c⁄° *
	mcùhîs
;

73 *
	mdhm_P
;

74 *
	mdhm_G
;

75 } 
	tSîvî
;

77 
Sîvî
 *
Sîvî_¸óã
(
b°rög
 
uuid
, b°rög 
deÁu…_ho°
,

78 
b°rög
 
böd_addr
, 
p‹t
, b°rög 
chroŸ
,

79 
b°rög
 
ac˚ss_log
, b°rög 
îr‹_log
, b°rög 
pid_fûe
,

80 
b°rög
 
c⁄åﬁ_p‹t
, 
u£_s¶
);

82 
Sîvî_de°roy
(
Sîvî
 *
§v
);

84 
Sîvî_öô
();

86 
Sîvî_run
();

88 
Sîvî_add_ho°
(
Sîvî
 *
§v
, 
Ho°
 *
ho°
);

90 
Sîvî_£t_deÁu…_ho°
(
Sîvî
 *
§v
, 
Ho°
 *
ho°
);

92 
Ho°
 *
Sîvî_m©ch_backíd
(
Sîvî
 *
§v
, 
b°rög
 
èrgë
);

94 
Sîvî_°¨t_h™dÀrs
(
Sîvî
 *
§v
, Sîvî *
c›y_‰om
);

96 
Sîvî_°›_h™dÀrs
(
Sîvî
 *
§v
);

98 
Sîvî_queue_öô
();

100 
Sîvî_queue_˛ónup
();

102 
Sîvî_queue_push
(
Sîvî
 *
§v
);

104 
	#Sîvî_queue_œã°
(Ë
	`d¨øy_œ°
(
SERVER_QUEUE
)

	)

106 
Sîvî_queue_de°roy
();

	@setting.c

35 
	~<£âög.h
>

36 
	~<adt/t°.h
>

37 
	~<dbg.h
>

39 
t°_t
 *
	gSETTINGS_MAP
 = 
NULL
;

42 
	$Sëtög_add
(c⁄° *
key
, c⁄° *
vÆue
)

44 
b°rög
 
key_°r
 = 
	`b‰omc°r
(
key
);

45 
b°rög
 
vÆue_°r
 = 
	`b‰omc°r
(
vÆue
);

47 
	`check
(!
	`t°_£¨ch
(
SETTINGS_MAP
, 
	`bd©a
(
key_°r
), 
	`bÀngth
(
vÆue_°r
)),

49 
key
, key, 
vÆue
);

51 
SETTINGS_MAP
 = 
	`t°_ö£π
(SETTINGS_MAP, 
	`bd©a
(
key_°r
),

52 
	`bÀngth
(
key_°r
), 
vÆue_°r
);

54 
	`bde°roy
(
key_°r
);

57 
îr‹
:

58 
	`bde°roy
(
key_°r
);

59 
	`bde°roy
(
vÆue_°r
);

61 
	}
}

64 
b°rög
 
	$Sëtög_gë_°r
(c⁄° *
key
, 
b°rög
 
def
)

66 
b°rög
 
vÆue
 = 
	`t°_£¨ch
(
SETTINGS_MAP
, 
key
, 
	`°æí
(key));

68  
vÆue
 =
NULL
 ? 
def
 : value;

69 
	}
}

71 
	$Sëtög_gë_öt
(c⁄° *
key
, 
def
)

73 
b°rög
 
vÆue
 = 
	`t°_£¨ch
(
SETTINGS_MAP
, 
key
, 
	`°æí
(key));

75 if(
vÆue
) {

76  
	`©oi
((c⁄° *)
vÆue
->
d©a
);

78  
def
;

80 
	}
}

82 
	$Sëtög_åavî£_de°roy
(*
vÆue
, *
d©a
)

84 ()
d©a
;

86 
	`bde°roy
((
b°rög
)
vÆue
);

87 
	}
}

89 
	$Sëtög_de°roy
()

91 if(
SETTINGS_MAP
) {

92 
	`t°_åavî£
(
SETTINGS_MAP
, 
Sëtög_åavî£_de°roy
, 
NULL
);

93 
	`t°_de°roy
(
SETTINGS_MAP
);

94 
SETTINGS_MAP
 = 
NULL
;

96 
	}
}

	@setting.h

35 #i‚de‡
_£âög_h


36 
	#_£âög_h


	)

38 
	~<°dlib.h
>

39 
	~<b°rög.h
>

41 
Sëtög_add
(c⁄° *
key
, c⁄° *
vÆue
);

43 
b°rög
 
Sëtög_gë_°r
(c⁄° *
key
, b°rög 
def
);

45 
Sëtög_gë_öt
(c⁄° *
key
, 
def
);

47 
Sëtög_de°roy
();

	@state.c

37 
	~<°dlib.h
>

38 
	~<°dio.h
>

39 
	~<°©e.h
>

40 
	~<dbg.h
>

41 
	~<evíts.h
>

42 
	~<as£π.h
>

44 
	#CALL
(
A
, 
C
Ë
	`TRACE
(A,C); if(
°©e
->
a˘i⁄s
 && sèã->a˘i⁄s->AË
√xt
 = sèã->a˘i⁄s->
	`A
(
c⁄n
)

	)

52 c⁄° 
	gSèãA˘i⁄s_°¨t
 = 18;

53 c⁄° 
	gSèãA˘i⁄s_fú°_föÆ
 = 18;

54 c⁄° 
	gSèãA˘i⁄s_îr‹
 = 0;

56 c⁄° 
	gSèãA˘i⁄s_í_Proxy
 = 12;

57 c⁄° 
	gSèãA˘i⁄s_í_maö
 = 18;

58 c⁄° 
	gSèãA˘i⁄s_í_maö_C⁄√˘i⁄_IdÀ
 = 5;

59 c⁄° 
	gSèãA˘i⁄s_í_maö_C⁄√˘i⁄_HTTPRoutög
 = 3;

64 
	$Sèã_öô
(
Sèã
 *
°©e
, 
SèãA˘i⁄s
 *
a˘i⁄s
)

66 
°©e
->
a˘i⁄s
 =áctions;

71 
°©e
->
cs
 = 
SèãA˘i⁄s_°¨t
;

76 
	}
}

78 
	$Sèã_öv¨ü¡
(
Sèã
 *
°©e
)

80 i‡–
°©e
->
cs
 ==

88 i‡–
°©e
->
cs
 >=

97 
	}
}

99 
	$Sèã_exec
(
Sèã
 *
°©e
, 
evít
, 
C⁄√˘i⁄
 *
c⁄n
)

101 
evít_queue
[2] = {0};

102 
evít_queue
[0] = 
evít
;

103 
√xt
 = 0;

105 c⁄° *
p
 = 
evít_queue
;

106 c⁄° *
≥
 = 
p
+1;

107 c⁄° *
eof
 = 
evít
 =
CLOSE
 ? 
≥
 : 
NULL
;

112 i‡–
p
 =
≥
 )

113 
_ã°_eof
;

114  
°©e
->
cs
 )

117 i‡–(*
p
) == 107 )

118 
å23
;

119 
°0
;

120 
å0
:

122 { 
	`CALL
(
îr‹
, (*
p
)); }

123 
°0
;

125 
°0
:

126 
°©e
->
cs
 = 0;

127 
_out
;

128 
å23
:

130 { 
	`CALL
(
∑r£
, (*
p
)); }

131 
°1
;

132 
°1
:

133 i‡–++
p
 =
≥
 )

134 
_ã°_eof1
;

137  (*
p
) ) {

138 100: 
å1
;

139 110: 
å2
;

141 
å0
;

142 
å1
:

144 { 
	`CALL
(
˛o£
, (*
p
)); }

145 
°19
;

146 
°19
:

147 i‡–++
p
 =
≥
 )

148 
_ã°_eof19
;

151 i‡–(*
p
) == 107 )

152 
å23
;

153 
å0
;

154 
å2
:

156 { 
	`CALL
(
ªgi°î_ªque°
, (*
p
)); }

157 
°2
;

158 
°2
:

159 i‡–++
p
 =
≥
 )

160 
_ã°_eof2
;

163  (*
p
) ) {

164 100: 
å1
;

165 105: 
å3
;

166 106: 
å4
;

167 113: 
å5
;

168 115: 
å6
;

170 
å0
;

171 
å3
:

173 { 
	`CALL
(
rouã_ªque°
, (*
p
)); }

174 
°3
;

175 
°3
:

176 i‡–++
p
 =
≥
 )

177 
_ã°_eof3
;

180  (*
p
) ) {

181 100: 
å1
;

182 102: 
å7
;

183 104: 
å8
;

184 108: 
å9
;

186 
å0
;

187 
å5
:

189 { 
	`CALL
(
£nd_sockë_ª•⁄£
, (*
p
)); }

190 
°4
;

191 
å7
:

193 { 
	`CALL
(
hâp_to_dúe˘‹y
, (*
p
)); }

194 
°4
;

195 
°4
:

196 i‡–++
p
 =
≥
 )

197 
_ã°_eof4
;

200  (*
p
) ) {

201 100: 
å1
;

202 112: 
å10
;

204 
å0
;

205 
å10
:

207 { 
	`CALL
(
∑r£
, (*
p
)); }

208 
°5
;

209 
°5
:

210 i‡–++
p
 =
≥
 )

211 
_ã°_eof5
;

214  (*
p
) ) {

215 100: 
å1
;

216 110: 
å11
;

218 
å0
;

219 
å11
:

221 { 
	`CALL
(
idítify_ªque°
, (*
p
)); }

222 
°6
;

223 
°6
:

224 i‡–++
p
 =
≥
 )

225 
_ã°_eof6
;

228  (*
p
) ) {

229 105: 
å3
;

230 106: 
å4
;

231 113: 
å5
;

233 
å0
;

234 
å4
:

236 { 
	`CALL
(
rouã_ªque°
, (*
p
)); }

237 
°7
;

238 
°7
:

239 i‡–++
p
 =
≥
 )

240 
_ã°_eof7
;

243 i‡–(*
p
) == 104 )

244 
å12
;

245 
å0
;

246 
å8
:

248 { 
	`CALL
(
hâp_to_h™dÀr
, (*
p
)); }

249 
°8
;

250 
å12
:

252 { 
	`CALL
(
msg_to_h™dÀr
, (*
p
)); }

253 
°8
;

254 
°8
:

255 i‡–++
p
 =
≥
 )

256 
_ã°_eof8
;

259 i‡–(*
p
) == 111 )

260 
å10
;

261 
å0
;

262 
å9
:

264 { 
	`CALL
(
hâp_to_¥oxy
, (*
p
)); {
°12
;} }

265 
°9
;

266 
°9
:

267 i‡–++
p
 =
≥
 )

268 
_ã°_eof9
;

271 
å0
;

272 
å6
:

274 { 
	`CALL
(
rouã_ªque°
, (*
p
)); }

275 
°10
;

276 
°10
:

277 i‡–++
p
 =
≥
 )

278 
_ã°_eof10
;

281 i‡–(*
p
) == 104 )

282 
å13
;

283 
å0
;

284 
å13
:

286 { 
	`CALL
(
hâp_to_h™dÀr
, (*
p
)); }

287 
°11
;

288 
å14
:

290 { 
	`CALL
(
websockë_e°ablished
, (*
p
)); }

291 
°11
;

292 
°11
:

293 i‡–++
p
 =
≥
 )

294 
_ã°_eof11
;

297  (*
p
) ) {

298 100: 
å1
;

299 111: 
å14
;

301 
å0
;

302 
°12
:

303 i‡–++
p
 =
≥
 )

304 
_ã°_eof12
;

306  (*
p
) ) {

307 101: 
å15
;

308 103: 
å17
;

310 
°0
;

311 
å15
:

313 { 
	`CALL
(
¥oxy_dñivî
, (*
p
)); }

314 
°13
;

315 
°13
:

316 i‡–++
p
 =
≥
 )

317 
_ã°_eof13
;

320  (*
p
) ) {

321 109: 
å18
;

322 111: 
å19
;

324 
å0
;

325 
å17
:

327 { 
	`CALL
(
¥oxy_Áûed
, (*
p
)); }

328 
°14
;

329 
å18
:

331 { 
	`CALL
(
¥oxy_˛o£
, (*
p
)); }

332 
°14
;

333 
°14
:

334 i‡–++
p
 =
≥
 )

335 
_ã°_eof14
;

338 i‡–(*
p
) == 100 )

339 
å20
;

340 
å0
;

341 
å20
:

344 
p
--;

345 {
°5
;}

347 
°15
;

348 
å22
:

351 
	`CALL
(
¥oxy_˛o£
, (*
p
));

352 
p
--;

353 {
°3
;}

355 
°15
;

356 
°15
:

357 i‡–++
p
 =
≥
 )

358 
_ã°_eof15
;

361 
å0
;

362 
å19
:

364 { 
	`CALL
(
¥oxy_ª∂y_∑r£
, (*
p
)); }

365 
°16
;

366 
°16
:

367 i‡–++
p
 =
≥
 )

368 
_ã°_eof16
;

371  (*
p
) ) {

372 109: 
å18
;

373 110: 
å21
;

375 
å0
;

376 
å21
:

378 { 
	`CALL
(
¥oxy_ªq_∑r£
, (*
p
)); }

379 
°17
;

380 
°17
:

381 i‡–++
p
 =
≥
 )

382 
_ã°_eof17
;

385  (*
p
) ) {

386 102: 
å22
;

387 104: 
å22
;

388 105: 
å15
;

389 108: 
å22
;

390 109: 
å18
;

392 
å0
;

394 
_ã°_eof1
: 
°©e
->
cs
 = 1; 
_ã°_eof
;

395 
_ã°_eof19
: 
°©e
->
cs
 = 19; 
_ã°_eof
;

396 
_ã°_eof2
: 
°©e
->
cs
 = 2; 
_ã°_eof
;

397 
_ã°_eof3
: 
°©e
->
cs
 = 3; 
_ã°_eof
;

398 
_ã°_eof4
: 
°©e
->
cs
 = 4; 
_ã°_eof
;

399 
_ã°_eof5
: 
°©e
->
cs
 = 5; 
_ã°_eof
;

400 
_ã°_eof6
: 
°©e
->
cs
 = 6; 
_ã°_eof
;

401 
_ã°_eof7
: 
°©e
->
cs
 = 7; 
_ã°_eof
;

402 
_ã°_eof8
: 
°©e
->
cs
 = 8; 
_ã°_eof
;

403 
_ã°_eof9
: 
°©e
->
cs
 = 9; 
_ã°_eof
;

404 
_ã°_eof10
: 
°©e
->
cs
 = 10; 
_ã°_eof
;

405 
_ã°_eof11
: 
°©e
->
cs
 = 11; 
_ã°_eof
;

406 
_ã°_eof12
: 
°©e
->
cs
 = 12; 
_ã°_eof
;

407 
_ã°_eof13
: 
°©e
->
cs
 = 13; 
_ã°_eof
;

408 
_ã°_eof14
: 
°©e
->
cs
 = 14; 
_ã°_eof
;

409 
_ã°_eof15
: 
°©e
->
cs
 = 15; 
_ã°_eof
;

410 
_ã°_eof16
: 
°©e
->
cs
 = 16; 
_ã°_eof
;

411 
_ã°_eof17
: 
°©e
->
cs
 = 17; 
_ã°_eof
;

413 
_ã°_eof
: {}

414 i‡–
p
 =
eof
 )

416  
°©e
->
cs
 ) {

434 { 
	`CALL
(
îr‹
, (*
p
)); }

440 
_out
: {}

445  
√xt
;

446 
	}
}

450 c⁄° *
	gEVENT_NAMES
[] = {

468 c⁄° *
	$Sèã_evít_«me
(
evít
)

470 if(
evít
 =0Ëevíà
CLOSE
;

472 
	`as£π
(
evít
 >
CLOSE
 &&Évíà< 
EVENT_END
 && "Event is outsideÑange.");

474  
EVENT_NAMES
[
evít
 - 
CLOSE
];

475 
	}
}

	@state.h

35 #i‚de‡
_°©e_h


36 
	#_°©e_h


	)

38 
	gSèã
;

39 
	gC⁄√˘i⁄
;

41 (*
	t°©e_a˘i⁄_cb
)(
	tC⁄√˘i⁄
 *
	tc⁄n
);

43 
	sSèãA˘i⁄s
 {

44 
°©e_a˘i⁄_cb
 
îr‹
;

45 
°©e_a˘i⁄_cb
 
˛o£
;

46 
°©e_a˘i⁄_cb
 
∑r£
;

47 
°©e_a˘i⁄_cb
 
ªgi°î_ªque°
;

48 
°©e_a˘i⁄_cb
 
idítify_ªque°
;

49 
°©e_a˘i⁄_cb
 
rouã_ªque°
;

50 
°©e_a˘i⁄_cb
 
£nd_sockë_ª•⁄£
;

51 
°©e_a˘i⁄_cb
 
msg_to_h™dÀr
;

52 
°©e_a˘i⁄_cb
 
hâp_to_h™dÀr
;

53 
°©e_a˘i⁄_cb
 
hâp_to_¥oxy
;

54 
°©e_a˘i⁄_cb
 
hâp_to_dúe˘‹y
;

55 
°©e_a˘i⁄_cb
 
¥oxy_dñivî
;

56 
°©e_a˘i⁄_cb
 
¥oxy_Áûed
;

57 
°©e_a˘i⁄_cb
 
¥oxy_ª∂y_∑r£
;

58 
°©e_a˘i⁄_cb
 
¥oxy_ªq_∑r£
;

59 
°©e_a˘i⁄_cb
 
¥oxy_˛o£
;

60 
°©e_a˘i⁄_cb
 
websockë_e°ablished
;

61 } 
	tSèãA˘i⁄s
;

63 
	sSèã
 {

64 
cs
;

65 *
d©a
;

66 
SèãA˘i⁄s
 *
a˘i⁄s
;

67 } 
	tSèã
;

69 
	`Sèã_exec
(
Sèã
 *
°©e
, 
evít
, 
C⁄√˘i⁄
 *
c⁄n
);

70 
	`Sèã_öv¨ü¡
(
Sèã
 *
°©e
);

71 
	`Sèã_öô
(
Sèã
 *
°©e
, 
SèãA˘i⁄s
 *
a˘i⁄s
);

73 c⁄° *
	`Sèã_evít_«me
(
evít
);

	@superpoll.c

36 
	~<su≥Ωﬁl.h
>

37 
	~<mem/hÆloc.h
>

38 
	~<dbg.h
>

39 
	~<as£π.h
>

40 
	~<sys/ªsour˚.h
>

41 
	~<uni°d.h
>

42 
	~<as£π.h
>

43 
	~<£âög.h
>

45 #ifde‡
__löux__


46 
	#HAS_EPOLL
 1

	)

48 
	#HAS_EPOLL
 0

	)

51 
	gMAXFD
 = 0;

54 
	mMAX_NOFILE
 = 1024 * 10

57 
	$Su≥rPﬁl_de°roy
(
Su≥rPﬁl
 *
•
)

59 if(
•
) {

60 if(
HAS_EPOLL
) {

61 if(
•
->
idÀ_fd
 > 0Ë
	`˛o£
(sp->idle_fd);

62 if(
•
->
idÀ_a˘ive
) {

63 
	`li°_de°roy_nodes
(
•
->
idÀ_a˘ive
);

64 
	`li°_de°roy
(
•
->
idÀ_a˘ive
);

67 if(
•
->
idÀ_‰ì
) {

68 
	`li°_de°roy_nodes
(
•
->
idÀ_‰ì
);

69 
	`li°_de°roy
(
•
->
idÀ_‰ì
);

73 
	`h_‰ì
(
•
);

75 
	}
}

78 
ölöe
 
Su≥rPﬁl_¨m_idÀ_fd
(
Su≥rPﬁl
 *
•
);

79 
ölöe
 
Su≥rPﬁl_£tup_idÀ
(
Su≥rPﬁl
 *
•
, 
tŸÆ_›í_fd
);

80 
ölöe
 
Su≥rPﬁl_add_idÀ
(
Su≥rPﬁl
 *
•
, *
d©a
, 
fd
, 
rw
);

81 
ölöe
 
Su≥rPﬁl_add_idÀ_hôs
(
Su≥rPﬁl
 *
•
, 
PﬁlResu…
 *
ªsu…
);

84 
Su≥rPﬁl
 *
	$Su≥rPﬁl_¸óã
()

86 
Su≥rPﬁl
 *
•
 = 
	`h_ˇŒoc
((SuperPoll), 1);

87 
	`check_mem
(
•
);

88 
rc
 = 0;

90 
tŸÆ_›í_fd
 = 
	`Su≥rPﬁl_gë_max_fd
();

91 
•
->
nfd_hŸ
 = 0;

93 if(
HAS_EPOLL
) {

94 
hŸ_dividíd
 = 
	`Sëtög_gë_öt
("superpoll.hot_dividend", 4);

96 
•
->
max_hŸ
 = 
tŸÆ_›í_fd
 / 
hŸ_dividíd
;

98 
rc
 = 
	`Su≥rPﬁl_£tup_idÀ
(
•
, 
tŸÆ_›í_fd
);

99 
	`check
(
rc
 == 0, "FailedÅo configureÉpoll. Disabling.");

101 
	`debug
("Allowing for %d hotánd %d idle file descriptors (dividend was %d)",

102 
•
->
max_hŸ
, sp->
max_idÀ
, 
hŸ_dividíd
);

104 
•
->
max_hŸ
 = 
tŸÆ_›í_fd
;

106 
	`debug
("You dÿnŸ havêïﬁ»suµ‹t. AŒowög f‹ %d fûêdes¸ùt‹†throughÖﬁl.", 
•
->
max_hŸ
);

109 
•
->
pﬁlfd
 = 
	`h_ˇŒoc
((
zmq_pﬁlôem_t
), sp->
max_hŸ
);

110 
	`check_mem
(
•
->
pﬁlfd
);

111 
	`h©èch
(
•
->
pﬁlfd
, sp);

113 
•
->
hŸ_d©a
 = 
	`h_ˇŒoc
((*), sp->
max_hŸ
);

114 
	`check_mem
(
•
->
hŸ_d©a
);

115 
	`h©èch
(
•
->
hŸ_d©a
, sp);

117 if(
HAS_EPOLL
) {

118 
rc
 = 
	`Su≥rPﬁl_¨m_idÀ_fd
(
•
);

119 
	`check
(
rc
 != -1, "FailedÅoáddÅheÉpoll socketÅoÅheÖollÜist.");

122  
•
;

124 
îr‹
:

125 
	`Su≥rPﬁl_de°roy
(
•
);

127  
NULL
;

128 
	}
}

132 
ölöe
 
	$Su≥rPﬁl_add_pﬁl
(
Su≥rPﬁl
 *
•
, *
d©a
, *
sockë
, 
fd
, 
rw
)

134 
cur_fd
 = 
•
->
nfd_hŸ
;

135 
bôs
 = 0;

137 
	`check
(
sockë
 !
NULL
 || 
fd
 >0, "Aâem±Åÿ%†‰om dód fûêdes¸ùt‹: %d", 
rw
 == 'r' ? "read" : "write", fd);

138 
	`check
(
cur_fd
 < 
	`Su≥rPﬁl_max_hŸ
(
•
), "Too many %s: %d is greaterÅhan hot %d max.",

139 
sockë
 ? "handlerÑequests outstanding, your handler isn'tÑunning" : "files open",

140 
cur_fd
, 
	`Su≥rPﬁl_max_hŸ
(
•
));

143 if(
rw
 == 'r') {

144 
bôs
 |
ZMQ_POLLIN
;

145 } if(
rw
 == 'w') {

146 
bôs
 |
ZMQ_POLLOUT
;

148 
	`£¡öñ
("InvÆidÉvíà%¯h™dedÅÿsu≥Ωﬁl.Ñ/w o∆y.", 
rw
);

151 
•
->
pﬁlfd
[
cur_fd
].
fd
 = fd;

152 
•
->
pﬁlfd
[
cur_fd
].
sockë
 = socket;

153 
•
->
pﬁlfd
[
cur_fd
].
evíts
 = 
bôs
;

154 
•
->
pﬁlfd
[
cur_fd
].
ªvíts
 = 0;

155 
•
->
hŸ_d©a
[
cur_fd
] = 
d©a
;

156 
•
->
nfd_hŸ
++;

158  
•
->
nfd_hŸ
;

160 
îr‹
:

162 
	}
}

164 
	$Su≥rPﬁl_add
(
Su≥rPﬁl
 *
•
, *
d©a
, *
sockë
, 
fd
, 
rw
, 
hŸ
)

166 if(
sockë
 || 
hŸ
 || !
HAS_EPOLL
) {

167  
	`Su≥rPﬁl_add_pﬁl
(
•
, 
d©a
, 
sockë
, 
fd
, 
rw
);

169 
	`as£π
(!
sockë
 && "Cannotáddá 0MQ socketÅoÅhe idle (!hot) set.");

170  
	`Su≥rPﬁl_add_idÀ
(
•
, 
d©a
, 
fd
, 
rw
);

172 
	}
}

174 
	$Su≥rPﬁl_dñ
(
Su≥rPﬁl
 *
•
, *
sockë
, 
fd
, 
hŸ
)

176 
i
 = 0;

177 
¶Ÿ
 = 0;

179 
i
 = 0; i < 
•
->
nfd_hŸ
; i++) {

180 if(
sockë
) {

181 if(
•
->
pﬁlfd
[
i
].
sockë
 == socket) {

182 
¶Ÿ
 = 
i
; ;

184 } if(
hŸ
) {

185 if(
•
->
pﬁlfd
[
i
].
fd
 == fd) {

186 
¶Ÿ
 = 
i
; ;

189 
	`£¡öñ
("Not implemented yet.");

193 
	`Su≥rPﬁl_com∑˘_down
(
•
, 
¶Ÿ
);

196 
îr‹
:

198 
	}
}

201 
	$Su≥rPﬁl_com∑˘_down
(
Su≥rPﬁl
 *
•
, 
i
)

203 
•
->
nfd_hŸ
--;

204 if(
•
->
nfd_hŸ
 >= 0) {

205 
•
->
pﬁlfd
[
i
] = sp->pﬁlfd[•->
nfd_hŸ
];

206 
•
->
hŸ_d©a
[
i
] = sp->hŸ_d©a[•->
nfd_hŸ
];

208 
	}
}

210 
ölöe
 
	$Su≥rPﬁl_add_hô
(
PﬁlResu…
 *
ªsu…
, 
zmq_pﬁlôem_t
 *
p
, *
d©a
)

212 
ªsu…
->
hôs
[ªsu…->
nhôs
].
ev
 = *
p
;

213 
ªsu…
->
hôs
[ªsu…->
nhôs
].
d©a
 = data;

214 
ªsu…
->
nhôs
++;

215 
	}
}

218 
	$Su≥rPﬁl_pﬁl
(
Su≥rPﬁl
 *
•
, 
PﬁlResu…
 *
ªsu…
, 
ms
)

220 
i
 = 0;

221 
nfound
 = 0;

222 
cur_i
 = 0;

223 
rc
 = 0;

224 
hô_idÀ
 = 0;

226 
ªsu…
->
nhôs
 = 0;

229 
nfound
 = 
	`zmq_pﬁl
(
•
->
pﬁlfd
, sp->
nfd_hŸ
, 
ms
 * 
ZMQ_POLL_MSEC
);

230 
	`check
(
nfound
 >0 || 
î∫o
 =
EINTR
, "zmq_poll failed.");

232 
ªsu…
->
hŸ_fds
 = 
nfound
;

234 
i
 = 0; i < 
nfound
; i++) {

235 
cur_i
 < 
•
->
nfd_hŸ
 && !•->
pﬁlfd
[cur_i].
ªvíts
) {

236 
cur_i
++;

239 if(
HAS_EPOLL
 && 
•
->
pﬁlfd
[
cur_i
].
fd
 =•->
idÀ_fd
) {

240 
hô_idÀ
 = 1;

241 
rc
 = 
	`Su≥rPﬁl_add_idÀ_hôs
(
•
, 
ªsu…
);

242 
	`check
(
rc
 != -1, "FailedÅoádd idle hits.");

244 
	`Su≥rPﬁl_add_hô
(
ªsu…
, &
•
->
pﬁlfd
[
cur_i
], sp->
hŸ_d©a
[cur_i]);

247 
	`Su≥rPﬁl_com∑˘_down
(
•
, 
cur_i
);

250 if(
hô_idÀ
) {

251 
	`Su≥rPﬁl_¨m_idÀ_fd
(
•
);

254  
ªsu…
->
nhôs
;

256 
îr‹
:

259 
	}
}

261 
	$Su≥rPﬁl_gë_max_fd
()

263 
rc
 = 0;

264 
æimô
 
æ
;

266 if(
MAXFD
)  MAXFD;

268 
ªque°ed_max
 = 
	`Sëtög_gë_öt
("su≥Ωﬁl.max_fd", 
MAX_NOFILE
);

270 
	`debug
("Aâem±ögÅÿf‹˚ NOFILEÜimôÅÿ%d", 
ªque°ed_max
);

271 
æ
.
æim_cur
 = 
ªque°ed_max
;

272 
æ
.
æim_max
 = 
ªque°ed_max
;

274 
rc
 = 
	`£ålimô
(
RLIMIT_NOFILE
, &
æ
);

276 if(
rc
 == 0) {

277 
MAXFD
 = 
ªque°ed_max
;

279 
	`log_öfo
("CouldÇŸ f‹˚ NOFILE highî, you'ŒÇìdÅÿru¿a†roŸ: %s", 
	`°ªº‹
(
î∫o
));

280 
rc
 = 
	`gëæimô
(
RLIMIT_NOFILE
, &
æ
);

281 
	`check
(
rc
 == 0, "FailedÅo get your max open fileÜimit,Åotally weird.");

282 
MAXFD
 = 
æ
.
æim_cur
;

285 
	`debug
("MAX o≥¿fûêdes¸ùt‹†i†%dÇow.", 
MAXFD
);

286  
MAXFD
;

288 
îr‹
:

289 
	`log_îr
("TOTAL CATASTROPHE, ifÅhis happens we can't get yourÑlimit for max files,Öicking 256Åo be safe.");

291 
MAXFD
 = 256;

292  
MAXFD
;

293 
	}
}

296 
	$PﬁlResu…_öô
(
Su≥rPﬁl
 *
p
, 
PﬁlResu…
 *
ªsu…
)

298 
	`mem£t
(
ªsu…
, 0, (
PﬁlResu…
));

299 
ªsu…
->
hôs
 = 
	`h_ˇŒoc
((
PﬁlEvít
), 
	`Su≥rPﬁl_max_hŸ
(
p
Ë+ 
	`Su≥rPﬁl_max_idÀ
(p));

300 
	`h©èch
(
ªsu…
->
hôs
, 
p
);

301 
	`check_mem
(
ªsu…
->
hôs
);

305 
îr‹
:

307 
	}
}

309 
	$PﬁlResu…_˛ón
(
PﬁlResu…
 *
ªsu…
)

311 if(
ªsu…
) {

312 if(
ªsu…
->
hôs
Ë
	`h_‰ì
(result->hits);

314 
	}
}

317 #i‡
deföed
 
HAS_EPOLL
 && HAS_EPOLL == 0

319 
ölöe
 
	$Su≥rPﬁl_¨m_idÀ_fd
(
Su≥rPﬁl
 *
•
)

321 
	`as£π
(0 && "ShouldÇot get called.");

323 
	}
}

325 
ölöe
 
	$Su≥rPﬁl_£tup_idÀ
(
Su≥rPﬁl
 *
•
, 
tŸÆ_›í_fd
)

327 
•
->
max_idÀ
 = 0;

328 
•
->
evíts
 = 
NULL
;

329 
•
->
idÀ_fd
 = -1;

330 
•
->
idÀ_d©a
 = 
NULL
;

331 
•
->
idÀ_‰ì
 = 
NULL
;

332 
•
->
idÀ_a˘ive
 = 
NULL
;

334 
	}
}

336 
ölöe
 
	$Su≥rPﬁl_add_idÀ
(
Su≥rPﬁl
 *
•
, *
d©a
, 
fd
, 
rw
)

338  
	`Su≥rPﬁl_add_pﬁl
(
•
, 
d©a
, 
NULL
, 
fd
, 
rw
);

339 
	}
}

341 
ölöe
 
	$Su≥rPﬁl_add_idÀ_hôs
(
Su≥rPﬁl
 *
•
, 
PﬁlResu…
 *
ªsu…
)

344 
	}
}

348 
	~<sys/ïﬁl.h
>

350 
	#Su≥rPﬁl_ïﬁl_evíts
(
S
Ë((
ïﬁl_evít
 *)(S->
evíts
))

	)

352 
ölöe
 
	$Su≥rPﬁl_¨m_idÀ_fd
(
Su≥rPﬁl
 *
•
)

354  
	`Su≥rPﬁl_add
(
•
, 
NULL
, NULL, sp->
idÀ_fd
, 'r', 1);

355 
	}
}

357 
ölöe
 
	$Su≥rPﬁl_£tup_idÀ
(
Su≥rPﬁl
 *
•
, 
tŸÆ_›í_fd
)

359 
	`as£π
(
HAS_EPOLL
 == 1 && "This function shouldÇotÑun unless HAS_EPOLL is 1.");

361 
i
 = 0;

363 
•
->
max_idÀ
 = 
tŸÆ_›í_fd
 - sp->
max_hŸ
;

364 
	`as£π
(
•
->
max_idÀ
 >= 0 && "max idle is can't beÜessÅhan zero.");

367 
•
->
evíts
 = 
	`h_ˇŒoc
((
ïﬁl_evít
), sp->
max_idÀ
);

368 
	`check_mem
(
•
->
evíts
);

369 
	`h©èch
(
•
->
evíts
, sp);

371 
•
->
idÀ_fd
 = 
	`ïﬁl_¸óã
(•->
max_idÀ
);

372 
	`check
(
•
->
idÀ_fd
 != -1, "FailedÅo createÅheÉpoll structure.");

374 
•
->
idÀ_d©a
 = 
	`h_ˇŒoc
((
IdÀD©a
), sp->
max_idÀ
);

375 
	`check_mem
(
•
->
idÀ_d©a
);

376 
	`h©èch
(
•
->
idÀ_d©a
, sp);

378 
•
->
idÀ_‰ì
 = 
	`li°_¸óã
(•->
max_idÀ
);

379 
	`check_mem
(
•
->
idÀ_‰ì
);

382 
	`debug
("Buûdög u∞¶Ÿ†f‹ %d sockë†ö idÀ. CouldÅakê®möuã.", 
•
->
max_idÀ
);

383 
i
 = 0; i < 
•
->
max_idÀ
; i++) {

384 
 ode_t
 *
n
 = 
	` ode_¸óã
(&
•
->
idÀ_d©a
[
i
]);

385 
	`check_mem
(
n
);

386 
	`li°_≠≥nd
(
•
->
idÀ_‰ì
, 
n
);

389 
•
->
idÀ_a˘ive
 = 
	`li°_¸óã
(•->
max_idÀ
);

390 
	`check_mem
(
•
->
idÀ_a˘ive
);

393 
îr‹
:

395 
	}
}

398 
ölöe
 
	$Su≥rPﬁl_add_idÀ
(
Su≥rPﬁl
 *
•
, *
d©a
, 
fd
, 
rw
)

401 
	`check
(!
	`li°_i£m±y
(
•
->
idÀ_‰ì
), "Too many open files,Ço free idle slots.");

403 
 ode_t
 *
√xt
 = 
	`li°_dñ_œ°
(
•
->
idÀ_‰ì
);

405 
IdÀD©a
 *
id
 = (IdÀD©®*)
	` ode_gë
(
√xt
);

406 
	`as£π
(
id
 && "Gotán id NULLÖtr fromÅhe freeÜist.");

408 
id
->
fd
 = fd;

409 
id
->
d©a
 = data;

411 
	`li°_≠≥nd
(
•
->
idÀ_a˘ive
, 
√xt
);

414 
ïﬁl_evít
 
evít
;

416 if(
rw
 == 'r') {

417 
ïﬁl_evít
 
ev
 = {.
d©a
 = {.
±r
 = 
√xt
}, .
evíts
 = 
EPOLLIN
 | 
EPOLLONESHOT
};

418 
evít
 = 
ev
;

419 } if(
rw
 == 'w') {

420 
ïﬁl_evít
 
ev
 = {.
d©a
 = {.
±r
 = 
√xt
}, .
evíts
 = 
EPOLLOUT
 | 
EPOLLONESHOT
};

421 
evít
 = 
ev
;

423 
	`£¡öñ
("InvÆidÉvíà%¯h™dedÅÿsu≥Ωﬁl.Ñ/w o∆y.", 
rw
);

427 
rc
 = 
	`ïﬁl_˘l
(
•
->
idÀ_fd
, 
EPOLL_CTL_ADD
, 
fd
, &
evít
);

429 if(
rc
 =-1 && 
î∫o
 =
EEXIST
) {

431 
rc
 = 
	`ïﬁl_˘l
(
•
->
idÀ_fd
, 
EPOLL_CTL_MOD
, 
fd
, &
evít
);

432 
	`check
(
rc
 != -1, "CouldÇot MOD fdÅhat'sálready inÉpoll.");

433 } if(
rc
 == -1) {

434 
	`£¡öñ
("FailedÅoádd FDÅoÉpoll.");

439 
îr‹
:

441 
	}
}

444 
ölöe
 
	$Su≥rPﬁl_add_idÀ_hôs
(
Su≥rPﬁl
 *
•
, 
PﬁlResu…
 *
ªsu…
)

446 
nfds
 = 0;

447 
i
 = 0;

448 
rc
 = 0;

449 
zmq_pﬁlôem_t
 
ev
 = {.
sockë
 = 
NULL
};

451 
nfds
 = 
	`ïﬁl_waô
(
•
->
idÀ_fd
, 
	`Su≥rPﬁl_ïﬁl_evíts
(•), sp->
max_idÀ
, 0);

452 
	`check
(
nfds
 >= 0, "Error doingÉpoll.");

453 
ïﬁl_evít
 *
evíts
 = 
	`Su≥rPﬁl_ïﬁl_evíts
(
•
);

455 
i
 = 0; i < 
nfds
; i++) {

456 
 ode_t
 *
node
 = ( ode_à*)
evíts
[
i
].
d©a
.
±r
;

457 
IdÀD©a
 *
d©a
 = 
	` ode_gë
(
node
);

458 
ev
.
fd
 = 
d©a
->fd;

460 if(
evíts
[
i
].evít†& 
EPOLLIN
) {

461 
ev
.
ªvíts
 = 
ZMQ_POLLIN
;

464 if(
evíts
[
i
].evít†& 
EPOLLOUT
) {

465 
ev
.
ªvíts
 = 
ZMQ_POLLOUT
;

468 if(
ev
.
ªvíts
) {

469 
	`Su≥rPﬁl_add_hô
(
ªsu…
, &
ev
, 
d©a
->data);

473 
rc
 = 
	`ïﬁl_˘l
(
•
->
idÀ_fd
, 
EPOLL_CTL_DEL
, 
ev
.
fd
, 
NULL
);

474 
	`check
(
rc
 !-1, "FaûedÅÿªmovêfd %d fromÉpﬁl.", 
ev
.
fd
);

477 
node
 = 
	`li°_dñëe
(
•
->
idÀ_a˘ive
,Çode);

478 
	`li°_≠≥nd
(
•
->
idÀ_‰ì
, 
node
);

480 
	`as£π
(
	`li°_cou¡
(
•
->
idÀ_a˘ive
Ë+Üi°_cou¡(•->
idÀ_‰ì
Ë=()•->
max_idÀ
 && "WeÜost one somewhere.");

483 
ªsu…
->
idÀ_fds
 = 
nfds
;

484  
nfds
;

486 
îr‹
:

488 
	}
}

	@superpoll.h

35 #i‚de‡
_su≥Ωﬁl_h


36 
	#_su≥Ωﬁl_h


	)

38 
	~<adt/li°.h
>

39 
	~"zmq_com∑t.h
"

41 
	sIdÀD©a
 {

42 
	mfd
;

43 *
	md©a
;

44 } 
	tIdÀD©a
;

46 
	sSu≥rPﬁl
 {

49 
zmq_pﬁlôem_t
 *
	mpﬁlfd
;

51 **
	mhŸ_d©a
;

52 
	mnfd_hŸ
;

53 
	mmax_hŸ
;

56 *
	mevíts
;

57 
	midÀ_fd
;

59 
	mmax_idÀ
;

60 
IdÀD©a
 *
	midÀ_d©a
;

61 
li°_t
 *
	midÀ_a˘ive
;

62 
li°_t
 *
	midÀ_‰ì
;

63 } 
	tSu≥rPﬁl
;

66 
	sPﬁlEvít
 {

67 
zmq_pﬁlôem_t
 
	mev
;

68 *
	md©a
;

69 } 
	tPﬁlEvít
;

72 
	sPﬁlResu…
 {

73 
	mhŸ_fds
;

74 
	mhŸ_©r
;

76 
	midÀ_fds
;

77 
	midÀ_©r
;

79 
	mnhôs
;

80 
PﬁlEvít
 *
	mhôs
;

81 } 
	tPﬁlResu…
;

83 
Su≥rPﬁl_de°roy
(
Su≥rPﬁl
 *
•
);

85 
Su≥rPﬁl
 *
Su≥rPﬁl_¸óã
();

87 
Su≥rPﬁl_add
(
Su≥rPﬁl
 *
•
, *
d©a
, *
sockë
, 
fd
, 
rw
, 
hŸ
);

88 
Su≥rPﬁl_dñ
(
Su≥rPﬁl
 *
•
, *
sockë
, 
fd
, 
hŸ
);

90 
Su≥rPﬁl_com∑˘_down
(
Su≥rPﬁl
 *
•
, 
i
);

92 
Su≥rPﬁl_pﬁl
(
Su≥rPﬁl
 *
•
, 
PﬁlResu…
 *
ªsu…
, 
ms
);

94 
Su≥rPﬁl_gë_max_fd
();

96 
	#Su≥rPﬁl_a˘ive_hŸ
(
S
Ë((S)->
nfd_hŸ
)

	)

98 
	#Su≥rPﬁl_a˘ive_idÀ
(
S
Ë((S)->
idÀ_a˘ive
 ? 
	`li°_cou¡
((S)->idÀ_a˘iveË:0)

	)

100 
	#Su≥rPﬁl_a˘ive_cou¡
(
S
Ë(
	`Su≥rPﬁl_a˘ive_hŸ
(SË+ 
	`Su≥rPﬁl_a˘ive_idÀ
(S))

	)

102 
	#Su≥rPﬁl_max_hŸ
(
S
Ë((S)->
max_hŸ
)

	)

103 
	#Su≥rPﬁl_max_idÀ
(
S
Ë((S)->
max_idÀ
)

	)

105 
	#Su≥rPﬁl_d©a
(
S
, 
I
Ë((S)->
hŸ_d©a
[(I)])

	)

107 
PﬁlResu…_öô
(
Su≥rPﬁl
 *
p
, 
PﬁlResu…
 *
ªsu…
);

109 
PﬁlResu…_˛ón
(
PﬁlResu…
 *
ªsu…
);

	@task/386-ucontext.h

1 
	#£tc⁄ãxt
(
u
Ë
	`£tmc⁄ãxt
(&(u)->
uc_mc⁄ãxt
)

	)

2 
	#gëc⁄ãxt
(
u
Ë
	`gëmc⁄ãxt
(&(u)->
uc_mc⁄ãxt
)

	)

3 
mc⁄ãxt
 
	tmc⁄ãxt_t
;

4 
uc⁄ãxt
 
	tuc⁄ãxt_t
;

6 
sw≠c⁄ãxt
(
uc⁄ãxt_t
*, const ucontext_t*);

7 
makec⁄ãxt
(
uc⁄ãxt_t
*, (*)(), , ...);

8 
gëmc⁄ãxt
(
mc⁄ãxt_t
*);

9 
£tmc⁄ãxt
(c⁄° 
mc⁄ãxt_t
*);

73 
	smc⁄ãxt
 {

79 
	mmc_⁄°ack
;

80 
	mmc_gs
;

81 
	mmc_fs
;

82 
	mmc_es
;

83 
	mmc_ds
;

84 
	mmc_edi
;

85 
	mmc_esi
;

86 
	mmc_ebp
;

87 
	mmc_i•
;

88 
	mmc_ebx
;

89 
	mmc_edx
;

90 
	mmc_ecx
;

91 
	mmc_óx
;

92 
	mmc_å≠no
;

93 
	mmc_îr
;

94 
	mmc_eù
;

95 
	mmc_cs
;

96 
	mmc_eÊags
;

97 
	mmc_e•
;

98 
	mmc_ss
;

100 
	mmc_Âªgs
[28];

101 
	m__•¨e__
[17];

104 
	suc⁄ãxt
 {

113 
sig£t_t
 
	muc_sigmask
;

114 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

116 
__uc⁄ãxt
 *
	muc_lök
;

117 
°ack_t
 
	muc_°ack
;

118 
	m__•¨e__
[8];

	@task/amd64-ucontext.h

1 
	#£tc⁄ãxt
(
u
Ë
	`£tmc⁄ãxt
(&(u)->
uc_mc⁄ãxt
)

	)

2 
	#gëc⁄ãxt
(
u
Ë
	`gëmc⁄ãxt
(&(u)->
uc_mc⁄ãxt
)

	)

3 
mc⁄ãxt
 
	tmc⁄ãxt_t
;

4 
uc⁄ãxt
 
	tuc⁄ãxt_t
;

6 
sw≠c⁄ãxt
(
uc⁄ãxt_t
*, const ucontext_t*);

7 
makec⁄ãxt
(
uc⁄ãxt_t
*, (*)(), , ...);

8 
gëmc⁄ãxt
(
mc⁄ãxt_t
*);

9 
£tmc⁄ãxt
(c⁄° 
mc⁄ãxt_t
*);

73 
	smc⁄ãxt
 {

79 
	mmc_⁄°ack
;

80 
	mmc_rdi
;

81 
	mmc_rsi
;

82 
	mmc_rdx
;

83 
	mmc_rcx
;

84 
	mmc_r8
;

85 
	mmc_r9
;

86 
	mmc_øx
;

87 
	mmc_rbx
;

88 
	mmc_rbp
;

89 
	mmc_r10
;

90 
	mmc_r11
;

91 
	mmc_r12
;

92 
	mmc_r13
;

93 
	mmc_r14
;

94 
	mmc_r15
;

95 
	mmc_å≠no
;

96 
	mmc_addr
;

97 
	mmc_Êags
;

98 
	mmc_îr
;

99 
	mmc_rù
;

100 
	mmc_cs
;

101 
	mmc_rÊags
;

102 
	mmc_r•
;

103 
	mmc_ss
;

105 
	mmc_Àn
;

106 
	#_MC_FPFMT_NODEV
 0x10000

	)

107 
	#_MC_FPFMT_XMM
 0x10002

	)

108 
	mmc_Âf‹m©
;

109 
	#_MC_FPOWNED_NONE
 0x20000

	)

110 
	#_MC_FPOWNED_FPU
 0x20001

	)

111 
	#_MC_FPOWNED_PCB
 0x20002

	)

112 
	mmc_ow√dÂ
;

116 
	mmc_Â°©e
[64];

117 
	mmc_•¨e
[8];

120 
	suc⁄ãxt
 {

129 
sig£t_t
 
	muc_sigmask
;

130 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

132 
__uc⁄ãxt
 *
	muc_lök
;

133 
°ack_t
 
	muc_°ack
;

134 
	m__•¨e__
[8];

	@task/context.c

3 
	~"èskim∂.h
"

5 #i‡
deföed
(
__APPLE__
)

6 #i‡
deföed
(
__i386__
)

7 
	#NEEDX86MAKECONTEXT


	)

8 
	#NEEDSWAPCONTEXT


	)

9 #ñi‡
deföed
(
__x86_64__
)

10 
	#NEEDAMD64MAKECONTEXT


	)

11 
	#NEEDSWAPCONTEXT


	)

13 
	#NEEDPOWERMAKECONTEXT


	)

14 
	#NEEDSWAPCONTEXT


	)

18 #i‡
deföed
(
__FªeBSD__
Ë&& deföed(
__i386__
) && __FreeBSD__ < 5

19 
	#NEEDX86MAKECONTEXT


	)

20 
	#NEEDSWAPCONTEXT


	)

23 #i‡
deföed
(
__O≥nBSD__
)

24 #i‡
deföed
(
__i386__
)

25 
	#NEEDX86MAKECONTEXT


	)

26 
	#NEEDSWAPCONTEXT


	)

27 #ñi‡
deföed
(
__x86_64__
)

28 
	#NEEDAMD64MAKECONTEXT


	)

29 
	#NEEDSWAPCONTEXT


	)

33 #i‡
deföed
(
__löux__
Ë&& deföed(
__¨m__
)

34 
	#NEEDSWAPCONTEXT


	)

35 
	#NEEDARMMAKECONTEXT


	)

38 #ifde‡
NEEDPOWERMAKECONTEXT


39 
makec⁄ãxt
(
uc⁄ãxt_t
 *
u˝
, (*
func
)(), 
¨gc
, ...)

41 
ul⁄g
 *
•
, *
tos
;

42 
va_li°
 
¨g
;

44 
tos
 = (
ul⁄g
*)
u˝
->
uc_°ack
.
ss_•
+u˝->uc_°ack.
ss_size
/(ulong);

45 
•
 = 
tos
 - 16;

46 
u˝
->
mc
.
pc
 = ()
func
;

47 
u˝
->
mc
.
•
 = ()sp;

48 
	`va_°¨t
(
¨g
, 
¨gc
);

49 
u˝
->
mc
.
r3
 = 
	`va_¨g
(
¨g
, );

50 
	`va_íd
(
¨g
);

51 
	}
}

54 #ifde‡
NEEDX86MAKECONTEXT


55 
makec⁄ãxt
(
uc⁄ãxt_t
 *
u˝
, (*
func
)(), 
¨gc
, ...)

57 *
•
;

59 
•
 = (*)
u˝
->
uc_°ack
.
ss_•
+u˝->uc_°ack.
ss_size
/4;

60 
•
 -
¨gc
;

61 
•
 = (*)((
uöçå_t
)sp - (uintptr_t)sp%16);

62 
	`memmove
(
•
, &
¨gc
+1,árgc*());

64 *--
•
 = 0;

65 
u˝
->
uc_mc⁄ãxt
.
mc_eù
 = ()
func
;

66 
u˝
->
uc_mc⁄ãxt
.
mc_e•
 = ()
•
;

67 
	}
}

70 #ifde‡
NEEDAMD64MAKECONTEXT


71 
makec⁄ãxt
(
uc⁄ãxt_t
 *
u˝
, (*
func
)(), 
¨gc
, ...)

73 *
•
;

74 
va_li°
 
va
;

76 
	`mem£t
(&
u˝
->
uc_mc⁄ãxt
, 0,  ucp->uc_mcontext);

77 if(
¨gc
 != 2)

79 
	`va_°¨t
(
va
, 
¨gc
);

80 
u˝
->
uc_mc⁄ãxt
.
mc_rdi
 = 
	`va_¨g
(
va
, );

81 
u˝
->
uc_mc⁄ãxt
.
mc_rsi
 = 
	`va_¨g
(
va
, );

82 
	`va_íd
(
va
);

83 
•
 = (*)
u˝
->
uc_°ack
.
ss_•
+u˝->uc_°ack.
ss_size
/();

84 
•
 -
¨gc
;

85 
•
 = (*)((
uöçå_t
)sp - (uintptr_t)sp%16);

86 *--
•
 = 0;

87 
u˝
->
uc_mc⁄ãxt
.
mc_rù
 = ()
func
;

88 
u˝
->
uc_mc⁄ãxt
.
mc_r•
 = ()
•
;

89 
	}
}

92 #ifde‡
NEEDARMMAKECONTEXT


93 
makec⁄ãxt
(
uc⁄ãxt_t
 *
uc
, (*
‚
)(), 
¨gc
, ...)

95 
i
, *
•
;

96 
va_li°
 
¨g
;

98 
•
 = (*)
uc
->
uc_°ack
.
ss_•
+uc->uc_°ack.
ss_size
/4;

99 
	`va_°¨t
(
¨g
, 
¨gc
);

101 if(
¨gc
-- > 0Ë
uc
->
uc_mc⁄ãxt
.
¨m_r0
 = 
	`va_¨g
(
¨g
, 
uöt
);

102 if(
¨gc
-- > 0Ë
uc
->
uc_mc⁄ãxt
.
¨m_r1
 = 
	`va_¨g
(
¨g
, 
uöt
);

103 if(
¨gc
-- > 0Ë
uc
->
uc_mc⁄ãxt
.
¨m_r2
 = 
	`va_¨g
(
¨g
, 
uöt
);

104 if(
¨gc
-- > 0Ë
uc
->
uc_mc⁄ãxt
.
¨m_r3
 = 
	`va_¨g
(
¨g
, 
uöt
);

106 
	`va_íd
(
¨g
);

107 
uc
->
uc_mc⁄ãxt
.
¨m_•
 = (
uöt
)
•
;

108 
uc
->
uc_mc⁄ãxt
.
¨m_Ã
 = (
uöt
)
‚
;

109 
	}
}

112 #ifde‡
NEEDSWAPCONTEXT


113 
	$sw≠c⁄ãxt
(
uc⁄ãxt_t
 *
ou˝
, c⁄° uc⁄ãxt_à*
u˝
)

115 if(
	`gëc⁄ãxt
(
ou˝
) == 0) {

116 
	`£tc⁄ãxt
(
u˝
);

120 
	}
}

	@task/fd.c

1 
	~"èskim∂.h
"

2 
	~"zmq_com∑t.h
"

3 
	~<sys/pﬁl.h
>

4 
	~<f˙é.h
>

5 
	~<°dio.h
>

6 
	~<sig«l.h
>

7 
	~<sys/sockë.h
>

9 
	~"su≥Ωﬁl.h
"

10 
	~"dbg.h
"

11 
	~"£âög.h
"

12 
	~"ªgi°î.h
"

15 
	gSTARTED_FDTASK
 = 0;

16 
Taskli°
 
	g¶ìpög
;

17 
	g¶ìpögcou¡ed
;

18 
uvl⁄g
 
n£c
();

19 
Su≥rPﬁl
 *
	gPOLL
 = 
NULL
;

20 
Task
 *
	gFDTASK
;

22 *
	gZMQ_CTX
 = 
NULL
;

24 
	gFDSTACK
= 100 * 1024;

26 #i‚de‡
MSG_NOSIGNAL


27 
	#MSG_NOSIGNAL
 0

	)

30 
	$mqöô
(
thªads
)

32 if(
ZMQ_CTX
 =
NULL
) {

33 
ZMQ_CTX
 = 
	`zmq_öô
(
thªads
);

35 if(!
ZMQ_CTX
) {

36 
	`¥ötf
("Error setting up 0mq.\n");

37 
	`exô
(1);

40 
	}
}

42 
ölöe
 
	$√xt_èsk_¶ì±ime
(
mö
)

44 
Task
 *
t
;

45 
uvl⁄g
 
now
 = 0;

46 
ms
 = 0;

48 if((
t
=
¶ìpög
.
hód
Ë=
NULL
)

49 
ms
 = -1;

51 
now
 = 
	`n£c
();

52 if(
now
 >
t
->
Æ¨mtime
) {

53 
ms
 = 0;

55 
ms
 = (
t
->
Æ¨mtime
 - 
now
) / 1000000;

58 if(
ms
 % 
mö
 != 0) ms = ms - (ms % min);

61 if(
ms
 =0Ëm†
mö
;

63  
ms
;

64 
	}
}

66 
ölöe
 
	$wake_¶ì≥rs
()

68 
Task
 *
t
;

69 
uvl⁄g
 
now
 = 
	`n£c
();

71 (
t
 =
¶ìpög
.
hód
Ë&& 
now
 >t->
Æ¨mtime
){

72 
	`dñèsk
(&
¶ìpög
, 
t
);

74 if(!
t
->
sy°em
 && --
¶ìpögcou¡ed
 =0Ë
èskcou¡
--;

76 
	`èskªady
(
t
);

78 
	}
}

80 
ölöe
 
	$fdèsk_shutdown
()

82 
i
 = 0;

84 
i
 = 0; i < 
	`Su≥rPﬁl_a˘ive_hŸ
(
POLL
); i++) {

85 
	`Su≥rPﬁl_com∑˘_down
(
POLL
, 
i
);

89 
Task
 *
t
 = 
NULL
;

90 (
t
 = 
¶ìpög
.
hód
)){

91 
	`dñèsk
(&
¶ìpög
, 
t
);

92 
	`èsksig«l
(
t
, 
	`èsk_was_sig«Àd
());

94 
	}
}

96 
	$fdèsk
(*
v
)

98 ()
v
;

100 
i
, 
ms
;

101 
PﬁlResu…
 
ªsu…
;

102 
rc
 = 0;

103 
FDTASK
 = 
	`èsk£lf
();

105 
rc
 = 
	`PﬁlResu…_öô
(
POLL
, &
ªsu…
);

106 
	`check
(
rc
 == 0, "FailedÅo initializeÅheÖollÑesult.");

108 
	`èsksy°em
();

109 
	`èsk«me
("fdtask");

113 
	`èskyõld
() > 0)

117 
î∫o
 = 0;

118 
	`èsk°©e
("poll");

120 
ms
 = 
	`√xt_èsk_¶ì±ime
(500);

122 if(
	`èsk_was_sig«Àd
()) {

123 
	`fdèsk_shutdown
();

124 
	`èsk_˛ór_sig«l
();

127 
rc
 = 
	`Su≥rPﬁl_pﬁl
(
POLL
, &
ªsu…
, 
ms
);

128 
	`check
(
rc
 != -1, "SuperPoll failure,áborting.");

130 
i
 = 0; i < 
rc
; i++) {

131 
	`èskªady
(
ªsu…
.
hôs
[
i
].
d©a
);

134 
	`wake_¶ì≥rs
();

139 
	`PﬁlResu…_˛ón
(&
ªsu…
);

140 
FDTASK
 = 
NULL
;

143 
îr‹
:

144 
	`èskexôÆl
(1);

145 
	}
}

149 
ölöe
 
	$°¨tfdèsk
()

151 if(!
STARTED_FDTASK
) {

152 
FDSTACK
 = 
	`Sëtög_gë_öt
("limits.fdtask_stack", 100 * 1024);

153 
	`log_öfo
("MAXÜimôs.fdèsk_°ack=%d", 
FDSTACK
);

155 
POLL
 = 
	`Su≥rPﬁl_¸óã
();

156 
STARTED_FDTASK
 = 1;

157 
	`èsk¸óã
(
fdèsk
, 0, 
FDSTACK
);

159 
	}
}

161 
	$èskwaôög
()

163 
	`°¨tfdèsk
();

165  
	`Su≥rPﬁl_a˘ive_cou¡
(
POLL
);

166 
	}
}

169 
uöt
 
	$èskdñay
(
uöt
 
ms
)

171 
uvl⁄g
 
whí
 = 0L;

172 
uvl⁄g
 
now
 = 0L;

173 
Task
 *
t
 = 
NULL
;

175 
	`°¨tfdèsk
();

177 
now
 = 
	`n£c
();

178 
whí
 = 
now
 + (
uvl⁄g
)
ms
 * 1000000;

179 
t
=
¶ìpög
.
hód
;Å !
NULL
 &&Å->
Æ¨mtime
 < 
whí
;ÅÒ->
√xt
)

182 if(
t
) {

183 
èskru¬ög
->
¥ev
 = 
t
->prev;

184 
èskru¬ög
->
√xt
 = 
t
;

186 
èskru¬ög
->
¥ev
 = 
¶ìpög
.
èû
;

187 
èskru¬ög
->
√xt
 = 
NULL
;

190 
t
 = 
èskru¬ög
;

191 
t
->
Æ¨mtime
 = 
whí
;

193 if(
t
->
¥ev
) {

194 
t
->
¥ev
->
√xt
 =Å;

196 
¶ìpög
.
hód
 = 
t
;

199 if(
t
->
√xt
) {

200 
t
->
√xt
->
¥ev
 =Å;

202 
¶ìpög
.
èû
 = 
t
;

205 if(!
t
->
sy°em
 && 
¶ìpögcou¡ed
++ == 0) {

206 
èskcou¡
++;

209 
	`èskswôch
();

211  (
	`n£c
(Ë- 
now
) / 1000000;

212 
	}
}

214 
	$_waô
(*
sockë
, 
fd
, 
rw
)

216 
	`°¨tfdèsk
();

217 
	`check
(
sockë
 !
NULL
 || 
fd
 >= 0, "AttemptÅo wait oná dead socket/fd: %p or %d", socket, fd);

219 
max
 = 0;

220 
hŸ_add
 = 
	`Su≥rPﬁl_a˘ive_hŸ
(
POLL
Ë< 
	`Su≥rPﬁl_max_hŸ
(POLL);

221 
was_ªgi°îed
 = 0;

223 if(
sockë
 !
NULL
) {

224 
	`èsk°©e
(
rw
 == 'r' ? "read handler" : "write handler");

226 
was_ªgi°îed
 = 
	`Regi°î_fd_exi°s
(
fd
Ë!
NULL
;

227 
	`èsk°©e
(
rw
 == 'r' ? "read fd" : "write fd");

230 
max
 = 
	`Su≥rPﬁl_add
(
POLL
, (*)
èskru¬ög
, 
sockë
, 
fd
, 
rw
, 
hŸ_add
);

231 
	`check
(
max
 !-1, "Eº‹áddög fd: %d o∏sockë: %∞tÿèsk waôÜi°.", 
fd
, 
sockë
);

233 
	`èskswôch
();

235 if(
	`èsk_was_sig«Àd
()) {

236 
	`debug
("GOT SIGNAL %d AFTER WAIT", 
èskru¬ög
->
sig«l
);

237 
	`Su≥rPﬁl_dñ
(
POLL
, 
sockë
, 
fd
, 
hŸ_add
);

239 } if(
was_ªgi°îed
 && 
	`Regi°î_fd_exi°s
(
fd
Ë=
NULL
) {

240 
	`debug
("Sockë %d wa†˛o£dá·îá waô.", 
fd
);

246 
îr‹
:

248 
	}
}

250 
	$fdwaô
(
fd
, 
rw
)

252  
	`_waô
(
NULL
, 
fd
, 
rw
);

253 
	}
}

255 *
	$mqsockë
(
ty≥
)

257 *
sock
 = 
	`zmq_sockë
(
ZMQ_CTX
, 
ty≥
);

258 
	`check
(
sock
 !
NULL
, "FailedÅo create zmq socket.");

260 #ifde‡
ZMQ_LINGER


261 
›t
 = 0;

262 
rc
 = 
	`zmq_£tsock›t
(
sock
, 
ZMQ_LINGER
, &
›t
, (opt));

263 
	`check
(
rc
 == 0, "FailedÅo setÜingerÅimeout for socket.");

266  
sock
;

268 
îr‹
:

269 if(
sock
Ë
	`zmq_˛o£
(sock);

270  
NULL
;

271 
	}
}

273 
	$mqwaô
(*
sockë
, 
rw
)

275  
	`_waô
(
sockë
, -1, 
rw
);

276 
	}
}

278 
	$mqªcv
(*
sockë
, 
zmq_msg_t
 *
msg
, 
Êags
)

280 
rc
 = -1;

283 
rc
 = 
	`zmq_msg_ªcv
(
msg
, 
sockë
, 
ZMQ_DONTWAIT
);

286 
rc
 < 0 && 
Êags
 !
ZMQ_DONTWAIT
 && 
î∫o
 =
EAGAIN
) {

287 if(
	`mqwaô
(
sockë
, 'r') == -1) {

291 
rc
 = 
	`zmq_msg_ªcv
(
msg
, 
sockë
, 
ZMQ_DONTWAIT
);

295  
rc
 < 0 ? -1 : 0;

296 
	}
}

298 
	$mq£nd
(*
sockë
, 
zmq_msg_t
 *
msg
, 
Êags
)

300 
rc
 = -1;

303 
rc
 = 
	`zmq_msg_£nd
(
msg
, 
sockë
, 
ZMQ_DONTWAIT
);

306 
rc
 < 0 && 
Êags
 !
ZMQ_DONTWAIT
 && 
î∫o
 =
EAGAIN
 ) {

307 if(
	`mqwaô
(
sockë
, 'w') == -1) {

311 
rc
 = 
	`zmq_msg_£nd
(
msg
, 
sockë
, 
ZMQ_DONTWAIT
);

315  
rc
 < 0 ? -1 : 0;

316 
	}
}

320 
	$fdªad1
(
fd
, *
buf
, 
n
)

322 
m
;

325 if(
	`fdwaô
(
fd
, 'r') == -1) {

328 } (
m
 = 
	`ªad
(
fd
, 
buf
, 
n
)Ë< 0 && 
î∫o
 =
EAGAIN
);

330  
m
;

331 
	}
}

333 
	$fdªcv1
(
fd
, *
buf
, 
n
)

335 
m
;

338 if(
	`fdwaô
(
fd
, 'r') == -1) {

341 } (
m
 = 
	`ªcv
(
fd
, 
buf
, 
n
, 
MSG_NOSIGNAL
)Ë< 0 && 
î∫o
 =
EAGAIN
);

343  
m
;

344 
	}
}

346 
	$fdªad
(
fd
, *
buf
, 
n
)

348 
m
;

350 (
m
=
	`ªad
(
fd
, 
buf
, 
n
)Ë< 0 && 
î∫o
 =
EAGAIN
) {

351 if(
	`fdwaô
(
fd
, 'r') == -1) {

355  
m
;

356 
	}
}

358 
	$fdªcv
(
fd
, *
buf
, 
n
)

360 
m
;

362 (
m
=
	`ªcv
(
fd
, 
buf
, 
n
, 
MSG_NOSIGNAL
)Ë< 0 && 
î∫o
 =
EAGAIN
) {

363 if(
	`fdwaô
(
fd
, 'r') == -1) {

367  
m
;

368 
	}
}

370 
	$fdwrôe
(
fd
, *
buf
, 
n
)

372 
m
 = 0;

373 
tŸ
 = 0;

375 
tŸ
 = 0;ÅŸ < 
n
;ÅŸ +
m
){

376 (
m
=
	`wrôe
(
fd
, (*)
buf
+
tŸ
, 
n
-tŸ)Ë< 0 && 
î∫o
 =
EAGAIN
) {

377 if(
	`fdwaô
(
fd
, 'w') == -1) {

382 if(
m
 < 0)  m;

383 if(
m
 == 0) ;

386  
tŸ
;

387 
	}
}

389 
	$fd£nd
(
fd
, *
buf
, 
n
)

391 
m
 = 0;

392 
tŸ
 = 0;

394 
tŸ
 = 0;ÅŸ < 
n
;ÅŸ +
m
){

395 (
m
=
	`£nd
(
fd
, (*)
buf
+
tŸ
, 
n
-tŸ, 
MSG_NOSIGNAL
)Ë< 0 && 
î∫o
 =
EAGAIN
) {

396 if(
	`fdwaô
(
fd
, 'w') == -1) {

401 if(
m
 < 0)  m;

402 if(
m
 == 0) ;

404  
tŸ
;

405 
	}
}

407 
	$fdnoblock
(
fd
)

409 #ifde‡
SO_NOSIGPIPE


410 
£t
 = 1;

411 
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_NOSIGPIPE
, (*)&
£t
, ());

414  
	`f˙é
(
fd
, 
F_SETFL
, f˙é(fd, 
F_GETFL
)|
O_NONBLOCK
);

415 
	}
}

417 
uvl⁄g
 
	$n£c
()

419 
timevÆ
 
tv
;

421 if(
	`gëtimeofday
(&
tv
, 0) < 0) {

425  (
uvl⁄g
)
tv
.
tv_£c
*1000*1000*1000 +Åv.
tv_u£c
*1000;

426 
	}
}

429 
	$fdshutdown
()

431 
	`Su≥rPﬁl_de°roy
(
POLL
);

432 
	}
}

	@task/net.c

1 
	~"èskim∂.h
"

2 
	~"dbg.h
"

3 
	~"£rvî.h
"

4 
	~<sys/ty≥s.h
>

5 
	~<sys/sockë.h
>

6 
	~<√tdb.h
>

7 
	~<√töë/ö.h
>

8 
	~<√töë/t˝.h
>

9 
	~<sys/pﬁl.h
>

10 
	~<°dio.h
>

11 
	~<¨∑/öë.h
>

26 
	mCB_BIND
 = 0,

27 
	mCB_CONNECT


30 
	gMAX_LISTEN_BACKLOG
 = 128;

31 
	gSET_NODELAY
 = 1;

33 
	$addr_¡›
(*
söx
, *
èrgë
, 
size
)

35 
sockaddr_ö6
 *
sö6
 = 
söx
;

36 
sockaddr_ö
 *
sö
 = 
söx
;

38 if(
sö6
->
sö6_Ámûy
 =
AF_INET6
) {

39 
	`öë_¡›
(
AF_INET6
, &
sö6
->
sö6_addr
, 
èrgë
, 
size
);

41 
	`öë_¡›
(
AF_INET
, &
sö
->
sö_addr
, 
èrgë
, 
size
);

43 
	}
}

45 
	$cb_böd
(
fd
, 
i°˝
, 
sockaddr
 *
pß
, 
size_t
 
sz
)

47 
n
 = 0;

48 
sockÀn_t
 
¢
 = (
n
);

49 
°r
[
IPADDR_SIZE
+1];

50 
rc
 = 0;

52 
	`addr_¡›
(
pß
, 
°r
, 
IPADDR_SIZE
);

53 
	`debug
("BödögÅÿ%s:%d!", 
°r
, 
	`¡ohs
(((
sockaddr_ö6
*)
pß
)->
sö6_p‹t
));

56 if(
i°˝
 && 
	`gësock›t
(
fd
, 
SOL_SOCKET
, 
SO_TYPE
, (*)&
n
, &
¢
) >= 0){

57 
n
 = 1;

58 
rc
 = 
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, (*)&
n
, Ç);

59 
	`check
(
rc
 != -1, "FailedÅo set bind socketÅo SO_REUSEADDR,Åhat's messed up.");

62 
rc
 = 
	`böd
(
fd
, 
pß
, 
sz
);

63 
	`check
(
rc
 != -1, "FailedÅo bindÅoáddress.");

65 if(
i°˝
) {

66 
rc
 = 
	`li°í
(
fd
, 
MAX_LISTEN_BACKLOG
);

67 
	`check
(
rc
 !-1, "FaûedÅÿli°í wôh %d backlog", 
MAX_LISTEN_BACKLOG
);

70  
fd
;

72 
îr‹
:

73 
	`èsk°©e
("bind failed");

74 
	`fd˛o£
(
fd
);

76 
	}
}

78 
	$cb_c⁄√˘
(
fd
, 
i°˝
, 
sockaddr
 *
pß
, 
sockÀn_t
 
¢
)

80 
n
 = 0;

81 
rc
 = 0;

84 if(!
i°˝
) {

85 
n
 = 1;

86 
rc
 = 
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_BROADCAST
, &
n
, Ç);

87 
	`check
(
rc
 != -1, "FailedÅo set SO_BROADCAST on UDP socket.");

91 
rc
 = 
	`c⁄√˘
(
fd
, 
pß
, 
¢
);

92 
	`check
(
rc
 !-1 || 
î∫o
 =
EINPROGRESS
, "Connect failed.");

95 
rc
 = 
	`fdwaô
(
fd
, 'w');

96 
	`check
(
rc
 != -1, "Failed waiting onÇon-blocking connect.");

98 
¢
 =  *
pß
;

99 
rc
 = 
	`gë≥î«me
(
fd
, 
pß
, &
¢
);

100 
	`check_debug
(
rc
 != -1, "Connection failed,ÉitherÖort isn't open orÖeername isn'távailable.");

102  
fd
;

105 
îr‹
:

107 
¢
 =  
n
;

108 
	`gësock›t
(
fd
, 
SOL_SOCKET
, 
SO_ERROR
, (*)&
n
, &
¢
);

109 
î∫o
 = 
n
 =0 ? 
ECONNREFUSED
 :Ç;

111 
	`fd˛o£
(
fd
);

112 
	`èsk°©e
("connect failed");

115 
	}
}

118 
	$√tgësockë
(
i°˝
, *
£rvî
, 
p‹t
,

119 
is_a˘ive_›í
)

121 
rc
 = 0;

122 
fd
 = -1;

123 
¥Ÿo
 = 
i°˝
 ? 
SOCK_STREAM
 : 
SOCK_DGRAM
;

124 
°r
[
IPADDR_SIZE
+1];

125 
addröfo
 *
ªs
 = 
NULL
, *
ªsßve
 = NULL;

126 
∑ssive
 = 
is_a˘ive_›í
 && 
£rvî
 =
NULL
 ? 0 : 
AI_PASSIVE
;

127 
numîic
 = 
is_a˘ive_›í
 ? 0 : 
AI_NUMERICHOST
;

129 
addröfo
 
höts
 = {

130 .
ai_sockty≥
 = 
¥Ÿo
,

131 .
ai_Êags
 = 
numîic
 | 
∑ssive


135 
£rvi˚
[6] = {0};

137 
	`check
(
p‹t
 >= 0 &&Öort <= 65535, "Port %d is outsidállowedÑange.",Öort);

139 
	`debug
("AttemptingÇetgetsocket: %d, %s:%d,áctive: %d",

140 
i°˝
, 
£rvî
, 
p‹t
,

141 
is_a˘ive_›í
);

144 
	`¢¥ötf
(
£rvi˚
, (£rvi˚), "%d", 
p‹t
);

145 
£rvi˚
[(service) - 1] = '\0';

147 
rc
 = 
	`gëaddröfo
(
£rvî
, 
£rvi˚
, &
höts
, &
ªs
);

148 
	`check
(
rc
 !-1, "GëáddröfÿÁûed f‹ sîvî: %s.", 
£rvî
);

150 
ªsßve
 = 
ªs
;

152 
	`debug
("EnumeratingÅargets...");

153 ; 
ªs
;Ñe†ªs->
ai_√xt
) {

154 
	`addr_¡›
(
ªs
->
ai_addr
, 
°r
, 
IPADDR_SIZE
);

155 
	`debug
("TryögÅ¨gë: %s:%d,á‡%d,ÖrŸ %d", 
°r
,

156 
	`¡ohs
(((
sockaddr_ö6
*)(
ªs
->
ai_addr
))->
sö6_p‹t
),Ñes->
ai_Ámûy
,

157 
ªs
->
ai_¥Ÿocﬁ
);

159 
fd
 = 
	`sockë
(
ªs
->
ai_Ámûy
,

160 
¥Ÿo
,

161 
ªs
->
ai_¥Ÿocﬁ
);

163 if(
fd
 < 0) {

164 
î∫o
) {

165 
EAFNOSUPPORT
:

167 
EPROTONOSUPPORT
:

169 
	`debug
("Famûy %dÇŸ suµ‹ãd", 
ªs
->
ai_Ámûy
);

172 
	`£¡öñ
("Socket failureÉnumeratingÖossibleáddresses.");

175 
	`fdnoblock
(
fd
);

179 if(
is_a˘ive_›í
) {

180 
fd
 = 
	`cb_c⁄√˘
(fd, 
i°˝
, (*)
ªs
->
ai_addr
,Ñes->
ai_addæí
);

182 
fd
 = 
	`cb_böd
(fd, 
i°˝
, (*Ë
ªs
->
ai_addr
,Ñes->
ai_addæí
);

185 if(
fd
 >= 0) {

191 if(
ªsßve
) {

192 
	`‰ìaddröfo
(
ªsßve
);

195  
fd
;

197 
îr‹
:

198 if(
ªsßve
) {

199 
	`‰ìaddröfo
(
ªsßve
);

202 
	}
}

204 
	$√è¬oun˚
(
i°˝
, *
£rvî
, 
p‹t
)

206  
	`√tgësockë
(
i°˝
, 
£rvî
, 
p‹t
, 
CB_BIND
);

207 
	}
}

209 
	$√èc˚±
(
fd
, *
£rvî
, *
p‹t
)

211 
cfd
 = 0;

212 
›t
 = 0;

216 
sockaddr_ö6
 
ùv6
;

217 
sockaddr_ö
 
ùv4
;

218 } 
addr_c⁄vîãr
;

220 
sockÀn_t
 
Àn
 = (
addr_c⁄vîãr
);

221 
rc
 = 0;

223 
cfd
 = 
	`ac˚±
(
fd
, (*)&
addr_c⁄vîãr
, &
Àn
);

225 if(
cfd
 == -1) {

226 if(
î∫o
 =
EAGAIN
 ||Éºnÿ=
EWOULDBLOCK
) {

227 
rc
 = 
	`fdwaô
(
fd
, 'r');

228 
	`check
(
rc
 != -1, "Failed waiting onÇon-blockáccept.");

230 
cfd
 = 
	`ac˚±
(
fd
, (*)&
addr_c⁄vîãr
, &
Àn
);

231 
	`check
(
cfd
 != -1, "FailedÅoácceptáfter doingáÖoll onÅhe socket.");

233 
	`£¡öñ
("Faûed cÆlögác˚± o¿sockëÅh© wa†ªady: %d, %d", 
cfd
, 
î∫o
 =
EAGAIN
);

237 if(
£rvî
) {

238 if(
addr_c⁄vîãr
.
ùv6
.
sö6_Ámûy
 =
AF_INET
) {

239 
	`check
(
	`öë_¡›
(
addr_c⁄vîãr
.
ùv4
.
sö_Ámûy
, &addr_c⁄vîãr.ùv4.
sö_addr
, 
£rvî
, 
IPADDR_SIZE
Ë!
NULL
,

242 
	`check
(
	`öë_¡›
(
addr_c⁄vîãr
.
ùv6
.
sö6_Ámûy
, &addr_c⁄vîãr.ùv6.
sö6_addr
, 
£rvî
, 
IPADDR_SIZE
Ë!
NULL
,

247 if(
p‹t
) {

248 if(
addr_c⁄vîãr
.
ùv6
.
sö6_Ámûy
 =
AF_INET
) {

249 *
p‹t
 = 
	`¡ohs
(
addr_c⁄vîãr
.
ùv4
.
sö_p‹t
);

251 *
p‹t
 = 
	`¡ohs
(
addr_c⁄vîãr
.
ùv6
.
sö6_p‹t
);

255 
	`fdnoblock
(
cfd
);

257 if(
SET_NODELAY
) {

258 
›t
 = 1;

259 
	`£tsock›t
(
cfd
, 
IPPROTO_TCP
, 
TCP_NODELAY
, (*)&
›t
,  opt);

262 
	`èsk°©e
("netaccept succeeded");

263  
cfd
;

265 
îr‹
:

266 
	`èsk°©e
("accept failed");

268 
	}
}

271 
	$√tdül
(
i°˝
, *
£rvî
, 
p‹t
)

273  
	`√tgësockë
(
i°˝
, 
£rvî
, 
p‹t
, 
CB_CONNECT
);

274 
	}
}

	@task/power-ucontext.h

1 
	#£tc⁄ãxt
(
u
Ë
	`_£tmc⁄ãxt
(&(u)->
mc
)

	)

2 
	#gëc⁄ãxt
(
u
Ë
	`_gëmc⁄ãxt
(&(u)->
mc
)

	)

3 
mc⁄ãxt
 
	tmc⁄ãxt_t
;

4 
uc⁄ãxt
 
	tuc⁄ãxt_t
;

5 
	smc⁄ãxt


7 
ul⁄g
 
	mpc
;

8 
ul⁄g
 
	m¸
;

9 
ul⁄g
 
	m˘r
;

10 
ul⁄g
 
	mxî
;

11 
ul⁄g
 
	m•
;

12 
ul⁄g
 
	mtoc
;

13 
ul⁄g
 
	mr3
;

14 
ul⁄g
 
	mg¥
[19];

23 
	suc⁄ãxt


26 *
	mss_•
;

27 
uöt
 
	mss_size
;

28 } 
	muc_°ack
;

29 
sig£t_t
 
	muc_sigmask
;

30 
mc⁄ãxt_t
 
	mmc
;

33 
makec⁄ãxt
(
uc⁄ãxt_t
*, (*)(), , ...);

34 
	`sw≠c⁄ãxt
(
uc⁄ãxt_t
*, const ucontext_t*);

35 
	`_gëmc⁄ãxt
(
mc⁄ãxt_t
*);

36 
	`_£tmc⁄ãxt
(c⁄° 
mc⁄ãxt_t
*);

	@task/qlock.c

1 
	~"èskim∂.h
"

2 
	~"dbg.h
"

7 
	$_qlock
(
QLock
 *
l
, 
block
)

9 if(
l
->
ow√r
 =
NULL
){

10 
l
->
ow√r
 = 
èskru¬ög
;

14 if(!
block
) {

18 
	`addèsk
(&
l
->
waôög
, 
èskru¬ög
);

19 
	`èsk°©e
("qlock");

20 
	`èskswôch
();

22 
	`as£π
(
l
->
ow√r
 =
èskru¬ög
 && "qlockÉrror, owner isÇotÅheÑunningÅask");

25 
	}
}

27 
	$qlock
(
QLock
 *
l
)

29 
	`_qlock
(
l
, 1);

30 
	}
}

32 
	$ˇnqlock
(
QLock
 *
l
)

34  
	`_qlock
(
l
, 0);

35 
	}
}

37 
	$qu∆ock
(
QLock
 *
l
)

39 
Task
 *
ªady
 = 
NULL
;

41 
	`as£π
(
l
->
ow√r
 != 0 && "qunlock: owner == 0\n");

43 if((
l
->
ow√r
 = 
ªady
 =Ü->
waôög
.
hód
Ë!
NULL
) {

44 
	`dñèsk
(&
l
->
waôög
, 
ªady
);

45 
	`èskªady
(
ªady
);

47 
	}
}

49 
	$_æock
(
RWLock
 *
l
, 
block
)

51 if(
l
->
wrôî
 =
NULL
 &&Ü->
wwaôög
.
hód
 == NULL){

52 
l
->
ªadîs
++;

56 if(!
block
) {

60 
	`addèsk
(&
l
->
rwaôög
, 
èskru¬ög
);

61 
	`èsk°©e
("rlock");

62 
	`èskswôch
();

65 
	}
}

67 
	$æock
(
RWLock
 *
l
)

69 
	`_æock
(
l
, 1);

70 
	}
}

72 
	$ˇƒlock
(
RWLock
 *
l
)

74  
	`_æock
(
l
, 0);

75 
	}
}

77 
	$_wlock
(
RWLock
 *
l
, 
block
)

79 if(
l
->
wrôî
 =
NULL
 &&Ü->
ªadîs
 == 0) {

80 
l
->
wrôî
 = 
èskru¬ög
;

84 if(!
block
) {

88 
	`addèsk
(&
l
->
wwaôög
, 
èskru¬ög
);

89 
	`èsk°©e
("wlock");

90 
	`èskswôch
();

92 
	}
}

94 
	$wlock
(
RWLock
 *
l
)

96 
	`_wlock
(
l
, 1);

97 
	}
}

99 
	$ˇnwlock
(
RWLock
 *
l
)

101  
	`_wlock
(
l
, 0);

102 
	}
}

104 
	$ru∆ock
(
RWLock
 *
l
)

106 
Task
 *
t
 = 
NULL
;

108 if(--
l
->
ªadîs
 =0 && (
t
 =Ü->
wwaôög
.
hód
Ë!
NULL
) {

109 
	`dñèsk
(&
l
->
wwaôög
, 
t
);

110 
l
->
wrôî
 = 
t
;

111 
	`èskªady
(
t
);

113 
	}
}

115 
	$wu∆ock
(
RWLock
 *
l
)

117 
Task
 *
t
 = 
NULL
;

119 
	`as£π
(
l
->
wrôî
 !
NULL
 && "wunlock:ÇotÜocked.");

121 
l
->
wrôî
 = 
NULL
;

122 
	`as£π
(
l
->
ªadîs
 == 0 && "wunlock:Ñeaders is wrong.");

124 (
t
 = 
l
->
rwaôög
.
hód
Ë!
NULL
){

125 
	`dñèsk
(&
l
->
rwaôög
, 
t
);

126 
l
->
ªadîs
++;

127 
	`èskªady
(
t
);

130 if(
l
->
ªadîs
 =0 && (
t
 =Ü->
wwaôög
.
hód
Ë!
NULL
){

131 
	`dñèsk
(&
l
->
wwaôög
, 
t
);

132 
l
->
wrôî
 = 
t
;

133 
	`èskªady
(
t
);

135 
	}
}

	@task/rendez.c

1 
	~"èskim∂.h
"

6 
	$èsk¶ìp
(
Rídez
 *
r
)

8 
	`addèsk
(&
r
->
waôög
, 
èskru¬ög
);

10 if(
r
->
l
) {

11 
	`qu∆ock
(
r
->
l
);

14 
	`èsk°©e
("sleep");

15 
	`èskswôch
();

17 if(
r
->
l
) {

18 
	`qlock
(
r
->
l
);

20 
	}
}

22 
	$_èskwakeup
(
Rídez
 *
r
, 
Æl
)

24 
i
;

25 
Task
 *
t
;

27 
i
=0;; i++){

28 if(
i
==1 && !
Æl
) {

32 if((
t
 = 
r
->
waôög
.
hód
Ë=
NULL
) {

36 
	`dñèsk
(&
r
->
waôög
, 
t
);

37 
	`èskªady
(
t
);

40  
i
;

41 
	}
}

43 
	$èskwakeup
(
Rídez
 *
r
)

45  
	`_èskwakeup
(
r
, 0);

46 
	}
}

48 
	$èskwakeu∑Œ
(
Rídez
 *
r
)

50  
	`_èskwakeup
(
r
, 1);

51 
	}
}

53 
	$èskb¨rõr
(
Rídez
 *
r
)

55 
n
 = 
	`èskwakeu∑Œ
(
r
);

57 if(!
n
) {

58 
	`èsk¶ìp
(
r
);

61  
n
;

62 
	}
}

	@task/task.c

3 
	~"èskim∂.h
"

4 
	~<f˙é.h
>

5 
	~<°dio.h
>

6 
	~"dbg.h
"

7 
	~"äë°rögs.h
"

8 
	~"äë°rögs_im∂.h
"

10 
	gèskcou¡
;

11 
	gèsknswôch
;

12 
	gèskexôvÆ
;

13 
Task
 *
	gèskru¬ög
;

15 
C⁄ãxt
 
	gèskschedc⁄ãxt
;

16 
Taskli°
 
	gèskrunqueue
;

19 
	mTASK_LIST_GROWTH
=256

22 
Task
 **
	gÆ…ask
;

23 
	g«Œèsk
;

25 
c⁄ãxtswôch
(
C⁄ãxt
 *
‰om
, C⁄ãxà*
to
);

27 
	$èsk°¨t
(
uöt
 
y
, uöà
x
)

29 
Task
 *
t
;

30 
ul⁄g
 
z
;

32 
z
 = 
x
<<16;

33 
z
 <<= 16;

34 
z
 |
y
;

35 
t
 = (
Task
*)
z
;

37 
t
->
	`°¨t‚
—->
°¨èrg
);

38 
	`èskexô
(0);

39 
	}
}

41 
	gèskidgí
;

43 
Task
* 
èskÆloc
((*
‚
)(*), *
¨g
, 
uöt
 
°ack
)

45 
Task
 *
t
 = 
NULL
;

46 
sig£t_t
 
zîo
;

47 
uöt
 
x
 = 0;

48 
uöt
 
y
 = 0;

49 
ul⁄g
 
z
 = 0L;

52 
t
 = 
	`ˇŒoc
((
Task
Ë+ 
°ack
, 1);

53 
	`check_mem
(
t
);

55 
t
->
°k
 = (
uch¨
*)(t+1);

56 
t
->
°ksize
 = 
°ack
;

57 
t
->
id
 = ++
èskidgí
;

58 
t
->
°¨t‚
 = 
‚
;

59 
t
->
°¨èrg
 = 
¨g
;

62 
	`sigem±y£t
(&
zîo
);

63 
	`sig¥ocmask
(
SIG_BLOCK
, &
zîo
, &
t
->
c⁄ãxt
.
uc
.
uc_sigmask
);

66 
	`check
(
	`gëc⁄ãxt
(&
t
->
c⁄ãxt
.
uc
) >= 0, "getcontext failed.");

70 
t
->
c⁄ãxt
.
uc
.
uc_°ack
.
ss_•
 = (*È->
°k
+8;

71 
t
->
c⁄ãxt
.
uc
.
uc_°ack
.
ss_size
 =Å->
°ksize
-64;

73 #i‡
	`deföed
(
__sun__
Ë&& !deföed(
__MAKECONTEXT_V2_SOURCE
)

76 
t
->
c⁄ãxt
.
uc
.
uc_°ack
.
ss_•
 =

77 (*)
t
->
c⁄ãxt
.
uc
.
uc_°ack
.
ss_•


78 +
t
->
c⁄ãxt
.
uc
.
uc_°ack
.
ss_size
;

86 
z
 = (
ul⁄g
)
t
;

87 
y
 = 
z
;

88 
z
 >>= 16;

89 
x
 = 
z
>>16;

91 
	`makec⁄ãxt
(&
t
->
c⁄ãxt
.
uc
, ((*)())
èsk°¨t
, 2, 
y
, 
x
);

93  
t
;

95 
îr‹
:

96 
	`ab‹t
();

97 
	}
}

99 
èsk¸óã
((*
‚
)(*), *
¨g
, 
uöt
 
°ack
)

101 
Task
 *
t
 = 
	`èskÆloc
(
‚
, 
¨g
, 
°ack
);

102 
id
 = 
t
->id;

104 
èskcou¡
++;

106 if(
«Œèsk
 % 
TASK_LIST_GROWTH
 == 0){

107 
Æ…ask
 = 
	`ªÆloc
◊Œèsk, (
«Œèsk
 + 
TASK_LIST_GROWTH
)*(alltask[0]));

108 
	`check_mem
(
Æ…ask
);

111 
t
->
Æ…ask¶Ÿ
 = 
«Œèsk
;

112 
Æ…ask
[
«Œèsk
++] = 
t
;

113 
	`èskªady
(
t
);

115  
id
;

117 
îr‹
:

119 
	}
}

121 
	$èsksy°em
()

123 if(!
èskru¬ög
->
sy°em
) {

124 
èskru¬ög
->
sy°em
 = 1;

125 --
èskcou¡
;

127 
	}
}

129 
	$èskswôch
()

131 
	`√ed°ack
(0);

132 
	`c⁄ãxtswôch
(&
èskru¬ög
->
c⁄ãxt
, &
èskschedc⁄ãxt
);

133 
	}
}

135 
	$èskªady
(
Task
 *
t
)

137 
t
->
ªady
 = 1;

138 
	`addèsk
(&
èskrunqueue
, 
t
);

139 
	}
}

141 
	$èskyõld
()

143 
n
 = 
èsknswôch
;

144 
	`èskªady
(
èskru¬ög
);

145 
	`èsk°©e
("yield");

146 
	`èskswôch
();

148  
èsknswôch
 - 
n
 - 1;

149 
	}
}

151 
	$™yªady
()

153  
èskrunqueue
.
hód
 !
NULL
;

154 
	}
}

156 
	$èskexôÆl
(
vÆ
)

158 
	`exô
(
vÆ
);

159 
	}
}

161 
	$èskexô
(
vÆ
)

163 
èskexôvÆ
 = 
vÆ
;

164 
èskru¬ög
->
exôög
 = 1;

165 
	`èskswôch
();

166 
	}
}

168 
	$c⁄ãxtswôch
(
C⁄ãxt
 *
‰om
, C⁄ãxà*
to
)

170 if(
	`sw≠c⁄ãxt
(&
‰om
->
uc
, &
to
->uc) < 0){

171 
	`log_îr
("swapcontext failed.");

172 
	`ab‹t
();

174 
	}
}

176 
	$èsk§u¬ög
()

178 
i
 = 0;

180 
	`debug
("Task†ru¬ögÇÆ…ask=%d,Åaskcou¡=%d", 
«Œèsk
, 
èskcou¡
);

181 
i
 = 0; i < 
«Œèsk
; i++) {

182 
	`debug
("RUNNING id=%d:%p", 
Æ…ask
[
i
]->
id
,álltask[i]);

185  
«Œèsk
;

186 
	}
}

189 
	$èskscheduÀr
()

191 
i
 = 0;

192 
Task
 *
t
 = 
NULL
;

195 if(
èskcou¡
 == 0) {

196 
	`exô
(
èskexôvÆ
);

199 
t
 = 
èskrunqueue
.
hód
;

201 if(
t
 =
NULL
) {

202 
	`debug
("NŸhögÑu¬abÀ, hîe'†thêèsk†th©áª sèŒed (%d,%d):", 
«Œèsk
, 
èskcou¡
);

203 
i
 = 0; i < 
«Œèsk
; i++) {

204 
	`debug
("STALLED id=%d:%p", 
Æ…ask
[
i
]->
id
,álltask[i]);

208 
	`check
(
t
 !
NULL
, "Nÿru¬abÀÅasks, %dÅask†°ÆÀd", 
èskcou¡
);

210 
	`dñèsk
(&
èskrunqueue
, 
t
);

212 
t
->
ªady
 = 0;

213 
èskru¬ög
 = 
t
;

214 
èsknswôch
++;

216 
	`c⁄ãxtswôch
(&
èskschedc⁄ãxt
, &
t
->
c⁄ãxt
);

217 
èskru¬ög
 = 
NULL
;

219 if(
t
->
exôög
){

220 if(!
t
->
sy°em
) {

221 
èskcou¡
--;

224 
i
 = 
t
->
Æ…ask¶Ÿ
;

225 
Æ…ask
[
i
] =áŒèsk[--
«Œèsk
];

226 
Æ…ask
[
i
]->
Æ…ask¶Ÿ
 = i;

227 
	`debug
("FREEING TASK: %p", 
t
);

228 
	`‰ì
(
t
);

232 
îr‹
:

233 
	`ab‹t
();

234 
	}
}

239 
	$èsk«me
(*
«me
)

241 
Àn
 = 
	`°æí
(
«me
);

242 
	`mem˝y
(
èskru¬ög
->
«me
,Çame, 
Àn
 < 
MAX_STATE_LENGTH
 ?Üen : MAX_STATE_LENGTH);

243 
èskru¬ög
->
«me
[
Àn
] = '\0';

244 
	}
}

246 * 
	$èskgë«me
()

248  
èskru¬ög
->
«me
;

249 
	}
}

252 
	$èsk°©e
(*
°©e
)

254 
Àn
 = 
	`°æí
(
°©e
);

255 
	`mem˝y
(
èskru¬ög
->
°©e
, sèã, 
Àn
 < 
MAX_STATE_LENGTH
 ?Üen : MAX_STATE_LENGTH);

256 
èskru¬ög
->
°©e
[
Àn
] = '\0';

257 
	}
}

259 * 
	$èskgë°©e
()

261  
èskru¬ög
->
°©e
;

262 
	}
}

264 
	$√ed°ack
(
n
)

266 
Task
 *
t
 = 
èskru¬ög
;

268 if((*)&
t
 <(*È->
°k


269 || (*)&
t
 - (*È->
°k
 < 256+
n
) {

270 
	`Ârötf
(
°dîr
, "èsk sèck ovîÊow: &t=%∞t°k=%∞n=%d\n", &
t
,Å->
°k
, 256+
n
);

272 
	}
}

274 
ègb°rög
 
	gTASKINFO_HEADERS
 = 
bsSètic
("38:2:id,6:system,4:name,5:state,6:status,]");

276 
äs_vÆue_t
 *
	$èskgëöfo
()

278 
i
 = 0;

279 
Task
 *
t
 = 
NULL
;

280 
äs_vÆue_t
 *
rows
 = 
	`äs_√w_li°
();

281 * 
°©us
 = 
NULL
;

283 
i
 = 0; i < 
«Œèsk
; i++)

285 
t
 = 
Æ…ask
[
i
];

287 if(
t
 =
èskru¬ög
) {

288 
°©us
 = "running";

289 } if(
t
->
ªady
) {

290 
°©us
 = "ready";

291 } if(
t
->
exôög
) {

292 
°©us
 = "exiting";

294 
°©us
 = "idle";

297 
äs_vÆue_t
 *
ñ
 = 
	`äs_√w_li°
();

298 
	`äs_add_to_li°
(
ñ
, 
	`äs_√w_öãgî
(
t
->
id
));

299 
	`äs_add_to_li°
(
ñ
, 
t
->
sy°em
 ? 
	`äs_gë_åue
(Ë: 
	`äs_gë_Ál£
());

300 
	`äs_add_to_li°
(
ñ
, 
	`äs_∑r£_°rög
(
t
->
«me
, 
	`°æí
(t->name)));

301 
	`äs_add_to_li°
(
ñ
, 
	`äs_∑r£_°rög
(
t
->
°©e
, 
	`°æí
(t->state)));

302 
	`äs_add_to_li°
(
ñ
, 
	`äs_∑r£_°rög
(
°©us
, 
	`°æí
(status)));

304 
	`äs_add_to_li°
(
rows
, 
ñ
);

307  
	`äs_°™d¨d_èbÀ
(&
TASKINFO_HEADERS
, 
rows
);

308 
	}
}

314 
	gèsk¨gc
;

315 **
	gèsk¨gv
;

316 
	gMAINSTACKSIZE
 = 96 * 1024;

318 
	$èskmaö°¨t
(*
v
)

320 ()
v
;

321 
	`èsk«me
("taskmain");

322 
	`èskmaö
(
èsk¨gc
, 
èsk¨gv
);

323 
	}
}

325 
	$maö
(
¨gc
, **
¨gv
)

327 
èsk¨gc
 = 
¨gc
;

328 
èsk¨gv
 = 
¨gv
;

330 
	`èsk¸óã
(
èskmaö°¨t
, 
NULL
, 
MAINSTACKSIZE
);

331 
	`èskscheduÀr
();

333 
	`Ârötf
(
°dîr
, "taskschedulerÑeturned in main!\n");

334 
	`ab‹t
();

337 
	}
}

342 
	$addèsk
(
Taskli°
 *
l
, 
Task
 *
t
)

344 if(
t
->
¥ev
 !
NULL
 ||Å->
√xt
 !NULL || 
l
->
hód
 ==Å) {

345 
	`log_îr
("Task i†Æªadyádded,ÑefusögÅÿdÿôágaö: %p, %p, %p=%p", 
t
->
¥ev
,Å->
√xt
, 
l
->
hód
,Å);

349 #i‚de‡
NDEBUG


350 
Task
 *
ã°
 = 
NULL
;

352 
ã°
 = 
èskrunqueue
.
hód
;Åe° !
NULL
;Åe° =Åe°->
√xt
)

354 
	`as£π
(
ã°
 !
t
 && "Fucking doubleáddtask mother fucker!");

358 if(
l
->
èû
) {

359 
l
->
èû
->
√xt
 = 
t
;

360 
t
->
¥ev
 = 
l
->
èû
;

362 
l
->
hód
 = 
t
;

363 
t
->
¥ev
 = 
NULL
;

366 
l
->
èû
 = 
t
;

367 
t
->
√xt
 = 
NULL
;

368 
	}
}

370 
	$dñèsk
(
Taskli°
 *
l
, 
Task
 *
t
)

372 if(
t
->
¥ev
) {

373 
t
->
¥ev
->
√xt
 =Å->next;

375 
l
->
hód
 = 
t
->
√xt
;

378 if(
t
->
√xt
) {

379 
t
->
√xt
->
¥ev
 =Å->prev;

381 
l
->
èû
 = 
t
->
¥ev
;

384 
t
->
√xt
 = 
NULL
;

385 
t
->
¥ev
 = 
NULL
;

386 
	}
}

388 
	$èskid
()

390  
èskru¬ög
->
id
;

391 
	}
}

394 
Task
 *
	$èsk£lf
()

396  
èskru¬ög
;

397 
	}
}

399 
	$èskgëid
(
Task
 *
èsk
)

401  
èsk
->
id
;

402 
	}
}

404 
	$èsksig«l
(
Task
 *
èsk
, 
sig«l
)

406 
	`check
(
èsk
 !
NULL
, "Task was NULL,Åhat'sÑeally bad.");

407 
	`check
(
sig«l
 > 0, "Signal hasÅo be greaterÅhan 0.");

409 if(
èsk
->
sig«l
 == 0) {

410 
èsk
->
sig«l
 = signal;

411 
	`èskªady
(
èsk
);

413 
	`log_öfo
("Task %∞i†Æªady sig«Àd wôh %d", 
èsk
,Åask->
sig«l
);

417 
îr‹
:

419 
	}
}

421 
	$èskÆlsig«l
(
sig«l
)

423 
	`debug
("Sídög %dÅÿÆ»èsks.", 
sig«l
);

424 
i
 = 0;

425 
Task
 *
t
 = 
NULL
;

426 
	`check
(
sig«l
 > 0, "Signal must be greaterÅhan 0.");

428 if(
FDTASK
 !
NULL
) {

429 
	`debug
("MAKE THE FDTASK SIGNAL FIRST");

430 
FDTASK
->
sig«l
 = signal;

431 
	`èskdñay
(1);

432 
	`debug
("BACK NOW CLEAR THE REST.");

436 
t
 = 
èskrunqueue
.
hód
;Å !
NULL
 ;Å =Å->
√xt
) {

437 if(
t
 !
FDTASK
 && !t->
exôög
 &&Å->
sig«l
 == 0) {

438 
	`debug
("SIGNAL RUNNING: id=%d, %p", 
t
->
id
,Å);

439 
t
->
sig«l
 = signal;

444 
i
 = 0; i < 
«Œèsk
; i++)

446 
t
 = 
Æ…ask
[
i
];

448 if(
t
 !
NULL
 && !t->
exôög
 &&Å !
èskru¬ög
 &&Å->
sig«l
 =0 &&Å->
√xt
 =NULL &&Å->
¥ev
 == NULL) {

449 
	`debug
("SIGNAL IDLE: id=%d, %p", 
t
->
id
,Å);

450 
t
->
sig«l
 = signal;

451 
	`èskªady
(
t
);

455 (
i
 = 
	`èskyõld
()) > 0) {

460 
îr‹
:

462 
	}
}

464 
	$èsk_was_sig«Àd
()

466  
èskru¬ög
->
sig«l
;

467 
	}
}

469 
	$èsk_˛ór_sig«l
()

471 
èskru¬ög
->
sig«l
 = 0;

472 
	}
}

	@task/task.h

3 #i‚de‡
_TASK_H_


4 
	#_TASK_H_
 1

	)

6 #ifde‡
__˝lu•lus


10 
	~<°d¨g.h
>

11 
	~<uni°d.h
>

12 
	~<öây≥s.h
>

13 
	~"zmq_com∑t.h
"

15 
äs_vÆue_t
;

21 
Task
 
	tTask
;

22 
Taskli°
 
	tTaskli°
;

24 
	#MAX_STATE_LENGTH
 30

	)

26 
™yªady
();

27 
èsk¸óã
((*
f
)(*
¨g
), *¨g, 
°acksize
);

28 
èskexô
();

29 
èskexôÆl
();

30 
èskmaö
(
¨gc
, *
¨gv
[]);

31 
èskyõld
();

32 ** 
èskd©a
();

33 
√ed°ack
();

34 
èsk«me
(*);

35 
èsk°©e
(*);

36 * 
èskgë«me
();

37 * 
èskgë°©e
();

38 
äs_vÆue_t
 *
èskgëöfo
();

39 
èsksy°em
();

40 
èskdñay
();

41 
èskid
();

42 
èskgëid
(
Task
 *
èsk
);

43 
èskwaôög
();

44 
èsk§u¬ög
();

45 
èskªady
(
Task
 *
t
);

46 
Task
 *
èsk£lf
();

47 
èskswôch
();

49 
	sTaskli°


51 
Task
 *
hód
;

52 
Task
 *
èû
;

57 
èsksig«l
(
Task
 *
èsk
, 
sig«l
);

58 
èsk_was_sig«Àd
();

59 
èsk_˛ór_sig«l
();

60 
èskÆlsig«l
(
sig«l
);

65 
QLock
 
	tQLock
;

66 
	sQLock


68 
Task
 *
ow√r
;

69 
Taskli°
 
waôög
;

72 
qlock
(
QLock
*);

73 
ˇnqlock
(
QLock
*);

74 
qu∆ock
(
QLock
*);

79 
RWLock
 
	tRWLock
;

80 
	sRWLock


82 
ªadîs
;

83 
Task
 *
wrôî
;

84 
Taskli°
 
rwaôög
;

85 
Taskli°
 
wwaôög
;

88 
æock
(
RWLock
*);

89 
ˇƒlock
(
RWLock
*);

90 
ru∆ock
(
RWLock
*);

92 
wlock
(
RWLock
*);

93 
ˇnwlock
(
RWLock
*);

94 
wu∆ock
(
RWLock
*);

99 
Rídez
 
	tRídez
;

101 
	sRídez


103 
QLock
 *
l
;

104 
Taskli°
 
waôög
;

107 
èsk¶ìp
(
Rídez
*);

108 
èskwakeup
(
Rídez
*);

109 
èskwakeu∑Œ
(
Rídez
*);

110 
èskb¨rõr
(
Rídez
 *
r
);

117 
fdªad
(, *, );

118 
fdªad1
(, *, );

119 
fdªcv1
(, *, );

120 
fdwrôe
(, *, );

121 
fd£nd
(, *, );

122 
fdªcv
(, *, );

123 
fdwaô
(, );

124 
fdnoblock
();

125 
fdshutdown
();

127 
Task
 *
FDTASK
;

129 
	#fd˛o£
(
fd
Ëif(fd >0Ë
	`˛o£
(fd)

	)

131 
fdèsk
(*);

136 
mqöô
(
thªads
);

137 *
mqsockë
(
ty≥
);

138 
mqwaô
(*
sockë
, 
rw
);

139 
mqªcv
(*
sockë
, 
zmq_msg_t
 *
msg
, 
Êags
);

140 
mq£nd
(*
sockë
, 
zmq_msg_t
 *
msg
, 
Êags
);

142 *
ZMQ_CTX
;

149 
	gUDP
 = 0,

150 
	gTCP
 = 1,

153 
√è¬oun˚
(, *, );

154 
√èc˚±
(, *, *);

155 
√tdül
(, *, );

156 
√éookup
(*, 
uöt32_t
*);

158 #ifde‡
__˝lu•lus


	@task/taskimpl.h

3 #i‡
deföed
(
__sun__
)

4 
	#__EXTENSIONS__
 1

	)

5 #i‡
deföed
(
__SunOS5_6__
Ë|| deföed(
__SunOS5_7__
Ë|| deföed(
__SunOS5_8__
)

8 
	#__MAKECONTEXT_V2_SOURCE
 1

	)

12 
	#USE_UCONTEXT
 1

	)

14 #i‡
deföed
(
__O≥nBSD__
)

15 #unde‡
USE_UCONTEXT


16 
	#USE_UCONTEXT
 0

	)

19 #i‡
deföed
(
__APPLE__
)

20 
	~<AvaûabûôyMa¸os.h
>

21 #i‡
deföed
(
MAC_OS_X_VERSION_10_5
)

22 #unde‡
USE_UCONTEXT


23 
	#USE_UCONTEXT
 0

	)

27 
	~<î∫o.h
>

28 
	~<°dlib.h
>

29 
	~<uni°d.h
>

30 
	~<°rög.h
>

31 
	~<as£π.h
>

32 
	~<time.h
>

33 
	~<sys/time.h
>

34 
	~<sys/ty≥s.h
>

35 
	~<sys/waô.h
>

36 
	~<sched.h
>

37 
	~<sig«l.h
>

38 #i‡
USE_UCONTEXT


39 
	~<uc⁄ãxt.h
>

41 
	~<sys/ut¢ame.h
>

42 
	~<öây≥s.h
>

43 
	~"èsk.h
"

45 
	#√Àm
(
x
Ë((x)/((x)[0]))

	)

47 
	#ul⁄g
 
èsk_ul⁄g


	)

48 
	#uöt
 
èsk_uöt


	)

49 
	#uch¨
 
èsk_uch¨


	)

50 
	#ush‹t
 
èsk_ush‹t


	)

51 
	#uvl⁄g
 
èsk_uvl⁄g


	)

52 
	#vl⁄g
 
èsk_vl⁄g


	)

54 
	tul⁄g
;

55 
	tuöt
;

56 
	tuch¨
;

57 
	tush‹t
;

58 
	tuvl⁄g
;

59 
	tvl⁄g
;

61 #i‡
deföed
(
__FªeBSD__
) && __FreeBSD__ < 5

62 
gëmc⁄ãxt
(
mc⁄ãxt_t
*);

63 
£tmc⁄ãxt
(c⁄° 
mc⁄ãxt_t
*);

64 
	#£tc⁄ãxt
(
u
Ë
	`£tmc⁄ãxt
(&(u)->
uc_mc⁄ãxt
)

	)

65 
	#gëc⁄ãxt
(
u
Ë
	`gëmc⁄ãxt
(&(u)->
uc_mc⁄ãxt
)

	)

66 
sw≠c⁄ãxt
(
uc⁄ãxt_t
*, const ucontext_t*);

67 
makec⁄ãxt
(
uc⁄ãxt_t
*, (*)(), , ...);

70 #i‡
deföed
(
__APPLE__
)

71 
	#mc⁄ãxt
 
libthªad_mc⁄ãxt


	)

72 
	#mc⁄ãxt_t
 
libthªad_mc⁄ãxt_t


	)

73 
	#uc⁄ãxt
 
libthªad_uc⁄ãxt


	)

74 
	#uc⁄ãxt_t
 
libthªad_uc⁄ãxt_t


	)

75 #i‡
deföed
(
__i386__
)

76 
	~"386-uc⁄ãxt.h
"

77 #ñi‡
deföed
(
__x86_64__
)

78 
	~"amd64-uc⁄ãxt.h
"

80 
	~"powî-uc⁄ãxt.h
"

84 #i‡
deföed
(
__O≥nBSD__
)

85 
	#mc⁄ãxt
 
libthªad_mc⁄ãxt


	)

86 
	#mc⁄ãxt_t
 
libthªad_mc⁄ãxt_t


	)

87 
	#uc⁄ãxt
 
libthªad_uc⁄ãxt


	)

88 
	#uc⁄ãxt_t
 
libthªad_uc⁄ãxt_t


	)

89 #i‡
deföed
 
__i386__


90 
	~"386-uc⁄ãxt.h
"

91 #ñi‡
deföed
(
__x86_64__
)

92 
	~"amd64-uc⁄ãxt.h
"

94 
	~"powî-uc⁄ãxt.h
"

96 
pid_t
 
rf‹k_thªad
(, *, (*)(*), *);

99 #i‡0 && 
	`deföed
(
__sun__
)

100 
	#mc⁄ãxt
 
libthªad_mc⁄ãxt


	)

101 
	#mc⁄ãxt_t
 
libthªad_mc⁄ãxt_t


	)

102 
	#uc⁄ãxt
 
libthªad_uc⁄ãxt


	)

103 
	#uc⁄ãxt_t
 
libthªad_uc⁄ãxt_t


	)

104 
	~"•¨c-uc⁄ãxt.h
"

107 #i‡
	`deföed
(
__¨m__
)

108 
	`gëmc⁄ãxt
(
mc⁄ãxt_t
*);

109 
	`£tmc⁄ãxt
(c⁄° 
mc⁄ãxt_t
*);

110 
	#£tc⁄ãxt
(
u
Ë
	`£tmc⁄ãxt
((*)&((u)->
uc_mc⁄ãxt
.
¨m_r0
))

	)

111 
	#gëc⁄ãxt
(
u
Ë
	`gëmc⁄ãxt
((*)&((u)->
uc_mc⁄ãxt
.
¨m_r0
))

	)

114 
C⁄ãxt
 
	tC⁄ãxt
;

118 
STACK
 = 8192

121 
	sC⁄ãxt


123 
uc⁄ãxt_t
 
uc
;

126 
	sTask


128 
«me
[
MAX_STATE_LENGTH
];

129 
°©e
[
MAX_STATE_LENGTH
];

130 
Task
 *
√xt
;

131 
Task
 *
¥ev
;

132 
C⁄ãxt
 
c⁄ãxt
;

133 
uvl⁄g
 
Æ¨mtime
;

134 
uöt
 
id
;

135 
uch¨
 *
°k
;

136 
uöt
 
°ksize
;

137 
exôög
;

138 
Æ…ask¶Ÿ
;

139 
sy°em
;

140 
ªady
;

141 (*
°¨t‚
)(*);

142 *
°¨èrg
;

143 
sig«l
;

146 
	`èskªady
(
Task
*);

147 
	`èskswôch
();

149 
	`addèsk
(
Taskli°
*, 
Task
*);

150 
	`dñèsk
(
Taskli°
*, 
Task
*);

152 
Task
 *
èskru¬ög
;

153 
èskcou¡
;

	@tnetstrings.c

1 
	~"äë°rögs.h
"

2 
	~<°rög.h
>

3 
	~"dbg.h
"

4 
	~<as£π.h
>

5 
	~"mem/hÆloc.h
"

7 
	#MAX_NUM_LEN
 22

8 

	)

9 
ölöe
 

10 
äs_∑r£_di˘
(*
di˘
, c⁄° *
d©a
, 
size_t
 
Àn
);

12 
ölöe
 

13 
äs_∑r£_li°
(*
li°
, c⁄° *
d©a
, 
size_t
 
Àn
);

15 
ölöe
 

16 
äs_ªndî_vÆue
(*
vÆ
, 
äs_outbuf
 *
outbuf
);

18 
ölöe
 

19 
äs_outbuf_ôﬂ
(
size_t
 
n
, 
äs_outbuf
 *
outbuf
);

21 
ölöe
 

22 
äs_outbuf_öô
(
äs_outbuf
 *
outbuf
);

24 
ölöe
 

25 
äs_outbuf_‰ì
(
äs_outbuf
 *
outbuf
);

27 
ölöe
 

28 
äs_outbuf_exãnd
(
äs_outbuf
 *
outbuf
);

30 
ölöe
 

31 
äs_outbuf_putc
(
äs_outbuf
 *
outbuf
, 
c
);

33 
ölöe
 

34 
äs_outbuf_Ωuts
(
äs_outbuf
 *
outbuf
, c⁄° *
d©a
, 
size_t
 
Àn
);

36 
ölöe
 

37 
äs_ö∂a˚_ªvî£
(*
d©a
, 
size_t
 
Àn
);

39 
	~"äë°rögs_im∂.h
"

42 
ölöe
 
	$äs_ªndî_°rög
(*
vÆ
, 
äs_outbuf
 *
outbuf
)

44 
äs_vÆue_t
 *
t
 = (äs_vÆue_à*)
vÆ
;

45 
	`as£π
(
t
->
ty≥
 =
äs_èg_°rög
 && "Value isÇotá string.");

46  
	`äs_outbuf_Ωuts
(
outbuf
, 
	`bd©a
(
t
->
vÆue
.
°rög
), 
	`bÀngth
(t->value.string));

47 
	}
}

49 
ölöe
 
	$äs_ªndî_numbî
(*
vÆ
, 
äs_outbuf
 *
outbuf
)

51 
äs_vÆue_t
 *
t
 = (äs_vÆue_à*)
vÆ
;

52 
	`as£π
(
t
->
ty≥
 =
äs_èg_numbî
 && "Value isÇotáÇumber.");

54 
numbî
 = 
t
->
vÆue
.number;

55 
√g©ive
 = 
numbî
 < 0;

57 
	`as£π
(
numbî
 !
LONG_MIN
 && "LONG_MIN cannot be handled");

59 
outbuf
->
Æloc_size
 < outbuf->
u£d_size
 + 
MAX_NUM_LEN
) {

60 
	`check
(
	`äs_outbuf_exãnd
(
outbuf
) != -1, "FailedÅoÉxtend buffer.");

63 i‡(
√g©ive
) {

64 
numbî
 = -number;

68 
outbuf
->
buf„r
[outbuf->
u£d_size
++] = '0' + (
numbî
%10);

69 } 
numbî
 /= 10);

71 i‡(
√g©ive
) {

72 
outbuf
->
buf„r
[outbuf->
u£d_size
++] = '-';

77 
îr‹
:

79 
	}
}

81 
ölöe
 
	$äs_ªndî_boﬁ
(*
vÆ
, 
äs_outbuf
 *
outbuf
)

83 
äs_vÆue_t
 *
t
 = (äs_vÆue_à*)
vÆ
;

84 
	`as£π
(
t
->
ty≥
 =
äs_èg_boﬁ
 && "Value isÇotá bool.");

86 if(
t
->
vÆue
.
boﬁ
) {

87  
	`äs_outbuf_Ωuts
(
outbuf
, "true", 4);

89  
	`äs_outbuf_Ωuts
(
outbuf
, "false", 5);

91 
	}
}

94 
ölöe
 
	$äs_ªndî_di˘
(*
di˘
, 
äs_outbuf
 *
outbuf
)

96 
hash_t
 *
h
 = ((
äs_vÆue_t
 *)
di˘
)->
vÆue
.dict;

97 
hsˇn_t
 
hs
;

98 
hnode_t
 *
node
;

99 
	`hash_sˇn_begö
(&
hs
, 
h
);

100 
äs_vÆue_t
 
key
;

102 (
node
 = 
	`hash_sˇn_√xt
(&
hs
))) {

103 
	`check
(
	`äs_ªndî_vÆue
(
	`hnode_gë
(
node
), 
outbuf
) == 0, "FailedÅoÑender dict value.");

105 
key
.
ty≥
 = 
äs_èg_°rög
;

106 
key
.
vÆue
.
°rög
 = (
b°rög
)
	`hnode_gëkey
(
node
);

108 
	`check
(
	`äs_ªndî_vÆue
(&
key
, 
outbuf
) == 0, "FailedÅoÑender dict key.");

112 
îr‹
:

114 
	}
}

116 
ölöe
 
	$äs_ªndî_li°
(*
li°
, 
äs_outbuf
 *
outbuf
)

118 
d¨øy_t
 *
L
 = ((
äs_vÆue_t
 *)
li°
)->
vÆue
.list;

119 
i
 = 0;

121 
i
 = 
	`d¨øy_íd
(
L
) - 1; i >= 0; i--) {

122 
äs_vÆue_t
 *
vÆ
 = 
	`d¨øy_gë
(
L
, 
i
);

123 
	`check
(
vÆ
 !
NULL
, "InvalidÅnsÜist structure, gotá NULL.");

124 
	`check
(
	`äs_ªndî_vÆue
(
vÆ
, 
outbuf
) == 0, "FailedÅoÑenderÜistÉlement.");

128 
îr‹
:

130 
	}
}

134 
	$äs_vÆue_de°roy
(
äs_vÆue_t
 *
vÆue
)

136 if(
vÆue
 =
NULL
) ;

137 
d¨øy_t
 *
L
 = 
vÆue
->vÆue.
li°
;

138 
i
 = 0;

140 
vÆue
->
ty≥
) {

141 
äs_èg_boﬁ
:

143 
äs_èg_di˘
:

144 
	`hash_‰ì_nodes
(
vÆue
->vÆue.
di˘
);

145 
	`hash_‰ì
(
vÆue
->vÆue.
di˘
);

147 
äs_èg_li°
:

148 
i
 = 0; i < 
	`d¨øy_íd
(
L
); i++) {

149 
	`äs_vÆue_de°roy
(
	`d¨øy_gë
(
L
, 
i
));

151 
	`h_‰ì
(
L
);

153 
äs_èg_nuŒ
:

155 
äs_èg_numbî
:

157 
äs_èg_°rög
:

158 
	`bde°roy
(
vÆue
->vÆue.
°rög
);

161 
	`£¡öñ
("InvÆidÅy≥ giví: '%c'", 
vÆue
->
ty≥
);

164 
îr‹
:

165 
	`‰ì
(
vÆue
);

167 
	}
}

169 
	$äs_hnode_‰ì
(
hnode_t
 *
node
, *
nŸu£d
)

171 ()
nŸu£d
;

173 
	`bde°roy
((
b°rög
)
	`hnode_gëkey
(
node
));

174 
	`äs_vÆue_de°roy
(
	`hnode_gë
(
node
));

175 
	`‰ì
(
node
);

176 
	}
}

178 
hnode_t
 *
	$äs_hnode_Æloc
(*
nŸu£d
)

180 ()
nŸu£d
;

182  
	`mÆloc
((
hnode_t
));

183 
	}
}

186 * 
	$äs_∑r£
(c⁄° *
d©a
, 
size_t
 
Àn
, **
ªmaö
)

188 *
vÆ
 = 
NULL
;

189 *
vÆ°r
 = 
NULL
;

190 
äs_ty≥_èg
 
ty≥
 = 
äs_èg_nuŒ
;

191 
size_t
 
vÆÀn
 = 0;

194 
vÆÀn
 = 
	`°πﬁ
(
d©a
, &
vÆ°r
, 10);

195 
	`check
(
vÆ°r
 !
d©a
, "NotáÅnetstring:ÇoÜengthÖrefix.");

196 
	`check
((
vÆ°r
 + 
vÆÀn
 + 1Ë< (
d©a
 + 
Àn
) && *valstr == ':', "NotáÅnetstring: invalidÜengthÖrefix.");

197 
vÆ°r
++;

200 
ty≥
 = 
vÆ°r
[
vÆÀn
];

203 if(
ªmaö
 !
NULL
) {

204 *
ªmaö
 = 
vÆ°r
 + 
vÆÀn
 + 1;

208 
ty≥
) {

210 
äs_èg_°rög
:

211 
vÆ
 = 
	`äs_∑r£_°rög
(
vÆ°r
, 
vÆÀn
);

214 
äs_èg_numbî
:

215 
vÆ
 = 
	`äs_∑r£_öãgî
(
vÆ°r
, 
vÆÀn
);

216 
	`check
(
vÆ
 !
NULL
, "NotáÅnetstring: invalid integerÜiteral.");

218 
äs_èg_Êﬂt
:

219 
vÆ
 = 
	`äs_∑r£_Êﬂt
(
vÆ°r
, 
vÆÀn
);

220 
	`check
(
vÆ
 !
NULL
, "NotáÅnetstring: invalid floatÜiteral.");

224 
äs_èg_boﬁ
:

225 if(
vÆÀn
 =4 && 
vÆ°r
[0] == 't') {

226 
vÆ
 = 
	`äs_gë_åue
();

227 } if(
vÆÀn
 =5 && 
vÆ°r
[0] == 'f') {

228 
vÆ
 = 
	`äs_gë_Ál£
();

230 
	`£¡öñ
("NotáÅnetstring: invalid booleanÜiteral.");

235 
äs_èg_nuŒ
:

236 
	`check
(
vÆÀn
 == 0, "NotáÅnetstring: invalidÇullÜiteral.");

237 
vÆ
 = 
	`äs_gë_nuŒ
();

241 
äs_èg_di˘
:

242 
vÆ
 = 
	`äs_√w_di˘
();

243 
	`check
(
	`äs_∑r£_di˘
(
vÆ
,
vÆ°r
,
vÆÀn
) != -1, "NotáÅnetstring: broken dict items.");

247 
äs_èg_li°
:

248 
vÆ
 = 
	`äs_√w_li°
();

249 
	`check
(
	`äs_∑r£_li°
(
vÆ
,
vÆ°r
,
vÆÀn
) != -1, "notáÅnetstring: brokenÜist items");

252 
	`£¡öñ
("notáÅnetstring: invalidÅypeÅag");

255  
vÆ
;

257 
îr‹
:

258 
	`äs_vÆue_de°roy
(
vÆ
);

259  
NULL
;

260 
	}
}

263 
	$äs_outbuf_˛amp
(
äs_outbuf
 *
outbuf
, 
‹ig_size
)

265 
size_t
 
d©Æí
 = 
outbuf
->
u£d_size
 - 
‹ig_size
;

266 
	`äs_outbuf_putc
(
outbuf
, ':');

267 
	`äs_outbuf_ôﬂ
(
d©Æí
, 
outbuf
);

268 
	}
}

270 *
	$äs_ªndî
(*
vÆ
, 
size_t
 *
Àn
)

272 *
ouçut
 = 
NULL
;

274 
ouçut
 = 
	`äs_ªndî_ªvî£d
(
vÆ
, 
Àn
);

275 
	`check
(
ouçut
 !
NULL
, "FailedÅoÑenderÅnetstring.");

277 
	`äs_ö∂a˚_ªvî£
(
ouçut
, *
Àn
);

278 
ouçut
[*
Àn
] = '\0';

280  
ouçut
;

282 
îr‹
:

283  
NULL
;

284 
	}
}

286 
ölöe
 
	$äs_ªndî_hash_∑ú_li°
(
äs_outbuf
 *
outbuf
, 
b°rög
 
key
, 
b°rLi°
 *
vÆue
)

288 
i
 = 0;

289 
äs_vÆue_t
 
vÆ
 = {.
ty≥
 = 
äs_èg_°rög
};

290 
	`äs_outbuf_putc
(
outbuf
, ']');

291 
‹ig_size
 = 
outbuf
->
u£d_size
;

293 
i
 = 
vÆue
->
qty
 - 1; i >= 0 ; i--) {

294 
vÆ
.
vÆue
.
°rög
 = vÆue->
íåy
[
i
];

295 
	`äs_ªndî_vÆue
(&
vÆ
, 
outbuf
);

298 
	`äs_outbuf_˛amp
(
outbuf
, 
‹ig_size
);

299 
vÆ
.
vÆue
.
°rög
 = 
key
;

300 
	`äs_ªndî_vÆue
(&
vÆ
, 
outbuf
);

301 
	}
}

303 
	$äs_ªndî_hash_∑ú
(
äs_outbuf
 *
outbuf
, 
b°rög
 
key
, b°rög 
vÆue
)

305 
äs_vÆue_t
 
vÆ
 = {.
ty≥
 = 
äs_èg_°rög
, .
vÆue
.
°rög
 = value};

306 
	`äs_ªndî_vÆue
(&
vÆ
, 
outbuf
);

308 
vÆ
.
vÆue
.
°rög
 = 
key
;

309 
	`äs_ªndî_vÆue
(&
vÆ
, 
outbuf
);

310 
	}
}

312 
	$äs_ªndî_numbî_¥ïíd
(
äs_outbuf
 *
outbuf
, 
vÆue
)

314 
äs_vÆue_t
 
vÆ
 = {.
ty≥
 = 
äs_èg_numbî
, .
vÆue
.
numbî
 = value};

315 
	`äs_ªndî_vÆue
(&
vÆ
, 
outbuf
);

316 
	}
}

318 
	$äs_ªndî_°rög_¥ïíd
(
äs_outbuf
 *
outbuf
, 
b°rög
 
vÆue
)

320 
äs_vÆue_t
 
vÆ
 = {.
ty≥
 = 
äs_èg_°rög
, .
vÆue
.
°rög
 = value};

321 
	`äs_ªndî_vÆue
(&
vÆ
, 
outbuf
);

322 
	}
}

324 
	$äs_ªndî_ªque°_°¨t
(
äs_outbuf
 *
outbuf
)

326 
	`check
(
	`äs_outbuf_öô
(
outbuf
) != -1, "FailedÅo init buffer.");

328 
	`check
(
	`äs_outbuf_putc
(
outbuf
, '}') != -1, "FailedÉndingÑequest.");

330  
outbuf
->
u£d_size
;

331 
îr‹
:

333 
	}
}

335 
	$äs_ªndî_ªque°_íd
(
äs_outbuf
 *
outbuf
, 
hódî_°¨t
, 
b°rög
 
uuid
, 
id
, b°rög 
∑th
)

338 
	`äs_outbuf_˛amp
(
outbuf
, 
hódî_°¨t
);

340 
	`check
(
	`äs_outbuf_putc
(
outbuf
, ' ') != -1, "FailedÉndingÑequest.");

341 
	`check
(
	`äs_outbuf_Ωuts
(
outbuf
, 
	`bd©a
(
∑th
), 
	`bÀngth
(path)) != -1, "FailedÉndingÑequest.");

343 
	`check
(
	`äs_outbuf_putc
(
outbuf
, ' ') != -1, "FailedÉndingÑequest.");

344 
	`check
(
	`äs_outbuf_ôﬂ
(
id
, 
outbuf
) != -1, "FailedÉndingÑequest.");

346 
	`check
(
	`äs_outbuf_putc
(
outbuf
, ' ') != -1, "FailedÉndingÑequest.");

347 
	`check
(
	`äs_outbuf_Ωuts
(
outbuf
, 
	`bd©a
(
uuid
), 
	`bÀngth
(uuid)) != -1, "FailedÉndingÑequest.");

351 
îr‹
:

353 
	}
}

355 
	$äs_ªndî_log_°¨t
(
äs_outbuf
 *
outbuf
)

357 
	`check
(
	`äs_outbuf_öô
(
outbuf
) != -1, "FailedÅo init buffer.");

359 
	`check
(
	`äs_outbuf_putc
(
outbuf
, ']') != -1, "FailedÉndingÑequest.");

361  
outbuf
->
u£d_size
;

362 
îr‹
:

364 
	}
}

366 
	$äs_ªndî_log_íd
(
äs_outbuf
 *
outbuf
)

368 
	`äs_outbuf_˛amp
(
outbuf
, 1);

369 
	}
}

371 
	$äs_ªndî_ªque°_hódîs
(
äs_outbuf
 *
outbuf
, 
hash_t
 *
hódîs
)

373 
hsˇn_t
 
sˇn
;

374 
hnode_t
 *
n
 = 
NULL
;

375 
	`hash_sˇn_begö
(&
sˇn
, 
hódîs
);

377 
n
 = 
	`hash_sˇn_√xt
(&
sˇn
);Ç !
NULL
;Ç = hash_scan_next(&scan)) {

378 
b°rLi°
 *
vÆ_li°
 = 
	`hnode_gë
(
n
);

379 if(
vÆ_li°
->
qty
 == 0) ;

381 
b°rög
 
key
 = (b°rög)
	`hnode_gëkey
(
n
);

383 if(
vÆ_li°
->
qty
 == 1) {

384 
	`äs_ªndî_hash_∑ú
(
outbuf
, 
key
, 
vÆ_li°
->
íåy
[0]);

386 
	`äs_ªndî_hash_∑ú_li°
(
outbuf
, 
key
, 
vÆ_li°
);

391 
	}
}

393 
b°rög
 
	$äs_outbuf_to_b°rög
(
äs_outbuf
 *
outbuf
)

395 if(
outbuf
->
u£d_size
 =outbuf->
Æloc_size
) {

396 
	`äs_outbuf_exãnd
(
outbuf
);

399 
	`äs_ö∂a˚_ªvî£
(
outbuf
->
buf„r
, outbuf->
u£d_size
);

401 
b°rög
 
b
 = 
	`mÆloc
((
ègb°rög
));

402 
b
->
¶í
 = 
outbuf
->
u£d_size
;

403 
b
->
d©a
 = (*)
outbuf
->
buf„r
;

404 
b
->
d©a
[b->
¶í
] = '\0';

405 
b
->
mÀn
 = 
outbuf
->
Æloc_size
;

407  
b
;

408 
	}
}

410 *
	$äs_ªndî_ªvî£d
(*
vÆ
, 
size_t
 *
Àn
)

412 
äs_outbuf
 
outbuf
;

414 
	`check
(
	`äs_outbuf_öô
(&
outbuf
) != -1, "FailedÅo initialize outbuf.");

416 
	`check
(
	`äs_ªndî_vÆue
(
vÆ
, &
outbuf
) != -1, "FailedÅoÑender value.");

417 *
Àn
 = 
outbuf
.
u£d_size
;

419 if(
outbuf
.
u£d_size
 =outbuf.
Æloc_size
) {

421 
outbuf
.
buf„r
 = 
	`ªÆloc
(outbuf.buf„r, outbuf.
u£d_size
 + 1);

422 
	`check_mem
(
outbuf
.
buf„r
);

425  
outbuf
.
buf„r
;

427 
îr‹
:

428 
	`äs_outbuf_‰ì
(&
outbuf
);

429  
NULL
;

430 
	}
}

433 
ölöe
 

434 
	$äs_ªndî_vÆue
(*
vÆ
, 
äs_outbuf
 *
outbuf
)

436 
äs_ty≥_èg
 
ty≥
 = 
äs_èg_nuŒ
;

437 
ªs
 = -1;

438 
size_t
 
d©Æí
 = 0;

441 
ty≥
 = 
	`äs_gë_ty≥
(
vÆ
);

442 
	`check
(
ty≥
 != 0, "typeÇot serializable");

444 
	`äs_outbuf_putc
(
outbuf
, 
ty≥
);

445 
d©Æí
 = 
outbuf
->
u£d_size
;

449 
ty≥
) {

450 
äs_èg_°rög
:

451 
ªs
 = 
	`äs_ªndî_°rög
(
vÆ
, 
outbuf
);

453 
äs_èg_numbî
:

454 
ªs
 = 
	`äs_ªndî_numbî
(
vÆ
, 
outbuf
);

456 
äs_èg_boﬁ
:

457 
ªs
 = 
	`äs_ªndî_boﬁ
(
vÆ
, 
outbuf
);

459 
äs_èg_nuŒ
:

460 
ªs
 = 0;

462 
äs_èg_di˘
:

463 
ªs
 = 
	`äs_ªndî_di˘
(
vÆ
, 
outbuf
);

465 
äs_èg_li°
:

466 
ªs
 = 
	`äs_ªndî_li°
(
vÆ
, 
outbuf
);

468 
äs_èg_övÆid
:

469 
	`£¡öñ
("invalidÅns value, can't be NULL");

472 
	`£¡öñ
("unknow¿ty≥Åag: '%c'", 
ty≥
);

475 
	`check
(
ªs
 =0, "FaûedÅÿªndî vÆuêty≥: '%c'", 
ty≥
);

477 
d©Æí
 = 
outbuf
->
u£d_size
 - datalen;

478 
	`äs_outbuf_putc
(
outbuf
, ':');

479 
ªs
 = 
	`äs_outbuf_ôﬂ
(
d©Æí
, 
outbuf
);

481  
ªs
;

482 
îr‹
:

484 
	}
}

488 
	$äs_ö∂a˚_ªvî£
(*
d©a
, 
size_t
 
Àn
)

490 *
díd
 = 
NULL
;

491 
c
 = '\0';

492 
	`as£π
(
d©a
 !
NULL
 && "Data cannot be NULL.");

494 
díd
 = 
d©a
 + 
Àn
 - 1;

495 
díd
 > 
d©a
) {

496 
c
 = *
d©a
;

497 *
d©a
 = *
díd
;

498 *
díd
 = 
c
;

499 
d©a
++;

500 
díd
--;

502 
	}
}

504 
	#äs_rŸ©e_buf„r
(
d©a
, 
ªmaö
, 
Àn
, 
‹ig_Àn
) {\

505 
Àn
 =Üí - (
ªmaö
 - 
d©a
);\

506 
	`check
(
Àn
 < 
‹ig_Àn
, "ErrorÖarsing data, buffer math is off.");\

507 
d©a
 = 
ªmaö
;\

508 }

	)

511 
	$äs_∑r£_li°
(*
vÆ
, c⁄° *
d©a
, 
size_t
 
Àn
)

513 *
ôem
 = 
NULL
;

514 *
ªmaö
 = 
NULL
;

515 
size_t
 
‹ig_Àn
 = 
Àn
;

517 
	`as£π
(
vÆ
 !
NULL
 && "Value cannot be NULL.");

518 
	`as£π
(
d©a
 !
NULL
 && "data cannot be NULL.");

520 
Àn
 > 0) {

521 
ôem
 = 
	`äs_∑r£
(
d©a
, 
Àn
, &
ªmaö
);

522 
	`check
(
ôem
 !
NULL
, "FailedÅoÖarseÜist.");

523 
	`äs_rŸ©e_buf„r
(
d©a
, 
ªmaö
, 
Àn
, 
‹ig_Àn
);

524 
	`check
(
	`äs_add_to_li°
(
vÆ
, 
ôem
) != -1, "FailedÅoáddÉlementÅoÜist.");

525 
ôem
 = 
NULL
;

530 
îr‹
:

531 if(
ôem
Ë
	`äs_vÆue_de°roy
(item);

533 
	}
}

536 
ölöe
 

537 
	$äs_∑r£_di˘
(*
vÆ
, c⁄° *
d©a
, 
size_t
 
Àn
)

539 *
key
 = 
NULL
;

540 *
ôem
 = 
NULL
;

541 *
ªmaö
 = 
NULL
;

542 
size_t
 
‹ig_Àn
 = 
Àn
;

544 
	`as£π
(
vÆ
 !
NULL
 && "Value cannot be NULL.");

545 
	`as£π
(
d©a
 !
NULL
 && "Data cannot be NULL.");

547 
Àn
 > 0) {

548 
key
 = 
	`äs_∑r£
(
d©a
, 
Àn
, &
ªmaö
);

549 
	`check
(
key
 !
NULL
, "FailedÅoÖarse dict key fromÅnetstring.");

550 
	`äs_rŸ©e_buf„r
(
d©a
, 
ªmaö
, 
Àn
, 
‹ig_Àn
);

552 
ôem
 = 
	`äs_∑r£
(
d©a
, 
Àn
, &
ªmaö
);

553 
	`check
(
ôem
 !
NULL
, "FailedÅoÖarse dict key fromÅnetstring.");

555 
	`äs_rŸ©e_buf„r
(
d©a
, 
ªmaö
, 
Àn
, 
‹ig_Àn
);

556 
	`check
(
	`äs_add_to_di˘
(
vÆ
,
key
,
ôem
) != -1, "FailedÅoáddÉlementÅo dict.");

557 
key
 = 
NULL
;

558 
ôem
 = 
NULL
;

563 
îr‹
:

564 if(
key
Ë
	`äs_vÆue_de°roy
(key);

565 if(
ôem
Ë
	`äs_vÆue_de°roy
(item);

567 
	}
}

570 
ölöe
 

571 
	$äs_outbuf_ôﬂ
(
size_t
 
n
, 
äs_outbuf
 *
outbuf
)

574 
	`check
(
	`äs_outbuf_putc
(
outbuf
, 
n
%10+'0') != -1, "FailedÅo write intÅoÅnetstring buffer.");

575 
n
 =Ç / 10;

576 } 
n
 > 0);

580 
îr‹
:

582 
	}
}

585 
ölöe
 

586 
	$äs_outbuf_öô
(
äs_outbuf
 *
outbuf
)

588 
outbuf
->
buf„r
 = 
	`mÆloc
(64);

589 
	`check_mem
(
outbuf
->
buf„r
);

591 
outbuf
->
Æloc_size
 = 64;

592 
outbuf
->
u£d_size
 = 0;

595 
îr‹
:

596 
outbuf
->
Æloc_size
 = 0;

597 
outbuf
->
u£d_size
 = 0;

599 
	}
}

602 
ölöe
 

603 
	$äs_outbuf_‰ì
(
äs_outbuf
 *
outbuf
)

605 if(
outbuf
) {

606 
	`‰ì
(
outbuf
->
buf„r
);

607 
outbuf
->
buf„r
 = 
NULL
;

608 
outbuf
->
Æloc_size
 = 0;

609 
outbuf
->
u£d_size
 = 0;

611 
	}
}

614 
ölöe
 

615 
	$äs_outbuf_exãnd
(
äs_outbuf
 *
outbuf
)

617 *
√w_buf
 = 
NULL
;

618 
size_t
 
√w_size
 = 
outbuf
->
Æloc_size
 * 2;

620 
√w_buf
 = 
	`ªÆloc
(
outbuf
->
buf„r
, 
√w_size
);

621 
	`check_mem
(
√w_buf
);

623 
outbuf
->
buf„r
 = 
√w_buf
;

624 
outbuf
->
Æloc_size
 = 
√w_size
;

628 
îr‹
:

630 
	}
}

633 
ölöe
 

634 
	$äs_outbuf_putc
(
äs_outbuf
 *
outbuf
, 
c
)

636 if(
outbuf
->
Æloc_size
 =outbuf->
u£d_size
) {

637 
	`check
(
	`äs_outbuf_exãnd
(
outbuf
) != -1, "FailedÅoÉxtend buffer.");

640 
outbuf
->
buf„r
[outbuf->
u£d_size
++] = 
c
;

643 
îr‹
:

645 
	}
}

648 
ölöe
 

649 
	$äs_outbuf_Ωuts
(
äs_outbuf
 *
outbuf
, c⁄° *
d©a
, 
size_t
 
Àn
)

651 c⁄° *
díd
 = 
NULL
;

652 *
buf„r
 = 
NULL
;

655 
outbuf
->
Æloc_size
 - outbuf->
u£d_size
 < 
Àn
) {

656 
	`check
(
	`äs_outbuf_exãnd
(
outbuf
) != -1, "FailedÅoÑputs intoáÅnetstring buffer.");

660 
buf„r
 = 
outbuf
->buf„∏+ outbuf->
u£d_size
;

661 
díd
 = 
d©a
 + 
Àn
 - 1;

663 
díd
 >
d©a
) {

664 *
buf„r
 = *
díd
;

665 
buf„r
++;

666 
díd
--;

669 
outbuf
->
u£d_size
 +
Àn
;

672 
îr‹
:

674 
	}
}

676 
äs_vÆue_t
 *
	$äs_°™d¨d_èbÀ
(
b°rög
 
hódî_d©a
, 
äs_vÆue_t
 *
rows
)

678 
äs_vÆue_t
 *
hódîs
 = 
	`äs_∑r£
(
	`bd©a
(
hódî_d©a
), 
	`bÀngth
(hódî_d©a), 
NULL
);

679 
äs_vÆue_t
 *
ªsu…
 = 
	`äs_√w_di˘
();

681 
	`äs_di˘_£tc°r
(
ªsu…
, "hódîs", 
hódîs
);

682 
	`äs_di˘_£tc°r
(
ªsu…
, "rows", 
rows
);

684  
ªsu…
;

685 
	}
}

	@tnetstrings.h

1 #i‚de‡
_äë°rögs_h


2 
	#_äë°rögs_h


	)

4 
	~<°dlib.h
>

5 
	~<°ddef.h
>

6 
	~<˘y≥.h
>

7 
	~"b°rög.h
"

8 
	~"adt/hash.h
"

9 
	~"adt/d¨øy.h
"

11 
	säs_outbuf_s
 {

12 *
	mbuf„r
;

13 
size_t
 
	mu£d_size
;

14 
size_t
 
	mÆloc_size
;

15 } 
	täs_outbuf
;

17 
	eäs_ty≥_èg_e
 {

18 
	mäs_èg_°rög
 = ',',

19 
	mäs_èg_numbî
 = '#',

20 
	mäs_èg_Êﬂt
 = '^',

21 
	mäs_èg_boﬁ
 = '!',

22 
	mäs_èg_nuŒ
 = '~',

23 
	mäs_èg_di˘
 = '}',

24 
	mäs_èg_li°
 = ']',

25 
	mäs_èg_övÆid
 = 'Z',

26 } 
	täs_ty≥_èg
;

28 
	säs_vÆue_t
 {

29 
äs_ty≥_èg
 
	mty≥
;

32 
b°rög
 
	m°rög
;

33 
	mnumbî
;

34 
	mÂoöt
;

35 
	mboﬁ
;

36 
d¨øy_t
 *
	mli°
;

37 
hash_t
 *
	mdi˘
;

38 } 
	mvÆue
;

39 } 
	täs_vÆue_t
;

41 
	#MAX_HASH_COUNT
 
HASHCOUNT_T_MAX


	)

43 
äs_hnode_‰ì
(
hnode_t
 *
node
, *
nŸu£d
);

45 
hnode_t
 *
äs_hnode_Æloc
(*
nŸu£d
);

47 
äs_vÆue_de°roy
(
äs_vÆue_t
 *
vÆue
);

55 *
äs_∑r£
(c⁄° *
d©a
, 
size_t
 
Àn
, ** 
ªmaö
);

65 *
äs_ªndî
(*
vÆ
, 
size_t
 *
Àn
);

75 *
äs_ªndî_ªvî£d
(*
vÆ
, 
size_t
 *
Àn
);

78 
äs_ªndî_hash_∑ú
(
äs_outbuf
 *
outbuf
, 
b°rög
 
key
, b°rög 
vÆue
);

80 
äs_ªndî_ªque°_hódîs
(
äs_outbuf
 *
outbuf
, 
hash_t
 *
hódîs
);

82 
b°rög
 
äs_outbuf_to_b°rög
(
äs_outbuf
 *
outbuf
);

84 
äs_outbuf_˛amp
(
äs_outbuf
 *
outbuf
, 
‹ig_size
);

87 
äs_ªndî_ªque°_°¨t
(
äs_outbuf
 *
outbuf
);

89 
äs_ªndî_ªque°_íd
(
äs_outbuf
 *
outbuf
, 
hódî_°¨t
, 
b°rög
 
uuid
, 
id
, b°rög 
∑th
);

91 
äs_ªndî_log_°¨t
(
äs_outbuf
 *
outbuf
);

93 
äs_ªndî_log_íd
(
äs_outbuf
 *
outbuf
);

95 
äs_ªndî_°rög_¥ïíd
(
äs_outbuf
 *
outbuf
, 
b°rög
 
vÆue
);

96 
äs_ªndî_numbî_¥ïíd
(
äs_outbuf
 *
outbuf
, 
vÆue
);

98 
äs_vÆue_t
 *
äs_°™d¨d_èbÀ
(
b°rög
 
hódî_d©a
,Åns_vÆue_à*
rows
);

100 
	#äs_gë_ty≥
(
T
Ë(((
äs_vÆue_t
 *)(T)Ë=
NULL
 ? 
äs_èg_övÆid
 : (—ns_vÆue_à*)(T))->
ty≥
)

	)

	@tnetstrings_impl.h

1 #i‚de‡
_äë°rögs_im∂_h


2 
	#_äë°rögs_im∂_h


	)

4 
	~"dbg.h
"

5 
	~<as£π.h
>

7 
ölöe
 
äs_vÆue_t
 *
	$äs_vÆue_¸óã
(
äs_ty≥_èg
 
èg
)

9 
äs_vÆue_t
 *
vÆ
 = 
	`mÆloc
((tns_value_t));

10 
vÆ
->
ty≥
 = 
èg
;

11  
vÆ
;

12 
	}
}

16 
ölöe
 *
	$äs_√w_di˘
()

18 
äs_vÆue_t
 *
vÆ
 = 
	`äs_vÆue_¸óã
(
äs_èg_di˘
);

19 
vÆ
->
vÆue
.
di˘
 = 
	`hash_¸óã
(
MAX_HASH_COUNT
, (
hash_comp_t
)
b°rcmp
, 
b°r_hash_fun
);

20 
	`hash_£t_Æloˇt‹
(
vÆ
->
vÆue
.
di˘
, 
äs_hnode_Æloc
, 
äs_hnode_‰ì
, 
NULL
);

22  
vÆ
;

23 
	}
}

25 
ölöe
 
	$äs_add_to_di˘
(*
di˘
, *
key
, *
ôem
)

27 
	`check
(
	`äs_gë_ty≥
(
di˘
Ë=
äs_èg_di˘
, "Can'táddÅoÅhat, it'sÇotá dict.");

28 
hash_t
 *
h
 = ((
äs_vÆue_t
 *)
di˘
)->
vÆue
.dict;

29 
äs_vÆue_t
 *
k
 = 
key
;

31 
	`check
(
k
->
ty≥
 =
äs_èg_°rög
, "Only strings can be keys.");

32 
	`check
(
	`hash_Æloc_ö£π
(
h
, 
k
->
vÆue
.
°rög
, 
ôem
), "FailedÅo insert key into dict.");

34 
	`‰ì
(
k
);

36 
îr‹
:

38 
	}
}

42 
ölöe
 *
	$äs_gë_nuŒ
()

44  
	`äs_vÆue_¸óã
(
äs_èg_nuŒ
);

45 
	}
}

47 
ölöe
 *
	$äs_gë_åue
()

49 
äs_vÆue_t
 *
t
 = 
	`äs_vÆue_¸óã
(
äs_èg_boﬁ
);

50 
t
->
vÆue
.
boﬁ
 = 1;

51  
t
;

52 
	}
}

54 
ölöe
 *
	$äs_gë_Ál£
()

56 
äs_vÆue_t
 *
t
 = 
	`äs_vÆue_¸óã
(
äs_èg_boﬁ
);

57 
t
->
vÆue
.
boﬁ
 = 0;

58  
t
;

59 
	}
}

61 
ölöe
 *
	$äs_√w_li°
()

63 
äs_vÆue_t
 *
vÆ
 = 
	`äs_vÆue_¸óã
(
äs_èg_li°
);

64 
vÆ
->
vÆue
.
li°
 = 
	`d¨øy_¸óã
((
äs_vÆue_t
), 100);

66  
vÆ
;

67 
	}
}

69 
ölöe
 
	$äs_add_to_li°
(*
li°
, *
ôem
)

71 
	`check
(
	`äs_gë_ty≥
(
li°
Ë=
äs_èg_li°
, "Can'táddÅoÅhat, it'sÇotáÜist.");

72 
d¨øy_t
 *
L
 = ((
äs_vÆue_t
 *)
li°
)->
vÆue
.list;

73 
	`d¨øy_push
(
L
, 
ôem
);

75 
îr‹
:

77 
	}
}

79 
ölöe
 
	$äs_ö£π_to_li°
(*
li°
, 
i
, *
ôem
)

81 
	`check
(
	`äs_gë_ty≥
(
li°
Ë=
äs_èg_li°
, "Can'táddÅoÅhat, it'sÇotáÜist.");

82 
d¨øy_t
 *
L
 = ((
äs_vÆue_t
 *)
li°
)->
vÆue
.list;

83 
	`d¨øy_ö£π
(
L
, 
i
, 
ôem
);

85 
îr‹
:

87 
	}
}

90 
ölöe
 *
	$äs_∑r£_°rög
(c⁄° *
d©a
, 
size_t
 
Àn
)

92 
äs_vÆue_t
 *
t
 = 
	`äs_vÆue_¸óã
(
äs_èg_°rög
);

93 
t
->
vÆue
.
°rög
 = 
	`blk2b°r
(
d©a
, 
Àn
);

94  
t
;

95 
	}
}

97 
ölöe
 *
	$äs_∑r£_öãgî
(c⁄° *
d©a
, 
size_t
 
Àn
)

99 
äs_vÆue_t
 *
t
 = 
	`äs_vÆue_¸óã
(
äs_èg_numbî
);

100 *
íd±r
 = 
NULL
;

101 
t
->
vÆue
.
numbî
 = 
	`°πﬁ
(
d©a
, &
íd±r
, 10);

102 
	`check
(
íd±r
 !
NULL
 &&Énd±∏- 
d©a
 =()
Àn
, "FailedÅoÖarse integer.");

103 
	`check
(
î∫o
 !
ERANGE
, "Integer isÅooÜarge.");

105  
t
;

106 
îr‹
:

107 
	`äs_vÆue_de°roy
(
t
);

108  
NULL
;

109 
	}
}

111 
ölöe
 *
	$äs_∑r£_Êﬂt
(c⁄° *
d©a
, 
size_t
 
Àn
)

113 
äs_vÆue_t
 *
t
 = 
	`äs_vÆue_¸óã
(
äs_èg_Êﬂt
);

114 *
íd±r
 = 
NULL
;

115 
t
->
vÆue
.
Âoöt
 = 
	`°πod
(
d©a
, 
NULL
);

116 
	`check
(
íd±r
 !
NULL
 &&Énd±∏- 
d©a
 =()
Àn
, "FailedÅoÖarse float.");

117 
	`check
(
î∫o
 !
ERANGE
, "Float isÅooÜarge.");

119  
t
;

120 
îr‹
:

121 
	`äs_vÆue_de°roy
(
t
);

122  
NULL
;

123 
	}
}

126 
ölöe
 *
	$äs_√w_öãgî
(
numbî
)

128 
äs_vÆue_t
 *
t
 = 
	`äs_vÆue_¸óã
(
äs_èg_numbî
);

129 
t
->
vÆue
.
numbî
 =Çumber;

130  
t
;

131 
	}
}

133 
ölöe
 *
	$äs_√w_Êﬂt
(
Âoöt
)

135 
äs_vÆue_t
 *
t
 = 
	`äs_vÆue_¸óã
(
äs_èg_Êﬂt
);

136 
t
->
vÆue
.
Âoöt
 = fpoint;

137  
t
;

138 
	}
}

141 
ölöe
 
	$äs_di˘_£tc°r
(
äs_vÆue_t
 *
d
, c⁄° *
key
,Åns_vÆue_à*
vÆ
)

143  
	`äs_add_to_di˘
(
d
, 
	`äs_∑r£_°rög
(
key
, 
	`°æí
(key)), 
vÆ
);

144 
	}
}

146 
ölöe
 
	$äs_di˘_£t
(
äs_vÆue_t
 *
d
, 
b°rög
 
key
,Åns_vÆue_à*
vÆ
)

148  
	`äs_add_to_di˘
(
d
, 
	`äs_∑r£_°rög
(
	`bd©a
(
key
), 
	`bÀngth
(key)), 
vÆ
);

149 
	}
}

151 
ölöe
 
	$äs_li°_add°r
(
äs_vÆue_t
 *
d
, 
b°rög
 
ñemít
)

153  
	`äs_add_to_li°
(
d
,

154 
	`äs_∑r£_°rög
(
	`bd©a
(
ñemít
), 
	`bÀngth
(element)));

155 
	}
}

	@unixy.c

35 
	~<unixy.h
>

36 
	~<dbg.h
>

37 
	~<uni°d.h
>

38 
	~<sys/ty≥s.h
>

39 
	~<sys/°©.h
>

40 
	~<sys/ty≥s.h
>

41 
	~<sig«l.h
>

42 
	~<limôs.h
>

43 
	~<°dlib.h
>

45 *
	gm2¥ogøm
 = "mongrel2";

46 
	gö_chroŸ
 = 0;

48 
	$Unixy_chroŸ
(
b°rög
 
∑th
)

50 
rc
 = 0;

51 c⁄° *
to_dú
 = 
	`bd©a
(
∑th
);

53 
	`check
(
to_dú
 && 
	`bÀngth
(
∑th
) > 0, "Invalid orÉmptyÖath for chroot.");

55 
rc
 = 
	`chroŸ
(
to_dú
);

56 
	`check
(
rc
 =0, "C™'àchroŸÅÿ%s,Ñîu¿a†roŸ i‡thi†i†wh© you w™t.", 
	`bd©a
(
∑th
));

58 
ö_chroŸ
 = 1;

60 
rc
 = 
	`chdú
("/");

61 
	`check
(
rc
 == 0, "Can't chdirÅo / directory inside chroot.");

65 
îr‹
:

67 
	}
}

70 
	$Unixy_ö_chroŸ
()

72  
ö_chroŸ
;

73 
	}
}

76 
	$Unixy_dr›_¥iv
(
b°rög
 
∑th
)

78 if(
∑th
 !
NULL
) {

81 c⁄° *
‰om_dú
 = 
	`bd©a
(
∑th
);

82 
°©
 
sb
;

84 
	`check
(
‰om_dú
 && 
	`bÀngth
(
∑th
), "ChrootÖath can't beÉmpty.");

86 
rc
 = 
	`°©
(
‰om_dú
, &
sb
);

87 
	`check
(
rc
 =0, "FaûedÅÿ°©Å¨gë chroŸ dúe˘‹y: %s", 
	`bd©a
(
∑th
));

89 
rc
 = 
	`£åegid
(
sb
.
°_gid
, sb.st_gid);

90 
	`check
(
rc
 =0 && 
	`gëgid
(Ë=
sb
.
°_gid
 && 
	`gëegid
() == sb.st_gid, "FailedÅo changeÅo GID: %d", sb.st_gid);

92 
rc
 = 
	`£åeuid
(
sb
.
°_uid
, sb.st_uid);

93 
	`check
(
rc
 =0 && 
	`gëuid
(Ë=
sb
.
°_uid
 && 
	`gëeuid
() == sb.st_uid, "FailedÅo changeÅo UID: %d", sb.st_uid);

95 
	`log_öfo
("NowÑu¬ögá†UID:%d, GID:%d", 
sb
.
°_uid
, sb.
°_gid
);

99 
rc
 = 
	`£tgid
(
	`gëgid
());

100 
	`check
(
rc
 == 0, "FailedÅo dropÖrivileges with setgid");

102 
rc
 = 
	`£tuid
(
	`gëuid
());

103 
	`check
(
rc
 == 0, "FailedÅo dropÖrivileges with setuid");

105 
	`log_öfo
("NowÑu¬ögá†UID:%d, GID:%d", 
	`gëuid
(), 
	`gëgid
());

110 
îr‹
:

112 
	}
}

115 
pid_t
 
	$Unixy_pid_ªad
(
b°rög
 
pid_∑th
)

117 
pid_t
 
pid
 = -1;

118 
FILE
 *
pid_fûe
 = 
NULL
;

120 
	`check
(
pid_∑th
, "PID file hasÇot been set yet.");

122 
pid_fûe
 = 
	`f›í
(
	`bd©a
(
pid_∑th
), "r");

123 
	`check
(
pid_fûe
, "FaûedÅÿ›í PID fûê%†f‹Ñódög.", 
	`bd©a
(
pid_∑th
));

125 
	`check
(
	`fsˇnf
(
pid_fûe
, "%d", &
pid
Ë!-1, "FaûedÅÿªadá¿öãgî from PID fûe: %s", 
	`bd©a
(
pid_∑th
));

127 
	`f˛o£
(
pid_fûe
);

128  
pid
;

129 
îr‹
:

131 if(
pid_fûe
Ë
	`f˛o£
(pid_file);

133 
	}
}

135 
	$Unixy_°ûl_ru¬ög
(
b°rög
 
pid_∑th
, 
pid_t
 *
pid
)

137 
rc
 = 0;

139 *
pid
 = 
	`Unixy_pid_ªad
(
pid_∑th
);

141 if(*
pid
 < 0) {

146 
rc
 = 
	`kûl
(*
pid
, 0);

147  
rc
 == 0;

148 
	}
}

151 
	$Unixy_ªmove_dód_pidfûe
(
b°rög
 
pid_∑th
)

153 
rc
 = 0;

154 
pid_t
 
pid
 = 0;

156 
rc
 = 
	`Unixy_°ûl_ru¬ög
(
pid_∑th
, &
pid
);

158 
	`check
(
rc
 !1, "Pro˚s†%d i†°û»ru¬ög, shuàô dow¿fú°.", 
pid
);

160 if(
pid
 == -1) {

161 
	`log_öfo
("Nÿ¥eviou†%†ru¬ög, c⁄töuög on.", 
m2¥ogøm
);

163 
	`log_öfo
("Pro˚s†%d i†nŸÑu¬ögánym‹e, sÿªmovög PID fûê%s.", 
pid
, 
	`bd©a
(
pid_∑th
));

164 
rc
 = 
	`u∆ök
((c⁄° *)
pid_∑th
->
d©a
);

165 
	`check
(
rc
 =0, "FaûedÅÿªmovêthêPID fûê%s, m™ you'ª sÿho£d I givêup.", 
	`bd©a
(
pid_∑th
));

170 
îr‹
:

172 
	}
}

174 
	$Unixy_pid_fûe
(
b°rög
 
∑th
)

176 
FILE
 *
pid_fûe
 = 
NULL
;

177 
rc
 = 0;

178 
°©
 
sb
;

179 *
pid_∑th
 = 
NULL
;

181 
pid_∑th
 = 
	`b°r2c°r
(
∑th
, '\0');

182 
	`check_mem
(
pid_∑th
);

184 
rc
 = 
	`°©
(
pid_∑th
, &
sb
);

185 
	`check
(
rc
 == -1, "PID fileálreadyÉxists, something bad happened.");

188 
pid_fûe
 = 
	`f›í
(
pid_∑th
, "w");

189 
	`check
(
pid_fûe
, "FaûedÅÿ›í PID fûê%†f‹ wrôög.", 
pid_∑th
);

191 
rc
 = 
	`Ârötf
(
pid_fûe
, "%d", 
	`gëpid
());

192 
	`check
(
rc
 > 0, "FaûedÅÿwrôêPIDÅÿfûê%s", 
pid_∑th
);

195 if(
pid_∑th
Ë
	`‰ì
(pid_path);

196 
	`f˛o£
(
pid_fûe
);

199 
îr‹
:

200 if(
pid_∑th
Ë
	`‰ì
(pid_path);

201 if(
pid_fûe
Ë
	`f˛o£
(pid_file);

203 
	}
}

206 
	$Unixy_d´m⁄ize
(
dochdú
)

209 
rc
 = 
	`d´m⁄
(!
dochdú
, 1);

210 
	`check
(
rc
 == 0, "FailedÅo daemonize.");

214 
îr‹
:

216 
	}
}

219 
b°rög
 
	$Unixy_gëcwd
()

221 *
wd
 = 
	`ˇŒoc
(
PATH_MAX
 + 1, 1);

222 
b°rög
 
dú
 = 
NULL
;

224 
	`check
(
	`gëcwd
(
wd
, 
PATH_MAX
-1), "CouldÇot get current working directory.");

225 
wd
[
PATH_MAX
] = '\0';

227 
dú
 = 
	`b‰omc°r
(
wd
);

229 
îr‹
:

231 
	`‰ì
(
wd
);

232  
dú
;

233 
	}
}

	@unixy.h

35 #i‚de‡
_unixy_h


36 
	#_unixy_h


	)

38 
	~<b°rög.h
>

39 
	~<uni°d.h
>

41 *
	gm2¥ogøm
;

43 
Unixy_chroŸ
(
b°rög
 
∑th
);

45 
Unixy_ö_chroŸ
();

47 
Unixy_dr›_¥iv
(
b°rög
 
∑th
);

49 
b°rög
 
Unixy_gëcwd
();

51 
Unixy_pid_fûe
(
b°rög
 
∑th
);

53 
Unixy_d´m⁄ize
(
dochdú
);

55 
Unixy_°ûl_ru¬ög
(
b°rög
 
pid_∑th
, 
pid_t
 *
pid
);

57 
Unixy_ªmove_dód_pidfûe
(
b°rög
 
pid_∑th
);

59 
pid_t
 
Unixy_pid_ªad
(
b°rög
 
pid_∑th
);

	@upload.c

35 
	~<sys/°©.h
>

36 
	~"u∂ﬂd.h
"

37 
	~"dbg.h
"

38 
	~"£âög.h
"

39 
	~"ª•⁄£.h
"

41 
b°rög
 
	gUPLOAD_STORE
 = 
NULL
;

42 
mode_t
 
	gUPLOAD_MODE
 = 0;

43 
ègb°rög
 
	gUPLOAD_MODE_DEFAULT
 = 
bsSètic
("0600");

44 
ègb°rög
 
	gUPLOAD_STREAM
 = 
bsSètic
("UPLOAD_STREAM");

45 
ègb°rög
 
	gUPLOAD_STREAM_DONE
 = 
bsSètic
("UPLOAD_STREAM_DONE");

47 
ölöe
 
	$°ªam_to_disk
(
IOBuf
 *
iob
, 
c⁄ã¡_Àn
, 
tmpfd
)

49 *
d©a
 = 
NULL
;

50 
avaû
 = 0;

52 
	`debug
("max c⁄ã¡Üígth: %d, c⁄ã¡_Àn: %d", 
MAX_CONTENT_LENGTH
, 
c⁄ã¡_Àn
);

54 
	`IOBuf_ªsize
(
iob
, 
MAX_CONTENT_LENGTH
);

56 
c⁄ã¡_Àn
 > 0) {

57 
d©a
 = 
	`IOBuf_ªad_some
(
iob
, &
avaû
);

58 
	`check
(!
	`IOBuf_˛o£d
(
iob
), "Closed whileÑeading from IOBuf.");

59 
c⁄ã¡_Àn
 -
avaû
;

60 
	`check
(
	`wrôe
(
tmpfd
, 
d©a
, 
avaû
) ==ávail, "FailedÅo writeÑequestedámountÅoÅempfile: %d",ávail);

62 
	`check
(
	`IOBuf_ªad_commô
(
iob
, 
avaû
) != -1, "Final commit failed streamingÅo disk.");

65 
	`check
(
c⁄ã¡_Àn
 == 0, "FailedÅo writeÉverythingÅoÅheÜarge uploadÅmpfile.");

69 
îr‹
:

71 
	}
}

74 
	$U∂ﬂd_nŸify
(
C⁄√˘i⁄
 *
c⁄n
, 
H™dÀr
 *
h™dÀr
, c⁄° *
°age
, 
b°rög
 
tmp_«me
)

76 
b°rög
 
key
 = 
	`bf‹m©
("x-m⁄gªl2-u∂ﬂd-%s", 
°age
);

77 
	`Reque°_£t
(
c⁄n
->
ªq
, 
key
, 
	`b°r˝y
(
tmp_«me
), 1);

79  
	`C⁄√˘i⁄_£nd_to_h™dÀr
(
c⁄n
, 
h™dÀr
, "", 0, 
NULL
);

80 
	}
}

82 
	$U∂ﬂd_fûe
(
C⁄√˘i⁄
 *
c⁄n
, 
H™dÀr
 *
h™dÀr
, 
c⁄ã¡_Àn
)

84 
rc
 = 0;

85 
tmpfd
 = 0;

86 
b°rög
 
tmp_«me
 = 
NULL
;

87 
b°rög
 
ªsu…
 = 
NULL
;

89 if(
UPLOAD_STORE
 =
NULL
) {

90 
UPLOAD_STORE
 = 
	`Sëtög_gë_°r
("u∂ﬂd.ãmp_°‹e", 
NULL
);

91 
	`îr‹_u∆ess
(
UPLOAD_STORE
, 
c⁄n
, 413, "Reque°É¡ôy i†toÿœrge: %d,ándÇÿu∂ﬂd.ãmp_°‹ê£âög f‹ whîêtÿpuàthêbig fûes.", 
c⁄ã¡_Àn
);

93 
UPLOAD_STORE
 = 
	`b°r˝y
(UPLOAD_STORE);

96 if(
UPLOAD_MODE
 == 0) {

97 
b°rög
 
mode
 = 
	`Sëtög_gë_°r
("u∂ﬂd.ãmp_°‹e_mode", &
UPLOAD_MODE_DEFAULT
);

98 
	`log_öfo
("Wû»£àmodêf‹ u∂ﬂdÅem∞°‹êto: %s", 
	`bd©a
(
mode
));

100 
	`check
(
	`bd©a
(
mode
Ë!
NULL
, "Mode data is NULL")

101 
UPLOAD_MODE
 = 
	`°πoul
((c⁄° *)
	`bd©a
(
mode
), 
NULL
, 0);

102 
	`check
(
UPLOAD_MODE
 > 0, "FailedÅo convert upload.temp_store_modeÅoáÇumber.");

103 
	`check
(
UPLOAD_MODE
 < 066666, "InvÆid modêth©'†wayÅoÿbig: %s.", 
	`bd©a
(
mode
));

106 
tmp_«me
 = 
	`b°r˝y
(
UPLOAD_STORE
);

108 
tmpfd
 = 
	`mk°emp
((*)
tmp_«me
->
d©a
);

109 
	`check
(
tmpfd
 != -1, "FailedÅo create secureÅempfile, did youÉnd it with XXXXXX?");

111 
	`log_öfo
("WrôögÅempfûê%†f‹Ü¨gêu∂ﬂd.", 
	`bd©a
(
tmp_«me
));

113 
rc
 = 
	`chmod
((*)
tmp_«me
->
d©a
, 
UPLOAD_MODE
);

114 
	`check
(
rc
 == 0, "FailedÅo chmod.");

116 
rc
 = 
	`U∂ﬂd_nŸify
(
c⁄n
, 
h™dÀr
, "°¨t", 
tmp_«me
);

117 
	`check
(
rc
 == 0, "FailedÅoÇotify ofÅhe start of upload.");

119 
rc
 = 
	`°ªam_to_disk
(
c⁄n
->
iob
, 
c⁄ã¡_Àn
, 
tmpfd
);

120 
	`check
(
rc
 == 0, "FailedÅo streamÅo disk.");

122 
rc
 = 
	`U∂ﬂd_nŸify
(
c⁄n
, 
h™dÀr
, "d⁄e", 
tmp_«me
);

123 
	`check
(
rc
 == 0, "FailedÅoÇotifyÅheÉnd ofÅhe upload.");

125 
	`bde°roy
(
ªsu…
);

126 
	`bde°roy
(
tmp_«me
);

127 
	`fd˛o£
(
tmpfd
);

130 
îr‹
:

131 if(
ªsu…
Ë
	`bde°roy
(result);

132 
	`fd˛o£
(
tmpfd
);

134 if(
tmp_«me
 !
NULL
) {

135 
	`u∆ök
((*)
tmp_«me
->
d©a
);

136 
	`bde°roy
(
tmp_«me
);

140 
	}
}

142 
	$add_to_hash
(
hash_t
 *
hash
, 
b°rög
 
key
, b°rög 
vÆ
)

144 
b°rLi°
 *
vÆ_li°
 = 
NULL
;

145 
rc
 = 0;

148 
vÆ_li°
 = 
	`b°rLi°Cª©e
();

149 
rc
 = 
	`b°rLi°AŒoc
(
vÆ_li°
, 1);

150 
	`check
(
rc
 =
BSTR_OK
, "Couldn'tállocate space in hash.");

152 
vÆ_li°
->
íåy
[0] = 
vÆ
;

153 
vÆ_li°
->
qty
 = 1;

154 
	`hash_Æloc_ö£π
(
hash
, 
	`b°r˝y
(
key
), 
vÆ_li°
);

158 
îr‹
:

160 
	}
}

162 
	$U∂ﬂd_°ªam
(
C⁄√˘i⁄
 *
c⁄n
, 
H™dÀr
 *
h™dÀr
, 
c⁄ã¡_Àn
)

164 *
d©a
 = 
NULL
;

165 
avaû
 = 0;

166 
off£t
 = 0;

167 
fú°_chunk
 = 1;

168 
rc
;

169 
hash_t
 *
Æthódîs
 = 
NULL
;

170 
b°rög
 
off£t°r
;

172 
	`debug
("max c⁄ã¡Üígth: %d, c⁄ã¡_Àn: %d", 
MAX_CONTENT_LENGTH
, 
c⁄ã¡_Àn
);

174 
	`IOBuf_ªsize
(
c⁄n
->
iob
, 
MAX_CONTENT_LENGTH
);

176 
c⁄ã¡_Àn
 > 0) {

177 if(
fú°_chunk
) {

179 
d©a
 = 
	`IOBuf_ªad_some
(
c⁄n
->
iob
, &
avaû
);

180 } if(
c⁄n
->
£ndCªdôs
 > 0) {

182 
d©a
 = 
	`IOBuf_ªad
(
c⁄n
->
iob
, c⁄n->
£ndCªdôs
 < 
c⁄ã¡_Àn
 ? c⁄n->£ndCªdô†: c⁄ã¡_Àn, &
avaû
);

183 
c⁄n
->
£ndCªdôs
 -
avaû
;

186 
	`èsk¶ìp
(&
c⁄n
->
u∂ﬂdRídez
);

190 
	`check
(!
	`IOBuf_˛o£d
(
c⁄n
->
iob
), "Closed whileÑeading from IOBuf.");

191 
c⁄ã¡_Àn
 -
avaû
;

193 
off£t°r
 = 
	`bf‹m©
("%d", 
off£t
);

195 if(
fú°_chunk
) {

196 
	`Reque°_£t
(
c⁄n
->
ªq
, &
UPLOAD_STREAM
, 
off£t°r
, 1);

197 if(
c⁄ã¡_Àn
 == 0) {

198 
	`Reque°_£t
(
c⁄n
->
ªq
, &
UPLOAD_STREAM_DONE
, 
	`b‰omc°r
("1"), 1);

201 
Æthódîs
 = 
	`hash_¸óã
(2, (
hash_comp_t
)
b°rcmp
, 
b°r_hash_fun
);

202 
	`add_to_hash
(
Æthódîs
, &
UPLOAD_STREAM
, 
off£t°r
);

203 if(
c⁄ã¡_Àn
 == 0) {

204 
	`add_to_hash
(
Æthódîs
, &
UPLOAD_STREAM_DONE
, 
	`b‰omc°r
("1"));

208 
rc
 = 
	`C⁄√˘i⁄_£nd_to_h™dÀr
(
c⁄n
, 
h™dÀr
, 
d©a
, 
avaû
, 
Æthódîs
);

209 
	`check_debug
(
rc
 == 0, "FailedÅo deliverÅoÅhe handler.");

211 if(
Æthódîs
 !
NULL
) {

212 
	`hash_‰ì_nodes
(
Æthódîs
);

213 
	`hash_de°roy
(
Æthódîs
);

214 
Æthódîs
 = 
NULL
;

217 
	`check
(
	`IOBuf_ªad_commô
(
c⁄n
->
iob
, 
avaû
) != -1, "Commit failed while streaming.");

219 
fú°_chunk
 = 0;

220 
off£t
 +
avaû
;

223 
	`check
(
c⁄ã¡_Àn
 == 0, "FailedÅo writeÉverythingÅoÅheÜarge uploadÅmpfile.");

227 
îr‹
:

229 
	}
}

	@upload.h

1 #i‚de‡
_u∂ﬂd_h


2 
	#_u∂ﬂd_h


	)

4 
	~"c⁄√˘i⁄.h
"

5 
	~"h™dÀr.h
"

7 
U∂ﬂd_fûe
(
C⁄√˘i⁄
 *
c⁄n
, 
H™dÀr
 *
h™dÀr
, 
c⁄ã¡_Àn
);

8 
U∂ﬂd_nŸify
(
C⁄√˘i⁄
 *
c⁄n
, 
H™dÀr
 *
h™dÀr
, c⁄° *
°age
, 
b°rög
 
tmp_«me
);

10 
U∂ﬂd_°ªam
(
C⁄√˘i⁄
 *
c⁄n
, 
H™dÀr
 *
h™dÀr
, 
c⁄ã¡_Àn
);

	@version.h

1 
	#VERSION
 "M⁄gªl2/1.9.1"

	)

	@websocket.c

1 
	~<websockë.h
>

2 
	~<dbg.h
>

3 
	~<pﬁ¨s¶/sha1.h
>

5 
ègb°rög
 
	gWS_REQ_METHOD
 = 
bsSètic
("HYBI");

6 
ègb°rög
 
	gWS_CONNECTION
 = 
bsSètic
("connection");

7 
ègb°rög
 
	gWS_UPGRADE
 = 
bsSètic
("upgrade");

8 
ègb°rög
 
	gWS_WEBSOCKET
 = 
bsSètic
("websocket");

9 
ègb°rög
 
	gWS_HOST
 = 
bsSètic
("host");

10 
ègb°rög
 
	gWS_SEC_WS_KEY
 = 
bsSètic
("sec-websocket-key");

11 
ègb°rög
 
	gWS_SEC_WS_VER
 = 
bsSètic
("sec-websocket-version");

12 
ègb°rög
 
	gWS_FLAGS
 = 
bsSètic
("FLAGS");

14 
	#WS_GUID
 "258EAFA5-E914-47DA-95CA-C5AB0DC85B11"

	)

16 
b°rög
 
	$websockë_make_hódî
(
Êags
,
uöt64_t
 
Àngth
, 
masked
,
key
[])

18 
buf
[14];

19 
whîe
=0;

20 if(
masked
) masked=0x80;

21 
buf
[
whîe
++]=
Êags
;

22 if(
Àngth
 < 126) {

23 
buf
[
whîe
++]=
masked
|
Àngth
;

25 if(
Àngth
 < 65536) {

26 
buf
[
whîe
++]=
masked
|126;

27 
buf
[
whîe
++]=
Àngth
>>8;

28 
buf
[
whîe
++]=
Àngth
&0xff;

31 
buf
[
whîe
++]=
masked
|127;

32 
buf
[
whîe
++]=(
Àngth
>>56)&0xff;

33 
buf
[
whîe
++]=(
Àngth
>>48)&0xff;

34 
buf
[
whîe
++]=(
Àngth
>>40)&0xff;

35 
buf
[
whîe
++]=(
Àngth
>>32)&0xff;

36 
buf
[
whîe
++]=(
Àngth
>>24)&0xff;

37 
buf
[
whîe
++]=(
Àngth
>>16)&0xff;

38 
buf
[
whîe
++]=(
Àngth
>>8)&0xff;

39 
buf
[
whîe
++]=(
Àngth
)&0xff;

41 if(
masked
) {

42 
buf
[
whîe
++]=
key
[0];

43 
buf
[
whîe
++]=
key
[1];

44 
buf
[
whîe
++]=
key
[2];

45 
buf
[
whîe
++]=
key
[3];

47  
	`blk2b°r
(
buf
,
whîe
);

48 
	}
}

50 
b°rög
 
	$websockë_chÆÀnge
(
b°rög
 
öput
)

52 
b°rög
 
buf
=
NULL
;

53 
b°rög
 
tmp°rög
=
NULL
;

54 
b°rög
 
ícodedSha1
=
NULL
;

56 
buf
 = 
	`b‰omc°øŒoc
(20,"");

57 
	`check_mem
(
buf
);

59 
tmp°rög
=
	`b°r˝y
(
öput
);

60 
	`check_mem
(
tmp°rög
);

62 
	`check
(
BSTR_OK
 =
	`bˇtc°r
(
tmp°rög
, 
WS_GUID
),"FailedÅoállocate memory");

64 
	`sha1
((*)
	`bd©a
(
tmp°rög
),
	`bÀngth
—mp°rög),(*)bd©a(
buf
));

65 
buf
->
¶í
=20;

66 
ícodedSha1
=
	`bBa£64Encode
(
buf
);

68 
	`bde°roy
(
tmp°rög
);

69 
	`bde°roy
(
buf
);

78  
ícodedSha1
;

80 
îr‹
:

81 
	`bde°roy
(
buf
);

82 
	`bde°roy
(
tmp°rög
);

83 
	`bde°roy
(
ícodedSha1
);

84  
NULL
;

85 
	}
}

	@websocket.h

1 #i‚de‡
_websockë_h


2 
	#_websockë_h


	)

4 
	~<b°rög.h
>

6 
ègb°rög
 
WS_REQ_METHOD
;

7 
ègb°rög
 
WS_CONNECTION
;

8 
ègb°rög
 
WS_UPGRADE
;

9 
ègb°rög
 
WS_WEBSOCKET
;

10 
ègb°rög
 
WS_HOST
;

11 
ègb°rög
 
WS_SEC_WS_KEY
;

12 
ègb°rög
 
WS_SEC_WS_VER
;

13 
ègb°rög
 
WS_FLAGS
;

15 
ölöe
 
öt64_t
 
	$Websockë_∑ckë_Àngth
(c⁄° *
d©a
, 
avaû
)

17 
uöt64_t
 
Àn
;

18 
mask
;

20 i‡(
avaû
 < 2)  -1;

21 
Àn
 = (
d©a
[1] & 0x7f);

22 
mask
 = ((
d©a
[1] & 0x80) != 0);

24 i‡(
Àn
<126) {

25 
Àn
 =Üen+2;

27 i‡(
Àn
 == 126) {

28 i‡(
avaû
 < 4)  -1;

29 
Àn
 = (
d©a
[2] << 8) | data[3];

30 
Àn
 +=4;

33 i‡(
avaû
 < 10)  -1;

34 i‡(
d©a
[2]&0x80)  -2;

35 
Àn
 = ((
uöt64_t
Ë
d©a
[2]) << 56 |

36 ((
uöt64_t
Ë
d©a
[3]) << 48 |

37 ((
uöt64_t
Ë
d©a
[4]) << 40 |

38 ((
uöt64_t
Ë
d©a
[5]) << 32 |

39 ((
uöt64_t
Ë
d©a
[6]) << 24 |

40 ((
uöt64_t
Ë
d©a
[7]) << 16 |

41 ((
uöt64_t
Ë
d©a
[8]) << 8 |

42 ((
uöt64_t
Ë
d©a
[9]);

43 
Àn
 +=10;

45 if(
mask
Ë
Àn
+=4;

46 if(
Àn
&0x8000000000000000ULL)  -2;

47  
Àn
;

48 
	}
}

50 
ölöe
 
	$Websockë_hódî_Àngth
(c⁄° *
d©a
, 
avaû
)

52 
uöt64_t
 
Àn
;

53 
hódî_size
=0;

54 
mask
;

56 i‡(
avaû
 < 2)  -1;

57 
Àn
 = (
d©a
[1] & 0x7f);

58 
mask
 = ((
d©a
[1] & 0x80) != 0);

60 i‡(
Àn
<126) {

61 
hódî_size
=2;

63 i‡(
Àn
 == 126) {

64 i‡(
avaû
 < 4)  -1;

65 
hódî_size
=4;

68 i‡(
avaû
 < 10)  -1;

69 i‡(
d©a
[2]&0x80)  -2;

70 
hódî_size
=10;

72 if(
mask
Ë
hódî_size
+=4;

73  
hódî_size
;

74 
	}
}

76 
ölöe
 
	$WS_mask
(c⁄° *
hódî
) {

77  (
hódî
[1] & 0x80) != 0;

78 
	}
}

80 
ölöe
 
	$WS_fö
(c⁄° *
hódî
) {

81  (
hódî
[0] & 0x80) != 0;

82 
	}
}

84 
ölöe
 
	$WS_is_c⁄åﬁ
(c⁄° *
hódî
) {

85  (
hódî
[0] & 0x8) != 0;

86 
	}
}

88 
ölöe
 
	$WS_is_c⁄töu©i⁄
(c⁄° *
hódî
) {

89  (
hódî
[0] & 0xf) == 0;

90 
	}
}

93 
ölöe
 c⁄° * 
	$WS_vÆid©e_∑ckë
(c⁄° * 
hódî
,
c⁄töu©i⁄Ex≥˘ed
) {

95 i‡(
c⁄töu©i⁄Ex≥˘ed
 && !(
	`WS_is_c⁄åﬁ
(
hódî
)|
	`WS_is_c⁄töu©i⁄
(header)))

97 i‡(
	`WS_is_c⁄töu©i⁄
(
hódî
Ë&& !
c⁄töu©i⁄Ex≥˘ed
)

99 i‡(!
	`WS_mask
(
hódî
))

101 i‡(!
	`WS_fö
(
hódî
Ë&& 
	`WS_is_c⁄åﬁ
(header))

103 if(
	`WS_is_c⁄åﬁ
(
hódî
) && ((header[1]&0x7f) >= 126))

105  
NULL
;

106 
	}
}

108 
b°rög
 
websockë_make_hódî
(
Êags
,
uöt64_t
 
Àngth
, 
masked
,
key
[]);

110 
b°rög
 
websockë_chÆÀnge
(b°rög 
öput
);

112 
	eWs_Fœgs
 {

113 
	mWSFLAG_CONN
=1,

114 
	mWSFLAG_UPGRADE
=2,

115 
	mWSFLAG_HOST
=4,

116 
	mWSFLAG_SEC_KEY
=8,

117 
	mWSFLAG_SEC_VER
=16

	@xrequest.c

1 
	~"xªque°.h
"

2 
	~"adt/hash.h
"

3 
	~"mem/hÆloc.h
"

4 
	~"c⁄√˘i⁄.h
"

5 
	~<dlf˙.h
>

7 
	#MAX_DISPATCHER_COUNT
 128

	)

9 
hash_t
 *
	gDISPATCHER_DICT
 = 
NULL
;

11 
	$Xªque°_öô
()

13 
DISPATCHER_DICT
=
	`hash_¸óã
(
MAX_DISPATCHER_COUNT
, (
hash_comp_t
)
b°rcmp
, 
b°r_hash_fun
);

14 
	`check_mem
(
DISPATCHER_DICT
);

17 
îr‹
:

19 
	}
}

22 
	$Xªque°_lﬂd
(
Sîvî
 *
§v
, 
b°rög
 
lﬂd_∑th
, 
äs_vÆue_t
 *
c⁄fig
)

24 
size_t
 
i
;

26 if(
DISPATCHER_DICT
 =
NULL
) {

27 
	`check
(
	`Xªque°_öô
() == 0, "FailedÅo initialize XREQ storage.");

30 *
lib
=
	`dl›í
(
	`bd©a
(
lﬂd_∑th
), 
RTLD_LAZY
 | 
RTLD_LOCAL
);

31 
	`check
(
lib
 !
NULL
, "FaûedÅÿlﬂd XREQ %s: %s", 
	`bd©a
(
lﬂd_∑th
), 
	`dÀº‹
());

33 
xªque°_öô_cb
 
öô
 = 
	`dlsym
(
lib
, "xrequest_init");

34 
	`check
(
öô
 !
NULL
, "XREQ %†d€¢'àhavê™ inô fun˘i⁄.", 
	`bd©a
(
lﬂd_∑th
));

36 
size_t
 
nkeys
 = 0;

37 
b°rög
 *
keys
=
NULL
;

39 
dñivî_fun˘i⁄
 
di•©chî
 = 
	`öô
(
§v
,
lﬂd_∑th
, 
c⁄fig
, &
keys
, &
nkeys
);

40 
	`check
(
nkeys
 >0 && 
keys
 !
NULL
 && 
di•©chî
 != NULL,

41 "InvÆidÑesu… from XREQ %†öô", 
	`bd©a
(
lﬂd_∑th
));

43 
i
=0;i<
nkeys
;++i) {

44 
	`hash_Æloc_ö£π
(
DISPATCHER_DICT
, 
keys
[
i
], 
di•©chî
);

48 
îr‹
:

50 
	}
}

52 
	$di•©ch_exãnded_ªque°
(
C⁄√˘i⁄
 *
c⁄n
,

53 
b°rög
 
key
, 
äs_vÆue_t
 *
vÆue
)

55 
	`check
(
DISPATCHER_DICT
 !
NULL
, "No XREQ dispatchers installed.");

56 
hnode_t
 *
m©ch
 = 
	`hash_lookup
(
DISPATCHER_DICT
, 
key
);

58 
	`check
(
m©ch
 !
NULL
, "Couldn'àföd XREQ f‹ \"%s\".", 
	`bd©a
(
key
));

60 
	`check
(
m©ch
->
hash_d©a
 !
NULL
, "NULL XREQÉ¡ry f‹ \"%s\".",
	`bd©a
(
key
));

61 
dñivî_fun˘i⁄
 
cb
 = 
m©ch
->
hash_d©a
;

62  
	`C⁄√˘i⁄_dñivî_íqueue
(
c⁄n
,
cb
,
vÆue
);

64 
îr‹
:

66 
	}
}

	@xrequest.h

1 
	~"b°rög.h
"

2 
	~"h™dÀr.h
"

3 
	~"äë°rögs.h
"

4 
	~"c⁄√˘i⁄.h
"

6 
	$dñivî_fun˘i⁄
 (*
	txªque°_öô_cb
)(
	tSîvî
 *
	t§v
, 
	tb°rög
 
	tlﬂd_∑th
, 
	täs_vÆue_t
 *
	tc⁄fig
, b°rög **
	tout_keys
, 
	tsize_t
 *
	tout_kÀn
);

7 
	`di•©ch_exãnded_ªque°
(
C⁄√˘i⁄
 *, 
b°rög
 
key
, 
äs_vÆue_t
 *);

8 
	`Xªque°_lﬂd
(
Sîvî
 *
§v
, 
b°rög
 
lﬂd_∑th
, 
äs_vÆue_t
 *
c⁄fig
);

	@zmq_compat.h

36 #i‚de‡
_ZMQ_COMPAT_H


37 
	#_ZMQ_COMPAT_H


	)

39 
	~<zmq.h
>

55 #i‚de‡
ZMQ_DONTWAIT


56 
	#ZMQ_DONTWAIT
 
ZMQ_NOBLOCK


	)

58 #i‡
ZMQ_VERSION_MAJOR
 == 2

59 
	#zmq_msg_£nd
(
msg
, 
sock
, 
›t
Ë
	`zmq_£nd
(sock, msg, o±)

	)

60 
	#zmq_msg_ªcv
(
msg
, 
sock
, 
›t
Ë
	`zmq_ªcv
(sock, msg, o±)

	)

61 
	#ZMQ_POLL_MSEC
 1000

62 #ñi‡
ZMQ_VERSION_MAJOR
 > 2

	)

63 #i‡
ZMQ_VERSION_MAJOR
 =3 && 
ZMQ_VERSION_MINOR
 < 1

65 #ñi‡
ZMQ_VERSION_MAJOR
 =3 && 
ZMQ_VERSION_MINOR
 == 1

66 #i‡
ZMQ_VERSION_PATCH
 == 0

67 
	#zmq_msg_£nd
(
msg
, 
sock
, 
›t
Ë
	`zmq_£ndmsg
(sock, msg, o±)

	)

68 
	#zmq_msg_ªcv
(
msg
, 
sock
, 
›t
Ë
	`zmq_ªcvmsg
(sock, msg, o±)

	)

71 
	#ZMQ_POLL_MSEC
 1

73 

	)

	@/usr/include/AvailabilityMacros.h

85 #i‚de‡
__AVAILABILITYMACROS__


86 
	#__AVAILABILITYMACROS__


	)

92 
	#MAC_OS_X_VERSION_10_0
 1000

	)

93 
	#MAC_OS_X_VERSION_10_1
 1010

	)

94 
	#MAC_OS_X_VERSION_10_2
 1020

	)

95 
	#MAC_OS_X_VERSION_10_3
 1030

	)

96 
	#MAC_OS_X_VERSION_10_4
 1040

	)

97 
	#MAC_OS_X_VERSION_10_5
 1050

	)

98 
	#MAC_OS_X_VERSION_10_6
 1060

	)

99 
	#MAC_OS_X_VERSION_10_7
 1070

	)

100 
	#MAC_OS_X_VERSION_10_8
 1080

	)

101 
	#MAC_OS_X_VERSION_10_9
 1090

	)

107 #i‚de‡
MAC_OS_X_VERSION_MIN_REQUIRED


108 #ifde‡
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__


109 #i‡(
__i386__
 || 
__x86_64__
Ë&& (
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
 < 
MAC_OS_X_VERSION_10_4
)

110 #w¨nög 
Buûdög
 
I¡ñ
 
wôh
 
Mac
 
OS
 
X
 
Dïloymít
 
T¨gë
 < 10.4 
is
 
övÆid
.

111 #ñi‡
__µc64__
 && (
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
 < 
MAC_OS_X_VERSION_10_4
)

112 #w¨nög 
Buûdög
 
µc64
 
wôh
 
Mac
 
OS
 
X
 
Dïloymít
 
T¨gë
 < 10.4 
is
 
övÆid
.

114 
	#MAC_OS_X_VERSION_MIN_REQUIRED
 
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__


	)

116 #i‡
__µc64__
 || 
__i386__
 || 
__x86_64__


117 
	#MAC_OS_X_VERSION_MIN_REQUIRED
 
MAC_OS_X_VERSION_10_4


	)

118 #ñi‡
__¨m__


119 
	#MAC_OS_X_VERSION_MIN_REQUIRED
 
MAC_OS_X_VERSION_10_5


	)

121 
	#MAC_OS_X_VERSION_MIN_REQUIRED
 
MAC_OS_X_VERSION_10_1


	)

129 #i‚de‡
MAC_OS_X_VERSION_MAX_ALLOWED


130 #i‡
MAC_OS_X_VERSION_MIN_REQUIRED
 > 
MAC_OS_X_VERSION_10_9


131 
	#MAC_OS_X_VERSION_MAX_ALLOWED
 
MAC_OS_X_VERSION_MIN_REQUIRED


	)

133 
	#MAC_OS_X_VERSION_MAX_ALLOWED
 
MAC_OS_X_VERSION_10_9


	)

140 #i‡
MAC_OS_X_VERSION_MAX_ALLOWED
 < 
MAC_OS_X_VERSION_MIN_REQUIRED


141 #îr‹ 
MAC_OS_X_VERSION_MAX_ALLOWED
 
mu°
 
be
 >
MAC_OS_X_VERSION_MIN_REQUIRED


143 #i‡
MAC_OS_X_VERSION_MIN_REQUIRED
 < 
MAC_OS_X_VERSION_10_0


144 #îr‹ 
MAC_OS_X_VERSION_MIN_REQUIRED
 
mu°
 
be
 >
MAC_OS_X_VERSION_10_0


150 #i‡
deföed
(
__GNUC__
Ë&& ((__GNUC__ >4Ë|| ((__GNUC__ =3Ë&& (
__GNUC_MINOR__
 >1))Ë&& (
MAC_OS_X_VERSION_MIN_REQUIRED
 >= 1020)

151 
	#WEAK_IMPORT_ATTRIBUTE
 
	`__©åibuã__
((
wók_imp‹t
))

	)

152 #ñi‡
deföed
(
__MWERKS__
Ë&& (__MWERKS__ >0x3205Ë&& (
MAC_OS_X_VERSION_MIN_REQUIRED
 >1020Ë&& !deföed(
__INTEL__
)

153 
	#WEAK_IMPORT_ATTRIBUTE
 
	`__©åibuã__
((
wók_imp‹t
))

	)

155 
	#WEAK_IMPORT_ATTRIBUTE


	)

161 #i‡
deföed
(
__has_„©uª
Ë&& deföed(
__has_©åibuã
)

162 #i‡
__has_©åibuã
(
dïªˇãd
)

163 
	#DEPRECATED_ATTRIBUTE
 
	`__©åibuã__
((
dïªˇãd
))

	)

164 #i‡
__has_„©uª
(
©åibuã_dïªˇãd_wôh_mesßge
)

165 
	#DEPRECATED_MSG_ATTRIBUTE
(
s
Ë
	`__©åibuã__
((
	`dïªˇãd
(s)))

	)

167 
	#DEPRECATED_MSG_ATTRIBUTE
(
s
Ë
	`__©åibuã__
((
dïªˇãd
))

	)

170 
	#DEPRECATED_ATTRIBUTE


	)

171 
	#DEPRECATED_MSG_ATTRIBUTE
(
s
)

	)

173 #ñi‡
deföed
(
__GNUC__
Ë&& ((__GNUC__ >4Ë|| ((__GNUC__ =3Ë&& (
__GNUC_MINOR__
 >= 1)))

174 
	#DEPRECATED_ATTRIBUTE
 
	`__©åibuã__
((
dïªˇãd
))

	)

175 #i‡(
__GNUC__
 >5Ë|| ((__GNUC__ =4Ë&& (
__GNUC_MINOR__
 >= 5))

176 
	#DEPRECATED_MSG_ATTRIBUTE
(
s
Ë
	`__©åibuã__
((
	`dïªˇãd
(s)))

	)

178 
	#DEPRECATED_MSG_ATTRIBUTE
(
s
Ë
	`__©åibuã__
((
dïªˇãd
))

	)

181 
	#DEPRECATED_ATTRIBUTE


	)

182 
	#DEPRECATED_MSG_ATTRIBUTE
(
s
)

	)

188 #i‡
deföed
(
__GNUC__
Ë&& ((__GNUC__ >4Ë|| ((__GNUC__ =3Ë&& (
__GNUC_MINOR__
 >= 1)))

189 
	#UNAVAILABLE_ATTRIBUTE
 
	`__©åibuã__
((
u«vaûabÀ
))

	)

191 
	#UNAVAILABLE_ATTRIBUTE


	)

200 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER


	)

208 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED
 
DEPRECATED_ATTRIBUTE


	)

215 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_0_AND_LATER
 
DEPRECATED_ATTRIBUTE


	)

217 #i‚de‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


218 #ifde‡
__has_©åibuã


219 #i‡
__has_©åibuã
(
avaûabûôy
)

220 
	~<Avaûabûôy.h
>

221 
	#__AVAILABILITY_MACROS_USES_AVAILABILITY
 1

	)

231 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


232 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER
 
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_1
, 
__IPHONE_NA
)

	)

233 #ñi‡
MAC_OS_X_VERSION_MAX_ALLOWED
 < 
MAC_OS_X_VERSION_10_1


234 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER
 
UNAVAILABLE_ATTRIBUTE


	)

235 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 < 
MAC_OS_X_VERSION_10_1


236 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER
 
WEAK_IMPORT_ATTRIBUTE


	)

238 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER


	)

247 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


248 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_1
, __MAC_10_1, 
__IPHONE_NA
, __IPHONE_NA)

	)

249 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_1


250 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED
 
DEPRECATED_ATTRIBUTE


	)

252 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED
 
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER


	)

261 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


262 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_1
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_1
, 
__IPHONE_NA
, __IPHONE_NA)

	)

263 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_1


264 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_1
 
DEPRECATED_ATTRIBUTE


	)

266 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_1
 
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER


	)

274 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


275 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_1_AND_LATER
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_1
, 
__IPHONE_NA
, __IPHONE_NA)

	)

276 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_1


277 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_1_AND_LATER
 
DEPRECATED_ATTRIBUTE


	)

279 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_1_AND_LATER


	)

288 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


289 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER
 
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_2
, 
__IPHONE_NA
)

	)

290 #ñi‡
MAC_OS_X_VERSION_MAX_ALLOWED
 < 
MAC_OS_X_VERSION_10_2


291 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER
 
UNAVAILABLE_ATTRIBUTE


	)

292 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 < 
MAC_OS_X_VERSION_10_2


293 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER
 
WEAK_IMPORT_ATTRIBUTE


	)

295 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER


	)

304 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


305 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_2
, __MAC_10_2, 
__IPHONE_NA
, __IPHONE_NA)

	)

306 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_2


307 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED
 
DEPRECATED_ATTRIBUTE


	)

309 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED
 
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER


	)

318 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


319 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_2
, 
__IPHONE_NA
, __IPHONE_NA)

	)

320 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_2


321 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2
 
DEPRECATED_ATTRIBUTE


	)

323 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2
 
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER


	)

332 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


333 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_1
, 
__MAC_10_2
, 
__IPHONE_NA
, __IPHONE_NA)

	)

334 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_2


335 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2
 
DEPRECATED_ATTRIBUTE


	)

337 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2
 
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER


	)

345 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


346 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_2_AND_LATER
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_2
, 
__IPHONE_NA
, __IPHONE_NA)

	)

347 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_2


348 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_2_AND_LATER
 
DEPRECATED_ATTRIBUTE


	)

350 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_2_AND_LATER


	)

359 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


360 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER
 
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_3
, 
__IPHONE_NA
)

	)

361 #ñi‡
MAC_OS_X_VERSION_MAX_ALLOWED
 < 
MAC_OS_X_VERSION_10_3


362 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER
 
UNAVAILABLE_ATTRIBUTE


	)

363 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 < 
MAC_OS_X_VERSION_10_3


364 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER
 
WEAK_IMPORT_ATTRIBUTE


	)

366 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER


	)

375 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


376 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_3
, __MAC_10_3, 
__IPHONE_NA
, __IPHONE_NA)

	)

377 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_3


378 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED
 
DEPRECATED_ATTRIBUTE


	)

380 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED
 
AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER


	)

389 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


390 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_3
, 
__IPHONE_NA
, __IPHONE_NA)

	)

391 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_3


392 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3
 
DEPRECATED_ATTRIBUTE


	)

394 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3
 
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER


	)

403 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


404 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_1
, 
__MAC_10_3
, 
__IPHONE_NA
, __IPHONE_NA)

	)

405 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_3


406 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3
 
DEPRECATED_ATTRIBUTE


	)

408 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3
 
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER


	)

417 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


418 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_2
, 
__MAC_10_3
, 
__IPHONE_NA
, __IPHONE_NA)

	)

419 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_3


420 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3
 
DEPRECATED_ATTRIBUTE


	)

422 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3
 
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER


	)

430 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


431 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_3_AND_LATER
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_3
, 
__IPHONE_NA
, __IPHONE_NA)

	)

432 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_3


433 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_3_AND_LATER
 
DEPRECATED_ATTRIBUTE


	)

435 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_3_AND_LATER


	)

444 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


445 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER
 
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_NA
)

	)

446 #ñi‡
MAC_OS_X_VERSION_MAX_ALLOWED
 < 
MAC_OS_X_VERSION_10_4


447 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER
 
UNAVAILABLE_ATTRIBUTE


	)

448 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 < 
MAC_OS_X_VERSION_10_4


449 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER
 
WEAK_IMPORT_ATTRIBUTE


	)

451 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER


	)

460 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


461 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_4
, __MAC_10_4, 
__IPHONE_NA
, __IPHONE_NA)

	)

462 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_4


463 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED
 
DEPRECATED_ATTRIBUTE


	)

465 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED
 
AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER


	)

474 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


475 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_4
, 
__IPHONE_NA
, __IPHONE_NA)

	)

476 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_4


477 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
DEPRECATED_ATTRIBUTE


	)

479 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER


	)

488 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


489 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_1
, 
__MAC_10_4
, 
__IPHONE_NA
, __IPHONE_NA)

	)

490 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_4


491 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
DEPRECATED_ATTRIBUTE


	)

493 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER


	)

502 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


503 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_2
, 
__MAC_10_4
, 
__IPHONE_NA
, __IPHONE_NA)

	)

504 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_4


505 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
DEPRECATED_ATTRIBUTE


	)

507 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER


	)

516 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


517 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_3
, 
__MAC_10_4
, 
__IPHONE_NA
, __IPHONE_NA)

	)

518 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_4


519 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
DEPRECATED_ATTRIBUTE


	)

521 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4
 
AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER


	)

529 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


530 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_4_AND_LATER
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_4
, 
__IPHONE_NA
, __IPHONE_NA)

	)

531 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_4


532 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_4_AND_LATER
 
DEPRECATED_ATTRIBUTE


	)

534 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_4_AND_LATER


	)

543 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


544 
	#AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER
 
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_NA
)

	)

545 #ñi‡
MAC_OS_X_VERSION_MAX_ALLOWED
 < 
MAC_OS_X_VERSION_10_5


546 
	#AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER
 
UNAVAILABLE_ATTRIBUTE


	)

547 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 < 
MAC_OS_X_VERSION_10_5


548 
	#AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER
 
WEAK_IMPORT_ATTRIBUTE


	)

550 
	#AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER


	)

559 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


560 
	#AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
, __MAC_10_5, 
__IPHONE_NA
, __IPHONE_NA)

	)

561 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_5


562 
	#AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED
 
DEPRECATED_ATTRIBUTE


	)

564 
	#AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED
 
AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER


	)

573 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


574 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_5
, 
__IPHONE_NA
, __IPHONE_NA)

	)

575 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_5


576 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
DEPRECATED_ATTRIBUTE


	)

578 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER


	)

587 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


588 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_1
, 
__MAC_10_5
, 
__IPHONE_NA
, __IPHONE_NA)

	)

589 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_5


590 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
DEPRECATED_ATTRIBUTE


	)

592 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER


	)

601 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


602 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_2
, 
__MAC_10_5
, 
__IPHONE_NA
, __IPHONE_NA)

	)

603 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_5


604 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
DEPRECATED_ATTRIBUTE


	)

606 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER


	)

615 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


616 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_3
, 
__MAC_10_5
, 
__IPHONE_NA
, __IPHONE_NA)

	)

617 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_5


618 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
DEPRECATED_ATTRIBUTE


	)

620 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER


	)

629 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


630 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_4
, 
__MAC_10_5
, 
__IPHONE_NA
, __IPHONE_NA)

	)

631 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_5


632 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
DEPRECATED_ATTRIBUTE


	)

634 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5
 
AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER


	)

642 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


643 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_5_AND_LATER
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_5
, 
__IPHONE_NA
, __IPHONE_NA)

	)

644 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_5


645 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_5_AND_LATER
 
DEPRECATED_ATTRIBUTE


	)

647 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_5_AND_LATER


	)

656 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


657 
	#AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER
 
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_NA
)

	)

658 #ñi‡
MAC_OS_X_VERSION_MAX_ALLOWED
 < 
MAC_OS_X_VERSION_10_6


659 
	#AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER
 
UNAVAILABLE_ATTRIBUTE


	)

660 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 < 
MAC_OS_X_VERSION_10_6


661 
	#AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER
 
WEAK_IMPORT_ATTRIBUTE


	)

663 
	#AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER


	)

672 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


673 
	#AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_6
, __MAC_10_6, 
__IPHONE_NA
, __IPHONE_NA)

	)

674 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_6


675 
	#AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED
 
DEPRECATED_ATTRIBUTE


	)

677 
	#AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED
 
AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER


	)

686 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


687 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_6
, 
__IPHONE_NA
, __IPHONE_NA)

	)

688 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_6


689 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6
 
DEPRECATED_ATTRIBUTE


	)

691 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6
 
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER


	)

700 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


701 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_1
, 
__MAC_10_6
, 
__IPHONE_NA
, __IPHONE_NA)

	)

702 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_6


703 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6
 
DEPRECATED_ATTRIBUTE


	)

705 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6
 
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER


	)

714 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


715 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_2
, 
__MAC_10_6
, 
__IPHONE_NA
, __IPHONE_NA)

	)

716 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_6


717 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6
 
DEPRECATED_ATTRIBUTE


	)

719 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6
 
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER


	)

728 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


729 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_3
, 
__MAC_10_6
, 
__IPHONE_NA
, __IPHONE_NA)

	)

730 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_6


731 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6
 
DEPRECATED_ATTRIBUTE


	)

733 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6
 
AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER


	)

742 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


743 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_4
, 
__MAC_10_6
, 
__IPHONE_NA
, __IPHONE_NA)

	)

744 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_6


745 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6
 
DEPRECATED_ATTRIBUTE


	)

747 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6
 
AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER


	)

756 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


757 
	#AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
, 
__MAC_10_6
, 
__IPHONE_NA
, __IPHONE_NA)

	)

758 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_6


759 
	#AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6
 
DEPRECATED_ATTRIBUTE


	)

761 
	#AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6
 
AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER


	)

769 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


770 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_6_AND_LATER
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_6
, 
__IPHONE_NA
, __IPHONE_NA)

	)

771 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_6


772 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_6_AND_LATER
 
DEPRECATED_ATTRIBUTE


	)

774 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_6_AND_LATER


	)

783 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


784 
	#AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER
 
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_NA
)

	)

785 #ñi‡
MAC_OS_X_VERSION_MAX_ALLOWED
 < 
MAC_OS_X_VERSION_10_7


786 
	#AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER
 
UNAVAILABLE_ATTRIBUTE


	)

787 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 < 
MAC_OS_X_VERSION_10_7


788 
	#AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER
 
WEAK_IMPORT_ATTRIBUTE


	)

790 
	#AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER


	)

799 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


800 
	#AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_7
, __MAC_10_7, 
__IPHONE_NA
, __IPHONE_NA)

	)

801 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_7


802 
	#AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED
 
DEPRECATED_ATTRIBUTE


	)

804 
	#AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED
 
AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER


	)

813 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


814 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_7
, 
__IPHONE_NA
, __IPHONE_NA)

	)

815 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_7


816 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
DEPRECATED_ATTRIBUTE


	)

818 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER


	)

827 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


828 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_1
, 
__MAC_10_7
, 
__IPHONE_NA
, __IPHONE_NA)

	)

829 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_7


830 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
DEPRECATED_ATTRIBUTE


	)

832 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER


	)

841 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


842 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_2
, 
__MAC_10_7
, 
__IPHONE_NA
, __IPHONE_NA)

	)

843 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_7


844 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
DEPRECATED_ATTRIBUTE


	)

846 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER


	)

855 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


856 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_3
, 
__MAC_10_7
, 
__IPHONE_NA
, __IPHONE_NA)

	)

857 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_7


858 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
DEPRECATED_ATTRIBUTE


	)

860 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER


	)

869 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


870 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_4
, 
__MAC_10_7
, 
__IPHONE_NA
, __IPHONE_NA)

	)

871 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_7


872 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
DEPRECATED_ATTRIBUTE


	)

874 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER


	)

883 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


884 
	#AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
, 
__MAC_10_7
, 
__IPHONE_NA
, __IPHONE_NA)

	)

885 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_7


886 
	#AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
DEPRECATED_ATTRIBUTE


	)

888 
	#AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER


	)

897 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


898 
	#AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_6
, 
__MAC_10_7
, 
__IPHONE_NA
, __IPHONE_NA)

	)

899 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_7


900 
	#AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
DEPRECATED_ATTRIBUTE


	)

902 
	#AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_7
 
AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER


	)

910 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


911 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_7
, 
__IPHONE_NA
, __IPHONE_NA)

	)

912 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_7


913 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
 
DEPRECATED_ATTRIBUTE


	)

915 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER


	)

924 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


925 
	#AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER
 
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_8
, 
__IPHONE_NA
)

	)

926 #ñi‡
MAC_OS_X_VERSION_MAX_ALLOWED
 < 
MAC_OS_X_VERSION_10_8


927 
	#AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER
 
UNAVAILABLE_ATTRIBUTE


	)

928 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 < 
MAC_OS_X_VERSION_10_8


929 
	#AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER
 
WEAK_IMPORT_ATTRIBUTE


	)

931 
	#AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER


	)

940 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


941 
	#AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_8
, __MAC_10_8, 
__IPHONE_NA
, __IPHONE_NA)

	)

942 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_8


943 
	#AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED
 
DEPRECATED_ATTRIBUTE


	)

945 
	#AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED
 
AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER


	)

954 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


955 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_8
, 
__IPHONE_NA
, __IPHONE_NA)

	)

956 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_8


957 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
DEPRECATED_ATTRIBUTE


	)

959 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER


	)

968 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


969 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_1
, 
__MAC_10_8
, 
__IPHONE_NA
, __IPHONE_NA)

	)

970 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_8


971 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
DEPRECATED_ATTRIBUTE


	)

973 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER


	)

982 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


983 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_2
, 
__MAC_10_8
, 
__IPHONE_NA
, __IPHONE_NA)

	)

984 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_8


985 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
DEPRECATED_ATTRIBUTE


	)

987 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER


	)

996 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


997 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_3
, 
__MAC_10_8
, 
__IPHONE_NA
, __IPHONE_NA)

	)

998 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_8


999 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
DEPRECATED_ATTRIBUTE


	)

1001 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER


	)

1010 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


1011 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_4
, 
__MAC_10_8
, 
__IPHONE_NA
, __IPHONE_NA)

	)

1012 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_8


1013 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
DEPRECATED_ATTRIBUTE


	)

1015 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER


	)

1024 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


1025 
	#AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
, 
__MAC_10_8
, 
__IPHONE_NA
, __IPHONE_NA)

	)

1026 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_8


1027 
	#AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
DEPRECATED_ATTRIBUTE


	)

1029 
	#AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER


	)

1038 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


1039 
	#AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_6
, 
__MAC_10_8
, 
__IPHONE_NA
, __IPHONE_NA)

	)

1040 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_8


1041 
	#AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
DEPRECATED_ATTRIBUTE


	)

1043 
	#AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER


	)

1052 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


1053 
	#AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_7
, 
__MAC_10_8
, 
__IPHONE_NA
, __IPHONE_NA)

	)

1054 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_8


1055 
	#AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
DEPRECATED_ATTRIBUTE


	)

1057 
	#AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_8
 
AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER


	)

1065 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


1066 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_8_AND_LATER
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_8
, 
__IPHONE_NA
, __IPHONE_NA)

	)

1067 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_8


1068 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_8_AND_LATER
 
DEPRECATED_ATTRIBUTE


	)

1070 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_8_AND_LATER


	)

1079 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


1080 
	#AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER
 
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_9
, 
__IPHONE_NA
)

	)

1081 #ñi‡
MAC_OS_X_VERSION_MAX_ALLOWED
 < 
MAC_OS_X_VERSION_10_9


1082 
	#AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER
 
UNAVAILABLE_ATTRIBUTE


	)

1083 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 < 
MAC_OS_X_VERSION_10_9


1084 
	#AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER
 
WEAK_IMPORT_ATTRIBUTE


	)

1086 
	#AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER


	)

1095 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


1096 
	#AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_9
, __MAC_10_9, 
__IPHONE_NA
, __IPHONE_NA)

	)

1097 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_9


1098 
	#AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED
 
DEPRECATED_ATTRIBUTE


	)

1100 
	#AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER_BUT_DEPRECATED
 
AVAILABLE_MAC_OS_X_VERSION_10_9_AND_LATER


	)

1109 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


1110 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_9
, 
__IPHONE_NA
, __IPHONE_NA)

	)

1111 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_9


1112 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
DEPRECATED_ATTRIBUTE


	)

1114 
	#AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER


	)

1123 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


1124 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_1
, 
__MAC_10_9
, 
__IPHONE_NA
, __IPHONE_NA)

	)

1125 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_9


1126 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
DEPRECATED_ATTRIBUTE


	)

1128 
	#AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER


	)

1137 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


1138 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_2
, 
__MAC_10_9
, 
__IPHONE_NA
, __IPHONE_NA)

	)

1139 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_9


1140 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
DEPRECATED_ATTRIBUTE


	)

1142 
	#AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER


	)

1151 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


1152 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_3
, 
__MAC_10_9
, 
__IPHONE_NA
, __IPHONE_NA)

	)

1153 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_9


1154 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
DEPRECATED_ATTRIBUTE


	)

1156 
	#AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER


	)

1165 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


1166 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_4
, 
__MAC_10_9
, 
__IPHONE_NA
, __IPHONE_NA)

	)

1167 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_9


1168 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
DEPRECATED_ATTRIBUTE


	)

1170 
	#AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER


	)

1179 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


1180 
	#AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
, 
__MAC_10_9
, 
__IPHONE_NA
, __IPHONE_NA)

	)

1181 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_9


1182 
	#AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
DEPRECATED_ATTRIBUTE


	)

1184 
	#AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER


	)

1193 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


1194 
	#AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_6
, 
__MAC_10_9
, 
__IPHONE_NA
, __IPHONE_NA)

	)

1195 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_9


1196 
	#AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
DEPRECATED_ATTRIBUTE


	)

1198 
	#AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER


	)

1207 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


1208 
	#AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_7
, 
__MAC_10_9
, 
__IPHONE_NA
, __IPHONE_NA)

	)

1209 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_9


1210 
	#AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
DEPRECATED_ATTRIBUTE


	)

1212 
	#AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
AVAILABLE_MAC_OS_X_VERSION_10_7_AND_LATER


	)

1221 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


1222 
	#AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_8
, 
__MAC_10_9
, 
__IPHONE_NA
, __IPHONE_NA)

	)

1223 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_9


1224 
	#AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
DEPRECATED_ATTRIBUTE


	)

1226 
	#AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_9
 
AVAILABLE_MAC_OS_X_VERSION_10_8_AND_LATER


	)

1234 #i‡
__AVAILABILITY_MACROS_USES_AVAILABILITY


1235 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_9_AND_LATER
 
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_9
, 
__IPHONE_NA
, __IPHONE_NA)

	)

1236 #ñi‡
MAC_OS_X_VERSION_MIN_REQUIRED
 >
MAC_OS_X_VERSION_10_9


1237 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_9_AND_LATER
 
DEPRECATED_ATTRIBUTE


	)

1239 
	#DEPRECATED_IN_MAC_OS_X_VERSION_10_9_AND_LATER


	)

	@/usr/include/arpa/inet.h

61 #i‚de‡
_ARPA_INET_H_


62 
	#_ARPA_INET_H_


	)

66 
	~<sys/cdefs.h
>

67 
	~<sys/_ty≥s.h
>

68 
	~<°döt.h
>

69 
	~<machöe/ídün.h
>

70 
	~<sys/_ídün.h
>

71 
	~<√töë/ö.h
>

73 
__BEGIN_DECLS


75 
ö_addr_t
 
öë_addr
(const *);

76 *
öë_¡ﬂ
(
ö_addr
);

77 c⁄° *
öë_¡›
(, c⁄° *, *, 
sockÀn_t
);

78 
öë_±⁄
(, const *, *);

80 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

81 
ascii2addr
(, const *, *);

82 *
addr2ascii
(, const *, , *);

83 
öë_©⁄
(c⁄° *, 
ö_addr
 *);

84 
ö_addr_t
 
öë_ aof
(
ö_addr
);

85 
ö_addr
 
öë_makóddr
(
ö_addr_t
, in_addr_t);

86 
ö_addr_t
 
öë_√tof
(
ö_addr
);

87 
ö_addr_t
 
öë_√tw‹k
(const *);

88 *
öë_√t_¡›
(, c⁄° *, , *, 
__d¨wö_size_t
);

89 
öë_√t_±⁄
(, c⁄° *, *, 
__d¨wö_size_t
);

90 *
öë_√è
(
ö_addr_t
, *, 
__d¨wö_size_t
);

91 
öë_nßp_addr
(const *, *, );

92 *
öë_nßp_¡ﬂ
(, const *, *);

95 
	g__END_DECLS


	@/usr/include/arpa/nameser_compat.h

39 #i‚de‡
_ARPA_NAMESER_COMPAT_


40 
	#_ARPA_NAMESER_COMPAT_


	)

42 
	#__BIND
 19950621

	)

44 
	~<machöe/ídün.h
>

46 #i‡!
deföed
(
BYTE_ORDER
) || \

47 (
	gBYTE_ORDER
 !
BIG_ENDIAN
 && 
BYTE_ORDER
 !
LITTLE_ENDIAN
 && \

48 
BYTE_ORDER
 !
PDP_ENDIAN
)

65 
	mid
 :16;

66 #i‡
BYTE_ORDER
 =
BIG_ENDIAN


68 
	mqr
: 1;

69 
	m›code
: 4;

70 
	mØ
: 1;

71 
	mtc
: 1;

72 
	mrd
: 1;

74 
	mø
: 1;

75 
	munu£d
 :1;

76 
	mad
: 1;

77 
	mcd
: 1;

78 
	mrcode
 :4;

80 #i‡
BYTE_ORDER
 =
LITTLE_ENDIAN
 || BYTE_ORDER =
PDP_ENDIAN


82 
	mrd
 :1;

83 
	mtc
 :1;

84 
	mØ
 :1;

85 
	m›code
 :4;

86 
	mqr
 :1;

88 
	mrcode
 :4;

89 
	mcd
: 1;

90 
	mad
: 1;

91 
	munu£d
 :1;

92 
	mø
 :1;

95 
	mqdcou¡
 :16;

96 
	m™cou¡
 :16;

97 
	mnscou¡
 :16;

98 
	m¨cou¡
 :16;

99 } 
	tHEADER
;

101 
	#PACKETSZ
 
NS_PACKETSZ


	)

102 
	#MAXDNAME
 
NS_MAXDNAME


	)

103 
	#MAXCDNAME
 
NS_MAXCDNAME


	)

104 
	#MAXLABEL
 
NS_MAXLABEL


	)

105 
	#HFIXEDSZ
 
NS_HFIXEDSZ


	)

106 
	#QFIXEDSZ
 
NS_QFIXEDSZ


	)

107 
	#RRFIXEDSZ
 
NS_RRFIXEDSZ


	)

108 
	#INT32SZ
 
NS_INT32SZ


	)

109 
	#INT16SZ
 
NS_INT16SZ


	)

110 
	#INADDRSZ
 
NS_INADDRSZ


	)

111 
	#IN6ADDRSZ
 
NS_IN6ADDRSZ


	)

112 
	#INDIR_MASK
 
NS_CMPRSFLGS


	)

113 
	#NAMESERVER_PORT
 
NS_DEFAULTPORT


	)

115 
	#S_ZONE
 
ns_s_zn


	)

116 
	#S_PREREQ
 
ns_s_¥


	)

117 
	#S_UPDATE
 
ns_s_ud


	)

118 
	#S_ADDT
 
ns_s_¨


	)

120 
	#QUERY
 
ns_o_quîy


	)

121 
	#IQUERY
 
ns_o_iquîy


	)

122 
	#STATUS
 
ns_o_°©us


	)

123 
	#NS_NOTIFY_OP
 
ns_o_nŸify


	)

124 
	#NS_UPDATE_OP
 
ns_o_upd©e


	)

126 
	#NOERROR
 
ns_r_n€º‹


	)

127 
	#FORMERR
 
ns_r_f‹mîr


	)

128 
	#SERVFAIL
 
ns_r_£rvÁû


	)

129 
	#NXDOMAIN
 
ns_r_nxdomaö


	)

130 
	#NOTIMP
 
ns_r_nŸim∂


	)

131 
	#REFUSED
 
ns_r_ªfu£d


	)

132 
	#YXDOMAIN
 
ns_r_yxdomaö


	)

133 
	#YXRRSET
 
ns_r_yxº£t


	)

134 
	#NXRRSET
 
ns_r_nxº£t


	)

135 
	#NOTAUTH
 
ns_r_nŸauth


	)

136 
	#NOTZONE
 
ns_r_nŸz⁄e


	)

138 
	#DELETE
 
ns_u›_dñëe


	)

139 
	#ADD
 
ns_u›_add


	)

141 
	#T_A
 
ns_t_a


	)

142 
	#T_NS
 
ns_t_ns


	)

143 
	#T_MD
 
ns_t_md


	)

144 
	#T_MF
 
ns_t_mf


	)

145 
	#T_CNAME
 
ns_t_˙ame


	)

146 
	#T_SOA
 
ns_t_sﬂ


	)

147 
	#T_MB
 
ns_t_mb


	)

148 
	#T_MG
 
ns_t_mg


	)

149 
	#T_MR
 
ns_t_mr


	)

150 
	#T_NULL
 
ns_t_nuŒ


	)

151 
	#T_WKS
 
ns_t_wks


	)

152 
	#T_PTR
 
ns_t_±r


	)

153 
	#T_HINFO
 
ns_t_höfo


	)

154 
	#T_MINFO
 
ns_t_möfo


	)

155 
	#T_MX
 
ns_t_mx


	)

156 
	#T_TXT
 
ns_t_txt


	)

157 
	#T_RP
 
ns_t_Ω


	)

158 
	#T_AFSDB
 
ns_t_afsdb


	)

159 
	#T_X25
 
ns_t_x25


	)

160 
	#T_ISDN
 
ns_t_isdn


	)

161 
	#T_RT
 
ns_t_π


	)

162 
	#T_NSAP
 
ns_t_nßp


	)

163 
	#T_NSAP_PTR
 
ns_t_nßp_±r


	)

164 
	#T_SIG
 
ns_t_sig


	)

165 
	#T_KEY
 
ns_t_key


	)

166 
	#T_PX
 
ns_t_px


	)

167 
	#T_GPOS
 
ns_t_gpos


	)

168 
	#T_AAAA
 
ns_t_ØØ


	)

169 
	#T_LOC
 
ns_t_loc


	)

170 
	#T_NXT
 
ns_t_nxt


	)

171 
	#T_EID
 
ns_t_eid


	)

172 
	#T_NIMLOC
 
ns_t_nimloc


	)

173 
	#T_SRV
 
ns_t_§v


	)

174 
	#T_ATMA
 
ns_t_©ma


	)

175 
	#T_NAPTR
 
ns_t_«±r


	)

176 
	#T_OPT
 
ns_t_›t


	)

177 
	#T_IXFR
 
ns_t_ix‰


	)

178 
	#T_AXFR
 
ns_t_ax‰


	)

179 
	#T_MAILB
 
ns_t_maûb


	)

180 
	#T_MAILA
 
ns_t_maûa


	)

181 
	#T_ANY
 
ns_t_™y


	)

183 
	#C_IN
 
ns_c_ö


	)

184 
	#C_CHAOS
 
ns_c_chaos


	)

185 
	#C_HS
 
ns_c_hs


	)

187 
	#C_NONE
 
ns_c_n⁄e


	)

188 
	#C_ANY
 
ns_c_™y


	)

190 
	#GETSHORT
 
NS_GET16


	)

191 
	#GETLONG
 
NS_GET32


	)

192 
	#PUTSHORT
 
NS_PUT16


	)

193 
	#PUTLONG
 
NS_PUT32


	)

	@/usr/include/assert.h

42 
	~<sys/cdefs.h
>

43 #ifde‡
__˝lu•lus


44 
	~<°dlib.h
>

52 #unde‡
as£π


53 #unde‡
__as£π


55 #ifde‡
NDEBUG


56 
	#as£π
(
e
Ë(()0)

	)

59 #i‚de‡
__GNUC__


61 
	g__BEGIN_DECLS


62 #i‚de‡
__˝lu•lus


63 
	$ab‹t
(Ë
__dód2
;

65 
	`¥ötf
(c⁄° * 
__ª°ri˘
, ...);

66 
__END_DECLS


68 
	#as£π
(
e
) \

69 ((Ë((
e
Ë? 0 : 
	`__as£π
 (#e, 
__FILE__
, 
__LINE__
)))

	)

70 
	#__as£π
(
e
, 
fûe
, 
löe
) \

71 (()
	`¥ötf
 ("%s:%u: faûedás£πi⁄ `%s'\n", 
fûe
, 
löe
, 
e
), 
	`ab‹t
())

	)

75 
__BEGIN_DECLS


76 
	$__as£π_πn
(c⁄° *, c⁄° *, , c⁄° *Ë
__dód2
;

77 #i‡
	`deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && ((__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__-0) < 1070)

78 
	$__ïrötf
(c⁄° *, c⁄° *, , c⁄° *Ë
__dód2
;

80 
__END_DECLS


82 #i‡
	`deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && ((__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__-0) < 1070)

83 
	#__as£π
(
e
, 
fûe
, 
löe
) \

84 
	`__ïrötf
 ("%s:%u: faûedás£πi⁄ `%s'\n", 
fûe
, 
löe
, 
e
)

	)

87 
	#__as£π
(
e
, 
fûe
, 
löe
) \

88 
	`__as£π_πn
 ((c⁄° *)-1L, 
fûe
, 
löe
, 
e
)

	)

91 #i‡
__DARWIN_UNIX03


92 
	#as£π
(
e
) \

93 (
	`__buûtö_ex≥˘
(!(
e
), 0Ë? 
	`__as£π_πn
(
__func__
, 
__FILE__
, 
__LINE__
, #eË: ()0)

	)

95 
	#as£π
(
e
) \

96 (
	`__buûtö_ex≥˘
(!(
e
), 0Ë? 
	`__as£π
 (#e, 
__FILE__
, 
__LINE__
Ë: ()0)

	)

	@/usr/include/ctype.h

66 #i‚def 
_CTYPE_H_


67 
	#_CTYPE_H_


	)

69 
	~<sys/cdefs.h
>

70 
	~<ru√ty≥.h
>

72 
	#_CTYPE_A
 0x00000100L

	)

73 
	#_CTYPE_C
 0x00000200L

	)

74 
	#_CTYPE_D
 0x00000400L

	)

75 
	#_CTYPE_G
 0x00000800L

	)

76 
	#_CTYPE_L
 0x00001000L

	)

77 
	#_CTYPE_P
 0x00002000L

	)

78 
	#_CTYPE_S
 0x00004000L

	)

79 
	#_CTYPE_U
 0x00008000L

	)

80 
	#_CTYPE_X
 0x00010000L

	)

81 
	#_CTYPE_B
 0x00020000L

	)

82 
	#_CTYPE_R
 0x00040000L

	)

83 
	#_CTYPE_I
 0x00080000L

	)

84 
	#_CTYPE_T
 0x00100000L

	)

85 
	#_CTYPE_Q
 0x00200000L

	)

86 
	#_CTYPE_SW0
 0x20000000L

	)

87 
	#_CTYPE_SW1
 0x40000000L

	)

88 
	#_CTYPE_SW2
 0x80000000L

	)

89 
	#_CTYPE_SW3
 0xc0000000L

	)

90 
	#_CTYPE_SWM
 0xe0000000L

	)

91 
	#_CTYPE_SWS
 30

	)

93 #ifde‡
_NONSTD_SOURCE


97 
	#_A
 
_CTYPE_A


	)

98 
	#_C
 
_CTYPE_C


	)

99 
	#_D
 
_CTYPE_D


	)

100 
	#_G
 
_CTYPE_G


	)

101 
	#_L
 
_CTYPE_L


	)

102 
	#_P
 
_CTYPE_P


	)

103 
	#_S
 
_CTYPE_S


	)

104 
	#_U
 
_CTYPE_U


	)

105 
	#_X
 
_CTYPE_X


	)

106 
	#_B
 
_CTYPE_B


	)

107 
	#_R
 
_CTYPE_R


	)

108 
	#_I
 
_CTYPE_I


	)

109 
	#_T
 
_CTYPE_T


	)

110 
	#_Q
 
_CTYPE_Q


	)

111 
	#_SW0
 
_CTYPE_SW0


	)

112 
	#_SW1
 
_CTYPE_SW1


	)

113 
	#_SW2
 
_CTYPE_SW2


	)

114 
	#_SW3
 
_CTYPE_SW3


	)

117 
	#__DARWIN_CTYPE_ölöe
 
__hódî_ölöe


	)

119 
	#__DARWIN_CTYPE_TOP_ölöe
 
__hódî_ölöe


	)

124 #i‡!
deföed
(
_DONT_USE_CTYPE_INLINE_
) && \

125 (
deföed
(
_USE_CTYPE_INLINE_
Ë|| deföed(
__GNUC__
Ë|| 
	$deföed
(
__˝lu•lus
))

128 
__BEGIN_DECLS


129 
	`___ru√ty≥
(
__d¨wö_˘_ru√_t
);

130 
__d¨wö_˘_ru√_t
 
	`___tﬁowî
(__darwin_ct_rune_t);

131 
__d¨wö_˘_ru√_t
 
	`___touµî
(__darwin_ct_rune_t);

132 
__END_DECLS


134 
__DARWIN_CTYPE_TOP_ölöe
 

135 
	$ißscii
(
_c
)

137  ((
_c
 & ~0x7F) == 0);

138 
	}
}

140 #ifde‡
USE_ASCII


141 
__DARWIN_CTYPE_ölöe
 

142 
	$__maskru√
(
__d¨wö_˘_ru√_t
 
_c
, 
_f
)

144  
_DeÁu…Ru√LoˇÀ
.
__ru√ty≥
[
_c
 & 0xff] & 
_f
;

145 
	}
}

147 
__BEGIN_DECLS


148 
__maskru√
(
__d¨wö_˘_ru√_t
, );

149 
	g__END_DECLS


152 
__DARWIN_CTYPE_ölöe
 

153 
	$__i°y≥
(
__d¨wö_˘_ru√_t
 
_c
, 
_f
)

155 #ifde‡
USE_ASCII


156  !!(
	`__maskru√
(
_c
, 
_f
));

158  (
	`ißscii
(
_c
Ë? !!(
_DeÁu…Ru√LoˇÀ
.
__ru√ty≥
[_c] & 
_f
)

159 : !!
	`__maskru√
(
_c
, 
_f
));

161 
	}
}

163 
__DARWIN_CTYPE_ölöe
 
__d¨wö_˘_ru√_t


164 
	$__is˘y≥
(
__d¨wö_˘_ru√_t
 
_c
, 
_f
)

166 #ifde‡
USE_ASCII


167  !!(
	`__maskru√
(
_c
, 
_f
));

169  (
_c
 < 0 || _¯>
_CACHED_RUNES
) ? 0 :

170 !!(
_DeÁu…Ru√LoˇÀ
.
__ru√ty≥
[
_c
] & 
_f
);

172 
	}
}

174 #ifde‡
USE_ASCII


175 
__DARWIN_CTYPE_ölöe
 
__d¨wö_˘_ru√_t


176 
	$__touµî
(
__d¨wö_˘_ru√_t
 
_c
)

178  
_DeÁu…Ru√LoˇÀ
.
__m≠uµî
[
_c
 & 0xff];

179 
	}
}

181 
__DARWIN_CTYPE_ölöe
 
__d¨wö_˘_ru√_t


182 
	$__tﬁowî
(
__d¨wö_˘_ru√_t
 
_c
)

184  
_DeÁu…Ru√LoˇÀ
.
__m≠lowî
[
_c
 & 0xff];

185 
	}
}

187 
__BEGIN_DECLS


188 
__d¨wö_˘_ru√_t
 
__touµî
(__darwin_ct_rune_t);

189 
__d¨wö_˘_ru√_t
 
__tﬁowî
(__darwin_ct_rune_t);

190 
	g__END_DECLS


193 
__DARWIN_CTYPE_ölöe
 

194 
	$__wcwidth
(
__d¨wö_˘_ru√_t
 
_c
)

196 
_x
;

198 i‡(
_c
 == 0)

200 
_x
 = ()
	`__maskru√
(
_c
, 
_CTYPE_SWM
|
_CTYPE_R
);

201 i‡((
_x
 & 
_CTYPE_SWM
) != 0)

202  ((
_x
 & 
_CTYPE_SWM
Ë>> 
_CTYPE_SWS
);

203  ((
_x
 & 
_CTYPE_R
) != 0 ? 1 : -1);

204 
	}
}

206 #i‚de‡
_EXTERNALIZE_CTYPE_INLINES_


208 
	#_tﬁowî
(
c
Ë
	`__tﬁowî
(c)

	)

209 
	#_touµî
(
c
Ë
	`__touµî
(c)

	)

211 
__DARWIN_CTYPE_TOP_ölöe
 

212 
	$iß um
(
_c
)

214  (
	`__i°y≥
(
_c
, 
_CTYPE_A
|
_CTYPE_D
));

215 
	}
}

217 
__DARWIN_CTYPE_TOP_ölöe
 

218 
	$ißÕha
(
_c
)

220  (
	`__i°y≥
(
_c
, 
_CTYPE_A
));

221 
	}
}

223 
__DARWIN_CTYPE_TOP_ölöe
 

224 
	$isbœnk
(
_c
)

226  (
	`__i°y≥
(
_c
, 
_CTYPE_B
));

227 
	}
}

229 
__DARWIN_CTYPE_TOP_ölöe
 

230 
	$is˙ål
(
_c
)

232  (
	`__i°y≥
(
_c
, 
_CTYPE_C
));

233 
	}
}

236 
__DARWIN_CTYPE_TOP_ölöe
 

237 
	$isdigô
(
_c
)

239  (
	`__is˘y≥
(
_c
, 
_CTYPE_D
));

240 
	}
}

242 
__DARWIN_CTYPE_TOP_ölöe
 

243 
	$isgøph
(
_c
)

245  (
	`__i°y≥
(
_c
, 
_CTYPE_G
));

246 
	}
}

248 
__DARWIN_CTYPE_TOP_ölöe
 

249 
	$i¶owî
(
_c
)

251  (
	`__i°y≥
(
_c
, 
_CTYPE_L
));

252 
	}
}

254 
__DARWIN_CTYPE_TOP_ölöe
 

255 
	$i•röt
(
_c
)

257  (
	`__i°y≥
(
_c
, 
_CTYPE_R
));

258 
	}
}

260 
__DARWIN_CTYPE_TOP_ölöe
 

261 
	$i•un˘
(
_c
)

263  (
	`__i°y≥
(
_c
, 
_CTYPE_P
));

264 
	}
}

266 
__DARWIN_CTYPE_TOP_ölöe
 

267 
	$is•a˚
(
_c
)

269  (
	`__i°y≥
(
_c
, 
_CTYPE_S
));

270 
	}
}

272 
__DARWIN_CTYPE_TOP_ölöe
 

273 
	$isuµî
(
_c
)

275  (
	`__i°y≥
(
_c
, 
_CTYPE_U
));

276 
	}
}

279 
__DARWIN_CTYPE_TOP_ölöe
 

280 
	$isxdigô
(
_c
)

282  (
	`__is˘y≥
(
_c
, 
_CTYPE_X
));

283 
	}
}

285 
__DARWIN_CTYPE_TOP_ölöe
 

286 
	$tﬂscii
(
_c
)

288  (
_c
 & 0x7F);

289 
	}
}

291 
__DARWIN_CTYPE_TOP_ölöe
 

292 
	$tﬁowî
(
_c
)

294  (
	`__tﬁowî
(
_c
));

295 
	}
}

297 
__DARWIN_CTYPE_TOP_ölöe
 

298 
	$touµî
(
_c
)

300  (
	`__touµî
(
_c
));

301 
	}
}

303 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

304 
__DARWIN_CTYPE_TOP_ölöe
 

305 
	$digôtoöt
(
_c
)

307  (
	`__maskru√
(
_c
, 0x0F));

308 
	}
}

310 
__DARWIN_CTYPE_TOP_ölöe
 

311 
	$ishexnumbî
(
_c
)

313  (
	`__i°y≥
(
_c
, 
_CTYPE_X
));

314 
	}
}

316 
__DARWIN_CTYPE_TOP_ölöe
 

317 
	$isideogøm
(
_c
)

319  (
	`__i°y≥
(
_c
, 
_CTYPE_I
));

320 
	}
}

322 
__DARWIN_CTYPE_TOP_ölöe
 

323 
	$i¢umbî
(
_c
)

325  (
	`__i°y≥
(
_c
, 
_CTYPE_D
));

326 
	}
}

328 
__DARWIN_CTYPE_TOP_ölöe
 

329 
	$i•h⁄ogøm
(
_c
)

331  (
	`__i°y≥
(
_c
, 
_CTYPE_Q
));

332 
	}
}

334 
__DARWIN_CTYPE_TOP_ölöe
 

335 
	$i§u√
(
_c
)

337  (
	`__i°y≥
(
_c
, 0xFFFFFFF0L));

338 
	}
}

340 
__DARWIN_CTYPE_TOP_ölöe
 

341 
	$is•ecül
(
_c
)

343  (
	`__i°y≥
(
_c
, 
_CTYPE_T
));

344 
	}
}

350 
__BEGIN_DECLS


351 
iß um
();

352 
ißÕha
();

353 
isbœnk
();

354 
is˙ål
();

355 
isdigô
();

356 
isgøph
();

357 
i¶owî
();

358 
i•röt
();

359 
i•un˘
();

360 
is•a˚
();

361 
isuµî
();

362 
isxdigô
();

363 
tﬁowî
();

364 
touµî
();

365 
ißscii
();

366 
tﬂscii
();

368 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

369 
_tﬁowî
();

370 
_touµî
();

371 
digôtoöt
();

372 
ishexnumbî
();

373 
isideogøm
();

374 
i¢umbî
();

375 
i•h⁄ogøm
();

376 
i§u√
();

377 
is•ecül
();

379 
	g__END_DECLS


383 #ifde‡
_USE_EXTENDED_LOCALES_


384 
	~<xloˇÀ/_˘y≥.h
>

	@/usr/include/dirent.h

58 #i‚de‡
_DIRENT_H_


59 
	#_DIRENT_H_


	)

64 
	~<_ty≥s.h
>

65 
	~<sys/dúít.h
>

66 
	~<sys/cdefs.h
>

67 
	~<Avaûabûôy.h
>

69 
	g_ãŒdú
;

73 
	m__dd_fd
;

74 
	m__dd_loc
;

75 
	m__dd_size
;

76 *
	m__dd_buf
;

77 
	m__dd_Àn
;

78 
	m__dd_£ek
;

79 
	m__dd_ªwöd
;

80 
	m__dd_Êags
;

81 
__d¨wö_±hªad_muãx_t
 
	m__dd_lock
;

82 
_ãŒdú
 *
	m__dd_td
;

83 } 
	tDIR
;

85 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


88 
	#DIRBLKSIZ
 1024

	)

91 
	#DTF_HIDEW
 0x0001

	)

92 
	#DTF_NODUP
 0x0002

	)

93 
	#DTF_REWIND
 0x0004

	)

94 
	#__DTF_READALL
 0x0008

	)

98 #i‚de‡
KERNEL


100 
__BEGIN_DECLS


102 
	$˛o£dú
(
DIR
 *Ë
	`__DARWIN_ALIAS
(
˛o£dú
);

104 
DIR
 *
	$›ídú
(c⁄° *Ë
	`__DARWIN_ALIAS_I
(
›ídú
);

106 
dúít
 *
	$ªaddú
(
DIR
 *Ë
	`__DARWIN_INODE64
(
ªaddú
);

107 
	$ªaddú_r
(
DIR
 *, 
dúít
 *, dúíà**Ë
	`__DARWIN_INODE64
(
ªaddú_r
);

109 
	$ªwöddú
(
DIR
 *Ë
	`__DARWIN_ALIAS_I
(
ªwöddú
);

111 
	$£ekdú
(
DIR
 *, Ë
	`__DARWIN_ALIAS_I
(
£ekdú
);

113 
	$ãŒdú
(
DIR
 *Ë
	`__DARWIN_ALIAS_I
(
ãŒdú
);

115 
__END_DECLS


122 #i‡
__DARWIN_C_LEVEL
 >= 200809L

123 
__BEGIN_DECLS


125 
	$Æphas‹t
(c⁄° 
dúít
 **, c⁄° dúíà**Ë
	`__DARWIN_INODE64
(
Æphas‹t
);

127 #i‡(
	`deföed
(
__MAC_OS_X_VERSION_MIN_REQUIRED
Ë&& __MAC_OS_X_VERSION_MIN_REQUIRED < 
__MAC_10_8
Ë|| (deföed(
__IPHONE_OS_VERSION_MIN_REQUIRED
Ë&& __IPHONE_OS_VERSION_MIN_REQUIRED < 
__IPHONE_6_0
)

128 
	~<î∫o.h
>

129 
	~<°dlib.h
>

130 
	#dúfd
(
dúp
) ({ \

131 
DIR
 *
_dúp
 = (
dúp
); \

132 
ªt
 = -1; \

133 i‡(
_dúp
 =
NULL
 || _dúp->
__dd_fd
 < 0) \

134 
î∫o
 = 
EINVAL
; \

136 
ªt
 = 
_dúp
->
__dd_fd
; \

137 
ªt
; \

138 
	}
})

	)

140 
	$dúfd
(
DIR
 *
dúp
Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_8
, 
__IPHONE_6_0
);

143 
	`sˇndú
(c⁄° *, 
dúít
 ***,

144 (*)(c⁄° 
dúít
 *), (*)(c⁄° dúíà**, c⁄° dúíà**)Ë
	`__DARWIN_INODE64
(
sˇndú
);

145 #ifde‡
__BLOCKS__


146 
	`sˇndú_b
(c⁄° *, 
dúít
 ***,

147 (^)(c⁄° 
dúít
 *), (^)(c⁄° dúíà**, c⁄° dúíà**)Ë
	$__DARWIN_INODE64
(
sˇndú_b
Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
);

150 
__END_DECLS


154 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


155 
__BEGIN_DECLS


157 
	$gëdúíåõs
(, *, , *)

159 #i‡
__DARWIN_64_BIT_INO_T


164 
	`__asm
("_getdirentries_is_not_available_when_64_bit_inodes_are_in_effect")

166 
	$__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
,
__MAC_10_6
, 
__IPHONE_2_0
,__IPHONE_2_0)

170 
DIR
 *
	$__›ídú2
(c⁄° *, Ë
	`__DARWIN_ALIAS_I
(
__›ídú2
);

172 
__END_DECLS


	@/usr/include/dlfcn.h

30 #i‚de‡
_DLFCN_H_


31 
	#_DLFCN_H_


	)

33 #ifde‡
__˝lu•lus


37 
	~<sys/cdefs.h
>

39 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

40 
	~<°dboﬁ.h
>

41 
	~<Avaûabûôy.h
>

45 
	sdl_öfo
 {

46 c⁄° *
dli_‚ame
;

47 *
dli_fba£
;

48 c⁄° *
dli_¢ame
;

49 *
dli_ßddr
;

50 } 
	tDl_öfo
;

52 
dœddr
(c⁄° *, 
Dl_öfo
 *);

55 
dl˛o£
(* 
__h™dÀ
);

56 * 
dÀº‹
();

57 * 
dl›í
(c⁄° * 
__∑th
, 
__mode
);

58 * 
dlsym
(* 
__h™dÀ
, c⁄° * 
__symbﬁ
);

60 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

61 
boﬁ
 
dl›í_¥eÊight
(c⁄° * 
__∑th
Ë
__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

65 
	#RTLD_LAZY
 0x1

	)

66 
	#RTLD_NOW
 0x2

	)

67 
	#RTLD_LOCAL
 0x4

	)

68 
	#RTLD_GLOBAL
 0x8

	)

70 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

71 
	#RTLD_NOLOAD
 0x10

	)

72 
	#RTLD_NODELETE
 0x80

	)

73 
	#RTLD_FIRST
 0x100

	)

78 
	#RTLD_NEXT
 ((*Ë-1Ë

	)

79 
	#RTLD_DEFAULT
 ((*Ë-2Ë

	)

80 
	#RTLD_SELF
 ((*Ë-3Ë

	)

81 
	#RTLD_MAIN_ONLY
 ((*Ë-5Ë

	)

84 #ifde‡
__˝lu•lus


	@/usr/include/errno.h

23 
	~<sys/î∫o.h
>

	@/usr/include/execinfo.h

23 #i‚de‡
_EXECINFO_H_


24 
	#_EXECINFO_H_
 1

	)

26 
	~<sys/cdefs.h
>

27 
	~<Avaûabûôy.h
>

29 
__BEGIN_DECLS


31 
	$backåa˚
(**,Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

32 ** 
	$backåa˚_symbﬁs
(* c⁄°*,Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

33 
	$backåa˚_symbﬁs_fd
(* c⁄°*,,Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

35 
__END_DECLS


	@/usr/include/fcntl.h

23 
	~<sys/f˙é.h
>

	@/usr/include/inttypes.h

31 #i‡!
deföed
(
_INTTYPES_H_
)

32 
	#_INTTYPES_H_


	)

34 
	#__PRI_8_LENGTH_MODIFIER__
 "hh"

	)

35 
	#__PRI_64_LENGTH_MODIFIER__
 "Œ"

	)

36 
	#__SCN_64_LENGTH_MODIFIER__
 "Œ"

	)

37 
	#__PRI_MAX_LENGTH_MODIFIER__
 "j"

	)

38 
	#__SCN_MAX_LENGTH_MODIFIER__
 "j"

	)

40 
	#PRId8
 
__PRI_8_LENGTH_MODIFIER__
 "d"

	)

41 
	#PRIi8
 
__PRI_8_LENGTH_MODIFIER__
 "i"

	)

42 
	#PRIo8
 
__PRI_8_LENGTH_MODIFIER__
 "o"

	)

43 
	#PRIu8
 
__PRI_8_LENGTH_MODIFIER__
 "u"

	)

44 
	#PRIx8
 
__PRI_8_LENGTH_MODIFIER__
 "x"

	)

45 
	#PRIX8
 
__PRI_8_LENGTH_MODIFIER__
 "X"

	)

47 
	#PRId16
 "hd"

	)

48 
	#PRIi16
 "hi"

	)

49 
	#PRIo16
 "ho"

	)

50 
	#PRIu16
 "hu"

	)

51 
	#PRIx16
 "hx"

	)

52 
	#PRIX16
 "hX"

	)

54 
	#PRId32
 "d"

	)

55 
	#PRIi32
 "i"

	)

56 
	#PRIo32
 "o"

	)

57 
	#PRIu32
 "u"

	)

58 
	#PRIx32
 "x"

	)

59 
	#PRIX32
 "X"

	)

61 
	#PRId64
 
__PRI_64_LENGTH_MODIFIER__
 "d"

	)

62 
	#PRIi64
 
__PRI_64_LENGTH_MODIFIER__
 "i"

	)

63 
	#PRIo64
 
__PRI_64_LENGTH_MODIFIER__
 "o"

	)

64 
	#PRIu64
 
__PRI_64_LENGTH_MODIFIER__
 "u"

	)

65 
	#PRIx64
 
__PRI_64_LENGTH_MODIFIER__
 "x"

	)

66 
	#PRIX64
 
__PRI_64_LENGTH_MODIFIER__
 "X"

	)

68 
	#PRIdLEAST8
 
PRId8


	)

69 
	#PRIiLEAST8
 
PRIi8


	)

70 
	#PRIoLEAST8
 
PRIo8


	)

71 
	#PRIuLEAST8
 
PRIu8


	)

72 
	#PRIxLEAST8
 
PRIx8


	)

73 
	#PRIXLEAST8
 
PRIX8


	)

75 
	#PRIdLEAST16
 
PRId16


	)

76 
	#PRIiLEAST16
 
PRIi16


	)

77 
	#PRIoLEAST16
 
PRIo16


	)

78 
	#PRIuLEAST16
 
PRIu16


	)

79 
	#PRIxLEAST16
 
PRIx16


	)

80 
	#PRIXLEAST16
 
PRIX16


	)

82 
	#PRIdLEAST32
 
PRId32


	)

83 
	#PRIiLEAST32
 
PRIi32


	)

84 
	#PRIoLEAST32
 
PRIo32


	)

85 
	#PRIuLEAST32
 
PRIu32


	)

86 
	#PRIxLEAST32
 
PRIx32


	)

87 
	#PRIXLEAST32
 
PRIX32


	)

89 
	#PRIdLEAST64
 
PRId64


	)

90 
	#PRIiLEAST64
 
PRIi64


	)

91 
	#PRIoLEAST64
 
PRIo64


	)

92 
	#PRIuLEAST64
 
PRIu64


	)

93 
	#PRIxLEAST64
 
PRIx64


	)

94 
	#PRIXLEAST64
 
PRIX64


	)

96 
	#PRIdFAST8
 
PRId8


	)

97 
	#PRIiFAST8
 
PRIi8


	)

98 
	#PRIoFAST8
 
PRIo8


	)

99 
	#PRIuFAST8
 
PRIu8


	)

100 
	#PRIxFAST8
 
PRIx8


	)

101 
	#PRIXFAST8
 
PRIX8


	)

103 
	#PRIdFAST16
 
PRId16


	)

104 
	#PRIiFAST16
 
PRIi16


	)

105 
	#PRIoFAST16
 
PRIo16


	)

106 
	#PRIuFAST16
 
PRIu16


	)

107 
	#PRIxFAST16
 
PRIx16


	)

108 
	#PRIXFAST16
 
PRIX16


	)

110 
	#PRIdFAST32
 
PRId32


	)

111 
	#PRIiFAST32
 
PRIi32


	)

112 
	#PRIoFAST32
 
PRIo32


	)

113 
	#PRIuFAST32
 
PRIu32


	)

114 
	#PRIxFAST32
 
PRIx32


	)

115 
	#PRIXFAST32
 
PRIX32


	)

117 
	#PRIdFAST64
 
PRId64


	)

118 
	#PRIiFAST64
 
PRIi64


	)

119 
	#PRIoFAST64
 
PRIo64


	)

120 
	#PRIuFAST64
 
PRIu64


	)

121 
	#PRIxFAST64
 
PRIx64


	)

122 
	#PRIXFAST64
 
PRIX64


	)

125 
	#PRIdPTR
 "ld"

	)

126 
	#PRIiPTR
 "li"

	)

127 
	#PRIoPTR
 "lo"

	)

128 
	#PRIuPTR
 "lu"

	)

129 
	#PRIxPTR
 "lx"

	)

130 
	#PRIXPTR
 "lX"

	)

132 
	#PRIdMAX
 
__PRI_MAX_LENGTH_MODIFIER__
 "d"

	)

133 
	#PRIiMAX
 
__PRI_MAX_LENGTH_MODIFIER__
 "i"

	)

134 
	#PRIoMAX
 
__PRI_MAX_LENGTH_MODIFIER__
 "o"

	)

135 
	#PRIuMAX
 
__PRI_MAX_LENGTH_MODIFIER__
 "u"

	)

136 
	#PRIxMAX
 
__PRI_MAX_LENGTH_MODIFIER__
 "x"

	)

137 
	#PRIXMAX
 
__PRI_MAX_LENGTH_MODIFIER__
 "X"

	)

139 
	#SCNd8
 
__PRI_8_LENGTH_MODIFIER__
 "d"

	)

140 
	#SCNi8
 
__PRI_8_LENGTH_MODIFIER__
 "i"

	)

141 
	#SCNo8
 
__PRI_8_LENGTH_MODIFIER__
 "o"

	)

142 
	#SCNu8
 
__PRI_8_LENGTH_MODIFIER__
 "u"

	)

143 
	#SCNx8
 
__PRI_8_LENGTH_MODIFIER__
 "x"

	)

145 
	#SCNd16
 "hd"

	)

146 
	#SCNi16
 "hi"

	)

147 
	#SCNo16
 "ho"

	)

148 
	#SCNu16
 "hu"

	)

149 
	#SCNx16
 "hx"

	)

151 
	#SCNd32
 "d"

	)

152 
	#SCNi32
 "i"

	)

153 
	#SCNo32
 "o"

	)

154 
	#SCNu32
 "u"

	)

155 
	#SCNx32
 "x"

	)

157 
	#SCNd64
 
__SCN_64_LENGTH_MODIFIER__
 "d"

	)

158 
	#SCNi64
 
__SCN_64_LENGTH_MODIFIER__
 "i"

	)

159 
	#SCNo64
 
__SCN_64_LENGTH_MODIFIER__
 "o"

	)

160 
	#SCNu64
 
__SCN_64_LENGTH_MODIFIER__
 "u"

	)

161 
	#SCNx64
 
__SCN_64_LENGTH_MODIFIER__
 "x"

	)

163 
	#SCNdLEAST8
 
SCNd8


	)

164 
	#SCNiLEAST8
 
SCNi8


	)

165 
	#SCNoLEAST8
 
SCNo8


	)

166 
	#SCNuLEAST8
 
SCNu8


	)

167 
	#SCNxLEAST8
 
SCNx8


	)

169 
	#SCNdLEAST16
 
SCNd16


	)

170 
	#SCNiLEAST16
 
SCNi16


	)

171 
	#SCNoLEAST16
 
SCNo16


	)

172 
	#SCNuLEAST16
 
SCNu16


	)

173 
	#SCNxLEAST16
 
SCNx16


	)

175 
	#SCNdLEAST32
 
SCNd32


	)

176 
	#SCNiLEAST32
 
SCNi32


	)

177 
	#SCNoLEAST32
 
SCNo32


	)

178 
	#SCNuLEAST32
 
SCNu32


	)

179 
	#SCNxLEAST32
 
SCNx32


	)

181 
	#SCNdLEAST64
 
SCNd64


	)

182 
	#SCNiLEAST64
 
SCNi64


	)

183 
	#SCNoLEAST64
 
SCNo64


	)

184 
	#SCNuLEAST64
 
SCNu64


	)

185 
	#SCNxLEAST64
 
SCNx64


	)

187 
	#SCNdFAST8
 
SCNd8


	)

188 
	#SCNiFAST8
 
SCNi8


	)

189 
	#SCNoFAST8
 
SCNo8


	)

190 
	#SCNuFAST8
 
SCNu8


	)

191 
	#SCNxFAST8
 
SCNx8


	)

193 
	#SCNdFAST16
 
SCNd16


	)

194 
	#SCNiFAST16
 
SCNi16


	)

195 
	#SCNoFAST16
 
SCNo16


	)

196 
	#SCNuFAST16
 
SCNu16


	)

197 
	#SCNxFAST16
 
SCNx16


	)

199 
	#SCNdFAST32
 
SCNd32


	)

200 
	#SCNiFAST32
 
SCNi32


	)

201 
	#SCNoFAST32
 
SCNo32


	)

202 
	#SCNuFAST32
 
SCNu32


	)

203 
	#SCNxFAST32
 
SCNx32


	)

205 
	#SCNdFAST64
 
SCNd64


	)

206 
	#SCNiFAST64
 
SCNi64


	)

207 
	#SCNoFAST64
 
SCNo64


	)

208 
	#SCNuFAST64
 
SCNu64


	)

209 
	#SCNxFAST64
 
SCNx64


	)

211 
	#SCNdPTR
 "ld"

	)

212 
	#SCNiPTR
 "li"

	)

213 
	#SCNoPTR
 "lo"

	)

214 
	#SCNuPTR
 "lu"

	)

215 
	#SCNxPTR
 "lx"

	)

217 
	#SCNdMAX
 
__SCN_MAX_LENGTH_MODIFIER__
 "d"

	)

218 
	#SCNiMAX
 
__SCN_MAX_LENGTH_MODIFIER__
 "i"

	)

219 
	#SCNoMAX
 
__SCN_MAX_LENGTH_MODIFIER__
 "o"

	)

220 
	#SCNuMAX
 
__SCN_MAX_LENGTH_MODIFIER__
 "u"

	)

221 
	#SCNxMAX
 
__SCN_MAX_LENGTH_MODIFIER__
 "x"

	)

223 
	~<sys/cdefs.h
>

224 
	~<Avaûabûôy.h
>

226 
	~<_ty≥s.h
>

227 
	~<sys/_ty≥s/_wch¨_t.h
>

229 
	~<°döt.h
>

231 
__BEGIN_DECLS


234 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

235 
ötmax_t


236 
	`imaxabs
(
ötmax_t
 
j
);

240 
ötmax_t
 
quŸ
;

241 
ötmax_t
 
ªm
;

242 } 
	timaxdiv_t
;

244 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

245 
imaxdiv_t


246 
	`imaxdiv
(
ötmax_t
 
__numî
, i¡max_à
__díom
);

249 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

250 
ötmax_t


251 
	`°πoimax
(c⁄° * 
__ª°ri˘
 
__≈å
,

252 ** 
__ª°ri˘
 
__íd±r
,

253 
__ba£
);

255 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

256 
uötmax_t


257 
	`°πoumax
(c⁄° * 
__ª°ri˘
 
__≈å
,

258 ** 
__ª°ri˘
 
__íd±r
,

259 
__ba£
);

262 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

263 
ötmax_t


264 
	`wc°oimax
(c⁄° 
wch¨_t
 * 
__ª°ri˘
 
__≈å
,

265 
wch¨_t
 ** 
__ª°ri˘
 
__íd±r
,

266 
__ba£
);

268 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

269 
uötmax_t


270 
	`wc°oumax
(c⁄° 
wch¨_t
 * 
__ª°ri˘
 
__≈å
,

271 
wch¨_t
 ** 
__ª°ri˘
 
__íd±r
,

272 
__ba£
);

275 #i‡!
	`deföed
(
__˝lu•lus
Ë&& deföed(
__WCHAR_MAX__
) && __WCHAR_MAX__ <= 0xffffU

276 #¥agm®
GCC
 
pois⁄
 
wc°oimax
 
wc°oumax


279 
__END_DECLS


281 #ifde‡
_USE_EXTENDED_LOCALES_


282 
	~<xloˇÀ/_öây≥s.h
>

	@/usr/include/limits.h

60 #i‚de‡
_LIMITS_H_


61 
	#_LIMITS_H_


	)

63 
	~<sys/cdefs.h
>

64 
	~<machöe/limôs.h
>

65 
	~<sys/sy¶imôs.h
>

67 #i‡
__DARWIN_C_LEVEL
 > 
__DARWIN_C_ANSI


68 
	#_POSIX_ARG_MAX
 4096

	)

69 
	#_POSIX_CHILD_MAX
 25

	)

70 
	#_POSIX_LINK_MAX
 8

	)

71 
	#_POSIX_MAX_CANON
 255

	)

72 
	#_POSIX_MAX_INPUT
 255

	)

73 
	#_POSIX_NAME_MAX
 14

	)

74 
	#_POSIX_NGROUPS_MAX
 8

	)

75 
	#_POSIX_OPEN_MAX
 20

	)

76 
	#_POSIX_PATH_MAX
 256

	)

77 
	#_POSIX_PIPE_BUF
 512

	)

78 
	#_POSIX_SSIZE_MAX
 32767

	)

79 
	#_POSIX_STREAM_MAX
 8

	)

80 
	#_POSIX_TZNAME_MAX
 6

	)

82 
	#_POSIX2_BC_BASE_MAX
 99

	)

83 
	#_POSIX2_BC_DIM_MAX
 2048

	)

84 
	#_POSIX2_BC_SCALE_MAX
 99

	)

85 
	#_POSIX2_BC_STRING_MAX
 1000

	)

86 
	#_POSIX2_EQUIV_CLASS_MAX
 2

	)

87 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

88 
	#_POSIX2_LINE_MAX
 2048

	)

89 
	#_POSIX2_RE_DUP_MAX
 255

	)

92 #i‡
__DARWIN_C_LEVEL
 >= 199309L

93 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

94 
	#_POSIX_AIO_MAX
 1

	)

95 
	#_POSIX_DELAYTIMER_MAX
 32

	)

96 
	#_POSIX_MQ_OPEN_MAX
 8

	)

97 
	#_POSIX_MQ_PRIO_MAX
 32

	)

98 
	#_POSIX_RTSIG_MAX
 8

	)

99 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

100 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

101 
	#_POSIX_SIGQUEUE_MAX
 32

	)

102 
	#_POSIX_TIMER_MAX
 32

	)

105 #i‡
__DARWIN_C_LEVEL
 >= 199506L

106 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

107 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

108 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

110 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 4

	)

111 
	#PTHREAD_KEYS_MAX
 512

	)

112 
	#PTHREAD_STACK_MIN
 8192

	)

115 #i‡
__DARWIN_C_LEVEL
 >= 200112

116 
	#_POSIX_HOST_NAME_MAX
 255

	)

117 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

118 
	#_POSIX_SS_REPL_MAX
 4

	)

119 
	#_POSIX_SYMLINK_MAX
 255

	)

120 
	#_POSIX_SYMLOOP_MAX
 8

	)

121 
	#_POSIX_TRACE_EVENT_NAME_MAX
 30

	)

122 
	#_POSIX_TRACE_NAME_MAX
 8

	)

123 
	#_POSIX_TRACE_SYS_MAX
 8

	)

124 
	#_POSIX_TRACE_USER_EVENT_MAX
 32

	)

125 
	#_POSIX_TTY_NAME_MAX
 9

	)

126 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

127 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

129 
	#_POSIX_RE_DUP_MAX
 
_POSIX2_RE_DUP_MAX


	)

132 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


133 
	#OFF_MIN
 
LLONG_MIN


	)

134 
	#OFF_MAX
 
LLONG_MAX


	)

138 #i‡
__DARWIN_C_LEVEL
 > 
__DARWIN_C_ANSI


141 #i‡!
deföed
(
_POSIX_C_SOURCE
) || _POSIX_C_SOURCE < 200112L

142 
	#PASS_MAX
 128

	)

145 
	#NL_ARGMAX
 9

	)

146 
	#NL_LANGMAX
 14

	)

147 
	#NL_MSGMAX
 32767

	)

148 
	#NL_NMAX
 1

	)

149 
	#NL_SETMAX
 255

	)

150 
	#NL_TEXTMAX
 2048

	)

152 
	#_XOPEN_IOV_MAX
 16

	)

153 
	#IOV_MAX
 1024

	)

154 
	#_XOPEN_NAME_MAX
 255

	)

155 
	#_XOPEN_PATH_MAX
 1024

	)

	@/usr/include/machine/endian.h

31 #i‚de‡
_BSD_MACHINE_ENDIAN_H_


32 
	#_BSD_MACHINE_ENDIAN_H_


	)

34 #i‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

35 
	~"i386/ídün.h
"

37 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/netdb.h

83 #i‚de‡
_NETDB_H_


84 
	#_NETDB_H_


	)

86 
	~<_ty≥s.h
>

87 
	~<sys/_ty≥s/_size_t.h
>

88 
	~<sys/_ty≥s/_sockÀn_t.h
>

90 
	~<°döt.h
>

91 
	~<√töë/ö.h
>

93 #i‚de‡
_PATH_HEQUIV


94 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

96 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

97 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

98 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

99 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

101 
h_î∫o
;

103 #i‚de‡
IPPORT_RESERVED


104 
	#IPPORT_RESERVED
 
__DARWIN_IPPORT_RESERVED


	)

112 
	sho°ít
 {

113 *
	mh_«me
;

114 **
	mh_Æü£s
;

115 
	mh_addπy≥
;

116 
	mh_Àngth
;

117 **
	mh_addr_li°
;

118 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

119 
	#h_addr
 
h_addr_li°
[0]

	)

127 
	s√ã¡
 {

128 *
	mn_«me
;

129 **
	mn_Æü£s
;

130 
	mn_addπy≥
;

131 
uöt32_t
 
	mn_√t
;

134 
	s£rvít
 {

135 *
	ms_«me
;

136 **
	ms_Æü£s
;

137 
	ms_p‹t
;

138 *
	ms_¥Ÿo
;

141 
	s¥Ÿ€¡
 {

142 *
	mp_«me
;

143 **
	mp_Æü£s
;

144 
	mp_¥Ÿo
;

147 
	saddröfo
 {

148 
	mai_Êags
;

149 
	mai_Ámûy
;

150 
	mai_sockty≥
;

151 
	mai_¥Ÿocﬁ
;

152 
sockÀn_t
 
	mai_addæí
;

153 *
	mai_ˇn⁄«me
;

154 
sockaddr
 *
	mai_addr
;

155 
addröfo
 *
	mai_√xt
;

158 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

159 
	sΩ˚¡
 {

160 *
	mr_«me
;

161 **
	mr_Æü£s
;

162 
	mr_numbî
;

170 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

171 
	#NETDB_INTERNAL
 -1

	)

172 
	#NETDB_SUCCESS
 0

	)

174 
	#HOST_NOT_FOUND
 1

	)

175 
	#TRY_AGAIN
 2

	)

176 
	#NO_RECOVERY
 3

	)

177 
	#NO_DATA
 4

	)

178 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

179 
	#NO_ADDRESS
 
NO_DATA


	)

184 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

185 
	#EAI_ADDRFAMILY
 1

	)

187 
	#EAI_AGAIN
 2

	)

188 
	#EAI_BADFLAGS
 3

	)

189 
	#EAI_FAIL
 4

	)

190 
	#EAI_FAMILY
 5

	)

191 
	#EAI_MEMORY
 6

	)

192 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

193 
	#EAI_NODATA
 7

	)

195 
	#EAI_NONAME
 8

	)

196 
	#EAI_SERVICE
 9

	)

197 
	#EAI_SOCKTYPE
 10

	)

198 
	#EAI_SYSTEM
 11

	)

199 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

200 
	#EAI_BADHINTS
 12

	)

201 
	#EAI_PROTOCOL
 13

	)

203 
	#EAI_OVERFLOW
 14

	)

204 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

205 
	#EAI_MAX
 15

	)

211 
	#AI_PASSIVE
 0x00000001

	)

212 
	#AI_CANONNAME
 0x00000002

	)

213 
	#AI_NUMERICHOST
 0x00000004

	)

214 
	#AI_NUMERICSERV
 0x00001000

	)

216 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

217 
	#AI_MASK
 \

218 (
AI_PASSIVE
 | 
AI_CANONNAME
 | 
AI_NUMERICHOST
 | 
AI_NUMERICSERV
 | \

219 
AI_ADDRCONFIG
)

	)

222 
	#AI_ALL
 0x00000100

	)

223 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

224 
	#AI_V4MAPPED_CFG
 0x00000200

	)

226 
	#AI_ADDRCONFIG
 0x00000400

	)

227 
	#AI_V4MAPPED
 0x00000800

	)

229 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

230 
	#AI_DEFAULT
 (
AI_V4MAPPED_CFG
 | 
AI_ADDRCONFIG
)

	)

236 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

237 
	#NI_MAXHOST
 1025

	)

238 
	#NI_MAXSERV
 32

	)

243 
	#NI_NOFQDN
 0x00000001

	)

244 
	#NI_NUMERICHOST
 0x00000002

	)

245 
	#NI_NAMEREQD
 0x00000004

	)

246 
	#NI_NUMERICSERV
 0x00000008

	)

247 
	#NI_DGRAM
 0x00000010

	)

248 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

249 
	#NI_WITHSCOPEID
 0x00000020

	)

254 
	#SCOPE_DELIMITER
 '%'

	)

257 
__BEGIN_DECLS


259 
ídho°ít
();

260 
íd√ã¡
();

261 
íd¥Ÿ€¡
();

262 
íd£rvít
();

264 
‰ìaddröfo
(
addröfo
 *);

265 c⁄° *
gai_°ªº‹
();

266 
gëaddröfo
(c⁄° * 
__ª°ri˘
, const * __restrict,

267 c⁄° 
addröfo
 * 
__ª°ri˘
,

268 
addröfo
 ** 
__ª°ri˘
);

269 
ho°ít
 *
gëho°byaddr
(c⁄° *, 
sockÀn_t
, );

270 
ho°ít
 *
gëho°by«me
(const *);

271 
ho°ít
 *
gëho°ít
();

272 
gë«meöfo
(c⁄° 
sockaddr
 * 
__ª°ri˘
, 
sockÀn_t
,

273 * 
__ª°ri˘
, 
sockÀn_t
, * __restrict,

274 
sockÀn_t
, );

275 
√ã¡
 *
gë√tbyaddr
(
uöt32_t
, );

276 
√ã¡
 *
gë√tby«me
(const *);

277 
√ã¡
 *
gë√ã¡
();

278 
¥Ÿ€¡
 *
gë¥Ÿoby«me
(const *);

279 
¥Ÿ€¡
 *
gë¥Ÿobynumbî
();

280 
¥Ÿ€¡
 *
gë¥Ÿ€¡
();

281 
£rvít
 *
gë£rvby«me
(const *, const *);

282 
£rvít
 *
gë£rvbyp‹t
(, const *);

283 
£rvít
 *
gë£rvít
();

284 
£tho°ít
();

286 
£äëít
();

287 
£çrŸ€¡
();

288 
£t£rvít
();

290 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

291 
‰ìho°ít
(
ho°ít
 *);

292 
ho°ít
 *
gëho°by«me2
(const *, );

293 
ho°ít
 *
gëùnodebyaddr
(c⁄° *, 
size_t
, , *);

294 
ho°ít
 *
gëùnodeby«me
(const *, , , *);

295 
Ω˚¡
 *
gëΩcby«me
(c⁄° *
«me
);

296 #ifde‡
__LP64__


297 
Ω˚¡
 *
gëΩcbynumbî
(
numbî
);

299 
Ω˚¡
 *
gëΩcbynumbî
(
numbî
);

301 
Ω˚¡
 *
gëΩ˚¡
();

302 
£åp˚¡
(
°ay›í
);

303 
ídΩ˚¡
();

304 
hîr‹
(const *);

305 c⁄° *
h°ªº‹
();

306 
ö√tgr
(const *, const *, const *, const *);

307 
gë√tgª¡
(**, **, **);

308 
íd√tgª¡
();

309 
£äëgª¡
(const *);

312 
	g__END_DECLS


	@/usr/include/netinet/in.h

64 #i‚de‡
_NETINET_IN_H_


65 
	#_NETINET_IN_H_


	)

66 
	~<sys/≠∂ópi›ts.h
>

67 
	~<sys/_ty≥s.h
>

68 
	~<°döt.h
>

70 
	~<Avaûabûôy.h
>

72 
	~<sys/_ty≥s/_ö_addr_t.h
>

74 
	~<sys/_ty≥s/_ö_p‹t_t.h
>

81 
	~<sys/sockë.h
>

86 
	~<machöe/ídün.h
>

87 
	~<sys/_ídün.h
>

97 
	#IPPROTO_IP
 0

	)

98 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

99 
	#IPPROTO_HOPOPTS
 0

	)

101 
	#IPPROTO_ICMP
 1

	)

102 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

103 
	#IPPROTO_IGMP
 2

	)

104 
	#IPPROTO_GGP
 3

	)

105 
	#IPPROTO_IPV4
 4

	)

106 
	#IPPROTO_IPIP
 
IPPROTO_IPV4


	)

108 
	#IPPROTO_TCP
 6

	)

109 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

110 
	#IPPROTO_ST
 7

	)

111 
	#IPPROTO_EGP
 8

	)

112 
	#IPPROTO_PIGP
 9

	)

113 
	#IPPROTO_RCCMON
 10

	)

114 
	#IPPROTO_NVPII
 11

	)

115 
	#IPPROTO_PUP
 12

	)

116 
	#IPPROTO_ARGUS
 13

	)

117 
	#IPPROTO_EMCON
 14

	)

118 
	#IPPROTO_XNET
 15

	)

119 
	#IPPROTO_CHAOS
 16

	)

121 
	#IPPROTO_UDP
 17

	)

122 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

123 
	#IPPROTO_MUX
 18

	)

124 
	#IPPROTO_MEAS
 19

	)

125 
	#IPPROTO_HMP
 20

	)

126 
	#IPPROTO_PRM
 21

	)

127 
	#IPPROTO_IDP
 22

	)

128 
	#IPPROTO_TRUNK1
 23

	)

129 
	#IPPROTO_TRUNK2
 24

	)

130 
	#IPPROTO_LEAF1
 25

	)

131 
	#IPPROTO_LEAF2
 26

	)

132 
	#IPPROTO_RDP
 27

	)

133 
	#IPPROTO_IRTP
 28

	)

134 
	#IPPROTO_TP
 29

	)

135 
	#IPPROTO_BLT
 30

	)

136 
	#IPPROTO_NSP
 31

	)

137 
	#IPPROTO_INP
 32

	)

138 
	#IPPROTO_SEP
 33

	)

139 
	#IPPROTO_3PC
 34

	)

140 
	#IPPROTO_IDPR
 35

	)

141 
	#IPPROTO_XTP
 36

	)

142 
	#IPPROTO_DDP
 37

	)

143 
	#IPPROTO_CMTP
 38

	)

144 
	#IPPROTO_TPXX
 39

	)

145 
	#IPPROTO_IL
 40

	)

147 
	#IPPROTO_IPV6
 41

	)

148 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

149 
	#IPPROTO_SDRP
 42

	)

150 
	#IPPROTO_ROUTING
 43

	)

151 
	#IPPROTO_FRAGMENT
 44

	)

152 
	#IPPROTO_IDRP
 45

	)

153 
	#IPPROTO_RSVP
 46

	)

154 
	#IPPROTO_GRE
 47

	)

155 
	#IPPROTO_MHRP
 48

	)

156 
	#IPPROTO_BHA
 49

	)

157 
	#IPPROTO_ESP
 50

	)

158 
	#IPPROTO_AH
 51

	)

159 
	#IPPROTO_INLSP
 52

	)

160 
	#IPPROTO_SWIPE
 53

	)

161 
	#IPPROTO_NHRP
 54

	)

163 
	#IPPROTO_ICMPV6
 58

	)

164 
	#IPPROTO_NONE
 59

	)

165 
	#IPPROTO_DSTOPTS
 60

	)

166 
	#IPPROTO_AHIP
 61

	)

167 
	#IPPROTO_CFTP
 62

	)

168 
	#IPPROTO_HELLO
 63

	)

169 
	#IPPROTO_SATEXPAK
 64

	)

170 
	#IPPROTO_KRYPTOLAN
 65

	)

171 
	#IPPROTO_RVD
 66

	)

172 
	#IPPROTO_IPPC
 67

	)

173 
	#IPPROTO_ADFS
 68

	)

174 
	#IPPROTO_SATMON
 69

	)

175 
	#IPPROTO_VISA
 70

	)

176 
	#IPPROTO_IPCV
 71

	)

177 
	#IPPROTO_CPNX
 72

	)

178 
	#IPPROTO_CPHB
 73

	)

179 
	#IPPROTO_WSN
 74

	)

180 
	#IPPROTO_PVP
 75

	)

181 
	#IPPROTO_BRSATMON
 76

	)

182 
	#IPPROTO_ND
 77

	)

183 
	#IPPROTO_WBMON
 78

	)

184 
	#IPPROTO_WBEXPAK
 79

	)

185 
	#IPPROTO_EON
 80

	)

186 
	#IPPROTO_VMTP
 81

	)

187 
	#IPPROTO_SVMTP
 82

	)

188 
	#IPPROTO_VINES
 83

	)

189 
	#IPPROTO_TTP
 84

	)

190 
	#IPPROTO_IGP
 85

	)

191 
	#IPPROTO_DGP
 86

	)

192 
	#IPPROTO_TCF
 87

	)

193 
	#IPPROTO_IGRP
 88

	)

194 
	#IPPROTO_OSPFIGP
 89

	)

195 
	#IPPROTO_SRPC
 90

	)

196 
	#IPPROTO_LARP
 91

	)

197 
	#IPPROTO_MTP
 92

	)

198 
	#IPPROTO_AX25
 93

	)

199 
	#IPPROTO_IPEIP
 94

	)

200 
	#IPPROTO_MICP
 95

	)

201 
	#IPPROTO_SCCSP
 96

	)

202 
	#IPPROTO_ETHERIP
 97

	)

203 
	#IPPROTO_ENCAP
 98

	)

204 
	#IPPROTO_APES
 99

	)

205 
	#IPPROTO_GMTP
 100

	)

207 
	#IPPROTO_PIM
 103

	)

208 
	#IPPROTO_IPCOMP
 108

	)

209 
	#IPPROTO_PGM
 113

	)

210 
	#IPPROTO_SCTP
 132

	)

213 
	#IPPROTO_DIVERT
 254

	)

215 
	#IPPROTO_RAW
 255

	)

217 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

218 
	#IPPROTO_MAX
 256

	)

221 
	#IPPROTO_DONE
 257

	)

269 
	#__DARWIN_IPPORT_RESERVED
 1024

	)

271 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

278 #i‚de‡
IPPORT_RESERVED


279 
	#IPPORT_RESERVED
 
__DARWIN_IPPORT_RESERVED


	)

281 
	#IPPORT_USERRESERVED
 5000

	)

286 
	#IPPORT_HIFIRSTAUTO
 49152

	)

287 
	#IPPORT_HILASTAUTO
 65535

	)

295 
	#IPPORT_RESERVEDSTART
 600

	)

301 
	sö_addr
 {

302 
ö_addr_t
 
	ms_addr
;

310 
	#INADDR_ANY
 (
u_öt32_t
)0x00000000

	)

311 
	#INADDR_BROADCAST
 (
u_öt32_t
)0xfffffff‡

	)

313 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

314 
	#IN_CLASSA
(
i
Ë(((
u_öt32_t
)(iË& 0x80000000Ë=0)

	)

315 
	#IN_CLASSA_NET
 0xff000000

	)

316 
	#IN_CLASSA_NSHIFT
 24

	)

317 
	#IN_CLASSA_HOST
 0x00ffffff

	)

318 
	#IN_CLASSA_MAX
 128

	)

320 
	#IN_CLASSB
(
i
Ë(((
u_öt32_t
)(iË& 0xc0000000Ë=0x80000000)

	)

321 
	#IN_CLASSB_NET
 0xffff0000

	)

322 
	#IN_CLASSB_NSHIFT
 16

	)

323 
	#IN_CLASSB_HOST
 0x0000ffff

	)

324 
	#IN_CLASSB_MAX
 65536

	)

326 
	#IN_CLASSC
(
i
Ë(((
u_öt32_t
)(iË& 0xe0000000Ë=0xc0000000)

	)

327 
	#IN_CLASSC_NET
 0xffffff00

	)

328 
	#IN_CLASSC_NSHIFT
 8

	)

329 
	#IN_CLASSC_HOST
 0x000000ff

	)

331 
	#IN_CLASSD
(
i
Ë(((
u_öt32_t
)(iË& 0xf0000000Ë=0xe0000000)

	)

332 
	#IN_CLASSD_NET
 0xf0000000

	)

333 
	#IN_CLASSD_NSHIFT
 28

	)

334 
	#IN_CLASSD_HOST
 0x0ffffff‡

	)

335 
	#IN_MULTICAST
(
i
Ë
	`IN_CLASSD
(i)

	)

337 
	#IN_EXPERIMENTAL
(
i
Ë(((
u_öt32_t
)(iË& 0xf0000000Ë=0xf0000000)

	)

338 
	#IN_BADCLASS
(
i
Ë(((
u_öt32_t
)(iË& 0xf0000000Ë=0xf0000000)

	)

340 
	#INADDR_LOOPBACK
 (
u_öt32_t
)0x7f000001

	)

342 
	#INADDR_NONE
 0xfffffff‡

	)

344 
	#INADDR_UNSPEC_GROUP
 (
u_öt32_t
)0xe0000000

	)

345 
	#INADDR_ALLHOSTS_GROUP
 (
u_öt32_t
)0xe0000001

	)

346 
	#INADDR_ALLRTRS_GROUP
 (
u_öt32_t
)0xe0000002

	)

347 
	#INADDR_ALLRPTS_GROUP
 (
u_öt32_t
)0xe0000016

	)

348 
	#INADDR_CARP_GROUP
 (
u_öt32_t
)0xe0000012

	)

349 
	#INADDR_PFSYNC_GROUP
 (
u_öt32_t
)0xe00000f0

	)

350 
	#INADDR_ALLMDNS_GROUP
 (
u_öt32_t
)0xe00000fb

	)

351 
	#INADDR_MAX_LOCAL_GROUP
 (
u_öt32_t
)0xe00000f‡

	)

353 #ifde‡
__APPLE__


354 
	#IN_LINKLOCALNETNUM
 (
u_öt32_t
)0xA9FE0000

	)

355 
	#IN_LINKLOCAL
(
i
Ë(((
u_öt32_t
)(iË& 
IN_CLASSB_NET
Ë=
IN_LINKLOCALNETNUM
)

	)

356 
	#IN_LOOPBACK
(
i
Ë(((
u_öt32_t
)(iË& 0xff000000Ë=0x7f000000)

	)

357 
	#IN_ZERONET
(
i
Ë(((
u_öt32_t
)(iË& 0xff000000Ë=0)

	)

359 
	#IN_PRIVATE
(
i
Ë((((
u_öt32_t
)(i) & 0xff000000) == 0x0a000000) || \

360 (((
u_öt32_t
)(
i
) & 0xfff00000) == 0xac100000) || \

361 (((
u_öt32_t
)(
i
Ë& 0xffff0000Ë=0xc0a80000))

	)

363 
	#IN_LOCAL_GROUP
(
i
Ë(((
u_öt32_t
)(iË& 0xffffff00Ë=0xe0000000)

	)

365 
	#IN_ANY_LOCAL
(
i
Ë(
	`IN_LINKLOCAL
(iË|| 
	`IN_LOCAL_GROUP
(i))

	)

368 
	#IN_LOOPBACKNET
 127

	)

374 
	ssockaddr_ö
 {

375 
__uöt8_t
 
	msö_Àn
;

376 
ß_Ámûy_t
 
	msö_Ámûy
;

377 
ö_p‹t_t
 
	msö_p‹t
;

378 
ö_addr
 
	msö_addr
;

379 
	msö_zîo
[8];

383 
	#INET_ADDRSTRLEN
 16

	)

385 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

393 
	sù_›ts
 {

394 
ö_addr
 
	mù_d°
;

395 
	mù_›ts
[40];

402 
	#IP_OPTIONS
 1

	)

403 
	#IP_HDRINCL
 2

	)

404 
	#IP_TOS
 3

	)

405 
	#IP_TTL
 4

	)

406 
	#IP_RECVOPTS
 5

	)

407 
	#IP_RECVRETOPTS
 6

	)

408 
	#IP_RECVDSTADDR
 7

	)

409 
	#IP_RETOPTS
 8

	)

410 
	#IP_MULTICAST_IF
 9

	)

411 
	#IP_MULTICAST_TTL
 10

	)

412 
	#IP_MULTICAST_LOOP
 11

	)

413 
	#IP_ADD_MEMBERSHIP
 12

	)

414 
	#IP_DROP_MEMBERSHIP
 13

	)

415 
	#IP_MULTICAST_VIF
 14

	)

416 
	#IP_RSVP_ON
 15

	)

417 
	#IP_RSVP_OFF
 16

	)

418 
	#IP_RSVP_VIF_ON
 17

	)

419 
	#IP_RSVP_VIF_OFF
 18

	)

420 
	#IP_PORTRANGE
 19

	)

421 
	#IP_RECVIF
 20

	)

423 
	#IP_IPSEC_POLICY
 21

	)

424 
	#IP_FAITH
 22

	)

425 #ifde‡
__APPLE__


426 
	#IP_STRIPHDR
 23

	)

428 
	#IP_RECVTTL
 24

	)

429 
	#IP_BOUND_IF
 25

	)

430 
	#IP_PKTINFO
 26

	)

431 
	#IP_RECVPKTINFO
 
IP_PKTINFO


	)

434 
	#IP_FW_ADD
 40

	)

435 
	#IP_FW_DEL
 41

	)

436 
	#IP_FW_FLUSH
 42

	)

437 
	#IP_FW_ZERO
 43

	)

438 
	#IP_FW_GET
 44

	)

439 
	#IP_FW_RESETLOG
 45

	)

442 
	#IP_OLD_FW_ADD
 50

	)

443 
	#IP_OLD_FW_DEL
 51

	)

444 
	#IP_OLD_FW_FLUSH
 52

	)

445 
	#IP_OLD_FW_ZERO
 53

	)

446 
	#IP_OLD_FW_GET
 54

	)

447 
	#IP_NAT__XXX
 55

	)

448 
	#IP_OLD_FW_RESETLOG
 56

	)

450 
	#IP_DUMMYNET_CONFIGURE
 60

	)

451 
	#IP_DUMMYNET_DEL
 61

	)

452 
	#IP_DUMMYNET_FLUSH
 62

	)

453 
	#IP_DUMMYNET_GET
 64

	)

455 
	#IP_TRAFFIC_MGT_BACKGROUND
 65

	)

456 
	#IP_MULTICAST_IFINDEX
 66

	)

459 
	#IP_ADD_SOURCE_MEMBERSHIP
 70

	)

460 
	#IP_DROP_SOURCE_MEMBERSHIP
 71

	)

461 
	#IP_BLOCK_SOURCE
 72

	)

462 
	#IP_UNBLOCK_SOURCE
 73

	)

465 
	#IP_MSFILTER
 74

	)

468 
	#MCAST_JOIN_GROUP
 80

	)

469 
	#MCAST_LEAVE_GROUP
 81

	)

470 
	#MCAST_JOIN_SOURCE_GROUP
 82

	)

471 
	#MCAST_LEAVE_SOURCE_GROUP
 83

	)

472 
	#MCAST_BLOCK_SOURCE
 84

	)

473 
	#MCAST_UNBLOCK_SOURCE
 85

	)

479 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

480 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

487 
	#IP_MIN_MEMBERSHIPS
 31

	)

488 
	#IP_MAX_MEMBERSHIPS
 4095

	)

494 
	#IP_MAX_GROUP_SRC_FILTER
 512

	)

495 
	#IP_MAX_SOCK_SRC_FILTER
 128

	)

496 
	#IP_MAX_SOCK_MUTE_FILTER
 128

	)

501 
	sù_mªq
 {

502 
ö_addr
 
	mimr_mu…üddr
;

503 
ö_addr
 
	mimr_öãrÁ˚
;

511 
	sù_mªqn
 {

512 
ö_addr
 
	mimr_mu…üddr
;

513 
ö_addr
 
	mimr_addªss
;

514 
	mimr_ifödex
;

517 #¥agm®
∑ck
(4)

521 
	sù_mªq_sour˚
 {

522 
ö_addr
 
	mimr_mu…üddr
;

523 
ö_addr
 
	mimr_sour˚addr
;

524 
ö_addr
 
	mimr_öãrÁ˚
;

531 
	sgroup_ªq
 {

532 
uöt32_t
 
	mgr_öãrÁ˚
;

533 
sockaddr_°‹age
 
	mgr_group
;

536 
	sgroup_sour˚_ªq
 {

537 
uöt32_t
 
	mg§_öãrÁ˚
;

538 
sockaddr_°‹age
 
	mg§_group
;

539 
sockaddr_°‹age
 
	mg§_sour˚
;

542 #i‚de‡
__MSFILTERREQ_DEFINED


543 
	#__MSFILTERREQ_DEFINED


	)

549 
	s__msfûãºeq
 {

550 
uöt32_t
 
	mms‰_ifödex
;

551 
uöt32_t
 
	mms‰_fmode
;

552 
uöt32_t
 
	mms‰_n§cs
;

553 
uöt32_t
 
	m__ms‰_Æign
;

554 
sockaddr_°‹age
 
	mms‰_group
;

555 
sockaddr_°‹age
 *
	mms‰_§cs
;

560 #¥agm®
∑ck
()

561 
	gsockaddr
;

568 
	$£tùv4sour˚fûãr
(, 
ö_addr
, ö_addr, 
uöt32_t
,

569 
uöt32_t
, 
ö_addr
 *Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

570 
	$gëùv4sour˚fûãr
(, 
ö_addr
, ö_addr, 
uöt32_t
 *,

571 
uöt32_t
 *, 
ö_addr
 *Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

572 
	$£tsour˚fûãr
(, 
uöt32_t
, 
sockaddr
 *, 
sockÀn_t
,

573 
uöt32_t
, uöt32_t, 
sockaddr_°‹age
 *Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

574 
	$gësour˚fûãr
(, 
uöt32_t
, 
sockaddr
 *, 
sockÀn_t
,

575 
uöt32_t
 *, uöt32_à*, 
sockaddr_°‹age
 *Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

580 
	#MCAST_UNDEFINED
 0

	)

581 
	#MCAST_INCLUDE
 1

	)

582 
	#MCAST_EXCLUDE
 2

	)

588 
	#IP_PORTRANGE_DEFAULT
 0

	)

589 
	#IP_PORTRANGE_HIGH
 1

	)

590 
	#IP_PORTRANGE_LOW
 2

	)

612 
	sö_pktöfo
 {

613 
ùi_ifödex
;

614 
ö_addr
 
ùi_•ec_d°
;

615 
ö_addr
 
ùi_addr
;

624 
	#IPPROTO_MAXID
 (
IPPROTO_AH
 + 1Ë

	)

630 
	#IPCTL_FORWARDING
 1

	)

631 
	#IPCTL_SENDREDIRECTS
 2

	)

632 
	#IPCTL_DEFTTL
 3

	)

633 #ifde‡
nŸyë


634 
	#IPCTL_DEFMTU
 4

	)

636 
	#IPCTL_RTEXPIRE
 5

	)

637 
	#IPCTL_RTMINEXPIRE
 6

	)

638 
	#IPCTL_RTMAXCACHE
 7

	)

639 
	#IPCTL_SOURCEROUTE
 8

	)

640 
	#IPCTL_DIRECTEDBROADCAST
 9

	)

641 
	#IPCTL_INTRQMAXLEN
 10

	)

642 
	#IPCTL_INTRQDROPS
 11

	)

643 
	#IPCTL_STATS
 12

	)

644 
	#IPCTL_ACCEPTSOURCEROUTE
 13

	)

645 
	#IPCTL_FASTFORWARDING
 14

	)

646 
	#IPCTL_KEEPFAITH
 15

	)

647 
	#IPCTL_GIF_TTL
 16

	)

648 
	#IPCTL_MAXID
 17

	)

653 
	#__KAME_NETINET_IN_H_INCLUDED_


	)

654 
	~<√töë6/ö6.h
>

655 #unde‡
__KAME_NETINET_IN_H_INCLUDED_


658 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

659 
__BEGIN_DECLS


660 
	`bödªsvp‹t
(, 
sockaddr_ö
 *);

661 
sockaddr
;

662 
	`bödªsvp‹t_ß
(, 
sockaddr
 *);

663 
__END_DECLS


	@/usr/include/netinet/tcp.h

64 #i‚de‡
_NETINET_TCP_H_


65 
	#_NETINET_TCP_H_


	)

66 
	~<sys/≠∂ópi›ts.h
>

67 
	~<sys/_ty≥s.h
>

68 
	~<machöe/ídün.h
>

70 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

71 
__uöt32_t
 
	tt˝_£q
;

72 
__uöt32_t
 
	tt˝_cc
;

74 
	#t˝6_£q
 
t˝_£q


	)

75 
	#t˝6hdr
 
t˝hdr


	)

81 
	st˝hdr
 {

82 
	mth_•‹t
;

83 
	mth_dp‹t
;

84 
t˝_£q
 
	mth_£q
;

85 
t˝_£q
 
	mth_ack
;

86 #i‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_LITTLE_ENDIAN


87 
	mth_x2
:4,

88 
	mth_off
:4;

90 #i‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_BIG_ENDIAN


91 
	mth_off
:4,

92 
	mth_x2
:4;

94 
	mth_Êags
;

95 
	#TH_FIN
 0x01

	)

96 
	#TH_SYN
 0x02

	)

97 
	#TH_RST
 0x04

	)

98 
	#TH_PUSH
 0x08

	)

99 
	#TH_ACK
 0x10

	)

100 
	#TH_URG
 0x20

	)

101 
	#TH_ECE
 0x40

	)

102 
	#TH_CWR
 0x80

	)

103 
	#TH_FLAGS
 (
TH_FIN
|
TH_SYN
|
TH_RST
|
TH_ACK
|
TH_URG
|
TH_ECE
|
TH_CWR
)

	)

105 
	mth_wö
;

106 
	mth_sum
;

107 
	mth_uΩ
;

110 
	#TCPOPT_EOL
 0

	)

111 
	#TCPOPT_NOP
 1

	)

112 
	#TCPOPT_MAXSEG
 2

	)

113 
	#TCPOLEN_MAXSEG
 4

	)

114 
	#TCPOPT_WINDOW
 3

	)

115 
	#TCPOLEN_WINDOW
 3

	)

116 
	#TCPOPT_SACK_PERMITTED
 4

	)

117 
	#TCPOLEN_SACK_PERMITTED
 2

	)

118 
	#TCPOPT_SACK
 5

	)

119 
	#TCPOLEN_SACK
 8

	)

120 
	#TCPOPT_TIMESTAMP
 8

	)

121 
	#TCPOLEN_TIMESTAMP
 10

	)

122 
	#TCPOLEN_TSTAMP_APPA
 (
TCPOLEN_TIMESTAMP
+2Ë

	)

123 
	#TCPOPT_TSTAMP_HDR
 \

124 (
TCPOPT_NOP
<<24|TCPOPT_NOP<<16|
TCPOPT_TIMESTAMP
<<8|
TCPOLEN_TIMESTAMP
)

	)

126 
	#MAX_TCPOPTLEN
 40

	)

128 
	#TCPOPT_CC
 11

	)

129 
	#TCPOPT_CCNEW
 12

	)

130 
	#TCPOPT_CCECHO
 13

	)

131 
	#TCPOLEN_CC
 6

	)

132 
	#TCPOLEN_CC_APPA
 (
TCPOLEN_CC
+2)

	)

133 
	#TCPOPT_CC_HDR
(
cc›t
) \

134 (
TCPOPT_NOP
<<24|TCPOPT_NOP<<16|(
cc›t
)<<8|
TCPOLEN_CC
)

	)

135 
	#TCPOPT_SIGNATURE
 19

	)

136 
	#TCPOLEN_SIGNATURE
 18

	)

137 #i‡
MPTCP


138 
	#TCPOPT_MULTIPATH
 30

	)

142 
	#TCPOPT_SACK_PERMIT_HDR
 \

143 (
TCPOPT_NOP
<<24|TCPOPT_NOP<<16|
TCPOPT_SACK_PERMITTED
<<8|
TCPOLEN_SACK_PERMITTED
)

	)

144 
	#TCPOPT_SACK_HDR
 (
TCPOPT_NOP
<<24|TCPOPT_NOP<<16|
TCPOPT_SACK
<<8)

	)

146 
	#MAX_SACK_BLKS
 6

	)

147 
	#TCP_MAX_SACK
 3

	)

156 
	#TCP_MSS
 512

	)

167 
	#TCP_MINMSS
 216

	)

175 
	#TCP6_MSS
 1024

	)

177 
	#TCP_MAXWIN
 65535

	)

178 
	#TTCP_CLIENT_SND_WND
 4096

	)

180 
	#TCP_MAX_WINSHIFT
 14

	)

182 
	#TCP_MAXHLEN
 (0xf<<2Ë

	)

183 
	#TCP_MAXOLEN
 (
TCP_MAXHLEN
 - (
t˝hdr
))

	)

190 
	#TCP_NODELAY
 0x01

	)

191 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

192 
	#TCP_MAXSEG
 0x02

	)

193 
	#TCP_NOPUSH
 0x04

	)

194 
	#TCP_NOOPT
 0x08

	)

195 
	#TCP_KEEPALIVE
 0x10

	)

196 
	#TCP_CONNECTIONTIMEOUT
 0x20

	)

197 
	#PERSIST_TIMEOUT
 0x40

	)

201 
	#TCP_RXT_CONNDROPTIME
 0x80

	)

204 
	#TCP_RXT_FINDROP
 0x100

	)

209 
	#TCP_KEEPINTVL
 0x101

	)

210 
	#TCP_KEEPCNT
 0x102

	)

211 
	#TCP_SENDMOREACKS
 0x103

	)

	@/usr/include/openssl/bio.h

59 #i‚de‡
HEADER_BIO_H


60 
	#HEADER_BIO_H


	)

62 
	~<AvaûabûôyMa¸os.h
>

64 
	~<›ís¶/e_os2.h
>

66 #i‚de‡
OPENSSL_NO_FP_API


67 
	~<°dio.h
>

69 
	~<°d¨g.h
>

71 
	~<›ís¶/¸y±o.h
>

73 #ifde‡ 
__˝lu•lus


78 
	#BIO_TYPE_NONE
 0

	)

79 
	#BIO_TYPE_MEM
 (1|0x0400)

	)

80 
	#BIO_TYPE_FILE
 (2|0x0400)

	)

82 
	#BIO_TYPE_FD
 (4|0x0400|0x0100)

	)

83 
	#BIO_TYPE_SOCKET
 (5|0x0400|0x0100)

	)

84 
	#BIO_TYPE_NULL
 (6|0x0400)

	)

85 
	#BIO_TYPE_SSL
 (7|0x0200)

	)

86 
	#BIO_TYPE_MD
 (8|0x0200Ë

	)

87 
	#BIO_TYPE_BUFFER
 (9|0x0200Ë

	)

88 
	#BIO_TYPE_CIPHER
 (10|0x0200Ë

	)

89 
	#BIO_TYPE_BASE64
 (11|0x0200Ë

	)

90 
	#BIO_TYPE_CONNECT
 (12|0x0400|0x0100Ë

	)

91 
	#BIO_TYPE_ACCEPT
 (13|0x0400|0x0100Ë

	)

92 
	#BIO_TYPE_PROXY_CLIENT
 (14|0x0200Ë

	)

93 
	#BIO_TYPE_PROXY_SERVER
 (15|0x0200Ë

	)

94 
	#BIO_TYPE_NBIO_TEST
 (16|0x0200Ë

	)

95 
	#BIO_TYPE_NULL_FILTER
 (17|0x0200)

	)

96 
	#BIO_TYPE_BER
 (18|0x0200Ë

	)

97 
	#BIO_TYPE_BIO
 (19|0x0400Ë

	)

98 
	#BIO_TYPE_LINEBUFFER
 (20|0x0200Ë

	)

99 
	#BIO_TYPE_DGRAM
 (21|0x0400|0x0100)

	)

100 
	#BIO_TYPE_COMP
 (23|0x0200Ë

	)

102 
	#BIO_TYPE_DESCRIPTOR
 0x0100

	)

103 
	#BIO_TYPE_FILTER
 0x0200

	)

104 
	#BIO_TYPE_SOURCE_SINK
 0x0400

	)

108 
	#BIO_NOCLOSE
 0x00

	)

109 
	#BIO_CLOSE
 0x01

	)

113 
	#BIO_CTRL_RESET
 1

	)

114 
	#BIO_CTRL_EOF
 2

	)

115 
	#BIO_CTRL_INFO
 3

	)

116 
	#BIO_CTRL_SET
 4

	)

117 
	#BIO_CTRL_GET
 5

	)

118 
	#BIO_CTRL_PUSH
 6

	)

119 
	#BIO_CTRL_POP
 7

	)

120 
	#BIO_CTRL_GET_CLOSE
 8

	)

121 
	#BIO_CTRL_SET_CLOSE
 9

	)

122 
	#BIO_CTRL_PENDING
 10

	)

123 
	#BIO_CTRL_FLUSH
 11

	)

124 
	#BIO_CTRL_DUP
 12

	)

125 
	#BIO_CTRL_WPENDING
 13

	)

127 
	#BIO_CTRL_SET_CALLBACK
 14

	)

128 
	#BIO_CTRL_GET_CALLBACK
 15

	)

130 
	#BIO_CTRL_SET_FILENAME
 30

	)

133 
	#BIO_CTRL_DGRAM_CONNECT
 31

	)

134 
	#BIO_CTRL_DGRAM_SET_CONNECTED
 32

	)

137 
	#BIO_CTRL_DGRAM_SET_RECV_TIMEOUT
 33

	)

138 
	#BIO_CTRL_DGRAM_GET_RECV_TIMEOUT
 34

	)

139 
	#BIO_CTRL_DGRAM_SET_SEND_TIMEOUT
 35

	)

140 
	#BIO_CTRL_DGRAM_GET_SEND_TIMEOUT
 36

	)

142 
	#BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP
 37

	)

143 
	#BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP
 38

	)

146 
	#BIO_CTRL_DGRAM_MTU_DISCOVER
 39

	)

149 
	#BIO_CTRL_DGRAM_QUERY_MTU
 40

	)

150 
	#BIO_CTRL_DGRAM_GET_FALLBACK_MTU
 47

	)

151 
	#BIO_CTRL_DGRAM_GET_MTU
 41

	)

152 
	#BIO_CTRL_DGRAM_SET_MTU
 42

	)

157 
	#BIO_CTRL_DGRAM_MTU_EXCEEDED
 43

	)

162 
	#BIO_CTRL_DGRAM_GET_PEER
 46

	)

163 
	#BIO_CTRL_DGRAM_SET_PEER
 44

	)

165 
	#BIO_CTRL_DGRAM_SET_NEXT_TIMEOUT
 45

	)

169 
	#BIO_FP_READ
 0x02

	)

170 
	#BIO_FP_WRITE
 0x04

	)

171 
	#BIO_FP_APPEND
 0x08

	)

172 
	#BIO_FP_TEXT
 0x10

	)

174 
	#BIO_FLAGS_READ
 0x01

	)

175 
	#BIO_FLAGS_WRITE
 0x02

	)

176 
	#BIO_FLAGS_IO_SPECIAL
 0x04

	)

177 
	#BIO_FLAGS_RWS
 (
BIO_FLAGS_READ
|
BIO_FLAGS_WRITE
|
BIO_FLAGS_IO_SPECIAL
)

	)

178 
	#BIO_FLAGS_SHOULD_RETRY
 0x08

	)

179 #i‚def 
BIO_FLAGS_UPLINK


182 
	#BIO_FLAGS_UPLINK
 0

	)

186 
	#BIO_GHBN_CTRL_HITS
 1

	)

187 
	#BIO_GHBN_CTRL_MISSES
 2

	)

188 
	#BIO_GHBN_CTRL_CACHE_SIZE
 3

	)

189 
	#BIO_GHBN_CTRL_GET_ENTRY
 4

	)

190 
	#BIO_GHBN_CTRL_FLUSH
 5

	)

199 
	#BIO_FLAGS_BASE64_NO_NL
 0x100

	)

204 
	#BIO_FLAGS_MEM_RDONLY
 0x200

	)

206 
bio_°
 
	tBIO
;

208 
BIO_£t_Êags
(
BIO
 *
b
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

209 
BIO_ã°_Êags
(c⁄° 
BIO
 *
b
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

210 
BIO_˛ór_Êags
(
BIO
 *
b
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

212 
	#BIO_gë_Êags
(
b
Ë
	`BIO_ã°_Êags
(b, ~(0x0))

	)

213 
	#BIO_£t_ªåy_•ecül
(
b
) \

214 
	`BIO_£t_Êags
(
b
, (
BIO_FLAGS_IO_SPECIAL
|
BIO_FLAGS_SHOULD_RETRY
))

	)

215 
	#BIO_£t_ªåy_ªad
(
b
) \

216 
	`BIO_£t_Êags
(
b
, (
BIO_FLAGS_READ
|
BIO_FLAGS_SHOULD_RETRY
))

	)

217 
	#BIO_£t_ªåy_wrôe
(
b
) \

218 
	`BIO_£t_Êags
(
b
, (
BIO_FLAGS_WRITE
|
BIO_FLAGS_SHOULD_RETRY
))

	)

221 
	#BIO_˛ór_ªåy_Êags
(
b
) \

222 
	`BIO_˛ór_Êags
(
b
, (
BIO_FLAGS_RWS
|
BIO_FLAGS_SHOULD_RETRY
))

	)

223 
	#BIO_gë_ªåy_Êags
(
b
) \

224 
	`BIO_ã°_Êags
(
b
, (
BIO_FLAGS_RWS
|
BIO_FLAGS_SHOULD_RETRY
))

	)

227 
	#BIO_should_ªad
(
a
Ë
	`BIO_ã°_Êags
◊, 
BIO_FLAGS_READ
)

	)

228 
	#BIO_should_wrôe
(
a
Ë
	`BIO_ã°_Êags
◊, 
BIO_FLAGS_WRITE
)

	)

229 
	#BIO_should_io_•ecül
(
a
Ë
	`BIO_ã°_Êags
◊, 
BIO_FLAGS_IO_SPECIAL
)

	)

230 
	#BIO_ªåy_ty≥
(
a
Ë
	`BIO_ã°_Êags
◊, 
BIO_FLAGS_RWS
)

	)

231 
	#BIO_should_ªåy
(
a
Ë
	`BIO_ã°_Êags
◊, 
BIO_FLAGS_SHOULD_RETRY
)

	)

239 
	#BIO_RR_SSL_X509_LOOKUP
 0x01

	)

241 
	#BIO_RR_CONNECT
 0x02

	)

243 
	#BIO_RR_ACCEPT
 0x03

	)

246 
	#BIO_CB_FREE
 0x01

	)

247 
	#BIO_CB_READ
 0x02

	)

248 
	#BIO_CB_WRITE
 0x03

	)

249 
	#BIO_CB_PUTS
 0x04

	)

250 
	#BIO_CB_GETS
 0x05

	)

251 
	#BIO_CB_CTRL
 0x06

	)

255 
	#BIO_CB_RETURN
 0x80

	)

256 
	#BIO_CB_ªtu∫
(
a
Ë(◊)|
BIO_CB_RETURN
))

	)

257 
	#BIO_cb_¥e
(
a
Ë(!(◊)&
BIO_CB_RETURN
))

	)

258 
	#BIO_cb_po°
(
a
Ë(◊)&
BIO_CB_RETURN
)

	)

260 (*
BIO_gë_ˇŒback
(c⁄° 
BIO
 *
b
)Ë(
bio_°
 *,,c⁄° *,, ,Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

261 
BIO_£t_ˇŒback
(
BIO
 *
b
,

262 (*
ˇŒback
)(
bio_°
 *,,c⁄° *,, ,)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

263 *
BIO_gë_ˇŒback_¨g
(c⁄° 
BIO
 *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

264 
BIO_£t_ˇŒback_¨g
(
BIO
 *
b
, *
¨g
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

266 c⁄° * 
BIO_mëhod_«me
(c⁄° 
BIO
 *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

267 
BIO_mëhod_ty≥
(c⁄° 
BIO
 *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

269 
	tbio_öfo_cb
(
	tbio_°
 *, , const *, , , );

271 #i‚de‡
OPENSSL_SYS_WIN16


272 
	sbio_mëhod_°


274 
ty≥
;

275 c⁄° *
«me
;

276 (*
bwrôe
)(
BIO
 *, const *, );

277 (*
bªad
)(
BIO
 *, *, );

278 (*
bputs
)(
BIO
 *, const *);

279 (*
bgës
)(
BIO
 *, *, );

280 (*
˘æ
)(
BIO
 *, , , *);

281 (*
¸óã
)(
BIO
 *);

282 (*
de°roy
)(
BIO
 *);

283 (*
ˇŒback_˘æ
)(
BIO
 *, , 
bio_öfo_cb
 *);

284 } 
	tBIO_METHOD
;

286 
	sbio_mëhod_°


288 
ty≥
;

289 c⁄° *
«me
;

290 (
_Ár
 *
bwrôe
)();

291 (
_Ár
 *
bªad
)();

292 (
_Ár
 *
bputs
)();

293 (
_Ár
 *
bgës
)();

294 (
_Ár
 *
˘æ
)();

295 (
_Ár
 *
¸óã
)();

296 (
_Ár
 *
de°roy
)();

297 (
_Ár
 *
ˇŒback_˘æ
)();

298 } 
	tBIO_METHOD
;

301 
	sbio_°


303 
BIO_METHOD
 *
mëhod
;

305 (*
ˇŒback
)(
bio_°
 *,,const *,, ,);

306 *
cb_¨g
;

308 
öô
;

309 
shutdown
;

310 
Êags
;

311 
ªåy_ªas⁄
;

312 
num
;

313 *
±r
;

314 
bio_°
 *
√xt_bio
;

315 
bio_°
 *
¥ev_bio
;

316 
ª„ªn˚s
;

317 
num_ªad
;

318 
num_wrôe
;

320 
CRYPTO_EX_DATA
 
ex_d©a
;

323 
DECLARE_STACK_OF
(
BIO
)

325 
	sbio_f_buf„r_˘x_°ru˘


337 
ibuf_size
;

338 
obuf_size
;

340 *
ibuf
;

341 
ibuf_Àn
;

342 
ibuf_off
;

344 *
obuf
;

345 
obuf_Àn
;

346 
obuf_off
;

347 } 
	tBIO_F_BUFFER_CTX
;

350 
	#BIO_CONN_S_BEFORE
 1

	)

351 
	#BIO_CONN_S_GET_IP
 2

	)

352 
	#BIO_CONN_S_GET_PORT
 3

	)

353 
	#BIO_CONN_S_CREATE_SOCKET
 4

	)

354 
	#BIO_CONN_S_CONNECT
 5

	)

355 
	#BIO_CONN_S_OK
 6

	)

356 
	#BIO_CONN_S_BLOCKED_CONNECT
 7

	)

357 
	#BIO_CONN_S_NBIO
 8

	)

360 
	#BIO_C_SET_CONNECT
 100

	)

361 
	#BIO_C_DO_STATE_MACHINE
 101

	)

362 
	#BIO_C_SET_NBIO
 102

	)

363 
	#BIO_C_SET_PROXY_PARAM
 103

	)

364 
	#BIO_C_SET_FD
 104

	)

365 
	#BIO_C_GET_FD
 105

	)

366 
	#BIO_C_SET_FILE_PTR
 106

	)

367 
	#BIO_C_GET_FILE_PTR
 107

	)

368 
	#BIO_C_SET_FILENAME
 108

	)

369 
	#BIO_C_SET_SSL
 109

	)

370 
	#BIO_C_GET_SSL
 110

	)

371 
	#BIO_C_SET_MD
 111

	)

372 
	#BIO_C_GET_MD
 112

	)

373 
	#BIO_C_GET_CIPHER_STATUS
 113

	)

374 
	#BIO_C_SET_BUF_MEM
 114

	)

375 
	#BIO_C_GET_BUF_MEM_PTR
 115

	)

376 
	#BIO_C_GET_BUFF_NUM_LINES
 116

	)

377 
	#BIO_C_SET_BUFF_SIZE
 117

	)

378 
	#BIO_C_SET_ACCEPT
 118

	)

379 
	#BIO_C_SSL_MODE
 119

	)

380 
	#BIO_C_GET_MD_CTX
 120

	)

381 
	#BIO_C_GET_PROXY_PARAM
 121

	)

382 
	#BIO_C_SET_BUFF_READ_DATA
 122

	)

383 
	#BIO_C_GET_CONNECT
 123

	)

384 
	#BIO_C_GET_ACCEPT
 124

	)

385 
	#BIO_C_SET_SSL_RENEGOTIATE_BYTES
 125

	)

386 
	#BIO_C_GET_SSL_NUM_RENEGOTIATES
 126

	)

387 
	#BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT
 127

	)

388 
	#BIO_C_FILE_SEEK
 128

	)

389 
	#BIO_C_GET_CIPHER_CTX
 129

	)

390 
	#BIO_C_SET_BUF_MEM_EOF_RETURN
 130

	)

391 
	#BIO_C_SET_BIND_MODE
 131

	)

392 
	#BIO_C_GET_BIND_MODE
 132

	)

393 
	#BIO_C_FILE_TELL
 133

	)

394 
	#BIO_C_GET_SOCKS
 134

	)

395 
	#BIO_C_SET_SOCKS
 135

	)

397 
	#BIO_C_SET_WRITE_BUF_SIZE
 136

	)

398 
	#BIO_C_GET_WRITE_BUF_SIZE
 137

	)

399 
	#BIO_C_MAKE_BIO_PAIR
 138

	)

400 
	#BIO_C_DESTROY_BIO_PAIR
 139

	)

401 
	#BIO_C_GET_WRITE_GUARANTEE
 140

	)

402 
	#BIO_C_GET_READ_REQUEST
 141

	)

403 
	#BIO_C_SHUTDOWN_WR
 142

	)

404 
	#BIO_C_NREAD0
 143

	)

405 
	#BIO_C_NREAD
 144

	)

406 
	#BIO_C_NWRITE0
 145

	)

407 
	#BIO_C_NWRITE
 146

	)

408 
	#BIO_C_RESET_READ_REQUEST
 147

	)

409 
	#BIO_C_SET_MD_CTX
 148

	)

412 
	#BIO_£t_≠p_d©a
(
s
,
¨g
Ë
	`BIO_£t_ex_d©a
(s,0,¨g)

	)

413 
	#BIO_gë_≠p_d©a
(
s
Ë
	`BIO_gë_ex_d©a
(s,0)

	)

416 
	#BIO_£t_c⁄n_ho°«me
(
b
,
«me
Ë
	`BIO_˘æ
(b,
BIO_C_SET_CONNECT
,0,(*Íame)

	)

417 
	#BIO_£t_c⁄n_p‹t
(
b
,
p‹t
Ë
	`BIO_˘æ
(b,
BIO_C_SET_CONNECT
,1,(*Ì‹t)

	)

418 
	#BIO_£t_c⁄n_ù
(
b
,
ù
Ë
	`BIO_˘æ
(b,
BIO_C_SET_CONNECT
,2,(*)ù)

	)

419 
	#BIO_£t_c⁄n_öt_p‹t
(
b
,
p‹t
Ë
	`BIO_˘æ
(b,
BIO_C_SET_CONNECT
,3,(*Ì‹t)

	)

420 
	#BIO_gë_c⁄n_ho°«me
(
b
Ë
	`BIO_±r_˘æ
(b,
BIO_C_GET_CONNECT
,0)

	)

421 
	#BIO_gë_c⁄n_p‹t
(
b
Ë
	`BIO_±r_˘æ
(b,
BIO_C_GET_CONNECT
,1)

	)

422 
	#BIO_gë_c⁄n_ù
(
b
Ë
	`BIO_±r_˘æ
(b,
BIO_C_GET_CONNECT
,2)

	)

423 
	#BIO_gë_c⁄n_öt_p‹t
(
b
Ë
	`BIO_öt_˘æ
(b,
BIO_C_GET_CONNECT
,3,0)

	)

426 
	#BIO_£t_nbio
(
b
,
n
Ë
	`BIO_˘æ
(b,
BIO_C_SET_NBIO
,“),
NULL
)

	)

429 
	#BIO_£t_ac˚±_p‹t
(
b
,
«me
Ë
	`BIO_˘æ
(b,
BIO_C_SET_ACCEPT
,0,(*Íame)

	)

430 
	#BIO_gë_ac˚±_p‹t
(
b
Ë
	`BIO_±r_˘æ
(b,
BIO_C_GET_ACCEPT
,0)

	)

432 
	#BIO_£t_nbio_ac˚±
(
b
,
n
Ë
	`BIO_˘æ
(b,
BIO_C_SET_ACCEPT
,1,“)?(*)"a":
NULL
)

	)

433 
	#BIO_£t_ac˚±_bios
(
b
,
bio
Ë
	`BIO_˘æ
(b,
BIO_C_SET_ACCEPT
,2,(*)bio)

	)

435 
	#BIO_BIND_NORMAL
 0

	)

436 
	#BIO_BIND_REUSEADDR_IF_UNUSED
 1

	)

437 
	#BIO_BIND_REUSEADDR
 2

	)

438 
	#BIO_£t_böd_mode
(
b
,
mode
Ë
	`BIO_˘æ
(b,
BIO_C_SET_BIND_MODE
,mode,
NULL
)

	)

439 
	#BIO_gë_böd_mode
(
b
,
mode
Ë
	`BIO_˘æ
(b,
BIO_C_GET_BIND_MODE
,0,
NULL
)

	)

441 
	#BIO_do_c⁄√˘
(
b
Ë
	`BIO_do_h™dshake
(b)

	)

442 
	#BIO_do_ac˚±
(
b
Ë
	`BIO_do_h™dshake
(b)

	)

443 
	#BIO_do_h™dshake
(
b
Ë
	`BIO_˘æ
(b,
BIO_C_DO_STATE_MACHINE
,0,
NULL
)

	)

446 
	#BIO_£t_uæ
(
b
,
uæ
Ë
	`BIO_˘æ
(b,
BIO_C_SET_PROXY_PARAM
,0,(*)(uæ))

	)

447 
	#BIO_£t_¥oxõs
(
b
,
p
Ë
	`BIO_˘æ
(b,
BIO_C_SET_PROXY_PARAM
,1,(*)’))

	)

449 
	#BIO_£t_fûãr_bio
(
b
,
s
Ë
	`BIO_˘æ
(b,
BIO_C_SET_PROXY_PARAM
,2,(*)(s))

	)

451 
	#BIO_£t_¥oxy_cb
(
b
,
cb
Ë
	`BIO_ˇŒback_˘æ
(b,
BIO_C_SET_PROXY_PARAM
,3,(*(*cb)()))

	)

452 
	#BIO_£t_¥oxy_hódî
(
b
,
sk
Ë
	`BIO_˘æ
(b,
BIO_C_SET_PROXY_PARAM
,4,(*)sk)

	)

453 
	#BIO_£t_no_c⁄√˘_ªtu∫
(
b
,
boﬁ
Ë
	`BIO_öt_˘æ
(b,
BIO_C_SET_PROXY_PARAM
,5,boﬁ)

	)

455 
	#BIO_gë_¥oxy_hódî
(
b
,
skp
Ë
	`BIO_˘æ
(b,
BIO_C_GET_PROXY_PARAM
,0,(*)skp)

	)

456 
	#BIO_gë_¥oxõs
(
b
,
pxy_p
Ë
	`BIO_˘æ
(b,
BIO_C_GET_PROXY_PARAM
,1,(*)’xy_p))

	)

457 
	#BIO_gë_uæ
(
b
,
uæ
Ë
	`BIO_˘æ
(b,
BIO_C_GET_PROXY_PARAM
,2,(*)(uæ))

	)

458 
	#BIO_gë_no_c⁄√˘_ªtu∫
(
b
Ë
	`BIO_˘æ
(b,
BIO_C_GET_PROXY_PARAM
,5,
NULL
)

	)

460 
	#BIO_£t_fd
(
b
,
fd
,
c
Ë
	`BIO_öt_˘æ
(b,
BIO_C_SET_FD
,c,fd)

	)

461 
	#BIO_gë_fd
(
b
,
c
Ë
	`BIO_˘æ
(b,
BIO_C_GET_FD
,0,(*)c)

	)

463 
	#BIO_£t_Â
(
b
,
Â
,
c
Ë
	`BIO_˘æ
(b,
BIO_C_SET_FILE_PTR
,c,(*)Â)

	)

464 
	#BIO_gë_Â
(
b
,
Âp
Ë
	`BIO_˘æ
(b,
BIO_C_GET_FILE_PTR
,0,(*)Âp)

	)

466 
	#BIO_£ek
(
b
,
ofs
Ë()
	`BIO_˘æ
(b,
BIO_C_FILE_SEEK
,ofs,
NULL
)

	)

467 
	#BIO_ãŒ
(
b
Ë()
	`BIO_˘æ
(b,
BIO_C_FILE_TELL
,0,
NULL
)

	)

471 #ifde‡
CONST_STRICT


475 
BIO_ªad_fûíame
(
BIO
 *
b
,c⁄° *
«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

477 
	#BIO_ªad_fûíame
(
b
,
«me
Ë
	`BIO_˘æ
(b,
BIO_C_SET_FILENAME
, \

478 
BIO_CLOSE
|
BIO_FP_READ
,(*)
«me
)

	)

480 
	#BIO_wrôe_fûíame
(
b
,
«me
Ë
	`BIO_˘æ
(b,
BIO_C_SET_FILENAME
, \

481 
BIO_CLOSE
|
BIO_FP_WRITE
,
«me
)

	)

482 
	#BIO_≠≥nd_fûíame
(
b
,
«me
Ë
	`BIO_˘æ
(b,
BIO_C_SET_FILENAME
, \

483 
BIO_CLOSE
|
BIO_FP_APPEND
,
«me
)

	)

484 
	#BIO_rw_fûíame
(
b
,
«me
Ë
	`BIO_˘æ
(b,
BIO_C_SET_FILENAME
, \

485 
BIO_CLOSE
|
BIO_FP_READ
|
BIO_FP_WRITE
,
«me
)

	)

491 
	#BIO_£t_s¶
(
b
,
s¶
,
c
Ë
	`BIO_˘æ
(b,
BIO_C_SET_SSL
,c,(*)s¶)

	)

492 
	#BIO_gë_s¶
(
b
,
s¶p
Ë
	`BIO_˘æ
(b,
BIO_C_GET_SSL
,0,(*)s¶p)

	)

493 
	#BIO_£t_s¶_mode
(
b
,
˛õ¡
Ë
	`BIO_˘æ
(b,
BIO_C_SSL_MODE
,˛õ¡,
NULL
)

	)

494 
	#BIO_£t_s¶_ª√gŸüã_byãs
(
b
,
num
) \

495 
	`BIO_˘æ
(
b
,
BIO_C_SET_SSL_RENEGOTIATE_BYTES
,
num
,
NULL
);

	)

496 
	#BIO_gë_num_ª√gŸüãs
(
b
) \

497 
	`BIO_˘æ
(
b
,
BIO_C_GET_SSL_NUM_RENEGOTIATES
,0,
NULL
);

	)

498 
	#BIO_£t_s¶_ª√gŸüã_timeout
(
b
,
£c⁄ds
) \

499 
	`BIO_˘æ
(
b
,
BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT
,
£c⁄ds
,
NULL
);

	)

504 
	#BIO_gë_mem_d©a
(
b
,
µ
Ë
	`BIO_˘æ
(b,
BIO_CTRL_INFO
,0,(*Ìp)

	)

505 
	#BIO_£t_mem_buf
(
b
,
bm
,
c
Ë
	`BIO_˘æ
(b,
BIO_C_SET_BUF_MEM
,c,(*)bm)

	)

506 
	#BIO_gë_mem_±r
(
b
,
µ
Ë
	`BIO_˘æ
(b,
BIO_C_GET_BUF_MEM_PTR
,0,(*Ìp)

	)

507 
	#BIO_£t_mem_eof_ªtu∫
(
b
,
v
) \

508 
	`BIO_˘æ
(
b
,
BIO_C_SET_BUF_MEM_EOF_RETURN
,
v
,
NULL
)

	)

511 
	#BIO_gë_buf„r_num_löes
(
b
Ë
	`BIO_˘æ
(b,
BIO_C_GET_BUFF_NUM_LINES
,0,
NULL
)

	)

512 
	#BIO_£t_buf„r_size
(
b
,
size
Ë
	`BIO_˘æ
(b,
BIO_C_SET_BUFF_SIZE
,size,
NULL
)

	)

513 
	#BIO_£t_ªad_buf„r_size
(
b
,
size
Ë
	`BIO_öt_˘æ
(b,
BIO_C_SET_BUFF_SIZE
,size,0)

	)

514 
	#BIO_£t_wrôe_buf„r_size
(
b
,
size
Ë
	`BIO_öt_˘æ
(b,
BIO_C_SET_BUFF_SIZE
,size,1)

	)

515 
	#BIO_£t_buf„r_ªad_d©a
(
b
,
buf
,
num
Ë
	`BIO_˘æ
(b,
BIO_C_SET_BUFF_READ_DATA
,num,buf)

	)

518 
	#BIO_dup_°©e
(
b
,
ªt
Ë
	`BIO_˘æ
(b,
BIO_CTRL_DUP
,0,(*)‘ë))

	)

520 
	#BIO_ª£t
(
b
Ë()
	`BIO_˘æ
(b,
BIO_CTRL_RESET
,0,
NULL
)

	)

521 
	#BIO_eof
(
b
Ë()
	`BIO_˘æ
(b,
BIO_CTRL_EOF
,0,
NULL
)

	)

522 
	#BIO_£t_˛o£
(
b
,
c
Ë()
	`BIO_˘æ
(b,
BIO_CTRL_SET_CLOSE
,(c),
NULL
)

	)

523 
	#BIO_gë_˛o£
(
b
Ë()
	`BIO_˘æ
(b,
BIO_CTRL_GET_CLOSE
,0,
NULL
)

	)

524 
	#BIO_≥ndög
(
b
Ë()
	`BIO_˘æ
(b,
BIO_CTRL_PENDING
,0,
NULL
)

	)

525 
	#BIO_w≥ndög
(
b
Ë()
	`BIO_˘æ
(b,
BIO_CTRL_WPENDING
,0,
NULL
)

	)

527 
size_t
 
BIO_˘æ_≥ndög
(
BIO
 *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

528 
size_t
 
BIO_˘æ_w≥ndög
(
BIO
 *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

529 
	#BIO_Êush
(
b
Ë()
	`BIO_˘æ
(b,
BIO_CTRL_FLUSH
,0,
NULL
)

	)

530 
	#BIO_gë_öfo_ˇŒback
(
b
,
cbp
Ë()
	`BIO_˘æ
(b,
BIO_CTRL_GET_CALLBACK
,0, \

531 
cbp
)

	)

532 
	#BIO_£t_öfo_ˇŒback
(
b
,
cb
Ë()
	`BIO_ˇŒback_˘æ
(b,
BIO_CTRL_SET_CALLBACK
,cb)

	)

535 
	#BIO_buf„r_gë_num_löes
(
b
Ë
	`BIO_˘æ
(b,
BIO_CTRL_GET
,0,
NULL
)

	)

538 
	#BIO_£t_wrôe_buf_size
(
b
,
size
Ë()
	`BIO_˘æ
(b,
BIO_C_SET_WRITE_BUF_SIZE
,size,
NULL
)

	)

539 
	#BIO_gë_wrôe_buf_size
(
b
,
size
Ë(
size_t
)
	`BIO_˘æ
(b,
BIO_C_GET_WRITE_BUF_SIZE
,size,
NULL
)

	)

540 
	#BIO_make_bio_∑ú
(
b1
,
b2
Ë()
	`BIO_˘æ
(b1,
BIO_C_MAKE_BIO_PAIR
,0,b2)

	)

541 
	#BIO_de°roy_bio_∑ú
(
b
Ë()
	`BIO_˘æ
(b,
BIO_C_DESTROY_BIO_PAIR
,0,
NULL
)

	)

542 
	#BIO_shutdown_wr
(
b
Ë()
	`BIO_˘æ
(b, 
BIO_C_SHUTDOWN_WR
, 0, 
NULL
)

	)

544 
	#BIO_gë_wrôe_gu¨™ãe
(
b
Ë()
	`BIO_˘æ
(b,
BIO_C_GET_WRITE_GUARANTEE
,0,
NULL
)

	)

545 
	#BIO_gë_ªad_ªque°
(
b
Ë()
	`BIO_˘æ
(b,
BIO_C_GET_READ_REQUEST
,0,
NULL
)

	)

546 
size_t
 
BIO_˘æ_gë_wrôe_gu¨™ãe
(
BIO
 *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

547 
size_t
 
BIO_˘æ_gë_ªad_ªque°
(
BIO
 *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

548 
BIO_˘æ_ª£t_ªad_ªque°
(
BIO
 *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

551 
	#BIO_˘æ_dgøm_c⁄√˘
(
b
,
≥î
) \

552 ()
	`BIO_˘æ
(
b
,
BIO_CTRL_DGRAM_CONNECT
,0, (*)
≥î
)

	)

553 
	#BIO_˘æ_£t_c⁄√˘ed
(
b
, 
°©e
, 
≥î
) \

554 ()
	`BIO_˘æ
(
b
, 
BIO_CTRL_DGRAM_SET_CONNECTED
, 
°©e
, (*)
≥î
)

	)

555 
	#BIO_dgøm_ªcv_timedout
(
b
) \

556 ()
	`BIO_˘æ
(
b
, 
BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP
, 0, 
NULL
)

	)

557 
	#BIO_dgøm_£nd_timedout
(
b
) \

558 ()
	`BIO_˘æ
(
b
, 
BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP
, 0, 
NULL
)

	)

559 
	#BIO_dgøm_gë_≥î
(
b
,
≥î
) \

560 ()
	`BIO_˘æ
(
b
, 
BIO_CTRL_DGRAM_GET_PEER
, 0, (*)
≥î
)

	)

561 
	#BIO_dgøm_£t_≥î
(
b
,
≥î
) \

562 ()
	`BIO_˘æ
(
b
, 
BIO_CTRL_DGRAM_SET_PEER
, 0, (*)
≥î
)

	)

567 
BIO_£t_ex_d©a
(
BIO
 *
bio
,
idx
,*
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

568 *
BIO_gë_ex_d©a
(
BIO
 *
bio
,
idx
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

569 
BIO_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w
 *
√w_func
,

570 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

571 
BIO_numbî_ªad
(
BIO
 *
bio
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

572 
BIO_numbî_wrôãn
(
BIO
 *
bio
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

574 #i‚de‡
OPENSSL_NO_FP_API


575 #i‡
deföed
(
OPENSSL_SYS_WIN16
Ë&& deföed(
_WINDLL
)

576 
BIO_METHOD
 *
BIO_s_fûe_öã∫Æ
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

577 
BIO
 *
BIO_√w_fûe_öã∫Æ
(*
fûíame
, *
mode
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

578 
BIO
 *
BIO_√w_Â_öã∫Æ
(
FILE
 *
°ªam
, 
˛o£_Êag
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

579 
	#BIO_s_fûe
 
BIO_s_fûe_öã∫Æ


	)

580 
	#BIO_√w_fûe
 
BIO_√w_fûe_öã∫Æ


	)

581 
	#BIO_√w_Â
 
BIO_√w_Â_öã∫Æ


	)

583 
BIO_METHOD
 *
BIO_s_fûe
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

584 
BIO
 *
BIO_√w_fûe
(c⁄° *
fûíame
, c⁄° *
mode
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

585 
BIO
 *
BIO_√w_Â
(
FILE
 *
°ªam
, 
˛o£_Êag
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

586 
	#BIO_s_fûe_öã∫Æ
 
BIO_s_fûe


	)

587 
	#BIO_√w_fûe_öã∫Æ
 
BIO_√w_fûe


	)

588 
	#BIO_√w_Â_öã∫Æ
 
BIO_s_fûe


	)

591 
BIO
 * 
BIO_√w
(
BIO_METHOD
 *
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

592 
BIO_£t
(
BIO
 *
a
,
BIO_METHOD
 *
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

593 
BIO_‰ì
(
BIO
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

594 
BIO_v‰ì
(
BIO
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

595 
BIO_ªad
(
BIO
 *
b
, *
d©a
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

596 
BIO_gës
(
BIO
 *
bp
,*
buf
, 
size
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

597 
BIO_wrôe
(
BIO
 *
b
, c⁄° *
d©a
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

598 
BIO_puts
(
BIO
 *
bp
,c⁄° *
buf
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

599 
BIO_ödít
(
BIO
 *
b
,
ödít
,
max
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

600 
BIO_˘æ
(
BIO
 *
bp
,
cmd
,
œrg
,*
∑rg
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

601 
BIO_ˇŒback_˘æ
(
BIO
 *
b
, 
cmd
, (*
Â
)(
bio_°
 *, , c⁄° *, , , )Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

602 * 
BIO_±r_˘æ
(
BIO
 *
bp
,
cmd
,
œrg
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

603 
BIO_öt_˘æ
(
BIO
 *
bp
,
cmd
,
œrg
,
ürg
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

604 
BIO
 * 
BIO_push
(BIO *
b
,BIO *
≠≥nd
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

605 
BIO
 * 
BIO_p›
(BIO *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

606 
BIO_‰ì_Æl
(
BIO
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

607 
BIO
 * 
BIO_föd_ty≥
(BIO *
b
,
bio_ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

608 
BIO
 * 
BIO_√xt
(BIO *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

609 
BIO
 * 
BIO_gë_ªåy_BIO
(BIO *
bio
, *
ªas⁄
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

610 
BIO_gë_ªåy_ªas⁄
(
BIO
 *
bio
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

611 
BIO
 * 
BIO_dup_chaö
(BIO *
ö
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

613 
BIO_ƒód0
(
BIO
 *
bio
, **
buf
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

614 
BIO_ƒód
(
BIO
 *
bio
, **
buf
, 
num
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

615 
BIO_nwrôe0
(
BIO
 *
bio
, **
buf
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

616 
BIO_nwrôe
(
BIO
 *
bio
, **
buf
, 
num
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

618 #i‚de‡
OPENSSL_SYS_WIN16


619 
BIO_debug_ˇŒback
(
BIO
 *
bio
,
cmd
,c⁄° *
¨gp
,
¨gi
,

620 
¨gl
,
ªt
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

622 
_Ár
 
_lﬂdds
 
BIO_debug_ˇŒback
(
BIO
 *
bio
,
cmd
,c⁄° *
¨gp
,
¨gi
,

623 
¨gl
,
ªt
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

626 
BIO_METHOD
 *
BIO_s_mem
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

627 
BIO
 *
BIO_√w_mem_buf
(*
buf
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

628 
BIO_METHOD
 *
BIO_s_sockë
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

629 
BIO_METHOD
 *
BIO_s_c⁄√˘
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

630 
BIO_METHOD
 *
BIO_s_ac˚±
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

631 
BIO_METHOD
 *
BIO_s_fd
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

632 #i‚de‡
OPENSSL_SYS_OS2


633 
BIO_METHOD
 *
BIO_s_log
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

635 
BIO_METHOD
 *
BIO_s_bio
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

636 
BIO_METHOD
 *
BIO_s_nuŒ
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

637 
BIO_METHOD
 *
BIO_f_nuŒ
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

638 
BIO_METHOD
 *
BIO_f_buf„r
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

639 #ifde‡
OPENSSL_SYS_VMS


640 
BIO_METHOD
 *
BIO_f_löebuf„r
();

642 
BIO_METHOD
 *
BIO_f_nbio_ã°
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

643 #i‚de‡
OPENSSL_NO_DGRAM


644 
BIO_METHOD
 *
BIO_s_d©agøm
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

649 
BIO_sock_should_ªåy
(
i
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

650 
BIO_sock_n⁄_Áèl_îr‹
(
îr‹
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

651 
BIO_dgøm_n⁄_Áèl_îr‹
(
îr‹
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

653 
BIO_fd_should_ªåy
(
i
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

654 
BIO_fd_n⁄_Áèl_îr‹
(
îr‹
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

655 
BIO_dump_cb
((*
cb
)(c⁄° *
d©a
, 
size_t
 
Àn
, *
u
),

656 *
u
, c⁄° *
s
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

657 
BIO_dump_ödít_cb
((*
cb
)(c⁄° *
d©a
, 
size_t
 
Àn
, *
u
),

658 *
u
, c⁄° *
s
, 
Àn
, 
ödít
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

659 
BIO_dump
(
BIO
 *
b
,c⁄° *
byãs
,
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

660 
BIO_dump_ödít
(
BIO
 *
b
,c⁄° *
byãs
,
Àn
,
ödít
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

661 #i‚de‡
OPENSSL_NO_FP_API


662 
BIO_dump_Â
(
FILE
 *
Â
, c⁄° *
s
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

663 
BIO_dump_ödít_Â
(
FILE
 *
Â
, c⁄° *
s
, 
Àn
, 
ödít
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

665 
ho°ít
 *
BIO_gëho°by«me
(c⁄° *
«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

674 
BIO_sock_îr‹
(
sock
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

675 
BIO_sockë_io˘l
(
fd
, 
ty≥
, *
¨g
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

676 
BIO_sockë_nbio
(
fd
,
mode
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

677 
BIO_gë_p‹t
(c⁄° *
°r
, *
p‹t_±r
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

678 
BIO_gë_ho°_ù
(c⁄° *
°r
, *
ù
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

679 
BIO_gë_ac˚±_sockë
(*
ho°_p‹t
,
mode
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

680 
BIO_ac˚±
(
sock
,**
ù_p‹t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

681 
BIO_sock_öô
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

682 
BIO_sock_˛ónup
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

683 
BIO_£t_t˝_ndñay
(
sock
,
tu∫_⁄
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

685 
BIO
 *
BIO_√w_sockë
(
sock
, 
˛o£_Êag
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

686 
BIO
 *
BIO_√w_dgøm
(
fd
, 
˛o£_Êag
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

687 
BIO
 *
BIO_√w_fd
(
fd
, 
˛o£_Êag
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

688 
BIO
 *
BIO_√w_c⁄√˘
(*
ho°_p‹t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

689 
BIO
 *
BIO_√w_ac˚±
(*
ho°_p‹t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

691 
BIO_√w_bio_∑ú
(
BIO
 **
bio1
, 
size_t
 
wrôebuf1
,

692 
BIO
 **
bio2
, 
size_t
 
wrôebuf2
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

698 
BIO_c›y_√xt_ªåy
(
BIO
 *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

702 #ifde‡
__GNUC__


703 
	#__bio_h__©å__
 
__©åibuã__


	)

705 
	#__bio_h__©å__
(
x
)

	)

707 
BIO_¥ötf
(
BIO
 *
bio
, c⁄° *
f‹m©
, ...)

708 
__bio_h__©å__
((
__f‹m©__
(
__¥ötf__
,2,3))Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

709 
BIO_v¥ötf
(
BIO
 *
bio
, c⁄° *
f‹m©
, 
va_li°
 
¨gs
)

710 
__bio_h__©å__
((
__f‹m©__
(
__¥ötf__
,2,0))Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

711 
BIO_¢¥ötf
(*
buf
, 
size_t
 
n
, c⁄° *
f‹m©
, ...)

712 
__bio_h__©å__
((
__f‹m©__
(
__¥ötf__
,3,4))Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

713 
BIO_v¢¥ötf
(*
buf
, 
size_t
 
n
, c⁄° *
f‹m©
, 
va_li°
 
¨gs
)

714 
__bio_h__©å__
((
__f‹m©__
(
__¥ötf__
,3,0))Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

715 #unde‡
__bio_h__©å__


721 
ERR_lﬂd_BIO_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

726 
	#BIO_F_ACPT_STATE
 100

	)

727 
	#BIO_F_BIO_ACCEPT
 101

	)

728 
	#BIO_F_BIO_BER_GET_HEADER
 102

	)

729 
	#BIO_F_BIO_CALLBACK_CTRL
 131

	)

730 
	#BIO_F_BIO_CTRL
 103

	)

731 
	#BIO_F_BIO_GETHOSTBYNAME
 120

	)

732 
	#BIO_F_BIO_GETS
 104

	)

733 
	#BIO_F_BIO_GET_ACCEPT_SOCKET
 105

	)

734 
	#BIO_F_BIO_GET_HOST_IP
 106

	)

735 
	#BIO_F_BIO_GET_PORT
 107

	)

736 
	#BIO_F_BIO_MAKE_PAIR
 121

	)

737 
	#BIO_F_BIO_NEW
 108

	)

738 
	#BIO_F_BIO_NEW_FILE
 109

	)

739 
	#BIO_F_BIO_NEW_MEM_BUF
 126

	)

740 
	#BIO_F_BIO_NREAD
 123

	)

741 
	#BIO_F_BIO_NREAD0
 124

	)

742 
	#BIO_F_BIO_NWRITE
 125

	)

743 
	#BIO_F_BIO_NWRITE0
 122

	)

744 
	#BIO_F_BIO_PUTS
 110

	)

745 
	#BIO_F_BIO_READ
 111

	)

746 
	#BIO_F_BIO_SOCK_INIT
 112

	)

747 
	#BIO_F_BIO_WRITE
 113

	)

748 
	#BIO_F_BUFFER_CTRL
 114

	)

749 
	#BIO_F_CONN_CTRL
 127

	)

750 
	#BIO_F_CONN_STATE
 115

	)

751 
	#BIO_F_FILE_CTRL
 116

	)

752 
	#BIO_F_FILE_READ
 130

	)

753 
	#BIO_F_LINEBUFFER_CTRL
 129

	)

754 
	#BIO_F_MEM_READ
 128

	)

755 
	#BIO_F_MEM_WRITE
 117

	)

756 
	#BIO_F_SSL_NEW
 118

	)

757 
	#BIO_F_WSASTARTUP
 119

	)

760 
	#BIO_R_ACCEPT_ERROR
 100

	)

761 
	#BIO_R_BAD_FOPEN_MODE
 101

	)

762 
	#BIO_R_BAD_HOSTNAME_LOOKUP
 102

	)

763 
	#BIO_R_BROKEN_PIPE
 124

	)

764 
	#BIO_R_CONNECT_ERROR
 103

	)

765 
	#BIO_R_EOF_ON_MEMORY_BIO
 127

	)

766 
	#BIO_R_ERROR_SETTING_NBIO
 104

	)

767 
	#BIO_R_ERROR_SETTING_NBIO_ON_ACCEPTED_SOCKET
 105

	)

768 
	#BIO_R_ERROR_SETTING_NBIO_ON_ACCEPT_SOCKET
 106

	)

769 
	#BIO_R_GETHOSTBYNAME_ADDR_IS_NOT_AF_INET
 107

	)

770 
	#BIO_R_INVALID_ARGUMENT
 125

	)

771 
	#BIO_R_INVALID_IP_ADDRESS
 108

	)

772 
	#BIO_R_IN_USE
 123

	)

773 
	#BIO_R_KEEPALIVE
 109

	)

774 
	#BIO_R_NBIO_CONNECT_ERROR
 110

	)

775 
	#BIO_R_NO_ACCEPT_PORT_SPECIFIED
 111

	)

776 
	#BIO_R_NO_HOSTNAME_SPECIFIED
 112

	)

777 
	#BIO_R_NO_PORT_DEFINED
 113

	)

778 
	#BIO_R_NO_PORT_SPECIFIED
 114

	)

779 
	#BIO_R_NO_SUCH_FILE
 128

	)

780 
	#BIO_R_NULL_PARAMETER
 115

	)

781 
	#BIO_R_TAG_MISMATCH
 116

	)

782 
	#BIO_R_UNABLE_TO_BIND_SOCKET
 117

	)

783 
	#BIO_R_UNABLE_TO_CREATE_SOCKET
 118

	)

784 
	#BIO_R_UNABLE_TO_LISTEN_SOCKET
 119

	)

785 
	#BIO_R_UNINITIALIZED
 120

	)

786 
	#BIO_R_UNSUPPORTED_METHOD
 121

	)

787 
	#BIO_R_WRITE_TO_READ_ONLY_BIO
 126

	)

788 
	#BIO_R_WSASTARTUP
 122

	)

790 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/engine.h

64 #i‚de‡
HEADER_ENGINE_H


65 
	#HEADER_ENGINE_H


	)

67 
	~<AvaûabûôyMa¸os.h
>

69 
	~<›ís¶/›ís¶c⁄f.h
>

71 #ifde‡
OPENSSL_NO_ENGINE


72 #îr‹ 
ENGINE
 
is
 
dißbÀd
.

75 #i‚de‡
OPENSSL_NO_DEPRECATED


76 
	~<›ís¶/bn.h
>

77 #i‚de‡
OPENSSL_NO_RSA


78 
	~<›ís¶/rß.h
>

80 #i‚de‡
OPENSSL_NO_DSA


81 
	~<›ís¶/dß.h
>

83 #i‚de‡
OPENSSL_NO_DH


84 
	~<›ís¶/dh.h
>

86 #i‚de‡
OPENSSL_NO_ECDH


87 
	~<›ís¶/ecdh.h
>

89 #i‚de‡
OPENSSL_NO_ECDSA


90 
	~<›ís¶/ecdß.h
>

92 
	~<›ís¶/ønd.h
>

93 
	~<›ís¶/°‹e.h
>

94 
	~<›ís¶/ui.h
>

95 
	~<›ís¶/îr.h
>

98 
	~<›ís¶/x509.h
>

100 
	~<›ís¶/os¶_typ.h
>

101 
	~<›ís¶/symhacks.h
>

103 #ifde‡ 
__˝lu•lus


109 
	#ENGINE_METHOD_RSA
 ()0x0001

	)

110 
	#ENGINE_METHOD_DSA
 ()0x0002

	)

111 
	#ENGINE_METHOD_DH
 ()0x0004

	)

112 
	#ENGINE_METHOD_RAND
 ()0x0008

	)

113 
	#ENGINE_METHOD_ECDH
 ()0x0010

	)

114 
	#ENGINE_METHOD_ECDSA
 ()0x0020

	)

115 
	#ENGINE_METHOD_CIPHERS
 ()0x0040

	)

116 
	#ENGINE_METHOD_DIGESTS
 ()0x0080

	)

117 
	#ENGINE_METHOD_STORE
 ()0x0100

	)

119 
	#ENGINE_METHOD_ALL
 ()0xFFFF

	)

120 
	#ENGINE_METHOD_NONE
 ()0x0000

	)

126 
	#ENGINE_TABLE_FLAG_NOINIT
 ()0x0001

	)

134 
	#ENGINE_FLAGS_MANUAL_CMD_CTRL
 ()0x0002

	)

143 
	#ENGINE_FLAGS_BY_ID_COPY
 ()0x0004

	)

156 
	#ENGINE_CMD_FLAG_NUMERIC
 ()0x0001

	)

159 
	#ENGINE_CMD_FLAG_STRING
 ()0x0002

	)

162 
	#ENGINE_CMD_FLAG_NO_INPUT
 ()0x0004

	)

166 
	#ENGINE_CMD_FLAG_INTERNAL
 ()0x0008

	)

181 
	#ENGINE_CTRL_SET_LOGSTREAM
 1

	)

182 
	#ENGINE_CTRL_SET_PASSWORD_CALLBACK
 2

	)

183 
	#ENGINE_CTRL_HUP
 3

	)

185 
	#ENGINE_CTRL_SET_USER_INTERFACE
 4

	)

186 
	#ENGINE_CTRL_SET_CALLBACK_DATA
 5

	)

190 
	#ENGINE_CTRL_LOAD_CONFIGURATION
 6

	)

193 
	#ENGINE_CTRL_LOAD_SECTION
 7

	)

214 
	#ENGINE_CTRL_HAS_CTRL_FUNCTION
 10

	)

217 
	#ENGINE_CTRL_GET_FIRST_CMD_TYPE
 11

	)

220 
	#ENGINE_CTRL_GET_NEXT_CMD_TYPE
 12

	)

223 
	#ENGINE_CTRL_GET_CMD_FROM_NAME
 13

	)

230 
	#ENGINE_CTRL_GET_NAME_LEN_FROM_CMD
 14

	)

231 
	#ENGINE_CTRL_GET_NAME_FROM_CMD
 15

	)

233 
	#ENGINE_CTRL_GET_DESC_LEN_FROM_CMD
 16

	)

234 
	#ENGINE_CTRL_GET_DESC_FROM_CMD
 17

	)

238 
	#ENGINE_CTRL_GET_CMD_FLAGS
 18

	)

242 
	#ENGINE_CMD_BASE
 200

	)

251 
	#ENGINE_CTRL_CHIL_SET_FORKCHECK
 100

	)

256 
	#ENGINE_CTRL_CHIL_NO_LOCKING
 101

	)

268 
	sENGINE_CMD_DEFN_°


270 
cmd_num
;

271 c⁄° *
cmd_«me
;

272 c⁄° *
cmd_desc
;

273 
cmd_Êags
;

274 } 
	tENGINE_CMD_DEFN
;

277 (*
ENGINE_GEN_FUNC_PTR
)();

279 (*
ENGINE_GEN_INT_FUNC_PTR
)(
	tENGINE
 *);

281 (*
ENGINE_CTRL_FUNC_PTR
)(
	tENGINE
 *, , , *, (*
	tf
)());

283 
EVP_PKEY
 * (*
	tENGINE_LOAD_KEY_PTR
)(
	tENGINE
 *, const *,

284 
	tUI_METHOD
 *
	tui_mëhod
, *
	tˇŒback_d©a
);

285 (*
ENGINE_SSL_CLIENT_CERT_PTR
)(
	tENGINE
 *, 
	tSSL
 *
	ts¶
,

286 
	tSTACK_OF
(
	tX509_NAME
Ë*
	tˇ_dn
, 
	tX509
 **
	tp˚π
, 
	tEVP_PKEY
 **
	tpkey
,

287 
	tSTACK_OF
(
	tX509
Ë**
	tpŸhî
, 
	tUI_METHOD
 *
	tui_mëhod
, *
	tˇŒback_d©a
);

300 (*
ENGINE_CIPHERS_PTR
)(
	tENGINE
 *, c⁄° 
	tEVP_CIPHER
 **, const **, );

301 (*
ENGINE_DIGESTS_PTR
)(
	tENGINE
 *, c⁄° 
	tEVP_MD
 **, const **, );

314 
ENGINE
 *
ENGINE_gë_fú°
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

315 
ENGINE
 *
ENGINE_gë_œ°
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

317 
ENGINE
 *
ENGINE_gë_√xt
(ENGINE *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

318 
ENGINE
 *
ENGINE_gë_¥ev
(ENGINE *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

320 
ENGINE_add
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

322 
ENGINE_ªmove
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

324 
ENGINE
 *
ENGINE_by_id
(c⁄° *
id
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

326 
ENGINE_lﬂd_›ís¶
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

327 
ENGINE_lﬂd_dy«mic
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

328 #i‚de‡
OPENSSL_NO_STATIC_ENGINE


329 
ENGINE_lﬂd_4758cˇ
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

330 
ENGINE_lﬂd_´p
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

331 
ENGINE_lﬂd_©Æœ
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

332 
ENGINE_lﬂd_chû
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

333 
ENGINE_lﬂd_cswi·
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

334 #i‚de‡
OPENSSL_NO_GMP


335 
ENGINE_lﬂd_gmp
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

337 
ENGINE_lﬂd_nur⁄
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

338 
ENGINE_lﬂd_suªw¨e
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

339 
ENGINE_lﬂd_ub£c
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

341 
ENGINE_lﬂd_¸y±odev
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

342 
ENGINE_lﬂd_∑dlock
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

343 
ENGINE_lﬂd_buûtö_ígöes
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

344 #ifde‡
OPENSSL_SYS_WIN32


345 #i‚de‡
OPENSSL_NO_CAPIENG


346 
ENGINE_lﬂd_ˇpi
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

352 
ENGINE_gë_èbÀ_Êags
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

353 
ENGINE_£t_èbÀ_Êags
(
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

363 
ENGINE_ªgi°î_RSA
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

364 
ENGINE_uƒegi°î_RSA
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

365 
ENGINE_ªgi°î_Æl_RSA
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

367 
ENGINE_ªgi°î_DSA
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

368 
ENGINE_uƒegi°î_DSA
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

369 
ENGINE_ªgi°î_Æl_DSA
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

371 
ENGINE_ªgi°î_ECDH
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

372 
ENGINE_uƒegi°î_ECDH
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

373 
ENGINE_ªgi°î_Æl_ECDH
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

375 
ENGINE_ªgi°î_ECDSA
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

376 
ENGINE_uƒegi°î_ECDSA
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

377 
ENGINE_ªgi°î_Æl_ECDSA
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

379 
ENGINE_ªgi°î_DH
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

380 
ENGINE_uƒegi°î_DH
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

381 
ENGINE_ªgi°î_Æl_DH
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

383 
ENGINE_ªgi°î_RAND
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

384 
ENGINE_uƒegi°î_RAND
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

385 
ENGINE_ªgi°î_Æl_RAND
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

387 
ENGINE_ªgi°î_STORE
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

388 
ENGINE_uƒegi°î_STORE
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

389 
ENGINE_ªgi°î_Æl_STORE
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

391 
ENGINE_ªgi°î_cùhîs
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

392 
ENGINE_uƒegi°î_cùhîs
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

393 
ENGINE_ªgi°î_Æl_cùhîs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

395 
ENGINE_ªgi°î_dige°s
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

396 
ENGINE_uƒegi°î_dige°s
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

397 
ENGINE_ªgi°î_Æl_dige°s
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

403 
ENGINE_ªgi°î_com∂ëe
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

404 
ENGINE_ªgi°î_Æl_com∂ëe
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

413 
ENGINE_˘æ
(
ENGINE
 *
e
, 
cmd
, 
i
, *
p
, (*
f
)()Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

419 
ENGINE_cmd_is_execuèbÀ
(
ENGINE
 *
e
, 
cmd
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

425 
ENGINE_˘æ_cmd
(
ENGINE
 *
e
, c⁄° *
cmd_«me
,

426 
i
, *
p
, (*
f
)(), 
cmd_›ti⁄Æ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

447 
ENGINE_˘æ_cmd_°rög
(
ENGINE
 *
e
, c⁄° *
cmd_«me
, c⁄° *
¨g
,

448 
cmd_›ti⁄Æ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

456 
ENGINE
 *
ENGINE_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

457 
ENGINE_‰ì
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

458 
ENGINE_up_ªf
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

459 
ENGINE_£t_id
(
ENGINE
 *
e
, c⁄° *
id
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

460 
ENGINE_£t_«me
(
ENGINE
 *
e
, c⁄° *
«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

461 
ENGINE_£t_RSA
(
ENGINE
 *
e
, c⁄° 
RSA_METHOD
 *
rß_mëh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

462 
ENGINE_£t_DSA
(
ENGINE
 *
e
, c⁄° 
DSA_METHOD
 *
dß_mëh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

463 
ENGINE_£t_ECDH
(
ENGINE
 *
e
, c⁄° 
ECDH_METHOD
 *
ecdh_mëh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

464 
ENGINE_£t_ECDSA
(
ENGINE
 *
e
, c⁄° 
ECDSA_METHOD
 *
ecdß_mëh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

465 
ENGINE_£t_DH
(
ENGINE
 *
e
, c⁄° 
DH_METHOD
 *
dh_mëh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

466 
ENGINE_£t_RAND
(
ENGINE
 *
e
, c⁄° 
RAND_METHOD
 *
ønd_mëh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

467 
ENGINE_£t_STORE
(
ENGINE
 *
e
, c⁄° 
STORE_METHOD
 *
°‹e_mëh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

468 
ENGINE_£t_de°roy_fun˘i⁄
(
ENGINE
 *
e
, 
ENGINE_GEN_INT_FUNC_PTR
 
de°roy_f
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

469 
ENGINE_£t_öô_fun˘i⁄
(
ENGINE
 *
e
, 
ENGINE_GEN_INT_FUNC_PTR
 
öô_f
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

470 
ENGINE_£t_föish_fun˘i⁄
(
ENGINE
 *
e
, 
ENGINE_GEN_INT_FUNC_PTR
 
föish_f
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

471 
ENGINE_£t_˘æ_fun˘i⁄
(
ENGINE
 *
e
, 
ENGINE_CTRL_FUNC_PTR
 
˘æ_f
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

472 
ENGINE_£t_lﬂd_¥ivkey_fun˘i⁄
(
ENGINE
 *
e
, 
ENGINE_LOAD_KEY_PTR
 
lﬂd¥iv_f
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

473 
ENGINE_£t_lﬂd_pubkey_fun˘i⁄
(
ENGINE
 *
e
, 
ENGINE_LOAD_KEY_PTR
 
lﬂdpub_f
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

474 
ENGINE_£t_lﬂd_s¶_˛õ¡_˚π_fun˘i⁄
(
ENGINE
 *
e
,

475 
ENGINE_SSL_CLIENT_CERT_PTR
 
lﬂds¶_f
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

476 
ENGINE_£t_cùhîs
(
ENGINE
 *
e
, 
ENGINE_CIPHERS_PTR
 
f
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

477 
ENGINE_£t_dige°s
(
ENGINE
 *
e
, 
ENGINE_DIGESTS_PTR
 
f
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

478 
ENGINE_£t_Êags
(
ENGINE
 *
e
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

479 
ENGINE_£t_cmd_de‚s
(
ENGINE
 *
e
, c⁄° 
ENGINE_CMD_DEFN
 *
de‚s
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

481 
ENGINE_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w
 *
√w_func
,

482 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

483 
ENGINE_£t_ex_d©a
(
ENGINE
 *
e
, 
idx
, *
¨g
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

484 *
ENGINE_gë_ex_d©a
(c⁄° 
ENGINE
 *
e
, 
idx
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

490 
ENGINE_˛ónup
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

496 c⁄° *
ENGINE_gë_id
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

497 c⁄° *
ENGINE_gë_«me
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

498 c⁄° 
RSA_METHOD
 *
ENGINE_gë_RSA
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

499 c⁄° 
DSA_METHOD
 *
ENGINE_gë_DSA
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

500 c⁄° 
ECDH_METHOD
 *
ENGINE_gë_ECDH
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

501 c⁄° 
ECDSA_METHOD
 *
ENGINE_gë_ECDSA
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

502 c⁄° 
DH_METHOD
 *
ENGINE_gë_DH
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

503 c⁄° 
RAND_METHOD
 *
ENGINE_gë_RAND
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

504 c⁄° 
STORE_METHOD
 *
ENGINE_gë_STORE
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

505 
ENGINE_GEN_INT_FUNC_PTR
 
ENGINE_gë_de°roy_fun˘i⁄
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

506 
ENGINE_GEN_INT_FUNC_PTR
 
ENGINE_gë_öô_fun˘i⁄
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

507 
ENGINE_GEN_INT_FUNC_PTR
 
ENGINE_gë_föish_fun˘i⁄
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

508 
ENGINE_CTRL_FUNC_PTR
 
ENGINE_gë_˘æ_fun˘i⁄
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

509 
ENGINE_LOAD_KEY_PTR
 
ENGINE_gë_lﬂd_¥ivkey_fun˘i⁄
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

510 
ENGINE_LOAD_KEY_PTR
 
ENGINE_gë_lﬂd_pubkey_fun˘i⁄
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

511 
ENGINE_SSL_CLIENT_CERT_PTR
 
ENGINE_gë_s¶_˛õ¡_˚π_fun˘i⁄
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

512 
ENGINE_CIPHERS_PTR
 
ENGINE_gë_cùhîs
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

513 
ENGINE_DIGESTS_PTR
 
ENGINE_gë_dige°s
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

514 c⁄° 
EVP_CIPHER
 *
ENGINE_gë_cùhî
(
ENGINE
 *
e
, 
nid
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

515 c⁄° 
EVP_MD
 *
ENGINE_gë_dige°
(
ENGINE
 *
e
, 
nid
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

516 c⁄° 
ENGINE_CMD_DEFN
 *
ENGINE_gë_cmd_de‚s
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

517 
ENGINE_gë_Êags
(c⁄° 
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

534 
ENGINE_öô
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

538 
ENGINE_föish
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

543 
EVP_PKEY
 *
ENGINE_lﬂd_¥iv©e_key
(
ENGINE
 *
e
, c⁄° *
key_id
,

544 
UI_METHOD
 *
ui_mëhod
, *
ˇŒback_d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

545 
EVP_PKEY
 *
ENGINE_lﬂd_public_key
(
ENGINE
 *
e
, c⁄° *
key_id
,

546 
UI_METHOD
 *
ui_mëhod
, *
ˇŒback_d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

547 
ENGINE_lﬂd_s¶_˛õ¡_˚π
(
ENGINE
 *
e
, 
SSL
 *
s
,

548 
STACK_OF
(
X509_NAME
Ë*
ˇ_dn
, 
X509
 **
p˚π
, 
EVP_PKEY
 **
µkey
,

549 
STACK_OF
(
X509
Ë**
pŸhî
,

550 
UI_METHOD
 *
ui_mëhod
, *
ˇŒback_d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

556 
ENGINE
 *
ENGINE_gë_deÁu…_RSA
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

558 
ENGINE
 *
ENGINE_gë_deÁu…_DSA
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

559 
ENGINE
 *
ENGINE_gë_deÁu…_ECDH
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

560 
ENGINE
 *
ENGINE_gë_deÁu…_ECDSA
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

561 
ENGINE
 *
ENGINE_gë_deÁu…_DH
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

562 
ENGINE
 *
ENGINE_gë_deÁu…_RAND
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

565 
ENGINE
 *
ENGINE_gë_cùhî_ígöe
(
nid
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

566 
ENGINE
 *
ENGINE_gë_dige°_ígöe
(
nid
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

572 
ENGINE_£t_deÁu…_RSA
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

573 
ENGINE_£t_deÁu…_°rög
(
ENGINE
 *
e
, c⁄° *
def_li°
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

575 
ENGINE_£t_deÁu…_DSA
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

576 
ENGINE_£t_deÁu…_ECDH
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

577 
ENGINE_£t_deÁu…_ECDSA
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

578 
ENGINE_£t_deÁu…_DH
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

579 
ENGINE_£t_deÁu…_RAND
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

580 
ENGINE_£t_deÁu…_cùhîs
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

581 
ENGINE_£t_deÁu…_dige°s
(
ENGINE
 *
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

588 
ENGINE_£t_deÁu…
(
ENGINE
 *
e
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

590 
ENGINE_add_c⁄f_moduÀ
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

600 
	#OSSL_DYNAMIC_VERSION
 ()0x00020000

	)

603 
	#OSSL_DYNAMIC_OLDEST
 ()0x00020000

	)

614 *(*
	tdyn_MEM_mÆloc_cb
)(
	tsize_t
);

615 *(*
	tdyn_MEM_ªÆloc_cb
)(*, 
	tsize_t
);

616 (*
dyn_MEM_‰ì_cb
)(*);

617 
	s°_dy«mic_MEM_‚s
 {

618 
dyn_MEM_mÆloc_cb
 
mÆloc_cb
;

619 
dyn_MEM_ªÆloc_cb
 
ªÆloc_cb
;

620 
dyn_MEM_‰ì_cb
 
‰ì_cb
;

621 } 
	tdy«mic_MEM_‚s
;

624 (*
dyn_lock_lockög_cb
)(,,const *,);

625 (*
dyn_lock_add_lock_cb
)(*,,,const *,);

626 
CRYPTO_dy∆ock_vÆue
 *(*
	tdyn_dy∆ock_¸óã_cb
)(

628 (*
dyn_dy∆ock_lock_cb
)(,
	tCRYPTO_dy∆ock_vÆue
 *,

630 (*
dyn_dy∆ock_de°roy_cb
)(
	tCRYPTO_dy∆ock_vÆue
 *,

632 
	s°_dy«mic_LOCK_‚s
 {

633 
dyn_lock_lockög_cb
 
lock_lockög_cb
;

634 
dyn_lock_add_lock_cb
 
lock_add_lock_cb
;

635 
dyn_dy∆ock_¸óã_cb
 
dy∆ock_¸óã_cb
;

636 
dyn_dy∆ock_lock_cb
 
dy∆ock_lock_cb
;

637 
dyn_dy∆ock_de°roy_cb
 
dy∆ock_de°roy_cb
;

638 } 
	tdy«mic_LOCK_‚s
;

640 
	s°_dy«mic_‚s
 {

641 *
°©ic_°©e
;

642 c⁄° 
ERR_FNS
 *
îr_‚s
;

643 c⁄° 
CRYPTO_EX_DATA_IMPL
 *
ex_d©a_‚s
;

644 
dy«mic_MEM_‚s
 
mem_‚s
;

645 
dy«mic_LOCK_‚s
 
lock_‚s
;

646 } 
	tdy«mic_‚s
;

657 (*
	tdy«mic_v_check_‚
)(
	tos¶_vîsi⁄
);

658 
	#IMPLEMENT_DYNAMIC_CHECK_FN
() \

659 
OPENSSL_EXPORT
 
	`v_check
(
v
) { \

660 if(
v
 >
OSSL_DYNAMIC_OLDEST
Ë 
OSSL_DYNAMIC_VERSION
; \

661  0; }

	)

678 (*
dy«mic_böd_ígöe
)(
	tENGINE
 *
	te
, c⁄° *
	tid
,

679 c⁄° 
	tdy«mic_‚s
 *
	t‚s
);

680 
	#IMPLEMENT_DYNAMIC_BIND_FN
(
‚
) \

681 
OPENSSL_EXPORT
 \

682 
	`böd_ígöe
(
ENGINE
 *
e
, c⁄° *
id
, c⁄° 
dy«mic_‚s
 *
‚s
) { \

683 if(
	`ENGINE_gë_°©ic_°©e
(Ë=
‚s
->
°©ic_°©e
Ë
skù_cbs
; \

684 if(!
	`CRYPTO_£t_mem_fun˘i⁄s
(
‚s
->
mem_‚s
.
mÆloc_cb
, \

685 
‚s
->
mem_‚s
.
ªÆloc_cb
, fns->mem_‚s.
‰ì_cb
)) \

687 
	`CRYPTO_£t_lockög_ˇŒback
(
‚s
->
lock_‚s
.
lock_lockög_cb
); \

688 
	`CRYPTO_£t_add_lock_ˇŒback
(
‚s
->
lock_‚s
.
lock_add_lock_cb
); \

689 
	`CRYPTO_£t_dy∆ock_¸óã_ˇŒback
(
‚s
->
lock_‚s
.
dy∆ock_¸óã_cb
); \

690 
	`CRYPTO_£t_dy∆ock_lock_ˇŒback
(
‚s
->
lock_‚s
.
dy∆ock_lock_cb
); \

691 
	`CRYPTO_£t_dy∆ock_de°roy_ˇŒback
(
‚s
->
lock_‚s
.
dy∆ock_de°roy_cb
); \

692 if(!
	`CRYPTO_£t_ex_d©a_im∂emíèti⁄
(
‚s
->
ex_d©a_‚s
)) \

694 if(!
	`ERR_£t_im∂emíèti⁄
(
‚s
->
îr_‚s
))  0; \

695 
skù_cbs
: \

696 if(!
	`‚
(
e
,
id
))  0; \

697  1; }

	)

708 *
ENGINE_gë_°©ic_°©e
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

710 #i‡
deföed
(
__O≥nBSD__
Ë|| deföed(
__FªeBSD__
)

711 
ENGINE_£tup_bsd_¸y±odev
();

718 
ERR_lﬂd_ENGINE_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

723 
	#ENGINE_F_DYNAMIC_CTRL
 180

	)

724 
	#ENGINE_F_DYNAMIC_GET_DATA_CTX
 181

	)

725 
	#ENGINE_F_DYNAMIC_LOAD
 182

	)

726 
	#ENGINE_F_DYNAMIC_SET_DATA_CTX
 183

	)

727 
	#ENGINE_F_ENGINE_ADD
 105

	)

728 
	#ENGINE_F_ENGINE_BY_ID
 106

	)

729 
	#ENGINE_F_ENGINE_CMD_IS_EXECUTABLE
 170

	)

730 
	#ENGINE_F_ENGINE_CTRL
 142

	)

731 
	#ENGINE_F_ENGINE_CTRL_CMD
 178

	)

732 
	#ENGINE_F_ENGINE_CTRL_CMD_STRING
 171

	)

733 
	#ENGINE_F_ENGINE_FINISH
 107

	)

734 
	#ENGINE_F_ENGINE_FREE_UTIL
 108

	)

735 
	#ENGINE_F_ENGINE_GET_CIPHER
 185

	)

736 
	#ENGINE_F_ENGINE_GET_DEFAULT_TYPE
 177

	)

737 
	#ENGINE_F_ENGINE_GET_DIGEST
 186

	)

738 
	#ENGINE_F_ENGINE_GET_NEXT
 115

	)

739 
	#ENGINE_F_ENGINE_GET_PREV
 116

	)

740 
	#ENGINE_F_ENGINE_INIT
 119

	)

741 
	#ENGINE_F_ENGINE_LIST_ADD
 120

	)

742 
	#ENGINE_F_ENGINE_LIST_REMOVE
 121

	)

743 
	#ENGINE_F_ENGINE_LOAD_PRIVATE_KEY
 150

	)

744 
	#ENGINE_F_ENGINE_LOAD_PUBLIC_KEY
 151

	)

745 
	#ENGINE_F_ENGINE_LOAD_SSL_CLIENT_CERT
 192

	)

746 
	#ENGINE_F_ENGINE_NEW
 122

	)

747 
	#ENGINE_F_ENGINE_REMOVE
 123

	)

748 
	#ENGINE_F_ENGINE_SET_DEFAULT_STRING
 189

	)

749 
	#ENGINE_F_ENGINE_SET_DEFAULT_TYPE
 126

	)

750 
	#ENGINE_F_ENGINE_SET_ID
 129

	)

751 
	#ENGINE_F_ENGINE_SET_NAME
 130

	)

752 
	#ENGINE_F_ENGINE_TABLE_REGISTER
 184

	)

753 
	#ENGINE_F_ENGINE_UNLOAD_KEY
 152

	)

754 
	#ENGINE_F_ENGINE_UNLOCKED_FINISH
 191

	)

755 
	#ENGINE_F_ENGINE_UP_REF
 190

	)

756 
	#ENGINE_F_INT_CTRL_HELPER
 172

	)

757 
	#ENGINE_F_INT_ENGINE_CONFIGURE
 188

	)

758 
	#ENGINE_F_INT_ENGINE_MODULE_INIT
 187

	)

759 
	#ENGINE_F_LOG_MESSAGE
 141

	)

762 
	#ENGINE_R_ALREADY_LOADED
 100

	)

763 
	#ENGINE_R_ARGUMENT_IS_NOT_A_NUMBER
 133

	)

764 
	#ENGINE_R_CMD_NOT_EXECUTABLE
 134

	)

765 
	#ENGINE_R_COMMAND_TAKES_INPUT
 135

	)

766 
	#ENGINE_R_COMMAND_TAKES_NO_INPUT
 136

	)

767 
	#ENGINE_R_CONFLICTING_ENGINE_ID
 103

	)

768 
	#ENGINE_R_CTRL_COMMAND_NOT_IMPLEMENTED
 119

	)

769 
	#ENGINE_R_DH_NOT_IMPLEMENTED
 139

	)

770 
	#ENGINE_R_DSA_NOT_IMPLEMENTED
 140

	)

771 
	#ENGINE_R_DSO_FAILURE
 104

	)

772 
	#ENGINE_R_DSO_NOT_FOUND
 132

	)

773 
	#ENGINE_R_ENGINES_SECTION_ERROR
 148

	)

774 
	#ENGINE_R_ENGINE_CONFIGURATION_ERROR
 101

	)

775 
	#ENGINE_R_ENGINE_IS_NOT_IN_LIST
 105

	)

776 
	#ENGINE_R_ENGINE_SECTION_ERROR
 149

	)

777 
	#ENGINE_R_FAILED_LOADING_PRIVATE_KEY
 128

	)

778 
	#ENGINE_R_FAILED_LOADING_PUBLIC_KEY
 129

	)

779 
	#ENGINE_R_FINISH_FAILED
 106

	)

780 
	#ENGINE_R_GET_HANDLE_FAILED
 107

	)

781 
	#ENGINE_R_ID_OR_NAME_MISSING
 108

	)

782 
	#ENGINE_R_INIT_FAILED
 109

	)

783 
	#ENGINE_R_INTERNAL_LIST_ERROR
 110

	)

784 
	#ENGINE_R_INVALID_ARGUMENT
 143

	)

785 
	#ENGINE_R_INVALID_CMD_NAME
 137

	)

786 
	#ENGINE_R_INVALID_CMD_NUMBER
 138

	)

787 
	#ENGINE_R_INVALID_INIT_VALUE
 151

	)

788 
	#ENGINE_R_INVALID_STRING
 150

	)

789 
	#ENGINE_R_NOT_INITIALISED
 117

	)

790 
	#ENGINE_R_NOT_LOADED
 112

	)

791 
	#ENGINE_R_NO_CONTROL_FUNCTION
 120

	)

792 
	#ENGINE_R_NO_INDEX
 144

	)

793 
	#ENGINE_R_NO_LOAD_FUNCTION
 125

	)

794 
	#ENGINE_R_NO_REFERENCE
 130

	)

795 
	#ENGINE_R_NO_SUCH_ENGINE
 116

	)

796 
	#ENGINE_R_NO_UNLOAD_FUNCTION
 126

	)

797 
	#ENGINE_R_PROVIDE_PARAMETERS
 113

	)

798 
	#ENGINE_R_RSA_NOT_IMPLEMENTED
 141

	)

799 
	#ENGINE_R_UNIMPLEMENTED_CIPHER
 146

	)

800 
	#ENGINE_R_UNIMPLEMENTED_DIGEST
 147

	)

801 
	#ENGINE_R_VERSION_INCOMPATIBILITY
 145

	)

803 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/pem.h

59 #i‚de‡
HEADER_PEM_H


60 
	#HEADER_PEM_H


	)

62 
	~<AvaûabûôyMa¸os.h
>

64 
	~<›ís¶/e_os2.h
>

65 #i‚de‡
OPENSSL_NO_BIO


66 
	~<›ís¶/bio.h
>

68 #i‚de‡
OPENSSL_NO_STACK


69 
	~<›ís¶/°ack.h
>

71 
	~<›ís¶/evp.h
>

72 
	~<›ís¶/x509.h
>

73 
	~<›ís¶/≥m2.h
>

75 #ifde‡ 
__˝lu•lus


79 
	#PEM_BUFSIZE
 1024

	)

81 
	#PEM_OBJ_UNDEF
 0

	)

82 
	#PEM_OBJ_X509
 1

	)

83 
	#PEM_OBJ_X509_REQ
 2

	)

84 
	#PEM_OBJ_CRL
 3

	)

85 
	#PEM_OBJ_SSL_SESSION
 4

	)

86 
	#PEM_OBJ_PRIV_KEY
 10

	)

87 
	#PEM_OBJ_PRIV_RSA
 11

	)

88 
	#PEM_OBJ_PRIV_DSA
 12

	)

89 
	#PEM_OBJ_PRIV_DH
 13

	)

90 
	#PEM_OBJ_PUB_RSA
 14

	)

91 
	#PEM_OBJ_PUB_DSA
 15

	)

92 
	#PEM_OBJ_PUB_DH
 16

	)

93 
	#PEM_OBJ_DHPARAMS
 17

	)

94 
	#PEM_OBJ_DSAPARAMS
 18

	)

95 
	#PEM_OBJ_PRIV_RSA_PUBLIC
 19

	)

96 
	#PEM_OBJ_PRIV_ECDSA
 20

	)

97 
	#PEM_OBJ_PUB_ECDSA
 21

	)

98 
	#PEM_OBJ_ECPARAMETERS
 22

	)

100 
	#PEM_ERROR
 30

	)

101 
	#PEM_DEK_DES_CBC
 40

	)

102 
	#PEM_DEK_IDEA_CBC
 45

	)

103 
	#PEM_DEK_DES_EDE
 50

	)

104 
	#PEM_DEK_DES_ECB
 60

	)

105 
	#PEM_DEK_RSA
 70

	)

106 
	#PEM_DEK_RSA_MD2
 80

	)

107 
	#PEM_DEK_RSA_MD5
 90

	)

109 
	#PEM_MD_MD2
 
NID_md2


	)

110 
	#PEM_MD_MD5
 
NID_md5


	)

111 
	#PEM_MD_SHA
 
NID_sha


	)

112 
	#PEM_MD_MD2_RSA
 
NID_md2WôhRSAEn¸y±i⁄


	)

113 
	#PEM_MD_MD5_RSA
 
NID_md5WôhRSAEn¸y±i⁄


	)

114 
	#PEM_MD_SHA_RSA
 
NID_sha1WôhRSAEn¸y±i⁄


	)

116 
	#PEM_STRING_X509_OLD
 "X509 CERTIFICATE"

	)

117 
	#PEM_STRING_X509
 "CERTIFICATE"

	)

118 
	#PEM_STRING_X509_PAIR
 "CERTIFICATE PAIR"

	)

119 
	#PEM_STRING_X509_TRUSTED
 "TRUSTED CERTIFICATE"

	)

120 
	#PEM_STRING_X509_REQ_OLD
 "NEW CERTIFICATE REQUEST"

	)

121 
	#PEM_STRING_X509_REQ
 "CERTIFICATE REQUEST"

	)

122 
	#PEM_STRING_X509_CRL
 "X509 CRL"

	)

123 
	#PEM_STRING_EVP_PKEY
 "ANY PRIVATE KEY"

	)

124 
	#PEM_STRING_PUBLIC
 "PUBLIC KEY"

	)

125 
	#PEM_STRING_RSA
 "RSA PRIVATE KEY"

	)

126 
	#PEM_STRING_RSA_PUBLIC
 "RSA PUBLIC KEY"

	)

127 
	#PEM_STRING_DSA
 "DSA PRIVATE KEY"

	)

128 
	#PEM_STRING_DSA_PUBLIC
 "DSA PUBLIC KEY"

	)

129 
	#PEM_STRING_PKCS7
 "PKCS7"

	)

130 
	#PEM_STRING_PKCS7_SIGNED
 "PKCS #7 SIGNED DATA"

	)

131 
	#PEM_STRING_PKCS8
 "ENCRYPTED PRIVATE KEY"

	)

132 
	#PEM_STRING_PKCS8INF
 "PRIVATE KEY"

	)

133 
	#PEM_STRING_DHPARAMS
 "DH PARAMETERS"

	)

134 
	#PEM_STRING_SSL_SESSION
 "SSL SESSION PARAMETERS"

	)

135 
	#PEM_STRING_DSAPARAMS
 "DSA PARAMETERS"

	)

136 
	#PEM_STRING_ECDSA_PUBLIC
 "ECDSA PUBLIC KEY"

	)

137 
	#PEM_STRING_ECPARAMETERS
 "EC PARAMETERS"

	)

138 
	#PEM_STRING_ECPRIVATEKEY
 "EC PRIVATE KEY"

	)

139 
	#PEM_STRING_CMS
 "CMS"

	)

143 
	sPEM_Encode_Sól_°


145 
EVP_ENCODE_CTX
 
ícode
;

146 
EVP_MD_CTX
 
md
;

147 
EVP_CIPHER_CTX
 
cùhî
;

148 } 
	tPEM_ENCODE_SEAL_CTX
;

151 
	#PEM_TYPE_ENCRYPTED
 10

	)

152 
	#PEM_TYPE_MIC_ONLY
 20

	)

153 
	#PEM_TYPE_MIC_CLEAR
 30

	)

154 
	#PEM_TYPE_CLEAR
 40

	)

156 
	s≥m_ªcù_°


158 *
«me
;

159 
X509_NAME
 *
dn
;

161 
cùhî
;

162 
key_íc
;

164 } 
	tPEM_USER
;

166 
	s≥m_˘x_°


168 
ty≥
;

171 
vîsi⁄
;

172 
mode
;

173 } 
¥oc_ty≥
;

175 *
domaö
;

178 
cùhî
;

181 } 
DEK_öfo
;

183 
PEM_USER
 *
‹igö©‹
;

185 
num_ªcùõ¡
;

186 
PEM_USER
 **
ªcùõ¡
;

188 #i‚de‡
OPENSSL_NO_STACK


189 
STACK
 *
x509_chaö
;

191 *
x509_chaö
;

193 
EVP_MD
 *
md
;

195 
md_íc
;

196 
md_Àn
;

197 *
md_d©a
;

199 
EVP_CIPHER
 *
dec
;

200 
key_Àn
;

201 *
key
;

206 
d©a_íc
;

207 
d©a_Àn
;

208 *
d©a
;

209 } 
	tPEM_CTX
;

216 #ifde‡
OPENSSL_NO_FP_API


218 
	#IMPLEMENT_PEM_ªad_Â
(
«me
, 
ty≥
, 
°r
, 
a¢1
Ë

	)

219 
	#IMPLEMENT_PEM_wrôe_Â
(
«me
, 
ty≥
, 
°r
, 
a¢1
Ë

	)

220 
	#IMPLEMENT_PEM_wrôe_Â_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
Ë

	)

221 
	#IMPLEMENT_PEM_wrôe_cb_Â
(
«me
, 
ty≥
, 
°r
, 
a¢1
Ë

	)

222 
	#IMPLEMENT_PEM_wrôe_cb_Â_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
Ë

	)

226 
	#IMPLEMENT_PEM_ªad_Â
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

227 
ty≥
 *
PEM_ªad_
##
	`«me
(
FILE
 *
Â
,Åy≥ **
x
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
)\

229  (
ty≥
*)
	`PEM_ASN1_ªad
(
	`CHECKED_D2I_OF
—y≥, 
d2i_
##
a¢1
), \

230 
°r
, 
Â
, \

231 
	`CHECKED_PPTR_OF
(
ty≥
, 
x
), \

232 
cb
, 
u
); \

233 }

	)

235 
	#IMPLEMENT_PEM_wrôe_Â
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

236 
PEM_wrôe_
##
	`«me
(
FILE
 *
Â
, 
ty≥
 *
x
) \

238  
	`PEM_ASN1_wrôe
(
	`CHECKED_I2D_OF
(
ty≥
, 
i2d_
##
a¢1
), \

239 
°r
, 
Â
, \

240 
	`CHECKED_PTR_OF
(
ty≥
, 
x
), \

241 
NULL
, NULL, 0, NULL, NULL); \

242 }

	)

244 
	#IMPLEMENT_PEM_wrôe_Â_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

245 
PEM_wrôe_
##
	`«me
(
FILE
 *
Â
, c⁄° 
ty≥
 *
x
) \

247  
	`PEM_ASN1_wrôe
(
	`CHECKED_I2D_OF
(c⁄° 
ty≥
, 
i2d_
##
a¢1
), \

248 
°r
, 
Â
, \

249 
	`CHECKED_PTR_OF
(c⁄° 
ty≥
, 
x
), \

250 
NULL
, NULL, 0, NULL, NULL); \

251 }

	)

253 
	#IMPLEMENT_PEM_wrôe_cb_Â
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

254 
PEM_wrôe_
##
	`«me
(
FILE
 *
Â
, 
ty≥
 *
x
, c⁄° 
EVP_CIPHER
 *
íc
, \

255 *
k°r
, 
kÀn
, 
≥m_∑ssw‹d_cb
 *
cb
, \

256 *
u
) \

258  
	`PEM_ASN1_wrôe
(
	`CHECKED_I2D_OF
(
ty≥
, 
i2d_
##
a¢1
), \

259 
°r
, 
Â
, \

260 
	`CHECKED_PTR_OF
(
ty≥
, 
x
), \

261 
íc
, 
k°r
, 
kÀn
, 
cb
, 
u
); \

262 }

	)

264 
	#IMPLEMENT_PEM_wrôe_cb_Â_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

265 
PEM_wrôe_
##
	`«me
(
FILE
 *
Â
, 
ty≥
 *
x
, c⁄° 
EVP_CIPHER
 *
íc
, \

266 *
k°r
, 
kÀn
, 
≥m_∑ssw‹d_cb
 *
cb
, \

267 *
u
) \

269  
	`PEM_ASN1_wrôe
(
	`CHECKED_I2D_OF
(c⁄° 
ty≥
, 
i2d_
##
a¢1
), \

270 
°r
, 
Â
, \

271 
	`CHECKED_PTR_OF
(c⁄° 
ty≥
, 
x
), \

272 
íc
, 
k°r
, 
kÀn
, 
cb
, 
u
); \

273 }

	)

277 
	#IMPLEMENT_PEM_ªad_bio
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

278 
ty≥
 *
PEM_ªad_bio_
##
	`«me
(
BIO
 *
bp
,Åy≥ **
x
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
)\

280  (
ty≥
*)
	`PEM_ASN1_ªad_bio
(
	`CHECKED_D2I_OF
—y≥, 
d2i_
##
a¢1
), \

281 
°r
, 
bp
, \

282 
	`CHECKED_PPTR_OF
(
ty≥
, 
x
), \

283 
cb
, 
u
); \

284 }

	)

286 
	#IMPLEMENT_PEM_wrôe_bio
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

287 
PEM_wrôe_bio_
##
	`«me
(
BIO
 *
bp
, 
ty≥
 *
x
) \

289  
	`PEM_ASN1_wrôe_bio
(
	`CHECKED_I2D_OF
(
ty≥
, 
i2d_
##
a¢1
), \

290 
°r
, 
bp
, \

291 
	`CHECKED_PTR_OF
(
ty≥
, 
x
), \

292 
NULL
, NULL, 0, NULL, NULL); \

293 }

	)

295 
	#IMPLEMENT_PEM_wrôe_bio_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

296 
PEM_wrôe_bio_
##
	`«me
(
BIO
 *
bp
, c⁄° 
ty≥
 *
x
) \

298  
	`PEM_ASN1_wrôe_bio
(
	`CHECKED_I2D_OF
(c⁄° 
ty≥
, 
i2d_
##
a¢1
), \

299 
°r
, 
bp
, \

300 
	`CHECKED_PTR_OF
(c⁄° 
ty≥
, 
x
), \

301 
NULL
, NULL, 0, NULL, NULL); \

302 }

	)

304 
	#IMPLEMENT_PEM_wrôe_cb_bio
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

305 
PEM_wrôe_bio_
##
	`«me
(
BIO
 *
bp
, 
ty≥
 *
x
, c⁄° 
EVP_CIPHER
 *
íc
, \

306 *
k°r
, 
kÀn
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
) \

308  
	`PEM_ASN1_wrôe_bio
(
	`CHECKED_I2D_OF
(
ty≥
, 
i2d_
##
a¢1
), \

309 
°r
, 
bp
, \

310 
	`CHECKED_PTR_OF
(
ty≥
, 
x
), \

311 
íc
, 
k°r
, 
kÀn
, 
cb
, 
u
); \

312 }

	)

314 
	#IMPLEMENT_PEM_wrôe_cb_bio_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

315 
PEM_wrôe_bio_
##
	`«me
(
BIO
 *
bp
, 
ty≥
 *
x
, c⁄° 
EVP_CIPHER
 *
íc
, \

316 *
k°r
, 
kÀn
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
) \

318  
	`PEM_ASN1_wrôe_bio
(
	`CHECKED_I2D_OF
(c⁄° 
ty≥
, 
i2d_
##
a¢1
), \

319 
°r
, 
bp
, \

320 
	`CHECKED_PTR_OF
(c⁄° 
ty≥
, 
x
), \

321 
íc
, 
k°r
, 
kÀn
, 
cb
, 
u
); \

322 }

	)

324 
	#IMPLEMENT_PEM_wrôe
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

325 
	`IMPLEMENT_PEM_wrôe_bio
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

326 
	`IMPLEMENT_PEM_wrôe_Â
(
«me
, 
ty≥
, 
°r
, 
a¢1
)

	)

328 
	#IMPLEMENT_PEM_wrôe_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

329 
	`IMPLEMENT_PEM_wrôe_bio_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

330 
	`IMPLEMENT_PEM_wrôe_Â_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
)

	)

332 
	#IMPLEMENT_PEM_wrôe_cb
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

333 
	`IMPLEMENT_PEM_wrôe_cb_bio
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

334 
	`IMPLEMENT_PEM_wrôe_cb_Â
(
«me
, 
ty≥
, 
°r
, 
a¢1
)

	)

336 
	#IMPLEMENT_PEM_wrôe_cb_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

337 
	`IMPLEMENT_PEM_wrôe_cb_bio_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

338 
	`IMPLEMENT_PEM_wrôe_cb_Â_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
)

	)

340 
	#IMPLEMENT_PEM_ªad
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

341 
	`IMPLEMENT_PEM_ªad_bio
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

342 
	`IMPLEMENT_PEM_ªad_Â
(
«me
, 
ty≥
, 
°r
, 
a¢1
)

	)

344 
	#IMPLEMENT_PEM_rw
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

345 
	`IMPLEMENT_PEM_ªad
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

346 
	`IMPLEMENT_PEM_wrôe
(
«me
, 
ty≥
, 
°r
, 
a¢1
)

	)

348 
	#IMPLEMENT_PEM_rw_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

349 
	`IMPLEMENT_PEM_ªad
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

350 
	`IMPLEMENT_PEM_wrôe_c⁄°
(
«me
, 
ty≥
, 
°r
, 
a¢1
)

	)

352 
	#IMPLEMENT_PEM_rw_cb
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

353 
	`IMPLEMENT_PEM_ªad
(
«me
, 
ty≥
, 
°r
, 
a¢1
) \

354 
	`IMPLEMENT_PEM_wrôe_cb
(
«me
, 
ty≥
, 
°r
, 
a¢1
)

	)

358 #i‡
deföed
(
OPENSSL_SYS_WIN16
Ë|| deföed(
OPENSSL_NO_FP_API
)

360 
	#DECLARE_PEM_ªad_Â
(
«me
, 
ty≥
Ë

	)

361 
	#DECLARE_PEM_wrôe_Â
(
«me
, 
ty≥
Ë

	)

362 
	#DECLARE_PEM_wrôe_Â_c⁄°
(
«me
, 
ty≥
Ë

	)

363 
	#DECLARE_PEM_wrôe_cb_Â
(
«me
, 
ty≥
Ë

	)

367 
	#DECLARE_PEM_ªad_Â
(
«me
, 
ty≥
) \

368 
ty≥
 *
PEM_ªad_
##
	`«me
(
FILE
 *
Â
,Åy≥ **
x
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

	)

370 
	#DECLARE_PEM_wrôe_Â
(
«me
, 
ty≥
) \

371 
PEM_wrôe_
##
	`«me
(
FILE
 *
Â
, 
ty≥
 *
x
);

	)

373 
	#DECLARE_PEM_wrôe_Â_c⁄°
(
«me
, 
ty≥
) \

374 
PEM_wrôe_
##
	`«me
(
FILE
 *
Â
, c⁄° 
ty≥
 *
x
);

	)

376 
	#DECLARE_PEM_wrôe_cb_Â
(
«me
, 
ty≥
) \

377 
PEM_wrôe_
##
	`«me
(
FILE
 *
Â
, 
ty≥
 *
x
, c⁄° 
EVP_CIPHER
 *
íc
, \

378 *
k°r
, 
kÀn
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

	)

382 #i‚de‡
OPENSSL_NO_BIO


383 
	#DECLARE_PEM_ªad_bio
(
«me
, 
ty≥
) \

384 
ty≥
 *
PEM_ªad_bio_
##
	`«me
(
BIO
 *
bp
,Åy≥ **
x
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

	)

386 
	#DECLARE_PEM_wrôe_bio
(
«me
, 
ty≥
) \

387 
PEM_wrôe_bio_
##
	`«me
(
BIO
 *
bp
, 
ty≥
 *
x
);

	)

389 
	#DECLARE_PEM_wrôe_bio_c⁄°
(
«me
, 
ty≥
) \

390 
PEM_wrôe_bio_
##
	`«me
(
BIO
 *
bp
, c⁄° 
ty≥
 *
x
);

	)

392 
	#DECLARE_PEM_wrôe_cb_bio
(
«me
, 
ty≥
) \

393 
PEM_wrôe_bio_
##
	`«me
(
BIO
 *
bp
, 
ty≥
 *
x
, c⁄° 
EVP_CIPHER
 *
íc
, \

394 *
k°r
, 
kÀn
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
);

	)

398 
	#DECLARE_PEM_ªad_bio
(
«me
, 
ty≥
Ë

	)

399 
	#DECLARE_PEM_wrôe_bio
(
«me
, 
ty≥
Ë

	)

400 
	#DECLARE_PEM_wrôe_bio_c⁄°
(
«me
, 
ty≥
Ë

	)

401 
	#DECLARE_PEM_wrôe_cb_bio
(
«me
, 
ty≥
Ë

	)

405 
	#DECLARE_PEM_wrôe
(
«me
, 
ty≥
) \

406 
	`DECLARE_PEM_wrôe_bio
(
«me
, 
ty≥
) \

407 
	`DECLARE_PEM_wrôe_Â
(
«me
, 
ty≥
)

	)

409 
	#DECLARE_PEM_wrôe_c⁄°
(
«me
, 
ty≥
) \

410 
	`DECLARE_PEM_wrôe_bio_c⁄°
(
«me
, 
ty≥
) \

411 
	`DECLARE_PEM_wrôe_Â_c⁄°
(
«me
, 
ty≥
)

	)

413 
	#DECLARE_PEM_wrôe_cb
(
«me
, 
ty≥
) \

414 
	`DECLARE_PEM_wrôe_cb_bio
(
«me
, 
ty≥
) \

415 
	`DECLARE_PEM_wrôe_cb_Â
(
«me
, 
ty≥
)

	)

417 
	#DECLARE_PEM_ªad
(
«me
, 
ty≥
) \

418 
	`DECLARE_PEM_ªad_bio
(
«me
, 
ty≥
) \

419 
	`DECLARE_PEM_ªad_Â
(
«me
, 
ty≥
)

	)

421 
	#DECLARE_PEM_rw
(
«me
, 
ty≥
) \

422 
	`DECLARE_PEM_ªad
(
«me
, 
ty≥
) \

423 
	`DECLARE_PEM_wrôe
(
«me
, 
ty≥
)

	)

425 
	#DECLARE_PEM_rw_c⁄°
(
«me
, 
ty≥
) \

426 
	`DECLARE_PEM_ªad
(
«me
, 
ty≥
) \

427 
	`DECLARE_PEM_wrôe_c⁄°
(
«me
, 
ty≥
)

	)

429 
	#DECLARE_PEM_rw_cb
(
«me
, 
ty≥
) \

430 
	`DECLARE_PEM_ªad
(
«me
, 
ty≥
) \

431 
	`DECLARE_PEM_wrôe_cb
(
«me
, 
ty≥
)

	)

433 #ifde‡
SSLEAY_MACROS


435 
	#PEM_wrôe_SSL_SESSION
(
Â
,
x
) \

436 
	`PEM_ASN1_wrôe
(((*)())
i2d_SSL_SESSION
, \

437 
PEM_STRING_SSL_SESSION
,
Â
, (*)
x
, 
NULL
,NULL,0,NULL,NULL)

	)

438 
	#PEM_wrôe_X509
(
Â
,
x
) \

439 
	`PEM_ASN1_wrôe
(((*)())
i2d_X509
,
PEM_STRING_X509
,
Â
, \

440 (*)
x
, 
NULL
,NULL,0,NULL,NULL)

	)

441 
	#PEM_wrôe_X509_REQ
(
Â
,
x
Ë
	`PEM_ASN1_wrôe
( \

442 ((*)())
i2d_X509_REQ
,
PEM_STRING_X509_REQ
,
Â
,(*)
x
, \

443 
NULL
,NULL,0,NULL,NULL)

	)

444 
	#PEM_wrôe_X509_CRL
(
Â
,
x
) \

445 
	`PEM_ASN1_wrôe
(((*)())
i2d_X509_CRL
,
PEM_STRING_X509_CRL
, \

446 
Â
,(*)
x
, 
NULL
,NULL,0,NULL,NULL)

	)

447 
	#PEM_wrôe_RSAPriv©eKey
(
Â
,
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
) \

448 
	`PEM_ASN1_wrôe
(((*)())
i2d_RSAPriv©eKey
,
PEM_STRING_RSA
,
Â
,\

449 (*)
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
)

	)

450 
	#PEM_wrôe_RSAPublicKey
(
Â
,
x
) \

451 
	`PEM_ASN1_wrôe
(((*)())
i2d_RSAPublicKey
,\

452 
PEM_STRING_RSA_PUBLIC
,
Â
,(*)
x
,
NULL
,NULL,0,NULL,NULL)

	)

453 
	#PEM_wrôe_DSAPriv©eKey
(
Â
,
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
) \

454 
	`PEM_ASN1_wrôe
(((*)())
i2d_DSAPriv©eKey
,
PEM_STRING_DSA
,
Â
,\

455 (*)
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
)

	)

456 
	#PEM_wrôe_Priv©eKey
(
bp
,
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
) \

457 
	`PEM_ASN1_wrôe
(((*)())
i2d_Priv©eKey
,\

458 (((
x
)->
ty≥
 =
EVP_PKEY_DSA
)?
PEM_STRING_DSA
:
PEM_STRING_RSA
),\

459 
bp
,(*)
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
)

	)

460 
	#PEM_wrôe_PKCS7
(
Â
,
x
) \

461 
	`PEM_ASN1_wrôe
(((*)())
i2d_PKCS7
,
PEM_STRING_PKCS7
,
Â
, \

462 (*)
x
, 
NULL
,NULL,0,NULL,NULL)

	)

463 
	#PEM_wrôe_DH∑øms
(
Â
,
x
) \

464 
	`PEM_ASN1_wrôe
(((*)())
i2d_DH∑øms
,
PEM_STRING_DHPARAMS
,
Â
,\

465 (*)
x
,
NULL
,NULL,0,NULL,NULL)

	)

467 
	#PEM_wrôe_NETSCAPE_CERT_SEQUENCE
(
Â
,
x
) \

468 
	`PEM_ASN1_wrôe
(((*)())
i2d_NETSCAPE_CERT_SEQUENCE
, \

469 
PEM_STRING_X509
,
Â
, \

470 (*)
x
, 
NULL
,NULL,0,NULL,NULL)

	)

472 
	#PEM_ªad_SSL_SESSION
(
Â
,
x
,
cb
,
u
Ë(
SSL_SESSION
 *)
	`PEM_ASN1_ªad
( \

473 (*(*)())
d2i_SSL_SESSION
,
PEM_STRING_SSL_SESSION
,
Â
,(**)
x
,
cb
,
u
)

	)

474 
	#PEM_ªad_X509
(
Â
,
x
,
cb
,
u
Ë(
X509
 *)
	`PEM_ASN1_ªad
( \

475 (*(*)())
d2i_X509
,
PEM_STRING_X509
,
Â
,(**)
x
,
cb
,
u
)

	)

476 
	#PEM_ªad_X509_REQ
(
Â
,
x
,
cb
,
u
Ë(
X509_REQ
 *)
	`PEM_ASN1_ªad
( \

477 (*(*)())
d2i_X509_REQ
,
PEM_STRING_X509_REQ
,
Â
,(**)
x
,
cb
,
u
)

	)

478 
	#PEM_ªad_X509_CRL
(
Â
,
x
,
cb
,
u
Ë(
X509_CRL
 *)
	`PEM_ASN1_ªad
( \

479 (*(*)())
d2i_X509_CRL
,
PEM_STRING_X509_CRL
,
Â
,(**)
x
,
cb
,
u
)

	)

480 
	#PEM_ªad_RSAPriv©eKey
(
Â
,
x
,
cb
,
u
Ë(
RSA
 *)
	`PEM_ASN1_ªad
( \

481 (*(*)())
d2i_RSAPriv©eKey
,
PEM_STRING_RSA
,
Â
,(**)
x
,
cb
,
u
)

	)

482 
	#PEM_ªad_RSAPublicKey
(
Â
,
x
,
cb
,
u
Ë(
RSA
 *)
	`PEM_ASN1_ªad
( \

483 (*(*)())
d2i_RSAPublicKey
,
PEM_STRING_RSA_PUBLIC
,
Â
,(**)
x
,
cb
,
u
)

	)

484 
	#PEM_ªad_DSAPriv©eKey
(
Â
,
x
,
cb
,
u
Ë(
DSA
 *)
	`PEM_ASN1_ªad
( \

485 (*(*)())
d2i_DSAPriv©eKey
,
PEM_STRING_DSA
,
Â
,(**)
x
,
cb
,
u
)

	)

486 
	#PEM_ªad_Priv©eKey
(
Â
,
x
,
cb
,
u
Ë(
EVP_PKEY
 *)
	`PEM_ASN1_ªad
( \

487 (*(*)())
d2i_Priv©eKey
,
PEM_STRING_EVP_PKEY
,
Â
,(**)
x
,
cb
,
u
)

	)

488 
	#PEM_ªad_PKCS7
(
Â
,
x
,
cb
,
u
Ë(
PKCS7
 *)
	`PEM_ASN1_ªad
( \

489 (*(*)())
d2i_PKCS7
,
PEM_STRING_PKCS7
,
Â
,(**)
x
,
cb
,
u
)

	)

490 
	#PEM_ªad_DH∑øms
(
Â
,
x
,
cb
,
u
Ë(
DH
 *)
	`PEM_ASN1_ªad
( \

491 (*(*)())
d2i_DH∑øms
,
PEM_STRING_DHPARAMS
,
Â
,(**)
x
,
cb
,
u
)

	)

493 
	#PEM_ªad_NETSCAPE_CERT_SEQUENCE
(
Â
,
x
,
cb
,
u
) \

494 (
NETSCAPE_CERT_SEQUENCE
 *)
	`PEM_ASN1_ªad
( \

495 (*(*)())
d2i_NETSCAPE_CERT_SEQUENCE
,
PEM_STRING_X509
,
Â
,\

496 (**)
x
,
cb
,
u
)

	)

498 
	#PEM_wrôe_bio_X509
(
bp
,
x
) \

499 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_X509
,
PEM_STRING_X509
,
bp
, \

500 (*)
x
, 
NULL
,NULL,0,NULL,NULL)

	)

501 
	#PEM_wrôe_bio_X509_REQ
(
bp
,
x
Ë
	`PEM_ASN1_wrôe_bio
( \

502 ((*)())
i2d_X509_REQ
,
PEM_STRING_X509_REQ
,
bp
,(*)
x
, \

503 
NULL
,NULL,0,NULL,NULL)

	)

504 
	#PEM_wrôe_bio_X509_CRL
(
bp
,
x
) \

505 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_X509_CRL
,
PEM_STRING_X509_CRL
,\

506 
bp
,(*)
x
, 
NULL
,NULL,0,NULL,NULL)

	)

507 
	#PEM_wrôe_bio_RSAPriv©eKey
(
bp
,
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
) \

508 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_RSAPriv©eKey
,
PEM_STRING_RSA
,\

509 
bp
,(*)
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
)

	)

510 
	#PEM_wrôe_bio_RSAPublicKey
(
bp
,
x
) \

511 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_RSAPublicKey
, \

512 
PEM_STRING_RSA_PUBLIC
,\

513 
bp
,(*)
x
,
NULL
,NULL,0,NULL,NULL)

	)

514 
	#PEM_wrôe_bio_DSAPriv©eKey
(
bp
,
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
) \

515 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_DSAPriv©eKey
,
PEM_STRING_DSA
,\

516 
bp
,(*)
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
)

	)

517 
	#PEM_wrôe_bio_Priv©eKey
(
bp
,
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
) \

518 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_Priv©eKey
,\

519 (((
x
)->
ty≥
 =
EVP_PKEY_DSA
)?
PEM_STRING_DSA
:
PEM_STRING_RSA
),\

520 
bp
,(*)
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
)

	)

521 
	#PEM_wrôe_bio_PKCS7
(
bp
,
x
) \

522 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_PKCS7
,
PEM_STRING_PKCS7
,
bp
, \

523 (*)
x
, 
NULL
,NULL,0,NULL,NULL)

	)

524 
	#PEM_wrôe_bio_DH∑øms
(
bp
,
x
) \

525 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_DH∑øms
,
PEM_STRING_DHPARAMS
,\

526 
bp
,(*)
x
,
NULL
,NULL,0,NULL,NULL)

	)

527 
	#PEM_wrôe_bio_DSA∑øms
(
bp
,
x
) \

528 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_DSA∑øms
, \

529 
PEM_STRING_DSAPARAMS
,
bp
,(*)
x
,
NULL
,NULL,0,NULL,NULL)

	)

531 
	#PEM_wrôe_bio_NETSCAPE_CERT_SEQUENCE
(
bp
,
x
) \

532 
	`PEM_ASN1_wrôe_bio
(((*)())
i2d_NETSCAPE_CERT_SEQUENCE
, \

533 
PEM_STRING_X509
,
bp
, \

534 (*)
x
, 
NULL
,NULL,0,NULL,NULL)

	)

536 
	#PEM_ªad_bio_X509
(
bp
,
x
,
cb
,
u
Ë(
X509
 *)
	`PEM_ASN1_ªad_bio
( \

537 (*(*)())
d2i_X509
,
PEM_STRING_X509
,
bp
,(**)
x
,
cb
,
u
)

	)

538 
	#PEM_ªad_bio_X509_REQ
(
bp
,
x
,
cb
,
u
Ë(
X509_REQ
 *)
	`PEM_ASN1_ªad_bio
( \

539 (*(*)())
d2i_X509_REQ
,
PEM_STRING_X509_REQ
,
bp
,(**)
x
,
cb
,
u
)

	)

540 
	#PEM_ªad_bio_X509_CRL
(
bp
,
x
,
cb
,
u
Ë(
X509_CRL
 *)
	`PEM_ASN1_ªad_bio
( \

541 (*(*)())
d2i_X509_CRL
,
PEM_STRING_X509_CRL
,
bp
,(**)
x
,
cb
,
u
)

	)

542 
	#PEM_ªad_bio_RSAPriv©eKey
(
bp
,
x
,
cb
,
u
Ë(
RSA
 *)
	`PEM_ASN1_ªad_bio
( \

543 (*(*)())
d2i_RSAPriv©eKey
,
PEM_STRING_RSA
,
bp
,(**)
x
,
cb
,
u
)

	)

544 
	#PEM_ªad_bio_RSAPublicKey
(
bp
,
x
,
cb
,
u
Ë(
RSA
 *)
	`PEM_ASN1_ªad_bio
( \

545 (*(*)())
d2i_RSAPublicKey
,
PEM_STRING_RSA_PUBLIC
,
bp
,(**)
x
,
cb
,
u
)

	)

546 
	#PEM_ªad_bio_DSAPriv©eKey
(
bp
,
x
,
cb
,
u
Ë(
DSA
 *)
	`PEM_ASN1_ªad_bio
( \

547 (*(*)())
d2i_DSAPriv©eKey
,
PEM_STRING_DSA
,
bp
,(**)
x
,
cb
,
u
)

	)

548 
	#PEM_ªad_bio_Priv©eKey
(
bp
,
x
,
cb
,
u
Ë(
EVP_PKEY
 *)
	`PEM_ASN1_ªad_bio
( \

549 (*(*)())
d2i_Priv©eKey
,
PEM_STRING_EVP_PKEY
,
bp
,(**)
x
,
cb
,
u
)

	)

551 
	#PEM_ªad_bio_PKCS7
(
bp
,
x
,
cb
,
u
Ë(
PKCS7
 *)
	`PEM_ASN1_ªad_bio
( \

552 (*(*)())
d2i_PKCS7
,
PEM_STRING_PKCS7
,
bp
,(**)
x
,
cb
,
u
)

	)

553 
	#PEM_ªad_bio_DH∑øms
(
bp
,
x
,
cb
,
u
Ë(
DH
 *)
	`PEM_ASN1_ªad_bio
( \

554 (*(*)())
d2i_DH∑øms
,
PEM_STRING_DHPARAMS
,
bp
,(**)
x
,
cb
,
u
)

	)

555 
	#PEM_ªad_bio_DSA∑øms
(
bp
,
x
,
cb
,
u
Ë(
DSA
 *)
	`PEM_ASN1_ªad_bio
( \

556 (*(*)())
d2i_DSA∑øms
,
PEM_STRING_DSAPARAMS
,
bp
,(**)
x
,
cb
,
u
)

	)

558 
	#PEM_ªad_bio_NETSCAPE_CERT_SEQUENCE
(
bp
,
x
,
cb
,
u
) \

559 (
NETSCAPE_CERT_SEQUENCE
 *)
	`PEM_ASN1_ªad_bio
( \

560 (*(*)())
d2i_NETSCAPE_CERT_SEQUENCE
,
PEM_STRING_X509
,
bp
,\

561 (**)
x
,
cb
,
u
)

	)

567 
	t≥m_∑ssw‹d_cb
(*
	tbuf
, 
	tsize
, 
	trwÊag
, *
	tu£rd©a
);

570 
	t≥m_∑ssw‹d_cb
(*
	tbuf
, 
	tsize
, 
	trwÊag
);

573 
PEM_gë_EVP_CIPHER_INFO
(*
hódî
, 
EVP_CIPHER_INFO
 *
cùhî
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

574 
PEM_do_hódî
 (
EVP_CIPHER_INFO
 *
cùhî
, *
d©a
,*
Àn
,

575 
≥m_∑ssw‹d_cb
 *
ˇŒback
,*
u
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

577 #i‚de‡
OPENSSL_NO_BIO


578 
PEM_ªad_bio
(
BIO
 *
bp
, **
«me
, **
hódî
,

579 **
d©a
,*
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

580 
PEM_wrôe_bio
(
BIO
 *
bp
,c⁄° *
«me
,*
hdr
,*
d©a
,

581 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

582 
PEM_byãs_ªad_bio
(**
pd©a
, *
∂í
, **
≤m
, c⁄° *
«me
, 
BIO
 *
bp
,

583 
≥m_∑ssw‹d_cb
 *
cb
, *
u
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

584 * 
PEM_ASN1_ªad_bio
(
d2i_of_void
 *
d2i
, c⁄° *
«me
, 
BIO
 *
bp
,

585 **
x
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

587 
	#PEM_ASN1_ªad_bio_of
(
ty≥
,
d2i
,
«me
,
bp
,
x
,
cb
,
u
) \

588 ((
ty≥
*)
	`PEM_ASN1_ªad_bio
(
	`CHECKED_D2I_OF
—y≥, 
d2i
), \

589 
«me
, 
bp
, \

590 
	`CHECKED_PPTR_OF
(
ty≥
, 
x
), \

591 
cb
, 
u
))

	)

593 
PEM_ASN1_wrôe_bio
(
i2d_of_void
 *
i2d
,c⁄° *
«me
,
BIO
 *
bp
,*
x
,

594 c⁄° 
EVP_CIPHER
 *
íc
,*
k°r
,
kÀn
,

595 
≥m_∑ssw‹d_cb
 *
cb
, *
u
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

597 
	#PEM_ASN1_wrôe_bio_of
(
ty≥
,
i2d
,
«me
,
bp
,
x
,
íc
,
k°r
,
kÀn
,
cb
,
u
) \

598 (
	`PEM_ASN1_wrôe_bio
(
	`CHECKED_I2D_OF
(
ty≥
, 
i2d
), \

599 
«me
, 
bp
, \

600 
	`CHECKED_PTR_OF
(
ty≥
, 
x
), \

601 
íc
, 
k°r
, 
kÀn
, 
cb
, 
u
))

	)

603 
STACK_OF
(
X509_INFO
Ë* 
PEM_X509_INFO_ªad_bio
(
BIO
 *
bp
, STACK_OF(X509_INFOË*
sk
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

604 
PEM_X509_INFO_wrôe_bio
(
BIO
 *
bp
,
X509_INFO
 *
xi
, 
EVP_CIPHER
 *
íc
,

605 *
k°r
, 
kÀn
, 
≥m_∑ssw‹d_cb
 *
cd
, *
u
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

608 #i‚de‡
OPENSSL_SYS_WIN16


609 
PEM_ªad
(
FILE
 *
Â
, **
«me
, **
hódî
,

610 **
d©a
,*
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

611 
PEM_wrôe
(
FILE
 *
Â
,*
«me
,*
hdr
,*
d©a
,
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

612 * 
PEM_ASN1_ªad
(
d2i_of_void
 *
d2i
, c⁄° *
«me
, 
FILE
 *
Â
, **
x
,

613 
≥m_∑ssw‹d_cb
 *
cb
, *
u
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

614 
PEM_ASN1_wrôe
(
i2d_of_void
 *
i2d
,c⁄° *
«me
,
FILE
 *
Â
,

615 *
x
,c⁄° 
EVP_CIPHER
 *
íc
,*
k°r
,

616 
kÀn
,
≥m_∑ssw‹d_cb
 *
ˇŒback
, *
u
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

617 
STACK_OF
(
X509_INFO
Ë* 
PEM_X509_INFO_ªad
(
FILE
 *
Â
, STACK_OF(X509_INFOË*
sk
,

618 
≥m_∑ssw‹d_cb
 *
cb
, *
u
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

621 
PEM_SólInô
(
PEM_ENCODE_SEAL_CTX
 *
˘x
, 
EVP_CIPHER
 *
ty≥
,

622 
EVP_MD
 *
md_ty≥
, **
ek
, *
ekl
,

623 *
iv
, 
EVP_PKEY
 **
pubk
, 
≈ubk
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

624 
PEM_SólUpd©e
(
PEM_ENCODE_SEAL_CTX
 *
˘x
, *
out
, *
oué
,

625 *
ö
, 
öl
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

626 
PEM_SólFöÆ
(
PEM_ENCODE_SEAL_CTX
 *
˘x
, *
sig
,*
sigl
,

627 *
out
, *
oué
, 
EVP_PKEY
 *
¥iv
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

629 
PEM_SignInô
(
EVP_MD_CTX
 *
˘x
, 
EVP_MD
 *
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

630 
PEM_SignUpd©e
(
EVP_MD_CTX
 *
˘x
,*
d
,
˙t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

631 
PEM_SignFöÆ
(
EVP_MD_CTX
 *
˘x
, *
sigªt
,

632 *
sigÀn
, 
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

634 
PEM_def_ˇŒback
(*
buf
, 
num
, 
w
, *
key
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

635 
PEM_¥oc_ty≥
(*
buf
, 
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

636 
PEM_dek_öfo
(*
buf
, c⁄° *
ty≥
, 
Àn
, *
°r
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

638 #i‚de‡
SSLEAY_MACROS


640 
	~<›ís¶/symhacks.h
>

642 
DECLARE_PEM_rw
(
X509
, X509)

644 
DECLARE_PEM_rw
(
X509_AUX
, 
X509
)

646 
DECLARE_PEM_rw
(
X509_CERT_PAIR
, X509_CERT_PAIR)

648 
DECLARE_PEM_rw
(
X509_REQ
, X509_REQ)

649 
DECLARE_PEM_wrôe
(
X509_REQ_NEW
, 
X509_REQ
)

651 
DECLARE_PEM_rw
(
X509_CRL
, X509_CRL)

653 
DECLARE_PEM_rw
(
PKCS7
, PKCS7)

655 
DECLARE_PEM_rw
(
NETSCAPE_CERT_SEQUENCE
, NETSCAPE_CERT_SEQUENCE)

657 
DECLARE_PEM_rw
(
PKCS8
, 
X509_SIG
)

659 
DECLARE_PEM_rw
(
PKCS8_PRIV_KEY_INFO
, PKCS8_PRIV_KEY_INFO)

661 #i‚de‡
OPENSSL_NO_RSA


663 
DECLARE_PEM_rw_cb
(
RSAPriv©eKey
, 
RSA
)

665 
DECLARE_PEM_rw_c⁄°
(
RSAPublicKey
, 
RSA
)

666 
DECLARE_PEM_rw
(
RSA_PUBKEY
, 
RSA
)

670 #i‚de‡
OPENSSL_NO_DSA


672 
DECLARE_PEM_rw_cb
(
DSAPriv©eKey
, 
DSA
)

674 
DECLARE_PEM_rw
(
DSA_PUBKEY
, 
DSA
)

676 
DECLARE_PEM_rw_c⁄°
(
DSA∑øms
, 
DSA
)

680 #i‚de‡
OPENSSL_NO_EC


681 
DECLARE_PEM_rw_c⁄°
(
ECPKP¨amëîs
, 
EC_GROUP
)

682 
DECLARE_PEM_rw_cb
(
ECPriv©eKey
, 
EC_KEY
)

683 
DECLARE_PEM_rw
(
EC_PUBKEY
, 
EC_KEY
)

686 #i‚de‡
OPENSSL_NO_DH


688 
DECLARE_PEM_rw_c⁄°
(
DH∑øms
, 
DH
)

692 
DECLARE_PEM_rw_cb
(
Priv©eKey
, 
EVP_PKEY
)

694 
DECLARE_PEM_rw
(
PUBKEY
, 
EVP_PKEY
)

696 
PEM_wrôe_bio_PKCS8Priv©eKey_nid
(
BIO
 *
bp
, 
EVP_PKEY
 *
x
, 
nid
,

697 *
k°r
, 
kÀn
,

698 
≥m_∑ssw‹d_cb
 *
cb
, *
u
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

699 
PEM_wrôe_bio_PKCS8Priv©eKey
(
BIO
 *, 
EVP_PKEY
 *, c⁄° 
EVP_CIPHER
 *,

700 *, , 
≥m_∑ssw‹d_cb
 *, *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

701 
i2d_PKCS8Priv©eKey_bio
(
BIO
 *
bp
, 
EVP_PKEY
 *
x
, c⁄° 
EVP_CIPHER
 *
íc
,

702 *
k°r
, 
kÀn
,

703 
≥m_∑ssw‹d_cb
 *
cb
, *
u
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

704 
i2d_PKCS8Priv©eKey_nid_bio
(
BIO
 *
bp
, 
EVP_PKEY
 *
x
, 
nid
,

705 *
k°r
, 
kÀn
,

706 
≥m_∑ssw‹d_cb
 *
cb
, *
u
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

707 
EVP_PKEY
 *
d2i_PKCS8Priv©eKey_bio
(
BIO
 *
bp
, EVP_PKEY **
x
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

709 
i2d_PKCS8Priv©eKey_Â
(
FILE
 *
Â
, 
EVP_PKEY
 *
x
, c⁄° 
EVP_CIPHER
 *
íc
,

710 *
k°r
, 
kÀn
,

711 
≥m_∑ssw‹d_cb
 *
cb
, *
u
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

712 
i2d_PKCS8Priv©eKey_nid_Â
(
FILE
 *
Â
, 
EVP_PKEY
 *
x
, 
nid
,

713 *
k°r
, 
kÀn
,

714 
≥m_∑ssw‹d_cb
 *
cb
, *
u
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

715 
PEM_wrôe_PKCS8Priv©eKey_nid
(
FILE
 *
Â
, 
EVP_PKEY
 *
x
, 
nid
,

716 *
k°r
, 
kÀn
,

717 
≥m_∑ssw‹d_cb
 *
cb
, *
u
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

719 
EVP_PKEY
 *
d2i_PKCS8Priv©eKey_Â
(
FILE
 *
Â
, EVP_PKEY **
x
, 
≥m_∑ssw‹d_cb
 *
cb
, *
u
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

721 
PEM_wrôe_PKCS8Priv©eKey
(
FILE
 *
Â
,
EVP_PKEY
 *
x
,c⁄° 
EVP_CIPHER
 *
íc
,

722 *
k°r
,
kÀn
, 
≥m_∑ssw‹d_cb
 *
cd
, *
u
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

731 
ERR_lﬂd_PEM_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

736 
	#PEM_F_D2I_PKCS8PRIVATEKEY_BIO
 120

	)

737 
	#PEM_F_D2I_PKCS8PRIVATEKEY_FP
 121

	)

738 
	#PEM_F_DO_PK8PKEY
 126

	)

739 
	#PEM_F_DO_PK8PKEY_FP
 125

	)

740 
	#PEM_F_LOAD_IV
 101

	)

741 
	#PEM_F_PEM_ASN1_READ
 102

	)

742 
	#PEM_F_PEM_ASN1_READ_BIO
 103

	)

743 
	#PEM_F_PEM_ASN1_WRITE
 104

	)

744 
	#PEM_F_PEM_ASN1_WRITE_BIO
 105

	)

745 
	#PEM_F_PEM_DEF_CALLBACK
 100

	)

746 
	#PEM_F_PEM_DO_HEADER
 106

	)

747 
	#PEM_F_PEM_F_PEM_WRITE_PKCS8PRIVATEKEY
 118

	)

748 
	#PEM_F_PEM_GET_EVP_CIPHER_INFO
 107

	)

749 
	#PEM_F_PEM_PK8PKEY
 119

	)

750 
	#PEM_F_PEM_READ
 108

	)

751 
	#PEM_F_PEM_READ_BIO
 109

	)

752 
	#PEM_F_PEM_READ_BIO_PRIVATEKEY
 123

	)

753 
	#PEM_F_PEM_READ_PRIVATEKEY
 124

	)

754 
	#PEM_F_PEM_SEALFINAL
 110

	)

755 
	#PEM_F_PEM_SEALINIT
 111

	)

756 
	#PEM_F_PEM_SIGNFINAL
 112

	)

757 
	#PEM_F_PEM_WRITE
 113

	)

758 
	#PEM_F_PEM_WRITE_BIO
 114

	)

759 
	#PEM_F_PEM_X509_INFO_READ
 115

	)

760 
	#PEM_F_PEM_X509_INFO_READ_BIO
 116

	)

761 
	#PEM_F_PEM_X509_INFO_WRITE_BIO
 117

	)

764 
	#PEM_R_BAD_BASE64_DECODE
 100

	)

765 
	#PEM_R_BAD_DECRYPT
 101

	)

766 
	#PEM_R_BAD_END_LINE
 102

	)

767 
	#PEM_R_BAD_IV_CHARS
 103

	)

768 
	#PEM_R_BAD_PASSWORD_READ
 104

	)

769 
	#PEM_R_ERROR_CONVERTING_PRIVATE_KEY
 115

	)

770 
	#PEM_R_NOT_DEK_INFO
 105

	)

771 
	#PEM_R_NOT_ENCRYPTED
 106

	)

772 
	#PEM_R_NOT_PROC_TYPE
 107

	)

773 
	#PEM_R_NO_START_LINE
 108

	)

774 
	#PEM_R_PROBLEMS_GETTING_PASSWORD
 109

	)

775 
	#PEM_R_PUBLIC_KEY_NO_RSA
 110

	)

776 
	#PEM_R_READ_KEY
 111

	)

777 
	#PEM_R_SHORT_HEADER
 112

	)

778 
	#PEM_R_UNSUPPORTED_CIPHER
 113

	)

779 
	#PEM_R_UNSUPPORTED_ENCRYPTION
 114

	)

781 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/rsa.h

59 #i‚de‡
HEADER_RSA_H


60 
	#HEADER_RSA_H


	)

62 
	~<AvaûabûôyMa¸os.h
>

64 
	~<›ís¶/a¢1.h
>

66 #i‚de‡
OPENSSL_NO_BIO


67 
	~<›ís¶/bio.h
>

69 
	~<›ís¶/¸y±o.h
>

70 
	~<›ís¶/os¶_typ.h
>

71 #i‚de‡
OPENSSL_NO_DEPRECATED


72 
	~<›ís¶/bn.h
>

75 #ifde‡
OPENSSL_NO_RSA


76 #îr‹ 
RSA
 
is
 
dißbÀd
.

85 
	#RSA_FLAG_FIPS_METHOD
 0x0400

	)

92 
	#RSA_FLAG_NON_FIPS_ALLOW
 0x0400

	)

94 #ifde‡
OPENSSL_FIPS


95 
	#FIPS_RSA_SIZE_T
 

	)

98 #ifde‡ 
__˝lu•lus


106 
	srß_mëh_°


108 c⁄° *
«me
;

109 (*
rß_pub_íc
)(
Êí
,c⁄° *
‰om
,

110 *
to
,

111 
RSA
 *
rß
,
∑ddög
);

112 (*
rß_pub_dec
)(
Êí
,c⁄° *
‰om
,

113 *
to
,

114 
RSA
 *
rß
,
∑ddög
);

115 (*
rß_¥iv_íc
)(
Êí
,c⁄° *
‰om
,

116 *
to
,

117 
RSA
 *
rß
,
∑ddög
);

118 (*
rß_¥iv_dec
)(
Êí
,c⁄° *
‰om
,

119 *
to
,

120 
RSA
 *
rß
,
∑ddög
);

121 (*
rß_mod_exp
)(
BIGNUM
 *
r0
,c⁄° BIGNUM *
I
,
RSA
 *
rß
,
BN_CTX
 *
˘x
);

122 (*
bn_mod_exp
)(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

123 c⁄° 
BIGNUM
 *
m
, 
BN_CTX
 *
˘x
,

124 
BN_MONT_CTX
 *
m_˘x
);

125 (*
öô
)(
RSA
 *
rß
);

126 (*
föish
)(
RSA
 *
rß
);

127 
Êags
;

128 *
≠p_d©a
;

136 (*
rß_sign
)(
ty≥
,

137 c⁄° *
m
, 
m_Àngth
,

138 *
sigªt
, *
sigÀn
, c⁄° 
RSA
 *
rß
);

139 (*
rß_vîify
)(
dty≥
,

140 c⁄° *
m
, 
m_Àngth
,

141 *
sigbuf
, 
sigÀn
, c⁄° 
RSA
 *
rß
);

146 (*
rß_keygí
)(
RSA
 *
rß
, 
bôs
, 
BIGNUM
 *
e
, 
BN_GENCB
 *
cb
);

149 
	srß_°


153 
∑d
;

154 
vîsi⁄
;

155 c⁄° 
RSA_METHOD
 *
mëh
;

157 
ENGINE
 *
ígöe
;

158 
BIGNUM
 *
n
;

159 
BIGNUM
 *
e
;

160 
BIGNUM
 *
d
;

161 
BIGNUM
 *
p
;

162 
BIGNUM
 *
q
;

163 
BIGNUM
 *
dmp1
;

164 
BIGNUM
 *
dmq1
;

165 
BIGNUM
 *
iqmp
;

167 
CRYPTO_EX_DATA
 
ex_d©a
;

168 
ª„ªn˚s
;

169 
Êags
;

172 
BN_MONT_CTX
 *
_mëhod_mod_n
;

173 
BN_MONT_CTX
 *
_mëhod_mod_p
;

174 
BN_MONT_CTX
 *
_mëhod_mod_q
;

178 *
bignum_d©a
;

179 
BN_BLINDING
 *
blödög
;

180 
BN_BLINDING
 *
mt_blödög
;

183 #i‚de‡
OPENSSL_RSA_MAX_MODULUS_BITS


184 
	#OPENSSL_RSA_MAX_MODULUS_BITS
 16384

	)

187 
	#OPENSSL_RSA_FIPS_MIN_MODULUS_BITS
 1024

	)

189 #i‚de‡
OPENSSL_RSA_SMALL_MODULUS_BITS


190 
	#OPENSSL_RSA_SMALL_MODULUS_BITS
 3072

	)

192 #i‚de‡
OPENSSL_RSA_MAX_PUBEXP_BITS


193 
	#OPENSSL_RSA_MAX_PUBEXP_BITS
 64

	)

196 
	#RSA_3
 0x3L

	)

197 
	#RSA_F4
 0x10001L

	)

199 
	#RSA_METHOD_FLAG_NO_CHECK
 0x0001

	)

201 
	#RSA_FLAG_CACHE_PUBLIC
 0x0002

	)

202 
	#RSA_FLAG_CACHE_PRIVATE
 0x0004

	)

203 
	#RSA_FLAG_BLINDING
 0x0008

	)

204 
	#RSA_FLAG_THREAD_SAFE
 0x0010

	)

210 
	#RSA_FLAG_EXT_PKEY
 0x0020

	)

214 
	#RSA_FLAG_SIGN_VER
 0x0040

	)

216 
	#RSA_FLAG_NO_BLINDING
 0x0080

	)

221 
	#RSA_FLAG_NO_CONSTTIME
 0x0100

	)

231 #i‚de‡
OPENSSL_NO_DEPRECATED


232 
	#RSA_FLAG_NO_EXP_CONSTTIME
 
RSA_FLAG_NO_CONSTTIME


	)

243 
	#RSA_PKCS1_PADDING
 1

	)

244 
	#RSA_SSLV23_PADDING
 2

	)

245 
	#RSA_NO_PADDING
 3

	)

246 
	#RSA_PKCS1_OAEP_PADDING
 4

	)

247 
	#RSA_X931_PADDING
 5

	)

249 
	#RSA_PKCS1_PADDING_SIZE
 11

	)

251 
	#RSA_£t_≠p_d©a
(
s
,
¨g
Ë
	`RSA_£t_ex_d©a
(s,0,¨g)

	)

252 
	#RSA_gë_≠p_d©a
(
s
Ë
	`RSA_gë_ex_d©a
(s,0)

	)

254 
RSA
 * 
RSA_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

255 
RSA
 * 
RSA_√w_mëhod
(
ENGINE
 *
ígöe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

256 
RSA_size
(c⁄° 
RSA
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

259 #i‚de‡
OPENSSL_NO_DEPRECATED


260 
RSA
 * 
RSA_gíî©e_key
(
bôs
, 
e
,

261 (*
ˇŒback
)(,,*),*
cb_¨g
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

265 
RSA_gíî©e_key_ex
(
RSA
 *
rß
, 
bôs
, 
BIGNUM
 *
e
, 
BN_GENCB
 *
cb
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

266 
RSA_X931_dîive_ex
(
RSA
 *
rß
, 
BIGNUM
 *
p1
, BIGNUM *
p2
, BIGNUM *
q1
, BIGNUM *
q2
,

267 c⁄° 
BIGNUM
 *
Xp1
, c⁄° BIGNUM *
Xp2
, c⁄° BIGNUM *
Xp
,

268 c⁄° 
BIGNUM
 *
Xq1
, c⁄° BIGNUM *
Xq2
, c⁄° BIGNUM *
Xq
,

269 c⁄° 
BIGNUM
 *
e
, 
BN_GENCB
 *
cb
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

270 
RSA_X931_gíî©e_key_ex
(
RSA
 *
rß
, 
bôs
, c⁄° 
BIGNUM
 *
e
, 
BN_GENCB
 *
cb
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

272 
RSA_check_key
(c⁄° 
RSA
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

274 
RSA_public_í¸y±
(
Êí
, c⁄° *
‰om
,

275 *
to
, 
RSA
 *
rß
,
∑ddög
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

276 
RSA_¥iv©e_í¸y±
(
Êí
, c⁄° *
‰om
,

277 *
to
, 
RSA
 *
rß
,
∑ddög
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

278 
RSA_public_de¸y±
(
Êí
, c⁄° *
‰om
,

279 *
to
, 
RSA
 *
rß
,
∑ddög
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

280 
RSA_¥iv©e_de¸y±
(
Êí
, c⁄° *
‰om
,

281 *
to
, 
RSA
 *
rß
,
∑ddög
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

282 
RSA_‰ì
 (
RSA
 *
r
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

284 
RSA_up_ªf
(
RSA
 *
r
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

286 
RSA_Êags
(c⁄° 
RSA
 *
r
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

288 #ifde‡
OPENSSL_FIPS


289 
RSA
 *
FIPS_rß_√w
();

290 
FIPS_rß_‰ì
(
RSA
 *
r
);

293 
RSA_£t_deÁu…_mëhod
(c⁄° 
RSA_METHOD
 *
mëh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

294 c⁄° 
RSA_METHOD
 *
RSA_gë_deÁu…_mëhod
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

295 c⁄° 
RSA_METHOD
 *
RSA_gë_mëhod
(c⁄° 
RSA
 *
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

296 
RSA_£t_mëhod
(
RSA
 *
rß
, c⁄° 
RSA_METHOD
 *
mëh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

299 
RSA_mem‹y_lock
(
RSA
 *
r
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

302 c⁄° 
RSA_METHOD
 *
RSA_PKCS1_SSLóy
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

304 c⁄° 
RSA_METHOD
 *
RSA_nuŒ_mëhod
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

306 
DECLARE_ASN1_ENCODE_FUNCTIONS_c⁄°
(
RSA
, 
RSAPublicKey
)

307 
DECLARE_ASN1_ENCODE_FUNCTIONS_c⁄°
(
RSA
, 
RSAPriv©eKey
)

309 #i‚de‡
OPENSSL_NO_FP_API


310 
RSA_¥öt_Â
(
FILE
 *
Â
, c⁄° 
RSA
 *
r
,
off£t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

313 #i‚de‡
OPENSSL_NO_BIO


314 
RSA_¥öt
(
BIO
 *
bp
, c⁄° 
RSA
 *
r
,
off£t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

317 #i‚de‡
OPENSSL_NO_RC4


318 
i2d_RSA_NET
(c⁄° 
RSA
 *
a
, **
µ
,

319 (*
cb
)(*
buf
, 
Àn
, c⁄° *
¥om±
, 
vîify
),

320 
sgckey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

321 
RSA
 *
d2i_RSA_NET
(RSA **
a
, c⁄° **
µ
, 
Àngth
,

322 (*
cb
)(*
buf
, 
Àn
, c⁄° *
¥om±
, 
vîify
),

323 
sgckey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

325 
i2d_Nësˇ≥_RSA
(c⁄° 
RSA
 *
a
, **
µ
,

326 (*
cb
)(*
buf
, 
Àn
, c⁄° *
¥om±
,

327 
vîify
)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

328 
RSA
 *
d2i_Nësˇ≥_RSA
(RSA **
a
, c⁄° **
µ
, 
Àngth
,

329 (*
cb
)(*
buf
, 
Àn
, c⁄° *
¥om±
,

330 
vîify
)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

335 
RSA_sign
(
ty≥
, c⁄° *
m
, 
m_Àngth
,

336 *
sigªt
, *
sigÀn
, 
RSA
 *
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

337 
RSA_vîify
(
ty≥
, c⁄° *
m
, 
m_Àngth
,

338 *
sigbuf
, 
sigÀn
, 
RSA
 *
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

342 
RSA_sign_ASN1_OCTET_STRING
(
ty≥
,

343 c⁄° *
m
, 
m_Àngth
,

344 *
sigªt
, *
sigÀn
, 
RSA
 *
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

345 
RSA_vîify_ASN1_OCTET_STRING
(
ty≥
,

346 c⁄° *
m
, 
m_Àngth
,

347 *
sigbuf
, 
sigÀn
, 
RSA
 *
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

349 
RSA_blödög_⁄
(
RSA
 *
rß
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

350 
RSA_blödög_off
(
RSA
 *
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

351 
BN_BLINDING
 *
RSA_£tup_blödög
(
RSA
 *
rß
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

353 
RSA_∑ddög_add_PKCS1_ty≥_1
(*
to
,
éí
,

354 c⁄° *
f
,
Ê
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

355 
RSA_∑ddög_check_PKCS1_ty≥_1
(*
to
,
éí
,

356 c⁄° *
f
,
Ê
,
rß_Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

357 
RSA_∑ddög_add_PKCS1_ty≥_2
(*
to
,
éí
,

358 c⁄° *
f
,
Ê
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

359 
RSA_∑ddög_check_PKCS1_ty≥_2
(*
to
,
éí
,

360 c⁄° *
f
,
Ê
,
rß_Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

361 
PKCS1_MGF1
(*
mask
, 
Àn
,

362 c⁄° *
£ed
, 
£edÀn
, c⁄° 
EVP_MD
 *
dg°
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

363 
RSA_∑ddög_add_PKCS1_OAEP
(*
to
,
éí
,

364 c⁄° *
f
,
Ê
,

365 c⁄° *
p
,
∂
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

366 
RSA_∑ddög_check_PKCS1_OAEP
(*
to
,
éí
,

367 c⁄° *
f
,
Ê
,
rß_Àn
,

368 c⁄° *
p
,
∂
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

369 
RSA_∑ddög_add_SSLv23
(*
to
,
éí
,

370 c⁄° *
f
,
Ê
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

371 
RSA_∑ddög_check_SSLv23
(*
to
,
éí
,

372 c⁄° *
f
,
Ê
,
rß_Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

373 
RSA_∑ddög_add_n⁄e
(*
to
,
éí
,

374 c⁄° *
f
,
Ê
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

375 
RSA_∑ddög_check_n⁄e
(*
to
,
éí
,

376 c⁄° *
f
,
Ê
,
rß_Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

377 
RSA_∑ddög_add_X931
(*
to
,
éí
,

378 c⁄° *
f
,
Ê
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

379 
RSA_∑ddög_check_X931
(*
to
,
éí
,

380 c⁄° *
f
,
Ê
,
rß_Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

381 
RSA_X931_hash_id
(
nid
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

383 
RSA_vîify_PKCS1_PSS
(
RSA
 *
rß
, c⁄° *
mHash
,

384 c⁄° 
EVP_MD
 *
Hash
, c⁄° *
EM
, 
sLí
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

385 
RSA_∑ddög_add_PKCS1_PSS
(
RSA
 *
rß
, *
EM
,

386 c⁄° *
mHash
,

387 c⁄° 
EVP_MD
 *
Hash
, 
sLí
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

389 
RSA_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w
 *
√w_func
,

390 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

391 
RSA_£t_ex_d©a
(
RSA
 *
r
,
idx
,*
¨g
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

392 *
RSA_gë_ex_d©a
(c⁄° 
RSA
 *
r
, 
idx
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

394 
RSA
 *
RSAPublicKey_dup
(RSA *
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

395 
RSA
 *
RSAPriv©eKey_dup
(RSA *
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

401 
ERR_lﬂd_RSA_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

406 
	#RSA_F_FIPS_RSA_SIGN
 140

	)

407 
	#RSA_F_FIPS_RSA_VERIFY
 141

	)

408 
	#RSA_F_MEMORY_LOCK
 100

	)

409 
	#RSA_F_RSA_BUILTIN_KEYGEN
 129

	)

410 
	#RSA_F_RSA_CHECK_KEY
 123

	)

411 
	#RSA_F_RSA_EAY_PRIVATE_DECRYPT
 101

	)

412 
	#RSA_F_RSA_EAY_PRIVATE_ENCRYPT
 102

	)

413 
	#RSA_F_RSA_EAY_PUBLIC_DECRYPT
 103

	)

414 
	#RSA_F_RSA_EAY_PUBLIC_ENCRYPT
 104

	)

415 
	#RSA_F_RSA_GENERATE_KEY
 105

	)

416 
	#RSA_F_RSA_MEMORY_LOCK
 130

	)

417 
	#RSA_F_RSA_NEW_METHOD
 106

	)

418 
	#RSA_F_RSA_NULL
 124

	)

419 
	#RSA_F_RSA_NULL_MOD_EXP
 131

	)

420 
	#RSA_F_RSA_NULL_PRIVATE_DECRYPT
 132

	)

421 
	#RSA_F_RSA_NULL_PRIVATE_ENCRYPT
 133

	)

422 
	#RSA_F_RSA_NULL_PUBLIC_DECRYPT
 134

	)

423 
	#RSA_F_RSA_NULL_PUBLIC_ENCRYPT
 135

	)

424 
	#RSA_F_RSA_PADDING_ADD_NONE
 107

	)

425 
	#RSA_F_RSA_PADDING_ADD_PKCS1_OAEP
 121

	)

426 
	#RSA_F_RSA_PADDING_ADD_PKCS1_PSS
 125

	)

427 
	#RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_1
 108

	)

428 
	#RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_2
 109

	)

429 
	#RSA_F_RSA_PADDING_ADD_SSLV23
 110

	)

430 
	#RSA_F_RSA_PADDING_ADD_X931
 127

	)

431 
	#RSA_F_RSA_PADDING_CHECK_NONE
 111

	)

432 
	#RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP
 122

	)

433 
	#RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_1
 112

	)

434 
	#RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_2
 113

	)

435 
	#RSA_F_RSA_PADDING_CHECK_SSLV23
 114

	)

436 
	#RSA_F_RSA_PADDING_CHECK_X931
 128

	)

437 
	#RSA_F_RSA_PRINT
 115

	)

438 
	#RSA_F_RSA_PRINT_FP
 116

	)

439 
	#RSA_F_RSA_PRIVATE_ENCRYPT
 137

	)

440 
	#RSA_F_RSA_PUBLIC_DECRYPT
 138

	)

441 
	#RSA_F_RSA_SETUP_BLINDING
 136

	)

442 
	#RSA_F_RSA_SET_DEFAULT_METHOD
 139

	)

443 
	#RSA_F_RSA_SET_METHOD
 142

	)

444 
	#RSA_F_RSA_SIGN
 117

	)

445 
	#RSA_F_RSA_SIGN_ASN1_OCTET_STRING
 118

	)

446 
	#RSA_F_RSA_VERIFY
 119

	)

447 
	#RSA_F_RSA_VERIFY_ASN1_OCTET_STRING
 120

	)

448 
	#RSA_F_RSA_VERIFY_PKCS1_PSS
 126

	)

451 
	#RSA_R_ALGORITHM_MISMATCH
 100

	)

452 
	#RSA_R_BAD_E_VALUE
 101

	)

453 
	#RSA_R_BAD_FIXED_HEADER_DECRYPT
 102

	)

454 
	#RSA_R_BAD_PAD_BYTE_COUNT
 103

	)

455 
	#RSA_R_BAD_SIGNATURE
 104

	)

456 
	#RSA_R_BLOCK_TYPE_IS_NOT_01
 106

	)

457 
	#RSA_R_BLOCK_TYPE_IS_NOT_02
 107

	)

458 
	#RSA_R_DATA_GREATER_THAN_MOD_LEN
 108

	)

459 
	#RSA_R_DATA_TOO_LARGE
 109

	)

460 
	#RSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE
 110

	)

461 
	#RSA_R_DATA_TOO_LARGE_FOR_MODULUS
 132

	)

462 
	#RSA_R_DATA_TOO_SMALL
 111

	)

463 
	#RSA_R_DATA_TOO_SMALL_FOR_KEY_SIZE
 122

	)

464 
	#RSA_R_DIGEST_TOO_BIG_FOR_RSA_KEY
 112

	)

465 
	#RSA_R_DMP1_NOT_CONGRUENT_TO_D
 124

	)

466 
	#RSA_R_DMQ1_NOT_CONGRUENT_TO_D
 125

	)

467 
	#RSA_R_D_E_NOT_CONGRUENT_TO_1
 123

	)

468 
	#RSA_R_FIRST_OCTET_INVALID
 133

	)

469 
	#RSA_R_INVALID_HEADER
 137

	)

470 
	#RSA_R_INVALID_MESSAGE_LENGTH
 131

	)

471 
	#RSA_R_INVALID_PADDING
 138

	)

472 
	#RSA_R_INVALID_TRAILER
 139

	)

473 
	#RSA_R_IQMP_NOT_INVERSE_OF_Q
 126

	)

474 
	#RSA_R_KEY_SIZE_TOO_SMALL
 120

	)

475 
	#RSA_R_LAST_OCTET_INVALID
 134

	)

476 
	#RSA_R_MODULUS_TOO_LARGE
 105

	)

477 
	#RSA_R_NON_FIPS_METHOD
 141

	)

478 
	#RSA_R_NO_PUBLIC_EXPONENT
 140

	)

479 
	#RSA_R_NULL_BEFORE_BLOCK_MISSING
 113

	)

480 
	#RSA_R_N_DOES_NOT_EQUAL_P_Q
 127

	)

481 
	#RSA_R_OAEP_DECODING_ERROR
 121

	)

482 
	#RSA_R_OPERATION_NOT_ALLOWED_IN_FIPS_MODE
 142

	)

483 
	#RSA_R_PADDING_CHECK_FAILED
 114

	)

484 
	#RSA_R_P_NOT_PRIME
 128

	)

485 
	#RSA_R_Q_NOT_PRIME
 129

	)

486 
	#RSA_R_RSA_OPERATIONS_NOT_SUPPORTED
 130

	)

487 
	#RSA_R_SLEN_CHECK_FAILED
 136

	)

488 
	#RSA_R_SLEN_RECOVERY_FAILED
 135

	)

489 
	#RSA_R_SSLV3_ROLLBACK_ATTACK
 115

	)

490 
	#RSA_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD
 116

	)

491 
	#RSA_R_UNKNOWN_ALGORITHM_TYPE
 117

	)

492 
	#RSA_R_UNKNOWN_PADDING_TYPE
 118

	)

493 
	#RSA_R_WRONG_SIGNATURE_LENGTH
 119

	)

495 #ifde‡ 
__˝lu•lus


	@/usr/include/pthread.h

52 #i‚de‡
_PTHREAD_H


53 
	#_PTHREAD_H


	)

55 
	~<_ty≥s.h
>

56 #i‚de‡
__POSIX_LIB__


57 
	~<±hªad_im∂.h
>

59 
	~<sched.h
>

60 
	~<time.h
>

61 
	~<sys/_ty≥s/_±hªad_©å_t.h
>

62 
	~<sys/_ty≥s/_±hªad_c⁄d_t.h
>

63 
	~<sys/_ty≥s/_±hªad_c⁄d©å_t.h
>

64 
	~<sys/_ty≥s/_±hªad_key_t.h
>

65 
	~<sys/_ty≥s/_±hªad_muãx_t.h
>

66 
	~<sys/_ty≥s/_±hªad_muãx©å_t.h
>

67 
	~<sys/_ty≥s/_±hªad_⁄˚_t.h
>

68 
	~<sys/_ty≥s/_±hªad_rwlock_t.h
>

69 
	~<sys/_ty≥s/_±hªad_rwlock©å_t.h
>

70 
	~<sys/_ty≥s/_±hªad_t.h
>

72 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_XOPEN_SOURCE
)Ë|| deföed(
_DARWIN_C_SOURCE
)

74 
	~<sys/_ty≥s/_mach_p‹t_t.h
>

75 
	~<sys/_ty≥s/_sig£t_t.h
>

99 
	~<sys/cdefs.h
>

100 
	~<Avaûabûôy.h
>

102 
	g__BEGIN_DECLS


113 
	#±hªad_˛ónup_push
(
func
, 
vÆ
) \

115 
__d¨wö_±hªad_h™dÀr_ªc
 
__h™dÀr
; \

116 
±hªad_t
 
__£lf
 = 
	`±hªad_£lf
(); \

117 
__h™dÀr
.
__routöe
 = 
func
; \

118 
__h™dÀr
.
__¨g
 = 
vÆ
; \

119 
__h™dÀr
.
__√xt
 = 
__£lf
->
__˛ónup_°ack
; \

120 
__£lf
->
__˛ónup_°ack
 = &
__h™dÀr
;

	)

122 
	#±hªad_˛ónup_p›
(
execuã
) \

124 
__£lf
->
__˛ónup_°ack
 = 
__h™dÀr
.
__√xt
; \

125 i‡(
execuã
Ë(
__h™dÀr
.
__routöe
)(__h™dÀr.
__¨g
); \

126 }

	)

132 
	#PTHREAD_CREATE_JOINABLE
 1

	)

133 
	#PTHREAD_CREATE_DETACHED
 2

	)

135 
	#PTHREAD_INHERIT_SCHED
 1

	)

136 
	#PTHREAD_EXPLICIT_SCHED
 2

	)

138 
	#PTHREAD_CANCEL_ENABLE
 0x01

	)

139 
	#PTHREAD_CANCEL_DISABLE
 0x00

	)

140 
	#PTHREAD_CANCEL_DEFERRED
 0x02

	)

141 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 0x00

	)

144 
	#PTHREAD_CANCELED
 ((*Ë1)

	)

147 
	#PTHREAD_SCOPE_SYSTEM
 1

	)

148 
	#PTHREAD_SCOPE_PROCESS
 2

	)

151 
	#PTHREAD_PROCESS_SHARED
 1

	)

152 
	#PTHREAD_PROCESS_PRIVATE
 2

	)

157 
	#PTHREAD_PRIO_NONE
 0

	)

158 
	#PTHREAD_PRIO_INHERIT
 1

	)

159 
	#PTHREAD_PRIO_PROTECT
 2

	)

164 
	#PTHREAD_MUTEX_NORMAL
 0

	)

165 
	#PTHREAD_MUTEX_ERRORCHECK
 1

	)

166 
	#PTHREAD_MUTEX_RECURSIVE
 2

	)

167 
	#PTHREAD_MUTEX_DEFAULT
 
PTHREAD_MUTEX_NORMAL


	)

172 
	#PTHREAD_RWLOCK_INITIALIZER
 {
_PTHREAD_RWLOCK_SIG_öô
, {0}}

	)

177 
	#PTHREAD_MUTEX_INITIALIZER
 {
_PTHREAD_MUTEX_SIG_öô
, {0}}

	)

180 #i‡((
__MAC_OS_X_VERSION_MIN_REQUIRED
 && __MAC_OS_X_VERSION_MIN_REQUIRED >1070Ë|| (
__IPHONE_OS_VERSION_MIN_REQUIRED
 && __IPHONE_OS_VERSION_MIN_REQUIRED >= 50000))

181 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_XOPEN_SOURCE
)Ë|| deföed(
_DARWIN_C_SOURCE
)

182 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER
 {
_PTHREAD_ERRORCHECK_MUTEX_SIG_öô
, {0}}

	)

183 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER
 {
_PTHREAD_RECURSIVE_MUTEX_SIG_öô
, {0}}

	)

195 
	#PTHREAD_COND_INITIALIZER
 {
_PTHREAD_COND_SIG_öô
, {0}}

	)

201 
	#PTHREAD_ONCE_INIT
 {
_PTHREAD_ONCE_SIG_öô
, {0}}

	)

206 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

207 
	`±hªad_©f‹k
((*)(), (*)(), (*)());

209 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

210 
	`±hªad_©å_de°roy
(
±hªad_©å_t
 *);

212 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

213 
	`±hªad_©å_gëdëach°©e
(c⁄° 
±hªad_©å_t
 *, *);

215 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

216 
	`±hªad_©å_gëgu¨dsize
(c⁄° 
±hªad_©å_t
 * 
__ª°ri˘
, 
size_t
 * __restrict);

218 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

219 
	`±hªad_©å_gëöhîôsched
(c⁄° 
±hªad_©å_t
 * 
__ª°ri˘
, * __restrict);

221 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

222 
	`±hªad_©å_gësched∑øm
(c⁄° 
±hªad_©å_t
 * 
__ª°ri˘
,

223 
sched_∑øm
 * 
__ª°ri˘
);

225 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

226 
	`±hªad_©å_gëschedpﬁicy
(c⁄° 
±hªad_©å_t
 * 
__ª°ri˘
, * __restrict);

228 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

229 
	`±hªad_©å_gësc›e
(c⁄° 
±hªad_©å_t
 * 
__ª°ri˘
, * __restrict);

231 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

232 
	`±hªad_©å_gë°ack
(c⁄° 
±hªad_©å_t
 * 
__ª°ri˘
, ** __restrict,

233 
size_t
 * 
__ª°ri˘
);

235 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

236 
	`±hªad_©å_gë°ackaddr
(c⁄° 
±hªad_©å_t
 * 
__ª°ri˘
, ** __restrict);

238 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

239 
	`±hªad_©å_gë°acksize
(c⁄° 
±hªad_©å_t
 * 
__ª°ri˘
, 
size_t
 * __restrict);

241 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

242 
	`±hªad_©å_öô
(
±hªad_©å_t
 *);

244 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

245 
	`±hªad_©å_£tdëach°©e
(
±hªad_©å_t
 *, );

247 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

248 
	`±hªad_©å_£tgu¨dsize
(
±hªad_©å_t
 *, 
size_t
);

250 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

251 
	`±hªad_©å_£töhîôsched
(
±hªad_©å_t
 *, );

253 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

254 
	`±hªad_©å_£tsched∑øm
(
±hªad_©å_t
 * 
__ª°ri˘
,

255 c⁄° 
sched_∑øm
 * 
__ª°ri˘
);

257 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

258 
	`±hªad_©å_£tschedpﬁicy
(
±hªad_©å_t
 *, );

260 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

261 
	`±hªad_©å_£tsc›e
(
±hªad_©å_t
 *, );

263 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

264 
	`±hªad_©å_£t°ack
(
±hªad_©å_t
 *, *, 
size_t
);

266 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

267 
	`±hªad_©å_£t°ackaddr
(
±hªad_©å_t
 *, *);

269 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

270 
	`±hªad_©å_£t°acksize
(
±hªad_©å_t
 *, 
size_t
);

272 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

273 
	$±hªad_ˇn˚l
(
±hªad_t
Ë
	`__DARWIN_ALIAS
(
±hªad_ˇn˚l
);

275 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

276 
	`±hªad_c⁄d_brﬂdˇ°
(
±hªad_c⁄d_t
 *);

278 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

279 
	`±hªad_c⁄d_de°roy
(
±hªad_c⁄d_t
 *);

281 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

282 
	$±hªad_c⁄d_öô
(
±hªad_c⁄d_t
 * 
__ª°ri˘
,

283 c⁄° 
±hªad_c⁄d©å_t
 * 
__ª°ri˘
Ë
	`__DARWIN_ALIAS
(
±hªad_c⁄d_öô
);

285 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

286 
	`±hªad_c⁄d_sig«l
(
±hªad_c⁄d_t
 *);

288 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

289 
	$±hªad_c⁄d_timedwaô
(
±hªad_c⁄d_t
 * 
__ª°ri˘
, 
±hªad_muãx_t
 * __restrict,

290 c⁄° 
time•ec
 * 
__ª°ri˘
Ë
	`__DARWIN_ALIAS_C
(
±hªad_c⁄d_timedwaô
);

292 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

293 
	$±hªad_c⁄d_waô
(
±hªad_c⁄d_t
 * 
__ª°ri˘
,

294 
±hªad_muãx_t
 * 
__ª°ri˘
Ë
	`__DARWIN_ALIAS_C
(
±hªad_c⁄d_waô
);

296 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

297 
	`±hªad_c⁄d©å_de°roy
(
±hªad_c⁄d©å_t
 *);

299 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

300 
	`±hªad_c⁄d©å_öô
(
±hªad_c⁄d©å_t
 *);

302 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

303 
	`±hªad_c⁄d©å_gëpsh¨ed
(c⁄° 
±hªad_c⁄d©å_t
 * 
__ª°ri˘
,

304 * 
__ª°ri˘
);

306 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

307 
	`±hªad_c⁄d©å_£çsh¨ed
(
±hªad_c⁄d©å_t
 *, );

309 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

310 
	`±hªad_¸óã
(
±hªad_t
 * 
__ª°ri˘
, c⁄° 
±hªad_©å_t
 * __restrict,

311 *(*)(*), * 
__ª°ri˘
);

313 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

314 
	`±hªad_dëach
(
±hªad_t
);

316 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

317 
	`±hªad_equÆ
(
±hªad_t
,Öthread_t);

319 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

320 
	$±hªad_exô
(*Ë
__dód2
;

322 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

323 
	`±hªad_gëc⁄cuºícy
();

325 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

326 
	`±hªad_gësched∑øm
(
±hªad_t
 , * 
__ª°ri˘
,

327 
sched_∑øm
 * 
__ª°ri˘
);

329 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

330 * 
	`±hªad_gë•ecific
(
±hªad_key_t
);

332 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

333 
	$±hªad_joö
(
±hªad_t
 , **Ë
	`__DARWIN_ALIAS_C
(
±hªad_joö
);

335 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

336 
	`±hªad_key_¸óã
(
±hªad_key_t
 *, (*)(*));

338 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

339 
	`±hªad_key_dñëe
(
±hªad_key_t
);

341 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

342 
	`±hªad_muãx_de°roy
(
±hªad_muãx_t
 *);

344 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

345 
	`±hªad_muãx_gë¥io˚ûög
(c⁄° 
±hªad_muãx_t
 * 
__ª°ri˘
,

346 * 
__ª°ri˘
);

348 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

349 
	`±hªad_muãx_öô
(
±hªad_muãx_t
 * 
__ª°ri˘
,

350 c⁄° 
±hªad_muãx©å_t
 * 
__ª°ri˘
);

352 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

353 
	`±hªad_muãx_lock
(
±hªad_muãx_t
 *);

355 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

356 
	`±hªad_muãx_£çrio˚ûög
(
±hªad_muãx_t
 * 
__ª°ri˘
, ,

357 * 
__ª°ri˘
);

359 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

360 
	`±hªad_muãx_åylock
(
±hªad_muãx_t
 *);

362 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

363 
	`±hªad_muãx_u∆ock
(
±hªad_muãx_t
 *);

365 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

366 
	$±hªad_muãx©å_de°roy
(
±hªad_muãx©å_t
 *Ë
	`__DARWIN_ALIAS
(
±hªad_muãx©å_de°roy
);

368 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

369 
	`±hªad_muãx©å_gë¥io˚ûög
(c⁄° 
±hªad_muãx©å_t
 * 
__ª°ri˘
,

370 * 
__ª°ri˘
);

372 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

373 
	`±hªad_muãx©å_gë¥Ÿocﬁ
(c⁄° 
±hªad_muãx©å_t
 * 
__ª°ri˘
,

374 * 
__ª°ri˘
);

376 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

377 
	`±hªad_muãx©å_gëpsh¨ed
(c⁄° 
±hªad_muãx©å_t
 * 
__ª°ri˘
,

378 * 
__ª°ri˘
);

380 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

381 
	`±hªad_muãx©å_gëty≥
(c⁄° 
±hªad_muãx©å_t
 * 
__ª°ri˘
,

382 * 
__ª°ri˘
);

384 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

385 
	`±hªad_muãx©å_öô
(
±hªad_muãx©å_t
 *);

387 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

388 
	`±hªad_muãx©å_£çrio˚ûög
(
±hªad_muãx©å_t
 *, );

390 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

391 
	`±hªad_muãx©å_£çrŸocﬁ
(
±hªad_muãx©å_t
 *, );

393 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

394 
	`±hªad_muãx©å_£çsh¨ed
(
±hªad_muãx©å_t
 *, );

396 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

397 
	`±hªad_muãx©å_£ây≥
(
±hªad_muãx©å_t
 *, );

399 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

400 
	`±hªad_⁄˚
(
±hªad_⁄˚_t
 *, (*)());

402 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

403 
	$±hªad_rwlock_de°roy
(
±hªad_rwlock_t
 * ) 
	`__DARWIN_ALIAS
(
±hªad_rwlock_de°roy
);

405 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

406 
	$±hªad_rwlock_öô
(
±hªad_rwlock_t
 * 
__ª°ri˘
,

407 c⁄° 
±hªad_rwlock©å_t
 * 
__ª°ri˘
Ë
	`__DARWIN_ALIAS
(
±hªad_rwlock_öô
);

409 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

410 
	$±hªad_rwlock_rdlock
(
±hªad_rwlock_t
 *Ë
	`__DARWIN_ALIAS
(
±hªad_rwlock_rdlock
);

412 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

413 
	$±hªad_rwlock_åyrdlock
(
±hªad_rwlock_t
 *Ë
	`__DARWIN_ALIAS
(
±hªad_rwlock_åyrdlock
);

415 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

416 
	$±hªad_rwlock_åywæock
(
±hªad_rwlock_t
 *Ë
	`__DARWIN_ALIAS
(
±hªad_rwlock_åywæock
);

418 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

419 
	$±hªad_rwlock_wæock
(
±hªad_rwlock_t
 *Ë
	`__DARWIN_ALIAS
(
±hªad_rwlock_wæock
);

421 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

422 
	$±hªad_rwlock_u∆ock
(
±hªad_rwlock_t
 *Ë
	`__DARWIN_ALIAS
(
±hªad_rwlock_u∆ock
);

424 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

425 
	`±hªad_rwlock©å_de°roy
(
±hªad_rwlock©å_t
 *);

427 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

428 
	`±hªad_rwlock©å_gëpsh¨ed
(c⁄° 
±hªad_rwlock©å_t
 * 
__ª°ri˘
,

429 * 
__ª°ri˘
);

431 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

432 
	`±hªad_rwlock©å_öô
(
±hªad_rwlock©å_t
 *);

434 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

435 
	`±hªad_rwlock©å_£çsh¨ed
(
±hªad_rwlock©å_t
 *, );

437 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

438 
±hªad_t
 
	`±hªad_£lf
();

440 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

441 
	$±hªad_£tˇn˚l°©e
(, *Ë
	`__DARWIN_ALIAS
(
±hªad_£tˇn˚l°©e
);

443 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

444 
	$±hªad_£tˇn˚…y≥
(, *Ë
	`__DARWIN_ALIAS
(
±hªad_£tˇn˚…y≥
);

446 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

447 
	`±hªad_£tc⁄cuºícy
();

449 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

450 
	`±hªad_£tsched∑øm
(
±hªad_t
, , c⁄° 
sched_∑øm
 *);

452 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

453 
	`±hªad_£t•ecific
(
±hªad_key_t
 , const *);

455 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

456 
	$±hªad_ã°ˇn˚l
(Ë
	`__DARWIN_ALIAS
(
±hªad_ã°ˇn˚l
);

458 #i‡(!
	`deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_XOPEN_SOURCE
)Ë|| deföed(
_DARWIN_C_SOURCE
)

461 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

462 
	`±hªad_is_thªaded_≈
();

464 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
)

465 
	`±hªad_thªadid_≈
(
±hªad_t
,
__uöt64_t
*);

468 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
)

469 
	`±hªad_gë«me_≈
(
±hªad_t
,*,
size_t
);

471 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
)

472 
	`±hªad_£äame_≈
(const *);

475 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

476 
	`±hªad_maö_≈
();

479 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

480 
mach_p‹t_t
 
	`±hªad_mach_thªad_≈
(
±hªad_t
);

482 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

483 
size_t
 
	`±hªad_gë_°acksize_≈
(
±hªad_t
);

485 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

486 * 
	`±hªad_gë_°ackaddr_≈
(
±hªad_t
);

489 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

490 
	`±hªad_c⁄d_sig«l_thªad_≈
(
±hªad_c⁄d_t
 *, 
±hªad_t
);

493 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

494 
	`±hªad_c⁄d_timedwaô_ªœtive_≈
(
±hªad_c⁄d_t
 *, 
±hªad_muãx_t
 *,

495 c⁄° 
time•ec
 *);

498 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

499 
	`±hªad_¸óã_su•íded_≈
(
±hªad_t
 *, c⁄° 
±hªad_©å_t
 *,

502 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

503 
	`±hªad_kûl
(
±hªad_t
, );

505 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
)

506 
±hªad_t
 
	`±hªad_‰om_mach_thªad_≈
(
mach_p‹t_t
);

508 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

509 
	$±hªad_sigmask
(, c⁄° 
sig£t_t
 *, sig£t_à*Ë
	`__DARWIN_ALIAS
(
±hªad_sigmask
);

511 
	$__OSX_AVAILABLE_STARTING
(
__MAC_10_4
, 
__IPHONE_2_0
)

512 
	`±hªad_yõld_≈
();

515 
__END_DECLS


	@/usr/include/sched.h

24 #i‚de‡
_SCHED_H_


25 
	#_SCHED_H_


	)

27 
	~<±hªad_im∂.h
>

28 
	~<sys/cdefs.h
>

30 
	g__BEGIN_DECLS


34 #i‚de‡
__POSIX_LIB__


35 
	ssched_∑øm
 { 
	msched_¥i‹ôy
; 
	m__›aque
[
__SCHED_PARAM_SIZE__
]; };

38 
sched_yõld
();

39 
sched_gë_¥i‹ôy_mö
();

40 
sched_gë_¥i‹ôy_max
();

41 
	g__END_DECLS


	@/usr/include/signal.h

58 #i‚de‡
_USER_SIGNAL_H


59 
	#_USER_SIGNAL_H


	)

61 
	~<sys/cdefs.h
>

62 
	~<_ty≥s.h
>

63 
	~<sys/sig«l.h
>

64 
	~<sys/_ty≥s/_±hªad_t.h
>

66 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

67 
__c⁄°
 *__c⁄° 
sys_sig«me
[
NSIG
];

68 
__c⁄°
 *__c⁄° 
sys_sigli°
[
NSIG
];

71 
__BEGIN_DECLS


72 
øi£
();

73 
	g__END_DECLS


75 #i‚def 
_ANSI_SOURCE


76 
__BEGIN_DECLS


77 (*
bsd_sig«l
(, (*)()))();

78 
	$kûl
(
pid_t
, Ë
	`__DARWIN_ALIAS
(
kûl
);

79 
	$kûÕg
(
pid_t
, Ë
	`__DARWIN_ALIAS
(
kûÕg
);

80 
	`±hªad_kûl
(
±hªad_t
, );

81 
	$±hªad_sigmask
(, c⁄° 
sig£t_t
 *, sig£t_à*Ë
	`__DARWIN_ALIAS
(
±hªad_sigmask
);

82 
	`siga˘i⁄
(, c⁄° 
siga˘i⁄
 * 
__ª°ri˘
,

83 
siga˘i⁄
 * 
__ª°ri˘
);

84 
	`sigadd£t
(
sig£t_t
 *, );

85 
	$sigÆt°ack
(c⁄° 
°ack_t
 * 
__ª°ri˘
, sèck_à* __ª°ri˘Ë
	`__DARWIN_ALIAS
(
sigÆt°ack
);

86 
	`sigdñ£t
(
sig£t_t
 *, );

87 
	`sigem±y£t
(
sig£t_t
 *);

88 
	`sigfûl£t
(
sig£t_t
 *);

89 
	`sighﬁd
();

90 
	`sigign‹e
();

91 
	`sigöãºu±
(, );

92 
	`sigismembî
(c⁄° 
sig£t_t
 *, );

93 
	$sig∑u£
(Ë
	`__DARWIN_ALIAS_C
(
sig∑u£
);

94 
	`sig≥ndög
(
sig£t_t
 *);

95 
	`sig¥ocmask
(, c⁄° 
sig£t_t
 * 
__ª°ri˘
, sigset_t * __restrict);

96 
	`sigªl£
();

97 (*
	`sig£t
(, (*)()))();

98 
	$sigsu•íd
(c⁄° 
sig£t_t
 *Ë
	`__DARWIN_ALIAS_C
(
sigsu•íd
);

99 
	$sigwaô
(c⁄° 
sig£t_t
 * 
__ª°ri˘
, * __ª°ri˘Ë
	`__DARWIN_ALIAS_C
(
sigwaô
);

100 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

101 
	`psig«l
(, const *);

102 
	`sigblock
();

103 
	`sig£tmask
();

104 
	`sigvec
(, 
sigvec
 *, sigvec *);

106 
__END_DECLS


109 #i‡
	`deföed
(
__i386__
Ë|| deföed(
__x86_64__
)

111 
__hódî_Æways_ölöe
 

112 
	$__sigbôs
(
__signo
)

114  
__signo
 > 
__DARWIN_NSIG
 ? 0 : (1 << (__signo - 1));

115 
	}
}

117 
	#__sigbôs
(
signo
Ë(1 << ((signoË- 1))

	)

120 
	#sigadd£t
(
£t
, 
signo
Ë(*(£tË|
	`__sigbôs
(signo), 0)

	)

121 
	#sigdñ£t
(
£t
, 
signo
Ë(*(£tË&~
	`__sigbôs
(signo), 0)

	)

122 
	#sigismembî
(
£t
, 
signo
Ë((*(£tË& 
	`__sigbôs
(signo)Ë!0)

	)

123 
	#sigem±y£t
(
£t
Ë(*(£tË0, 0)

	)

124 
	#sigfûl£t
(
£t
Ë(*(£tË~(
sig£t_t
)0, 0)

	)

	@/usr/include/sqlite3.h

33 #i‚de‡
_SQLITE3_H_


34 
	#_SQLITE3_H_


	)

35 
	~<°d¨g.h
>

40 #ifde‡
__˝lu•lus


48 #i‚de‡
SQLITE_EXTERN


49 
	#SQLITE_EXTERN
 

	)

52 #i‚de‡
SQLITE_API


53 
	#SQLITE_API


	)

70 
	#SQLITE_DEPRECATED


	)

71 
	#SQLITE_EXPERIMENTAL


	)

72 #i‚de‡
__OSX_AVAILABLE_BUT_DEPRECATED


73 
	#__OSX_AVAILABLE_BUT_DEPRECATED
(
MacOSAvaûabÀ
, 
MacOSDïªˇãd
, 
iPh⁄eOSAvaûabÀ
, 
iPh⁄eOSDïªˇãd
)

	)

79 #ifde‡
SQLITE_VERSION


80 #unde‡
SQLITE_VERSION


82 #ifde‡
SQLITE_VERSION_NUMBER


83 #unde‡
SQLITE_VERSION_NUMBER


113 
	#SQLITE_VERSION
 "3.7.13"

	)

114 
	#SQLITE_VERSION_NUMBER
 3007013

	)

115 
	#SQLITE_SOURCE_ID
 "2012-07-17 17:46:21 65035912264e3acb˚d5a3e16793327f0a2f17bb"

	)

147 
SQLITE_API
 
SQLITE_EXTERN
 c⁄° 
sqlôe3_vîsi⁄
[];

148 
SQLITE_API
 c⁄° *
sqlôe3_libvîsi⁄
();

149 
SQLITE_API
 c⁄° *
sqlôe3_sour˚id
();

150 
SQLITE_API
 
sqlôe3_libvîsi⁄_numbî
();

174 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


175 
SQLITE_API
 
sqlôe3_compûe›ti⁄_u£d
(c⁄° *
zO±Name
);

176 
SQLITE_API
 c⁄° *
sqlôe3_compûe›ti⁄_gë
(
N
);

215 
SQLITE_API
 
sqlôe3_thªadß„
();

230 
sqlôe3
 
	tsqlôe3
;

248 #ifde‡
SQLITE_INT64_TYPE


249 
SQLITE_INT64_TYPE
 
	tsqlôe_öt64
;

250 
	tSQLITE_INT64_TYPE
 
	tsqlôe_uöt64
;

251 #ñi‡
deföed
(
_MSC_VER
Ë|| deföed(
__BORLANDC__
)

252 
__öt64
 
	tsqlôe_öt64
;

253 
	t__öt64
 
	tsqlôe_uöt64
;

255 
	tsqlôe_öt64
;

256 
	tsqlôe_uöt64
;

258 
sqlôe_öt64
 
	tsqlôe3_öt64
;

259 
sqlôe_uöt64
 
	tsqlôe3_uöt64
;

265 #ifde‡
SQLITE_OMIT_FLOATING_POINT


266 
sqlôe3_öt64


	)

293 
SQLITE_API
 
sqlôe3_˛o£
(
sqlôe3
 *);

300 (*
sqlôe3_ˇŒback
)(*,,**, **);

363 
SQLITE_API
 
sqlôe3_exec
(

364 
sqlôe3
*,

365 c⁄° *
sql
,

366 (*
ˇŒback
)(*,,**,**),

368 **
îrmsg


384 
	#SQLITE_OK
 0

	)

386 
	#SQLITE_ERROR
 1

	)

387 
	#SQLITE_INTERNAL
 2

	)

388 
	#SQLITE_PERM
 3

	)

389 
	#SQLITE_ABORT
 4

	)

390 
	#SQLITE_BUSY
 5

	)

391 
	#SQLITE_LOCKED
 6

	)

392 
	#SQLITE_NOMEM
 7

	)

393 
	#SQLITE_READONLY
 8

	)

394 
	#SQLITE_INTERRUPT
 9

	)

395 
	#SQLITE_IOERR
 10

	)

396 
	#SQLITE_CORRUPT
 11

	)

397 
	#SQLITE_NOTFOUND
 12

	)

398 
	#SQLITE_FULL
 13

	)

399 
	#SQLITE_CANTOPEN
 14

	)

400 
	#SQLITE_PROTOCOL
 15

	)

401 
	#SQLITE_EMPTY
 16

	)

402 
	#SQLITE_SCHEMA
 17

	)

403 
	#SQLITE_TOOBIG
 18

	)

404 
	#SQLITE_CONSTRAINT
 19

	)

405 
	#SQLITE_MISMATCH
 20

	)

406 
	#SQLITE_MISUSE
 21

	)

407 
	#SQLITE_NOLFS
 22

	)

408 
	#SQLITE_AUTH
 23

	)

409 
	#SQLITE_FORMAT
 24

	)

410 
	#SQLITE_RANGE
 25

	)

411 
	#SQLITE_NOTADB
 26

	)

412 
	#SQLITE_ROW
 100

	)

413 
	#SQLITE_DONE
 101

	)

439 
	#SQLITE_IOERR_READ
 (
SQLITE_IOERR
 | (1<<8))

	)

440 
	#SQLITE_IOERR_SHORT_READ
 (
SQLITE_IOERR
 | (2<<8))

	)

441 
	#SQLITE_IOERR_WRITE
 (
SQLITE_IOERR
 | (3<<8))

	)

442 
	#SQLITE_IOERR_FSYNC
 (
SQLITE_IOERR
 | (4<<8))

	)

443 
	#SQLITE_IOERR_DIR_FSYNC
 (
SQLITE_IOERR
 | (5<<8))

	)

444 
	#SQLITE_IOERR_TRUNCATE
 (
SQLITE_IOERR
 | (6<<8))

	)

445 
	#SQLITE_IOERR_FSTAT
 (
SQLITE_IOERR
 | (7<<8))

	)

446 
	#SQLITE_IOERR_UNLOCK
 (
SQLITE_IOERR
 | (8<<8))

	)

447 
	#SQLITE_IOERR_RDLOCK
 (
SQLITE_IOERR
 | (9<<8))

	)

448 
	#SQLITE_IOERR_DELETE
 (
SQLITE_IOERR
 | (10<<8))

	)

449 
	#SQLITE_IOERR_BLOCKED
 (
SQLITE_IOERR
 | (11<<8))

	)

450 
	#SQLITE_IOERR_NOMEM
 (
SQLITE_IOERR
 | (12<<8))

	)

451 
	#SQLITE_IOERR_ACCESS
 (
SQLITE_IOERR
 | (13<<8))

	)

452 
	#SQLITE_IOERR_CHECKRESERVEDLOCK
 (
SQLITE_IOERR
 | (14<<8))

	)

453 
	#SQLITE_IOERR_LOCK
 (
SQLITE_IOERR
 | (15<<8))

	)

454 
	#SQLITE_IOERR_CLOSE
 (
SQLITE_IOERR
 | (16<<8))

	)

455 
	#SQLITE_IOERR_DIR_CLOSE
 (
SQLITE_IOERR
 | (17<<8))

	)

456 
	#SQLITE_IOERR_SHMOPEN
 (
SQLITE_IOERR
 | (18<<8))

	)

457 
	#SQLITE_IOERR_SHMSIZE
 (
SQLITE_IOERR
 | (19<<8))

	)

458 
	#SQLITE_IOERR_SHMLOCK
 (
SQLITE_IOERR
 | (20<<8))

	)

459 
	#SQLITE_IOERR_SHMMAP
 (
SQLITE_IOERR
 | (21<<8))

	)

460 
	#SQLITE_IOERR_SEEK
 (
SQLITE_IOERR
 | (22<<8))

	)

461 
	#SQLITE_LOCKED_SHAREDCACHE
 (
SQLITE_LOCKED
 | (1<<8))

	)

462 
	#SQLITE_BUSY_RECOVERY
 (
SQLITE_BUSY
 | (1<<8))

	)

463 
	#SQLITE_CANTOPEN_NOTEMPDIR
 (
SQLITE_CANTOPEN
 | (1<<8))

	)

464 
	#SQLITE_CANTOPEN_ISDIR
 (
SQLITE_CANTOPEN
 | (2<<8))

	)

465 
	#SQLITE_CORRUPT_VTAB
 (
SQLITE_CORRUPT
 | (1<<8))

	)

466 
	#SQLITE_READONLY_RECOVERY
 (
SQLITE_READONLY
 | (1<<8))

	)

467 
	#SQLITE_READONLY_CANTLOCK
 (
SQLITE_READONLY
 | (2<<8))

	)

468 
	#SQLITE_ABORT_ROLLBACK
 (
SQLITE_ABORT
 | (2<<8))

	)

477 
	#SQLITE_OPEN_READONLY
 0x00000001

	)

478 
	#SQLITE_OPEN_READWRITE
 0x00000002

	)

479 
	#SQLITE_OPEN_CREATE
 0x00000004

	)

480 
	#SQLITE_OPEN_DELETEONCLOSE
 0x00000008

	)

481 
	#SQLITE_OPEN_EXCLUSIVE
 0x00000010

	)

482 
	#SQLITE_OPEN_AUTOPROXY
 0x00000020

	)

483 
	#SQLITE_OPEN_URI
 0x00000040

	)

484 
	#SQLITE_OPEN_MEMORY
 0x00000080

	)

485 
	#SQLITE_OPEN_MAIN_DB
 0x00000100

	)

486 
	#SQLITE_OPEN_TEMP_DB
 0x00000200

	)

487 
	#SQLITE_OPEN_TRANSIENT_DB
 0x00000400

	)

488 
	#SQLITE_OPEN_MAIN_JOURNAL
 0x00000800

	)

489 
	#SQLITE_OPEN_TEMP_JOURNAL
 0x00001000

	)

490 
	#SQLITE_OPEN_SUBJOURNAL
 0x00002000

	)

491 
	#SQLITE_OPEN_MASTER_JOURNAL
 0x00004000

	)

492 
	#SQLITE_OPEN_NOMUTEX
 0x00008000

	)

493 
	#SQLITE_OPEN_FULLMUTEX
 0x00010000

	)

494 
	#SQLITE_OPEN_SHAREDCACHE
 0x00020000

	)

495 
	#SQLITE_OPEN_PRIVATECACHE
 0x00040000

	)

496 
	#SQLITE_OPEN_WAL
 0x00080000

	)

497 
	#SQLITE_OPEN_FILEPROTECTION_COMPLETE
 0x00100000

	)

498 
	#SQLITE_OPEN_FILEPROTECTION_COMPLETEUNLESSOPEN
 0x00200000

	)

499 
	#SQLITE_OPEN_FILEPROTECTION_COMPLETEUNTILFIRSTUSERAUTHENTICATION
 0x00300000

	)

500 
	#SQLITE_OPEN_FILEPROTECTION_NONE
 0x00400000

	)

501 
	#SQLITE_OPEN_FILEPROTECTION_MASK
 0x00700000

	)

529 
	#SQLITE_IOCAP_ATOMIC
 0x00000001

	)

530 
	#SQLITE_IOCAP_ATOMIC512
 0x00000002

	)

531 
	#SQLITE_IOCAP_ATOMIC1K
 0x00000004

	)

532 
	#SQLITE_IOCAP_ATOMIC2K
 0x00000008

	)

533 
	#SQLITE_IOCAP_ATOMIC4K
 0x00000010

	)

534 
	#SQLITE_IOCAP_ATOMIC8K
 0x00000020

	)

535 
	#SQLITE_IOCAP_ATOMIC16K
 0x00000040

	)

536 
	#SQLITE_IOCAP_ATOMIC32K
 0x00000080

	)

537 
	#SQLITE_IOCAP_ATOMIC64K
 0x00000100

	)

538 
	#SQLITE_IOCAP_SAFE_APPEND
 0x00000200

	)

539 
	#SQLITE_IOCAP_SEQUENTIAL
 0x00000400

	)

540 
	#SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN
 0x00000800

	)

541 
	#SQLITE_IOCAP_POWERSAFE_OVERWRITE
 0x00001000

	)

550 
	#SQLITE_LOCK_NONE
 0

	)

551 
	#SQLITE_LOCK_SHARED
 1

	)

552 
	#SQLITE_LOCK_RESERVED
 2

	)

553 
	#SQLITE_LOCK_PENDING
 3

	)

554 
	#SQLITE_LOCK_EXCLUSIVE
 4

	)

582 
	#SQLITE_SYNC_NORMAL
 0x00002

	)

583 
	#SQLITE_SYNC_FULL
 0x00003

	)

584 
	#SQLITE_SYNC_DATAONLY
 0x00010

	)

597 
sqlôe3_fûe
 
	tsqlôe3_fûe
;

598 
	ssqlôe3_fûe
 {

599 c⁄° 
sqlôe3_io_mëhods
 *
pMëhods
;

692 
sqlôe3_io_mëhods
 
	tsqlôe3_io_mëhods
;

693 
	ssqlôe3_io_mëhods
 {

694 
iVîsi⁄
;

695 (*
xClo£
)(
sqlôe3_fûe
*);

696 (*
xRód
)(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

697 (*
xWrôe
)(
sqlôe3_fûe
*, c⁄° *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

698 (*
xTrunˇã
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

699 (*
xSync
)(
sqlôe3_fûe
*, 
Êags
);

700 (*
xFûeSize
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

701 (*
xLock
)(
sqlôe3_fûe
*, );

702 (*
xU∆ock
)(
sqlôe3_fûe
*, );

703 (*
xCheckRe£rvedLock
)(
sqlôe3_fûe
*, *
pResOut
);

704 (*
xFûeC⁄åﬁ
)(
sqlôe3_fûe
*, 
›
, *
pArg
);

705 (*
xSe˘‹Size
)(
sqlôe3_fûe
*);

706 (*
xDevi˚Ch¨a˘îi°ics
)(
sqlôe3_fûe
*);

708 (*
xShmM≠
)(
sqlôe3_fûe
*, 
iPg
, 
pgsz
, , volatile**);

709 (*
xShmLock
)(
sqlôe3_fûe
*, 
off£t
, 
n
, 
Êags
);

710 (*
xShmB¨rõr
)(
sqlôe3_fûe
*);

711 (*
xShmUnm≠
)(
sqlôe3_fûe
*, 
dñëeFœg
);

849 
	#SQLITE_FCNTL_LOCKSTATE
 1

	)

850 
	#SQLITE_FCNTL_GET_LOCKPROXYFILE
 2

	)

851 
	#SQLITE_FCNTL_SET_LOCKPROXYFILE
 3

	)

852 
	#SQLITE_FCNTL_LAST_ERRNO
 4

	)

853 
	#SQLITE_FCNTL_SIZE_HINT
 5

	)

854 
	#SQLITE_FCNTL_CHUNK_SIZE
 6

	)

855 
	#SQLITE_FCNTL_FILE_POINTER
 7

	)

856 
	#SQLITE_FCNTL_SYNC_OMITTED
 8

	)

857 
	#SQLITE_FCNTL_WIN32_AV_RETRY
 9

	)

858 
	#SQLITE_FCNTL_PERSIST_WAL
 10

	)

859 
	#SQLITE_FCNTL_OVERWRITE
 11

	)

860 
	#SQLITE_FCNTL_VFSNAME
 12

	)

861 
	#SQLITE_FCNTL_POWERSAFE_OVERWRITE
 13

	)

862 
	#SQLITE_FCNTL_PRAGMA
 14

	)

864 
	#SQLITE_GET_LOCKPROXYFILE
 
SQLITE_FCNTL_GET_LOCKPROXYFILE


	)

865 
	#SQLITE_SET_LOCKPROXYFILE
 
SQLITE_FCNTL_SET_LOCKPROXYFILE


	)

866 
	#SQLITE_LAST_ERRNO
 
SQLITE_FCNTL_LAST_ERRNO


	)

878 
sqlôe3_muãx
 
	tsqlôe3_muãx
;

1037 
sqlôe3_vfs
 
	tsqlôe3_vfs
;

1038 (*
sqlôe3_sysˇŒ_±r
)();

1039 
	ssqlôe3_vfs
 {

1040 
iVîsi⁄
;

1041 
szOsFûe
;

1042 
mxP©h«me
;

1043 
sqlôe3_vfs
 *
pNext
;

1044 c⁄° *
zName
;

1045 *
pAµD©a
;

1046 (*
xO≥n
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
sqlôe3_fûe
*,

1047 
Êags
, *
pOutFœgs
);

1048 (*
xDñëe
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
syncDú
);

1049 (*
xAc˚ss
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
Êags
, *
pResOut
);

1050 (*
xFuŒP©h«me
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
nOut
, *
zOut
);

1051 *(*
xDlO≥n
)(
sqlôe3_vfs
*, c⁄° *
zFûíame
);

1052 (*
xDlEº‹
)(
sqlôe3_vfs
*, 
nByã
, *
zEºMsg
);

1053 (*(*
xDlSym
)(
sqlôe3_vfs
*,*, c⁄° *
zSymbﬁ
))();

1054 (*
xDlClo£
)(
sqlôe3_vfs
*, *);

1055 (*
xR™dom√ss
)(
sqlôe3_vfs
*, 
nByã
, *
zOut
);

1056 (*
xSÀï
)(
sqlôe3_vfs
*, 
mi¸o£c⁄ds
);

1057 (*
xCuºítTime
)(
sqlôe3_vfs
*, *);

1058 (*
xGëLa°Eº‹
)(
sqlôe3_vfs
*, , *);

1063 (*
xCuºítTimeI¡64
)(
sqlôe3_vfs
*, 
sqlôe3_öt64
*);

1068 (*
xSëSy°emCÆl
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
sqlôe3_sysˇŒ_±r
);

1069 
sqlôe3_sysˇŒ_±r
 (*
xGëSy°emCÆl
)(
sqlôe3_vfs
*, c⁄° *
zName
);

1070 c⁄° *(*
xNextSy°emCÆl
)(
sqlôe3_vfs
*, c⁄° *
zName
);

1098 
	#SQLITE_ACCESS_EXISTS
 0

	)

1099 
	#SQLITE_ACCESS_READWRITE
 1

	)

1100 
	#SQLITE_ACCESS_READ
 2

	)

1124 
	#SQLITE_SHM_UNLOCK
 1

	)

1125 
	#SQLITE_SHM_LOCK
 2

	)

1126 
	#SQLITE_SHM_SHARED
 4

	)

1127 
	#SQLITE_SHM_EXCLUSIVE
 8

	)

1137 
	#SQLITE_SHM_NLOCK
 8

	)

1215 
SQLITE_API
 
sqlôe3_öôülize
();

1216 
SQLITE_API
 
sqlôe3_shutdown
();

1217 
SQLITE_API
 
sqlôe3_os_öô
();

1218 
SQLITE_API
 
sqlôe3_os_íd
();

1249 
SQLITE_API
 
sqlôe3_c⁄fig
(, ...);

1267 
SQLITE_API
 
sqlôe3_db_c⁄fig
(
sqlôe3
*, 
›
, ...);

1332 
sqlôe3_mem_mëhods
 
	tsqlôe3_mem_mëhods
;

1333 
	ssqlôe3_mem_mëhods
 {

1334 *(*
xMÆloc
)();

1335 (*
xFªe
)(*);

1336 *(*
xRóŒoc
)(*,);

1337 (*
xSize
)(*);

1338 (*
xRoundup
)();

1339 (*
xInô
)(*);

1340 (*
xShutdown
)(*);

1341 *
pAµD©a
;

1569 
	#SQLITE_CONFIG_SINGLETHREAD
 1

	)

1570 
	#SQLITE_CONFIG_MULTITHREAD
 2

	)

1571 
	#SQLITE_CONFIG_SERIALIZED
 3

	)

1572 
	#SQLITE_CONFIG_MALLOC
 4

	)

1573 
	#SQLITE_CONFIG_GETMALLOC
 5

	)

1574 
	#SQLITE_CONFIG_SCRATCH
 6

	)

1575 
	#SQLITE_CONFIG_PAGECACHE
 7

	)

1576 
	#SQLITE_CONFIG_HEAP
 8

	)

1577 
	#SQLITE_CONFIG_MEMSTATUS
 9

	)

1578 
	#SQLITE_CONFIG_MUTEX
 10

	)

1579 
	#SQLITE_CONFIG_GETMUTEX
 11

	)

1581 
	#SQLITE_CONFIG_LOOKASIDE
 13

	)

1582 
	#SQLITE_CONFIG_PCACHE
 14

	)

1583 
	#SQLITE_CONFIG_GETPCACHE
 15

	)

1584 
	#SQLITE_CONFIG_LOG
 16

	)

1585 
	#SQLITE_CONFIG_URI
 17

	)

1586 
	#SQLITE_CONFIG_PCACHE2
 18

	)

1587 
	#SQLITE_CONFIG_GETPCACHE2
 19

	)

1647 
	#SQLITE_DBCONFIG_LOOKASIDE
 1001

	)

1648 
	#SQLITE_DBCONFIG_ENABLE_FKEY
 1002

	)

1649 
	#SQLITE_DBCONFIG_ENABLE_TRIGGER
 1003

	)

1659 
SQLITE_API
 
sqlôe3_exãnded_ªsu…_codes
(
sqlôe3
*, 
⁄off
);

1708 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_œ°_ö£π_rowid
(
sqlôe3
*);

1762 
SQLITE_API
 
sqlôe3_ch™ges
(
sqlôe3
*);

1788 
SQLITE_API
 
sqlôe3_tŸÆ_ch™ges
(
sqlôe3
*);

1827 
SQLITE_API
 
sqlôe3_öãºu±
(
sqlôe3
*);

1862 
SQLITE_API
 
sqlôe3_com∂ëe
(c⁄° *
sql
);

1863 
SQLITE_API
 
sqlôe3_com∂ëe16
(c⁄° *
sql
);

1929 
SQLITE_API
 
sqlôe3_busy_h™dÀr
(
sqlôe3
*, (*)(*,), *);

1949 
SQLITE_API
 
sqlôe3_busy_timeout
(
sqlôe3
*, 
ms
);

2023 
SQLITE_API
 
sqlôe3_gë_èbÀ
(

2024 
sqlôe3
 *
db
,

2025 c⁄° *
zSql
,

2026 ***
∑zResu…
,

2027 *
≤Row
,

2028 *
≤Cﬁumn
,

2029 **
pzEºmsg


2031 
SQLITE_API
 
sqlôe3_‰ì_èbÀ
(**
ªsu…
);

2127 
SQLITE_API
 *
sqlôe3_m¥ötf
(const *,...);

2128 
SQLITE_API
 *
sqlôe3_vm¥ötf
(c⁄° *, 
va_li°
);

2129 
SQLITE_API
 *
sqlôe3_¢¥ötf
(,*,const *, ...);

2130 
SQLITE_API
 *
sqlôe3_v¢¥ötf
(,*,c⁄° *, 
va_li°
);

2202 
SQLITE_API
 *
sqlôe3_mÆloc
();

2203 
SQLITE_API
 *
sqlôe3_ªÆloc
(*, );

2204 
SQLITE_API
 
sqlôe3_‰ì
(*);

2229 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_mem‹y_u£d
();

2230 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_mem‹y_highw©î
(
ª£tFœg
);

2250 
SQLITE_API
 
sqlôe3_øndom√ss
(
N
, *
P
);

2332 
SQLITE_API
 
sqlôe3_£t_auth‹izî
(

2333 
sqlôe3
*,

2334 (*
xAuth
)(*,,const *,const *,const *,const *),

2335 *
pU£rD©a


2350 
	#SQLITE_DENY
 1

	)

2351 
	#SQLITE_IGNORE
 2

	)

2373 
	#SQLITE_CREATE_INDEX
 1

	)

2374 
	#SQLITE_CREATE_TABLE
 2

	)

2375 
	#SQLITE_CREATE_TEMP_INDEX
 3

	)

2376 
	#SQLITE_CREATE_TEMP_TABLE
 4

	)

2377 
	#SQLITE_CREATE_TEMP_TRIGGER
 5

	)

2378 
	#SQLITE_CREATE_TEMP_VIEW
 6

	)

2379 
	#SQLITE_CREATE_TRIGGER
 7

	)

2380 
	#SQLITE_CREATE_VIEW
 8

	)

2381 
	#SQLITE_DELETE
 9

	)

2382 
	#SQLITE_DROP_INDEX
 10

	)

2383 
	#SQLITE_DROP_TABLE
 11

	)

2384 
	#SQLITE_DROP_TEMP_INDEX
 12

	)

2385 
	#SQLITE_DROP_TEMP_TABLE
 13

	)

2386 
	#SQLITE_DROP_TEMP_TRIGGER
 14

	)

2387 
	#SQLITE_DROP_TEMP_VIEW
 15

	)

2388 
	#SQLITE_DROP_TRIGGER
 16

	)

2389 
	#SQLITE_DROP_VIEW
 17

	)

2390 
	#SQLITE_INSERT
 18

	)

2391 
	#SQLITE_PRAGMA
 19

	)

2392 
	#SQLITE_READ
 20

	)

2393 
	#SQLITE_SELECT
 21

	)

2394 
	#SQLITE_TRANSACTION
 22

	)

2395 
	#SQLITE_UPDATE
 23

	)

2396 
	#SQLITE_ATTACH
 24

	)

2397 
	#SQLITE_DETACH
 25

	)

2398 
	#SQLITE_ALTER_TABLE
 26

	)

2399 
	#SQLITE_REINDEX
 27

	)

2400 
	#SQLITE_ANALYZE
 28

	)

2401 
	#SQLITE_CREATE_VTABLE
 29

	)

2402 
	#SQLITE_DROP_VTABLE
 30

	)

2403 
	#SQLITE_FUNCTION
 31

	)

2404 
	#SQLITE_SAVEPOINT
 32

	)

2405 
	#SQLITE_COPY
 0

	)

2432 
SQLITE_API
 *
sqlôe3_åa˚
(
sqlôe3
*, (*
xTø˚
)(*,const *), *);

2433 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 *
sqlôe3_¥ofûe
(
sqlôe3
*,

2434 (*
xProfûe
)(*,c⁄° *,
sqlôe3_uöt64
), *);

2466 
SQLITE_API
 
sqlôe3_¥ogªss_h™dÀr
(
sqlôe3
*, , (*)(*), *);

2664 
SQLITE_API
 
sqlôe3_›í
(

2665 c⁄° *
fûíame
,

2666 
sqlôe3
 **
µDb


2668 
SQLITE_API
 
sqlôe3_›í16
(

2669 c⁄° *
fûíame
,

2670 
sqlôe3
 **
µDb


2672 
SQLITE_API
 
sqlôe3_›í_v2
(

2673 c⁄° *
fûíame
,

2674 
sqlôe3
 **
µDb
,

2675 
Êags
,

2676 c⁄° *
zVfs


2718 
SQLITE_API
 c⁄° *
sqlôe3_uri_∑ømëî
(c⁄° *
zFûíame
, c⁄° *
zP¨am
);

2719 
SQLITE_API
 
sqlôe3_uri_boﬁón
(c⁄° *
zFûe
, c⁄° *
zP¨am
, 
bDeÁu…
);

2720 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_uri_öt64
(const *, const *, sqlite3_int64);

2756 
SQLITE_API
 
sqlôe3_îrcode
(
sqlôe3
 *
db
);

2757 
SQLITE_API
 
sqlôe3_exãnded_îrcode
(
sqlôe3
 *
db
);

2758 
SQLITE_API
 c⁄° *
sqlôe3_îrmsg
(
sqlôe3
*);

2759 
SQLITE_API
 c⁄° *
sqlôe3_îrmsg16
(
sqlôe3
*);

2785 
sqlôe3_°mt
 
	tsqlôe3_°mt
;

2826 
SQLITE_API
 
sqlôe3_limô
(
sqlôe3
*, 
id
, 
√wVÆ
);

2880 
	#SQLITE_LIMIT_LENGTH
 0

	)

2881 
	#SQLITE_LIMIT_SQL_LENGTH
 1

	)

2882 
	#SQLITE_LIMIT_COLUMN
 2

	)

2883 
	#SQLITE_LIMIT_EXPR_DEPTH
 3

	)

2884 
	#SQLITE_LIMIT_COMPOUND_SELECT
 4

	)

2885 
	#SQLITE_LIMIT_VDBE_OP
 5

	)

2886 
	#SQLITE_LIMIT_FUNCTION_ARG
 6

	)

2887 
	#SQLITE_LIMIT_ATTACHED
 7

	)

2888 
	#SQLITE_LIMIT_LIKE_PATTERN_LENGTH
 8

	)

2889 
	#SQLITE_LIMIT_VARIABLE_NUMBER
 9

	)

2890 
	#SQLITE_LIMIT_TRIGGER_DEPTH
 10

	)

2973 
SQLITE_API
 
sqlôe3_¥ï¨e
(

2974 
sqlôe3
 *
db
,

2975 c⁄° *
zSql
,

2976 
nByã
,

2977 
sqlôe3_°mt
 **
µStmt
,

2978 c⁄° **
pzTaû


2980 
SQLITE_API
 
sqlôe3_¥ï¨e_v2
(

2981 
sqlôe3
 *
db
,

2982 c⁄° *
zSql
,

2983 
nByã
,

2984 
sqlôe3_°mt
 **
µStmt
,

2985 c⁄° **
pzTaû


2987 
SQLITE_API
 
sqlôe3_¥ï¨e16
(

2988 
sqlôe3
 *
db
,

2989 c⁄° *
zSql
,

2990 
nByã
,

2991 
sqlôe3_°mt
 **
µStmt
,

2992 c⁄° **
pzTaû


2994 
SQLITE_API
 
sqlôe3_¥ï¨e16_v2
(

2995 
sqlôe3
 *
db
,

2996 c⁄° *
zSql
,

2997 
nByã
,

2998 
sqlôe3_°mt
 **
µStmt
,

2999 c⁄° **
pzTaû


3009 
SQLITE_API
 c⁄° *
sqlôe3_sql
(
sqlôe3_°mt
 *
pStmt
);

3040 
SQLITE_API
 
sqlôe3_°mt_ªad⁄ly
(
sqlôe3_°mt
 *
pStmt
);

3059 
SQLITE_API
 
sqlôe3_°mt_busy
(
sqlôe3_°mt
*);

3098 
Mem
 
	tsqlôe3_vÆue
;

3112 
sqlôe3_c⁄ãxt
 
	tsqlôe3_c⁄ãxt
;

3203 
SQLITE_API
 
sqlôe3_böd_blob
(
sqlôe3_°mt
*, , c⁄° *, 
n
, (*)(*));

3204 
SQLITE_API
 
sqlôe3_böd_doubÀ
(
sqlôe3_°mt
*, , );

3205 
SQLITE_API
 
sqlôe3_böd_öt
(
sqlôe3_°mt
*, , );

3206 
SQLITE_API
 
sqlôe3_böd_öt64
(
sqlôe3_°mt
*, , 
sqlôe3_öt64
);

3207 
SQLITE_API
 
sqlôe3_böd_nuŒ
(
sqlôe3_°mt
*, );

3208 
SQLITE_API
 
sqlôe3_böd_ãxt
(
sqlôe3_°mt
*, , c⁄° *, 
n
, (*)(*));

3209 
SQLITE_API
 
sqlôe3_böd_ãxt16
(
sqlôe3_°mt
*, , const *, , (*)(*));

3210 
SQLITE_API
 
sqlôe3_böd_vÆue
(
sqlôe3_°mt
*, , c⁄° 
sqlôe3_vÆue
*);

3211 
SQLITE_API
 
sqlôe3_böd_zîoblob
(
sqlôe3_°mt
*, , 
n
);

3231 
SQLITE_API
 
sqlôe3_böd_∑ømëî_cou¡
(
sqlôe3_°mt
*);

3258 
SQLITE_API
 c⁄° *
sqlôe3_böd_∑ømëî_«me
(
sqlôe3_°mt
*, );

3274 
SQLITE_API
 
sqlôe3_böd_∑ømëî_ödex
(
sqlôe3_°mt
*, c⁄° *
zName
);

3283 
SQLITE_API
 
sqlôe3_˛ór_bödögs
(
sqlôe3_°mt
*);

3294 
SQLITE_API
 
sqlôe3_cﬁumn_cou¡
(
sqlôe3_°mt
 *
pStmt
);

3322 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_«me
(
sqlôe3_°mt
*, 
N
);

3323 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_«me16
(
sqlôe3_°mt
*, 
N
);

3370 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_d©aba£_«me
(
sqlôe3_°mt
*,);

3371 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_d©aba£_«me16
(
sqlôe3_°mt
*,);

3372 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_èbÀ_«me
(
sqlôe3_°mt
*,);

3373 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_èbÀ_«me16
(
sqlôe3_°mt
*,);

3374 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_‹igö_«me
(
sqlôe3_°mt
*,);

3375 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_‹igö_«me16
(
sqlôe3_°mt
*,);

3406 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_de˛ty≥
(
sqlôe3_°mt
*,);

3407 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_de˛ty≥16
(
sqlôe3_°mt
*,);

3486 
SQLITE_API
 
sqlôe3_°ï
(
sqlôe3_°mt
*);

3506 
SQLITE_API
 
sqlôe3_d©a_cou¡
(
sqlôe3_°mt
 *
pStmt
);

3529 
	#SQLITE_INTEGER
 1

	)

3530 
	#SQLITE_FLOAT
 2

	)

3531 
	#SQLITE_BLOB
 4

	)

3532 
	#SQLITE_NULL
 5

	)

3533 #ifde‡
SQLITE_TEXT


3534 #unde‡
SQLITE_TEXT


3536 
	#SQLITE_TEXT
 3

	)

3538 
	#SQLITE3_TEXT
 3

	)

3702 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_blob
(
sqlôe3_°mt
*, 
iCﬁ
);

3703 
SQLITE_API
 
sqlôe3_cﬁumn_byãs
(
sqlôe3_°mt
*, 
iCﬁ
);

3704 
SQLITE_API
 
sqlôe3_cﬁumn_byãs16
(
sqlôe3_°mt
*, 
iCﬁ
);

3705 
SQLITE_API
 
sqlôe3_cﬁumn_doubÀ
(
sqlôe3_°mt
*, 
iCﬁ
);

3706 
SQLITE_API
 
sqlôe3_cﬁumn_öt
(
sqlôe3_°mt
*, 
iCﬁ
);

3707 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_cﬁumn_öt64
(
sqlôe3_°mt
*, 
iCﬁ
);

3708 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_ãxt
(
sqlôe3_°mt
*, 
iCﬁ
);

3709 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_ãxt16
(
sqlôe3_°mt
*, 
iCﬁ
);

3710 
SQLITE_API
 
sqlôe3_cﬁumn_ty≥
(
sqlôe3_°mt
*, 
iCﬁ
);

3711 
SQLITE_API
 
sqlôe3_vÆue
 *
sqlôe3_cﬁumn_vÆue
(
sqlôe3_°mt
*, 
iCﬁ
);

3738 
SQLITE_API
 
sqlôe3_föÆize
(
sqlôe3_°mt
 *
pStmt
);

3764 
SQLITE_API
 
sqlôe3_ª£t
(
sqlôe3_°mt
 *
pStmt
);

3854 
SQLITE_API
 
sqlôe3_¸óã_fun˘i⁄
(

3855 
sqlôe3
 *
db
,

3856 c⁄° *
zFun˘i⁄Name
,

3857 
nArg
,

3858 
eTextRï
,

3859 *
pAµ
,

3860 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

3861 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

3862 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*)

3864 
SQLITE_API
 
sqlôe3_¸óã_fun˘i⁄16
(

3865 
sqlôe3
 *
db
,

3866 c⁄° *
zFun˘i⁄Name
,

3867 
nArg
,

3868 
eTextRï
,

3869 *
pAµ
,

3870 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

3871 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

3872 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*)

3874 
SQLITE_API
 
sqlôe3_¸óã_fun˘i⁄_v2
(

3875 
sqlôe3
 *
db
,

3876 c⁄° *
zFun˘i⁄Name
,

3877 
nArg
,

3878 
eTextRï
,

3879 *
pAµ
,

3880 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

3881 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

3882 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*),

3883 (*
xDe°roy
)(*)

3892 
	#SQLITE_UTF8
 1

	)

3893 
	#SQLITE_UTF16LE
 2

	)

3894 
	#SQLITE_UTF16BE
 3

	)

3895 
	#SQLITE_UTF16
 4

	)

3896 
	#SQLITE_ANY
 5

	)

3897 
	#SQLITE_UTF16_ALIGNED
 8

	)

3909 #i‚de‡
SQLITE_OMIT_DEPRECATED


3910 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_aggªg©e_cou¡
(
sqlôe3_c⁄ãxt
*);

3911 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_expúed
(
sqlôe3_°mt
*);

3912 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_å™s„r_bödögs
(
sqlôe3_°mt
*, sqlite3_stmt*);

3913 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_globÆ_ªcovî
();

3914 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_thªad_˛ónup
();

3915 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_mem‹y_Æ¨m
((*)(*,
sqlôe3_öt64
,),*,sqlite3_int64);

3963 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_blob
(
sqlôe3_vÆue
*);

3964 
SQLITE_API
 
sqlôe3_vÆue_byãs
(
sqlôe3_vÆue
*);

3965 
SQLITE_API
 
sqlôe3_vÆue_byãs16
(
sqlôe3_vÆue
*);

3966 
SQLITE_API
 
sqlôe3_vÆue_doubÀ
(
sqlôe3_vÆue
*);

3967 
SQLITE_API
 
sqlôe3_vÆue_öt
(
sqlôe3_vÆue
*);

3968 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_vÆue_öt64
(
sqlôe3_vÆue
*);

3969 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt
(
sqlôe3_vÆue
*);

3970 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt16
(
sqlôe3_vÆue
*);

3971 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt16À
(
sqlôe3_vÆue
*);

3972 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt16be
(
sqlôe3_vÆue
*);

3973 
SQLITE_API
 
sqlôe3_vÆue_ty≥
(
sqlôe3_vÆue
*);

3974 
SQLITE_API
 
sqlôe3_vÆue_numîic_ty≥
(
sqlôe3_vÆue
*);

4015 
SQLITE_API
 *
sqlôe3_aggªg©e_c⁄ãxt
(
sqlôe3_c⁄ãxt
*, 
nByãs
);

4029 
SQLITE_API
 *
sqlôe3_u£r_d©a
(
sqlôe3_c⁄ãxt
*);

4040 
SQLITE_API
 
sqlôe3
 *
sqlôe3_c⁄ãxt_db_h™dÀ
(
sqlôe3_c⁄ãxt
*);

4084 
SQLITE_API
 *
sqlôe3_gë_auxd©a
(
sqlôe3_c⁄ãxt
*, 
N
);

4085 
SQLITE_API
 
sqlôe3_£t_auxd©a
(
sqlôe3_c⁄ãxt
*, 
N
, *, (*)(*));

4102 (*
sqlôe3_de°ru˘‹_ty≥
)(*);

4103 
	#SQLITE_STATIC
 ((
sqlôe3_de°ru˘‹_ty≥
)0)

	)

4104 
	#SQLITE_TRANSIENT
 ((
sqlôe3_de°ru˘‹_ty≥
)-1)

	)

4216 
SQLITE_API
 
sqlôe3_ªsu…_blob
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

4217 
SQLITE_API
 
sqlôe3_ªsu…_doubÀ
(
sqlôe3_c⁄ãxt
*, );

4218 
SQLITE_API
 
sqlôe3_ªsu…_îr‹
(
sqlôe3_c⁄ãxt
*, const *, );

4219 
SQLITE_API
 
sqlôe3_ªsu…_îr‹16
(
sqlôe3_c⁄ãxt
*, const *, );

4220 
SQLITE_API
 
sqlôe3_ªsu…_îr‹_toobig
(
sqlôe3_c⁄ãxt
*);

4221 
SQLITE_API
 
sqlôe3_ªsu…_îr‹_nomem
(
sqlôe3_c⁄ãxt
*);

4222 
SQLITE_API
 
sqlôe3_ªsu…_îr‹_code
(
sqlôe3_c⁄ãxt
*, );

4223 
SQLITE_API
 
sqlôe3_ªsu…_öt
(
sqlôe3_c⁄ãxt
*, );

4224 
SQLITE_API
 
sqlôe3_ªsu…_öt64
(
sqlôe3_c⁄ãxt
*, 
sqlôe3_öt64
);

4225 
SQLITE_API
 
sqlôe3_ªsu…_nuŒ
(
sqlôe3_c⁄ãxt
*);

4226 
SQLITE_API
 
sqlôe3_ªsu…_ãxt
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

4227 
SQLITE_API
 
sqlôe3_ªsu…_ãxt16
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

4228 
SQLITE_API
 
sqlôe3_ªsu…_ãxt16À
(
sqlôe3_c⁄ãxt
*, const *, ,(*)(*));

4229 
SQLITE_API
 
sqlôe3_ªsu…_ãxt16be
(
sqlôe3_c⁄ãxt
*, const *, ,(*)(*));

4230 
SQLITE_API
 
sqlôe3_ªsu…_vÆue
(
sqlôe3_c⁄ãxt
*, 
sqlôe3_vÆue
*);

4231 
SQLITE_API
 
sqlôe3_ªsu…_zîoblob
(
sqlôe3_c⁄ãxt
*, 
n
);

4312 
SQLITE_API
 
sqlôe3_¸óã_cﬁœti⁄
(

4313 
sqlôe3
*,

4314 c⁄° *
zName
,

4315 
eTextRï
,

4316 *
pArg
,

4317 (*
xCom∑ª
)(*,,const *,,const *)

4319 
SQLITE_API
 
sqlôe3_¸óã_cﬁœti⁄_v2
(

4320 
sqlôe3
*,

4321 c⁄° *
zName
,

4322 
eTextRï
,

4323 *
pArg
,

4324 (*
xCom∑ª
)(*,,const *,,const *),

4325 (*
xDe°roy
)(*)

4327 
SQLITE_API
 
sqlôe3_¸óã_cﬁœti⁄16
(

4328 
sqlôe3
*,

4329 c⁄° *
zName
,

4330 
eTextRï
,

4331 *
pArg
,

4332 (*
xCom∑ª
)(*,,const *,,const *)

4361 
SQLITE_API
 
sqlôe3_cﬁœti⁄_√eded
(

4362 
sqlôe3
*,

4364 (*)(*,
sqlôe3
*,
eTextRï
,const *)

4366 
SQLITE_API
 
sqlôe3_cﬁœti⁄_√eded16
(

4367 
sqlôe3
*,

4369 (*)(*,
sqlôe3
*,
eTextRï
,const *)

4372 #ifde‡
SQLITE_HAS_CODEC


4380 
SQLITE_API
 
sqlôe3_key
(

4381 
sqlôe3
 *
db
,

4382 c⁄° *
pKey
, 
nKey


4393 
SQLITE_API
 
sqlôe3_ªkey
(

4394 
sqlôe3
 *
db
,

4395 c⁄° *
pKey
, 
nKey


4402 
SQLITE_API
 
sqlôe3_a˘iv©e_£e
(

4403 c⁄° *
zPassPhø£


4407 #ifde‡
SQLITE_ENABLE_CEROD


4412 
SQLITE_API
 
sqlôe3_a˘iv©e_˚rod
(

4413 c⁄° *
zPassPhø£


4434 
SQLITE_API
 
sqlôe3_¶ìp
();

4465 
SQLITE_API
 
SQLITE_EXTERN
 *
sqlôe3_ãmp_dúe˘‹y
;

4502 
SQLITE_API
 
SQLITE_EXTERN
 *
sqlôe3_d©a_dúe˘‹y
;

4525 
SQLITE_API
 
sqlôe3_gë_autocommô
(
sqlôe3
*);

4537 
SQLITE_API
 
sqlôe3
 *
sqlôe3_db_h™dÀ
(
sqlôe3_°mt
*);

4553 
SQLITE_API
 c⁄° *
sqlôe3_db_fûíame
(
sqlôe3
 *
db
, c⁄° *
zDbName
);

4562 
SQLITE_API
 
sqlôe3_db_ªad⁄ly
(
sqlôe3
 *
db
, c⁄° *
zDbName
);

4577 
SQLITE_API
 
sqlôe3_°mt
 *
sqlôe3_√xt_°mt
(
sqlôe3
 *
pDb
, sqlôe3_°mà*
pStmt
);

4625 
SQLITE_API
 *
sqlôe3_commô_hook
(
sqlôe3
*, (*)(*), *);

4626 
SQLITE_API
 *
sqlôe3_rﬁlback_hook
(
sqlôe3
*, (*)(*), *);

4674 
SQLITE_API
 *
sqlôe3_upd©e_hook
(

4675 
sqlôe3
*,

4676 (*)(*,,c⁄° *,c⁄° *,
sqlôe3_öt64
),

4711 
SQLITE_API
 
sqlôe3_íabÀ_sh¨ed_ˇche
(Ë
__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_7
, 
__IPHONE_2_0
, 
__IPHONE_5_0
);

4727 
SQLITE_API
 
sqlôe3_ªÀa£_mem‹y
();

4740 
SQLITE_API
 
sqlôe3_db_ªÀa£_mem‹y
(
sqlôe3
*);

4792 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_so·_hóp_limô64
(sqlôe3_öt64 
N
);

4803 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_so·_hóp_limô
(
N
);

4868 
SQLITE_API
 
sqlôe3_èbÀ_cﬁumn_mëad©a
(

4869 
sqlôe3
 *
db
,

4870 c⁄° *
zDbName
,

4871 c⁄° *
zTabÀName
,

4872 c⁄° *
zCﬁumnName
,

4873 c⁄° **
pzD©aTy≥
,

4874 c⁄° **
pzCﬁlSeq
,

4875 *
pNŸNuŒ
,

4876 *
pPrim¨yKey
,

4877 *
pAutoöc


4905 
SQLITE_API
 
sqlôe3_lﬂd_exãnsi⁄
(

4906 
sqlôe3
 *
db
,

4907 c⁄° *
zFûe
,

4908 c⁄° *
zProc
,

4909 **
pzEºMsg


4925 
SQLITE_API
 
sqlôe3_íabÀ_lﬂd_exãnsi⁄
(
sqlôe3
 *
db
, 
⁄off
);

4962 
SQLITE_API
 
sqlôe3_auto_exãnsi⁄
((*
xE¡ryPoöt
)());

4970 
SQLITE_API
 
sqlôe3_ª£t_auto_exãnsi⁄
();

4984 
sqlôe3_vèb
 
	tsqlôe3_vèb
;

4985 
sqlôe3_ödex_öfo
 
	tsqlôe3_ödex_öfo
;

4986 
sqlôe3_vèb_curs‹
 
	tsqlôe3_vèb_curs‹
;

4987 
sqlôe3_moduÀ
 
	tsqlôe3_moduÀ
;

5005 
	ssqlôe3_moduÀ
 {

5006 
iVîsi⁄
;

5007 (*
xCª©e
)(
sqlôe3
*, *
pAux
,

5008 
¨gc
, c⁄° *c⁄°*
¨gv
,

5009 
sqlôe3_vèb
 **
µVTab
, **);

5010 (*
xC⁄√˘
)(
sqlôe3
*, *
pAux
,

5011 
¨gc
, c⁄° *c⁄°*
¨gv
,

5012 
sqlôe3_vèb
 **
µVTab
, **);

5013 (*
xBe°Index
)(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_ödex_öfo
*);

5014 (*
xDisc⁄√˘
)(
sqlôe3_vèb
 *
pVTab
);

5015 (*
xDe°roy
)(
sqlôe3_vèb
 *
pVTab
);

5016 (*
xO≥n
)(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
);

5017 (*
xClo£
)(
sqlôe3_vèb_curs‹
*);

5018 (*
xFûãr
)(
sqlôe3_vèb_curs‹
*, 
idxNum
, c⁄° *
idxSå
,

5019 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
);

5020 (*
xNext
)(
sqlôe3_vèb_curs‹
*);

5021 (*
xEof
)(
sqlôe3_vèb_curs‹
*);

5022 (*
xCﬁumn
)(
sqlôe3_vèb_curs‹
*, 
sqlôe3_c⁄ãxt
*, );

5023 (*
xRowid
)(
sqlôe3_vèb_curs‹
*, 
sqlôe3_öt64
 *
pRowid
);

5024 (*
xUpd©e
)(
sqlôe3_vèb
 *, , 
sqlôe3_vÆue
 **, 
sqlôe3_öt64
 *);

5025 (*
xBegö
)(
sqlôe3_vèb
 *
pVTab
);

5026 (*
xSync
)(
sqlôe3_vèb
 *
pVTab
);

5027 (*
xCommô
)(
sqlôe3_vèb
 *
pVTab
);

5028 (*
xRﬁlback
)(
sqlôe3_vèb
 *
pVTab
);

5029 (*
xFödFun˘i⁄
)(
sqlôe3_vèb
 *
pVèb
, 
nArg
, c⁄° *
zName
,

5030 (**
pxFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

5031 **
µArg
);

5032 (*
xRíame
)(
sqlôe3_vèb
 *
pVèb
, c⁄° *
zNew
);

5035 (*
xSavïoöt
)(
sqlôe3_vèb
 *
pVTab
, );

5036 (*
xRñó£
)(
sqlôe3_vèb
 *
pVTab
, );

5037 (*
xRﬁlbackTo
)(
sqlôe3_vèb
 *
pVTab
, );

5093 
	ssqlôe3_ödex_öfo
 {

5095 
nC⁄°øöt
;

5096 
	ssqlôe3_ödex_c⁄°øöt
 {

5097 
iCﬁumn
;

5098 
›
;

5099 
ußbÀ
;

5100 
iTîmOff£t
;

5101 } *
aC⁄°øöt
;

5102 
nOrdîBy
;

5103 
	ssqlôe3_ödex_‹dîby
 {

5104 
iCﬁumn
;

5105 
desc
;

5106 } *
aOrdîBy
;

5108 
	ssqlôe3_ödex_c⁄°øöt_ußge
 {

5109 
¨gvIndex
;

5110 
omô
;

5111 } *
aC⁄°øötUßge
;

5112 
idxNum
;

5113 *
idxSå
;

5114 
√edToFªeIdxSå
;

5115 
‹dîByC⁄sumed
;

5116 
e°im©edCo°
;

5127 
	#SQLITE_INDEX_CONSTRAINT_EQ
 2

	)

5128 
	#SQLITE_INDEX_CONSTRAINT_GT
 4

	)

5129 
	#SQLITE_INDEX_CONSTRAINT_LE
 8

	)

5130 
	#SQLITE_INDEX_CONSTRAINT_LT
 16

	)

5131 
	#SQLITE_INDEX_CONSTRAINT_GE
 32

	)

5132 
	#SQLITE_INDEX_CONSTRAINT_MATCH
 64

	)

5159 
SQLITE_API
 
sqlôe3_¸óã_moduÀ
(

5160 
sqlôe3
 *
db
,

5161 c⁄° *
zName
,

5162 c⁄° 
sqlôe3_moduÀ
 *
p
,

5163 *
pClõ¡D©a


5165 
SQLITE_API
 
sqlôe3_¸óã_moduÀ_v2
(

5166 
sqlôe3
 *
db
,

5167 c⁄° *
zName
,

5168 c⁄° 
sqlôe3_moduÀ
 *
p
,

5169 *
pClõ¡D©a
,

5170 (*
xDe°roy
)(*)

5191 
	ssqlôe3_vèb
 {

5192 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

5193 
nRef
;

5194 *
zEºMsg
;

5215 
	ssqlôe3_vèb_curs‹
 {

5216 
sqlôe3_vèb
 *
pVèb
;

5228 
SQLITE_API
 
sqlôe3_de˛¨e_vèb
(
sqlôe3
*, c⁄° *
zSQL
);

5246 
SQLITE_API
 
sqlôe3_ovîlﬂd_fun˘i⁄
(
sqlôe3
*, c⁄° *
zFuncName
, 
nArg
);

5270 
sqlôe3_blob
 
	tsqlôe3_blob
;

5328 
SQLITE_API
 
sqlôe3_blob_›í
(

5329 
sqlôe3
*,

5330 c⁄° *
zDb
,

5331 c⁄° *
zTabÀ
,

5332 c⁄° *
zCﬁumn
,

5333 
sqlôe3_öt64
 
iRow
,

5334 
Êags
,

5335 
sqlôe3_blob
 **
µBlob


5360 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 
sqlôe3_blob_ª›í
(
sqlôe3_blob
 *, 
sqlôe3_öt64
);

5384 
SQLITE_API
 
sqlôe3_blob_˛o£
(
sqlôe3_blob
 *);

5399 
SQLITE_API
 
sqlôe3_blob_byãs
(
sqlôe3_blob
 *);

5427 
SQLITE_API
 
sqlôe3_blob_ªad
(
sqlôe3_blob
 *, *
Z
, 
N
, 
iOff£t
);

5465 
SQLITE_API
 
sqlôe3_blob_wrôe
(
sqlôe3_blob
 *, c⁄° *
z
, 
n
, 
iOff£t
);

5496 
SQLITE_API
 
sqlôe3_vfs
 *
sqlôe3_vfs_föd
(c⁄° *
zVfsName
);

5497 
SQLITE_API
 
sqlôe3_vfs_ªgi°î
(
sqlôe3_vfs
*, 
makeDÊt
);

5498 
SQLITE_API
 
sqlôe3_vfs_uƒegi°î
(
sqlôe3_vfs
*);

5614 
SQLITE_API
 
sqlôe3_muãx
 *
sqlôe3_muãx_Æloc
();

5615 
SQLITE_API
 
sqlôe3_muãx_‰ì
(
sqlôe3_muãx
*);

5616 
SQLITE_API
 
sqlôe3_muãx_íãr
(
sqlôe3_muãx
*);

5617 
SQLITE_API
 
sqlôe3_muãx_åy
(
sqlôe3_muãx
*);

5618 
SQLITE_API
 
sqlôe3_muãx_Àave
(
sqlôe3_muãx
*);

5685 
sqlôe3_muãx_mëhods
 
	tsqlôe3_muãx_mëhods
;

5686 
	ssqlôe3_muãx_mëhods
 {

5687 (*
xMuãxInô
)();

5688 (*
xMuãxEnd
)();

5689 
sqlôe3_muãx
 *(*
xMuãxAŒoc
)();

5690 (*
xMuãxFªe
)(
sqlôe3_muãx
 *);

5691 (*
xMuãxE¡î
)(
sqlôe3_muãx
 *);

5692 (*
xMuãxTry
)(
sqlôe3_muãx
 *);

5693 (*
xMuãxLóve
)(
sqlôe3_muãx
 *);

5694 (*
xMuãxHñd
)(
sqlôe3_muãx
 *);

5695 (*
xMuãxNŸhñd
)(
sqlôe3_muãx
 *);

5727 #i‚de‡
NDEBUG


5728 
SQLITE_API
 
sqlôe3_muãx_hñd
(
sqlôe3_muãx
*);

5729 
SQLITE_API
 
sqlôe3_muãx_nŸhñd
(
sqlôe3_muãx
*);

5742 
	#SQLITE_MUTEX_FAST
 0

	)

5743 
	#SQLITE_MUTEX_RECURSIVE
 1

	)

5744 
	#SQLITE_MUTEX_STATIC_MASTER
 2

	)

5745 
	#SQLITE_MUTEX_STATIC_MEM
 3

	)

5746 
	#SQLITE_MUTEX_STATIC_MEM2
 4

	)

5747 
	#SQLITE_MUTEX_STATIC_OPEN
 4

	)

5748 
	#SQLITE_MUTEX_STATIC_PRNG
 5

	)

5749 
	#SQLITE_MUTEX_STATIC_LRU
 6

	)

5750 
	#SQLITE_MUTEX_STATIC_LRU2
 7

	)

5751 
	#SQLITE_MUTEX_STATIC_PMEM
 7

	)

5762 
SQLITE_API
 
sqlôe3_muãx
 *
sqlôe3_db_muãx
(
sqlôe3
*);

5796 
SQLITE_API
 
sqlôe3_fûe_c⁄åﬁ
(
sqlôe3
*, c⁄° *
zDbName
, 
›
, *);

5815 
SQLITE_API
 
sqlôe3_ã°_c⁄åﬁ
(
›
, ...);

5828 
	#SQLITE_TESTCTRL_FIRST
 5

	)

5829 
	#SQLITE_TESTCTRL_PRNG_SAVE
 5

	)

5830 
	#SQLITE_TESTCTRL_PRNG_RESTORE
 6

	)

5831 
	#SQLITE_TESTCTRL_PRNG_RESET
 7

	)

5832 
	#SQLITE_TESTCTRL_BITVEC_TEST
 8

	)

5833 
	#SQLITE_TESTCTRL_FAULT_INSTALL
 9

	)

5834 
	#SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS
 10

	)

5835 
	#SQLITE_TESTCTRL_PENDING_BYTE
 11

	)

5836 
	#SQLITE_TESTCTRL_ASSERT
 12

	)

5837 
	#SQLITE_TESTCTRL_ALWAYS
 13

	)

5838 
	#SQLITE_TESTCTRL_RESERVE
 14

	)

5839 
	#SQLITE_TESTCTRL_OPTIMIZATIONS
 15

	)

5840 
	#SQLITE_TESTCTRL_ISKEYWORD
 16

	)

5841 
	#SQLITE_TESTCTRL_SCRATCHMALLOC
 17

	)

5842 
	#SQLITE_TESTCTRL_LOCALTIME_FAULT
 18

	)

5843 
	#SQLITE_TESTCTRL_EXPLAIN_STMT
 19

	)

5844 
	#SQLITE_TESTCTRL_LAST
 19

	)

5875 
SQLITE_API
 
sqlôe3_°©us
(
›
, *
pCuºít
, *
pHighw©î
, 
ª£tFœg
);

5960 
	#SQLITE_STATUS_MEMORY_USED
 0

	)

5961 
	#SQLITE_STATUS_PAGECACHE_USED
 1

	)

5962 
	#SQLITE_STATUS_PAGECACHE_OVERFLOW
 2

	)

5963 
	#SQLITE_STATUS_SCRATCH_USED
 3

	)

5964 
	#SQLITE_STATUS_SCRATCH_OVERFLOW
 4

	)

5965 
	#SQLITE_STATUS_MALLOC_SIZE
 5

	)

5966 
	#SQLITE_STATUS_PARSER_STACK
 6

	)

5967 
	#SQLITE_STATUS_PAGECACHE_SIZE
 7

	)

5968 
	#SQLITE_STATUS_SCRATCH_SIZE
 8

	)

5969 
	#SQLITE_STATUS_MALLOC_COUNT
 9

	)

5993 
SQLITE_API
 
sqlôe3_db_°©us
(
sqlôe3
*, 
›
, *
pCur
, *
pHiwå
, 
ª£tFlg
);

6079 
	#SQLITE_DBSTATUS_LOOKASIDE_USED
 0

	)

6080 
	#SQLITE_DBSTATUS_CACHE_USED
 1

	)

6081 
	#SQLITE_DBSTATUS_SCHEMA_USED
 2

	)

6082 
	#SQLITE_DBSTATUS_STMT_USED
 3

	)

6083 
	#SQLITE_DBSTATUS_LOOKASIDE_HIT
 4

	)

6084 
	#SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE
 5

	)

6085 
	#SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL
 6

	)

6086 
	#SQLITE_DBSTATUS_CACHE_HIT
 7

	)

6087 
	#SQLITE_DBSTATUS_CACHE_MISS
 8

	)

6088 
	#SQLITE_DBSTATUS_CACHE_WRITE
 9

	)

6089 
	#SQLITE_DBSTATUS_MAX
 9

	)

6115 
SQLITE_API
 
sqlôe3_°mt_°©us
(
sqlôe3_°mt
*, 
›
,
ª£tFlg
);

6145 
	#SQLITE_STMTSTATUS_FULLSCAN_STEP
 1

	)

6146 
	#SQLITE_STMTSTATUS_SORT
 2

	)

6147 
	#SQLITE_STMTSTATUS_AUTOINDEX
 3

	)

6160 
sqlôe3_pˇche
 
	tsqlôe3_pˇche
;

6172 
sqlôe3_pˇche_∑ge
 
	tsqlôe3_pˇche_∑ge
;

6173 
	ssqlôe3_pˇche_∑ge
 {

6174 *
pBuf
;

6175 *
pExåa
;

6337 
sqlôe3_pˇche_mëhods2
 
	tsqlôe3_pˇche_mëhods2
;

6338 
	ssqlôe3_pˇche_mëhods2
 {

6339 
iVîsi⁄
;

6340 *
pArg
;

6341 (*
xInô
)(*);

6342 (*
xShutdown
)(*);

6343 
sqlôe3_pˇche
 *(*
xCª©e
)(
szPage
, 
szExåa
, 
bPurgóbÀ
);

6344 (*
xCachesize
)(
sqlôe3_pˇche
*, 
nCachesize
);

6345 (*
xPagecou¡
)(
sqlôe3_pˇche
*);

6346 
sqlôe3_pˇche_∑ge
 *(*
xFëch
)(
sqlôe3_pˇche
*, 
key
, 
¸óãFœg
);

6347 (*
xU≈ö
)(
sqlôe3_pˇche
*, 
sqlôe3_pˇche_∑ge
*, 
disˇrd
);

6348 (*
xRekey
)(
sqlôe3_pˇche
*, 
sqlôe3_pˇche_∑ge
*,

6349 
ﬁdKey
, 
√wKey
);

6350 (*
xTrunˇã
)(
sqlôe3_pˇche
*, 
iLimô
);

6351 (*
xDe°roy
)(
sqlôe3_pˇche
*);

6352 (*
xShrök
)(
sqlôe3_pˇche
*);

6360 
sqlôe3_pˇche_mëhods
 
	tsqlôe3_pˇche_mëhods
;

6361 
	ssqlôe3_pˇche_mëhods
 {

6362 *
pArg
;

6363 (*
xInô
)(*);

6364 (*
xShutdown
)(*);

6365 
sqlôe3_pˇche
 *(*
xCª©e
)(
szPage
, 
bPurgóbÀ
);

6366 (*
xCachesize
)(
sqlôe3_pˇche
*, 
nCachesize
);

6367 (*
xPagecou¡
)(
sqlôe3_pˇche
*);

6368 *(*
xFëch
)(
sqlôe3_pˇche
*, 
key
, 
¸óãFœg
);

6369 (*
xU≈ö
)(
sqlôe3_pˇche
*, *, 
disˇrd
);

6370 (*
xRekey
)(
sqlôe3_pˇche
*, *, 
ﬁdKey
, 
√wKey
);

6371 (*
xTrunˇã
)(
sqlôe3_pˇche
*, 
iLimô
);

6372 (*
xDe°roy
)(
sqlôe3_pˇche
*);

6386 
sqlôe3_backup
 
	tsqlôe3_backup
;

6570 
SQLITE_API
 
sqlôe3_backup
 *
sqlôe3_backup_öô
(

6571 
sqlôe3
 *
pDe°
,

6572 c⁄° *
zDe°Name
,

6573 
sqlôe3
 *
pSour˚
,

6574 c⁄° *
zSour˚Name


6576 
SQLITE_API
 
sqlôe3_backup_°ï
(
sqlôe3_backup
 *
p
, 
nPage
);

6577 
SQLITE_API
 
sqlôe3_backup_föish
(
sqlôe3_backup
 *
p
);

6578 
SQLITE_API
 
sqlôe3_backup_ªmaöög
(
sqlôe3_backup
 *
p
);

6579 
SQLITE_API
 
sqlôe3_backup_∑gecou¡
(
sqlôe3_backup
 *
p
);

6695 
SQLITE_API
 
sqlôe3_u∆ock_nŸify
(

6696 
sqlôe3
 *
pBlocked
,

6697 (*
xNŸify
)(**
≠Arg
, 
nArg
),

6698 *
pNŸifyArg


6710 
SQLITE_API
 
sqlôe3_°ricmp
(const *, const *);

6711 
SQLITE_API
 
sqlôe3_°∫icmp
(const *, const *, );

6734 
SQLITE_API
 
sqlôe3_log
(
iEºCode
, c⁄° *
zF‹m©
, ...);

6771 
SQLITE_API
 *
sqlôe3_wÆ_hook
(

6772 
sqlôe3
*,

6773 (*)(*,
sqlôe3
*,const *,),

6802 
SQLITE_API
 
sqlôe3_wÆ_autocheckpoöt
(
sqlôe3
 *
db
, 
N
);

6820 
SQLITE_API
 
sqlôe3_wÆ_checkpoöt
(
sqlôe3
 *
db
, c⁄° *
zDb
);

6892 
SQLITE_API
 
sqlôe3_wÆ_checkpoöt_v2
(

6893 
sqlôe3
 *
db
,

6894 c⁄° *
zDb
,

6895 
eMode
,

6896 *
≤Log
,

6897 *
≤Ck±


6908 
	#SQLITE_CHECKPOINT_PASSIVE
 0

	)

6909 
	#SQLITE_CHECKPOINT_FULL
 1

	)

6910 
	#SQLITE_CHECKPOINT_RESTART
 2

	)

6926 
SQLITE_API
 
sqlôe3_vèb_c⁄fig
(
sqlôe3
*, 
›
, ...);

6967 
	#SQLITE_VTAB_CONSTRAINT_SUPPORT
 1

	)

6979 
SQLITE_API
 
sqlôe3_vèb_⁄_c⁄Êi˘
(
sqlôe3
 *);

6992 
	#SQLITE_ROLLBACK
 1

	)

6994 
	#SQLITE_FAIL
 3

	)

6996 
	#SQLITE_REPLACE
 5

	)

7004 #ifde‡
SQLITE_OMIT_FLOATING_POINT


7008 #ifde‡
__˝lu•lus


7026 #i‚de‡
_SQLITE3RTREE_H_


7027 
	#_SQLITE3RTREE_H_


	)

7030 #ifde‡
__˝lu•lus


7034 
sqlôe3_πªe_geomëry
 
	tsqlôe3_πªe_geomëry
;

7042 
SQLITE_API
 
sqlôe3_πªe_geomëry_ˇŒback
(

7043 
sqlôe3
 *
db
,

7044 c⁄° *
zGeom
,

7045 #ifde‡
SQLITE_RTREE_INT_ONLY


7046 (*
xGeom
)(
sqlôe3_πªe_geomëry
*, 
n
, 
sqlôe3_öt64
 *
a
, *
pRes
),

7048 (*
xGeom
)(
sqlôe3_πªe_geomëry
*, 
n
, *
a
, *
pRes
),

7050 *
pC⁄ãxt


7058 
	ssqlôe3_πªe_geomëry
 {

7059 *
pC⁄ãxt
;

7060 
nP¨am
;

7061 *
aP¨am
;

7062 *
pU£r
;

7063 (*
xDñU£r
)(*);

7067 #ifde‡
__˝lu•lus


	@/usr/include/stddef.h

61 #i‡!
deföed
(
__STDDEF_H__
)

63 #i‡!
deföed
(
__√ed_wch¨_t
Ë&& !deföed(
__√ed_size_t
) \

64 && !
deföed
(
__√ed_±rdiff_t
Ë&& !deföed(
__√ed_NULL
) \

65 && !
deföed
(
__√ed_wöt_t
Ë&& !
	$deföed
(
__√ed_rsize_t
)

66 
	#__STDDEF_H__


	)

69 
	~<_ty≥s.h
>

71 #i‡
	`deföed
(
__STDDEF_H__
Ë|| deföed(
__√ed_±rdiff_t
)

72 
	~<sys/_ty≥s/_±rdiff_t.h
>

75 #i‡
	`deföed
(
__STDDEF_H__
Ë|| deföed(
__√ed_size_t
)

78 
	~<sys/_ty≥s/_size_t.h
>

81 #i‡(
	`deföed
(
__STDDEF_H__
Ë&& deföed(
__STDC_WANT_LIB_EXT1__
Ë&& __STDC_WANT_LIB_EXT1__ >1Ë|| deföed(
__√ed_rsize_t
)

82 
	~<sys/_ty≥s/_rsize_t.h
>

85 #i‡
	`deföed
(
__STDDEF_H__
Ë|| deföed(
__√ed_wch¨_t
)

86 
	~<sys/_ty≥s/_wch¨_t.h
>

89 #i‡(
	`deföed
(
__STDDEF_H__
Ë&& !deföed(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))) \

90 || 
	$deföed
(
__√ed_wöt_t
)

91 
	~<sys/_ty≥s/_wöt_t.h
>

94 #i‡
	`deföed
(
__STDDEF_H__
Ë|| deföed(
__√ed_NULL
)

95 
	~<sys/_ty≥s/_nuŒ.h
>

98 #ifde‡
__STDDEF_H__


99 #i‡
	`deföed
(
__GNUC__
Ë&& (__GNUC__ =3 && 
__GNUC_MINOR__
 >= 5 || __GNUC__ > 3)

100 #i‚de‡
__off£tof


101 
	#__off£tof
(
ty≥
, 
fõld
Ë
	`__buûtö_off£tof
—y≥, fõld)

	)

103 
	#off£tof
(
ty≥
, 
fõld
Ë
	`__buûtö_off£tof
—y≥, fõld)

	)

105 #i‚de‡
__off£tof


106 
	#__off£tof
(
ty≥
, 
fõld
Ë((
size_t
)(&(—y≥ *)0)->fõld))

	)

108 
	#off£tof
(
ty≥
, 
fõld
Ë((
size_t
)(&(—y≥ *)0)->fõld))

	)

114 #unde‡
__√ed_±rdiff_t


115 #unde‡
__√ed_size_t


116 #unde‡
__√ed_wch¨_t


117 #unde‡
__√ed_wöt_t


118 #unde‡
__√ed_NULL


	@/usr/include/stdint.h

6 #i‚de‡
_STDINT_H_


7 
	#_STDINT_H_


	)

9 #i‡
__LP64__


10 
	#__WORDSIZE
 64

	)

12 
	#__WORDSIZE
 32

	)

18 
	~<sys/_ty≥s/_öt8_t.h
>

19 
	~<sys/_ty≥s/_öt16_t.h
>

20 
	~<sys/_ty≥s/_öt32_t.h
>

21 
	~<sys/_ty≥s/_öt64_t.h
>

23 
	~<_ty≥s/_uöt8_t.h
>

24 
	~<_ty≥s/_uöt16_t.h
>

25 
	~<_ty≥s/_uöt32_t.h
>

26 
	~<_ty≥s/_uöt64_t.h
>

29 
öt8_t
 
	töt_Àa°8_t
;

30 
öt16_t
 
	töt_Àa°16_t
;

31 
öt32_t
 
	töt_Àa°32_t
;

32 
öt64_t
 
	töt_Àa°64_t
;

33 
uöt8_t
 
	tuöt_Àa°8_t
;

34 
uöt16_t
 
	tuöt_Àa°16_t
;

35 
uöt32_t
 
	tuöt_Àa°32_t
;

36 
uöt64_t
 
	tuöt_Àa°64_t
;

40 
öt8_t
 
	töt_Á°8_t
;

41 
öt16_t
 
	töt_Á°16_t
;

42 
öt32_t
 
	töt_Á°32_t
;

43 
öt64_t
 
	töt_Á°64_t
;

44 
uöt8_t
 
	tuöt_Á°8_t
;

45 
uöt16_t
 
	tuöt_Á°16_t
;

46 
uöt32_t
 
	tuöt_Á°32_t
;

47 
uöt64_t
 
	tuöt_Á°64_t
;

52 
	~<sys/_ty≥s.h
>

53 
	~<sys/_ty≥s/_öçå_t.h
>

54 
	~<sys/_ty≥s/_uöçå_t.h
>

58 
	~<_ty≥s/_ötmax_t.h
>

59 
	~<_ty≥s/_uötmax_t.h
>

68 
	#INT8_MAX
 127

	)

69 
	#INT16_MAX
 32767

	)

70 
	#INT32_MAX
 2147483647

	)

71 
	#INT64_MAX
 9223372036854775807LL

	)

73 
	#INT8_MIN
 -128

	)

74 
	#INT16_MIN
 -32768

	)

81 
	#INT32_MIN
 (-
INT32_MAX
-1)

	)

82 
	#INT64_MIN
 (-
INT64_MAX
-1)

	)

84 
	#UINT8_MAX
 255

	)

85 
	#UINT16_MAX
 65535

	)

86 
	#UINT32_MAX
 4294967295U

	)

87 
	#UINT64_MAX
 18446744073709551615ULL

	)

90 
	#INT_LEAST8_MIN
 
INT8_MIN


	)

91 
	#INT_LEAST16_MIN
 
INT16_MIN


	)

92 
	#INT_LEAST32_MIN
 
INT32_MIN


	)

93 
	#INT_LEAST64_MIN
 
INT64_MIN


	)

95 
	#INT_LEAST8_MAX
 
INT8_MAX


	)

96 
	#INT_LEAST16_MAX
 
INT16_MAX


	)

97 
	#INT_LEAST32_MAX
 
INT32_MAX


	)

98 
	#INT_LEAST64_MAX
 
INT64_MAX


	)

100 
	#UINT_LEAST8_MAX
 
UINT8_MAX


	)

101 
	#UINT_LEAST16_MAX
 
UINT16_MAX


	)

102 
	#UINT_LEAST32_MAX
 
UINT32_MAX


	)

103 
	#UINT_LEAST64_MAX
 
UINT64_MAX


	)

106 
	#INT_FAST8_MIN
 
INT8_MIN


	)

107 
	#INT_FAST16_MIN
 
INT16_MIN


	)

108 
	#INT_FAST32_MIN
 
INT32_MIN


	)

109 
	#INT_FAST64_MIN
 
INT64_MIN


	)

111 
	#INT_FAST8_MAX
 
INT8_MAX


	)

112 
	#INT_FAST16_MAX
 
INT16_MAX


	)

113 
	#INT_FAST32_MAX
 
INT32_MAX


	)

114 
	#INT_FAST64_MAX
 
INT64_MAX


	)

116 
	#UINT_FAST8_MAX
 
UINT8_MAX


	)

117 
	#UINT_FAST16_MAX
 
UINT16_MAX


	)

118 
	#UINT_FAST32_MAX
 
UINT32_MAX


	)

119 
	#UINT_FAST64_MAX
 
UINT64_MAX


	)

123 #i‡
__WORDSIZE
 == 64

124 
	#INTPTR_MIN
 
INT64_MIN


	)

125 
	#INTPTR_MAX
 
INT64_MAX


	)

127 
	#INTPTR_MIN
 
INT32_MIN


	)

128 
	#INTPTR_MAX
 
INT32_MAX


	)

131 #i‡
__WORDSIZE
 == 64

132 
	#UINTPTR_MAX
 
UINT64_MAX


	)

134 
	#UINTPTR_MAX
 
UINT32_MAX


	)

138 
	#INTMAX_MIN
 
INT64_MIN


	)

139 
	#INTMAX_MAX
 
INT64_MAX


	)

141 
	#UINTMAX_MAX
 
UINT64_MAX


	)

144 #i‡
__WORDSIZE
 == 64

145 
	#PTRDIFF_MIN
 
INT64_MIN


	)

146 
	#PTRDIFF_MAX
 
INT64_MAX


	)

148 
	#PTRDIFF_MIN
 
INT32_MIN


	)

149 
	#PTRDIFF_MAX
 
INT32_MAX


	)

156 #i‡
__WORDSIZE
 == 64

157 
	#SIZE_MAX
 
UINT64_MAX


	)

159 
	#SIZE_MAX
 
UINT32_MAX


	)

162 #i‡
deföed
(
__STDC_WANT_LIB_EXT1__
) && __STDC_WANT_LIB_EXT1__ >= 1

163 
	#RSIZE_MAX
 (
SIZE_MAX
 >> 1)

	)

166 #i‚de‡
WCHAR_MAX


167 #ifde‡
__WCHAR_MAX__


168 
	#WCHAR_MAX
 
__WCHAR_MAX__


	)

170 
	#WCHAR_MAX
 0x7fffffff

	)

178 #i‚de‡
WCHAR_MIN


179 #i‡
WCHAR_MAX
 == 0xffff

180 
	#WCHAR_MIN
 0

	)

182 
	#WCHAR_MIN
 (-
WCHAR_MAX
-1)

	)

186 
	#WINT_MIN
 
INT32_MIN


	)

187 
	#WINT_MAX
 
INT32_MAX


	)

189 
	#SIG_ATOMIC_MIN
 
INT32_MIN


	)

190 
	#SIG_ATOMIC_MAX
 
INT32_MAX


	)

193 
	#INT8_C
(
v
Ë(v)

	)

194 
	#INT16_C
(
v
Ë(v)

	)

195 
	#INT32_C
(
v
Ë(v)

	)

196 
	#INT64_C
(
v
Ë(v ## 
LL
)

	)

198 
	#UINT8_C
(
v
Ë(v ## 
U
)

	)

199 
	#UINT16_C
(
v
Ë(v ## 
U
)

	)

200 
	#UINT32_C
(
v
Ë(v ## 
U
)

	)

201 
	#UINT64_C
(
v
Ë(v ## 
ULL
)

	)

203 #ifde‡
__LP64__


204 
	#INTMAX_C
(
v
Ë(v ## 
L
)

	)

205 
	#UINTMAX_C
(
v
Ë(v ## 
UL
)

	)

207 
	#INTMAX_C
(
v
Ë(v ## 
LL
)

	)

208 
	#UINTMAX_C
(
v
Ë(v ## 
ULL
)

	)

	@/usr/include/stdio.h

61 #i‚def 
_STDIO_H_


62 
	#_STDIO_H_


	)

64 
	~<sys/cdefs.h
>

65 
	~<Avaûabûôy.h
>

67 
	~<_ty≥s.h
>

71 
	~<sys/_ty≥s/_va_li°.h
>

72 
	~<sys/_ty≥s/_size_t.h
>

73 
	~<sys/_ty≥s/_nuŒ.h
>

75 
__d¨wö_off_t
 
	tÂos_t
;

77 
	#_FSTDIO


	)

86 
	s__sbuf
 {

87 *
	m_ba£
;

88 
	m_size
;

92 
	g__sFILEX
;

120 
	s__sFILE
 {

121 *
	m_p
;

122 
	m_r
;

123 
	m_w
;

124 
	m_Êags
;

125 
	m_fûe
;

126 
__sbuf
 
	m_bf
;

127 
	m_lbfsize
;

130 *
	m_cookõ
;

131 (*
	m_˛o£
)(*);

132 (*
	m_ªad
) (*, *, );

133 
Âos_t
 (*
_£ek
Ë(*, 
	mÂos_t
, );

134 (*
	m_wrôe
)(*, const *, );

137 
__sbuf
 
	m_ub
;

138 
__sFILEX
 *
	m_exåa
;

139 
	m_ur
;

142 
	m_ubuf
[3];

143 
	m_nbuf
[1];

146 
__sbuf
 
	m_lb
;

149 
	m_blksize
;

150 
Âos_t
 
	m_off£t
;

151 } 
	tFILE
;

153 
__BEGIN_DECLS


154 
FILE
 *
__°döp
;

155 
FILE
 *
__°douç
;

156 
FILE
 *
__°dîΩ
;

157 
	g__END_DECLS


159 
	#__SLBF
 0x0001

	)

160 
	#__SNBF
 0x0002

	)

161 
	#__SRD
 0x0004

	)

162 
	#__SWR
 0x0008

	)

164 
	#__SRW
 0x0010

	)

165 
	#__SEOF
 0x0020

	)

166 
	#__SERR
 0x0040

	)

167 
	#__SMBF
 0x0080

	)

168 
	#__SAPP
 0x0100

	)

169 
	#__SSTR
 0x0200

	)

170 
	#__SOPT
 0x0400

	)

171 
	#__SNPT
 0x0800

	)

172 
	#__SOFF
 0x1000

	)

173 
	#__SMOD
 0x2000

	)

174 
	#__SALC
 0x4000

	)

175 
	#__SIGN
 0x8000

	)

186 
	#_IOFBF
 0

	)

187 
	#_IOLBF
 1

	)

188 
	#_IONBF
 2

	)

190 
	#BUFSIZ
 1024

	)

191 
	#EOF
 (-1)

	)

194 
	#FOPEN_MAX
 20

	)

195 
	#FILENAME_MAX
 1024

	)

198 #i‚de‡
_ANSI_SOURCE


199 
	#P_tmpdú
 "/v¨/tmp/"

	)

201 
	#L_tm≤am
 1024

	)

202 
	#TMP_MAX
 308915776

	)

204 #i‚de‡
SEEK_SET


205 
	#SEEK_SET
 0

	)

207 #i‚de‡
SEEK_CUR


208 
	#SEEK_CUR
 1

	)

210 #i‚de‡
SEEK_END


211 
	#SEEK_END
 2

	)

214 
	#°dö
 
__°döp


	)

215 
	#°dout
 
__°douç


	)

216 
	#°dîr
 
__°dîΩ


	)

218 #ifde‡
_DARWIN_UNLIMITED_STREAMS


219 #i‡
deföed
(
__IPHONE_OS_VERSION_MIN_REQUIRED
Ë&& __IPHONE_OS_VERSION_MIN_REQUIRED < 
__IPHONE_3_2


221 #ñi‡
deföed
(
__MAC_OS_X_VERSION_MIN_REQUIRED
Ë&& __MAC_OS_X_VERSION_MIN_REQUIRED < 
__MAC_10_6


228 
__BEGIN_DECLS


229 
˛óªº
(
FILE
 *);

230 
f˛o£
(
FILE
 *);

231 
„of
(
FILE
 *);

232 
„º‹
(
FILE
 *);

233 
fÊush
(
FILE
 *);

234 
fgëc
(
FILE
 *);

235 
fgëpos
(
FILE
 * 
__ª°ri˘
, 
Âos_t
 *);

236 *
fgës
(* 
__ª°ri˘
, , 
FILE
 *);

237 #i‡
deföed
(
_DARWIN_UNLIMITED_STREAMS
Ë|| deföed(
_DARWIN_C_SOURCE
)

238 
FILE
 *
	$f›í
(c⁄° * 
__ª°ri˘
, c⁄° * __ª°ri˘Ë
	`__DARWIN_ALIAS_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
, 
	`__DARWIN_EXTSN
(
f›í
));

240 
FILE
 *
	$f›í
(c⁄° * 
__ª°ri˘
, c⁄° * __ª°ri˘Ë
	`__DARWIN_ALIAS_STARTING
(
__MAC_10_6
, 
__IPHONE_2_0
, 
	`__DARWIN_ALIAS
(
f›í
));

242 
	$Ârötf
(
FILE
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, ...Ë
	`__¥ötÊike
(2, 3);

243 
	`Âutc
(, 
FILE
 *);

244 
	$Âuts
(c⁄° * 
__ª°ri˘
, 
FILE
 * __ª°ri˘Ë
	`__DARWIN_ALIAS
(
Âuts
);

245 
size_t
 
	`‰ód
(* 
__ª°ri˘
, size_t, size_t, 
FILE
 * __restrict);

246 
FILE
 *
	$‰e›í
(c⁄° * 
__ª°ri˘
, const * __restrict,

247 
FILE
 * 
__ª°ri˘
Ë
	`__DARWIN_ALIAS
(
‰e›í
);

248 
	$fsˇnf
(
FILE
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, ...Ë
	`__sˇnÊike
(2, 3);

249 
	`f£ek
(
FILE
 *, , );

250 
	`f£ços
(
FILE
 *, c⁄° 
Âos_t
 *);

251 
	`·ñl
(
FILE
 *);

252 
size_t
 
	$fwrôe
(c⁄° * 
__ª°ri˘
, 
size_t
, size_t, 
FILE
 * __ª°ri˘Ë
	`__DARWIN_ALIAS
(
fwrôe
);

253 
	`gëc
(
FILE
 *);

254 
	`gëch¨
();

255 *
	`gës
(*);

256 
	`≥º‹
(const *);

257 
	$¥ötf
(c⁄° * 
__ª°ri˘
, ...Ë
	`__¥ötÊike
(1, 2);

258 
	`putc
(, 
FILE
 *);

259 
	`putch¨
();

260 
	`puts
(const *);

261 
	`ªmove
(const *);

262 
	`ª«me
 (const *, const *);

263 
	`ªwöd
(
FILE
 *);

264 
	$sˇnf
(c⁄° * 
__ª°ri˘
, ...Ë
	`__sˇnÊike
(1, 2);

265 
	`£tbuf
(
FILE
 * 
__ª°ri˘
, * __restrict);

266 
	`£tvbuf
(
FILE
 * 
__ª°ri˘
, * __ª°ri˘, , 
size_t
);

267 
	$•rötf
(* 
__ª°ri˘
, c⁄° * __ª°ri˘, ...Ë
	`__¥ötÊike
(2, 3);

268 
	$ssˇnf
(c⁄° * 
__ª°ri˘
, c⁄° * __ª°ri˘, ...Ë
	`__sˇnÊike
(2, 3);

269 
FILE
 *
	`tmpfûe
();

271 #i‡!
	`deföed
(
_POSIX_C_SOURCE
)

272 
	`__dïªˇãd_msg
("This function isÖrovided for compatibilityÑeasons only. DueÅo security concerns inherent inÅhe design ofÅmpnam(3), it is highlyÑecommendedÅhat you use mkstemp(3) instead.")

274 *
	`tm≤am
(*);

275 
	`ungëc
(, 
FILE
 *);

276 
	$vÂrötf
(
FILE
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
Ë
	`__¥ötÊike
(2, 0);

277 
	$v¥ötf
(c⁄° * 
__ª°ri˘
, 
va_li°
Ë
	`__¥ötÊike
(1, 0);

278 
	$v•rötf
(* 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
Ë
	`__¥ötÊike
(2, 0);

279 
__END_DECLS


287 #i‡
__DARWIN_C_LEVEL
 >= 198808L

288 
	#L_˘îmid
 1024

	)

290 
__BEGIN_DECLS


291 #i‚de‡
__CTERMID_DEFINED


293 
	#__CTERMID_DEFINED
 1

	)

294 *
	`˘îmid
(*);

297 #i‡
	`deföed
(
_DARWIN_UNLIMITED_STREAMS
Ë|| deföed(
_DARWIN_C_SOURCE
)

298 
FILE
 *
	$fd›í
(, c⁄° *Ë
	`__DARWIN_ALIAS_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
, 
	`__DARWIN_EXTSN
(
fd›í
));

300 
FILE
 *
	$fd›í
(, c⁄° *Ë
	`__DARWIN_ALIAS_STARTING
(
__MAC_10_6
, 
__IPHONE_2_0
, 
	`__DARWIN_ALIAS
(
fd›í
));

302 
	`fûío
(
FILE
 *);

303 
__END_DECLS


311 #i‡
__DARWIN_C_LEVEL
 >= 199209L

312 
__BEGIN_DECLS


313 
	`p˛o£
(
FILE
 *);

314 #i‡
	`deföed
(
_DARWIN_UNLIMITED_STREAMS
Ë|| deföed(
_DARWIN_C_SOURCE
)

315 
FILE
 *
	$p›í
(c⁄° *, c⁄° *Ë
	`__DARWIN_ALIAS_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
, 
	`__DARWIN_EXTSN
(
p›í
));

317 
FILE
 *
	$p›í
(c⁄° *, c⁄° *Ë
	`__DARWIN_ALIAS_STARTING
(
__MAC_10_6
, 
__IPHONE_2_0
, 
	`__DARWIN_ALIAS
(
p›í
));

319 
__END_DECLS


331 #i‡
__DARWIN_C_LEVEL
 >= 199506L

334 
__BEGIN_DECLS


335 
	`__§gë
(
FILE
 *);

336 
	$__svfsˇnf
(
FILE
 *, c⁄° *, 
va_li°
Ë
	`__sˇnÊike
(2, 0);

337 
	`__swbuf
(, 
FILE
 *);

338 
__END_DECLS


344 
	#__sgëc
(
p
Ë(--’)->
_r
 < 0 ? 
	`__§gë
’Ë: ()(*’)->
_p
++))

	)

345 #i‡
	`deföed
(
__GNUC__
Ë&& deföed(
__STDC__
)

346 
__hódî_Æways_ölöe
 
	$__•utc
(
_c
, 
FILE
 *
_p
) {

347 i‡(--
_p
->
_w
 >0 || (_p->_w >_p->
_lbfsize
 && ()
_c
 != '\n'))

348  (*
_p
->_p++ = 
_c
);

350  (
	`__swbuf
(
_c
, 
_p
));

351 
	}
}

356 
	#__•utc
(
c
, 
p
) \

357 (--(
p
)->
_w
 < 0 ? \

358 (
p
)->
_w
 >’)->
_lbfsize
 ? \

359 (*(
p
)->
_p
 = (
c
)), *(p)->_p != '\n' ? \

360 ()*(
p
)->
_p
++ : \

361 
	`__swbuf
('\n', 
p
) : \

362 
	`__swbuf
(()(
c
), 
p
) : \

363 (*(
p
)->
_p
 = (
c
), ()*’)->_p++))

	)

366 
	#__s„of
(
p
Ë((’)->
_Êags
 & 
__SEOF
Ë!0)

	)

367 
	#__s„º‹
(
p
Ë((’)->
_Êags
 & 
__SERR
Ë!0)

	)

368 
	#__s˛óªº
(
p
Ë(()(’)->
_Êags
 &~(
__SERR
|
__SEOF
)))

	)

369 
	#__sfûío
(
p
Ë(’)->
_fûe
)

	)

371 
__BEGIN_DECLS


372 
Êockfûe
(
FILE
 *);

373 
·rylockfûe
(
FILE
 *);

374 
fu∆ockfûe
(
FILE
 *);

375 
gëc_u∆ocked
(
FILE
 *);

376 
gëch¨_u∆ocked
();

377 
putc_u∆ocked
(, 
FILE
 *);

378 
putch¨_u∆ocked
();

381 #i‡!
deföed
(
_POSIX_C_SOURCE
) || _POSIX_C_SOURCE < 200112L

382 
gëw
(
FILE
 *);

383 
putw
(, 
FILE
 *);

386 #i‡!
deföed
(
_POSIX_C_SOURCE
)

387 
__dïªˇãd_msg
("This function isÖrovided for compatibilityÑeasons only. DueÅo security concerns inherent inÅhe design ofÅempnam(3), it is highlyÑecommendedÅhat you use mkstemp(3) instead.")

389 *
	$ãm≤am
(c⁄° *, c⁄° *Ë
	`__DARWIN_ALIAS
(
ãm≤am
);

390 
__END_DECLS


392 #i‚de‡
löt


393 
	#gëc_u∆ocked
(
Â
Ë
	`__sgëc
(Â)

	)

394 
	#putc_u∆ocked
(
x
, 
Â
Ë
	`__•utc
(x, fp)

	)

397 
	#gëch¨_u∆ocked
(Ë
	`gëc_u∆ocked
(
°dö
)

	)

398 
	#putch¨_u∆ocked
(
x
Ë
	`putc_u∆ocked
(x, 
°dout
)

	)

408 #i‡
__DARWIN_C_LEVEL
 >= 200112L

409 
	~<sys/_ty≥s/_off_t.h
>

411 
__BEGIN_DECLS


412 
	`f£eko
(
FILE
 *, 
off_t
, );

413 
off_t
 
	`·ñlo
(
FILE
 *);

414 
__END_DECLS


417 #i‡
__DARWIN_C_LEVEL
 >200112L || 
	`deföed
(
_C99_SOURCE
Ë|| deföed(
__˝lu•lus
)

418 
__BEGIN_DECLS


419 
	$¢¥ötf
(* 
__ª°ri˘
, 
size_t
, c⁄° * __ª°ri˘, ...Ë
	`__¥ötÊike
(3, 4);

420 
	$vfsˇnf
(
FILE
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
Ë
	`__sˇnÊike
(2, 0);

421 
	$vsˇnf
(c⁄° * 
__ª°ri˘
, 
va_li°
Ë
	`__sˇnÊike
(1, 0);

422 
	$v¢¥ötf
(* 
__ª°ri˘
, 
size_t
, c⁄° * __ª°ri˘, 
va_li°
Ë
	`__¥ötÊike
(3, 0);

423 
	$vssˇnf
(c⁄° * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
Ë
	`__sˇnÊike
(2, 0);

424 
__END_DECLS


433 #i‡
__DARWIN_C_LEVEL
 >= 200809L

434 
	~<sys/_ty≥s/_ssize_t.h
>

436 
__BEGIN_DECLS


437 
	$d¥ötf
(, c⁄° * 
__ª°ri˘
, ...Ë
	$__¥ötÊike
(2, 3Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

438 
	$vd¥ötf
(, c⁄° * 
__ª°ri˘
, 
va_li°
Ë
	$__¥ötÊike
(2, 0Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

439 
ssize_t
 
	$gëdñim
(** 
__ª°ri˘
, 
size_t
 * __ª°ri˘, , 
FILE
 * __ª°ri˘Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

440 
ssize_t
 
	$gëlöe
(** 
__ª°ri˘
, 
size_t
 * __ª°ri˘, 
FILE
 * __ª°ri˘Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

441 
__END_DECLS


448 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


449 
__BEGIN_DECLS


450 
__c⁄°
 
sys_√º
;

451 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

453 
	$a•rötf
(** 
__ª°ri˘
, c⁄° * __ª°ri˘, ...Ë
	`__¥ötÊike
(2, 3);

454 *
	`˘îmid_r
(*);

455 *
	`fgë 
(
FILE
 *, 
size_t
 *);

456 
__c⁄°
 *
	`fmtcheck
(const *, const *);

457 
	`Âurge
(
FILE
 *);

458 
	`£tbuf„r
(
FILE
 *, *, );

459 
	`£éöebuf
(
FILE
 *);

460 
	$va•rötf
(** 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
Ë
	`__¥ötÊike
(2, 0);

461 
FILE
 *
	`z›í
(const *, const *, );

467 
FILE
 *
	`fun›í
(const *,

470 
	$Âos_t
 (*)(*, 
Âos_t
, ),

472 
__END_DECLS


473 
	#‰›í
(
cookõ
, 
‚
Ë
	`fun›í
(cookõ, fn, 0, 0, 0)

	)

474 
	#fw›í
(
cookõ
, 
‚
Ë
	`fun›í
(cookõ, 0, fn, 0, 0)

	)

476 
	#„of_u∆ocked
(
p
Ë
	`__s„of
’)

	)

477 
	#„º‹_u∆ocked
(
p
Ë
	`__s„º‹
’)

	)

478 
	#˛óªº_u∆ocked
(
p
Ë
	`__s˛óªº
’)

	)

479 
	#fûío_u∆ocked
(
p
Ë
	`__sfûío
’)

	)

484 #ifde‡
_USE_EXTENDED_LOCALES_


485 
	~<xloˇÀ/_°dio.h
>

488 #i‡
	`deföed
 (
__GNUC__
Ë&& 
_FORTIFY_SOURCE
 > 0 && !deföed (
__˝lu•lus
)

490 
	~<£cuª/_°dio.h
>

	@/usr/include/stdlib.h

58 #i‚de‡
_STDLIB_H_


59 
	#_STDLIB_H_


	)

61 
	~<Avaûabûôy.h
>

63 
	~<_ty≥s.h
>

64 #i‡!
deföed
(
_ANSI_SOURCE
)

65 
	~<sys/waô.h
>

66 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

67 
	~<Æloˇ.h
>

73 
	~<sys/_ty≥s/_size_t.h
>

75 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

76 
	~<sys/_ty≥s/_˘_ru√_t.h
>

77 
	~<sys/_ty≥s/_ru√_t.h
>

80 
	~<sys/_ty≥s/_wch¨_t.h
>

83 
	mquŸ
;

84 
	mªm
;

85 } 
	tdiv_t
;

88 
	mquŸ
;

89 
	mªm
;

90 } 
	tldiv_t
;

92 #i‡!
__DARWIN_NO_LONG_LONG


94 
	mquŸ
;

95 
	mªm
;

96 } 
	tŒdiv_t
;

99 
	~<sys/_ty≥s/_nuŒ.h
>

101 
	#EXIT_FAILURE
 1

	)

102 
	#EXIT_SUCCESS
 0

	)

104 
	#RAND_MAX
 0x7fffffff

	)

106 #ifde‡
_USE_EXTENDED_LOCALES_


107 
	~<_xloˇÀ.h
>

110 #i‚de‡
MB_CUR_MAX


111 #ifde‡
_USE_EXTENDED_LOCALES_


112 
	#MB_CUR_MAX
 (
	`___mb_cur_max
())

	)

113 #i‚de‡
MB_CUR_MAX_L


114 
	#MB_CUR_MAX_L
(
x
Ë(
	`___mb_cur_max_l
(x))

	)

117 
__mb_cur_max
;

118 
	#MB_CUR_MAX
 
__mb_cur_max


	)

122 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)) \

123 && 
deföed
(
_USE_EXTENDED_LOCALES_
Ë&& !
	$deföed
(
MB_CUR_MAX_L
)

124 
	#MB_CUR_MAX_L
(
x
Ë(
	`___mb_cur_max_l
(x))

	)

127 
__BEGIN_DECLS


128 
	$ab‹t
(Ë
__dód2
;

129 
	$abs
(Ë
__puª2
;

130 
	`©exô
((*)());

131 
	`©of
(const *);

132 
	`©oi
(const *);

133 
	`©ﬁ
(const *);

134 #i‡!
__DARWIN_NO_LONG_LONG


136 
	`©ﬁl
(const *);

138 *
	`b£¨ch
(c⁄° *, c⁄° *, 
size_t
,

139 
size_t
, (*)(const *, const *));

140 *
	`ˇŒoc
(
size_t
, size_t);

141 
div_t
 
	$div
(, Ë
__puª2
;

142 
	$exô
(Ë
__dód2
;

143 
	`‰ì
(*);

144 *
	`gëív
(const *);

145 
	$œbs
(Ë
__puª2
;

146 
ldiv_t
 
	$ldiv
(, Ë
__puª2
;

147 #i‡!
__DARWIN_NO_LONG_LONG


149 
	`Œabs
();

150 
Œdiv_t
 
	`Œdiv
(, );

152 *
	`mÆloc
(
size_t
);

153 
	`mbÀn
(c⁄° *, 
size_t
);

154 
size_t
 
	`mb°owcs
(
wch¨_t
 * 
__ª°ri˘
 , const * __restrict, size_t);

155 
	`mbtowc
(
wch¨_t
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
size_t
);

156 
	$posix_memÆign
(**, 
size_t
, size_tË
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_0
);

157 
	`qs‹t
(*, 
size_t
, size_t,

159 
	`ønd
();

160 *
	`ªÆloc
(*, 
size_t
);

161 
	`§™d
();

162 
	$°πod
(c⁄° *, **Ë
	`__DARWIN_ALIAS
(
°πod
);

163 
	$°πof
(c⁄° *, **Ë
	`__DARWIN_ALIAS
(
°πof
);

164 
	`°πﬁ
(const *, **, );

166 
	`°πﬁd
(const *, **);

167 #i‡!
__DARWIN_NO_LONG_LONG


169 
	`°πﬁl
(const *, **, );

172 
	`°πoul
(const *, **, );

173 #i‡!
__DARWIN_NO_LONG_LONG


175 
	`°πouŒ
(const *, **, );

177 
	$sy°em
(c⁄° *Ë
	`__DARWIN_ALIAS_C
(
sy°em
);

178 
size_t
 
	`wc°ombs
(* 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict, size_t);

179 
	`w˘omb
(*, 
wch¨_t
);

181 #i‚de‡
_ANSI_SOURCE


182 
	$_Exô
(Ë
__dód2
;

183 
	`a64l
(const *);

184 
	`dønd48
();

185 *
	`ecvt
(, , *
__ª°ri˘
, *__restrict);

186 
	`î™d48
([3]);

187 *
	`fcvt
(, , *
__ª°ri˘
, *__restrict);

188 *
	`gcvt
(, , *);

189 
	`gësub›t
(**, * const *, **);

190 
	`gø¡±
();

191 #i‡
__DARWIN_UNIX03


192 *
	`öô°©e
(, *, 
size_t
);

194 *
	`öô°©e
(, *, );

196 
	`jønd48
([3]);

197 *
	`l64a
();

198 
	`lc⁄g48
([7]);

199 
	`Ã™d48
();

200 *
	`mkãmp
(*);

201 
	`mk°emp
(*);

202 
	`mønd48
();

203 
	`ƒ™d48
([3]);

204 
	`posix_›í±
();

205 *
	`±¢ame
();

206 
	$puãnv
(*Ë
	`__DARWIN_ALIAS
(
puãnv
);

207 
	`øndom
();

208 
	`ønd_r
(*);

209 #i‡(
__DARWIN_UNIX03
 && !
	`deföed
(
_POSIX_C_SOURCE
)Ë|| deföed(
_DARWIN_C_SOURCE
Ë|| deföed(
_DARWIN_BETTER_REALPATH
)

210 *
	$ªÆ∑th
(c⁄° * 
__ª°ri˘
, * __ª°ri˘Ë
	`__DARWIN_EXTSN
(
ªÆ∑th
);

212 *
	$ªÆ∑th
(c⁄° * 
__ª°ri˘
, * __ª°ri˘Ë
	`__DARWIN_ALIAS
(
ªÆ∑th
);

215 *
	`£ed48
([3]);

216 
	$£ãnv
(c⁄° *, c⁄° *, Ë
	`__DARWIN_ALIAS
(
£ãnv
);

217 #i‡
__DARWIN_UNIX03


218 
	$£tkey
(c⁄° *Ë
	`__DARWIN_ALIAS
(
£tkey
);

220 
	`£tkey
(const *);

222 *
	`£t°©e
(const *);

223 
	`§™d48
();

224 #i‡
__DARWIN_UNIX03


225 
	`§™dom
();

227 
	`§™dom
();

229 
	`u∆ock±
();

230 #i‡
__DARWIN_UNIX03


231 
	$un£ãnv
(c⁄° *Ë
	`__DARWIN_ALIAS
(
un£ãnv
);

233 
	`un£ãnv
(const *);

237 #i‡!
	`deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

238 
	~<machöe/ty≥s.h
>

240 
	~<sys/_ty≥s/_dev_t.h
>

241 
	~<sys/_ty≥s/_mode_t.h
>

243 
u_öt32_t
 
	`¨c4øndom
();

244 
	`¨c4øndom_addøndom
(* , );

245 
	$¨c4øndom_buf
(* , 
size_t
 ) 
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

246 
	`¨c4øndom_°ú
();

247 
u_öt32_t


248 
	$¨c4øndom_unif‹m
(
u_öt32_t
 ) 
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

249 #ifde‡
__BLOCKS__


250 
	`©exô_b
((^)()Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
);

251 *
	`b£¨ch_b
(c⁄° *, c⁄° *, 
size_t
,

252 
size_t
, (^)(c⁄° *, c⁄° *)Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
);

256 *
	`cgëˇp
(*, const *, );

257 
	`cgë˛o£
();

258 
	`cgëít
(**, **, const *);

259 
	`cgëfú°
(**, **);

260 
	`cgëm©ch
(const *, const *);

261 
	`cgë√xt
(**, **);

262 
	`cgënum
(*, const *, *);

263 
	`cgë£t
(const *);

264 
	`cgë°r
(*, const *, **);

265 
	`cgëu°r
(*, const *, **);

267 
	$d´m⁄
(, Ë
	$__DARWIN_1050
(
d´m⁄
Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_0
, 
__MAC_10_5
, 
__IPHONE_2_0
, __IPHONE_2_0);

268 *
	`dev«me
(
dev_t
, 
mode_t
);

269 *
	`dev«me_r
(
dev_t
, 
mode_t
, *
buf
, 
Àn
);

270 *
	`gëbsize
(*, *);

271 
	`gëlﬂdavg
([], );

273 *
	`gë¥og«me
();

275 
	`hóps‹t
(*, 
size_t
, size_t,

277 #ifde‡
__BLOCKS__


278 
	`hóps‹t_b
(*, 
size_t
, size_t,

279 (^)(c⁄° *, c⁄° *)Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
);

281 
	`mîges‹t
(*, 
size_t
, size_t,

283 #ifde‡
__BLOCKS__


284 
	`mîges‹t_b
(*, 
size_t
, size_t,

285 (^)(c⁄° *, c⁄° *)Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
);

287 
	`ps‹t
(*, 
size_t
, size_t,

288 (*)(c⁄° *, c⁄° *)Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
);

289 #ifde‡
__BLOCKS__


290 
	`ps‹t_b
(*, 
size_t
, size_t,

291 (^)(c⁄° *, c⁄° *)Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
);

293 
	`ps‹t_r
(*, 
size_t
, size_t, *,

294 (*)(*, c⁄° *, c⁄° *)Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
);

295 #ifde‡
__BLOCKS__


296 
	`qs‹t_b
(*, 
size_t
, size_t,

297 (^)(c⁄° *, c⁄° *)Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
);

299 
	`qs‹t_r
(*, 
size_t
, size_t, *,

301 
	`ødixs‹t
(const **, , const *,

303 
	`£çrog«me
(const *);

304 
	`§adixs‹t
(const **, , const *,

306 
	`§™ddev
();

307 
	`§™domdev
();

308 *
	`ªÆlocf
(*, 
size_t
);

309 #i‡!
__DARWIN_NO_LONG_LONG


311 
	`°πoq
(const *, **, );

313 
	`°πouq
(const *, **, );

315 *
sub›èrg
;

316 *
	`vÆloc
(
size_t
);

320 #i‡!
	`deföed
(
__˝lu•lus
Ë&& deföed(
__WCHAR_MAX__
) && __WCHAR_MAX__ <= 0xffffU

321 #¥agm®
GCC
 
pois⁄
 
mb°owcs
 
mbtowc
 
wc°ombs
 
w˘omb


323 
__END_DECLS


325 #ifde‡
_USE_EXTENDED_LOCALES_


326 
	~<xloˇÀ/_°dlib.h
>

	@/usr/include/string.h

58 #i‚de‡
_STRING_H_


59 
	#_STRING_H_


	)

61 
	~<_ty≥s.h
>

62 
	~<sys/cdefs.h
>

63 
	~<Avaûabûôy.h
>

64 
	~<sys/_ty≥s/_size_t.h
>

65 
	~<sys/_ty≥s/_nuŒ.h
>

69 
__BEGIN_DECLS


70 *
memchr
(c⁄° *, , 
size_t
);

71 
memcmp
(c⁄° *, c⁄° *, 
size_t
);

72 *
mem˝y
(*, c⁄° *, 
size_t
);

73 *
memmove
(*, c⁄° *, 
size_t
);

74 *
mem£t
(*, , 
size_t
);

75 *
°rˇt
(*, const *);

76 *
°rchr
(const *, );

77 
°rcmp
(const *, const *);

78 
°rcﬁl
(const *, const *);

79 *
°r˝y
(*, const *);

80 
size_t
 
°rc•n
(const *, const *);

81 *
	$°ªº‹
(Ë
	`__DARWIN_ALIAS
(
°ªº‹
);

82 
size_t
 
	`°æí
(const *);

83 *
	`°∫ˇt
(*, c⁄° *, 
size_t
);

84 
	`°∫cmp
(c⁄° *, c⁄° *, 
size_t
);

85 *
	`°∫˝y
(*, c⁄° *, 
size_t
);

86 *
	`°Ωbrk
(const *, const *);

87 *
	`°ºchr
(const *, );

88 
size_t
 
	`°r•n
(const *, const *);

89 *
	`°r°r
(const *, const *);

90 *
	`°πok
(*, const *);

91 
size_t
 
	`°rx‰m
(*, const *, size_t);

92 
__END_DECLS


102 #i‡
__DARWIN_C_LEVEL
 >= 199506L

103 
__BEGIN_DECLS


104 *
	`°πok_r
(*, const *, **);

105 
__END_DECLS


114 #i‡
__DARWIN_C_LEVEL
 >= 200112L

115 
__BEGIN_DECLS


116 
	`°ªº‹_r
(, *, 
size_t
);

117 *
	`°rdup
(const *);

118 *
	`memc˝y
(*, c⁄° *, , 
size_t
);

119 
__END_DECLS


128 #i‡
__DARWIN_C_LEVEL
 >= 200809L

129 
__BEGIN_DECLS


130 *
	`°p˝y
(*, const *);

131 *
	$°≤˝y
(*, c⁄° *, 
size_t
Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

132 *
	$°∫dup
(c⁄° *, 
size_t
Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

133 
size_t
 
	$°∫Àn
(c⁄° *, 
size_t
Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

134 *
	`°rsig«l
(
sig
);

135 
__END_DECLS


140 #i‡
	`deföed
(
__STDC_WANT_LIB_EXT1__
) && __STDC_WANT_LIB_EXT1__ >= 1

141 
	~<sys/_ty≥s/_rsize_t.h
>

142 
	~<sys/_ty≥s/_î∫o_t.h
>

144 
__BEGIN_DECLS


145 
î∫o_t
 
	$mem£t_s
(*, 
rsize_t
, ,Ñsize_tË
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_9
, 
__IPHONE_7_0
);

146 
__END_DECLS


151 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


152 
	~<sys/_ty≥s/_ssize_t.h
>

154 
__BEGIN_DECLS


155 *
	$memmem
(c⁄° *, 
size_t
, c⁄° *, size_tË
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

156 
	$mem£t_∑âîn4
(*, c⁄° *, 
size_t
Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_3_0
);

157 
	$mem£t_∑âîn8
(*, c⁄° *, 
size_t
Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_3_0
);

158 
	$mem£t_∑âîn16
(*, c⁄° *, 
size_t
Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_3_0
);

160 *
	`°rˇ£°r
(const *, const *);

161 *
	`°∫°r
(c⁄° *, c⁄° *, 
size_t
);

162 
size_t
 
	`°æˇt
(*, const *, size_t);

163 
size_t
 
	`°æ˝y
(*, const *, size_t);

164 
	`°rmode
(, *);

165 *
	`°r£p
(**, const *);

168 
	`swab
(c⁄° * 
__ª°ri˘
, * __ª°ri˘, 
ssize_t
);

169 
__END_DECLS


176 
	~"°rögs.h
"

180 #ifde‡
_USE_EXTENDED_LOCALES_


181 
	~<xloˇÀ/_°rög.h
>

184 #i‡
	`deföed
 (
__GNUC__
Ë&& 
_FORTIFY_SOURCE
 > 0 && !deföed (
__˝lu•lus
)

186 
	~<£cuª/_°rög.h
>

	@/usr/include/sys/poll.h

57 #i‚de‡
_SYS_POLL_H_


58 
	#_SYS_POLL_H_


	)

68 
	#POLLIN
 0x0001

	)

69 
	#POLLPRI
 0x0002

	)

70 
	#POLLOUT
 0x0004

	)

71 
	#POLLRDNORM
 0x0040

	)

72 
	#POLLWRNORM
 
POLLOUT


	)

73 
	#POLLRDBAND
 0x0080

	)

74 
	#POLLWRBAND
 0x0100

	)

80 
	#POLLEXTEND
 0x0200

	)

81 
	#POLLATTRIB
 0x0400

	)

82 
	#POLLNLINK
 0x0800

	)

83 
	#POLLWRITE
 0x1000

	)

89 
	#POLLERR
 0x0008

	)

90 
	#POLLHUP
 0x0010

	)

91 
	#POLLNVAL
 0x0020

	)

93 
	#POLLSTANDARD
 (
POLLIN
|
POLLPRI
|
POLLOUT
|
POLLRDNORM
|
POLLRDBAND
|\

94 
POLLWRBAND
|
POLLERR
|
POLLHUP
|
POLLNVAL
)

	)

96 
	spﬁlfd


98 
	mfd
;

99 
	mevíts
;

100 
	mªvíts
;

103 
	tnfds_t
;

106 
	~<sys/cdefs.h
>

108 
__BEGIN_DECLS


114 
	$pﬁl
 (
pﬁlfd
 *, 
nfds_t
, Ë
	`__DARWIN_ALIAS_C
(
pﬁl
);

116 
__END_DECLS


	@/usr/include/sys/resource.h

64 #i‚de‡
_SYS_RESOURCE_H_


65 
	#_SYS_RESOURCE_H_


	)

67 
	~<sys/≠∂ópi›ts.h
>

68 
	~<sys/cdefs.h
>

69 
	~<sys/_ty≥s.h
>

71 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


72 
	~<°döt.h
>

75 
	~<Avaûabûôy.h
>

80 
	~<sys/_ty≥s/_timevÆ.h
>

83 
	~<sys/_ty≥s/_id_t.h
>

89 
__uöt64_t
 
	tæim_t
;

100 
	#PRIO_PROCESS
 0

	)

101 
	#PRIO_PGRP
 1

	)

102 
	#PRIO_USER
 2

	)

104 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


105 
	#PRIO_DARWIN_THREAD
 3

	)

106 
	#PRIO_DARWIN_PROCESS
 4

	)

111 
	#PRIO_MIN
 -20

	)

112 
	#PRIO_MAX
 20

	)

119 
	#PRIO_DARWIN_BG
 0x1000

	)

125 
	#PRIO_DARWIN_NONUI
 0x1001

	)

139 
	#RUSAGE_SELF
 0

	)

140 
	#RUSAGE_CHILDREN
 -1

	)

151 
	srußge
 {

152 
timevÆ
 
	mru_utime
;

153 
timevÆ
 
	mru_°ime
;

154 #i‡
__DARWIN_C_LEVEL
 < 
__DARWIN_C_FULL


155 
	mru_›aque
[14];

162 
	mru_maxrss
;

163 
	#ru_fú°
 
ru_ixrss


	)

164 
	mru_ixrss
;

165 
	mru_idrss
;

166 
	mru_i§ss
;

167 
	mru_möÊt
;

168 
	mru_majÊt
;

169 
	mru_nsw≠
;

170 
	mru_öblock
;

171 
	mru_oublock
;

172 
	mru_msg¢d
;

173 
	mru_msgrcv
;

174 
	mru_nsig«ls
;

175 
	mru_nvcsw
;

176 
	mru_nivcsw
;

177 
	#ru_œ°
 
ru_nivcsw


	)

181 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


185 
	#RUSAGE_INFO_V0
 0

	)

186 
	#RUSAGE_INFO_V1
 1

	)

187 
	#RUSAGE_INFO_V2
 2

	)

188 
	#RUSAGE_INFO_CURRENT
 
RUSAGE_INFO_V2


	)

190 *
	trußge_öfo_t
;

192 
	srußge_öfo_v0
 {

193 
uöt8_t
 
	mri_uuid
[16];

194 
uöt64_t
 
	mri_u£r_time
;

195 
uöt64_t
 
	mri_sy°em_time
;

196 
uöt64_t
 
	mri_pkg_idÀ_wkups
;

197 
uöt64_t
 
	mri_öãºu±_wkups
;

198 
uöt64_t
 
	mri_∑geös
;

199 
uöt64_t
 
	mri_wúed_size
;

200 
uöt64_t
 
	mri_ªsidít_size
;

201 
uöt64_t
 
	mri_phys_foŸ¥öt
;

202 
uöt64_t
 
	mri_¥oc_°¨t_ab°ime
;

203 
uöt64_t
 
	mri_¥oc_exô_ab°ime
;

206 
	srußge_öfo_v1
 {

207 
uöt8_t
 
	mri_uuid
[16];

208 
uöt64_t
 
	mri_u£r_time
;

209 
uöt64_t
 
	mri_sy°em_time
;

210 
uöt64_t
 
	mri_pkg_idÀ_wkups
;

211 
uöt64_t
 
	mri_öãºu±_wkups
;

212 
uöt64_t
 
	mri_∑geös
;

213 
uöt64_t
 
	mri_wúed_size
;

214 
uöt64_t
 
	mri_ªsidít_size
;

215 
uöt64_t
 
	mri_phys_foŸ¥öt
;

216 
uöt64_t
 
	mri_¥oc_°¨t_ab°ime
;

217 
uöt64_t
 
	mri_¥oc_exô_ab°ime
;

218 
uöt64_t
 
	mri_chûd_u£r_time
;

219 
uöt64_t
 
	mri_chûd_sy°em_time
;

220 
uöt64_t
 
	mri_chûd_pkg_idÀ_wkups
;

221 
uöt64_t
 
	mri_chûd_öãºu±_wkups
;

222 
uöt64_t
 
	mri_chûd_∑geös
;

223 
uöt64_t
 
	mri_chûd_ñ≠£d_ab°ime
;

226 
	srußge_öfo_v2
 {

227 
uöt8_t
 
	mri_uuid
[16];

228 
uöt64_t
 
	mri_u£r_time
;

229 
uöt64_t
 
	mri_sy°em_time
;

230 
uöt64_t
 
	mri_pkg_idÀ_wkups
;

231 
uöt64_t
 
	mri_öãºu±_wkups
;

232 
uöt64_t
 
	mri_∑geös
;

233 
uöt64_t
 
	mri_wúed_size
;

234 
uöt64_t
 
	mri_ªsidít_size
;

235 
uöt64_t
 
	mri_phys_foŸ¥öt
;

236 
uöt64_t
 
	mri_¥oc_°¨t_ab°ime
;

237 
uöt64_t
 
	mri_¥oc_exô_ab°ime
;

238 
uöt64_t
 
	mri_chûd_u£r_time
;

239 
uöt64_t
 
	mri_chûd_sy°em_time
;

240 
uöt64_t
 
	mri_chûd_pkg_idÀ_wkups
;

241 
uöt64_t
 
	mri_chûd_öãºu±_wkups
;

242 
uöt64_t
 
	mri_chûd_∑geös
;

243 
uöt64_t
 
	mri_chûd_ñ≠£d_ab°ime
;

244 
uöt64_t
 
	mri_diskio_byã§ód
;

245 
uöt64_t
 
	mri_diskio_byãswrôãn
;

261 
	#RLIM_INFINITY
 (((
__uöt64_t
)1 << 63Ë- 1Ë

	)

262 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

263 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

269 
	#RLIMIT_CPU
 0

	)

270 
	#RLIMIT_FSIZE
 1

	)

271 
	#RLIMIT_DATA
 2

	)

272 
	#RLIMIT_STACK
 3

	)

273 
	#RLIMIT_CORE
 4

	)

274 
	#RLIMIT_AS
 5

	)

275 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


276 
	#RLIMIT_RSS
 
RLIMIT_AS


	)

277 
	#RLIMIT_MEMLOCK
 6

	)

278 
	#RLIMIT_NPROC
 7

	)

280 
	#RLIMIT_NOFILE
 8

	)

281 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


282 
	#RLIM_NLIMITS
 9

	)

284 
	#_RLIMIT_POSIX_FLAG
 0x1000

	)

290 
	sæimô
 {

291 
æim_t
 
	mæim_cur
;

292 
æim_t
 
	mæim_max
;

295 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


301 
	#RLIMIT_WAKEUPS_MONITOR
 0x1

	)

302 
	#RLIMIT_CPU_USAGE_MONITOR
 0x2

	)

307 
	#WAKEMON_ENABLE
 0x01

	)

308 
	#WAKEMON_DISABLE
 0x02

	)

309 
	#WAKEMON_GET_PARAMS
 0x04

	)

310 
	#WAKEMON_SET_DEFAULTS
 0x08

	)

311 
	#WAKEMON_MAKE_FATAL
 0x10

	)

315 
	#CPUMON_MAKE_FATAL
 0x1000

	)

317 
	s¥oc_æimô_c⁄åﬁ_wakeupm⁄
 {

318 
uöt32_t
 
	mwm_Êags
;

319 
öt32_t
 
	mwm_øã
;

323 
	#IOPOL_TYPE_DISK
 0

	)

326 
	#IOPOL_SCOPE_PROCESS
 0

	)

327 
	#IOPOL_SCOPE_THREAD
 1

	)

328 
	#IOPOL_SCOPE_DARWIN_BG
 2

	)

331 
	#IOPOL_DEFAULT
 0

	)

332 
	#IOPOL_IMPORTANT
 1

	)

333 
	#IOPOL_PASSIVE
 2

	)

334 
	#IOPOL_THROTTLE
 3

	)

335 
	#IOPOL_UTILITY
 4

	)

336 
	#IOPOL_STANDARD
 5

	)

339 
	#IOPOL_APPLICATION
 
IOPOL_STANDARD


	)

340 
	#IOPOL_NORMAL
 
IOPOL_IMPORTANT


	)

346 
__BEGIN_DECLS


347 
gë¥i‹ôy
(, 
id_t
);

348 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


349 
	$gëi›ﬁicy_≈
(, Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

351 
	$gëæimô
(, 
æimô
 *Ë
	`__DARWIN_ALIAS
(
gëæimô
);

352 
	`gërußge
(, 
rußge
 *);

353 
	`£çri‹ôy
(, 
id_t
, );

354 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


355 
	$£ti›ﬁicy_≈
(, , Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

357 
	$£ålimô
(, c⁄° 
æimô
 *Ë
	`__DARWIN_ALIAS
(
£ålimô
);

358 
__END_DECLS


	@/usr/include/sys/socket.h

72 #i‚de‡
_SYS_SOCKET_H_


73 
	#_SYS_SOCKET_H_


	)

75 
	~<sys/ty≥s.h
>

76 
	~<sys/cdefs.h
>

77 
	~<machöe/_∑øm.h
>

80 
	~<Avaûabûôy.h
>

90 
	~<sys/_ty≥s/_gid_t.h
>

91 
	~<sys/_ty≥s/_off_t.h
>

92 
	~<sys/_ty≥s/_pid_t.h
>

93 
	~<sys/_ty≥s/_ß_Ámûy_t.h
>

94 
	~<sys/_ty≥s/_sockÀn_t.h
>

97 
	~<sys/_ty≥s/_size_t.h
>

100 
	~<sys/_ty≥s/_ssize_t.h
>

105 
	~<sys/_ty≥s/_iovec_t.h
>

111 
	#SOCK_STREAM
 1

	)

112 
	#SOCK_DGRAM
 2

	)

113 
	#SOCK_RAW
 3

	)

114 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

115 
	#SOCK_RDM
 4

	)

117 
	#SOCK_SEQPACKET
 5

	)

122 
	#SO_DEBUG
 0x0001

	)

123 
	#SO_ACCEPTCONN
 0x0002

	)

124 
	#SO_REUSEADDR
 0x0004

	)

125 
	#SO_KEEPALIVE
 0x0008

	)

126 
	#SO_DONTROUTE
 0x0010

	)

127 
	#SO_BROADCAST
 0x0020

	)

128 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

129 
	#SO_USELOOPBACK
 0x0040

	)

130 
	#SO_LINGER
 0x0080

	)

132 
	#SO_LINGER
 0x1080

	)

134 
	#SO_OOBINLINE
 0x0100

	)

135 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

136 
	#SO_REUSEPORT
 0x0200

	)

137 
	#SO_TIMESTAMP
 0x0400

	)

138 
	#SO_TIMESTAMP_MONOTONIC
 0x0800

	)

139 #i‚de‡
__APPLE__


140 
	#SO_ACCEPTFILTER
 0x1000

	)

142 
	#SO_DONTTRUNC
 0x2000

	)

144 
	#SO_WANTMORE
 0x4000

	)

145 
	#SO_WANTOOBFLAG
 0x8000

	)

153 
	#SO_SNDBUF
 0x1001

	)

154 
	#SO_RCVBUF
 0x1002

	)

155 
	#SO_SNDLOWAT
 0x1003

	)

156 
	#SO_RCVLOWAT
 0x1004

	)

157 
	#SO_SNDTIMEO
 0x1005

	)

158 
	#SO_RCVTIMEO
 0x1006

	)

159 
	#SO_ERROR
 0x1007

	)

160 
	#SO_TYPE
 0x1008

	)

161 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

163 
	#SO_LABEL
 0x1010

	)

164 
	#SO_PEERLABEL
 0x1011

	)

165 #ifde‡
__APPLE__


166 
	#SO_NREAD
 0x1020

	)

167 
	#SO_NKE
 0x1021

	)

168 
	#SO_NOSIGPIPE
 0x1022

	)

169 
	#SO_NOADDRERR
 0x1023

	)

170 
	#SO_NWRITE
 0x1024

	)

171 
	#SO_REUSESHAREUID
 0x1025

	)

172 #ifde‡
__APPLE_API_PRIVATE


173 
	#SO_NOTIFYCONFLICT
 0x1026

	)

174 
	#SO_UPCALLCLOSEWAIT
 0x1027

	)

176 
	#SO_LINGER_SEC
 0x1080

	)

177 
	#SO_RANDOMPORT
 0x1082

	)

178 
	#SO_NP_EXTENSIONS
 0x1083

	)

186 
	slögî
 {

187 
	ml_⁄off
;

188 
	ml_lögî
;

191 #i‚de‡
__APPLE__


192 
	sac˚±_fûãr_¨g
 {

193 
	maf_«me
[16];

194 
	maf_¨g
[256-16];

198 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

199 #ifde‡
__APPLE__


204 
	sso_≈_exãnsi⁄s
 {

205 
u_öt32_t
 
	m≈x_Êags
;

206 
u_öt32_t
 
	m≈x_mask
;

209 
	#SONPX_SETOPTSHUT
 0x000000001

	)

219 
	#SOL_SOCKET
 0xfff‡

	)

225 
	#AF_UNSPEC
 0

	)

226 
	#AF_UNIX
 1

	)

227 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

228 
	#AF_LOCAL
 
AF_UNIX


	)

230 
	#AF_INET
 2

	)

231 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

232 
	#AF_IMPLINK
 3

	)

233 
	#AF_PUP
 4

	)

234 
	#AF_CHAOS
 5

	)

235 
	#AF_NS
 6

	)

236 
	#AF_ISO
 7

	)

237 
	#AF_OSI
 
AF_ISO


	)

238 
	#AF_ECMA
 8

	)

239 
	#AF_DATAKIT
 9

	)

240 
	#AF_CCITT
 10

	)

241 
	#AF_SNA
 11

	)

242 
	#AF_DEC√t
 12

	)

243 
	#AF_DLI
 13

	)

244 
	#AF_LAT
 14

	)

245 
	#AF_HYLINK
 15

	)

246 
	#AF_APPLETALK
 16

	)

247 
	#AF_ROUTE
 17

	)

248 
	#AF_LINK
 18

	)

249 
	#p£udo_AF_XTP
 19

	)

250 
	#AF_COIP
 20

	)

251 
	#AF_CNT
 21

	)

252 
	#p£udo_AF_RTIP
 22

	)

253 
	#AF_IPX
 23

	)

254 
	#AF_SIP
 24

	)

255 
	#p£udo_AF_PIP
 25

	)

257 
	#AF_NDRV
 27

	)

258 
	#AF_ISDN
 28

	)

259 
	#AF_E164
 
AF_ISDN


	)

260 
	#p£udo_AF_KEY
 29

	)

262 
	#AF_INET6
 30

	)

263 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

264 
	#AF_NATM
 31

	)

265 
	#AF_SYSTEM
 32

	)

266 
	#AF_NETBIOS
 33

	)

267 
	#AF_PPP
 34

	)

268 
	#p£udo_AF_HDRCMPLT
 35

	)

270 
	#AF_RESERVED_36
 36

	)

271 
	#AF_IEEE80211
 37

	)

272 
	#AF_UTUN
 38

	)

273 
	#AF_MAX
 40

	)

279 
	ssockaddr
 {

280 
__uöt8_t
 
	mß_Àn
;

281 
ß_Ámûy_t
 
	mß_Ámûy
;

282 
	mß_d©a
[14];

285 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

286 
	#SOCK_MAXADDRLEN
 255

	)

292 
	ssock¥Ÿo
 {

293 
__uöt16_t
 
	m•_Ámûy
;

294 
__uöt16_t
 
	m•_¥Ÿocﬁ
;

301 
	#_SS_MAXSIZE
 128

	)

302 
	#_SS_ALIGNSIZE
 ((
__öt64_t
))

	)

303 
	#_SS_PAD1SIZE
 \

304 (
_SS_ALIGNSIZE
 - (
__uöt8_t
Ë- (
ß_Ámûy_t
))

	)

305 
	#_SS_PAD2SIZE
 \

306 (
_SS_MAXSIZE
 - (
__uöt8_t
Ë- (
ß_Ámûy_t
) - \

307 
_SS_PAD1SIZE
 - 
_SS_ALIGNSIZE
)

	)

312 
	ssockaddr_°‹age
 {

313 
__uöt8_t
 
	mss_Àn
;

314 
ß_Ámûy_t
 
	mss_Ámûy
;

315 
	m__ss_∑d1
[
_SS_PAD1SIZE
];

316 
__öt64_t
 
	m__ss_Æign
;

317 
	m__ss_∑d2
[
_SS_PAD2SIZE
];

324 
	#PF_UNSPEC
 
AF_UNSPEC


	)

325 
	#PF_LOCAL
 
AF_LOCAL


	)

326 
	#PF_UNIX
 
PF_LOCAL


	)

327 
	#PF_INET
 
AF_INET


	)

328 
	#PF_IMPLINK
 
AF_IMPLINK


	)

329 
	#PF_PUP
 
AF_PUP


	)

330 
	#PF_CHAOS
 
AF_CHAOS


	)

331 
	#PF_NS
 
AF_NS


	)

332 
	#PF_ISO
 
AF_ISO


	)

333 
	#PF_OSI
 
AF_ISO


	)

334 
	#PF_ECMA
 
AF_ECMA


	)

335 
	#PF_DATAKIT
 
AF_DATAKIT


	)

336 
	#PF_CCITT
 
AF_CCITT


	)

337 
	#PF_SNA
 
AF_SNA


	)

338 
	#PF_DEC√t
 
AF_DEC√t


	)

339 
	#PF_DLI
 
AF_DLI


	)

340 
	#PF_LAT
 
AF_LAT


	)

341 
	#PF_HYLINK
 
AF_HYLINK


	)

342 
	#PF_APPLETALK
 
AF_APPLETALK


	)

343 
	#PF_ROUTE
 
AF_ROUTE


	)

344 
	#PF_LINK
 
AF_LINK


	)

345 
	#PF_XTP
 
p£udo_AF_XTP


	)

346 
	#PF_COIP
 
AF_COIP


	)

347 
	#PF_CNT
 
AF_CNT


	)

348 
	#PF_SIP
 
AF_SIP


	)

349 
	#PF_IPX
 
AF_IPX


	)

350 
	#PF_RTIP
 
p£udo_AF_RTIP


	)

351 
	#PF_PIP
 
p£udo_AF_PIP


	)

352 
	#PF_NDRV
 
AF_NDRV


	)

353 
	#PF_ISDN
 
AF_ISDN


	)

354 
	#PF_KEY
 
p£udo_AF_KEY


	)

355 
	#PF_INET6
 
AF_INET6


	)

356 
	#PF_NATM
 
AF_NATM


	)

357 
	#PF_SYSTEM
 
AF_SYSTEM


	)

358 
	#PF_NETBIOS
 
AF_NETBIOS


	)

359 
	#PF_PPP
 
AF_PPP


	)

360 
	#PF_RESERVED_36
 
AF_RESERVED_36


	)

361 
	#PF_UTUN
 
AF_UTUN


	)

362 
	#PF_MAX
 
AF_MAX


	)

367 
	#PF_VLAN
 ((
uöt32_t
)0x766c616eË

	)

368 
	#PF_BOND
 ((
uöt32_t
)0x626f6e64Ë

	)

378 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

379 
	#NET_MAXID
 
AF_MAX


	)

383 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

392 
	#NET_RT_DUMP
 1

	)

393 
	#NET_RT_FLAGS
 2

	)

394 
	#NET_RT_IFLIST
 3

	)

395 
	#NET_RT_STAT
 4

	)

396 
	#NET_RT_TRASH
 5

	)

397 
	#NET_RT_IFLIST2
 6

	)

398 
	#NET_RT_DUMP2
 7

	)

399 
	#NET_RT_MAXID
 10

	)

406 
	#SOMAXCONN
 128

	)

412 
	smsghdr
 {

413 *
	mmsg_«me
;

414 
sockÀn_t
 
	mmsg_«mñí
;

415 
iovec
 *
	mmsg_iov
;

416 
	mmsg_iovÀn
;

417 *
	mmsg_c⁄åﬁ
;

418 
sockÀn_t
 
	mmsg_c⁄åﬁÀn
;

419 
	mmsg_Êags
;

423 
	#MSG_OOB
 0x1

	)

424 
	#MSG_PEEK
 0x2

	)

425 
	#MSG_DONTROUTE
 0x4

	)

426 
	#MSG_EOR
 0x8

	)

427 
	#MSG_TRUNC
 0x10

	)

428 
	#MSG_CTRUNC
 0x20

	)

429 
	#MSG_WAITALL
 0x40

	)

430 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

431 
	#MSG_DONTWAIT
 0x80

	)

432 
	#MSG_EOF
 0x100

	)

433 #ifde‡
__APPLE__


434 #ifde‡
__APPLE_API_OBSOLETE


435 
	#MSG_WAITSTREAM
 0x200

	)

437 
	#MSG_FLUSH
 0x400

	)

438 
	#MSG_HOLD
 0x800

	)

439 
	#MSG_SEND
 0x1000

	)

440 
	#MSG_HAVEMORE
 0x2000

	)

441 
	#MSG_RCVMORE
 0x4000

	)

443 
	#MSG_NEEDSA
 0x10000

	)

452 
	scmsghdr
 {

453 
sockÀn_t
 
	mcmsg_Àn
;

454 
	mcmsg_Àvñ
;

455 
	mcmsg_ty≥
;

459 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

460 #i‚de‡
__APPLE__


466 
	#CMGROUP_MAX
 16

	)

475 
	scmsg¸ed
 {

476 
pid_t
 
	mcm¸ed_pid
;

477 
uid_t
 
	mcm¸ed_uid
;

478 
uid_t
 
	mcm¸ed_euid
;

479 
gid_t
 
	mcm¸ed_gid
;

480 
	mcm¸ed_ngroups
;

481 
gid_t
 
	mcm¸ed_groups
[
CMGROUP_MAX
];

487 
	#CMSG_DATA
(
cmsg
) ((*)(cmsg) + \

488 
	`__DARWIN_ALIGN32
((
cmsghdr
)))

	)

494 
	#CMSG_FIRSTHDR
(
mhdr
) \

495 ((
mhdr
)->
msg_c⁄åﬁÀn
 >(
cmsghdr
) ? \

496 (
cmsghdr
 *)(
mhdr
)->
msg_c⁄åﬁ
 : \

497 (
cmsghdr
 *)0L)

	)

504 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
) \

505 ((*)(
cmsg
Ë=(*)0L ? 
	`CMSG_FIRSTHDR
(
mhdr
) : \

506 ((((*)(
cmsg
) + \

507 
	`__DARWIN_ALIGN32
((
__uöt32_t
)(
cmsg
)->
cmsg_Àn
) + \

508 
	`__DARWIN_ALIGN32
((
cmsghdr
))) > \

509 ((*)(
mhdr
)->
msg_c⁄åﬁ
 + \

510 (
mhdr
)->
msg_c⁄åﬁÀn
)) ? \

511 (
cmsghdr
 *)0L : \

512 (
cmsghdr
 *)(*)((*)(
cmsg
) + \

513 
	`__DARWIN_ALIGN32
((
__uöt32_t
)(
cmsg
)->
cmsg_Àn
))))

	)

515 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

517 
	#CMSG_SPACE
(
l
Ë(
	`__DARWIN_ALIGN32
((
cmsghdr
)Ë+ __DARWIN_ALIGN32÷))

	)

518 
	#CMSG_LEN
(
l
Ë(
	`__DARWIN_ALIGN32
((
cmsghdr
)Ë+ (l))

	)

523 
	#SCM_RIGHTS
 0x01

	)

524 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

525 
	#SCM_TIMESTAMP
 0x02

	)

526 
	#SCM_CREDS
 0x03

	)

527 
	#SCM_TIMESTAMP_MONOTONIC
 0x04

	)

535 
	#SHUT_RD
 0

	)

536 
	#SHUT_WR
 1

	)

537 
	#SHUT_RDWR
 2

	)

539 #i‡!
deföed
(
_POSIX_C_SOURCE
)

543 
	ssf_hdå
 {

544 
iovec
 *
	mhódîs
;

545 
	mhdr_˙t
;

546 
iovec
 *
	måaûîs
;

547 
	mål_˙t
;

554 
__BEGIN_DECLS


555 
	$ac˚±
(, 
sockaddr
 * 
__ª°ri˘
, 
sockÀn_t
 * __restrict)

556 
	`__DARWIN_ALIAS_C
(
ac˚±
);

557 
	$böd
(, c⁄° 
sockaddr
 *, 
sockÀn_t
Ë
	`__DARWIN_ALIAS
(
böd
);

558 
	$c⁄√˘
(, c⁄° 
sockaddr
 *, 
sockÀn_t
Ë
	`__DARWIN_ALIAS_C
–
c⁄√˘
);

559 
	$gë≥î«me
(, 
sockaddr
 * 
__ª°ri˘
, 
sockÀn_t
 * __restrict)

560 
	`__DARWIN_ALIAS
(
gë≥î«me
);

561 
	$gësock«me
(, 
sockaddr
 * 
__ª°ri˘
, 
sockÀn_t
 * __restrict)

562 
	`__DARWIN_ALIAS
(
gësock«me
);

563 
	`gësock›t
(, , , * 
__ª°ri˘
, 
sockÀn_t
 * __restrict);

564 
	$li°í
(, Ë
	`__DARWIN_ALIAS
(
li°í
);

565 
ssize_t
 
	$ªcv
(, *, 
size_t
, Ë
	`__DARWIN_ALIAS_C
(
ªcv
);

566 
ssize_t
 
	$ªcv‰om
(, *, 
size_t
, , 
sockaddr
 * 
__ª°ri˘
,

567 
sockÀn_t
 * 
__ª°ri˘
Ë
	`__DARWIN_ALIAS_C
(
ªcv‰om
);

568 
ssize_t
 
	$ªcvmsg
(, 
msghdr
 *, Ë
	`__DARWIN_ALIAS_C
(
ªcvmsg
);

569 
ssize_t
 
	$£nd
(, c⁄° *, 
size_t
, Ë
	`__DARWIN_ALIAS_C
(
£nd
);

570 
ssize_t
 
	$£ndmsg
(, c⁄° 
msghdr
 *, Ë
	`__DARWIN_ALIAS_C
(
£ndmsg
);

571 
ssize_t
 
	$£ndto
(, c⁄° *, 
size_t
,

572 , c⁄° 
sockaddr
 *, 
sockÀn_t
Ë
	`__DARWIN_ALIAS_C
(
£ndto
);

573 
	`£tsock›t
(, , , c⁄° *, 
sockÀn_t
);

574 
	`shutdown
(, );

575 
	$sock©m¨k
(Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

576 
	`sockë
(, , );

577 
	$sockë∑ú
(, , , *Ë
	`__DARWIN_ALIAS
(
sockë∑ú
);

579 #i‡!
	`deföed
(
_POSIX_C_SOURCE
)

580 
	`£ndfûe
(, , 
off_t
, off_à*, 
sf_hdå
 *, );

583 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

584 
	`pf˘löput
(, 
sockaddr
 *);

586 
__END_DECLS


	@/usr/include/sys/stat.h

70 #i‚de‡
_SYS_STAT_H_


71 
	#_SYS_STAT_H_


	)

73 
	~<sys/_ty≥s.h
>

74 
	~<sys/cdefs.h
>

75 
	~<Avaûabûôy.h
>

78 
	~<sys/_ty≥s/_time•ec.h
>

85 
	~<sys/_ty≥s/_blk˙t_t.h
>

86 
	~<sys/_ty≥s/_blksize_t.h
>

87 
	~<sys/_ty≥s/_dev_t.h
>

88 
	~<sys/_ty≥s/_öo_t.h
>

90 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

91 
	~<sys/_ty≥s/_öo64_t.h
>

94 
	~<sys/_ty≥s/_mode_t.h
>

95 
	~<sys/_ty≥s/_∆ök_t.h
>

96 
	~<sys/_ty≥s/_uid_t.h
>

97 
	~<sys/_ty≥s/_gid_t.h
>

98 
	~<sys/_ty≥s/_off_t.h
>

99 
	~<sys/_ty≥s/_time_t.h
>

101 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

110 
	so°©
 {

111 
__uöt16_t
 
	m°_dev
;

112 
öo_t
 
	m°_öo
;

113 
mode_t
 
	m°_mode
;

114 
∆ök_t
 
	m°_∆ök
;

115 
__uöt16_t
 
	m°_uid
;

116 
__uöt16_t
 
	m°_gid
;

117 
__uöt16_t
 
	m°_rdev
;

118 
__öt32_t
 
	m°_size
;

119 
time•ec
 
	m°_©ime•ec
;

120 
time•ec
 
	m°_mtime•ec
;

121 
time•ec
 
	m°_˘ime•ec
;

122 
__öt32_t
 
	m°_blksize
;

123 
__öt32_t
 
	m°_blocks
;

124 
__uöt32_t
 
	m°_Êags
;

125 
__uöt32_t
 
	m°_gí
;

128 
	#__DARWIN_STRUCT_STAT64_TIMES
 \

129 
time•ec
 
°_©ime•ec
; \

130 
time•ec
 
°_mtime•ec
; \

131 
time•ec
 
°_˘ime•ec
; \

132 
time•ec
 
°_búthtime•ec
;

	)

136 
	#__DARWIN_STRUCT_STAT64_TIMES
 \

137 
time_t
 
°_©ime
; \

138 
°_©imí£c
; \

139 
time_t
 
°_mtime
; \

140 
°_mtimí£c
; \

141 
time_t
 
°_˘ime
; \

142 
°_˘imí£c
; \

143 
time_t
 
°_búthtime
; \

144 
°_búthtimí£c
;

	)

158 
	#__DARWIN_STRUCT_STAT64
 { \

159 
dev_t
 
°_dev
; \

160 
mode_t
 
°_mode
; \

161 
∆ök_t
 
°_∆ök
; \

162 
__d¨wö_öo64_t
 
°_öo
; \

163 
uid_t
 
°_uid
; \

164 
gid_t
 
°_gid
; \

165 
dev_t
 
°_rdev
; \

166 
__DARWIN_STRUCT_STAT64_TIMES
 \

167 
off_t
 
°_size
; \

168 
blk˙t_t
 
°_blocks
; \

169 
blksize_t
 
°_blksize
; \

170 
__uöt32_t
 
°_Êags
; \

171 
__uöt32_t
 
°_gí
; \

172 
__öt32_t
 
°_l•¨e
; \

173 
__öt64_t
 
°_q•¨e
[2]; \

174 }

	)

180 #i‡
__DARWIN_64_BIT_INO_T


182 
°©
 
	g__DARWIN_STRUCT_STAT64
;

186 
	s°©
 {

187 
dev_t
 
	m°_dev
;

188 
öo_t
 
	m°_öo
;

189 
mode_t
 
	m°_mode
;

190 
∆ök_t
 
	m°_∆ök
;

191 
uid_t
 
	m°_uid
;

192 
gid_t
 
	m°_gid
;

193 
dev_t
 
	m°_rdev
;

194 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

195 
time•ec
 
	m°_©ime•ec
;

196 
time•ec
 
	m°_mtime•ec
;

197 
time•ec
 
	m°_˘ime•ec
;

199 
time_t
 
	m°_©ime
;

200 
	m°_©imí£c
;

201 
time_t
 
	m°_mtime
;

202 
	m°_mtimí£c
;

203 
time_t
 
	m°_˘ime
;

204 
	m°_˘imí£c
;

206 
off_t
 
	m°_size
;

207 
blk˙t_t
 
	m°_blocks
;

208 
blksize_t
 
	m°_blksize
;

209 
__uöt32_t
 
	m°_Êags
;

210 
__uöt32_t
 
	m°_gí
;

211 
__öt32_t
 
	m°_l•¨e
;

212 
__öt64_t
 
	m°_q•¨e
[2];

217 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

219 #i‡!
__DARWIN_ONLY_64_BIT_INO_T


221 
°©64
 
	g__DARWIN_STRUCT_STAT64
;

230 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

231 
	#°_©ime
 
°_©ime•ec
.
tv_£c


	)

232 
	#°_mtime
 
°_mtime•ec
.
tv_£c


	)

233 
	#°_˘ime
 
°_˘ime•ec
.
tv_£c


	)

234 
	#°_búthtime
 
°_búthtime•ec
.
tv_£c


	)

241 
	~<sys/_ty≥s/_s_ifmt.h
>

249 
	#S_ISBLK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFBLK
Ë

	)

250 
	#S_ISCHR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFCHR
Ë

	)

251 
	#S_ISDIR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFDIR
Ë

	)

252 
	#S_ISFIFO
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFIFO
Ë

	)

253 
	#S_ISREG
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFREG
Ë

	)

254 
	#S_ISLNK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFLNK
Ë

	)

255 
	#S_ISSOCK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFSOCK
Ë

	)

256 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

257 
	#S_ISWHT
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFWHT
Ë

	)

275 
	#S_TYPEISMQ
(
buf
Ë(0Ë

	)

276 
	#S_TYPEISSEM
(
buf
Ë(0Ë

	)

277 
	#S_TYPEISSHM
(
buf
Ë(0Ë

	)

293 
	#S_TYPEISTMO
(
buf
Ë(0Ë

	)

296 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

297 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

299 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISTXT
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

301 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

303 
	#S_BLKSIZE
 512

	)

310 
	#UF_SETTABLE
 0x0000fff‡

	)

311 
	#UF_NODUMP
 0x00000001

	)

312 
	#UF_IMMUTABLE
 0x00000002

	)

313 
	#UF_APPEND
 0x00000004

	)

314 
	#UF_OPAQUE
 0x00000008

	)

320 
	#UF_COMPRESSED
 0x00000020

	)

321 
	#UF_TRACKED
 0x00000040

	)

323 
	#UF_HIDDEN
 0x00008000

	)

328 
	#SF_SETTABLE
 0xffff0000

	)

329 
	#SF_ARCHIVED
 0x00010000

	)

330 
	#SF_IMMUTABLE
 0x00020000

	)

331 
	#SF_APPEND
 0x00040000

	)

344 
__BEGIN_DECLS


346 
	$chmod
(c⁄° *, 
mode_t
Ë
	`__DARWIN_ALIAS
(
chmod
);

347 
	$fchmod
(, 
mode_t
Ë
	`__DARWIN_ALIAS
(
fchmod
);

348 
	$f°©
(, 
°©
 *Ë
	`__DARWIN_INODE64
(
f°©
);

349 
	$l°©
(c⁄° *, 
°©
 *Ë
	`__DARWIN_INODE64
(
l°©
);

350 
	`mkdú
(c⁄° *, 
mode_t
);

351 
	`mkfifo
(c⁄° *, 
mode_t
);

352 
	$°©
(c⁄° *, 
°©
 *Ë
	`__DARWIN_INODE64
(stat);

353 
	`mknod
(c⁄° *, 
mode_t
, 
dev_t
);

354 
mode_t
 
	`umask
(mode_t);

356 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

358 
	~<sys/_ty≥s/_fûe£c_t.h
>

360 
	`chÊags
(c⁄° *, 
__uöt32_t
);

361 
	`chmodx_≈
(c⁄° *, 
fûe£c_t
);

362 
	`fchÊags
(, 
__uöt32_t
);

363 
	`fchmodx_≈
(, 
fûe£c_t
);

364 
	$f°©x_≈
(, 
°©
 *, 
fûe£c_t
Ë
	`__DARWIN_INODE64
(
f°©x_≈
);

365 
	$lchÊags
(c⁄° *, 
__uöt32_t
Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

366 
	$lchmod
(c⁄° *, 
mode_t
Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

367 
	$l°©x_≈
(c⁄° *, 
°©
 *, 
fûe£c_t
Ë
	`__DARWIN_INODE64
(
l°©x_≈
);

368 
	`mkdúx_≈
(c⁄° *, 
fûe£c_t
);

369 
	`mkfifox_≈
(c⁄° *, 
fûe£c_t
);

370 
	$°©x_≈
(c⁄° *, 
°©
 *, 
fûe£c_t
Ë
	`__DARWIN_INODE64
(
°©x_≈
);

371 
	$umaskx_≈
(
fûe£c_t
Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_4
,
__MAC_10_6
,
__IPHONE_NA
,__IPHONE_NA);

373 #i‡!
__DARWIN_ONLY_64_BIT_INO_T


375 
	$f°©x64_≈
(, 
°©64
 *, 
fûe£c_t
Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
,
__MAC_10_6
,
__IPHONE_NA
,__IPHONE_NA);

376 
	$l°©x64_≈
(c⁄° *, 
°©64
 *, 
fûe£c_t
Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
,
__MAC_10_6
,
__IPHONE_NA
,__IPHONE_NA);

377 
	$°©x64_≈
(c⁄° *, 
°©64
 *, 
fûe£c_t
Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
,
__MAC_10_6
,
__IPHONE_NA
,__IPHONE_NA);

378 
	$f°©64
(, 
°©64
 *Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
,
__MAC_10_6
,
__IPHONE_NA
,__IPHONE_NA);

379 
	$l°©64
(c⁄° *, 
°©64
 *Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
,
__MAC_10_6
,
__IPHONE_NA
,__IPHONE_NA);

380 
	$°©64
(c⁄° *, 
°©64
 *Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
,
__MAC_10_6
,
__IPHONE_NA
,__IPHONE_NA);

384 
__END_DECLS


	@/usr/include/sys/time.h

64 #i‚de‡
_SYS_TIME_H_


65 
	#_SYS_TIME_H_


	)

67 
	~<sys/cdefs.h
>

68 
	~<sys/_ty≥s.h
>

69 
	~<Avaûabûôy.h
>

75 
	~<sys/_ty≥s/_fd_def.h
>

76 
	~<sys/_ty≥s/_time•ec.h
>

77 
	~<sys/_ty≥s/_timevÆ.h
>

79 
	~<sys/_ty≥s/_time_t.h
>

80 
	~<sys/_ty≥s/_su£c⁄ds_t.h
>

86 
	sôimîvÆ
 {

87 
timevÆ
 
	mô_öãrvÆ
;

88 
timevÆ
 
	mô_vÆue
;

95 
	#ITIMER_REAL
 0

	)

96 
	#ITIMER_VIRTUAL
 1

	)

97 
	#ITIMER_PROF
 2

	)

105 
	~<sys/_ty≥s/_fd_£tsize.h
>

106 
	~<sys/_ty≥s/_fd_£t.h
>

107 
	~<sys/_ty≥s/_fd_˛r.h
>

108 
	~<sys/_ty≥s/_fd_is£t.h
>

109 
	~<sys/_ty≥s/_fd_zîo.h
>

111 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

113 
	~<sys/_ty≥s/_fd_c›y.h
>

115 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

116 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

117 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

118 }

	)

119 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

120 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

121 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

122 }

	)

124 
	stimez⁄e
 {

125 
	mtz_möuãswe°
;

126 
	mtz_d°time
;

128 
	#DST_NONE
 0

	)

129 
	#DST_USA
 1

	)

130 
	#DST_AUST
 2

	)

131 
	#DST_WET
 3

	)

132 
	#DST_MET
 4

	)

133 
	#DST_EET
 5

	)

134 
	#DST_CAN
 6

	)

137 
	#timî˛ór
(
tvp
Ë—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0

	)

138 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

139 
	#timîcmp
(
tvp
, 
uvp
, 
cmp
) \

140 (((
tvp
)->
tv_£c
 =(
uvp
)->tv_sec) ? \

141 ((
tvp
)->
tv_u£c
 
	`cmp
 (
uvp
)->tv_usec) : \

142 ((
tvp
)->
tv_£c
 
	`cmp
 (
uvp
)->tv_£c))

	)

143 
	#timîadd
(
tvp
, 
uvp
, 
vvp
) \

145 (
vvp
)->
tv_£c
 = (
tvp
)->tv_£¯+ (
uvp
)->tv_sec; \

146 (
vvp
)->
tv_u£c
 = (
tvp
)->tv_u£¯+ (
uvp
)->tv_usec; \

147 i‡((
vvp
)->
tv_u£c
 >= 1000000) { \

148 (
vvp
)->
tv_£c
++; \

149 (
vvp
)->
tv_u£c
 -= 1000000; \

151 } 0)

	)

152 
	#timîsub
(
tvp
, 
uvp
, 
vvp
) \

154 (
vvp
)->
tv_£c
 = (
tvp
)->tv_£¯- (
uvp
)->tv_sec; \

155 (
vvp
)->
tv_u£c
 = (
tvp
)->tv_u£¯- (
uvp
)->tv_usec; \

156 i‡((
vvp
)->
tv_u£c
 < 0) { \

157 (
vvp
)->
tv_£c
--; \

158 (
vvp
)->
tv_u£c
 += 1000000; \

160 } 0)

	)

162 
	#timevÆcmp
(
l
, 
r
, 
cmp
Ë
	`timîcmp
÷,Ñ, cmpË

	)

167 
	s˛ocköfo
 {

168 
	mhz
;

169 
	mtick
;

170 
	mtickadj
;

171 
	m°©hz
;

172 
	m¥ofhz
;

177 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

178 
	~<time.h
>

181 
	g__BEGIN_DECLS


183 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

184 
adjtime
(c⁄° 
timevÆ
 *, timeval *);

185 
futimes
(, c⁄° 
timevÆ
 *);

186 
	$lutimes
(c⁄° *, c⁄° 
timevÆ
 *Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

187 
	`£âimeofday
(c⁄° 
timevÆ
 *, c⁄° 
timez⁄e
 *);

190 
	`gëôimî
(, 
ôimîvÆ
 *);

191 
	`gëtimeofday
(
timevÆ
 * 
__ª°ri˘
, * __restrict);

193 
	~<sys/_£À˘.h
>

195 
	`£tôimî
(, c⁄° 
ôimîvÆ
 * 
__ª°ri˘
,

196 
ôimîvÆ
 * 
__ª°ri˘
);

197 
	`utimes
(c⁄° *, c⁄° 
timevÆ
 *);

199 
__END_DECLS


	@/usr/include/sys/types.h

69 #i‚de‡
_SYS_TYPES_H_


70 
	#_SYS_TYPES_H_


	)

72 
	~<sys/≠∂ópi›ts.h
>

74 #i‚de‡
__ASSEMBLER__


75 
	~<sys/cdefs.h
>

78 
	~<machöe/ty≥s.h
>

79 
	~<sys/_ty≥s.h
>

81 
	~<machöe/ídün.h
>

83 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

84 
	tu_ch¨
;

85 
	tu_sh‹t
;

86 
	tu_öt
;

87 #i‚de‡
_U_LONG


88 
	tu_l⁄g
;

89 
	#_U_LONG


	)

91 
	tush‹t
;

92 
	tuöt
;

95 
u_öt64_t
 
	tu_quad_t
;

96 
öt64_t
 
	tquad_t
;

97 
quad_t
 * 
	tqaddr_t
;

99 * 
	tˇddr_t
;

100 
öt32_t
 
	tdaddr_t
;

102 
	~<sys/_ty≥s/_dev_t.h
>

104 
u_öt32_t
 
	tfix±_t
;

106 
	~<sys/_ty≥s/_blk˙t_t.h
>

107 
	~<sys/_ty≥s/_blksize_t.h
>

108 
	~<sys/_ty≥s/_gid_t.h
>

109 
	~<sys/_ty≥s/_ö_addr_t.h
>

110 
	~<sys/_ty≥s/_ö_p‹t_t.h
>

111 
	~<sys/_ty≥s/_öo_t.h
>

113 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

114 
	~<sys/_ty≥s/_öo64_t.h
>

117 
	~<sys/_ty≥s/_key_t.h
>

118 
	~<sys/_ty≥s/_mode_t.h
>

119 
	~<sys/_ty≥s/_∆ök_t.h
>

120 
	~<sys/_ty≥s/_id_t.h
>

121 
	~<sys/_ty≥s/_pid_t.h
>

122 
	~<sys/_ty≥s/_off_t.h
>

124 
öt32_t
 
	t£gsz_t
;

125 
öt32_t
 
	tswblk_t
;

127 
	~<sys/_ty≥s/_uid_t.h
>

129 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

131 #i‡
deföed
(
__˝lu•lus
)

137 
ölöe
 
__öt32_t
 
	$maj‹
(
__uöt32_t
 
_x
)

139  (
__öt32_t
)(((
__uöt32_t
)
_x
 >> 24) & 0xff);

140 
	}
}

142 
ölöe
 
__öt32_t
 
	$mö‹
(
__uöt32_t
 
_x
)

144  (
__öt32_t
)((
_x
) & 0xffffff);

145 
	}
}

147 
ölöe
 
dev_t
 
	$makedev
(
__uöt32_t
 
_maj‹
, __uöt32_à
_mö‹
)

149  (
dev_t
)(((
_maj‹
Ë<< 24Ë| (
_mö‹
));

150 
	}
}

154 
	#maj‹
(
x
Ë((
öt32_t
)(((
u_öt32_t
)(xË>> 24Ë& 0xff))

	)

155 
	#mö‹
(
x
Ë((
öt32_t
)((xË& 0xffffff))

	)

156 
	#makedev
(
x
,
y
Ë((
dev_t
)(((xË<< 24Ë| (y)))

	)

161 
	~<sys/_ty≥s/_˛ock_t.h
>

162 
	~<sys/_ty≥s/_size_t.h
>

163 
	~<sys/_ty≥s/_ssize_t.h
>

164 
	~<sys/_ty≥s/_time_t.h
>

166 
	~<sys/_ty≥s/_u£c⁄ds_t.h
>

167 
	~<sys/_ty≥s/_su£c⁄ds_t.h
>

169 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

170 
	~<sys/_ty≥s/_rsize_t.h
>

171 
	~<sys/_ty≥s/_î∫o_t.h
>

174 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

180 
	~<sys/_ty≥s/_fd_def.h
>

182 
	#NBBY
 
__DARWIN_NBBY


	)

183 
	#NFDBITS
 
__DARWIN_NFDBITS


	)

184 
	#howm™y
(
x
, 
y
Ë
	`__DARWIN_howm™y
(x, yË

	)

185 
__öt32_t
 
	tfd_mask
;

193 
	~<sys/_ty≥s/_fd_£tsize.h
>

194 
	~<sys/_ty≥s/_fd_£t.h
>

195 
	~<sys/_ty≥s/_fd_˛r.h
>

196 
	~<sys/_ty≥s/_fd_zîo.h
>

197 
	~<sys/_ty≥s/_fd_is£t.h
>

199 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

200 
	~<sys/_ty≥s/_fd_c›y.h
>

208 #i‚de‡
__POSIX_LIB__


210 
	~<sys/_ty≥s/_±hªad_©å_t.h
>

211 
	~<sys/_ty≥s/_±hªad_c⁄d_t.h
>

212 
	~<sys/_ty≥s/_±hªad_c⁄d©å_t.h
>

213 
	~<sys/_ty≥s/_±hªad_muãx_t.h
>

214 
	~<sys/_ty≥s/_±hªad_muãx©å_t.h
>

215 
	~<sys/_ty≥s/_±hªad_⁄˚_t.h
>

216 
	~<sys/_ty≥s/_±hªad_rwlock_t.h
>

217 
	~<sys/_ty≥s/_±hªad_rwlock©å_t.h
>

218 
	~<sys/_ty≥s/_±hªad_t.h
>

222 
	~<sys/_ty≥s/_±hªad_key_t.h
>

226 
	~<sys/_ty≥s/_fsblk˙t_t.h
>

227 
	~<sys/_ty≥s/_fsfû˙t_t.h
>

	@/usr/include/sys/uio.h

64 #i‚de‡
_SYS_UIO_H_


65 
	#_SYS_UIO_H_


	)

67 
	~<sys/cdefs.h
>

68 
	~<sys/_ty≥s.h
>

74 
	~<sys/_ty≥s/_size_t.h
>

75 
	~<sys/_ty≥s/_ssize_t.h
>

81 
	~<sys/_ty≥s/_iovec_t.h
>

84 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

90 
	euio_rw
 { 
	mUIO_READ
, 
	mUIO_WRITE
 };

95 
__BEGIN_DECLS


96 
ssize_t
 
	$ªadv
(, c⁄° 
iovec
 *, Ë
	`__DARWIN_ALIAS_C
(
ªadv
);

97 
ssize_t
 
	$wrôev
(, c⁄° 
iovec
 *, Ë
	`__DARWIN_ALIAS_C
(
wrôev
);

98 
__END_DECLS


	@/usr/include/sys/utsname.h

67 #i‚def 
_SYS_UTSNAME_H


68 
	#_SYS_UTSNAME_H


	)

70 
	~<sys/cdefs.h
>

72 
	#_SYS_NAMELEN
 256

	)

74 
	sut¢ame
 {

75 
	msy¢ame
[
_SYS_NAMELEN
];

76 
	mnodíame
[
_SYS_NAMELEN
];

77 
	mªÀa£
[
_SYS_NAMELEN
];

78 
	mvîsi⁄
[
_SYS_NAMELEN
];

79 
	mmachöe
[
_SYS_NAMELEN
];

82 
__BEGIN_DECLS


83 
u«me
(
ut¢ame
 *);

84 
	g__END_DECLS


	@/usr/include/sys/wait.h

64 #i‚de‡
_SYS_WAIT_H_


65 
	#_SYS_WAIT_H_


	)

67 
	~<sys/cdefs.h
>

68 
	~<sys/_ty≥s.h
>

80 
	mP_ALL
,

81 
	mP_PID
,

82 
	mP_PGID


83 } 
	tidty≥_t
;

89 
	~<sys/_ty≥s/_pid_t.h
>

90 
	~<sys/_ty≥s/_id_t.h
>

109 
	~<sys/sig«l.h
>

110 
	~<sys/ªsour˚.h
>

121 
	#WNOHANG
 0x00000001

	)

122 
	#WUNTRACED
 0x00000002

	)

128 #i‡
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_DARWIN_C_SOURCE
)

129 
	#_W_INT
(
i
Ë(i)

	)

131 
	#_W_INT
(
w
Ë(*(*)&(w)Ë

	)

132 
	#WCOREFLAG
 0200

	)

136 
	#_WSTATUS
(
x
Ë(
	`_W_INT
(xË& 0177)

	)

137 
	#_WSTOPPED
 0177

	)

143 #i‡
__DARWIN_UNIX03


144 
	#WEXITSTATUS
(
x
Ë((
	`_W_INT
(xË>> 8Ë& 0x000000ff)

	)

146 
	#WEXITSTATUS
(
x
Ë(
	`_W_INT
(xË>> 8)

	)

149 
	#WSTOPSIG
(
x
Ë(
	`_W_INT
(xË>> 8)

	)

150 
	#WIFCONTINUED
(
x
Ë(
	`_WSTATUS
(xË=
_WSTOPPED
 && 
	`WSTOPSIG
(xË=0x13)

	)

151 
	#WIFSTOPPED
(
x
Ë(
	`_WSTATUS
(xË=
_WSTOPPED
 && 
	`WSTOPSIG
(xË!0x13)

	)

152 
	#WIFEXITED
(
x
Ë(
	`_WSTATUS
(xË=0)

	)

153 
	#WIFSIGNALED
(
x
Ë(
	`_WSTATUS
(xË!
_WSTOPPED
 && _WSTATUS(xË!0)

	)

154 
	#WTERMSIG
(
x
Ë(
	`_WSTATUS
(x))

	)

155 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

156 
	#WCOREDUMP
(
x
Ë(
	`_W_INT
(xË& 
WCOREFLAG
)

	)

158 
	#W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

159 
	#W_STOPCODE
(
sig
Ë((sigË<< 8 | 
_WSTOPPED
)

	)

168 
	#WEXITED
 0x00000004

	)

169 #i‡
__DARWIN_UNIX03


171 
	#WSTOPPED
 0x00000008

	)

173 
	#WCONTINUED
 0x00000010

	)

174 
	#WNOWAIT
 0x00000020

	)

177 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

183 
	#WAIT_ANY
 (-1Ë

	)

184 
	#WAIT_MYPGRP
 0

	)

186 
	~<machöe/ídün.h
>

194 
	uwaô
 {

195 
	mw_°©us
;

200 #i‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_LITTLE_ENDIAN


201 
	mw_Tîmsig
:7,

202 
	mw_C‹edump
:1,

203 
	mw_Rëcode
:8,

204 
	mw_FûÀr
:16;

206 #i‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_BIG_ENDIAN


207 
	mw_FûÀr
:16,

208 
	mw_Rëcode
:8,

209 
	mw_C‹edump
:1,

210 
	mw_Tîmsig
:7;

212 } 
	mw_T
;

219 #i‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_LITTLE_ENDIAN


220 
	mw_St›vÆ
:8,

221 
	mw_St›sig
:8,

222 
	mw_FûÀr
:16;

224 #i‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_BIG_ENDIAN


225 
	mw_FûÀr
:16,

226 
	mw_St›sig
:8,

227 
	mw_St›vÆ
:8;

229 } 
	mw_S
;

231 
	#w_ãrmsig
 
w_T
.
w_Tîmsig


	)

232 
	#w_c‹edump
 
w_T
.
w_C‹edump


	)

233 
	#w_ªtcode
 
w_T
.
w_Rëcode


	)

234 
	#w_°›vÆ
 
w_S
.
w_St›vÆ


	)

235 
	#w_°›sig
 
w_S
.
w_St›sig


	)

239 #i‡!(
__DARWIN_UNIX03
 - 0)

244 
	#WSTOPPED
 
_WSTOPPED


	)

247 
__BEGIN_DECLS


248 
pid_t
 
	$waô
(*Ë
	`__DARWIN_ALIAS_C
(
waô
);

249 
pid_t
 
	$waôpid
(
pid_t
, *, Ë
	`__DARWIN_ALIAS_C
(
waôpid
);

250 #i‚de‡
_ANSI_SOURCE


251 
	$waôid
(
idty≥_t
, 
id_t
, 
sigöfo_t
 *, Ë
	`__DARWIN_ALIAS_C
(
waôid
);

253 #i‡ (!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

254 
pid_t
 
	`waô3
(*, , 
rußge
 *);

255 
pid_t
 
	`waô4
’id_t, *, , 
rußge
 *);

257 
__END_DECLS


	@/usr/include/time.h

63 #i‚de‡
_TIME_H_


64 
	#_TIME_H_


	)

66 
	~<_ty≥s.h
>

68 
	#__√ed_°ru˘_time•ec


	)

69 
	~<_°ru˘s.h
>

70 
	~<sys/_ty≥s/_nuŒ.h
>

71 
	~<sys/_ty≥s/_˛ock_t.h
>

72 
	~<sys/_ty≥s/_size_t.h
>

73 
	~<sys/_ty≥s/_time_t.h
>

75 
	stm
 {

76 
	mtm_£c
;

77 
	mtm_mö
;

78 
	mtm_hour
;

79 
	mtm_mday
;

80 
	mtm_m⁄
;

81 
	mtm_yór
;

82 
	mtm_wday
;

83 
	mtm_yday
;

84 
	mtm_isd°
;

85 
	mtm_gmtoff
;

86 *
	mtm_z⁄e
;

89 #i‡
__DARWIN_UNIX03


90 
	#CLOCKS_PER_SEC
 1000000

	)

92 
	~<machöe/_limôs.h
>

94 
	#CLOCKS_PER_SEC
 (
__DARWIN_CLK_TCK
)

	)

97 #i‚de‡
_ANSI_SOURCE


98 *
tz«me
[];

101 
gëd©e_îr
;

102 #i‡
__DARWIN_UNIX03


103 
timez⁄e
 
__DARWIN_ALIAS
(timezone);

105 
daylight
;

107 
__BEGIN_DECLS


108 *
as˘ime
(c⁄° 
tm
 *);

109 
˛ock_t
 
	$˛ock
(Ë
	`__DARWIN_ALIAS
(
˛ock
);

110 *
	`˘ime
(c⁄° 
time_t
 *);

111 
	`dif·ime
(
time_t
,Åime_t);

112 
tm
 *
	`gëd©e
(const *);

113 
tm
 *
	`gmtime
(c⁄° 
time_t
 *);

114 
tm
 *
	`loˇ…ime
(c⁄° 
time_t
 *);

115 
time_t
 
	$mktime
(
tm
 *Ë
	`__DARWIN_ALIAS
(
mktime
);

116 
size_t
 
	$°r·ime
(* 
__ª°ri˘
, 
size_t
, c⁄° * __ª°ri˘, c⁄° 
tm
 * __ª°ri˘Ë
	`__DARWIN_ALIAS
(
°r·ime
);

117 *
	$°Ωtime
(c⁄° * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
tm
 * __ª°ri˘Ë
	`__DARWIN_ALIAS
(
°Ωtime
);

118 
time_t
 
	`time
(time_t *);

120 #i‚de‡
_ANSI_SOURCE


121 
	`tz£t
();

125 *
	`as˘ime_r
(c⁄° 
tm
 * 
__ª°ri˘
, * __restrict);

126 *
	`˘ime_r
(c⁄° 
time_t
 *, *);

127 
tm
 *
	`gmtime_r
(c⁄° 
time_t
 * 
__ª°ri˘
, tm * __restrict);

128 
tm
 *
	`loˇ…ime_r
(c⁄° 
time_t
 * 
__ª°ri˘
, tm * __restrict);

130 #i‡!
	`deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

131 
time_t
 
	`posix2time
(time_t);

132 #i‡!
__DARWIN_UNIX03


133 *
	`timez⁄e
(, );

135 
	`tz£twÆl
();

136 
time_t
 
	`time2posix
(time_t);

137 
time_t
 
	`timñoˇl
(
tm
 * const);

138 
time_t
 
	`timegm
(
tm
 * const);

141 #i‡!
	`deföed
(
_ANSI_SOURCE
)

142 
	$«no¶ìp
(c⁄° 
time•ec
 *, time•e¯*Ë
	`__DARWIN_ALIAS_C
(
«no¶ìp
);

144 
__END_DECLS


146 #ifde‡
_USE_EXTENDED_LOCALES_


147 
	~<xloˇÀ/_time.h
>

	@/usr/include/ucontext.h

27 #i‚de‡
_UCONTEXT_H_


28 
	#_UCONTEXT_H_


	)

30 
	~<sys/cdefs.h
>

32 #ifde‡
_XOPEN_SOURCE


33 
	~<sys/uc⁄ãxt.h
>

34 
	~<Avaûabûôy.h
>

36 
__BEGIN_DECLS


37 
	$gëc⁄ãxt
(
uc⁄ãxt_t
 *Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
, 
__MAC_10_6
, 
__IPHONE_2_0
, __IPHONE_2_0);

38 
	`makec⁄ãxt
(
uc⁄ãxt_t
 *, (*)(), , ...Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
, 
__MAC_10_6
, 
__IPHONE_2_0
, __IPHONE_2_0);

39 
	$£tc⁄ãxt
(c⁄° 
uc⁄ãxt_t
 *Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
, 
__MAC_10_6
, 
__IPHONE_2_0
, __IPHONE_2_0);

40 
	$sw≠c⁄ãxt
(
uc⁄ãxt_t
 * 
__ª°ri˘
, c⁄° uc⁄ãxt_à* __ª°ri˘Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED
(
__MAC_10_5
, 
__MAC_10_6
, 
__IPHONE_2_0
, __IPHONE_2_0);

41 
__END_DECLS


43 #îr‹ 
The
 
dïªˇãd
 
uc⁄ãxt
 
routöes
 
ªquúe
 
_XOPEN_SOURCE
 
to
 
be
 
deföed


	@/usr/include/unistd.h

68 #i‚de‡
_UNISTD_H_


69 
	#_UNISTD_H_


	)

71 
	~<_ty≥s.h
>

72 
	~<sys/uni°d.h
>

73 
	~<Avaûabûôy.h
>

74 
	~<sys/_ty≥s/_gid_t.h
>

75 
	~<sys/_ty≥s/_öçå_t.h
>

76 
	~<sys/_ty≥s/_off_t.h
>

77 
	~<sys/_ty≥s/_pid_t.h
>

80 
	~<sys/_ty≥s/_size_t.h
>

81 
	~<sys/_ty≥s/_ssize_t.h
>

82 
	~<sys/_ty≥s/_uid_t.h
>

83 
	~<sys/_ty≥s/_u£c⁄ds_t.h
>

84 
	~<sys/_ty≥s/_nuŒ.h
>

86 
	#STDIN_FILENO
 0

	)

87 
	#STDOUT_FILENO
 1

	)

88 
	#STDERR_FILENO
 2

	)

93 
	#_XOPEN_VERSION
 600

	)

94 
	#_XOPEN_XCU_VERSION
 4

	)

98 
	#_POSIX_ADVISORY_INFO
 (-1Ë

	)

99 
	#_POSIX_ASYNCHRONOUS_IO
 (-1Ë

	)

100 
	#_POSIX_BARRIERS
 (-1Ë

	)

101 
	#_POSIX_CHOWN_RESTRICTED
 200112L

	)

102 
	#_POSIX_CLOCK_SELECTION
 (-1Ë

	)

103 
	#_POSIX_CPUTIME
 (-1Ë

	)

104 
	#_POSIX_FSYNC
 200112L

	)

105 
	#_POSIX_IPV6
 200112L

	)

106 
	#_POSIX_JOB_CONTROL
 200112L

	)

107 
	#_POSIX_MAPPED_FILES
 200112L

	)

108 
	#_POSIX_MEMLOCK
 (-1Ë

	)

109 
	#_POSIX_MEMLOCK_RANGE
 (-1Ë

	)

110 
	#_POSIX_MEMORY_PROTECTION
 200112L

	)

111 
	#_POSIX_MESSAGE_PASSING
 (-1Ë

	)

112 
	#_POSIX_MONOTONIC_CLOCK
 (-1Ë

	)

113 
	#_POSIX_NO_TRUNC
 200112L

	)

114 
	#_POSIX_PRIORITIZED_IO
 (-1Ë

	)

115 
	#_POSIX_PRIORITY_SCHEDULING
 (-1Ë

	)

116 
	#_POSIX_RAW_SOCKETS
 (-1Ë

	)

117 
	#_POSIX_READER_WRITER_LOCKS
 200112L

	)

118 
	#_POSIX_REALTIME_SIGNALS
 (-1Ë

	)

119 
	#_POSIX_REGEXP
 200112L

	)

120 
	#_POSIX_SAVED_IDS
 200112L

	)

121 
	#_POSIX_SEMAPHORES
 (-1Ë

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 (-1Ë

	)

123 
	#_POSIX_SHELL
 200112L

	)

124 
	#_POSIX_SPAWN
 (-1Ë

	)

125 
	#_POSIX_SPIN_LOCKS
 (-1Ë

	)

126 
	#_POSIX_SPORADIC_SERVER
 (-1Ë

	)

127 
	#_POSIX_SYNCHRONIZED_IO
 (-1Ë

	)

128 
	#_POSIX_THREAD_ATTR_STACKADDR
 200112L

	)

129 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200112L

	)

130 
	#_POSIX_THREAD_CPUTIME
 (-1Ë

	)

131 
	#_POSIX_THREAD_PRIO_INHERIT
 (-1Ë

	)

132 
	#_POSIX_THREAD_PRIO_PROTECT
 (-1Ë

	)

133 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 (-1Ë

	)

134 
	#_POSIX_THREAD_PROCESS_SHARED
 200112L

	)

135 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200112L

	)

136 
	#_POSIX_THREAD_SPORADIC_SERVER
 (-1Ë

	)

137 
	#_POSIX_THREADS
 200112L

	)

138 
	#_POSIX_TIMEOUTS
 (-1Ë

	)

139 
	#_POSIX_TIMERS
 (-1Ë

	)

140 
	#_POSIX_TRACE
 (-1Ë

	)

141 
	#_POSIX_TRACE_EVENT_FILTER
 (-1Ë

	)

142 
	#_POSIX_TRACE_INHERIT
 (-1Ë

	)

143 
	#_POSIX_TRACE_LOG
 (-1Ë

	)

144 
	#_POSIX_TYPED_MEMORY_OBJECTS
 (-1Ë

	)

145 #i‚de‡
_POSIX_VDISABLE


146 
	#_POSIX_VDISABLE
 0xf‡

	)

149 #i‡
__DARWIN_C_LEVEL
 >= 199209L

150 
	#_POSIX2_C_BIND
 200112L

	)

151 
	#_POSIX2_C_DEV
 200112L

	)

152 
	#_POSIX2_CHAR_TERM
 200112L

	)

153 
	#_POSIX2_FORT_DEV
 (-1Ë

	)

154 
	#_POSIX2_FORT_RUN
 200112L

	)

155 
	#_POSIX2_LOCALEDEF
 200112L

	)

156 
	#_POSIX2_PBS
 (-1)

	)

157 
	#_POSIX2_PBS_ACCOUNTING
 (-1)

	)

158 
	#_POSIX2_PBS_CHECKPOINT
 (-1)

	)

159 
	#_POSIX2_PBS_LOCATE
 (-1)

	)

160 
	#_POSIX2_PBS_MESSAGE
 (-1)

	)

161 
	#_POSIX2_PBS_TRACK
 (-1)

	)

162 
	#_POSIX2_SW_DEV
 200112L

	)

163 
	#_POSIX2_UPE
 200112L

	)

166 
	#__ILP32_OFF32
 (-1)

	)

167 
	#__ILP32_OFFBIG
 (1)

	)

168 
	#__LP64_OFF64
 (1)

	)

169 
	#__LPBIG_OFFBIG
 (1)

	)

171 #i‡
__DARWIN_C_LEVEL
 >= 200112L

172 
	#_POSIX_V6_ILP32_OFF32
 
__ILP32_OFF32


	)

173 
	#_POSIX_V6_ILP32_OFFBIG
 
__ILP32_OFFBIG


	)

174 
	#_POSIX_V6_LP64_OFF64
 
__LP64_OFF64


	)

175 
	#_POSIX_V6_LPBIG_OFFBIG
 
__LPBIG_OFFBIG


	)

178 #i‡
__DARWIN_C_LEVEL
 >= 200809L

179 
	#_POSIX_V7_ILP32_OFF32
 
__ILP32_OFF32


	)

180 
	#_POSIX_V7_ILP32_OFFBIG
 
__ILP32_OFFBIG


	)

181 
	#_POSIX_V7_LP64_OFF64
 
__LP64_OFF64


	)

182 
	#_POSIX_V7_LPBIG_OFFBIG
 
__LPBIG_OFFBIG


	)

185 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


186 
	#_V6_ILP32_OFF32
 
__ILP32_OFF32


	)

187 
	#_V6_ILP32_OFFBIG
 
__ILP32_OFFBIG


	)

188 
	#_V6_LP64_OFF64
 
__LP64_OFF64


	)

189 
	#_V6_LPBIG_OFFBIG
 
__LPBIG_OFFBIG


	)

192 #i‡(
__DARWIN_C_LEVEL
 >199506L && __DARWIN_C_LEVEL < 200809LË|| __DARWIN_C_LEVEL >
__DARWIN_C_FULL


194 
	#_XBS5_ILP32_OFF32
 
__ILP32_OFF32


	)

195 
	#_XBS5_ILP32_OFFBIG
 
__ILP32_OFFBIG


	)

196 
	#_XBS5_LP64_OFF64
 
__LP64_OFF64


	)

197 
	#_XBS5_LPBIG_OFFBIG
 
__LPBIG_OFFBIG


	)

200 #i‡
__DARWIN_C_LEVEL
 >= 199506L

201 
	#_XOPEN_CRYPT
 (1)

	)

202 
	#_XOPEN_ENH_I18N
 (1Ë

	)

203 
	#_XOPEN_LEGACY
 (-1Ë

	)

204 
	#_XOPEN_REALTIME
 (-1Ë

	)

205 
	#_XOPEN_REALTIME_THREADS
 (-1Ë

	)

206 
	#_XOPEN_SHM
 (1)

	)

207 
	#_XOPEN_STREAMS
 (-1Ë

	)

208 
	#_XOPEN_UNIX
 (1)

	)

212 
	#_SC_ARG_MAX
 1

	)

213 
	#_SC_CHILD_MAX
 2

	)

214 
	#_SC_CLK_TCK
 3

	)

215 
	#_SC_NGROUPS_MAX
 4

	)

216 
	#_SC_OPEN_MAX
 5

	)

217 
	#_SC_JOB_CONTROL
 6

	)

218 
	#_SC_SAVED_IDS
 7

	)

219 
	#_SC_VERSION
 8

	)

220 
	#_SC_BC_BASE_MAX
 9

	)

221 
	#_SC_BC_DIM_MAX
 10

	)

222 
	#_SC_BC_SCALE_MAX
 11

	)

223 
	#_SC_BC_STRING_MAX
 12

	)

224 
	#_SC_COLL_WEIGHTS_MAX
 13

	)

225 
	#_SC_EXPR_NEST_MAX
 14

	)

226 
	#_SC_LINE_MAX
 15

	)

227 
	#_SC_RE_DUP_MAX
 16

	)

228 
	#_SC_2_VERSION
 17

	)

229 
	#_SC_2_C_BIND
 18

	)

230 
	#_SC_2_C_DEV
 19

	)

231 
	#_SC_2_CHAR_TERM
 20

	)

232 
	#_SC_2_FORT_DEV
 21

	)

233 
	#_SC_2_FORT_RUN
 22

	)

234 
	#_SC_2_LOCALEDEF
 23

	)

235 
	#_SC_2_SW_DEV
 24

	)

236 
	#_SC_2_UPE
 25

	)

237 
	#_SC_STREAM_MAX
 26

	)

238 
	#_SC_TZNAME_MAX
 27

	)

240 #i‡
__DARWIN_C_LEVEL
 >= 199309L

241 
	#_SC_ASYNCHRONOUS_IO
 28

	)

242 
	#_SC_PAGESIZE
 29

	)

243 
	#_SC_MEMLOCK
 30

	)

244 
	#_SC_MEMLOCK_RANGE
 31

	)

245 
	#_SC_MEMORY_PROTECTION
 32

	)

246 
	#_SC_MESSAGE_PASSING
 33

	)

247 
	#_SC_PRIORITIZED_IO
 34

	)

248 
	#_SC_PRIORITY_SCHEDULING
 35

	)

249 
	#_SC_REALTIME_SIGNALS
 36

	)

250 
	#_SC_SEMAPHORES
 37

	)

251 
	#_SC_FSYNC
 38

	)

252 
	#_SC_SHARED_MEMORY_OBJECTS
 39

	)

253 
	#_SC_SYNCHRONIZED_IO
 40

	)

254 
	#_SC_TIMERS
 41

	)

255 
	#_SC_AIO_LISTIO_MAX
 42

	)

256 
	#_SC_AIO_MAX
 43

	)

257 
	#_SC_AIO_PRIO_DELTA_MAX
 44

	)

258 
	#_SC_DELAYTIMER_MAX
 45

	)

259 
	#_SC_MQ_OPEN_MAX
 46

	)

260 
	#_SC_MAPPED_FILES
 47

	)

261 
	#_SC_RTSIG_MAX
 48

	)

262 
	#_SC_SEM_NSEMS_MAX
 49

	)

263 
	#_SC_SEM_VALUE_MAX
 50

	)

264 
	#_SC_SIGQUEUE_MAX
 51

	)

265 
	#_SC_TIMER_MAX
 52

	)

268 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


269 
	#_SC_NPROCESSORS_CONF
 57

	)

270 
	#_SC_NPROCESSORS_ONLN
 58

	)

273 #i‡
__DARWIN_C_LEVEL
 >= 200112L

274 
	#_SC_2_PBS
 59

	)

275 
	#_SC_2_PBS_ACCOUNTING
 60

	)

276 
	#_SC_2_PBS_CHECKPOINT
 61

	)

277 
	#_SC_2_PBS_LOCATE
 62

	)

278 
	#_SC_2_PBS_MESSAGE
 63

	)

279 
	#_SC_2_PBS_TRACK
 64

	)

280 
	#_SC_ADVISORY_INFO
 65

	)

281 
	#_SC_BARRIERS
 66

	)

282 
	#_SC_CLOCK_SELECTION
 67

	)

283 
	#_SC_CPUTIME
 68

	)

284 
	#_SC_FILE_LOCKING
 69

	)

285 
	#_SC_GETGR_R_SIZE_MAX
 70

	)

286 
	#_SC_GETPW_R_SIZE_MAX
 71

	)

287 
	#_SC_HOST_NAME_MAX
 72

	)

288 
	#_SC_LOGIN_NAME_MAX
 73

	)

289 
	#_SC_MONOTONIC_CLOCK
 74

	)

290 
	#_SC_MQ_PRIO_MAX
 75

	)

291 
	#_SC_READER_WRITER_LOCKS
 76

	)

292 
	#_SC_REGEXP
 77

	)

293 
	#_SC_SHELL
 78

	)

294 
	#_SC_SPAWN
 79

	)

295 
	#_SC_SPIN_LOCKS
 80

	)

296 
	#_SC_SPORADIC_SERVER
 81

	)

297 
	#_SC_THREAD_ATTR_STACKADDR
 82

	)

298 
	#_SC_THREAD_ATTR_STACKSIZE
 83

	)

299 
	#_SC_THREAD_CPUTIME
 84

	)

300 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 85

	)

301 
	#_SC_THREAD_KEYS_MAX
 86

	)

302 
	#_SC_THREAD_PRIO_INHERIT
 87

	)

303 
	#_SC_THREAD_PRIO_PROTECT
 88

	)

304 
	#_SC_THREAD_PRIORITY_SCHEDULING
 89

	)

305 
	#_SC_THREAD_PROCESS_SHARED
 90

	)

306 
	#_SC_THREAD_SAFE_FUNCTIONS
 91

	)

307 
	#_SC_THREAD_SPORADIC_SERVER
 92

	)

308 
	#_SC_THREAD_STACK_MIN
 93

	)

309 
	#_SC_THREAD_THREADS_MAX
 94

	)

310 
	#_SC_TIMEOUTS
 95

	)

311 
	#_SC_THREADS
 96

	)

312 
	#_SC_TRACE
 97

	)

313 
	#_SC_TRACE_EVENT_FILTER
 98

	)

314 
	#_SC_TRACE_INHERIT
 99

	)

315 
	#_SC_TRACE_LOG
 100

	)

316 
	#_SC_TTY_NAME_MAX
 101

	)

317 
	#_SC_TYPED_MEMORY_OBJECTS
 102

	)

318 
	#_SC_V6_ILP32_OFF32
 103

	)

319 
	#_SC_V6_ILP32_OFFBIG
 104

	)

320 
	#_SC_V6_LP64_OFF64
 105

	)

321 
	#_SC_V6_LPBIG_OFFBIG
 106

	)

322 
	#_SC_IPV6
 118

	)

323 
	#_SC_RAW_SOCKETS
 119

	)

324 
	#_SC_SYMLOOP_MAX
 120

	)

327 #i‡
__DARWIN_C_LEVEL
 >= 199506L

328 
	#_SC_ATEXIT_MAX
 107

	)

329 
	#_SC_IOV_MAX
 56

	)

330 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

331 
	#_SC_XOPEN_CRYPT
 108

	)

332 
	#_SC_XOPEN_ENH_I18N
 109

	)

333 
	#_SC_XOPEN_LEGACY
 110

	)

334 
	#_SC_XOPEN_REALTIME
 111

	)

335 
	#_SC_XOPEN_REALTIME_THREADS
 112

	)

336 
	#_SC_XOPEN_SHM
 113

	)

337 
	#_SC_XOPEN_STREAMS
 114

	)

338 
	#_SC_XOPEN_UNIX
 115

	)

339 
	#_SC_XOPEN_VERSION
 116

	)

340 
	#_SC_XOPEN_XCU_VERSION
 121

	)

343 #i‡(
__DARWIN_C_LEVEL
 >199506L && __DARWIN_C_LEVEL < 200809LË|| __DARWIN_C_LEVEL >
__DARWIN_C_FULL


345 
	#_SC_XBS5_ILP32_OFF32
 122

	)

346 
	#_SC_XBS5_ILP32_OFFBIG
 123

	)

347 
	#_SC_XBS5_LP64_OFF64
 124

	)

348 
	#_SC_XBS5_LPBIG_OFFBIG
 125

	)

351 #i‡
__DARWIN_C_LEVEL
 >= 200112L

352 
	#_SC_SS_REPL_MAX
 126

	)

353 
	#_SC_TRACE_EVENT_NAME_MAX
 127

	)

354 
	#_SC_TRACE_NAME_MAX
 128

	)

355 
	#_SC_TRACE_SYS_MAX
 129

	)

356 
	#_SC_TRACE_USER_EVENT_MAX
 130

	)

359 #i‡
__DARWIN_C_LEVEL
 < 200112L || __DARWIN_C_LEVEL >
__DARWIN_C_FULL


361 
	#_SC_PASS_MAX
 131

	)

364 #i‡
__DARWIN_C_LEVEL
 >= 199209L

365 #i‚de‡
_CS_PATH


366 
	#_CS_PATH
 1

	)

370 #i‡
__DARWIN_C_LEVEL
 >= 200112

371 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 2

	)

372 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 3

	)

373 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 4

	)

374 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 5

	)

375 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 6

	)

376 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 7

	)

377 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 8

	)

378 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 9

	)

379 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 10

	)

380 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 11

	)

381 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 12

	)

382 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 13

	)

383 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 14

	)

386 #i‡(
__DARWIN_C_LEVEL
 >199506L && __DARWIN_C_LEVEL < 200809LË|| __DARWIN_C_LEVEL >
__DARWIN_C_FULL


388 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 20

	)

389 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 21

	)

390 
	#_CS_XBS5_ILP32_OFF32_LIBS
 22

	)

391 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 23

	)

392 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 24

	)

393 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 25

	)

394 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 26

	)

395 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 27

	)

396 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 28

	)

397 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 29

	)

398 
	#_CS_XBS5_LP64_OFF64_LIBS
 30

	)

399 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 31

	)

400 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 32

	)

401 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 33

	)

402 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 34

	)

403 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 35

	)

406 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


407 
	#_CS_DARWIN_USER_DIR
 65536

	)

408 
	#_CS_DARWIN_USER_TEMP_DIR
 65537

	)

409 
	#_CS_DARWIN_USER_CACHE_DIR
 65538

	)

413 #ifde‡
_DARWIN_UNLIMITED_GETGROUPS


414 #i‡
deföed
(
__IPHONE_OS_VERSION_MIN_REQUIRED
Ë&& __IPHONE_OS_VERSION_MIN_REQUIRED < 
__IPHONE_3_2


416 #ñi‡
deföed
(
__MAC_OS_X_VERSION_MIN_REQUIRED
Ë&& __MAC_OS_X_VERSION_MIN_REQUIRED < 
__MAC_10_6


423 
__BEGIN_DECLS


424 
	$_exô
(Ë
__dód2
;

425 
	`ac˚ss
(const *, );

427 
	`Æ¨m
();

428 
	`chdú
(const *);

429 
	`chown
(c⁄° *, 
uid_t
, 
gid_t
);

431 
	$˛o£
(Ë
	`__DARWIN_ALIAS_C
(
˛o£
);

433 
	`dup
();

434 
	`dup2
(, );

435 
	`exe˛
(const *, const *, ...);

436 
	`exe˛e
(const *, const *, ...);

437 
	`exe˛p
(const *, const *, ...);

438 
	`execv
(const *, * const *);

439 
	`execve
(const *, * const *, * const *);

440 
	`execvp
(const *, * const *);

441 
pid_t
 
	`f‹k
();

442 
	`Â©hc⁄f
(, );

443 *
	`gëcwd
(*, 
size_t
);

444 
gid_t
 
	`gëegid
();

445 
uid_t
 
	`gëeuid
();

446 
gid_t
 
	`gëgid
();

447 #i‡
	`deföed
(
_DARWIN_UNLIMITED_GETGROUPS
Ë|| deföed(
_DARWIN_C_SOURCE
)

448 
	$gëgroups
(, 
gid_t
 []Ë
	`__DARWIN_ALIAS_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
, 
	`__DARWIN_EXTSN
(
gëgroups
));

450 
	`gëgroups
(, 
gid_t
 []);

452 *
	`gëlogö
();

453 
pid_t
 
	`gëpgΩ
();

454 
pid_t
 
	`gëpid
();

455 
pid_t
 
	`gëµid
();

456 
uid_t
 
	`gëuid
();

457 
	`ißây
();

458 
	`lök
(const *, const *);

459 
off_t
 
	`l£ek
(, off_t, );

460 
	`∑thc⁄f
(const *, );

462 
	$∑u£
(Ë
	`__DARWIN_ALIAS_C
(
∑u£
);

464 
	`pùe
([2]);

466 
ssize_t
 
	$ªad
(, *, 
size_t
Ë
	`__DARWIN_ALIAS_C
(
ªad
);

468 
	`rmdú
(const *);

469 
	`£tgid
(
gid_t
);

470 
	`£çgid
(
pid_t
,Öid_t);

471 
pid_t
 
	`£tsid
();

472 
	`£tuid
(
uid_t
);

475 
	$¶ìp
(Ë
	`__DARWIN_ALIAS_C
(
¶ìp
);

477 
	`sysc⁄f
();

478 
pid_t
 
	`tcgëpgΩ
();

479 
	`tc£çgΩ
(, 
pid_t
);

480 *
	`ây«me
();

482 #i‡
__DARWIN_UNIX03


483 
	$ây«me_r
(, *, 
size_t
Ë
	`__DARWIN_ALIAS
(
ây«me_r
);

485 *
	`ây«me_r
(, *, 
size_t
);

488 
	`u∆ök
(const *);

490 
ssize_t
 
	$wrôe
(, c⁄° *, 
size_t
Ë
	`__DARWIN_ALIAS_C
(
wrôe
);

491 
__END_DECLS


499 #i‡
__DARWIN_C_LEVEL
 >= 199209L

500 
__BEGIN_DECLS


501 
size_t
 
	$c⁄f°r
(, *, 
size_t
Ë
	`__DARWIN_ALIAS
(
c⁄f°r
);

503 
	$gë›t
(, * c⁄° [], c⁄° *Ë
	`__DARWIN_ALIAS
(
gë›t
);

505 *
›èrg
;

506 
›töd
, 
›ãº
, 
›t›t
;

507 
__END_DECLS


518 #i‡
__DARWIN_C_LEVEL
 >= 199506L

520 
	#F_ULOCK
 0

	)

521 
	#F_LOCK
 1

	)

522 
	#F_TLOCK
 2

	)

523 
	#F_TEST
 3

	)

525 
__BEGIN_DECLS


529 #i‡!
	`deföed
(
_POSIX_C_SOURCE
) || _POSIX_C_SOURCE < 200112L

530 #i‡!
	`deföed
(
_POSIX_C_SOURCE
)

531 
__dïªˇãd


533 *
	`brk
(const *);

534 
	$chroŸ
(c⁄° *Ë
	`__POSIX_C_DEPRECATED
(199506L);

537 *
	`¸y±
(const *, const *);

538 #i‚de‡
__CTERMID_DEFINED


540 
	#__CTERMID_DEFINED
 1

	)

541 *
	`˘îmid
(*);

543 #i‡
__DARWIN_UNIX03


544 
	$í¸y±
(*, Ë
	`__DARWIN_ALIAS
(
í¸y±
);

546 
	`í¸y±
(*, );

548 
	`fchdú
();

549 
	`gëho°id
();

550 
pid_t
 
	`gëpgid
(pid_t);

551 
pid_t
 
	`gësid
(pid_t);

554 #i‡!
	`deföed
(
_POSIX_C_SOURCE
) || _POSIX_C_SOURCE < 200112L

555 
	$gëdèbÀsize
(Ë
	`__POSIX_C_DEPRECATED
(199506L);

556 
	$gë∑gesize
(Ë
__puª2
 
	`__POSIX_C_DEPRECATED
(199506L);

557 *
	$gë∑ss
(c⁄° *Ë
	`__POSIX_C_DEPRECATED
(199506L);

561 #i‡!
	`deföed
(
_POSIX_C_SOURCE
) || _POSIX_C_SOURCE < 200809L

562 *
	$gëwd
(*Ë
	`__POSIX_C_DEPRECATED
(200112L);

565 
	$lchown
(c⁄° *, 
uid_t
, 
gid_t
Ë
	`__DARWIN_ALIAS
(
lchown
);

567 
	$lockf
(, , 
off_t
Ë
	`__DARWIN_ALIAS_C
(
lockf
);

569 
	$ni˚
(Ë
	`__DARWIN_ALIAS
(
ni˚
);

571 
ssize_t
 
	$¥ód
(, *, 
size_t
, 
off_t
Ë
	`__DARWIN_ALIAS_C
(
¥ód
);

573 
ssize_t
 
	$pwrôe
(, c⁄° *, 
size_t
, 
off_t
Ë
	`__DARWIN_ALIAS_C
(
pwrôe
);

576 #i‡!
	`deföed
(
_POSIX_C_SOURCE
) || _POSIX_C_SOURCE < 200112L

579 #i‡!
	`deföed
(
_POSIX_C_SOURCE
)

580 
__dïªˇãd


582 *
	`sbrk
();

585 #i‡
__DARWIN_UNIX03


586 
pid_t
 
	$£çgΩ
(Ë
	`__DARWIN_ALIAS
(
£çgΩ
);

588 
	`£çgΩ
(
pid_t
 
pid
,Öid_à
pgΩ
);

591 
	$£åegid
(
gid_t
, gid_tË
	`__DARWIN_ALIAS
(
£åegid
);

593 
	$£åeuid
(
uid_t
, uid_tË
	`__DARWIN_ALIAS
(
£åeuid
);

595 
	`swab
(c⁄° * 
__ª°ri˘
, * __ª°ri˘, 
ssize_t
);

596 
	`sync
();

597 
	`åunˇã
(c⁄° *, 
off_t
);

598 
u£c⁄ds_t
 
	`uÆ¨m
(useconds_t, useconds_t);

599 
	$u¶ìp
(
u£c⁄ds_t
Ë
	`__DARWIN_ALIAS_C
(
u¶ìp
);

600 
pid_t
 
	`vf‹k
();

603 
	$fsync
(Ë
	`__DARWIN_ALIAS_C
(
fsync
);

605 
	`·runˇã
(, 
off_t
);

606 
	`gëlogö_r
(*, 
size_t
);

607 
__END_DECLS


617 #i‡
__DARWIN_C_LEVEL
 >= 200112L

618 
__BEGIN_DECLS


619 
	`fchown
(, 
uid_t
, 
gid_t
);

620 
	`gëho°«me
(*, 
size_t
);

621 
ssize_t
 
	`ªadlök
(c⁄° * 
__ª°ri˘
, * __ª°ri˘, 
size_t
);

622 
	`£ãgid
(
gid_t
);

623 
	`£ãuid
(
uid_t
);

624 
	`symlök
(const *, const *);

625 
__END_DECLS


632 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


633 
	~<sys/£À˘.h
>

635 
	~<sys/_ty≥s/_dev_t.h
>

636 
	~<sys/_ty≥s/_mode_t.h
>

637 
	~<sys/_ty≥s/_uuid_t.h
>

639 
__BEGIN_DECLS


640 
	$_Exô
(Ë
__dód2
;

641 
	`ac˚ssx_≈
(c⁄° 
ac˚ssx_des¸ùt‹
 *, 
size_t
, *, 
uid_t
);

642 
	`ac˘
(const *);

643 
	`add_¥ofû
(*, 
size_t
, , );

644 
	`ídu£rshñl
();

645 
	`execvP
(const *, const *, * const *);

646 *
	`fÊag°o°r
();

647 
	`gëdomaö«me
(*, );

648 
	`gëgrou∂i°
(const *, , *, *);

649 #i‡
	`deföed
(
__has_ö˛ude
)

650 #i‡
	`__has_ö˛ude
(<
gëho°uuid_¥iv©e
.
h
>)

651 
	~<gëho°uuid_¥iv©e.h
>

653 
	~<gëho°uuid.h
>

656 
	~<gëho°uuid.h
>

658 
mode_t
 
	`gëmode
(const *, mode_t);

659 
	`gë≥îeid
(, 
uid_t
 *, 
gid_t
 *);

660 
	`gësgroups_≈
(*, 
uuid_t
);

661 *
	`gëu£rshñl
();

662 
	`gëwgroups_≈
(*, 
uuid_t
);

663 
	`öôgroups
(const *, );

664 
	`úu£rok
(, , const *, const *);

665 
	`úu£rok_ß
(const *, , , const *, const *);

666 
	`is£tugid
();

667 *
	`mkdãmp
(*);

668 
	`mknod
(c⁄° *, 
mode_t
, 
dev_t
);

669 
	$mk∑th_≈
(c⁄° *
∑th
, 
mode_t
 
omode
Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_8
, 
__IPHONE_5_0
);

670 
	`mk°emp
(*);

671 
	`mk°emps
(*, );

672 *
	`mkãmp
(*);

673 
	`nfssvc
(, *);

674 
	`¥ofû
(*, 
size_t
, , );

675 
	`±hªad_£tugid_≈
(
uid_t
, 
gid_t
);

676 
	`±hªad_gëugid_≈
–
uid_t
 *, 
gid_t
 *);

677 
	`rcmd
(**, , const *, const *, const *, *);

678 
	`rcmd_af
(**, , const *, const *, const *, *,

680 
	`ªboŸ
();

681 
	`ªvoke
(const *);

682 
	`ºesvp‹t
(*);

683 
	`ºesvp‹t_af
(*, );

684 
	`ru£rok
(const *, , const *, const *);

685 
	`£tdomaö«me
(const *, );

686 
	`£tgroups
(, c⁄° 
gid_t
 *);

687 
	`£tho°id
();

688 
	`£tho°«me
(const *, );

689 #i‡
__DARWIN_UNIX03


690 
	$£tkey
(c⁄° *Ë
	`__DARWIN_ALIAS
(
£tkey
);

692 
	`£tkey
(const *);

694 
	`£éogö
(const *);

695 *
	$£tmode
(c⁄° *Ë
	`__DARWIN_ALIAS_STARTING
(
__MAC_10_6
, 
__IPHONE_2_0
, 
	`__DARWIN_ALIAS
(
£tmode
));

696 
	`£ågid
(
gid_t
);

697 
	`£åuid
(
uid_t
);

698 
	`£tsgroups_≈
(, c⁄° 
uuid_t
);

699 
	`£tu£rshñl
();

700 
	`£twgroups_≈
(, c⁄° 
uuid_t
);

701 
	`°πofÊags
(**, *, *);

702 
	`sw≠⁄
(const *);

703 
	`sysˇŒ
(, ...);

704 
	`ây¶Ÿ
();

705 
	`undñëe
(const *);

706 
	`unwhôeout
(const *);

707 *
	`vÆloc
(
size_t
);

709 *
sub›èrg
;

710 
	`gësub›t
(**, * const *, **);

713 #ifde‡
__LP64__


714 
	$fgë©åli°
(,*,*,
size_t
,Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_0
);

715 
	$f£èâæi°
(,*,*,
size_t
,Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_0
);

716 
	$gë©åli°
(c⁄° *,*,*,
size_t
,Ë
	`__DARWIN_ALIAS
(
gë©åli°
);

717 
	$£èâæi°
(c⁄° *,*,*,
size_t
,Ë
	`__DARWIN_ALIAS
(
£èâæi°
);

718 
	`exch™ged©a
(const *,const *,);

719 
	`gëdúíåõßâr
(,*,*,
size_t
,*,*,*,);

722 
	$fgë©åli°
(,*,*,
size_t
,Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_0
);

723 
	$f£èâæi°
(,*,*,
size_t
,Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_0
);

724 
	$gë©åli°
(c⁄° *,*,*,
size_t
,Ë
	`__DARWIN_ALIAS
(
gë©åli°
);

725 
	$£èâæi°
(c⁄° *,*,*,
size_t
,Ë
	`__DARWIN_ALIAS
(
£èâæi°
);

726 
	`exch™ged©a
(const *,const *,);

727 
	`gëdúíåõßâr
(,*,*,
size_t
,*,*,*,);

731 
fs£¨chblock
;

732 
£¨ch°©e
;

734 
	`£¨chfs
(c⁄° *, 
fs£¨chblock
 *, *, , , 
£¨ch°©e
 *);

735 
	`fs˘l
(const *,,*,);

736 
	$ffs˘l
(,,*,Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_0
);

738 
	#SYNC_VOLUME_FULLSYNC
 0x01

	)

739 
	#SYNC_VOLUME_WAIT
 0x02

	)

741 
	$fsync_vﬁume_≈
(, Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_8
, 
__IPHONE_6_0
);

742 
	$sync_vﬁume_≈
(c⁄° *, Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_8
, 
__IPHONE_6_0
);

744 
›åe£t
;

746 
__END_DECLS


	@/usr/include/zlib.h

31 #i‚de‡
ZLIB_H


32 
	#ZLIB_H


	)

34 
	~"zc⁄f.h
"

35 #ifde‡
__APPLE__


36 
	~<Avaûabûôy.h
>

38 
	#__OSX_AVAILABLE_STARTING
(
x
,
y
Ë

	)

41 #ifde‡
__˝lu•lus


45 
	#ZLIB_VERSION
 "1.2.5"

	)

46 
	#ZLIB_VERNUM
 0x1250

	)

47 
	#ZLIB_VER_MAJOR
 1

	)

48 
	#ZLIB_VER_MINOR
 2

	)

49 
	#ZLIB_VER_REVISION
 5

	)

50 
	#ZLIB_VER_SUBREVISION
 0

	)

85 
voidpf
 (*
	tÆloc_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, 
	tuI¡
 
	tôems
, uI¡ 
	tsize
));

86 (*
‰ì_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, voidp‡
	taddªss
));

88 
öã∫Æ_°©e
;

90 
	sz_°ªam_s
 {

91 
Byãf
 *
√xt_ö
;

92 
uI¡
 
avaû_ö
;

93 
uL⁄g
 
tŸÆ_ö
;

95 
Byãf
 *
√xt_out
;

96 
uI¡
 
avaû_out
;

97 
uL⁄g
 
tŸÆ_out
;

99 *
msg
;

100 
öã∫Æ_°©e
 
FAR
 *
°©e
;

102 
Æloc_func
 
zÆloc
;

103 
‰ì_func
 
z‰ì
;

104 
voidpf
 
›aque
;

106 
d©a_ty≥
;

107 
uL⁄g
 
adÀr
;

108 
uL⁄g
 
ª£rved
;

109 } 
	tz_°ªam
;

111 
z_°ªam
 
	tFAR
 *
	tz_°ªamp
;

117 
	sgz_hódî_s
 {

118 
ãxt
;

119 
uL⁄g
 
time
;

120 
xÊags
;

121 
os
;

122 
Byãf
 *
exåa
;

123 
uI¡
 
exåa_Àn
;

124 
uI¡
 
exåa_max
;

125 
Byãf
 *
«me
;

126 
uI¡
 
«me_max
;

127 
Byãf
 *
commít
;

128 
uI¡
 
comm_max
;

129 
h¸c
;

130 
d⁄e
;

132 } 
	tgz_hódî
;

134 
gz_hódî
 
	tFAR
 *
	tgz_hódîp
;

169 
	#Z_NO_FLUSH
 0

	)

170 
	#Z_PARTIAL_FLUSH
 1

	)

171 
	#Z_SYNC_FLUSH
 2

	)

172 
	#Z_FULL_FLUSH
 3

	)

173 
	#Z_FINISH
 4

	)

174 
	#Z_BLOCK
 5

	)

175 
	#Z_TREES
 6

	)

178 
	#Z_OK
 0

	)

179 
	#Z_STREAM_END
 1

	)

180 
	#Z_NEED_DICT
 2

	)

181 
	#Z_ERRNO
 (-1)

	)

182 
	#Z_STREAM_ERROR
 (-2)

	)

183 
	#Z_DATA_ERROR
 (-3)

	)

184 
	#Z_MEM_ERROR
 (-4)

	)

185 
	#Z_BUF_ERROR
 (-5)

	)

186 
	#Z_VERSION_ERROR
 (-6)

	)

191 
	#Z_NO_COMPRESSION
 0

	)

192 
	#Z_BEST_SPEED
 1

	)

193 
	#Z_BEST_COMPRESSION
 9

	)

194 
	#Z_DEFAULT_COMPRESSION
 (-1)

	)

197 
	#Z_FILTERED
 1

	)

198 
	#Z_HUFFMAN_ONLY
 2

	)

199 
	#Z_RLE
 3

	)

200 
	#Z_FIXED
 4

	)

201 
	#Z_DEFAULT_STRATEGY
 0

	)

204 
	#Z_BINARY
 0

	)

205 
	#Z_TEXT
 1

	)

206 
	#Z_ASCII
 
Z_TEXT


	)

207 
	#Z_UNKNOWN
 2

	)

210 
	#Z_DEFLATED
 8

	)

213 
	#Z_NULL
 0

	)

215 
	#zlib_vîsi⁄
 
	`zlibVîsi⁄
()

	)

221 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zlibVîsi⁄
 
OF
(());

251 
ZEXTERN
 
ZEXPORT
 
deÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

357 
ZEXTERN
 
ZEXPORT
 
deÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

396 
ZEXTERN
 
ZEXPORT
 
öÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

504 
ZEXTERN
 
ZEXPORT
 
öÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

583 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

584 c⁄° 
Byãf
 *
di˘i⁄¨y
,

585 
uI¡
 
di˘Lígth
));

622 
ZEXTERN
 
ZEXPORT
 
deÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

623 
z_°ªamp
 
sour˚
));

640 
ZEXTERN
 
ZEXPORT
 
deÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

651 
ZEXTERN
 
ZEXPORT
 
deÊ©eP¨ams
 
OF
((
z_°ªamp
 
°rm
,

652 
Àvñ
,

653 
°øãgy
));

672 
ZEXTERN
 
ZEXPORT
 
deÊ©eTu√
 
OF
((
z_°ªamp
 
°rm
,

673 
good_Àngth
,

674 
max_œzy
,

675 
ni˚_Àngth
,

676 
max_chaö
));

689 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
deÊ©eBound
 
OF
((
z_°ªamp
 
°rm
,

690 
uL⁄g
 
sour˚Lí
));

699 
ZEXTERN
 
ZEXPORT
 
deÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

700 
bôs
,

701 
vÆue
));

715 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëHódî
 
OF
((
z_°ªamp
 
°rm
,

716 
gz_hódîp
 
hód
));

789 
ZEXTERN
 
ZEXPORT
 
öÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

790 c⁄° 
Byãf
 *
di˘i⁄¨y
,

791 
uI¡
 
di˘Lígth
));

811 
ZEXTERN
 
ZEXPORT
 
öÊ©eSync
 
OF
((
z_°ªamp
 
°rm
));

826 
ZEXTERN
 
ZEXPORT
 
öÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

827 
z_°ªamp
 
sour˚
));

842 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

852 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t2
 
OF
((
z_°ªamp
 
°rm
,

853 
wödowBôs
))

854 
__OSX_AVAILABLE_STARTING
(
__MAC_10_7
,
__IPHONE_5_0
);

865 
ZEXTERN
 
ZEXPORT
 
öÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

866 
bôs
,

867 
vÆue
));

886 
ZEXTERN
 
ZEXPORT
 
öÊ©eM¨k
 
OF
((
z_°ªamp
 
°rm
))

887 
__OSX_AVAILABLE_STARTING
(
__MAC_10_7
,
__IPHONE_5_0
);

915 
ZEXTERN
 
ZEXPORT
 
öÊ©eGëHódî
 
OF
((
z_°ªamp
 
°rm
,

916 
gz_hódîp
 
hód
));

977 (*
ö_func
Ë
	tOF
((
	tFAR
 *, FAR * FAR *));

978 (*
out_func
Ë
	tOF
((
	tFAR
 *, FAR *, ));

980 
ZEXTERN
 
ZEXPORT
 
öÊ©eBack
 
OF
((
z_°ªamp
 
°rm
,

981 
ö_func
 
ö
, 
FAR
 *
ö_desc
,

982 
out_func
 
out
, 
FAR
 *
out_desc
));

1049 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackEnd
 
OF
((
z_°ªamp
 
°rm
));

1057 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
zlibCompûeFœgs
 
OF
(());

1109 
ZEXTERN
 
ZEXPORT
 
com¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1110 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1123 
ZEXTERN
 
ZEXPORT
 
com¥ess2
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1124 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
,

1125 
Àvñ
));

1139 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
com¥essBound
 
OF
((uL⁄g 
sour˚Lí
));

1146 
ZEXTERN
 
ZEXPORT
 
uncom¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1147 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1172 
voidp
 
	tgzFûe
;

1197 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gzd›í
 
OF
((
fd
, c⁄° *
mode
));

1216 
ZEXTERN
 
ZEXPORT
 
gzbuf„r
 
OF
((
gzFûe
 
fûe
, 
size
))

1217 
__OSX_AVAILABLE_STARTING
(
__MAC_10_7
,
__IPHONE_5_0
);

1234 
ZEXTERN
 
ZEXPORT
 
gz£ç¨ams
 
OF
((
gzFûe
 
fûe
, 
Àvñ
, 
°øãgy
));

1243 
ZEXTERN
 
ZEXPORT
 
gzªad
 
OF
((
gzFûe
 
fûe
, 
voidp
 
buf
, 
Àn
));

1259 
ZEXTERN
 
ZEXPORT
 
gzwrôe
 
OF
((
gzFûe
 
fûe
,

1260 
voidpc
 
buf
, 
Àn
));

1267 
ZEXTERN
 
ZEXPORTVA
 
gz¥ötf
 
OF
((
gzFûe
 
fûe
, c⁄° *
f‹m©
, ...));

1282 
ZEXTERN
 
ZEXPORT
 
gzputs
 
OF
((
gzFûe
 
fûe
, c⁄° *
s
));

1290 
ZEXTERN
 * 
ZEXPORT
 
gzgës
 
OF
((
gzFûe
 
fûe
, *
buf
, 
Àn
));

1303 
ZEXTERN
 
ZEXPORT
 
gzputc
 
OF
((
gzFûe
 
fûe
, 
c
));

1309 
ZEXTERN
 
ZEXPORT
 
gzgëc
 
OF
((
gzFûe
 
fûe
));

1315 
ZEXTERN
 
ZEXPORT
 
gzungëc
 
OF
((
c
, 
gzFûe
 
fûe
));

1327 
ZEXTERN
 
ZEXPORT
 
gzÊush
 
OF
((
gzFûe
 
fûe
, 
Êush
));

1362 
ZEXTERN
 
ZEXPORT
 
gzªwöd
 
OF
((
gzFûe
 
fûe
));

1390 
ZEXTERN
 
ZEXPORT
 
gzeof
 
OF
((
gzFûe
 
fûe
));

1405 
ZEXTERN
 
ZEXPORT
 
gzdúe˘
 
OF
((
gzFûe
 
fûe
));

1421 
ZEXTERN
 
ZEXPORT
 
gz˛o£
 
OF
((
gzFûe
 
fûe
));

1433 
ZEXTERN
 
ZEXPORT
 
gz˛o£_r
 
OF
((
gzFûe
 
fûe
))

1434 
__OSX_AVAILABLE_STARTING
(
__MAC_10_7
,
__IPHONE_5_0
);

1435 
ZEXTERN
 
ZEXPORT
 
gz˛o£_w
 
OF
((
gzFûe
 
fûe
))

1436 
__OSX_AVAILABLE_STARTING
(
__MAC_10_7
,
__IPHONE_5_0
);

1451 
ZEXTERN
 c⁄° * 
ZEXPORT
 
gzîr‹
 
OF
((
gzFûe
 
fûe
, *
î∫um
));

1467 
ZEXTERN
 
ZEXPORT
 
gz˛óªº
 
OF
((
gzFûe
 
fûe
));

1483 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32
 
OF
((uL⁄g 
adÀr
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1512 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32
 
OF
((uL⁄g 
¸c
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1546 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
,

1547 c⁄° *
vîsi⁄
, 
°ªam_size
));

1548 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
,

1549 c⁄° *
vîsi⁄
, 
°ªam_size
));

1550 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
, 
mëhod
,

1551 
wödowBôs
, 
memLevñ
,

1552 
°øãgy
, c⁄° *
vîsi⁄
,

1553 
°ªam_size
));

1554 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1555 c⁄° *
vîsi⁄
, 
°ªam_size
));

1556 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackInô_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1557 
FAR
 *
wödow
,

1558 c⁄° *
vîsi⁄
,

1559 
°ªam_size
));

1560 
	#deÊ©eInô
(
°rm
, 
Àvñ
) \

1561 
	`deÊ©eInô_
((
°rm
), (
Àvñ
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1562 
	#öÊ©eInô
(
°rm
) \

1563 
	`öÊ©eInô_
((
°rm
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1564 
	#deÊ©eInô2
(
°rm
, 
Àvñ
, 
mëhod
, 
wödowBôs
, 
memLevñ
, 
°øãgy
) \

1565 
	`deÊ©eInô2_
((
°rm
),(
Àvñ
),(
mëhod
),(
wödowBôs
),(
memLevñ
),\

1566 (
°øãgy
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1567 
	#öÊ©eInô2
(
°rm
, 
wödowBôs
) \

1568 
	`öÊ©eInô2_
((
°rm
), (
wödowBôs
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1569 
	#öÊ©eBackInô
(
°rm
, 
wödowBôs
, 
wödow
) \

1570 
	`öÊ©eBackInô_
((
°rm
), (
wödowBôs
), (
wödow
), \

1571 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1579 #i‡
deföed
(
_LARGEFILE64_SOURCE
Ë&& 
_LFS64_LARGEFILE
-0

1580 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1581 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, z_off64_t, ));

1582 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1583 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gzoff£t64
 
OF
((
gzFûe
));

1584 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1585 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1588 #i‡!
deföed
(
ZLIB_INTERNAL
Ë&& 
_FILE_OFFSET_BITS
-0 =64 && 
_LFS64_LARGEFILE
-0

1589 
	#gz›í
 
gz›í64


	)

1590 
	#gz£ek
 
gz£ek64


	)

1591 
	#gzãŒ
 
gzãŒ64


	)

1592 
	#gzoff£t
 
gzoff£t64


	)

1593 
	#adÀr32_comböe
 
adÀr32_comböe64


	)

1594 
	#¸c32_comböe
 
¸c32_comböe64


	)

1595 #ifde‡
_LARGEFILE64_SOURCE


1596 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1597 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, z_off_t, ));

1598 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1599 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzoff£t64
 
OF
((
gzFûe
));

1600 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1601 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1604 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í
 
OF
((const *, const *));

1605 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gz£ek
 
OF
((
gzFûe
, z_off_t, ));

1606 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzãŒ
 
OF
((
gzFûe
));

1607 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzoff£t
 
OF
((
gzFûe
))

1608 
__OSX_AVAILABLE_STARTING
(
__MAC_10_7
,
__IPHONE_5_0
);

1609 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1610 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1614 #i‡!
deföed
(
ZUTIL_H
Ë&& !deföed(
NO_DUMMY_DECL
)

1615 
	söã∫Æ_°©e
 {
dummy
;};

1619 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zEº‹
 
OF
(());

1620 
ZEXTERN
 
ZEXPORT
 
öÊ©eSyncPoöt
 
OF
((
z_°ªamp
));

1621 
ZEXTERN
 c⁄° 
uL⁄gf
 * 
ZEXPORT
 
gë_¸c_èbÀ
 
OF
(());

1622 
ZEXTERN
 
ZEXPORT
 
öÊ©eUndîmöe
 
OF
((
z_°ªamp
, ))

1623 
__OSX_AVAILABLE_STARTING
(
__MAC_10_7
,
__IPHONE_5_0
);

1625 #ifde‡
__˝lu•lus


	@/usr/include/Availability.h

24 #i‚de‡
__AVAILABILITY__


25 
	#__AVAILABILITY__


	)

119 
	#__MAC_10_0
 1000

	)

120 
	#__MAC_10_1
 1010

	)

121 
	#__MAC_10_2
 1020

	)

122 
	#__MAC_10_3
 1030

	)

123 
	#__MAC_10_4
 1040

	)

124 
	#__MAC_10_5
 1050

	)

125 
	#__MAC_10_6
 1060

	)

126 
	#__MAC_10_7
 1070

	)

127 
	#__MAC_10_8
 1080

	)

128 
	#__MAC_10_9
 1090

	)

131 
	#__IPHONE_2_0
 20000

	)

132 
	#__IPHONE_2_1
 20100

	)

133 
	#__IPHONE_2_2
 20200

	)

134 
	#__IPHONE_3_0
 30000

	)

135 
	#__IPHONE_3_1
 30100

	)

136 
	#__IPHONE_3_2
 30200

	)

137 
	#__IPHONE_4_0
 40000

	)

138 
	#__IPHONE_4_1
 40100

	)

139 
	#__IPHONE_4_2
 40200

	)

140 
	#__IPHONE_4_3
 40300

	)

141 
	#__IPHONE_5_0
 50000

	)

142 
	#__IPHONE_5_1
 50100

	)

143 
	#__IPHONE_6_0
 60000

	)

144 
	#__IPHONE_6_1
 60100

	)

145 
	#__IPHONE_7_0
 70000

	)

148 
	~<AvaûabûôyI¡î«l.h
>

151 #ifde‡
__IPHONE_OS_VERSION_MIN_REQUIRED


152 
	#__OSX_AVAILABLE_STARTING
(
_osx
, 
_ios
Ë
__AVAILABILITY_INTERNAL
##
	)
_ios

153 
	#__OSX_AVAILABLE_BUT_DEPRECATED
(
_osxI¡ro
, 
_osxDï
, 
_iosI¡ro
, 
_iosDï
) \

154 
__AVAILABILITY_INTERNAL
##
_iosI¡ro
##
_DEP
##
_iosDï


	)

155 
	#__OSX_AVAILABLE_BUT_DEPRECATED_MSG
(
_osxI¡ro
, 
_osxDï
, 
_iosI¡ro
, 
_iosDï
, 
_msg
) \

156 
__AVAILABILITY_INTERNAL
##
_iosI¡ro
##
_DEP
##
_iosDï
##
	`_MSG
(
_msg
)

	)

158 #ñi‡
deföed
(
__MAC_OS_X_VERSION_MIN_REQUIRED
)

159 
	#__OSX_AVAILABLE_STARTING
(
_osx
, 
_ios
Ë
__AVAILABILITY_INTERNAL
##
	)
_osx

160 
	#__OSX_AVAILABLE_BUT_DEPRECATED
(
_osxI¡ro
, 
_osxDï
, 
_iosI¡ro
, 
_iosDï
) \

161 
__AVAILABILITY_INTERNAL
##
_osxI¡ro
##
_DEP
##
_osxDï


	)

162 
	#__OSX_AVAILABLE_BUT_DEPRECATED_MSG
(
_osxI¡ro
, 
_osxDï
, 
_iosI¡ro
, 
_iosDï
, 
_msg
) \

163 
__AVAILABILITY_INTERNAL
##
_osxI¡ro
##
_DEP
##
_osxDï
##
	`_MSG
(
_msg
)

	)

166 
	#__OSX_AVAILABLE_STARTING
(
_osx
, 
_ios
)

	)

167 
	#__OSX_AVAILABLE_BUT_DEPRECATED
(
_osxI¡ro
, 
_osxDï
, 
_iosI¡ro
, 
_iosDï
)

	)

168 
	#__OSX_AVAILABLE_BUT_DEPRECATED_MSG
(
_osxI¡ro
, 
_osxDï
, 
_iosI¡ro
, 
_iosDï
, 
_msg
)

	)

	@/usr/include/_structs.h

24 
	~<sys/_°ru˘s.h
>

	@/usr/include/_types.h

24 #i‚de‡
__TYPES_H_


25 
	#__TYPES_H_


	)

27 
	~<sys/_ty≥s.h
>

29 #i‡
__GNUC__
 > 2 || __GNUC__ =2 && 
__GNUC_MINOR__
 >= 7

30 
	#__°rfm⁄like
(
fmèrg
, 
fú°v¨¨g
) \

31 
	`__©åibuã__
((
	`__f‹m©__
 (
__°rfm⁄__
, 
fmèrg
, 
fú°v¨¨g
)))

	)

32 
	#__°r·imñike
(
fmèrg
) \

33 
	`__©åibuã__
((
	`__f‹m©__
 (
__°r·ime__
, 
fmèrg
, 0)))

	)

35 
	#__°rfm⁄like
(
fmèrg
, 
fú°v¨¨g
)

	)

36 
	#__°r·imñike
(
fmèrg
)

	)

39 
	t__d¨wö_∆_ôem
;

40 
	t__d¨wö_w˘øns_t
;

41 #ifde‡
__LP64__


42 
__uöt32_t
 
	t__d¨wö_w˘y≥_t
;

44 
	t__d¨wö_w˘y≥_t
;

47 #ifde‡
__WCHAR_MAX__


48 
	#__DARWIN_WCHAR_MAX
 
__WCHAR_MAX__


	)

50 
	#__DARWIN_WCHAR_MAX
 0x7fffffff

	)

53 #i‡
__DARWIN_WCHAR_MAX
 > 0xffffU

54 
	#__DARWIN_WCHAR_MIN
 (-0x7ffffff‡- 1)

	)

56 
	#__DARWIN_WCHAR_MIN
 0

	)

58 
	#__DARWIN_WEOF
 ((
__d¨wö_wöt_t
)-1)

	)

60 #i‚de‡
_FORTIFY_SOURCE


61 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && ((__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__-0) < 1050)

62 
	#_FORTIFY_SOURCE
 0

	)

64 
	#_FORTIFY_SOURCE
 2

	)

	@/usr/include/_types/_intmax_t.h

29 #i‚de‡
_INTMAX_T


30 
	#_INTMAX_T


	)

31 #ifde‡
__INTMAX_TYPE__


32 
__INTMAX_TYPE__
 
	tötmax_t
;

34 #ifde‡
__LP64__


35 
	tötmax_t
;

37 
	tötmax_t
;

	@/usr/include/_types/_uint16_t.h

29 #i‚de‡
_UINT16_T


30 
	#_UINT16_T


	)

31 
	tuöt16_t
;

	@/usr/include/_types/_uint32_t.h

29 #i‚de‡
_UINT32_T


30 
	#_UINT32_T


	)

31 
	tuöt32_t
;

	@/usr/include/_types/_uint64_t.h

29 #i‚de‡
_UINT64_T


30 
	#_UINT64_T


	)

31 
	tuöt64_t
;

	@/usr/include/_types/_uint8_t.h

29 #i‚de‡
_UINT8_T


30 
	#_UINT8_T


	)

31 
	tuöt8_t
;

	@/usr/include/_types/_uintmax_t.h

29 #i‚de‡
_UINTMAX_T


30 
	#_UINTMAX_T


	)

31 #ifde‡
__UINTMAX_TYPE__


32 
__UINTMAX_TYPE__
 
	tuötmax_t
;

34 #ifde‡
__LP64__


35 
	tuötmax_t
;

37 
	tuötmax_t
;

	@/usr/include/_xlocale.h

24 #i‚de‡
__XLOCALE_H_


25 
	#__XLOCALE_H_


	)

27 
	~<sys/cdefs.h
>

29 
__BEGIN_DECLS


30 
___mb_cur_max
();

31 
___mb_cur_max_l
(
loˇÀ_t
);

32 
	g__END_DECLS


	@/usr/include/alloca.h

24 #i‚de‡
_ALLOCA_H_


25 
	#_ALLOCA_H_


	)

27 
	~<sys/cdefs.h
>

28 
	~<_ty≥s.h
>

29 
	~<sys/_ty≥s/_size_t.h
>

31 
__BEGIN_DECLS


32 *
Æloˇ
(
size_t
);

33 
	g__END_DECLS


35 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

37 #unde‡
Æloˇ


38 #unde‡
__Æloˇ


39 
	#Æloˇ
(
size
Ë
	`__Æloˇ
(size)

	)

40 
	#__Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
(size)

	)

	@/usr/include/gethostuuid.h

29 #i‚de‡
__GETHOSTUUID_H


30 
	#__GETHOSTUUID_H


	)

32 
	~<sys/_ty≥s/_time•ec.h
>

33 
	~<sys/_ty≥s/_uuid_t.h
>

34 
	~<Avaûabûôy.h
>

36 #i‡
deföed
(
__IPHONE_OS_VERSION_MIN_REQUIRED
Ë&& (__IPHONE_OS_VERSION_MIN_REQUIRED < 
__IPHONE_7_0
)

37 
	$gëho°uuid
(
uuid_t
, c⁄° 
time•ec
 *Ë
	`__OSX_AVAILABLE_BUT_DEPRECATED_MSG
(
__MAC_NA
, __MAC_NA, 
__IPHONE_2_0
, 
__IPHONE_5_0
, "gethostuuid() isÇoÜonger supported");

39 
	$gëho°uuid
(
uuid_t
, c⁄° 
time•ec
 *Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_NA
);

	@/usr/include/i386/endian.h

66 #i‚de‡
_I386__ENDIAN_H_


67 
	#_I386__ENDIAN_H_


	)

69 
	~<sys/cdefs.h
>

78 
	#_QUAD_HIGHWORD
 1

	)

79 
	#_QUAD_LOWWORD
 0

	)

85 
	#__DARWIN_LITTLE_ENDIAN
 1234

	)

86 
	#__DARWIN_BIG_ENDIAN
 4321

	)

87 
	#__DARWIN_PDP_ENDIAN
 3412

	)

89 
	#__DARWIN_BYTE_ORDER
 
__DARWIN_LITTLE_ENDIAN


	)

91 #if 
deföed
(
KERNEL
Ë|| (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

93 
	#LITTLE_ENDIAN
 
__DARWIN_LITTLE_ENDIAN


	)

94 
	#BIG_ENDIAN
 
__DARWIN_BIG_ENDIAN


	)

95 
	#PDP_ENDIAN
 
__DARWIN_PDP_ENDIAN


	)

97 
	#BYTE_ORDER
 
__DARWIN_BYTE_ORDER


	)

99 
	~<sys/_ídün.h
>

	@/usr/include/machine/_limits.h

28 #i‚de‡
_BSD_MACHINE__LIMITS_H_


29 
	#_BSD_MACHINE__LIMITS_H_


	)

31 #i‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

32 
	~"i386/_limôs.h
"

34 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/machine/_param.h

28 #i‡
deföed
 (
__i386__
Ë|| deföed (
__x86_64__
)

29 
	~"i386/_∑øm.h
"

31 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/machine/limits.h

5 #i‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

6 
	~<i386/limôs.h
>

8 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/machine/types.h

31 #i‚de‡
_BSD_MACHINE_TYPES_H_


32 
	#_BSD_MACHINE_TYPES_H_


	)

34 #i‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

35 
	~"i386/ty≥s.h
"

37 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/netinet6/in6.h

93 #i‚de‡
__KAME_NETINET_IN_H_INCLUDED_


98 #i‚de‡
_NETINET6_IN6_H_


99 
	#_NETINET6_IN6_H_


	)

100 
	~<sys/≠∂ópi›ts.h
>

101 
	~<sys/_ty≥s.h
>

103 
	~<sys/_ty≥s/_ß_Ámûy_t.h
>

110 
	#__KAME__


	)

111 
	#__KAME_VERSION
 "2009/≠∂e-d¨wö"

	)

113 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

142 
	#IPV6PORT_RESERVED
 1024

	)

143 
	#IPV6PORT_ANONMIN
 49152

	)

144 
	#IPV6PORT_ANONMAX
 65535

	)

145 
	#IPV6PORT_RESERVEDMIN
 600

	)

146 
	#IPV6PORT_RESERVEDMAX
 (
IPV6PORT_RESERVED
-1)

	)

152 
	sö6_addr
 {

154 
__uöt8_t
 
	m__u6_addr8
[16];

155 
__uöt16_t
 
	m__u6_addr16
[8];

156 
__uöt32_t
 
	m__u6_addr32
[4];

157 } 
	m__u6_addr
;

160 
	#s6_addr
 
__u6_addr
.
__u6_addr8


	)

162 
	#INET6_ADDRSTRLEN
 46

	)

167 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

168 
	#SIN6_LEN


	)

170 
	ssockaddr_ö6
 {

171 
__uöt8_t
 
	msö6_Àn
;

172 
ß_Ámûy_t
 
	msö6_Ámûy
;

173 
ö_p‹t_t
 
	msö6_p‹t
;

174 
__uöt32_t
 
	msö6_Êowöfo
;

175 
ö6_addr
 
	msö6_addr
;

176 
__uöt32_t
 
	msö6_sc›e_id
;

185 
	#IN6ADDR_ANY_INIT
 \

187 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }}}

	)

188 
	#IN6ADDR_LOOPBACK_INIT
 \

190 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }}}

	)

191 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

192 
	#IN6ADDR_NODELOCAL_ALLNODES_INIT
 \

194 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }}}

	)

195 
	#IN6ADDR_INTFACELOCAL_ALLNODES_INIT
 \

197 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }}}

	)

198 
	#IN6ADDR_LINKLOCAL_ALLNODES_INIT
 \

200 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }}}

	)

201 
	#IN6ADDR_LINKLOCAL_ALLROUTERS_INIT
 \

203 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02 }}}

	)

204 
	#IN6ADDR_LINKLOCAL_ALLV2ROUTERS_INIT
 \

206 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16 }}}

	)

207 
	#IN6ADDR_V4MAPPED_INIT
 \

209 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00 }}}

	)

212 c⁄° 
ö6_addr
 
ö6addr_™y
;

213 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

214 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

215 c⁄° 
ö6_addr
 
ö6addr_nodñoˇl_Æ odes
;

216 c⁄° 
ö6_addr
 
ö6addr_lökloˇl_Æ odes
;

217 c⁄° 
ö6_addr
 
ö6addr_lökloˇl_ÆÃouãrs
;

218 c⁄° 
ö6_addr
 
ö6addr_lökloˇl_Ælv2rouãrs
;

227 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

228 
	#IN6_ARE_ADDR_EQUAL
(
a
, 
b
) \

229 (
	`memcmp
(&(
a
)->
s6_addr
[0], &(
b
)->s6_addr[0],  (
ö6_addr
)) \

230 =0)

	)

237 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

238 ((*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[0]) == 0) && \

239 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[4]) == 0) && \

240 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[8]) == 0) && \

241 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[12]Ë=0))

	)

246 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

247 ((*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[0]) == 0) && \

248 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[4]) == 0) && \

249 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[8]) == 0) && \

250 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[12]Ë=
	`¡ohl
(1)))

	)

255 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

256 ((*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[0]) == 0) && \

257 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[4]) == 0) && \

258 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[8]) == 0) && \

259 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[12]) != 0) && \

260 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[12]Ë!
	`¡ohl
(1)))

	)

265 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

266 ((*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[0]) == 0) && \

267 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[4]) == 0) && \

268 (*(c⁄° 
__uöt32_t
 *)(c⁄° *)(&(
a
)->
s6_addr
[8]) == \

269 
	`¡ohl
(0x0000ffff)))

	)

274 
	#IN6_IS_ADDR_6TO4
(
x
Ë(
	`¡ohs
((x)->
s6_addr16
[0]Ë=0x2002)

	)

280 
	#__IPV6_ADDR_SCOPE_NODELOCAL
 0x01

	)

281 
	#__IPV6_ADDR_SCOPE_INTFACELOCAL
 0x01

	)

282 
	#__IPV6_ADDR_SCOPE_LINKLOCAL
 0x02

	)

283 
	#__IPV6_ADDR_SCOPE_SITELOCAL
 0x05

	)

284 
	#__IPV6_ADDR_SCOPE_ORGLOCAL
 0x08

	)

285 
	#__IPV6_ADDR_SCOPE_GLOBAL
 0x0e

	)

291 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

292 (((
a
)->
s6_addr
[0] =0x„Ë&& ((◊)->s6_addr[1] & 0xc0Ë=0x80))

	)

293 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

294 (((
a
)->
s6_addr
[0] =0x„Ë&& ((◊)->s6_addr[1] & 0xc0Ë=0xc0))

	)

299 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(◊)->
s6_addr
[0] =0xff)

	)

304 
	#IN6_IS_ADDR_UNIQUE_LOCAL
(
a
) \

305 (((
a
)->
s6_addr
[0] =0xfcË|| (◊)->s6_addr[0] =0xfd))

	)

307 
	#__IPV6_ADDR_MC_SCOPE
(
a
Ë(◊)->
s6_addr
[1] & 0x0f)

	)

312 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

313 (
	`IN6_IS_ADDR_MULTICAST
(
a
) && \

314 (
	`__IPV6_ADDR_MC_SCOPE
(
a
Ë=
__IPV6_ADDR_SCOPE_NODELOCAL
))

	)

315 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

316 (
	`IN6_IS_ADDR_MULTICAST
(
a
) && \

317 (
	`__IPV6_ADDR_MC_SCOPE
(
a
Ë=
__IPV6_ADDR_SCOPE_LINKLOCAL
))

	)

318 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

319 (
	`IN6_IS_ADDR_MULTICAST
(
a
) && \

320 (
	`__IPV6_ADDR_MC_SCOPE
(
a
Ë=
__IPV6_ADDR_SCOPE_SITELOCAL
))

	)

321 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

322 (
	`IN6_IS_ADDR_MULTICAST
(
a
) && \

323 (
	`__IPV6_ADDR_MC_SCOPE
(
a
Ë=
__IPV6_ADDR_SCOPE_ORGLOCAL
))

	)

324 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

325 (
	`IN6_IS_ADDR_MULTICAST
(
a
) && \

326 (
	`__IPV6_ADDR_MC_SCOPE
(
a
Ë=
__IPV6_ADDR_SCOPE_GLOBAL
))

	)

336 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

359 #i‡
deföed
(
__APPLE_USE_RFC_3542
Ë&& deföed(
__APPLE_USE_RFC_2292
)

364 
	#IPV6_OPTIONS
 1

	)

365 
	#IPV6_RECVOPTS
 5

	)

366 
	#IPV6_RECVRETOPTS
 6

	)

367 
	#IPV6_RECVDSTADDR
 7

	)

368 
	#IPV6_RETOPTS
 8

	)

370 
	#IPV6_SOCKOPT_RESERVED1
 3

	)

372 
	#IPV6_UNICAST_HOPS
 4

	)

373 
	#IPV6_MULTICAST_IF
 9

	)

374 
	#IPV6_MULTICAST_HOPS
 10

	)

375 
	#IPV6_MULTICAST_LOOP
 11

	)

376 
	#IPV6_JOIN_GROUP
 12

	)

377 
	#IPV6_LEAVE_GROUP
 13

	)

379 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

380 
	#IPV6_PORTRANGE
 14

	)

381 
	#ICMP6_FILTER
 18

	)

382 
	#IPV6_2292PKTINFO
 19

	)

383 
	#IPV6_2292HOPLIMIT
 20

	)

384 
	#IPV6_2292NEXTHOP
 21

	)

385 
	#IPV6_2292HOPOPTS
 22

	)

386 
	#IPV6_2292DSTOPTS
 23

	)

387 
	#IPV6_2292RTHDR
 24

	)

390 
	#IPV6_2292PKTOPTIONS
 25

	)

392 #ifde‡
__APPLE_USE_RFC_2292


393 
	#IPV6_PKTINFO
 
IPV6_2292PKTINFO


	)

394 
	#IPV6_HOPLIMIT
 
IPV6_2292HOPLIMIT


	)

395 
	#IPV6_NEXTHOP
 
IPV6_2292NEXTHOP


	)

396 
	#IPV6_HOPOPTS
 
IPV6_2292HOPOPTS


	)

397 
	#IPV6_DSTOPTS
 
IPV6_2292DSTOPTS


	)

398 
	#IPV6_RTHDR
 
IPV6_2292RTHDR


	)

399 
	#IPV6_PKTOPTIONS
 
IPV6_2292PKTOPTIONS


	)

402 
	#IPV6_CHECKSUM
 26

	)

404 
	#IPV6_V6ONLY
 27

	)

405 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

406 
	#IPV6_BINDV6ONLY
 
IPV6_V6ONLY


	)

410 
	#IPV6_IPSEC_POLICY
 28

	)

412 
	#IPV6_FAITH
 29

	)

415 
	#IPV6_FW_ADD
 30

	)

416 
	#IPV6_FW_DEL
 31

	)

417 
	#IPV6_FW_FLUSH
 32

	)

418 
	#IPV6_FW_ZERO
 33

	)

419 
	#IPV6_FW_GET
 34

	)

427 
	#IPV6_RECVTCLASS
 35

	)

428 
	#IPV6_TCLASS
 36

	)

430 #ifde‡
__APPLE_USE_RFC_3542


438 
	#IPV6_RTHDRDSTOPTS
 57

	)

446 
	#IPV6_RECVPKTINFO
 61

	)

448 
	#IPV6_RECVHOPLIMIT
 37

	)

449 
	#IPV6_RECVRTHDR
 38

	)

450 
	#IPV6_RECVHOPOPTS
 39

	)

451 
	#IPV6_RECVDSTOPTS
 40

	)

453 
	#IPV6_USE_MIN_MTU
 42

	)

454 
	#IPV6_RECVPATHMTU
 43

	)

460 
	#IPV6_PATHMTU
 44

	)

464 
	#IPV6_REACHCONF
 45

	)

467 
	#IPV6_3542PKTINFO
 46

	)

468 
	#IPV6_3542HOPLIMIT
 47

	)

469 
	#IPV6_3542NEXTHOP
 48

	)

470 
	#IPV6_3542HOPOPTS
 49

	)

471 
	#IPV6_3542DSTOPTS
 50

	)

472 
	#IPV6_3542RTHDR
 51

	)

474 
	#IPV6_PKTINFO
 
IPV6_3542PKTINFO


	)

475 
	#IPV6_HOPLIMIT
 
IPV6_3542HOPLIMIT


	)

476 
	#IPV6_NEXTHOP
 
IPV6_3542NEXTHOP


	)

477 
	#IPV6_HOPOPTS
 
IPV6_3542HOPOPTS


	)

478 
	#IPV6_DSTOPTS
 
IPV6_3542DSTOPTS


	)

479 
	#IPV6_RTHDR
 
IPV6_3542RTHDR


	)

481 
	#IPV6_AUTOFLOWLABEL
 59

	)

483 
	#IPV6_DONTFRAG
 62

	)

486 
	#IPV6_PREFER_TEMPADDR
 63

	)

492 
	#IPV6_MSFILTER
 74

	)

495 
	#IPV6_BOUND_IF
 125

	)

500 
	#IPV6_RTHDR_LOOSE
 0

	)

501 
	#IPV6_RTHDR_STRICT
 1

	)

502 
	#IPV6_RTHDR_TYPE_0
 0

	)

507 
	#IPV6_DEFAULT_MULTICAST_HOPS
 1

	)

508 
	#IPV6_DEFAULT_MULTICAST_LOOP
 1

	)

515 
	#IPV6_MIN_MEMBERSHIPS
 31

	)

516 
	#IPV6_MAX_MEMBERSHIPS
 4095

	)

522 
	#IPV6_MAX_GROUP_SRC_FILTER
 512

	)

523 
	#IPV6_MAX_SOCK_SRC_FILTER
 128

	)

528 
	sùv6_mªq
 {

529 
ö6_addr
 
	mùv6mr_mu…üddr
;

530 
	mùv6mr_öãrÁ˚
;

536 
	sö6_pktöfo
 {

537 
ö6_addr
 
	mùi6_addr
;

538 
	mùi6_ifödex
;

544 
	sù6_mtuöfo
 {

545 
sockaddr_ö6
 
	mù6m_addr
;

546 
uöt32_t
 
	mù6m_mtu
;

553 
	#IPV6_PORTRANGE_DEFAULT
 0

	)

554 
	#IPV6_PORTRANGE_HIGH
 1

	)

555 
	#IPV6_PORTRANGE_LOW
 2

	)

563 
	#IPV6PROTO_MAXID
 (
IPPROTO_PIM
 + 1Ë

	)

568 
	#IPV6CTL_FORWARDING
 1

	)

569 
	#IPV6CTL_SENDREDIRECTS
 2

	)

570 
	#IPV6CTL_DEFHLIM
 3

	)

571 #ifde‡
nŸyë


572 
	#IPV6CTL_DEFMTU
 4

	)

574 
	#IPV6CTL_FORWSRCRT
 5

	)

575 
	#IPV6CTL_STATS
 6

	)

576 
	#IPV6CTL_MRTSTATS
 7

	)

577 
	#IPV6CTL_MRTPROTO
 8

	)

578 
	#IPV6CTL_MAXFRAGPACKETS
 9

	)

579 
	#IPV6CTL_SOURCECHECK
 10

	)

580 
	#IPV6CTL_SOURCECHECK_LOGINT
 11

	)

581 
	#IPV6CTL_ACCEPT_RTADV
 12

	)

582 
	#IPV6CTL_KEEPFAITH
 13

	)

583 
	#IPV6CTL_LOG_INTERVAL
 14

	)

584 
	#IPV6CTL_HDRNESTLIMIT
 15

	)

585 
	#IPV6CTL_DAD_COUNT
 16

	)

586 
	#IPV6CTL_AUTO_FLOWLABEL
 17

	)

587 
	#IPV6CTL_DEFMCASTHLIM
 18

	)

588 
	#IPV6CTL_GIF_HLIM
 19

	)

589 
	#IPV6CTL_KAME_VERSION
 20

	)

590 
	#IPV6CTL_USE_DEPRECATED
 21

	)

591 
	#IPV6CTL_RR_PRUNE
 22

	)

593 
	#IPV6CTL_MAPPED_ADDR
 23

	)

595 
	#IPV6CTL_V6ONLY
 24

	)

596 
	#IPV6CTL_RTEXPIRE
 25

	)

597 
	#IPV6CTL_RTMINEXPIRE
 26

	)

598 
	#IPV6CTL_RTMAXCACHE
 27

	)

600 
	#IPV6CTL_USETEMPADDR
 32

	)

601 
	#IPV6CTL_TEMPPLTIME
 33

	)

602 
	#IPV6CTL_TEMPVLTIME
 34

	)

603 
	#IPV6CTL_AUTO_LINKLOCAL
 35

	)

604 
	#IPV6CTL_RIP6STATS
 36

	)

605 
	#IPV6CTL_PREFER_TEMPADDR
 37

	)

606 
	#IPV6CTL_ADDRCTLPOLICY
 38

	)

607 
	#IPV6CTL_USE_DEFAULTZONE
 39

	)

609 
	#IPV6CTL_MAXFRAGS
 41

	)

610 
	#IPV6CTL_MCAST_PMTU
 44

	)

612 
	#IPV6CTL_NEIGHBORGCTHRESH
 46

	)

613 
	#IPV6CTL_MAXIFPREFIXES
 47

	)

614 
	#IPV6CTL_MAXIFDEFROUTERS
 48

	)

615 
	#IPV6CTL_MAXDYNROUTES
 49

	)

616 
	#ICMPV6CTL_ND6_ONLINKNSRFC4861
 50

	)

620 
	#IPV6CTL_MAXID
 51

	)

624 
__BEGIN_DECLS


625 
	gcmsghdr
;

627 
öë6_›ti⁄_•a˚
();

628 
öë6_›ti⁄_öô
(*, 
cmsghdr
 **, );

629 
öë6_›ti⁄_≠≥nd
(
cmsghdr
 *, c⁄° 
__uöt8_t
 *, , );

630 
__uöt8_t
 *
öë6_›ti⁄_Æloc
(
cmsghdr
 *, , , );

631 
öë6_›ti⁄_√xt
(c⁄° 
cmsghdr
 *, 
__uöt8_t
 **);

632 
öë6_›ti⁄_föd
(c⁄° 
cmsghdr
 *, 
__uöt8_t
 **, );

634 
size_t
 
öë6_πhdr_•a˚
(, );

635 
cmsghdr
 *
öë6_πhdr_öô
(*, );

636 
öë6_πhdr_add
(
cmsghdr
 *, c⁄° 
ö6_addr
 *,

638 
öë6_πhdr_œ°h›
(
cmsghdr
 *, );

640 
öë6_πhdr_ªvî£
(c⁄° 
cmsghdr
 *, cmsghdr *);

642 
öë6_πhdr_£gmíts
(c⁄° 
cmsghdr
 *);

643 
ö6_addr
 *
öë6_πhdr_gëaddr
(
cmsghdr
 *, );

644 
öë6_πhdr_gëÊags
(c⁄° 
cmsghdr
 *, );

646 
öë6_›t_öô
(*, 
sockÀn_t
);

647 
öë6_›t_≠≥nd
(*, 
sockÀn_t
, , 
__uöt8_t
, socklen_t,

648 
__uöt8_t
, **);

649 
öë6_›t_föish
(*, 
sockÀn_t
, );

650 
öë6_›t_£t_vÆ
(*, , *, 
sockÀn_t
);

652 
öë6_›t_√xt
(*, 
sockÀn_t
, , 
__uöt8_t
 *, socklen_t *,

654 
öë6_›t_föd
(*, 
sockÀn_t
, , 
__uöt8_t
, socklen_t *,

656 
öë6_›t_gë_vÆ
(*, , *, 
sockÀn_t
);

657 
sockÀn_t
 
öë6_πh_•a˚
(, );

658 *
öë6_πh_öô
(*, 
sockÀn_t
, , );

659 
öë6_πh_add
(*, c⁄° 
ö6_addr
 *);

660 
öë6_πh_ªvî£
(const *, *);

661 
öë6_πh_£gmíts
(const *);

662 
ö6_addr
 *
öë6_πh_gëaddr
(const *, );

663 
addr£l_pﬁicy_öô
();

664 
	g__END_DECLS


	@/usr/include/openssl/asn1.h

59 #i‚de‡
HEADER_ASN1_H


60 
	#HEADER_ASN1_H


	)

62 
	~<AvaûabûôyMa¸os.h
>

64 
	~<time.h
>

65 
	~<›ís¶/e_os2.h
>

66 #i‚de‡
OPENSSL_NO_BIO


67 
	~<›ís¶/bio.h
>

69 
	~<›ís¶/°ack.h
>

70 
	~<›ís¶/ß„°ack.h
>

72 
	~<›ís¶/symhacks.h
>

74 
	~<›ís¶/os¶_typ.h
>

75 #i‚de‡
OPENSSL_NO_DEPRECATED


76 
	~<›ís¶/bn.h
>

79 #ifde‡
OPENSSL_BUILD_SHLIBCRYPTO


80 #unde‡
OPENSSL_EXTERN


81 
	#OPENSSL_EXTERN
 
OPENSSL_EXPORT


	)

84 #ifde‡ 
__˝lu•lus


88 
	#V_ASN1_UNIVERSAL
 0x00

	)

89 
	#V_ASN1_APPLICATION
 0x40

	)

90 
	#V_ASN1_CONTEXT_SPECIFIC
 0x80

	)

91 
	#V_ASN1_PRIVATE
 0xc0

	)

93 
	#V_ASN1_CONSTRUCTED
 0x20

	)

94 
	#V_ASN1_PRIMITIVE_TAG
 0x1f

	)

95 
	#V_ASN1_PRIMATIVE_TAG
 0x1f

	)

97 
	#V_ASN1_APP_CHOOSE
 -2

	)

98 
	#V_ASN1_OTHER
 -3

	)

99 
	#V_ASN1_ANY
 -4

	)

101 
	#V_ASN1_NEG
 0x100

	)

103 
	#V_ASN1_UNDEF
 -1

	)

104 
	#V_ASN1_EOC
 0

	)

105 
	#V_ASN1_BOOLEAN
 1

	)

106 
	#V_ASN1_INTEGER
 2

	)

107 
	#V_ASN1_NEG_INTEGER
 (2 | 
V_ASN1_NEG
)

	)

108 
	#V_ASN1_BIT_STRING
 3

	)

109 
	#V_ASN1_OCTET_STRING
 4

	)

110 
	#V_ASN1_NULL
 5

	)

111 
	#V_ASN1_OBJECT
 6

	)

112 
	#V_ASN1_OBJECT_DESCRIPTOR
 7

	)

113 
	#V_ASN1_EXTERNAL
 8

	)

114 
	#V_ASN1_REAL
 9

	)

115 
	#V_ASN1_ENUMERATED
 10

	)

116 
	#V_ASN1_NEG_ENUMERATED
 (10 | 
V_ASN1_NEG
)

	)

117 
	#V_ASN1_UTF8STRING
 12

	)

118 
	#V_ASN1_SEQUENCE
 16

	)

119 
	#V_ASN1_SET
 17

	)

120 
	#V_ASN1_NUMERICSTRING
 18

	)

121 
	#V_ASN1_PRINTABLESTRING
 19

	)

122 
	#V_ASN1_T61STRING
 20

	)

123 
	#V_ASN1_TELETEXSTRING
 20

	)

124 
	#V_ASN1_VIDEOTEXSTRING
 21

	)

125 
	#V_ASN1_IA5STRING
 22

	)

126 
	#V_ASN1_UTCTIME
 23

	)

127 
	#V_ASN1_GENERALIZEDTIME
 24

	)

128 
	#V_ASN1_GRAPHICSTRING
 25

	)

129 
	#V_ASN1_ISO64STRING
 26

	)

130 
	#V_ASN1_VISIBLESTRING
 26

	)

131 
	#V_ASN1_GENERALSTRING
 27

	)

132 
	#V_ASN1_UNIVERSALSTRING
 28

	)

133 
	#V_ASN1_BMPSTRING
 30

	)

136 
	#B_ASN1_NUMERICSTRING
 0x0001

	)

137 
	#B_ASN1_PRINTABLESTRING
 0x0002

	)

138 
	#B_ASN1_T61STRING
 0x0004

	)

139 
	#B_ASN1_TELETEXSTRING
 0x0004

	)

140 
	#B_ASN1_VIDEOTEXSTRING
 0x0008

	)

141 
	#B_ASN1_IA5STRING
 0x0010

	)

142 
	#B_ASN1_GRAPHICSTRING
 0x0020

	)

143 
	#B_ASN1_ISO64STRING
 0x0040

	)

144 
	#B_ASN1_VISIBLESTRING
 0x0040

	)

145 
	#B_ASN1_GENERALSTRING
 0x0080

	)

146 
	#B_ASN1_UNIVERSALSTRING
 0x0100

	)

147 
	#B_ASN1_OCTET_STRING
 0x0200

	)

148 
	#B_ASN1_BIT_STRING
 0x0400

	)

149 
	#B_ASN1_BMPSTRING
 0x0800

	)

150 
	#B_ASN1_UNKNOWN
 0x1000

	)

151 
	#B_ASN1_UTF8STRING
 0x2000

	)

152 
	#B_ASN1_UTCTIME
 0x4000

	)

153 
	#B_ASN1_GENERALIZEDTIME
 0x8000

	)

154 
	#B_ASN1_SEQUENCE
 0x10000

	)

157 
	#MBSTRING_FLAG
 0x1000

	)

158 
	#MBSTRING_UTF8
 (
MBSTRING_FLAG
)

	)

159 
	#MBSTRING_ASC
 (
MBSTRING_FLAG
|1)

	)

160 
	#MBSTRING_BMP
 (
MBSTRING_FLAG
|2)

	)

161 
	#MBSTRING_UNIV
 (
MBSTRING_FLAG
|4)

	)

163 
	#SMIME_OLDMIME
 0x400

	)

164 
	#SMIME_CRLFEOL
 0x800

	)

165 
	#SMIME_STREAM
 0x1000

	)

167 
X509_Æg‹_°
;

168 
DECLARE_STACK_OF
(
X509_ALGOR
)

170 
	#DECLARE_ASN1_SET_OF
(
ty≥
Ë

	)

171 
	#IMPLEMENT_ASN1_SET_OF
(
ty≥
Ë

	)

177 
	sa¢1_˘x_°


179 *
p
;

180 
eos
;

181 
îr‹
;

182 
öf
;

183 
èg
;

184 
x˛ass
;

185 
¶í
;

186 *
max
;

187 *
q
;

188 **
µ
;

189 
löe
;

190 } 
	tASN1_CTX
;

192 
	sa¢1_c⁄°_˘x_°


194 c⁄° *
p
;

195 
eos
;

196 
îr‹
;

197 
öf
;

198 
èg
;

199 
x˛ass
;

200 
¶í
;

201 c⁄° *
max
;

202 c⁄° *
q
;

203 c⁄° **
µ
;

204 
löe
;

205 } 
	tASN1_c⁄°_CTX
;

209 
	#ASN1_OBJECT_FLAG_DYNAMIC
 0x01

	)

210 
	#ASN1_OBJECT_FLAG_CRITICAL
 0x02

	)

211 
	#ASN1_OBJECT_FLAG_DYNAMIC_STRINGS
 0x04

	)

212 
	#ASN1_OBJECT_FLAG_DYNAMIC_DATA
 0x08

	)

213 
	sa¢1_obje˘_°


215 c⁄° *
¢
,*
 
;

216 
nid
;

217 
Àngth
;

218 *
d©a
;

219 
Êags
;

220 } 
	tASN1_OBJECT
;

222 
	#ASN1_STRING_FLAG_BITS_LEFT
 0x08

	)

227 
	#ASN1_STRING_FLAG_NDEF
 0x010

	)

233 
	#ASN1_STRING_FLAG_CONT
 0x020

	)

236 
	sa¢1_°rög_°


238 
Àngth
;

239 
ty≥
;

240 *
d©a
;

245 
Êags
;

246 } 
	tASN1_STRING
;

253 
	sASN1_ENCODING_°


255 *
íc
;

256 
Àn
;

257 
modifõd
;

258 } 
	tASN1_ENCODING
;

261 
	#ASN1_LONG_UNDEF
 0x7fffffffL

	)

263 
	#STABLE_FLAGS_MALLOC
 0x01

	)

264 
	#STABLE_NO_MASK
 0x02

	)

265 
	#DIRSTRING_TYPE
 \

266 (
B_ASN1_PRINTABLESTRING
|
B_ASN1_T61STRING
|
B_ASN1_BMPSTRING
|
B_ASN1_UTF8STRING
)

	)

267 
	#PKCS9STRING_TYPE
 (
DIRSTRING_TYPE
|
B_ASN1_IA5STRING
)

	)

269 
	sa¢1_°rög_èbÀ_°
 {

270 
nid
;

271 
mösize
;

272 
maxsize
;

273 
mask
;

274 
Êags
;

275 } 
	tASN1_STRING_TABLE
;

277 
DECLARE_STACK_OF
(
ASN1_STRING_TABLE
)

281 
	#ub_«me
 32768

	)

282 
	#ub_comm⁄_«me
 64

	)

283 
	#ub_loˇlôy_«me
 128

	)

284 
	#ub_°©e_«me
 128

	)

285 
	#ub_‹g™iz©i⁄_«me
 64

	)

286 
	#ub_‹g™iz©i⁄_unô_«me
 64

	)

287 
	#ub_tôÀ
 64

	)

288 
	#ub_emaû_addªss
 128

	)

293 
ASN1_TEMPLATE_°
 
	tASN1_TEMPLATE
;

294 
ASN1_ITEM_°
 
	tASN1_ITEM
;

295 
ASN1_TLC_°
 
	tASN1_TLC
;

297 
ASN1_VALUE_°
 
	tASN1_VALUE
;

301 
	#DECLARE_ASN1_FUNCTIONS
(
ty≥
Ë
	`DECLARE_ASN1_FUNCTIONS_«me
—y≥,Åy≥)

	)

303 
	#DECLARE_ASN1_ALLOC_FUNCTIONS
(
ty≥
) \

304 
	`DECLARE_ASN1_ALLOC_FUNCTIONS_«me
(
ty≥
,Åy≥)

	)

306 
	#DECLARE_ASN1_FUNCTIONS_«me
(
ty≥
, 
«me
) \

307 
	`DECLARE_ASN1_ALLOC_FUNCTIONS_«me
(
ty≥
, 
«me
) \

308 
	`DECLARE_ASN1_ENCODE_FUNCTIONS
(
ty≥
, 
«me
,Çame)

	)

310 
	#DECLARE_ASN1_FUNCTIONS_‚ame
(
ty≥
, 
ô«me
, 
«me
) \

311 
	`DECLARE_ASN1_ALLOC_FUNCTIONS_«me
(
ty≥
, 
«me
) \

312 
	`DECLARE_ASN1_ENCODE_FUNCTIONS
(
ty≥
, 
ô«me
, 
«me
)

	)

314 
	#DECLARE_ASN1_ENCODE_FUNCTIONS
(
ty≥
, 
ô«me
, 
«me
) \

315 
ty≥
 *
d2i_
##
	`«me
—y≥ **
a
, c⁄° **
ö
, 
Àn
); \

316 
i2d_
##
	`«me
(
ty≥
 *
a
, **
out
); \

317 
	`DECLARE_ASN1_ITEM
(
ô«me
)

	)

319 
	#DECLARE_ASN1_ENCODE_FUNCTIONS_c⁄°
(
ty≥
, 
«me
) \

320 
ty≥
 *
d2i_
##
	`«me
—y≥ **
a
, c⁄° **
ö
, 
Àn
); \

321 
i2d_
##
	`«me
(c⁄° 
ty≥
 *
a
, **
out
); \

322 
	`DECLARE_ASN1_ITEM
(
«me
)

	)

324 
	#DECLARE_ASN1_NDEF_FUNCTION
(
«me
) \

325 
i2d_
##
«me
##
	`_NDEF
“amê*
a
, **
out
);

	)

327 
	#DECLARE_ASN1_FUNCTIONS_c⁄°
(
«me
) \

328 
	`DECLARE_ASN1_ALLOC_FUNCTIONS
(
«me
) \

329 
	`DECLARE_ASN1_ENCODE_FUNCTIONS_c⁄°
(
«me
,Çame)

	)

331 
	#DECLARE_ASN1_ALLOC_FUNCTIONS_«me
(
ty≥
, 
«me
) \

332 
ty≥
 *
«me
##
	`_√w
(); \

333 
«me
##
	`_‰ì
(
ty≥
 *
a
);

	)

335 
	#D2I_OF
(
ty≥
Ëty≥ *(*)—y≥ **,c⁄° **,)

	)

336 
	#I2D_OF
(
ty≥
Ë(*)—y≥ *,**)

	)

337 
	#I2D_OF_c⁄°
(
ty≥
Ë(*)(c⁄°Åy≥ *,**)

	)

339 
	#CHECKED_D2I_OF
(
ty≥
, 
d2i
) \

340 ((
d2i_of_void
*Ë(1 ? 
d2i
 : ((
	`D2I_OF
(
ty≥
))0)))

	)

341 
	#CHECKED_I2D_OF
(
ty≥
, 
i2d
) \

342 ((
i2d_of_void
*Ë(1 ? 
i2d
 : ((
	`I2D_OF
(
ty≥
))0)))

	)

343 
	#CHECKED_NEW_OF
(
ty≥
, 
x√w
) \

344 ((*(*)()Ë(1 ? 
x√w
 : ((
ty≥
 *(*)())0)))

	)

345 
	#CHECKED_PTR_OF
(
ty≥
, 
p
) \

346 ((*Ë(1 ? 
p
 : (
ty≥
*)0))

	)

347 
	#CHECKED_PPTR_OF
(
ty≥
, 
p
) \

348 ((**Ë(1 ? 
p
 : (
ty≥
**)0))

	)

349 
	#CHECKED_PTR_OF_TO_CHAR
(
ty≥
, 
p
) \

350 ((*Ë(1 ? 
p
 : (
ty≥
*)0))

	)

352 
	#TYPEDEF_D2I_OF
(
ty≥
Ëty≥ *
	td2i_of_
##
	tty≥
—y≥ **,c⁄° **,)

	)

353 
	tTYPEDEF_I2D_OF
(
	tty≥
Ë
	ti2d_of_
##ty≥—y≥ *,**)

	)

354 
	tTYPEDEF_D2I2D_OF
(
	tty≥
Ë
	tTYPEDEF_D2I_OF
—y≥); 
	`TYPEDEF_I2D_OF
(
ty≥
)

	)

356 
TYPEDEF_D2I2D_OF
();

393 #i‚de‡
OPENSSL_EXPORT_VAR_AS_FUNCTION


396 c⁄° 
	tASN1_ITEM
 
	tASN1_ITEM_EXP
;

399 
	#ASN1_ITEM_±r
(
ùå
Ë(ùå)

	)

402 
	#ASN1_ITEM_ªf
(
ùå
Ë(&(ùå##
_ô
))

	)

404 
	#ASN1_ITEM_Ωå
(
ªf
Ë(&‘ef##
_ô
))

	)

406 
	#DECLARE_ASN1_ITEM
(
«me
) \

407 
OPENSSL_EXTERN
 c⁄° 
ASN1_ITEM
 
«me
##
_ô
;

	)

416 c⁄° 
	tASN1_ITEM
 * 
	tASN1_ITEM_EXP
();

419 
	#ASN1_ITEM_±r
(
ùå
Ë(
	`ùå
())

	)

422 
	#ASN1_ITEM_ªf
(
ùå
Ë(ùå##
_ô
)

	)

424 
	#ASN1_ITEM_Ωå
(
ªf
Ë‘ef##
	`_ô
())

	)

426 
	#DECLARE_ASN1_ITEM
(
«me
) \

427 c⁄° 
ASN1_ITEM
 * 
«me
##
	`_ô
();

	)

438 
	#ASN1_STRFLGS_ESC_2253
 1

	)

439 
	#ASN1_STRFLGS_ESC_CTRL
 2

	)

440 
	#ASN1_STRFLGS_ESC_MSB
 4

	)

448 
	#ASN1_STRFLGS_ESC_QUOTE
 8

	)

454 
	#CHARTYPE_PRINTABLESTRING
 0x10

	)

456 
	#CHARTYPE_FIRST_ESC_2253
 0x20

	)

458 
	#CHARTYPE_LAST_ESC_2253
 0x40

	)

468 
	#ASN1_STRFLGS_UTF8_CONVERT
 0x10

	)

475 
	#ASN1_STRFLGS_IGNORE_TYPE
 0x20

	)

478 
	#ASN1_STRFLGS_SHOW_TYPE
 0x40

	)

488 
	#ASN1_STRFLGS_DUMP_ALL
 0x80

	)

489 
	#ASN1_STRFLGS_DUMP_UNKNOWN
 0x100

	)

496 
	#ASN1_STRFLGS_DUMP_DER
 0x200

	)

503 
	#ASN1_STRFLGS_RFC2253
 (
ASN1_STRFLGS_ESC_2253
 | \

504 
ASN1_STRFLGS_ESC_CTRL
 | \

505 
ASN1_STRFLGS_ESC_MSB
 | \

506 
ASN1_STRFLGS_UTF8_CONVERT
 | \

507 
ASN1_STRFLGS_DUMP_UNKNOWN
 | \

508 
ASN1_STRFLGS_DUMP_DER
)

	)

510 
DECLARE_STACK_OF
(
ASN1_INTEGER
)

511 
DECLARE_ASN1_SET_OF
(
ASN1_INTEGER
)

513 
DECLARE_STACK_OF
(
ASN1_GENERALSTRING
)

515 
	sa¢1_ty≥_°


517 
ty≥
;

519 *
±r
;

520 
ASN1_BOOLEAN
 
boﬁón
;

521 
ASN1_STRING
 * 
a¢1_°rög
;

522 
ASN1_OBJECT
 * 
obje˘
;

523 
ASN1_INTEGER
 * 
öãgî
;

524 
ASN1_ENUMERATED
 * 
íumî©ed
;

525 
ASN1_BIT_STRING
 * 
bô_°rög
;

526 
ASN1_OCTET_STRING
 * 
o˘ë_°rög
;

527 
ASN1_PRINTABLESTRING
 * 
¥öèbÀ°rög
;

528 
ASN1_T61STRING
 * 
t61°rög
;

529 
ASN1_IA5STRING
 * 
ü5°rög
;

530 
ASN1_GENERALSTRING
 * 
gíîÆ°rög
;

531 
ASN1_BMPSTRING
 * 
bmp°rög
;

532 
ASN1_UNIVERSALSTRING
 * 
univîßl°rög
;

533 
ASN1_UTCTIME
 * 
ut˘ime
;

534 
ASN1_GENERALIZEDTIME
 * 
gíîÆizedtime
;

535 
ASN1_VISIBLESTRING
 * 
visibÀ°rög
;

536 
ASN1_UTF8STRING
 * 
utf8°rög
;

539 
ASN1_STRING
 * 
£t
;

540 
ASN1_STRING
 * 
£quí˚
;

541 
ASN1_VALUE
 * 
a¢1_vÆue
;

542 } 
vÆue
;

543 } 
	tASN1_TYPE
;

545 
DECLARE_STACK_OF
(
ASN1_TYPE
)

546 
DECLARE_ASN1_SET_OF
(
ASN1_TYPE
)

548 
	sa¢1_mëhod_°


550 
i2d_of_void
 *
i2d
;

551 
d2i_of_void
 *
d2i
;

552 *(*
¸óã
)();

553 (*
de°roy
)(*);

554 } 
	tASN1_METHOD
;

557 
	sa¢1_hódî_°


559 
ASN1_OCTET_STRING
 *
hódî
;

560 *
d©a
;

561 
ASN1_METHOD
 *
mëh
;

562 } 
	tASN1_HEADER
;

565 
	sBIT_STRING_BITNAME_°
 {

566 
bônum
;

567 c⁄° *
 ame
;

568 c⁄° *
¢ame
;

569 } 
	tBIT_STRING_BITNAME
;

572 
	#M_ASN1_STRING_Àngth
(
x
Ë((x)->
Àngth
)

	)

573 
	#M_ASN1_STRING_Àngth_£t
(
x
, 
n
Ë((x)->
Àngth
 = (n))

	)

574 
	#M_ASN1_STRING_ty≥
(
x
Ë((x)->
ty≥
)

	)

575 
	#M_ASN1_STRING_d©a
(
x
Ë((x)->
d©a
)

	)

578 
	#M_ASN1_BIT_STRING_√w
(Ë(
ASN1_BIT_STRING
 *)\

579 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_BIT_STRING
)

	)

580 
	#M_ASN1_BIT_STRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

581 
	#M_ASN1_BIT_STRING_dup
(
a
Ë(
ASN1_BIT_STRING
 *)\

582 
	`ASN1_STRING_dup
((
ASN1_STRING
 *)
a
)

	)

583 
	#M_ASN1_BIT_STRING_cmp
(
a
,
b
Ë
	`ASN1_STRING_cmp
(\

584 (
ASN1_STRING
 *)
a
,(ASN1_STRING *)
b
)

	)

585 
	#M_ASN1_BIT_STRING_£t
(
a
,
b
,
c
Ë
	`ASN1_STRING_£t
((
ASN1_STRING
 *Ô,b,c)

	)

587 
	#M_ASN1_INTEGER_√w
(Ë(
ASN1_INTEGER
 *)\

588 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_INTEGER
)

	)

589 
	#M_ASN1_INTEGER_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

590 
	#M_ASN1_INTEGER_dup
(
a
Ë(
ASN1_INTEGER
 *)
	`ASN1_STRING_dup
((
ASN1_STRING
 *Ô)

	)

591 
	#M_ASN1_INTEGER_cmp
(
a
,
b
Ë
	`ASN1_STRING_cmp
(\

592 (
ASN1_STRING
 *)
a
,(ASN1_STRING *)
b
)

	)

594 
	#M_ASN1_ENUMERATED_√w
(Ë(
ASN1_ENUMERATED
 *)\

595 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_ENUMERATED
)

	)

596 
	#M_ASN1_ENUMERATED_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

597 
	#M_ASN1_ENUMERATED_dup
(
a
Ë(
ASN1_ENUMERATED
 *)
	`ASN1_STRING_dup
((
ASN1_STRING
 *Ô)

	)

598 
	#M_ASN1_ENUMERATED_cmp
(
a
,
b
Ë
	`ASN1_STRING_cmp
(\

599 (
ASN1_STRING
 *)
a
,(ASN1_STRING *)
b
)

	)

601 
	#M_ASN1_OCTET_STRING_√w
(Ë(
ASN1_OCTET_STRING
 *)\

602 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_OCTET_STRING
)

	)

603 
	#M_ASN1_OCTET_STRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

604 
	#M_ASN1_OCTET_STRING_dup
(
a
Ë(
ASN1_OCTET_STRING
 *)\

605 
	`ASN1_STRING_dup
((
ASN1_STRING
 *)
a
)

	)

606 
	#M_ASN1_OCTET_STRING_cmp
(
a
,
b
Ë
	`ASN1_STRING_cmp
(\

607 (
ASN1_STRING
 *)
a
,(ASN1_STRING *)
b
)

	)

608 
	#M_ASN1_OCTET_STRING_£t
(
a
,
b
,
c
Ë
	`ASN1_STRING_£t
((
ASN1_STRING
 *Ô,b,c)

	)

609 
	#M_ASN1_OCTET_STRING_¥öt
(
a
,
b
Ë
	`ASN1_STRING_¥öt
◊,(
ASN1_STRING
 *)b)

	)

610 
	#M_i2d_ASN1_OCTET_STRING
(
a
,
µ
) \

611 
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)
a
,
µ
,
V_ASN1_OCTET_STRING
,\

612 
V_ASN1_UNIVERSAL
)

	)

614 
	#B_ASN1_TIME
 \

615 
B_ASN1_UTCTIME
 | \

616 
B_ASN1_GENERALIZEDTIME


	)

618 
	#B_ASN1_PRINTABLE
 \

619 
B_ASN1_NUMERICSTRING
| \

620 
B_ASN1_PRINTABLESTRING
| \

621 
B_ASN1_T61STRING
| \

622 
B_ASN1_IA5STRING
| \

623 
B_ASN1_BIT_STRING
| \

624 
B_ASN1_UNIVERSALSTRING
|\

625 
B_ASN1_BMPSTRING
|\

626 
B_ASN1_UTF8STRING
|\

627 
B_ASN1_SEQUENCE
|\

628 
B_ASN1_UNKNOWN


	)

630 
	#B_ASN1_DIRECTORYSTRING
 \

631 
B_ASN1_PRINTABLESTRING
| \

632 
B_ASN1_TELETEXSTRING
|\

633 
B_ASN1_BMPSTRING
|\

634 
B_ASN1_UNIVERSALSTRING
|\

635 
B_ASN1_UTF8STRING


	)

637 
	#B_ASN1_DISPLAYTEXT
 \

638 
B_ASN1_IA5STRING
| \

639 
B_ASN1_VISIBLESTRING
| \

640 
B_ASN1_BMPSTRING
|\

641 
B_ASN1_UTF8STRING


	)

643 
	#M_ASN1_PRINTABLE_√w
(Ë
	`ASN1_STRING_ty≥_√w
(
V_ASN1_T61STRING
)

	)

644 
	#M_ASN1_PRINTABLE_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

645 
	#M_i2d_ASN1_PRINTABLE
(
a
,
µ
Ë
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)a,\

646 
µ
,
a
->
ty≥
,
V_ASN1_UNIVERSAL
)

	)

647 
	#M_d2i_ASN1_PRINTABLE
(
a
,
µ
,
l
) \

648 
	`d2i_ASN1_ty≥_byãs
((
ASN1_STRING
 **)
a
,
µ
,
l
, \

649 
B_ASN1_PRINTABLE
)

	)

651 
	#M_DIRECTORYSTRING_√w
(Ë
	`ASN1_STRING_ty≥_√w
(
V_ASN1_PRINTABLESTRING
)

	)

652 
	#M_DIRECTORYSTRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

653 
	#M_i2d_DIRECTORYSTRING
(
a
,
µ
Ë
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)a,\

654 
µ
,
a
->
ty≥
,
V_ASN1_UNIVERSAL
)

	)

655 
	#M_d2i_DIRECTORYSTRING
(
a
,
µ
,
l
) \

656 
	`d2i_ASN1_ty≥_byãs
((
ASN1_STRING
 **)
a
,
µ
,
l
, \

657 
B_ASN1_DIRECTORYSTRING
)

	)

659 
	#M_DISPLAYTEXT_√w
(Ë
	`ASN1_STRING_ty≥_√w
(
V_ASN1_VISIBLESTRING
)

	)

660 
	#M_DISPLAYTEXT_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

661 
	#M_i2d_DISPLAYTEXT
(
a
,
µ
Ë
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)a,\

662 
µ
,
a
->
ty≥
,
V_ASN1_UNIVERSAL
)

	)

663 
	#M_d2i_DISPLAYTEXT
(
a
,
µ
,
l
) \

664 
	`d2i_ASN1_ty≥_byãs
((
ASN1_STRING
 **)
a
,
µ
,
l
, \

665 
B_ASN1_DISPLAYTEXT
)

	)

667 
	#M_ASN1_PRINTABLESTRING_√w
(Ë(
ASN1_PRINTABLESTRING
 *)\

668 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_PRINTABLESTRING
)

	)

669 
	#M_ASN1_PRINTABLESTRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

670 
	#M_i2d_ASN1_PRINTABLESTRING
(
a
,
µ
) \

671 
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)
a
,
µ
,
V_ASN1_PRINTABLESTRING
,\

672 
V_ASN1_UNIVERSAL
)

	)

673 
	#M_d2i_ASN1_PRINTABLESTRING
(
a
,
µ
,
l
) \

674 (
ASN1_PRINTABLESTRING
 *)
d2i_ASN1_ty≥_byãs
\

675 ((
ASN1_STRING
 **)
a
,
µ
,
l
,
B_ASN1_PRINTABLESTRING
)

	)

677 
	#M_ASN1_T61STRING_√w
(Ë(
ASN1_T61STRING
 *)\

678 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_T61STRING
)

	)

679 
	#M_ASN1_T61STRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

680 
	#M_i2d_ASN1_T61STRING
(
a
,
µ
) \

681 
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)
a
,
µ
,
V_ASN1_T61STRING
,\

682 
V_ASN1_UNIVERSAL
)

	)

683 
	#M_d2i_ASN1_T61STRING
(
a
,
µ
,
l
) \

684 (
ASN1_T61STRING
 *)
d2i_ASN1_ty≥_byãs
\

685 ((
ASN1_STRING
 **)
a
,
µ
,
l
,
B_ASN1_T61STRING
)

	)

687 
	#M_ASN1_IA5STRING_√w
(Ë(
ASN1_IA5STRING
 *)\

688 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_IA5STRING
)

	)

689 
	#M_ASN1_IA5STRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

690 
	#M_ASN1_IA5STRING_dup
(
a
) \

691 (
ASN1_IA5STRING
 *)
	`ASN1_STRING_dup
((
ASN1_STRING
 *)
a
)

	)

692 
	#M_i2d_ASN1_IA5STRING
(
a
,
µ
) \

693 
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)
a
,
µ
,
V_ASN1_IA5STRING
,\

694 
V_ASN1_UNIVERSAL
)

	)

695 
	#M_d2i_ASN1_IA5STRING
(
a
,
µ
,
l
) \

696 (
ASN1_IA5STRING
 *)
	`d2i_ASN1_ty≥_byãs
((
ASN1_STRING
 **)
a
,
µ
,
l
,\

697 
B_ASN1_IA5STRING
)

	)

699 
	#M_ASN1_UTCTIME_√w
(Ë(
ASN1_UTCTIME
 *)\

700 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_UTCTIME
)

	)

701 
	#M_ASN1_UTCTIME_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

702 
	#M_ASN1_UTCTIME_dup
(
a
Ë(
ASN1_UTCTIME
 *)
	`ASN1_STRING_dup
((
ASN1_STRING
 *Ô)

	)

704 
	#M_ASN1_GENERALIZEDTIME_√w
(Ë(
ASN1_GENERALIZEDTIME
 *)\

705 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_GENERALIZEDTIME
)

	)

706 
	#M_ASN1_GENERALIZEDTIME_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

707 
	#M_ASN1_GENERALIZEDTIME_dup
(
a
Ë(
ASN1_GENERALIZEDTIME
 *)
	`ASN1_STRING_dup
(\

708 (
ASN1_STRING
 *)
a
)

	)

710 
	#M_ASN1_TIME_√w
(Ë(
ASN1_TIME
 *)\

711 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_UTCTIME
)

	)

712 
	#M_ASN1_TIME_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

713 
	#M_ASN1_TIME_dup
(
a
Ë(
ASN1_TIME
 *)
	`ASN1_STRING_dup
((
ASN1_STRING
 *Ô)

	)

715 
	#M_ASN1_GENERALSTRING_√w
(Ë(
ASN1_GENERALSTRING
 *)\

716 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_GENERALSTRING
)

	)

717 
	#M_ASN1_GENERALSTRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

718 
	#M_i2d_ASN1_GENERALSTRING
(
a
,
µ
) \

719 
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)
a
,
µ
,
V_ASN1_GENERALSTRING
,\

720 
V_ASN1_UNIVERSAL
)

	)

721 
	#M_d2i_ASN1_GENERALSTRING
(
a
,
µ
,
l
) \

722 (
ASN1_GENERALSTRING
 *)
d2i_ASN1_ty≥_byãs
\

723 ((
ASN1_STRING
 **)
a
,
µ
,
l
,
B_ASN1_GENERALSTRING
)

	)

725 
	#M_ASN1_UNIVERSALSTRING_√w
(Ë(
ASN1_UNIVERSALSTRING
 *)\

726 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_UNIVERSALSTRING
)

	)

727 
	#M_ASN1_UNIVERSALSTRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

728 
	#M_i2d_ASN1_UNIVERSALSTRING
(
a
,
µ
) \

729 
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)
a
,
µ
,
V_ASN1_UNIVERSALSTRING
,\

730 
V_ASN1_UNIVERSAL
)

	)

731 
	#M_d2i_ASN1_UNIVERSALSTRING
(
a
,
µ
,
l
) \

732 (
ASN1_UNIVERSALSTRING
 *)
d2i_ASN1_ty≥_byãs
\

733 ((
ASN1_STRING
 **)
a
,
µ
,
l
,
B_ASN1_UNIVERSALSTRING
)

	)

735 
	#M_ASN1_BMPSTRING_√w
(Ë(
ASN1_BMPSTRING
 *)\

736 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_BMPSTRING
)

	)

737 
	#M_ASN1_BMPSTRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

738 
	#M_i2d_ASN1_BMPSTRING
(
a
,
µ
) \

739 
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)
a
,
µ
,
V_ASN1_BMPSTRING
,\

740 
V_ASN1_UNIVERSAL
)

	)

741 
	#M_d2i_ASN1_BMPSTRING
(
a
,
µ
,
l
) \

742 (
ASN1_BMPSTRING
 *)
d2i_ASN1_ty≥_byãs
\

743 ((
ASN1_STRING
 **)
a
,
µ
,
l
,
B_ASN1_BMPSTRING
)

	)

745 
	#M_ASN1_VISIBLESTRING_√w
(Ë(
ASN1_VISIBLESTRING
 *)\

746 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_VISIBLESTRING
)

	)

747 
	#M_ASN1_VISIBLESTRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

748 
	#M_i2d_ASN1_VISIBLESTRING
(
a
,
µ
) \

749 
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)
a
,
µ
,
V_ASN1_VISIBLESTRING
,\

750 
V_ASN1_UNIVERSAL
)

	)

751 
	#M_d2i_ASN1_VISIBLESTRING
(
a
,
µ
,
l
) \

752 (
ASN1_VISIBLESTRING
 *)
d2i_ASN1_ty≥_byãs
\

753 ((
ASN1_STRING
 **)
a
,
µ
,
l
,
B_ASN1_VISIBLESTRING
)

	)

755 
	#M_ASN1_UTF8STRING_√w
(Ë(
ASN1_UTF8STRING
 *)\

756 
	`ASN1_STRING_ty≥_√w
(
V_ASN1_UTF8STRING
)

	)

757 
	#M_ASN1_UTF8STRING_‰ì
(
a
Ë
	`ASN1_STRING_‰ì
((
ASN1_STRING
 *Ô)

	)

758 
	#M_i2d_ASN1_UTF8STRING
(
a
,
µ
) \

759 
	`i2d_ASN1_byãs
((
ASN1_STRING
 *)
a
,
µ
,
V_ASN1_UTF8STRING
,\

760 
V_ASN1_UNIVERSAL
)

	)

761 
	#M_d2i_ASN1_UTF8STRING
(
a
,
µ
,
l
) \

762 (
ASN1_UTF8STRING
 *)
d2i_ASN1_ty≥_byãs
\

763 ((
ASN1_STRING
 **)
a
,
µ
,
l
,
B_ASN1_UTF8STRING
)

	)

766 
	#IS_SEQUENCE
 0

	)

767 
	#IS_SET
 1

	)

769 
DECLARE_ASN1_FUNCTIONS_‚ame
(
ASN1_TYPE
, 
ASN1_ANY
, ASN1_TYPE)

771 
ASN1_TYPE_gë
(
ASN1_TYPE
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

772 
ASN1_TYPE_£t
(
ASN1_TYPE
 *
a
, 
ty≥
, *
vÆue
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

773 
ASN1_TYPE_£t1
(
ASN1_TYPE
 *
a
, 
ty≥
, c⁄° *
vÆue
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

775 
ASN1_OBJECT
 * 
ASN1_OBJECT_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

776 
ASN1_OBJECT_‰ì
(
ASN1_OBJECT
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

777 
i2d_ASN1_OBJECT
(
ASN1_OBJECT
 *
a
,**
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

778 
ASN1_OBJECT
 * 
c2i_ASN1_OBJECT
(ASN1_OBJECT **
a
,c⁄° **
µ
,

779 
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

780 
ASN1_OBJECT
 * 
d2i_ASN1_OBJECT
(ASN1_OBJECT **
a
,c⁄° **
µ
,

781 
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

783 
DECLARE_ASN1_ITEM
(
ASN1_OBJECT
)

785 
DECLARE_STACK_OF
(
ASN1_OBJECT
)

786 
DECLARE_ASN1_SET_OF
(
ASN1_OBJECT
)

788 
ASN1_STRING
 * 
ASN1_STRING_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

789 
ASN1_STRING_‰ì
(
ASN1_STRING
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

790 
ASN1_STRING
 * 
ASN1_STRING_dup
(ASN1_STRING *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

791 
ASN1_STRING
 * 
ASN1_STRING_ty≥_√w
(
ty≥
 ) 
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

792 
ASN1_STRING_cmp
(
ASN1_STRING
 *
a
, ASN1_STRING *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

795 
ASN1_STRING_£t
(
ASN1_STRING
 *
°r
, c⁄° *
d©a
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

796 
ASN1_STRING_£t0
(
ASN1_STRING
 *
°r
, *
d©a
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

797 
ASN1_STRING_Àngth
(
ASN1_STRING
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

798 
ASN1_STRING_Àngth_£t
(
ASN1_STRING
 *
x
, 
n
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

799 
ASN1_STRING_ty≥
(
ASN1_STRING
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

800 * 
ASN1_STRING_d©a
(
ASN1_STRING
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

802 
DECLARE_ASN1_FUNCTIONS
(
ASN1_BIT_STRING
)

803 
i2c_ASN1_BIT_STRING
(
ASN1_BIT_STRING
 *
a
,**
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

804 
ASN1_BIT_STRING
 *
c2i_ASN1_BIT_STRING
(ASN1_BIT_STRING **
a
,c⁄° **
µ
,

805 
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

806 
ASN1_BIT_STRING_£t
(
ASN1_BIT_STRING
 *
a
, *
d
,

807 
Àngth
 ) 
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

808 
ASN1_BIT_STRING_£t_bô
(
ASN1_BIT_STRING
 *
a
, 
n
, 
vÆue
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

809 
ASN1_BIT_STRING_gë_bô
(
ASN1_BIT_STRING
 *
a
, 
n
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

811 #i‚de‡
OPENSSL_NO_BIO


812 
ASN1_BIT_STRING_«me_¥öt
(
BIO
 *
out
, 
ASN1_BIT_STRING
 *
bs
,

813 
BIT_STRING_BITNAME
 *
tbl
, 
ödít
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

815 
ASN1_BIT_STRING_num_asc
(*
«me
, 
BIT_STRING_BITNAME
 *
tbl
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

816 
ASN1_BIT_STRING_£t_asc
(
ASN1_BIT_STRING
 *
bs
, *
«me
, 
vÆue
,

817 
BIT_STRING_BITNAME
 *
tbl
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

819 
i2d_ASN1_BOOLEAN
(
a
,**
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

820 
d2i_ASN1_BOOLEAN
(*
a
,c⁄° **
µ
,
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

822 
DECLARE_ASN1_FUNCTIONS
(
ASN1_INTEGER
)

823 
i2c_ASN1_INTEGER
(
ASN1_INTEGER
 *
a
,**
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

824 
ASN1_INTEGER
 *
c2i_ASN1_INTEGER
(ASN1_INTEGER **
a
,c⁄° **
µ
,

825 
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

826 
ASN1_INTEGER
 *
d2i_ASN1_UINTEGER
(ASN1_INTEGER **
a
,c⁄° **
µ
,

827 
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

828 
ASN1_INTEGER
 * 
ASN1_INTEGER_dup
(ASN1_INTEGER *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

829 
ASN1_INTEGER_cmp
(
ASN1_INTEGER
 *
x
, ASN1_INTEGER *
y
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

831 
DECLARE_ASN1_FUNCTIONS
(
ASN1_ENUMERATED
)

833 
ASN1_UTCTIME_check
(
ASN1_UTCTIME
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

834 
ASN1_UTCTIME
 *
ASN1_UTCTIME_£t
(ASN1_UTCTIME *
s
,
time_t
 
t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

835 
ASN1_UTCTIME_£t_°rög
(
ASN1_UTCTIME
 *
s
, c⁄° *
°r
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

836 
ASN1_UTCTIME_cmp_time_t
(c⁄° 
ASN1_UTCTIME
 *
s
, 
time_t
 
t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

838 
time_t
 
ASN1_UTCTIME_gë
(c⁄° 
ASN1_UTCTIME
 *
s
);

841 
ASN1_GENERALIZEDTIME_check
(
ASN1_GENERALIZEDTIME
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

842 
ASN1_GENERALIZEDTIME
 *
ASN1_GENERALIZEDTIME_£t
(ASN1_GENERALIZEDTIME *
s
,
time_t
 
t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

843 
ASN1_GENERALIZEDTIME_£t_°rög
(
ASN1_GENERALIZEDTIME
 *
s
, c⁄° *
°r
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

845 
DECLARE_ASN1_FUNCTIONS
(
ASN1_OCTET_STRING
)

846 
ASN1_OCTET_STRING
 * 
ASN1_OCTET_STRING_dup
(ASN1_OCTET_STRING *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

847 
ASN1_OCTET_STRING_cmp
(
ASN1_OCTET_STRING
 *
a
, ASN1_OCTET_STRING *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

848 
ASN1_OCTET_STRING_£t
(
ASN1_OCTET_STRING
 *
°r
, c⁄° *
d©a
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

850 
DECLARE_ASN1_FUNCTIONS
(
ASN1_VISIBLESTRING
)

851 
DECLARE_ASN1_FUNCTIONS
(
ASN1_UNIVERSALSTRING
)

852 
DECLARE_ASN1_FUNCTIONS
(
ASN1_UTF8STRING
)

853 
DECLARE_ASN1_FUNCTIONS
(
ASN1_NULL
)

854 
DECLARE_ASN1_FUNCTIONS
(
ASN1_BMPSTRING
)

856 
UTF8_gëc
(c⁄° *
°r
, 
Àn
, *
vÆ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

857 
UTF8_putc
(*
°r
, 
Àn
, 
vÆue
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

859 
DECLARE_ASN1_FUNCTIONS_«me
(
ASN1_STRING
, 
ASN1_PRINTABLE
)

861 
DECLARE_ASN1_FUNCTIONS_«me
(
ASN1_STRING
, 
DIRECTORYSTRING
)

862 
DECLARE_ASN1_FUNCTIONS_«me
(
ASN1_STRING
, 
DISPLAYTEXT
)

863 
DECLARE_ASN1_FUNCTIONS
(
ASN1_PRINTABLESTRING
)

864 
DECLARE_ASN1_FUNCTIONS
(
ASN1_T61STRING
)

865 
DECLARE_ASN1_FUNCTIONS
(
ASN1_IA5STRING
)

866 
DECLARE_ASN1_FUNCTIONS
(
ASN1_GENERALSTRING
)

867 
DECLARE_ASN1_FUNCTIONS
(
ASN1_UTCTIME
)

868 
DECLARE_ASN1_FUNCTIONS
(
ASN1_GENERALIZEDTIME
)

869 
DECLARE_ASN1_FUNCTIONS
(
ASN1_TIME
)

871 
DECLARE_ASN1_ITEM
(
ASN1_OCTET_STRING_NDEF
)

873 
ASN1_TIME
 *
ASN1_TIME_£t
(ASN1_TIME *
s
,
time_t
 
t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

874 
ASN1_TIME_check
(
ASN1_TIME
 *
t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

875 
ASN1_GENERALIZEDTIME
 *
ASN1_TIME_to_gíîÆizedtime
(
ASN1_TIME
 *
t
, ASN1_GENERALIZEDTIME **
out
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

877 
i2d_ASN1_SET
(
STACK
 *
a
, **
µ
,

878 
i2d_of_void
 *
i2d
, 
ex_èg
, 
ex_˛ass
, 
is_£t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

879 
STACK
 * 
d2i_ASN1_SET
(STACK **
a
, c⁄° **
µ
, 
Àngth
,

880 
d2i_of_void
 *
d2i
, (*
‰ì_func
)(*),

881 
ex_èg
, 
ex_˛ass
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

883 #i‚de‡
OPENSSL_NO_BIO


884 
i2a_ASN1_INTEGER
(
BIO
 *
bp
, 
ASN1_INTEGER
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

885 
a2i_ASN1_INTEGER
(
BIO
 *
bp
,
ASN1_INTEGER
 *
bs
,*
buf
,
size
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

886 
i2a_ASN1_ENUMERATED
(
BIO
 *
bp
, 
ASN1_ENUMERATED
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

887 
a2i_ASN1_ENUMERATED
(
BIO
 *
bp
,
ASN1_ENUMERATED
 *
bs
,*
buf
,
size
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

888 
i2a_ASN1_OBJECT
(
BIO
 *
bp
,
ASN1_OBJECT
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

889 
a2i_ASN1_STRING
(
BIO
 *
bp
,
ASN1_STRING
 *
bs
,*
buf
,
size
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

890 
i2a_ASN1_STRING
(
BIO
 *
bp
, 
ASN1_STRING
 *
a
, 
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

892 
i2t_ASN1_OBJECT
(*
buf
,
buf_Àn
,
ASN1_OBJECT
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

894 
a2d_ASN1_OBJECT
(*
out
,
ﬁí
, c⁄° *
buf
, 
num
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

895 
ASN1_OBJECT
 *
ASN1_OBJECT_¸óã
(
nid
, *
d©a
,
Àn
,

896 c⁄° *
¢
, c⁄° *
 
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

898 
ASN1_INTEGER_£t
(
ASN1_INTEGER
 *
a
, 
v
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

899 
ASN1_INTEGER_gë
(
ASN1_INTEGER
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

900 
ASN1_INTEGER
 *
BN_to_ASN1_INTEGER
(
BIGNUM
 *
bn
, ASN1_INTEGER *
ai
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

901 
BIGNUM
 *
ASN1_INTEGER_to_BN
(
ASN1_INTEGER
 *
ai
,BIGNUM *
bn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

903 
ASN1_ENUMERATED_£t
(
ASN1_ENUMERATED
 *
a
, 
v
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

904 
ASN1_ENUMERATED_gë
(
ASN1_ENUMERATED
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

905 
ASN1_ENUMERATED
 *
BN_to_ASN1_ENUMERATED
(
BIGNUM
 *
bn
, ASN1_ENUMERATED *
ai
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

906 
BIGNUM
 *
ASN1_ENUMERATED_to_BN
(
ASN1_ENUMERATED
 *
ai
,BIGNUM *
bn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

910 
ASN1_PRINTABLE_ty≥
(c⁄° *
s
, 
max
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

912 
i2d_ASN1_byãs
(
ASN1_STRING
 *
a
, **
µ
, 
èg
, 
x˛ass
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

913 
ASN1_STRING
 *
d2i_ASN1_byãs
(ASN1_STRING **
a
, c⁄° **
µ
,

914 
Àngth
, 
Pèg
, 
P˛ass
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

915 
ASN1_èg2bô
(
èg
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

917 
ASN1_STRING
 *
d2i_ASN1_ty≥_byãs
(ASN1_STRING **
a
,c⁄° **
µ
,

918 
Àngth
,
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

921 
a¢1_Föish
(
ASN1_CTX
 *
c
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

922 
a¢1_c⁄°_Föish
(
ASN1_c⁄°_CTX
 *
c
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

925 
ASN1_gë_obje˘
(c⁄° **
µ
, *
∂ígth
, *
±ag
,

926 *
p˛ass
, 
omax
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

927 
ASN1_check_öföôe_íd
(**
p
,
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

928 
ASN1_c⁄°_check_öföôe_íd
(c⁄° **
p
,
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

929 
ASN1_put_obje˘
(**
µ
, 
c⁄°ru˘ed
, 
Àngth
,

930 
èg
, 
x˛ass
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

931 
ASN1_put_eoc
(**
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

932 
ASN1_obje˘_size
(
c⁄°ru˘ed
, 
Àngth
, 
èg
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

935 *
ASN1_dup
(
i2d_of_void
 *
i2d
, 
d2i_of_void
 *
d2i
, *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

937 
	#ASN1_dup_of
(
ty≥
,
i2d
,
d2i
,
x
) \

938 ((
ty≥
*)
	`ASN1_dup
(
	`CHECKED_I2D_OF
—y≥, 
i2d
), \

939 
	`CHECKED_D2I_OF
(
ty≥
, 
d2i
), \

940 
	`CHECKED_PTR_OF_TO_CHAR
(
ty≥
, 
x
)))

	)

942 
	#ASN1_dup_of_c⁄°
(
ty≥
,
i2d
,
d2i
,
x
) \

943 ((
ty≥
*)
	`ASN1_dup
(
	`CHECKED_I2D_OF
(c⁄°Åy≥, 
i2d
), \

944 
	`CHECKED_D2I_OF
(
ty≥
, 
d2i
), \

945 
	`CHECKED_PTR_OF_TO_CHAR
(c⁄° 
ty≥
, 
x
)))

	)

947 *
ASN1_ôem_dup
(c⁄° 
ASN1_ITEM
 *
ô
, *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

951 
	#M_ASN1_√w_of
(
ty≥
Ë—y≥ *)
	`ASN1_ôem_√w
(
	`ASN1_ITEM_Ωå
—y≥))

	)

952 
	#M_ASN1_‰ì_of
(
x
, 
ty≥
) \

953 
	`ASN1_ôem_‰ì
(
	`CHECKED_PTR_OF
(
ty≥
, 
x
), 
	`ASN1_ITEM_Ωå
—y≥))

	)

955 #i‚de‡
OPENSSL_NO_FP_API


956 *
ASN1_d2i_Â
(*(*
x√w
)(), 
d2i_of_void
 *
d2i
, 
FILE
 *
ö
, **
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

958 
	#ASN1_d2i_Â_of
(
ty≥
,
x√w
,
d2i
,
ö
,
x
) \

959 ((
ty≥
*)
	`ASN1_d2i_Â
(
	`CHECKED_NEW_OF
—y≥, 
x√w
), \

960 
	`CHECKED_D2I_OF
(
ty≥
, 
d2i
), \

961 
ö
, \

962 
	`CHECKED_PPTR_OF
(
ty≥
, 
x
)))

	)

964 *
ASN1_ôem_d2i_Â
(c⁄° 
ASN1_ITEM
 *
ô
, 
FILE
 *
ö
, *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

965 
ASN1_i2d_Â
(
i2d_of_void
 *
i2d
,
FILE
 *
out
,*
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

967 
	#ASN1_i2d_Â_of
(
ty≥
,
i2d
,
out
,
x
) \

968 (
	`ASN1_i2d_Â
(
	`CHECKED_I2D_OF
(
ty≥
, 
i2d
), \

969 
out
, \

970 
	`CHECKED_PTR_OF
(
ty≥
, 
x
)))

	)

972 
	#ASN1_i2d_Â_of_c⁄°
(
ty≥
,
i2d
,
out
,
x
) \

973 (
	`ASN1_i2d_Â
(
	`CHECKED_I2D_OF
(c⁄° 
ty≥
, 
i2d
), \

974 
out
, \

975 
	`CHECKED_PTR_OF
(c⁄° 
ty≥
, 
x
)))

	)

977 
ASN1_ôem_i2d_Â
(c⁄° 
ASN1_ITEM
 *
ô
, 
FILE
 *
out
, *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

978 
ASN1_STRING_¥öt_ex_Â
(
FILE
 *
Â
, 
ASN1_STRING
 *
°r
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

981 
ASN1_STRING_to_UTF8
(**
out
, 
ASN1_STRING
 *
ö
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

983 #i‚de‡
OPENSSL_NO_BIO


984 *
ASN1_d2i_bio
(*(*
x√w
)(), 
d2i_of_void
 *
d2i
, 
BIO
 *
ö
, **
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

986 
	#ASN1_d2i_bio_of
(
ty≥
,
x√w
,
d2i
,
ö
,
x
) \

987 ((
ty≥
*)
	`ASN1_d2i_bio
–
	`CHECKED_NEW_OF
—y≥, 
x√w
), \

988 
	`CHECKED_D2I_OF
(
ty≥
, 
d2i
), \

989 
ö
, \

990 
	`CHECKED_PPTR_OF
(
ty≥
, 
x
)))

	)

992 *
ASN1_ôem_d2i_bio
(c⁄° 
ASN1_ITEM
 *
ô
, 
BIO
 *
ö
, *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

993 
ASN1_i2d_bio
(
i2d_of_void
 *
i2d
,
BIO
 *
out
, *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

995 
	#ASN1_i2d_bio_of
(
ty≥
,
i2d
,
out
,
x
) \

996 (
	`ASN1_i2d_bio
(
	`CHECKED_I2D_OF
(
ty≥
, 
i2d
), \

997 
out
, \

998 
	`CHECKED_PTR_OF
(
ty≥
, 
x
)))

	)

1000 
	#ASN1_i2d_bio_of_c⁄°
(
ty≥
,
i2d
,
out
,
x
) \

1001 (
	`ASN1_i2d_bio
(
	`CHECKED_I2D_OF
(c⁄° 
ty≥
, 
i2d
), \

1002 
out
, \

1003 
	`CHECKED_PTR_OF
(c⁄° 
ty≥
, 
x
)))

	)

1005 
ASN1_ôem_i2d_bio
(c⁄° 
ASN1_ITEM
 *
ô
, 
BIO
 *
out
, *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1006 
ASN1_UTCTIME_¥öt
(
BIO
 *
Â
,
ASN1_UTCTIME
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1007 
ASN1_GENERALIZEDTIME_¥öt
(
BIO
 *
Â
,
ASN1_GENERALIZEDTIME
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1008 
ASN1_TIME_¥öt
(
BIO
 *
Â
,
ASN1_TIME
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1009 
ASN1_STRING_¥öt
(
BIO
 *
bp
,
ASN1_STRING
 *
v
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1010 
ASN1_STRING_¥öt_ex
(
BIO
 *
out
, 
ASN1_STRING
 *
°r
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1011 
ASN1_∑r£
(
BIO
 *
bp
,c⁄° *
µ
,
Àn
,
ödít
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1012 
ASN1_∑r£_dump
(
BIO
 *
bp
,c⁄° *
µ
,
Àn
,
ödít
,
dump
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1014 c⁄° *
ASN1_èg2°r
(
èg
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1017 
i2d_ASN1_HEADER
(
ASN1_HEADER
 *
a
,**
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1018 
ASN1_HEADER
 *
d2i_ASN1_HEADER
(ASN1_HEADER **
a
,c⁄° **
µ
, 
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1019 
ASN1_HEADER
 *
ASN1_HEADER_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1020 
ASN1_HEADER_‰ì
(
ASN1_HEADER
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1022 
ASN1_UNIVERSALSTRING_to_°rög
(
ASN1_UNIVERSALSTRING
 *
s
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1025 
ASN1_METHOD
 *
X509_a¢1_mëh
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1026 
ASN1_METHOD
 *
RSAPriv©eKey_a¢1_mëh
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1027 
ASN1_METHOD
 *
ASN1_IA5STRING_a¢1_mëh
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1028 
ASN1_METHOD
 *
ASN1_BIT_STRING_a¢1_mëh
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1030 
ASN1_TYPE_£t_o˘ë°rög
(
ASN1_TYPE
 *
a
,

1031 *
d©a
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1032 
ASN1_TYPE_gë_o˘ë°rög
(
ASN1_TYPE
 *
a
,

1033 *
d©a
, 
max_Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1034 
ASN1_TYPE_£t_öt_o˘ë°rög
(
ASN1_TYPE
 *
a
, 
num
,

1035 *
d©a
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1036 
ASN1_TYPE_gë_öt_o˘ë°rög
(
ASN1_TYPE
 *
a
,*
num
,

1037 *
d©a
, 
max_Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1039 
STACK
 *
ASN1_£q_u≈ack
(c⁄° *
buf
, 
Àn
,

1040 
d2i_of_void
 *
d2i
, (*
‰ì_func
)(*)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1041 *
ASN1_£q_∑ck
(
STACK
 *
ß„s
, 
i2d_of_void
 *
i2d
,

1042 **
buf
, *
Àn
 ) 
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1043 *
ASN1_u≈ack_°rög
(
ASN1_STRING
 *
o˘
, 
d2i_of_void
 *
d2i
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1044 *
ASN1_ôem_u≈ack
(
ASN1_STRING
 *
o˘
, c⁄° 
ASN1_ITEM
 *
ô
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1045 
ASN1_STRING
 *
ASN1_∑ck_°rög
(*
obj
, 
i2d_of_void
 *
i2d
,

1046 
ASN1_OCTET_STRING
 **
o˘
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1048 
	#ASN1_∑ck_°rög_of
(
ty≥
,
obj
,
i2d
,
o˘
) \

1049 (
	`ASN1_∑ck_°rög
(
	`CHECKED_PTR_OF
(
ty≥
, 
obj
), \

1050 
	`CHECKED_I2D_OF
(
ty≥
, 
i2d
), \

1051 
o˘
))

	)

1053 
ASN1_STRING
 *
ASN1_ôem_∑ck
(*
obj
, c⁄° 
ASN1_ITEM
 *
ô
, 
ASN1_OCTET_STRING
 **
o˘
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1055 
ASN1_STRING_£t_deÁu…_mask
(
mask
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1056 
ASN1_STRING_£t_deÁu…_mask_asc
(c⁄° *
p
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1057 
ASN1_STRING_gë_deÁu…_mask
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1058 
ASN1_mb°rög_c›y
(
ASN1_STRING
 **
out
, c⁄° *
ö
, 
Àn
,

1059 
öf‹m
, 
mask
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1060 
ASN1_mb°rög_nc›y
(
ASN1_STRING
 **
out
, c⁄° *
ö
, 
Àn
,

1061 
öf‹m
, 
mask
,

1062 
mösize
, 
maxsize
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1064 
ASN1_STRING
 *
ASN1_STRING_£t_by_NID
(ASN1_STRING **
out
,

1065 c⁄° *
ö
, 
öÀn
, 
öf‹m
, 
nid
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1066 
ASN1_STRING_TABLE
 *
ASN1_STRING_TABLE_gë
(
nid
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1067 
ASN1_STRING_TABLE_add
(, , , , Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1068 
ASN1_STRING_TABLE_˛ónup
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1073 
ASN1_VALUE
 *
ASN1_ôem_√w
(c⁄° 
ASN1_ITEM
 *
ô
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1074 
ASN1_ôem_‰ì
(
ASN1_VALUE
 *
vÆ
, c⁄° 
ASN1_ITEM
 *
ô
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1075 
ASN1_VALUE
 * 
ASN1_ôem_d2i
(ASN1_VALUE **
vÆ
, c⁄° **
ö
, 
Àn
, c⁄° 
ASN1_ITEM
 *
ô
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1076 
ASN1_ôem_i2d
(
ASN1_VALUE
 *
vÆ
, **
out
, c⁄° 
ASN1_ITEM
 *
ô
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1077 
ASN1_ôem_ndef_i2d
(
ASN1_VALUE
 *
vÆ
, **
out
, c⁄° 
ASN1_ITEM
 *
ô
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1079 
ASN1_add_oid_moduÀ
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1081 
ASN1_TYPE
 *
ASN1_gíî©e_nc⁄f
(*
°r
, 
CONF
 *
nc⁄f
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1082 
ASN1_TYPE
 *
ASN1_gíî©e_v3
(*
°r
, 
X509V3_CTX
 *
˙f
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1084 
	ta¢1_ouçut_d©a_‚
(
	tBIO
 *
	tout
, BIO *
	td©a
, 
	tASN1_VALUE
 *
	tvÆ
, 
	tÊags
,

1085 c⁄° 
	tASN1_ITEM
 *
	tô
);

1087 
öt_smime_wrôe_ASN1
(
BIO
 *
bio
, 
ASN1_VALUE
 *
vÆ
, BIO *
d©a
, 
Êags
,

1088 
˘y≥_nid
, 
ec⁄t_nid
,

1089 
STACK_OF
(
X509_ALGOR
Ë*
mdÆgs
,

1090 
a¢1_ouçut_d©a_‚
 *
d©a_‚
,

1091 c⁄° 
ASN1_ITEM
 *
ô
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1092 
ASN1_VALUE
 *
SMIME_ªad_ASN1
(
BIO
 *
bio
, BIO **
bc⁄t
, c⁄° 
ASN1_ITEM
 *
ô
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1098 
ERR_lﬂd_ASN1_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1103 
	#ASN1_F_A2D_ASN1_OBJECT
 100

	)

1104 
	#ASN1_F_A2I_ASN1_ENUMERATED
 101

	)

1105 
	#ASN1_F_A2I_ASN1_INTEGER
 102

	)

1106 
	#ASN1_F_A2I_ASN1_STRING
 103

	)

1107 
	#ASN1_F_APPEND_EXP
 176

	)

1108 
	#ASN1_F_ASN1_BIT_STRING_SET_BIT
 183

	)

1109 
	#ASN1_F_ASN1_CB
 177

	)

1110 
	#ASN1_F_ASN1_CHECK_TLEN
 104

	)

1111 
	#ASN1_F_ASN1_COLLATE_PRIMITIVE
 105

	)

1112 
	#ASN1_F_ASN1_COLLECT
 106

	)

1113 
	#ASN1_F_ASN1_D2I_EX_PRIMITIVE
 108

	)

1114 
	#ASN1_F_ASN1_D2I_FP
 109

	)

1115 
	#ASN1_F_ASN1_D2I_READ_BIO
 107

	)

1116 
	#ASN1_F_ASN1_DIGEST
 184

	)

1117 
	#ASN1_F_ASN1_DO_ADB
 110

	)

1118 
	#ASN1_F_ASN1_DUP
 111

	)

1119 
	#ASN1_F_ASN1_ENUMERATED_SET
 112

	)

1120 
	#ASN1_F_ASN1_ENUMERATED_TO_BN
 113

	)

1121 
	#ASN1_F_ASN1_EX_C2I
 204

	)

1122 
	#ASN1_F_ASN1_FIND_END
 190

	)

1123 
	#ASN1_F_ASN1_GENERALIZEDTIME_SET
 185

	)

1124 
	#ASN1_F_ASN1_GENERATE_V3
 178

	)

1125 
	#ASN1_F_ASN1_GET_OBJECT
 114

	)

1126 
	#ASN1_F_ASN1_HEADER_NEW
 115

	)

1127 
	#ASN1_F_ASN1_I2D_BIO
 116

	)

1128 
	#ASN1_F_ASN1_I2D_FP
 117

	)

1129 
	#ASN1_F_ASN1_INTEGER_SET
 118

	)

1130 
	#ASN1_F_ASN1_INTEGER_TO_BN
 119

	)

1131 
	#ASN1_F_ASN1_ITEM_D2I_FP
 206

	)

1132 
	#ASN1_F_ASN1_ITEM_DUP
 191

	)

1133 
	#ASN1_F_ASN1_ITEM_EX_COMBINE_NEW
 121

	)

1134 
	#ASN1_F_ASN1_ITEM_EX_D2I
 120

	)

1135 
	#ASN1_F_ASN1_ITEM_I2D_BIO
 192

	)

1136 
	#ASN1_F_ASN1_ITEM_I2D_FP
 193

	)

1137 
	#ASN1_F_ASN1_ITEM_PACK
 198

	)

1138 
	#ASN1_F_ASN1_ITEM_SIGN
 195

	)

1139 
	#ASN1_F_ASN1_ITEM_UNPACK
 199

	)

1140 
	#ASN1_F_ASN1_ITEM_VERIFY
 197

	)

1141 
	#ASN1_F_ASN1_MBSTRING_NCOPY
 122

	)

1142 
	#ASN1_F_ASN1_OBJECT_NEW
 123

	)

1143 
	#ASN1_F_ASN1_OUTPUT_DATA
 207

	)

1144 
	#ASN1_F_ASN1_PACK_STRING
 124

	)

1145 
	#ASN1_F_ASN1_PCTX_NEW
 205

	)

1146 
	#ASN1_F_ASN1_PKCS5_PBE_SET
 125

	)

1147 
	#ASN1_F_ASN1_SEQ_PACK
 126

	)

1148 
	#ASN1_F_ASN1_SEQ_UNPACK
 127

	)

1149 
	#ASN1_F_ASN1_SIGN
 128

	)

1150 
	#ASN1_F_ASN1_STR2TYPE
 179

	)

1151 
	#ASN1_F_ASN1_STRING_SET
 186

	)

1152 
	#ASN1_F_ASN1_STRING_TABLE_ADD
 129

	)

1153 
	#ASN1_F_ASN1_STRING_TYPE_NEW
 130

	)

1154 
	#ASN1_F_ASN1_TEMPLATE_EX_D2I
 132

	)

1155 
	#ASN1_F_ASN1_TEMPLATE_NEW
 133

	)

1156 
	#ASN1_F_ASN1_TEMPLATE_NOEXP_D2I
 131

	)

1157 
	#ASN1_F_ASN1_TIME_SET
 175

	)

1158 
	#ASN1_F_ASN1_TYPE_GET_INT_OCTETSTRING
 134

	)

1159 
	#ASN1_F_ASN1_TYPE_GET_OCTETSTRING
 135

	)

1160 
	#ASN1_F_ASN1_UNPACK_STRING
 136

	)

1161 
	#ASN1_F_ASN1_UTCTIME_SET
 187

	)

1162 
	#ASN1_F_ASN1_VERIFY
 137

	)

1163 
	#ASN1_F_B64_READ_ASN1
 208

	)

1164 
	#ASN1_F_B64_WRITE_ASN1
 209

	)

1165 
	#ASN1_F_BITSTR_CB
 180

	)

1166 
	#ASN1_F_BN_TO_ASN1_ENUMERATED
 138

	)

1167 
	#ASN1_F_BN_TO_ASN1_INTEGER
 139

	)

1168 
	#ASN1_F_C2I_ASN1_BIT_STRING
 189

	)

1169 
	#ASN1_F_C2I_ASN1_INTEGER
 194

	)

1170 
	#ASN1_F_C2I_ASN1_OBJECT
 196

	)

1171 
	#ASN1_F_COLLECT_DATA
 140

	)

1172 
	#ASN1_F_D2I_ASN1_BIT_STRING
 141

	)

1173 
	#ASN1_F_D2I_ASN1_BOOLEAN
 142

	)

1174 
	#ASN1_F_D2I_ASN1_BYTES
 143

	)

1175 
	#ASN1_F_D2I_ASN1_GENERALIZEDTIME
 144

	)

1176 
	#ASN1_F_D2I_ASN1_HEADER
 145

	)

1177 
	#ASN1_F_D2I_ASN1_INTEGER
 146

	)

1178 
	#ASN1_F_D2I_ASN1_OBJECT
 147

	)

1179 
	#ASN1_F_D2I_ASN1_SET
 148

	)

1180 
	#ASN1_F_D2I_ASN1_TYPE_BYTES
 149

	)

1181 
	#ASN1_F_D2I_ASN1_UINTEGER
 150

	)

1182 
	#ASN1_F_D2I_ASN1_UTCTIME
 151

	)

1183 
	#ASN1_F_D2I_NETSCAPE_RSA
 152

	)

1184 
	#ASN1_F_D2I_NETSCAPE_RSA_2
 153

	)

1185 
	#ASN1_F_D2I_PRIVATEKEY
 154

	)

1186 
	#ASN1_F_D2I_PUBLICKEY
 155

	)

1187 
	#ASN1_F_D2I_RSA_NET
 200

	)

1188 
	#ASN1_F_D2I_RSA_NET_2
 201

	)

1189 
	#ASN1_F_D2I_X509
 156

	)

1190 
	#ASN1_F_D2I_X509_CINF
 157

	)

1191 
	#ASN1_F_D2I_X509_PKEY
 159

	)

1192 
	#ASN1_F_I2D_ASN1_SET
 188

	)

1193 
	#ASN1_F_I2D_ASN1_TIME
 160

	)

1194 
	#ASN1_F_I2D_DSA_PUBKEY
 161

	)

1195 
	#ASN1_F_I2D_EC_PUBKEY
 181

	)

1196 
	#ASN1_F_I2D_PRIVATEKEY
 163

	)

1197 
	#ASN1_F_I2D_PUBLICKEY
 164

	)

1198 
	#ASN1_F_I2D_RSA_NET
 162

	)

1199 
	#ASN1_F_I2D_RSA_PUBKEY
 165

	)

1200 
	#ASN1_F_LONG_C2I
 166

	)

1201 
	#ASN1_F_OID_MODULE_INIT
 174

	)

1202 
	#ASN1_F_PARSE_TAGGING
 182

	)

1203 
	#ASN1_F_PKCS5_PBE2_SET
 167

	)

1204 
	#ASN1_F_PKCS5_PBE_SET
 202

	)

1205 
	#ASN1_F_SMIME_READ_ASN1
 210

	)

1206 
	#ASN1_F_SMIME_TEXT
 211

	)

1207 
	#ASN1_F_X509_CINF_NEW
 168

	)

1208 
	#ASN1_F_X509_CRL_ADD0_REVOKED
 169

	)

1209 
	#ASN1_F_X509_INFO_NEW
 170

	)

1210 
	#ASN1_F_X509_NAME_ENCODE
 203

	)

1211 
	#ASN1_F_X509_NAME_EX_D2I
 158

	)

1212 
	#ASN1_F_X509_NAME_EX_NEW
 171

	)

1213 
	#ASN1_F_X509_NEW
 172

	)

1214 
	#ASN1_F_X509_PKEY_NEW
 173

	)

1217 
	#ASN1_R_ADDING_OBJECT
 171

	)

1218 
	#ASN1_R_ASN1_PARSE_ERROR
 198

	)

1219 
	#ASN1_R_ASN1_SIG_PARSE_ERROR
 199

	)

1220 
	#ASN1_R_AUX_ERROR
 100

	)

1221 
	#ASN1_R_BAD_CLASS
 101

	)

1222 
	#ASN1_R_BAD_OBJECT_HEADER
 102

	)

1223 
	#ASN1_R_BAD_PASSWORD_READ
 103

	)

1224 
	#ASN1_R_BAD_TAG
 104

	)

1225 
	#ASN1_R_BMPSTRING_IS_WRONG_LENGTH
 210

	)

1226 
	#ASN1_R_BN_LIB
 105

	)

1227 
	#ASN1_R_BOOLEAN_IS_WRONG_LENGTH
 106

	)

1228 
	#ASN1_R_BUFFER_TOO_SMALL
 107

	)

1229 
	#ASN1_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER
 108

	)

1230 
	#ASN1_R_DATA_IS_WRONG
 109

	)

1231 
	#ASN1_R_DECODE_ERROR
 110

	)

1232 
	#ASN1_R_DECODING_ERROR
 111

	)

1233 
	#ASN1_R_DEPTH_EXCEEDED
 174

	)

1234 
	#ASN1_R_ENCODE_ERROR
 112

	)

1235 
	#ASN1_R_ERROR_GETTING_TIME
 173

	)

1236 
	#ASN1_R_ERROR_LOADING_SECTION
 172

	)

1237 
	#ASN1_R_ERROR_PARSING_SET_ELEMENT
 113

	)

1238 
	#ASN1_R_ERROR_SETTING_CIPHER_PARAMS
 114

	)

1239 
	#ASN1_R_EXPECTING_AN_INTEGER
 115

	)

1240 
	#ASN1_R_EXPECTING_AN_OBJECT
 116

	)

1241 
	#ASN1_R_EXPECTING_A_BOOLEAN
 117

	)

1242 
	#ASN1_R_EXPECTING_A_TIME
 118

	)

1243 
	#ASN1_R_EXPLICIT_LENGTH_MISMATCH
 119

	)

1244 
	#ASN1_R_EXPLICIT_TAG_NOT_CONSTRUCTED
 120

	)

1245 
	#ASN1_R_FIELD_MISSING
 121

	)

1246 
	#ASN1_R_FIRST_NUM_TOO_LARGE
 122

	)

1247 
	#ASN1_R_HEADER_TOO_LONG
 123

	)

1248 
	#ASN1_R_ILLEGAL_BITSTRING_FORMAT
 175

	)

1249 
	#ASN1_R_ILLEGAL_BOOLEAN
 176

	)

1250 
	#ASN1_R_ILLEGAL_CHARACTERS
 124

	)

1251 
	#ASN1_R_ILLEGAL_FORMAT
 177

	)

1252 
	#ASN1_R_ILLEGAL_HEX
 178

	)

1253 
	#ASN1_R_ILLEGAL_IMPLICIT_TAG
 179

	)

1254 
	#ASN1_R_ILLEGAL_INTEGER
 180

	)

1255 
	#ASN1_R_ILLEGAL_NESTED_TAGGING
 181

	)

1256 
	#ASN1_R_ILLEGAL_NULL
 125

	)

1257 
	#ASN1_R_ILLEGAL_NULL_VALUE
 182

	)

1258 
	#ASN1_R_ILLEGAL_OBJECT
 183

	)

1259 
	#ASN1_R_ILLEGAL_OPTIONAL_ANY
 126

	)

1260 
	#ASN1_R_ILLEGAL_OPTIONS_ON_ITEM_TEMPLATE
 170

	)

1261 
	#ASN1_R_ILLEGAL_TAGGED_ANY
 127

	)

1262 
	#ASN1_R_ILLEGAL_TIME_VALUE
 184

	)

1263 
	#ASN1_R_INTEGER_NOT_ASCII_FORMAT
 185

	)

1264 
	#ASN1_R_INTEGER_TOO_LARGE_FOR_LONG
 128

	)

1265 
	#ASN1_R_INVALID_BMPSTRING_LENGTH
 129

	)

1266 
	#ASN1_R_INVALID_DIGIT
 130

	)

1267 
	#ASN1_R_INVALID_MIME_TYPE
 200

	)

1268 
	#ASN1_R_INVALID_MODIFIER
 186

	)

1269 
	#ASN1_R_INVALID_NUMBER
 187

	)

1270 
	#ASN1_R_INVALID_OBJECT_ENCODING
 212

	)

1271 
	#ASN1_R_INVALID_SEPARATOR
 131

	)

1272 
	#ASN1_R_INVALID_TIME_FORMAT
 132

	)

1273 
	#ASN1_R_INVALID_UNIVERSALSTRING_LENGTH
 133

	)

1274 
	#ASN1_R_INVALID_UTF8STRING
 134

	)

1275 
	#ASN1_R_IV_TOO_LARGE
 135

	)

1276 
	#ASN1_R_LENGTH_ERROR
 136

	)

1277 
	#ASN1_R_LIST_ERROR
 188

	)

1278 
	#ASN1_R_MIME_NO_CONTENT_TYPE
 201

	)

1279 
	#ASN1_R_MIME_PARSE_ERROR
 202

	)

1280 
	#ASN1_R_MIME_SIG_PARSE_ERROR
 203

	)

1281 
	#ASN1_R_MISSING_EOC
 137

	)

1282 
	#ASN1_R_MISSING_SECOND_NUMBER
 138

	)

1283 
	#ASN1_R_MISSING_VALUE
 189

	)

1284 
	#ASN1_R_MSTRING_NOT_UNIVERSAL
 139

	)

1285 
	#ASN1_R_MSTRING_WRONG_TAG
 140

	)

1286 
	#ASN1_R_NESTED_ASN1_STRING
 197

	)

1287 
	#ASN1_R_NON_HEX_CHARACTERS
 141

	)

1288 
	#ASN1_R_NOT_ASCII_FORMAT
 190

	)

1289 
	#ASN1_R_NOT_ENOUGH_DATA
 142

	)

1290 
	#ASN1_R_NO_CONTENT_TYPE
 204

	)

1291 
	#ASN1_R_NO_MATCHING_CHOICE_TYPE
 143

	)

1292 
	#ASN1_R_NO_MULTIPART_BODY_FAILURE
 205

	)

1293 
	#ASN1_R_NO_MULTIPART_BOUNDARY
 206

	)

1294 
	#ASN1_R_NO_SIG_CONTENT_TYPE
 207

	)

1295 
	#ASN1_R_NULL_IS_WRONG_LENGTH
 144

	)

1296 
	#ASN1_R_OBJECT_NOT_ASCII_FORMAT
 191

	)

1297 
	#ASN1_R_ODD_NUMBER_OF_CHARS
 145

	)

1298 
	#ASN1_R_PRIVATE_KEY_HEADER_MISSING
 146

	)

1299 
	#ASN1_R_SECOND_NUMBER_TOO_LARGE
 147

	)

1300 
	#ASN1_R_SEQUENCE_LENGTH_MISMATCH
 148

	)

1301 
	#ASN1_R_SEQUENCE_NOT_CONSTRUCTED
 149

	)

1302 
	#ASN1_R_SEQUENCE_OR_SET_NEEDS_CONFIG
 192

	)

1303 
	#ASN1_R_SHORT_LINE
 150

	)

1304 
	#ASN1_R_SIG_INVALID_MIME_TYPE
 208

	)

1305 
	#ASN1_R_STREAMING_NOT_SUPPORTED
 209

	)

1306 
	#ASN1_R_STRING_TOO_LONG
 151

	)

1307 
	#ASN1_R_STRING_TOO_SHORT
 152

	)

1308 
	#ASN1_R_TAG_VALUE_TOO_HIGH
 153

	)

1309 
	#ASN1_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD
 154

	)

1310 
	#ASN1_R_TIME_NOT_ASCII_FORMAT
 193

	)

1311 
	#ASN1_R_TOO_LONG
 155

	)

1312 
	#ASN1_R_TYPE_NOT_CONSTRUCTED
 156

	)

1313 
	#ASN1_R_UNABLE_TO_DECODE_RSA_KEY
 157

	)

1314 
	#ASN1_R_UNABLE_TO_DECODE_RSA_PRIVATE_KEY
 158

	)

1315 
	#ASN1_R_UNEXPECTED_EOC
 159

	)

1316 
	#ASN1_R_UNIVERSALSTRING_IS_WRONG_LENGTH
 211

	)

1317 
	#ASN1_R_UNKNOWN_FORMAT
 160

	)

1318 
	#ASN1_R_UNKNOWN_MESSAGE_DIGEST_ALGORITHM
 161

	)

1319 
	#ASN1_R_UNKNOWN_OBJECT_TYPE
 162

	)

1320 
	#ASN1_R_UNKNOWN_PUBLIC_KEY_TYPE
 163

	)

1321 
	#ASN1_R_UNKNOWN_TAG
 194

	)

1322 
	#ASN1_R_UNKOWN_FORMAT
 195

	)

1323 
	#ASN1_R_UNSUPPORTED_ANY_DEFINED_BY_TYPE
 164

	)

1324 
	#ASN1_R_UNSUPPORTED_CIPHER
 165

	)

1325 
	#ASN1_R_UNSUPPORTED_ENCRYPTION_ALGORITHM
 166

	)

1326 
	#ASN1_R_UNSUPPORTED_PUBLIC_KEY_TYPE
 167

	)

1327 
	#ASN1_R_UNSUPPORTED_TYPE
 196

	)

1328 
	#ASN1_R_WRONG_TAG
 168

	)

1329 
	#ASN1_R_WRONG_TYPE
 169

	)

1331 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/bn.h

72 #i‚de‡
HEADER_BN_H


73 
	#HEADER_BN_H


	)

75 
	~<AvaûabûôyMa¸os.h
>

77 
	~<›ís¶/e_os2.h
>

78 #i‚de‡
OPENSSL_NO_FP_API


79 
	~<°dio.h
>

81 
	~<›ís¶/os¶_typ.h
>

83 #ifde‡ 
__˝lu•lus


99 
	#BN_MUL_COMBA


	)

100 
	#BN_SQR_COMBA


	)

101 
	#BN_RECURSION


	)

114 #i‡
deföed
(
OPENSSL_SYS_MSDOS
Ë|| deföed(
OPENSSL_SYS_WINDOWS
) || \

115 
deföed
(
OPENSSL_SYS_WIN32
Ë|| deföed(
löux
)

116 #i‚de‡
BN_DIV2W


117 
	#BN_DIV2W


	)

124 #ifde‡
SIXTY_FOUR_BIT_LONG


125 
	#BN_ULLONG
 

	)

126 
	#BN_ULONG
 

	)

127 
	#BN_LONG
 

	)

128 
	#BN_BITS
 128

	)

129 
	#BN_BYTES
 8

	)

130 
	#BN_BITS2
 64

	)

131 
	#BN_BITS4
 32

	)

132 
	#BN_MASK
 (0xffffffffffffffffffffffffffffffffLL)

	)

133 
	#BN_MASK2
 (0xffffffffffffffffL)

	)

134 
	#BN_MASK2l
 (0xffffffffL)

	)

135 
	#BN_MASK2h
 (0xffffffff00000000L)

	)

136 
	#BN_MASK2h1
 (0xffffffff80000000L)

	)

137 
	#BN_TBIT
 (0x8000000000000000L)

	)

138 
	#BN_DEC_CONV
 (10000000000000000000UL)

	)

139 
	#BN_DEC_FMT1
 "%lu"

	)

140 
	#BN_DEC_FMT2
 "%019lu"

	)

141 
	#BN_DEC_NUM
 19

	)

149 #ifde‡
SIXTY_FOUR_BIT


150 #unde‡
BN_LLONG


151 #unde‡
BN_ULLONG


152 
	#BN_ULONG
 

	)

153 
	#BN_LONG
 

	)

154 
	#BN_BITS
 128

	)

155 
	#BN_BYTES
 8

	)

156 
	#BN_BITS2
 64

	)

157 
	#BN_BITS4
 32

	)

158 
	#BN_MASK2
 (0xffffffffffffffffLL)

	)

159 
	#BN_MASK2l
 (0xffffffffL)

	)

160 
	#BN_MASK2h
 (0xffffffff00000000LL)

	)

161 
	#BN_MASK2h1
 (0xffffffff80000000LL)

	)

162 
	#BN_TBIT
 (0x8000000000000000LL)

	)

163 
	#BN_DEC_CONV
 (10000000000000000000ULL)

	)

164 
	#BN_DEC_FMT1
 "%Œu"

	)

165 
	#BN_DEC_FMT2
 "%019Œu"

	)

166 
	#BN_DEC_NUM
 19

	)

169 #ifde‡
THIRTY_TWO_BIT


170 #ifde‡
BN_LLONG


171 #i‡
deföed
(
OPENSSL_SYS_WIN32
Ë&& !deföed(
__GNUC__
)

172 
	#BN_ULLONG
 
__öt64


	)

174 
	#BN_ULLONG
 

	)

177 
	#BN_ULONG
 

	)

178 
	#BN_LONG
 

	)

179 
	#BN_BITS
 64

	)

180 
	#BN_BYTES
 4

	)

181 
	#BN_BITS2
 32

	)

182 
	#BN_BITS4
 16

	)

183 #ifde‡
OPENSSL_SYS_WIN32


185 
	#BN_MASK
 (0xffffffffffffffffL)

	)

187 
	#BN_MASK
 (0xffffffffffffffffLL)

	)

189 
	#BN_MASK2
 (0xffffffffL)

	)

190 
	#BN_MASK2l
 (0xffff)

	)

191 
	#BN_MASK2h1
 (0xffff8000L)

	)

192 
	#BN_MASK2h
 (0xffff0000L)

	)

193 
	#BN_TBIT
 (0x80000000L)

	)

194 
	#BN_DEC_CONV
 (1000000000L)

	)

195 
	#BN_DEC_FMT1
 "%lu"

	)

196 
	#BN_DEC_FMT2
 "%09lu"

	)

197 
	#BN_DEC_NUM
 9

	)

200 #ifde‡
SIXTEEN_BIT


201 #i‚de‡
BN_DIV2W


202 
	#BN_DIV2W


	)

204 
	#BN_ULLONG
 

	)

205 
	#BN_ULONG
 

	)

206 
	#BN_LONG
 

	)

207 
	#BN_BITS
 32

	)

208 
	#BN_BYTES
 2

	)

209 
	#BN_BITS2
 16

	)

210 
	#BN_BITS4
 8

	)

211 
	#BN_MASK
 (0xffffffff)

	)

212 
	#BN_MASK2
 (0xffff)

	)

213 
	#BN_MASK2l
 (0xff)

	)

214 
	#BN_MASK2h1
 (0xff80)

	)

215 
	#BN_MASK2h
 (0xff00)

	)

216 
	#BN_TBIT
 (0x8000)

	)

217 
	#BN_DEC_CONV
 (100000)

	)

218 
	#BN_DEC_FMT1
 "%u"

	)

219 
	#BN_DEC_FMT2
 "%05u"

	)

220 
	#BN_DEC_NUM
 5

	)

223 #ifde‡
EIGHT_BIT


224 #i‚de‡
BN_DIV2W


225 
	#BN_DIV2W


	)

227 
	#BN_ULLONG
 

	)

228 
	#BN_ULONG
 

	)

229 
	#BN_LONG
 

	)

230 
	#BN_BITS
 16

	)

231 
	#BN_BYTES
 1

	)

232 
	#BN_BITS2
 8

	)

233 
	#BN_BITS4
 4

	)

234 
	#BN_MASK
 (0xffff)

	)

235 
	#BN_MASK2
 (0xff)

	)

236 
	#BN_MASK2l
 (0xf)

	)

237 
	#BN_MASK2h1
 (0xf8)

	)

238 
	#BN_MASK2h
 (0xf0)

	)

239 
	#BN_TBIT
 (0x80)

	)

240 
	#BN_DEC_CONV
 (100)

	)

241 
	#BN_DEC_FMT1
 "%u"

	)

242 
	#BN_DEC_FMT2
 "%02u"

	)

243 
	#BN_DEC_NUM
 2

	)

246 
	#BN_DEFAULT_BITS
 1280

	)

248 
	#BN_FLG_MALLOCED
 0x01

	)

249 
	#BN_FLG_STATIC_DATA
 0x02

	)

250 
	#BN_FLG_CONSTTIME
 0x04

	)

256 #i‚de‡
OPENSSL_NO_DEPRECATED


257 
	#BN_FLG_EXP_CONSTTIME
 
BN_FLG_CONSTTIME


	)

262 #i‚de‡
OPENSSL_NO_DEPRECATED


263 
	#BN_FLG_FREE
 0x8000

	)

265 
	#BN_£t_Êags
(
b
,
n
Ë((b)->
Êags
|=“))

	)

266 
	#BN_gë_Êags
(
b
,
n
Ë((b)->
Êags
&“))

	)

270 
	#BN_wôh_Êags
(
de°
,
b
,
n
Ë((de°)->
d
=(b)->d, \

271 (
de°
)->
t›
=(
b
)->top, \

272 (
de°
)->
dmax
=(
b
)->dmax, \

273 (
de°
)->
√g
=(
b
)->neg, \

274 (
de°
)->
Êags
=(((de°)->Êag†& 
BN_FLG_MALLOCED
) \

275 | ((
b
)->
Êags
 & ~
BN_FLG_MALLOCED
) \

276 | 
BN_FLG_STATIC_DATA
 \

277 | (
n
)))

	)

281 
bignum_°
 
	tBIGNUM
;

283 
bignum_˘x
 
	tBN_CTX
;

284 
bn_blödög_°
 
	tBN_BLINDING
;

285 
bn_m⁄t_˘x_°
 
	tBN_MONT_CTX
;

286 
bn_ª˝_˘x_°
 
	tBN_RECP_CTX
;

287 
bn_gícb_°
 
	tBN_GENCB
;

290 
	sbignum_°


292 
BN_ULONG
 *
d
;

293 
t›
;

295 
dmax
;

296 
√g
;

297 
Êags
;

301 
	sbn_m⁄t_˘x_°


303 
ri
;

304 
BIGNUM
 
RR
;

305 
BIGNUM
 
N
;

306 
BIGNUM
 
Ni
;

310 
BN_ULONG
 
n0
[2];

312 
BN_ULONG
 
n0
;

314 
Êags
;

320 
	sbn_ª˝_˘x_°


322 
BIGNUM
 
N
;

323 
BIGNUM
 
Nr
;

324 
num_bôs
;

325 
shi·
;

326 
Êags
;

330 
	sbn_gícb_°


332 
vî
;

333 *
¨g
;

337 (*
cb_1
)(, , *);

339 (*
cb_2
)(, , 
BN_GENCB
 *);

340 } 
cb
;

343 
BN_GENCB_ˇŒ
(
BN_GENCB
 *
cb
, 
a
, 
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

345 
	#BN_GENCB_£t_ﬁd
(
gícb
, 
ˇŒback
, 
cb_¨g
) { \

346 
BN_GENCB
 *
tmp_gícb
 = (
gícb
); \

347 
tmp_gícb
->
vî
 = 1; \

348 
tmp_gícb
->
¨g
 = (
cb_¨g
); \

349 
tmp_gícb
->
cb
.
cb_1
 = (
ˇŒback
); }

	)

351 
	#BN_GENCB_£t
(
gícb
, 
ˇŒback
, 
cb_¨g
) { \

352 
BN_GENCB
 *
tmp_gícb
 = (
gícb
); \

353 
tmp_gícb
->
vî
 = 2; \

354 
tmp_gícb
->
¨g
 = (
cb_¨g
); \

355 
tmp_gícb
->
cb
.
cb_2
 = (
ˇŒback
); }

	)

357 
	#BN_¥ime_checks
 0

	)

365 
	#BN_¥ime_checks_f‹_size
(
b
) ((b) >= 1300 ? 2 : \

366 (
b
) >= 850 ? 3 : \

367 (
b
) >= 650 ? 4 : \

368 (
b
) >= 550 ? 5 : \

369 (
b
) >= 450 ? 6 : \

370 (
b
) >= 400 ? 7 : \

371 (
b
) >= 350 ? 8 : \

372 (
b
) >= 300 ? 9 : \

373 (
b
) >= 250 ? 12 : \

374 (
b
) >= 200 ? 15 : \

375 (
b
) >= 150 ? 18 : \

376  27)

	)

378 
	#BN_num_byãs
(
a
Ë((
	`BN_num_bôs
◊)+7)/8)

	)

381 
	#BN_abs_is_w‹d
(
a
,
w
Ë(((◊)->
t›
 =1Ë&& (◊)->
d
[0] =(
BN_ULONG
)(w))) || \

382 (((
w
Ë=0Ë&& ((
a
)->
t›
 =0)))

	)

383 
	#BN_is_zîo
(
a
Ë(◊)->
t›
 =0)

	)

384 
	#BN_is_⁄e
(
a
Ë(
	`BN_abs_is_w‹d
(◊),1Ë&& !◊)->
√g
)

	)

385 
	#BN_is_w‹d
(
a
,
w
Ë(
	`BN_abs_is_w‹d
(◊),(w)Ë&& (!(wË|| !◊)->
√g
))

	)

386 
	#BN_is_odd
(
a
Ë((◊)->
t›
 > 0Ë&& (◊)->
d
[0] & 1))

	)

388 
	#BN_⁄e
(
a
Ë(
	`BN_£t_w‹d
(◊),1))

	)

389 
	#BN_zîo_ex
(
a
) \

391 
BIGNUM
 *
_tmp_bn
 = (
a
); \

392 
_tmp_bn
->
t›
 = 0; \

393 
_tmp_bn
->
√g
 = 0; \

394 } 0)

	)

395 #ifde‡
OPENSSL_NO_DEPRECATED


396 
	#BN_zîo
(
a
Ë
	`BN_zîo_ex
◊)

	)

398 
	#BN_zîo
(
a
Ë(
	`BN_£t_w‹d
(◊),0))

	)

401 c⁄° 
BIGNUM
 *
BN_vÆue_⁄e
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

402 * 
BN_›ti⁄s
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

403 
BN_CTX
 *
BN_CTX_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

404 #i‚de‡
OPENSSL_NO_DEPRECATED


405 
BN_CTX_öô
(
BN_CTX
 *
c
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

407 
BN_CTX_‰ì
(
BN_CTX
 *
c
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

408 
BN_CTX_°¨t
(
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

409 
BIGNUM
 *
BN_CTX_gë
(
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

410 
BN_CTX_íd
(
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

411 
BN_ønd
(
BIGNUM
 *
∫d
, 
bôs
, 
t›
,
bŸtom
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

412 
BN_p£udo_ønd
(
BIGNUM
 *
∫d
, 
bôs
, 
t›
,
bŸtom
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

413 
BN_ønd_ønge
(
BIGNUM
 *
∫d
, c⁄° BIGNUM *
ønge
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

414 
BN_p£udo_ønd_ønge
(
BIGNUM
 *
∫d
, c⁄° BIGNUM *
ønge
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

415 
BN_num_bôs
(c⁄° 
BIGNUM
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

416 
BN_num_bôs_w‹d
(
BN_ULONG
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

417 
BIGNUM
 *
BN_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

418 
BN_öô
(
BIGNUM
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

419 
BN_˛ór_‰ì
(
BIGNUM
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

420 
BIGNUM
 *
BN_c›y
(BIGNUM *
a
, c⁄° BIGNUM *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

421 
BN_sw≠
(
BIGNUM
 *
a
, BIGNUM *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

422 
BIGNUM
 *
BN_bö2bn
(c⁄° *
s
,
Àn
,BIGNUM *
ªt
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

423 
BN_bn2bö
(c⁄° 
BIGNUM
 *
a
, *
to
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

424 
BIGNUM
 *
BN_mpi2bn
(c⁄° *
s
,
Àn
,BIGNUM *
ªt
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

425 
BN_bn2mpi
(c⁄° 
BIGNUM
 *
a
, *
to
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

426 
BN_sub
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

427 
BN_usub
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

428 
BN_uadd
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

429 
BN_add
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

430 
BN_mul
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

431 
BN_sqr
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
,
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

436 
BN_£t_√g©ive
(
BIGNUM
 *
b
, 
n
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

441 
	#BN_is_√g©ive
(
a
Ë(◊)->
√g
 !0)

	)

443 
BN_div
(
BIGNUM
 *
dv
, BIGNUM *
ªm
, c⁄° BIGNUM *
m
, c⁄° BIGNUM *
d
,

444 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

445 
	#BN_mod
(
ªm
,
m
,
d
,
˘x
Ë
	`BN_div
(
NULL
,‘em),(m),(d),(˘x))

	)

446 
BN_¬mod
(
BIGNUM
 *
r
, c⁄° BIGNUM *
m
, c⁄° BIGNUM *
d
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

447 
BN_mod_add
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
, c⁄° BIGNUM *
m
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

448 
BN_mod_add_quick
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
, c⁄° BIGNUM *
m
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

449 
BN_mod_sub
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
, c⁄° BIGNUM *
m
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

450 
BN_mod_sub_quick
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
, c⁄° BIGNUM *
m
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

451 
BN_mod_mul
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
,

452 c⁄° 
BIGNUM
 *
m
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

453 
BN_mod_sqr
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
m
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

454 
BN_mod_lshi·1
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
m
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

455 
BN_mod_lshi·1_quick
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
m
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

456 
BN_mod_lshi·
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, 
n
, c⁄° BIGNUM *
m
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

457 
BN_mod_lshi·_quick
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, 
n
, c⁄° BIGNUM *
m
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

459 
BN_ULONG
 
BN_mod_w‹d
(c⁄° 
BIGNUM
 *
a
, BN_ULONG 
w
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

460 
BN_ULONG
 
BN_div_w‹d
(
BIGNUM
 *
a
, BN_ULONG 
w
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

461 
BN_mul_w‹d
(
BIGNUM
 *
a
, 
BN_ULONG
 
w
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

462 
BN_add_w‹d
(
BIGNUM
 *
a
, 
BN_ULONG
 
w
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

463 
BN_sub_w‹d
(
BIGNUM
 *
a
, 
BN_ULONG
 
w
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

464 
BN_£t_w‹d
(
BIGNUM
 *
a
, 
BN_ULONG
 
w
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

465 
BN_ULONG
 
BN_gë_w‹d
(c⁄° 
BIGNUM
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

467 
BN_cmp
(c⁄° 
BIGNUM
 *
a
, c⁄° BIGNUM *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

468 
BN_‰ì
(
BIGNUM
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

469 
BN_is_bô_£t
(c⁄° 
BIGNUM
 *
a
, 
n
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

470 
BN_lshi·
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, 
n
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

471 
BN_lshi·1
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

472 
BN_exp
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

474 
BN_mod_exp
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

475 c⁄° 
BIGNUM
 *
m
,
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

476 
BN_mod_exp_m⁄t
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

477 c⁄° 
BIGNUM
 *
m
, 
BN_CTX
 *
˘x
, 
BN_MONT_CTX
 *
m_˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

478 
BN_mod_exp_m⁄t_c⁄°time
(
BIGNUM
 *
º
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

479 c⁄° 
BIGNUM
 *
m
, 
BN_CTX
 *
˘x
, 
BN_MONT_CTX
 *
ö_m⁄t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

480 
BN_mod_exp_m⁄t_w‹d
(
BIGNUM
 *
r
, 
BN_ULONG
 
a
, c⁄° BIGNUM *
p
,

481 c⁄° 
BIGNUM
 *
m
, 
BN_CTX
 *
˘x
, 
BN_MONT_CTX
 *
m_˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

482 
BN_mod_exp2_m⁄t
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a1
, c⁄° BIGNUM *
p1
,

483 c⁄° 
BIGNUM
 *
a2
, c⁄° BIGNUM *
p2
,c⁄° BIGNUM *
m
,

484 
BN_CTX
 *
˘x
,
BN_MONT_CTX
 *
m_˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

485 
BN_mod_exp_sim∂e
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

486 c⁄° 
BIGNUM
 *
m
,
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

488 
BN_mask_bôs
(
BIGNUM
 *
a
,
n
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

489 #i‚de‡
OPENSSL_NO_FP_API


490 
BN_¥öt_Â
(
FILE
 *
Â
, c⁄° 
BIGNUM
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

492 #ifde‡
HEADER_BIO_H


493 
BN_¥öt
(
BIO
 *
Â
, c⁄° 
BIGNUM
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

495 
BN_¥öt
(*
Â
, c⁄° 
BIGNUM
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

497 
BN_ªcùroˇl
(
BIGNUM
 *
r
, c⁄° BIGNUM *
m
, 
Àn
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

498 
BN_rshi·
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, 
n
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

499 
BN_rshi·1
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

500 
BN_˛ór
(
BIGNUM
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

501 
BIGNUM
 *
BN_dup
(c⁄° BIGNUM *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

502 
BN_ucmp
(c⁄° 
BIGNUM
 *
a
, c⁄° BIGNUM *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

503 
BN_£t_bô
(
BIGNUM
 *
a
, 
n
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

504 
BN_˛ór_bô
(
BIGNUM
 *
a
, 
n
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

505 * 
BN_bn2hex
(c⁄° 
BIGNUM
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

506 * 
BN_bn2dec
(c⁄° 
BIGNUM
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

507 
BN_hex2bn
(
BIGNUM
 **
a
, c⁄° *
°r
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

508 
BN_dec2bn
(
BIGNUM
 **
a
, c⁄° *
°r
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

509 
BN_gcd
(
BIGNUM
 *
r
,c⁄° BIGNUM *
a
,c⁄° BIGNUM *
b
,
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

510 
BN_kr⁄eckî
(c⁄° 
BIGNUM
 *
a
,c⁄° BIGNUM *
b
,
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

511 
BIGNUM
 *
BN_mod_övî£
(BIGNUM *
ªt
,

512 c⁄° 
BIGNUM
 *
a
, c⁄° BIGNUM *
n
,
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

513 
BIGNUM
 *
BN_mod_sqπ
(BIGNUM *
ªt
,

514 c⁄° 
BIGNUM
 *
a
, c⁄° BIGNUM *
n
,
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

517 #i‚de‡
OPENSSL_NO_DEPRECATED


518 
BIGNUM
 *
BN_gíî©e_¥ime
(BIGNUM *
ªt
,
bôs
,
ß„
,

519 c⁄° 
BIGNUM
 *
add
, c⁄° BIGNUM *
ªm
,

520 (*
ˇŒback
)(,,*),*
cb_¨g
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

521 
BN_is_¥ime
(c⁄° 
BIGNUM
 *
p
,
nchecks
,

522 (*
ˇŒback
)(,,*),

523 
BN_CTX
 *
˘x
,*
cb_¨g
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

524 
BN_is_¥ime_Á°ã°
(c⁄° 
BIGNUM
 *
p
,
nchecks
,

525 (*
ˇŒback
)(,,*),
BN_CTX
 *
˘x
,*
cb_¨g
,

526 
do_åül_divisi⁄
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

530 
BN_gíî©e_¥ime_ex
(
BIGNUM
 *
ªt
,
bôs
,
ß„
, c⁄° BIGNUM *
add
,

531 c⁄° 
BIGNUM
 *
ªm
, 
BN_GENCB
 *
cb
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

532 
BN_is_¥ime_ex
(c⁄° 
BIGNUM
 *
p
,
nchecks
, 
BN_CTX
 *
˘x
, 
BN_GENCB
 *
cb
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

533 
BN_is_¥ime_Á°ã°_ex
(c⁄° 
BIGNUM
 *
p
,
nchecks
, 
BN_CTX
 *
˘x
,

534 
do_åül_divisi⁄
, 
BN_GENCB
 *
cb
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

536 
BN_X931_gíî©e_Xpq
(
BIGNUM
 *
Xp
, BIGNUM *
Xq
, 
nbôs
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

538 
BN_X931_dîive_¥ime_ex
(
BIGNUM
 *
p
, BIGNUM *
p1
, BIGNUM *
p2
,

539 c⁄° 
BIGNUM
 *
Xp
, c⁄° BIGNUM *
Xp1
, c⁄° BIGNUM *
Xp2
,

540 c⁄° 
BIGNUM
 *
e
, 
BN_CTX
 *
˘x
, 
BN_GENCB
 *
cb
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

541 
BN_X931_gíî©e_¥ime_ex
(
BIGNUM
 *
p
, BIGNUM *
p1
, BIGNUM *
p2
,

542 
BIGNUM
 *
Xp1
, BIGNUM *
Xp2
,

543 c⁄° 
BIGNUM
 *
Xp
,

544 c⁄° 
BIGNUM
 *
e
, 
BN_CTX
 *
˘x
,

545 
BN_GENCB
 *
cb
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

547 
BN_MONT_CTX
 *
BN_MONT_CTX_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

548 
BN_MONT_CTX_öô
(
BN_MONT_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

549 
BN_mod_mul_m⁄tgomîy
(
BIGNUM
 *
r
,c⁄° BIGNUM *
a
,c⁄° BIGNUM *
b
,

550 
BN_MONT_CTX
 *
m⁄t
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

551 
	#BN_to_m⁄tgomîy
(
r
,
a
,
m⁄t
,
˘x
Ë
	`BN_mod_mul_m⁄tgomîy
(\

552 (
r
),(
a
),&((
m⁄t
)->
RR
),(m⁄t),(
˘x
))

	)

553 
BN_‰om_m⁄tgomîy
(
BIGNUM
 *
r
,c⁄° BIGNUM *
a
,

554 
BN_MONT_CTX
 *
m⁄t
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

555 
BN_MONT_CTX_‰ì
(
BN_MONT_CTX
 *
m⁄t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

556 
BN_MONT_CTX_£t
(
BN_MONT_CTX
 *
m⁄t
,c⁄° 
BIGNUM
 *
mod
,
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

557 
BN_MONT_CTX
 *
BN_MONT_CTX_c›y
(BN_MONT_CTX *
to
,BN_MONT_CTX *
‰om
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

558 
BN_MONT_CTX
 *
BN_MONT_CTX_£t_locked
(BN_MONT_CTX **
pm⁄t
, 
lock
,

559 c⁄° 
BIGNUM
 *
mod
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

562 
	#BN_BLINDING_NO_UPDATE
 0x00000001

	)

563 
	#BN_BLINDING_NO_RECREATE
 0x00000002

	)

565 
BN_BLINDING
 *
BN_BLINDING_√w
(c⁄° 
BIGNUM
 *
A
, c⁄° BIGNUM *
Ai
, BIGNUM *
mod
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

566 
BN_BLINDING_‰ì
(
BN_BLINDING
 *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

567 
BN_BLINDING_upd©e
(
BN_BLINDING
 *
b
,
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

568 
BN_BLINDING_c⁄vît
(
BIGNUM
 *
n
, 
BN_BLINDING
 *
b
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

569 
BN_BLINDING_övît
(
BIGNUM
 *
n
, 
BN_BLINDING
 *
b
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

570 
BN_BLINDING_c⁄vît_ex
(
BIGNUM
 *
n
, BIGNUM *
r
, 
BN_BLINDING
 *
b
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

571 
BN_BLINDING_övît_ex
(
BIGNUM
 *
n
, c⁄° BIGNUM *
r
, 
BN_BLINDING
 *
b
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

572 
BN_BLINDING_gë_thªad_id
(c⁄° 
BN_BLINDING
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

573 
BN_BLINDING_£t_thªad_id
(
BN_BLINDING
 *, Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

574 
BN_BLINDING_gë_Êags
(c⁄° 
BN_BLINDING
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

575 
BN_BLINDING_£t_Êags
(
BN_BLINDING
 *, Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

576 
BN_BLINDING
 *
BN_BLINDING_¸óã_∑øm
(BN_BLINDING *
b
,

577 c⁄° 
BIGNUM
 *
e
, BIGNUM *
m
, 
BN_CTX
 *
˘x
,

578 (*
bn_mod_exp
)(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

579 c⁄° 
BIGNUM
 *
m
, 
BN_CTX
 *
˘x
, 
BN_MONT_CTX
 *
m_˘x
),

580 
BN_MONT_CTX
 *
m_˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

582 #i‚de‡
OPENSSL_NO_DEPRECATED


583 
BN_£t_∑øms
(
mul
,
high
,
low
,
m⁄t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

584 
BN_gë_∑øms
(
which
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

587 
BN_RECP_CTX_öô
(
BN_RECP_CTX
 *
ª˝
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

588 
BN_RECP_CTX
 *
BN_RECP_CTX_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

589 
BN_RECP_CTX_‰ì
(
BN_RECP_CTX
 *
ª˝
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

590 
BN_RECP_CTX_£t
(
BN_RECP_CTX
 *
ª˝
,c⁄° 
BIGNUM
 *
rdiv
,
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

591 
BN_mod_mul_ªcùroˇl
(
BIGNUM
 *
r
, c⁄° BIGNUM *
x
, c⁄° BIGNUM *
y
,

592 
BN_RECP_CTX
 *
ª˝
,
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

593 
BN_mod_exp_ª˝
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

594 c⁄° 
BIGNUM
 *
m
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

595 
BN_div_ª˝
(
BIGNUM
 *
dv
, BIGNUM *
ªm
, c⁄° BIGNUM *
m
,

596 
BN_RECP_CTX
 *
ª˝
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

607 
BN_GF2m_add
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

608 
	#BN_GF2m_sub
(
r
, 
a
, 
b
Ë
	`BN_GF2m_add
‘,á, b)

	)

609 
BN_GF2m_mod
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

610 
BN_GF2m_mod_mul
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
,

611 c⁄° 
BIGNUM
 *
p
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

612 
BN_GF2m_mod_sqr
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

613 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

614 
BN_GF2m_mod_öv
(
BIGNUM
 *
r
, c⁄° BIGNUM *
b
, c⁄° BIGNUM *
p
,

615 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

616 
BN_GF2m_mod_div
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
,

617 c⁄° 
BIGNUM
 *
p
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

618 
BN_GF2m_mod_exp
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
,

619 c⁄° 
BIGNUM
 *
p
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

620 
BN_GF2m_mod_sqπ
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

621 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

622 
BN_GF2m_mod_sﬁve_quad
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
,

623 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

624 
	#BN_GF2m_cmp
(
a
, 
b
Ë
	`BN_ucmp
(◊), (b))

	)

630 
BN_GF2m_mod_¨r
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° 
p
[]Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

632 
BN_GF2m_mod_mul_¨r
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
,

633 c⁄° 
p
[], 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

634 
BN_GF2m_mod_sqr_¨r
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° 
p
[],

635 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

636 
BN_GF2m_mod_öv_¨r
(
BIGNUM
 *
r
, c⁄° BIGNUM *
b
, c⁄° 
p
[],

637 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

638 
BN_GF2m_mod_div_¨r
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
,

639 c⁄° 
p
[], 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

640 
BN_GF2m_mod_exp_¨r
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
,

641 c⁄° 
p
[], 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

642 
BN_GF2m_mod_sqπ_¨r
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
,

643 c⁄° 
p
[], 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

644 
BN_GF2m_mod_sﬁve_quad_¨r
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
,

645 c⁄° 
p
[], 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

646 
BN_GF2m_pﬁy2¨r
(c⁄° 
BIGNUM
 *
a
, 
p
[], 
max
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

647 
BN_GF2m_¨r2pﬁy
(c⁄° 
p
[], 
BIGNUM
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

651 
BN_ni°_mod_192
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

652 
BN_ni°_mod_224
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

653 
BN_ni°_mod_256
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

654 
BN_ni°_mod_384
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

655 
BN_ni°_mod_521
(
BIGNUM
 *
r
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
p
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

657 c⁄° 
BIGNUM
 *
BN_gë0_ni°_¥ime_192
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

658 c⁄° 
BIGNUM
 *
BN_gë0_ni°_¥ime_224
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

659 c⁄° 
BIGNUM
 *
BN_gë0_ni°_¥ime_256
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

660 c⁄° 
BIGNUM
 *
BN_gë0_ni°_¥ime_384
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

661 c⁄° 
BIGNUM
 *
BN_gë0_ni°_¥ime_521
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

665 
	#bn_ex∑nd
(
a
,
bôs
Ë((((((bôs+
BN_BITS2
-1))/BN_BITS2)Ë<◊)->
dmax
)?\

666 (
a
):
	`bn_ex∑nd2
(◊),(
bôs
+
BN_BITS2
-1)/BN_BITS2))

	)

667 
	#bn_wex∑nd
(
a
,
w‹ds
Ë(((w‹dsË<◊)->
dmax
)?◊):
	`bn_ex∑nd2
(◊),(w‹ds)))

	)

668 
BIGNUM
 *
bn_ex∑nd2
(BIGNUM *
a
, 
w‹ds
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

669 #i‚de‡
OPENSSL_NO_DEPRECATED


670 
BIGNUM
 *
bn_dup_ex∑nd
(c⁄° BIGNUM *
a
, 
w‹ds
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

701 #ifde‡
BN_DEBUG


704 
	~<as£π.h
>

706 #ifde‡
BN_DEBUG_RAND


708 #i‚de‡
RAND_p£udo_byãs


709 
RAND_p£udo_byãs
(*
buf
,
num
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

710 
	#BN_DEBUG_TRIX


	)

712 
	#bn_pﬁluã
(
a
) \

714 c⁄° 
BIGNUM
 *
_bnum1
 = (
a
); \

715 if(
_bnum1
->
t›
 < _bnum1->
dmax
) { \

716 
_tmp_ch¨
; \

720 
BN_ULONG
 *
_nŸ_c⁄°
; \

721 
	`mem˝y
(&
_nŸ_c⁄°
, &
_bnum1
->
d
, (
BN_ULONG
*)); \

722 
	`RAND_p£udo_byãs
(&
_tmp_ch¨
, 1); \

723 
	`mem£t
((*)(
_nŸ_c⁄°
 + 
_bnum1
->
t›
), 
_tmp_ch¨
, \

724 (
_bnum1
->
dmax
 - _bnum1->
t›
Ë* (
BN_ULONG
)); \

726 } 0)

	)

727 #ifde‡
BN_DEBUG_TRIX


728 #unde‡
RAND_p£udo_byãs


731 
	#bn_pﬁluã
(
a
)

	)

733 
	#bn_check_t›
(
a
) \

735 c⁄° 
BIGNUM
 *
_bnum2
 = (
a
); \

736 i‡(
_bnum2
 !
NULL
) { \

737 
	`as£π
((
_bnum2
->
t›
 == 0) || \

738 (
_bnum2
->
d
[_bnum2->
t›
 - 1] != 0)); \

739 
	`bn_pﬁluã
(
_bnum2
); \

741 } 0)

	)

743 
	#bn_fix_t›
(
a
Ë
	`bn_check_t›
◊)

	)

747 
	#bn_pﬁluã
(
a
)

	)

748 
	#bn_check_t›
(
a
)

	)

749 
	#bn_fix_t›
(
a
Ë
	`bn_c‹ª˘_t›
◊)

	)

753 
	#bn_c‹ª˘_t›
(
a
) \

755 
BN_ULONG
 *
·l
; \

756 i‡((
a
)->
t›
 > 0) \

758 
·l
&((
a
)->
d
[◊)->
t›
-1]); (a)->top > 0; (a)->top--) \

759 i‡(*(
·l
--)) ; \

761 
	`bn_pﬁluã
(
a
); \

762 }

	)

764 
BN_ULONG
 
bn_mul_add_w‹ds
(BN_ULONG *
Ω
, c⁄° BN_ULONG *
≠
, 
num
, BN_ULONG 
w
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

765 
BN_ULONG
 
bn_mul_w‹ds
(BN_ULONG *
Ω
, c⁄° BN_ULONG *
≠
, 
num
, BN_ULONG 
w
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

766 
bn_sqr_w‹ds
(
BN_ULONG
 *
Ω
, c⁄° BN_ULONG *
≠
, 
num
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

767 
BN_ULONG
 
bn_div_w‹ds
(BN_ULONG 
h
, BN_ULONG 
l
, BN_ULONG 
d
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

768 
BN_ULONG
 
bn_add_w‹ds
(BN_ULONG *
Ω
, c⁄° BN_ULONG *
≠
, c⁄° BN_ULONG *
bp
,
num
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

769 
BN_ULONG
 
bn_sub_w‹ds
(BN_ULONG *
Ω
, c⁄° BN_ULONG *
≠
, c⁄° BN_ULONG *
bp
,
num
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

772 
BIGNUM
 *
gë_rfc2409_¥ime_768
(BIGNUM *
bn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

773 
BIGNUM
 *
gë_rfc2409_¥ime_1024
(BIGNUM *
bn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

776 
BIGNUM
 *
gë_rfc3526_¥ime_1536
(BIGNUM *
bn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

777 
BIGNUM
 *
gë_rfc3526_¥ime_2048
(BIGNUM *
bn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

778 
BIGNUM
 *
gë_rfc3526_¥ime_3072
(BIGNUM *
bn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

779 
BIGNUM
 *
gë_rfc3526_¥ime_4096
(BIGNUM *
bn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

780 
BIGNUM
 *
gë_rfc3526_¥ime_6144
(BIGNUM *
bn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

781 
BIGNUM
 *
gë_rfc3526_¥ime_8192
(BIGNUM *
bn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

783 
BN_b¡e°_ønd
(
BIGNUM
 *
∫d
, 
bôs
, 
t›
,
bŸtom
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

789 
ERR_lﬂd_BN_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

794 
	#BN_F_BNRAND
 127

	)

795 
	#BN_F_BN_BLINDING_CONVERT_EX
 100

	)

796 
	#BN_F_BN_BLINDING_CREATE_PARAM
 128

	)

797 
	#BN_F_BN_BLINDING_INVERT_EX
 101

	)

798 
	#BN_F_BN_BLINDING_NEW
 102

	)

799 
	#BN_F_BN_BLINDING_UPDATE
 103

	)

800 
	#BN_F_BN_BN2DEC
 104

	)

801 
	#BN_F_BN_BN2HEX
 105

	)

802 
	#BN_F_BN_CTX_GET
 116

	)

803 
	#BN_F_BN_CTX_NEW
 106

	)

804 
	#BN_F_BN_CTX_START
 129

	)

805 
	#BN_F_BN_DIV
 107

	)

806 
	#BN_F_BN_DIV_NO_BRANCH
 138

	)

807 
	#BN_F_BN_DIV_RECP
 130

	)

808 
	#BN_F_BN_EXP
 123

	)

809 
	#BN_F_BN_EXPAND2
 108

	)

810 
	#BN_F_BN_EXPAND_INTERNAL
 120

	)

811 
	#BN_F_BN_GF2M_MOD
 131

	)

812 
	#BN_F_BN_GF2M_MOD_EXP
 132

	)

813 
	#BN_F_BN_GF2M_MOD_MUL
 133

	)

814 
	#BN_F_BN_GF2M_MOD_SOLVE_QUAD
 134

	)

815 
	#BN_F_BN_GF2M_MOD_SOLVE_QUAD_ARR
 135

	)

816 
	#BN_F_BN_GF2M_MOD_SQR
 136

	)

817 
	#BN_F_BN_GF2M_MOD_SQRT
 137

	)

818 
	#BN_F_BN_MOD_EXP2_MONT
 118

	)

819 
	#BN_F_BN_MOD_EXP_MONT
 109

	)

820 
	#BN_F_BN_MOD_EXP_MONT_CONSTTIME
 124

	)

821 
	#BN_F_BN_MOD_EXP_MONT_WORD
 117

	)

822 
	#BN_F_BN_MOD_EXP_RECP
 125

	)

823 
	#BN_F_BN_MOD_EXP_SIMPLE
 126

	)

824 
	#BN_F_BN_MOD_INVERSE
 110

	)

825 
	#BN_F_BN_MOD_INVERSE_NO_BRANCH
 139

	)

826 
	#BN_F_BN_MOD_LSHIFT_QUICK
 119

	)

827 
	#BN_F_BN_MOD_MUL_RECIPROCAL
 111

	)

828 
	#BN_F_BN_MOD_SQRT
 121

	)

829 
	#BN_F_BN_MPI2BN
 112

	)

830 
	#BN_F_BN_NEW
 113

	)

831 
	#BN_F_BN_RAND
 114

	)

832 
	#BN_F_BN_RAND_RANGE
 122

	)

833 
	#BN_F_BN_USUB
 115

	)

836 
	#BN_R_ARG2_LT_ARG3
 100

	)

837 
	#BN_R_BAD_RECIPROCAL
 101

	)

838 
	#BN_R_BIGNUM_TOO_LONG
 114

	)

839 
	#BN_R_CALLED_WITH_EVEN_MODULUS
 102

	)

840 
	#BN_R_DIV_BY_ZERO
 103

	)

841 
	#BN_R_ENCODING_ERROR
 104

	)

842 
	#BN_R_EXPAND_ON_STATIC_BIGNUM_DATA
 105

	)

843 
	#BN_R_INPUT_NOT_REDUCED
 110

	)

844 
	#BN_R_INVALID_LENGTH
 106

	)

845 
	#BN_R_INVALID_RANGE
 115

	)

846 
	#BN_R_NOT_A_SQUARE
 111

	)

847 
	#BN_R_NOT_INITIALIZED
 107

	)

848 
	#BN_R_NO_INVERSE
 108

	)

849 
	#BN_R_NO_SOLUTION
 116

	)

850 
	#BN_R_P_IS_NOT_PRIME
 112

	)

851 
	#BN_R_TOO_MANY_ITERATIONS
 113

	)

852 
	#BN_R_TOO_MANY_TEMPORARY_VARIABLES
 109

	)

854 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/crypto.h

117 #i‚de‡
HEADER_CRYPTO_H


118 
	#HEADER_CRYPTO_H


	)

120 
	~<AvaûabûôyMa¸os.h
>

122 
	~<°dlib.h
>

124 
	~<›ís¶/e_os2.h
>

126 #i‚de‡
OPENSSL_NO_FP_API


127 
	~<°dio.h
>

130 
	~<›ís¶/°ack.h
>

131 
	~<›ís¶/ß„°ack.h
>

132 
	~<›ís¶/›ís¶v.h
>

133 
	~<›ís¶/os¶_typ.h
>

135 #ifde‡
CHARSET_EBCDIC


136 
	~<›ís¶/ebcdic.h
>

141 
	~<›ís¶/symhacks.h
>

143 #ifde‡ 
__˝lu•lus


150 
	#SSLEAY_VERSION_NUMBER
 
OPENSSL_VERSION_NUMBER


	)

151 
	#SSLEAY_VERSION
 0

	)

153 
	#SSLEAY_CFLAGS
 2

	)

154 
	#SSLEAY_BUILT_ON
 3

	)

155 
	#SSLEAY_PLATFORM
 4

	)

156 
	#SSLEAY_DIR
 5

	)

160 
¸y±o_ex_d©a_°
 
	tCRYPTO_EX_DATA
;

162 
	tCRYPTO_EX_√w
(*
	t∑ª¡
, *
	t±r
, 
	tCRYPTO_EX_DATA
 *
	tad
,

163 
	tidx
, 
	t¨gl
, *
	t¨gp
);

165 
	tCRYPTO_EX_‰ì
(*
	t∑ª¡
, *
	t±r
, 
	tCRYPTO_EX_DATA
 *
	tad
,

166 
	tidx
, 
	t¨gl
, *
	t¨gp
);

168 
	tCRYPTO_EX_dup
(
	tCRYPTO_EX_DATA
 *
	tto
, CRYPTO_EX_DATA *
	t‰om
, *
	t‰om_d
,

169 
	tidx
, 
	t¨gl
, *
	t¨gp
);

173 
	s›ís¶_ôem_°


175 
code
;

176 *
vÆue
;

177 
size_t
 
vÆue_size
;

178 
size_t
 *
vÆue_Àngth
;

179 } 
	tOPENSSL_ITEM
;

186 
	#CRYPTO_LOCK_ERR
 1

	)

187 
	#CRYPTO_LOCK_EX_DATA
 2

	)

188 
	#CRYPTO_LOCK_X509
 3

	)

189 
	#CRYPTO_LOCK_X509_INFO
 4

	)

190 
	#CRYPTO_LOCK_X509_PKEY
 5

	)

191 
	#CRYPTO_LOCK_X509_CRL
 6

	)

192 
	#CRYPTO_LOCK_X509_REQ
 7

	)

193 
	#CRYPTO_LOCK_DSA
 8

	)

194 
	#CRYPTO_LOCK_RSA
 9

	)

195 
	#CRYPTO_LOCK_EVP_PKEY
 10

	)

196 
	#CRYPTO_LOCK_X509_STORE
 11

	)

197 
	#CRYPTO_LOCK_SSL_CTX
 12

	)

198 
	#CRYPTO_LOCK_SSL_CERT
 13

	)

199 
	#CRYPTO_LOCK_SSL_SESSION
 14

	)

200 
	#CRYPTO_LOCK_SSL_SESS_CERT
 15

	)

201 
	#CRYPTO_LOCK_SSL
 16

	)

202 
	#CRYPTO_LOCK_SSL_METHOD
 17

	)

203 
	#CRYPTO_LOCK_RAND
 18

	)

204 
	#CRYPTO_LOCK_RAND2
 19

	)

205 
	#CRYPTO_LOCK_MALLOC
 20

	)

206 
	#CRYPTO_LOCK_BIO
 21

	)

207 
	#CRYPTO_LOCK_GETHOSTBYNAME
 22

	)

208 
	#CRYPTO_LOCK_GETSERVBYNAME
 23

	)

209 
	#CRYPTO_LOCK_READDIR
 24

	)

210 
	#CRYPTO_LOCK_RSA_BLINDING
 25

	)

211 
	#CRYPTO_LOCK_DH
 26

	)

212 
	#CRYPTO_LOCK_MALLOC2
 27

	)

213 
	#CRYPTO_LOCK_DSO
 28

	)

214 
	#CRYPTO_LOCK_DYNLOCK
 29

	)

215 
	#CRYPTO_LOCK_ENGINE
 30

	)

216 
	#CRYPTO_LOCK_UI
 31

	)

217 
	#CRYPTO_LOCK_ECDSA
 32

	)

218 
	#CRYPTO_LOCK_EC
 33

	)

219 
	#CRYPTO_LOCK_ECDH
 34

	)

220 
	#CRYPTO_LOCK_BN
 35

	)

221 
	#CRYPTO_LOCK_EC_PRE_COMP
 36

	)

222 
	#CRYPTO_LOCK_STORE
 37

	)

223 
	#CRYPTO_LOCK_COMP
 38

	)

224 #i‚de‡
OPENSSL_FIPS


225 
	#CRYPTO_NUM_LOCKS
 39

	)

227 
	#CRYPTO_LOCK_FIPS
 39

	)

228 
	#CRYPTO_LOCK_FIPS2
 40

	)

229 
	#CRYPTO_NUM_LOCKS
 41

	)

232 
	#CRYPTO_LOCK
 1

	)

233 
	#CRYPTO_UNLOCK
 2

	)

234 
	#CRYPTO_READ
 4

	)

235 
	#CRYPTO_WRITE
 8

	)

237 #i‚de‡
OPENSSL_NO_LOCKING


238 #i‚de‡
CRYPTO_w_lock


239 
	#CRYPTO_w_lock
(
ty≥
) \

240 
	`CRYPTO_lock
(
CRYPTO_LOCK
|
CRYPTO_WRITE
,
ty≥
,
__FILE__
,
__LINE__
)

	)

241 
	#CRYPTO_w_u∆ock
(
ty≥
) \

242 
	`CRYPTO_lock
(
CRYPTO_UNLOCK
|
CRYPTO_WRITE
,
ty≥
,
__FILE__
,
__LINE__
)

	)

243 
	#CRYPTO_r_lock
(
ty≥
) \

244 
	`CRYPTO_lock
(
CRYPTO_LOCK
|
CRYPTO_READ
,
ty≥
,
__FILE__
,
__LINE__
)

	)

245 
	#CRYPTO_r_u∆ock
(
ty≥
) \

246 
	`CRYPTO_lock
(
CRYPTO_UNLOCK
|
CRYPTO_READ
,
ty≥
,
__FILE__
,
__LINE__
)

	)

247 
	#CRYPTO_add
(
addr
,
amou¡
,
ty≥
) \

248 
	`CRYPTO_add_lock
(
addr
,
amou¡
,
ty≥
,
__FILE__
,
__LINE__
)

	)

251 
	#CRYPTO_w_lock
(
a
)

	)

252 
	#CRYPTO_w_u∆ock
(
a
)

	)

253 
	#CRYPTO_r_lock
(
a
)

	)

254 
	#CRYPTO_r_u∆ock
(
a
)

	)

255 
	#CRYPTO_add
(
a
,
b
,
c
Ë((*◊))+=(b))

	)

264 
ª„ªn˚s
;

265 
CRYPTO_dy∆ock_vÆue
 *
d©a
;

266 } 
	tCRYPTO_dy∆ock
;

272 
	#CRYPTO_MEM_CHECK_OFF
 0x0

	)

273 
	#CRYPTO_MEM_CHECK_ON
 0x1

	)

274 
	#CRYPTO_MEM_CHECK_ENABLE
 0x2

	)

275 
	#CRYPTO_MEM_CHECK_DISABLE
 0x3

	)

281 
	#V_CRYPTO_MDEBUG_TIME
 0x1

	)

283 
	#V_CRYPTO_MDEBUG_THREAD
 0x2

	)

285 
	#V_CRYPTO_MDEBUG_ALL
 (
V_CRYPTO_MDEBUG_TIME
 | 
V_CRYPTO_MDEBUG_THREAD
)

	)

289 
bio_°
 
	tBIO_dummy
;

291 
	s¸y±o_ex_d©a_°


293 
STACK
 *
sk
;

294 
dummy
;

300 
	s¸y±o_ex_d©a_func_°


302 
¨gl
;

303 *
¨gp
;

304 
CRYPTO_EX_√w
 *
√w_func
;

305 
CRYPTO_EX_‰ì
 *
‰ì_func
;

306 
CRYPTO_EX_dup
 *
dup_func
;

307 } 
	tCRYPTO_EX_DATA_FUNCS
;

309 
DECLARE_STACK_OF
(
CRYPTO_EX_DATA_FUNCS
)

315 
	#CRYPTO_EX_INDEX_BIO
 0

	)

316 
	#CRYPTO_EX_INDEX_SSL
 1

	)

317 
	#CRYPTO_EX_INDEX_SSL_CTX
 2

	)

318 
	#CRYPTO_EX_INDEX_SSL_SESSION
 3

	)

319 
	#CRYPTO_EX_INDEX_X509_STORE
 4

	)

320 
	#CRYPTO_EX_INDEX_X509_STORE_CTX
 5

	)

321 
	#CRYPTO_EX_INDEX_RSA
 6

	)

322 
	#CRYPTO_EX_INDEX_DSA
 7

	)

323 
	#CRYPTO_EX_INDEX_DH
 8

	)

324 
	#CRYPTO_EX_INDEX_ENGINE
 9

	)

325 
	#CRYPTO_EX_INDEX_X509
 10

	)

326 
	#CRYPTO_EX_INDEX_UI
 11

	)

327 
	#CRYPTO_EX_INDEX_ECDSA
 12

	)

328 
	#CRYPTO_EX_INDEX_ECDH
 13

	)

329 
	#CRYPTO_EX_INDEX_COMP
 14

	)

330 
	#CRYPTO_EX_INDEX_STORE
 15

	)

334 
	#CRYPTO_EX_INDEX_USER
 100

	)

341 
	#CRYPTO_mÆloc_öô
(Ë
	`CRYPTO_£t_mem_fun˘i⁄s
(\

342 
mÆloc
, 
ªÆloc
, 
‰ì
)

	)

344 #i‡
deföed
 
CRYPTO_MDEBUG_ALL
 || deföed 
CRYPTO_MDEBUG_TIME
 || deföed 
CRYPTO_MDEBUG_THREAD


345 #i‚de‡
CRYPTO_MDEBUG


346 
	#CRYPTO_MDEBUG


	)

352 
CRYPTO_mÆloc_debug_öô
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

354 
CRYPTO_mem_˘æ
(
mode
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

355 
CRYPTO_is_mem_check_⁄
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

358 
	#MemCheck_°¨t
(Ë
	`CRYPTO_mem_˘æ
(
CRYPTO_MEM_CHECK_ON
)

	)

359 
	#MemCheck_°›
(Ë
	`CRYPTO_mem_˘æ
(
CRYPTO_MEM_CHECK_OFF
)

	)

362 
	#MemCheck_⁄
(Ë
	`CRYPTO_mem_˘æ
(
CRYPTO_MEM_CHECK_ENABLE
)

	)

363 
	#MemCheck_off
(Ë
	`CRYPTO_mem_˘æ
(
CRYPTO_MEM_CHECK_DISABLE
)

	)

364 
	#is_MemCheck_⁄
(Ë
	`CRYPTO_is_mem_check_⁄
()

	)

366 
	#OPENSSL_mÆloc
(
num
Ë
	`CRYPTO_mÆloc
((Íum,
__FILE__
,
__LINE__
)

	)

367 
	#OPENSSL_°rdup
(
°r
Ë
	`CRYPTO_°rdup
((°r),
__FILE__
,
__LINE__
)

	)

368 
	#OPENSSL_ªÆloc
(
addr
,
num
) \

369 
	`CRYPTO_ªÆloc
((*)
addr
,()
num
,
__FILE__
,
__LINE__
)

	)

370 
	#OPENSSL_ªÆloc_˛ón
(
addr
,
ﬁd_num
,
num
) \

371 
	`CRYPTO_ªÆloc_˛ón
(
addr
,
ﬁd_num
,
num
,
__FILE__
,
__LINE__
)

	)

372 
	#OPENSSL_ªmÆloc
(
addr
,
num
) \

373 
	`CRYPTO_ªmÆloc
((**)
addr
,()
num
,
__FILE__
,
__LINE__
)

	)

374 
	#OPENSSL_‰ìFunc
 
CRYPTO_‰ì


	)

375 
	#OPENSSL_‰ì
(
addr
Ë
	`CRYPTO_‰ì
◊ddr)

	)

377 
	#OPENSSL_mÆloc_locked
(
num
) \

378 
	`CRYPTO_mÆloc_locked
(()
num
,
__FILE__
,
__LINE__
)

	)

379 
	#OPENSSL_‰ì_locked
(
addr
Ë
	`CRYPTO_‰ì_locked
◊ddr)

	)

382 c⁄° *
SSLóy_vîsi⁄
(
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

383 
SSLóy
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

385 
OPENSSL_is£tugid
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

388 
°_CRYPTO_EX_DATA_IMPL
 
	tCRYPTO_EX_DATA_IMPL
;

390 c⁄° 
CRYPTO_EX_DATA_IMPL
 *
CRYPTO_gë_ex_d©a_im∂emíèti⁄
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

392 
CRYPTO_£t_ex_d©a_im∂emíèti⁄
(c⁄° 
CRYPTO_EX_DATA_IMPL
 *
i
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

394 
CRYPTO_ex_d©a_√w_˛ass
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

396 
CRYPTO_gë_ex_√w_ödex
(
˛ass_ödex
, 
¨gl
, *
¨gp
,

397 
CRYPTO_EX_√w
 *
√w_func
, 
CRYPTO_EX_dup
 *
dup_func
,

398 
CRYPTO_EX_‰ì
 *
‰ì_func
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

401 
CRYPTO_√w_ex_d©a
(
˛ass_ödex
, *
obj
, 
CRYPTO_EX_DATA
 *
ad
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

402 
CRYPTO_dup_ex_d©a
(
˛ass_ödex
, 
CRYPTO_EX_DATA
 *
to
,

403 
CRYPTO_EX_DATA
 *
‰om
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

404 
CRYPTO_‰ì_ex_d©a
(
˛ass_ödex
, *
obj
, 
CRYPTO_EX_DATA
 *
ad
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

407 
CRYPTO_£t_ex_d©a
(
CRYPTO_EX_DATA
 *
ad
, 
idx
, *
vÆ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

408 *
CRYPTO_gë_ex_d©a
(c⁄° 
CRYPTO_EX_DATA
 *
ad
,
idx
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

411 
CRYPTO_˛ónup_Æl_ex_d©a
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

413 
CRYPTO_gë_√w_lockid
(*
«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

415 
CRYPTO_num_locks
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

416 
CRYPTO_lock
(
mode
, 
ty≥
,c⁄° *
fûe
,
löe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

417 
CRYPTO_£t_lockög_ˇŒback
((*
func
)(
mode
,
ty≥
,

418 c⁄° *
fûe
,
löe
)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

419 (*
CRYPTO_gë_lockög_ˇŒback
())(
mode
,
ty≥
,c⁄° *
fûe
,

420 
löe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

421 
CRYPTO_£t_add_lock_ˇŒback
((*
func
)(*
num
,
mou¡
,
ty≥
,

422 c⁄° *
fûe
, 
löe
)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

423 (*
CRYPTO_gë_add_lock_ˇŒback
())(*
num
,
mou¡
,
ty≥
,

424 c⁄° *
fûe
,
löe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

425 
CRYPTO_£t_id_ˇŒback
((*
func
)()Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

426 (*
CRYPTO_gë_id_ˇŒback
())(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

427 
CRYPTO_thªad_id
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

428 c⁄° *
CRYPTO_gë_lock_«me
(
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

429 
CRYPTO_add_lock
(*
poöãr
,
amou¡
,
ty≥
, c⁄° *
fûe
,

430 
löe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

432 
öt_CRYPTO_£t_do_dy∆ock_ˇŒback
(

433 (*
do_dy∆ock_cb
)(
mode
, 
ty≥
, c⁄° *
fûe
, 
löe
)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

435 
CRYPTO_gë_√w_dy∆ockid
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

436 
CRYPTO_de°roy_dy∆ockid
(
i
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

437 
CRYPTO_dy∆ock_vÆue
 *
CRYPTO_gë_dy∆ock_vÆue
(
i
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

438 
CRYPTO_£t_dy∆ock_¸óã_ˇŒback
(
CRYPTO_dy∆ock_vÆue
 *(*
dyn_¸óã_fun˘i⁄
)(c⁄° *
fûe
, 
löe
)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

439 
CRYPTO_£t_dy∆ock_lock_ˇŒback
((*
dyn_lock_fun˘i⁄
)(
mode
, 
CRYPTO_dy∆ock_vÆue
 *
l
, c⁄° *
fûe
, 
löe
)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

440 
CRYPTO_£t_dy∆ock_de°roy_ˇŒback
((*
dyn_de°roy_fun˘i⁄
)(
CRYPTO_dy∆ock_vÆue
 *
l
, c⁄° *
fûe
, 
löe
)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

441 
CRYPTO_dy∆ock_vÆue
 *(*
CRYPTO_gë_dy∆ock_¸óã_ˇŒback
())(c⁄° *
fûe
,
löe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

442 (*
CRYPTO_gë_dy∆ock_lock_ˇŒback
())(
mode
, 
CRYPTO_dy∆ock_vÆue
 *
l
, c⁄° *
fûe
,
löe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

443 (*
CRYPTO_gë_dy∆ock_de°roy_ˇŒback
())(
CRYPTO_dy∆ock_vÆue
 *
l
, c⁄° *
fûe
,
löe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

447 
CRYPTO_£t_mem_fun˘i⁄s
(*(*
m
)(
size_t
),*(*
r
)(*,size_t), (*
f
)(*)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

448 
CRYPTO_£t_locked_mem_fun˘i⁄s
(*(*
m
)(
size_t
), (*
‰ì_func
)(*)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

449 
CRYPTO_£t_mem_ex_fun˘i⁄s
(*(*
m
)(
size_t
,const *,),

450 *(*
r
)(*,
size_t
,const *,),

451 (*
f
)(*)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

452 
CRYPTO_£t_locked_mem_ex_fun˘i⁄s
(*(*
m
)(
size_t
,const *,),

453 (*
‰ì_func
)(*)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

454 
CRYPTO_£t_mem_debug_fun˘i⁄s
((*
m
)(*,,const *,,),

455 (*
r
)(*,*,,const *,,),

456 (*
f
)(*,),

457 (*
so
)(),

458 (*
go
)()Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

459 
CRYPTO_£t_mem_öfo_fun˘i⁄s
(

460 (*
push_öfo_‚
)(c⁄° *
öfo
, c⁄° *
fûe
, 
löe
),

461 (*
p›_öfo_‚
)(),

462 (*
ªmove_Æl_öfo_‚
)()Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

463 
CRYPTO_gë_mem_fun˘i⁄s
(*(**
m
)(
size_t
),*(**
r
)(*, size_t), (**
f
)(*)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

464 
CRYPTO_gë_locked_mem_fun˘i⁄s
(*(**
m
)(
size_t
), (**
f
)(*)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

465 
CRYPTO_gë_mem_ex_fun˘i⁄s
(*(**
m
)(
size_t
,const *,),

466 *(**
r
)(*, 
size_t
,const *,),

467 (**
f
)(*)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

468 
CRYPTO_gë_locked_mem_ex_fun˘i⁄s
(*(**
m
)(
size_t
,const *,),

469 (**
f
)(*)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

470 
CRYPTO_gë_mem_debug_fun˘i⁄s
((**
m
)(*,,const *,,),

471 (**
r
)(*,*,,const *,,),

472 (**
f
)(*,),

473 (**
so
)(),

474 (**
go
)()Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

476 *
CRYPTO_mÆloc_locked
(
num
, c⁄° *
fûe
, 
löe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

477 
CRYPTO_‰ì_locked
(*Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

478 *
CRYPTO_mÆloc
(
num
, c⁄° *
fûe
, 
löe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

479 *
CRYPTO_°rdup
(c⁄° *
°r
, c⁄° *
fûe
, 
löe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

480 
CRYPTO_‰ì
(*Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

481 *
CRYPTO_ªÆloc
(*
addr
,
num
, c⁄° *
fûe
, 
löe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

482 *
CRYPTO_ªÆloc_˛ón
(*
addr
,
ﬁd_num
,
num
,c⁄° *
fûe
,

483 
löe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

484 *
CRYPTO_ªmÆloc
(*
addr
,
num
, c⁄° *
fûe
, 
löe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

486 
OPENSSL_˛ón£
(*
±r
, 
size_t
 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

488 
CRYPTO_£t_mem_debug_›ti⁄s
(
bôs
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

489 
CRYPTO_gë_mem_debug_›ti⁄s
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

491 
	#CRYPTO_push_öfo
(
öfo
) \

492 
	`CRYPTO_push_öfo_
(
öfo
, 
__FILE__
, 
__LINE__
);

	)

493 
CRYPTO_push_öfo_
(c⁄° *
öfo
, c⁄° *
fûe
, 
löe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

494 
CRYPTO_p›_öfo
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

495 
CRYPTO_ªmove_Æl_öfo
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

505 
CRYPTO_dbg_mÆloc
(*
addr
,
num
,c⁄° *
fûe
,
löe
,
bef‹e_p
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

506 
CRYPTO_dbg_ªÆloc
(*
addr1
,*
addr2
,
num
,c⁄° *
fûe
,
löe
,
bef‹e_p
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

507 
CRYPTO_dbg_‰ì
(*
addr
,
bef‹e_p
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

516 
CRYPTO_dbg_£t_›ti⁄s
(
bôs
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

517 
CRYPTO_dbg_gë_›ti⁄s
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

519 
CRYPTO_dbg_push_öfo
(c⁄° *
öfo
, c⁄° *
fûe
, 
löe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

520 
CRYPTO_dbg_p›_öfo
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

521 
CRYPTO_dbg_ªmove_Æl_öfo
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

523 #i‚de‡
OPENSSL_NO_FP_API


524 
CRYPTO_mem_Àaks_Â
(
FILE
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

526 
CRYPTO_mem_Àaks
(
bio_°
 *
bio
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

528 *
	tCRYPTO_MEM_LEAK_CB
(, const *, , , *);

529 
CRYPTO_mem_Àaks_cb
(
CRYPTO_MEM_LEAK_CB
 *
cb
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

532 
O≥nSSLDõ
(c⁄° *
fûe
,
löe
,c⁄° *
as£πi⁄
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

533 
	#OPENSSL_as£π
(
e
Ë()(”Ë? 0 : (
	`O≥nSSLDõ
(
__FILE__
, 
__LINE__
, #e),1))

	)

535 *
OPENSSL_ü32ˇp_loc
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

536 
	#OPENSSL_ü32ˇp
 (*(
	`OPENSSL_ü32ˇp_loc
()))

	)

537 
OPENSSL_is£rvi˚
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

539 #ifde‡
OPENSSL_FIPS


540 
	#FIPS_ERROR_IGNORED
(
Æg
Ë
	`O≥nSSLDõ
(
__FILE__
, 
__LINE__
, \

541 
Æg
 "Öªviou†FIPS f‹biddíálg‹ôhmÉº‹ ign‹ed");

	)

543 
	#FIPS_BAD_ABORT
(
Æg
Ë
	`O≥nSSLDõ
(
__FILE__
, 
__LINE__
, \

544 #Æg " Alg‹ôhm f‹biddí i¿FIPS mode");

	)

546 #ifde‡
OPENSSL_FIPS_STRICT


547 
	#FIPS_BAD_ALGORITHM
(
Æg
Ë
	`FIPS_BAD_ABORT
◊lg)

	)

549 
	#FIPS_BAD_ALGORITHM
(
Æg
) \

551 
	`FIPSîr
(
FIPS_F_HASH_FINAL
,
FIPS_R_NON_FIPS_METHOD
); \

552 
	`ERR_add_îr‹_d©a
(2, "Algorithm=", #alg); \

554 }

	)

559 
	#FIPS_NON_FIPS_MD_Inô
(
Æg
) \

560 
Æg
##
	`_Inô
◊lg##
_CTX
 *
c
) \

562 i‡(
	`FIPS_mode
()) \

563 
	`FIPS_BAD_ALGORITHM
(
Æg
) \

564  
¥iv©e_
##
Æg
##
	`_Inô
(
c
); \

566 
¥iv©e_
##
Æg
##
	`_Inô
◊lg##
_CTX
 *
c
)

	)

573 
	#FIPS_NON_FIPS_VCIPHER_Inô
(
Æg
) \

574 
Æg
##
	`_£t_key
◊lg##
_KEY
 *
key
, 
Àn
, c⁄° *
d©a
) \

576 i‡(
	`FIPS_mode
()) \

577 
	`FIPS_BAD_ABORT
(
Æg
) \

578 
¥iv©e_
##
Æg
##
	`_£t_key
(
key
, 
Àn
, 
d©a
); \

580 
¥iv©e_
##
Æg
##
	`_£t_key
◊lg##
_KEY
 *
key
, 
Àn
, \

581 c⁄° *
d©a
)

	)

585 
	#FIPS_NON_FIPS_VCIPHER_Inô
(
Æg
) \

586 
Æg
##
	`_£t_key
◊lg##
_KEY
 *
key
, 
Àn
, c⁄° *
d©a
)

	)

588 
	#FIPS_NON_FIPS_MD_Inô
(
Æg
) \

589 
Æg
##
	`_Inô
◊lg##
_CTX
 *
c
)

	)

593 
	#OPENSSL_HAVE_INIT
 1

	)

594 
OPENSSL_öô
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

601 
CRYPTO_memcmp
(c⁄° *
a
, c⁄° *
b
, 
size_t
 
Àn
);

607 
ERR_lﬂd_CRYPTO_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

612 
	#CRYPTO_F_CRYPTO_GET_EX_NEW_INDEX
 100

	)

613 
	#CRYPTO_F_CRYPTO_GET_NEW_DYNLOCKID
 103

	)

614 
	#CRYPTO_F_CRYPTO_GET_NEW_LOCKID
 101

	)

615 
	#CRYPTO_F_CRYPTO_SET_EX_DATA
 102

	)

616 
	#CRYPTO_F_DEF_ADD_INDEX
 104

	)

617 
	#CRYPTO_F_DEF_GET_CLASS
 105

	)

618 
	#CRYPTO_F_INT_DUP_EX_DATA
 106

	)

619 
	#CRYPTO_F_INT_FREE_EX_DATA
 107

	)

620 
	#CRYPTO_F_INT_NEW_EX_DATA
 108

	)

623 
	#CRYPTO_R_NO_DYNLOCK_CREATE_CALLBACK
 100

	)

625 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/dh.h

59 #i‚de‡
HEADER_DH_H


60 
	#HEADER_DH_H


	)

62 
	~<AvaûabûôyMa¸os.h
>

64 
	~<›ís¶/e_os2.h
>

66 #ifde‡
OPENSSL_NO_DH


67 #îr‹ 
DH
 
is
 
dißbÀd
.

70 #i‚de‡
OPENSSL_NO_BIO


71 
	~<›ís¶/bio.h
>

73 
	~<›ís¶/os¶_typ.h
>

74 #i‚de‡
OPENSSL_NO_DEPRECATED


75 
	~<›ís¶/bn.h
>

78 #i‚de‡
OPENSSL_DH_MAX_MODULUS_BITS


79 
	#OPENSSL_DH_MAX_MODULUS_BITS
 10000

	)

82 
	#OPENSSL_DH_FIPS_MIN_MODULUS_BITS
 1024

	)

84 
	#DH_FLAG_CACHE_MONT_P
 0x01

	)

85 
	#DH_FLAG_NO_EXP_CONSTTIME
 0x02

	)

93 #ifde‡ 
__˝lu•lus


101 
	sdh_mëhod


103 c⁄° *
«me
;

105 (*
gíî©e_key
)(
DH
 *
dh
);

106 (*
compuã_key
)(*
key
,c⁄° 
BIGNUM
 *
pub_key
,
DH
 *
dh
);

107 (*
bn_mod_exp
)(c⁄° 
DH
 *
dh
, 
BIGNUM
 *
r
, c⁄° BIGNUM *
a
,

108 c⁄° 
BIGNUM
 *
p
, c⁄° BIGNUM *
m
, 
BN_CTX
 *
˘x
,

109 
BN_MONT_CTX
 *
m_˘x
);

111 (*
öô
)(
DH
 *
dh
);

112 (*
föish
)(
DH
 *
dh
);

113 
Êags
;

114 *
≠p_d©a
;

116 (*
gíî©e_∑øms
)(
DH
 *
dh
, 
¥ime_Àn
, 
gíî©‹
, 
BN_GENCB
 *
cb
);

119 
	sdh_°


123 
∑d
;

124 
vîsi⁄
;

125 
BIGNUM
 *
p
;

126 
BIGNUM
 *
g
;

127 
Àngth
;

128 
BIGNUM
 *
pub_key
;

129 
BIGNUM
 *
¥iv_key
;

131 
Êags
;

132 
BN_MONT_CTX
 *
mëhod_m⁄t_p
;

134 
BIGNUM
 *
q
;

135 
BIGNUM
 *
j
;

136 *
£ed
;

137 
£edÀn
;

138 
BIGNUM
 *
cou¡î
;

140 
ª„ªn˚s
;

141 
CRYPTO_EX_DATA
 
ex_d©a
;

142 c⁄° 
DH_METHOD
 *
mëh
;

143 
ENGINE
 *
ígöe
;

146 
	#DH_GENERATOR_2
 2

	)

148 
	#DH_GENERATOR_5
 5

	)

151 
	#DH_CHECK_P_NOT_PRIME
 0x01

	)

152 
	#DH_CHECK_P_NOT_SAFE_PRIME
 0x02

	)

153 
	#DH_UNABLE_TO_CHECK_GENERATOR
 0x04

	)

154 
	#DH_NOT_SUITABLE_GENERATOR
 0x08

	)

157 
	#DH_CHECK_PUBKEY_TOO_SMALL
 0x01

	)

158 
	#DH_CHECK_PUBKEY_TOO_LARGE
 0x02

	)

162 
	#DH_CHECK_P_NOT_STRONG_PRIME
 
DH_CHECK_P_NOT_SAFE_PRIME


	)

164 
	#DH∑øms_dup
(
x
Ë
	`ASN1_dup_of_c⁄°
(
DH
,
i2d_DH∑øms
,
d2i_DH∑øms
,x)

	)

165 
	#d2i_DH∑øms_Â
(
Â
,
x
Ë(
DH
 *)
	`ASN1_d2i_Â
((*(*)())
DH_√w
, \

166 (*(*)())
d2i_DH∑øms
,(
Â
),(**)(
x
))

	)

167 
	#i2d_DH∑øms_Â
(
Â
,
x
Ë
	`ASN1_i2d_Â
(
i2d_DH∑øms
,(fp), \

168 (*)(
x
))

	)

169 
	#d2i_DH∑øms_bio
(
bp
,
x
Ë
	`ASN1_d2i_bio_of
(
DH
,
DH_√w
,
d2i_DH∑øms
,bp,x)

	)

170 
	#i2d_DH∑øms_bio
(
bp
,
x
Ë
	`ASN1_i2d_bio_of_c⁄°
(
DH
,
i2d_DH∑øms
,bp,x)

	)

172 c⁄° 
DH_METHOD
 *
DH_O≥nSSL
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

174 #ifde‡
OPENSSL_FIPS


175 
DH
 * 
FIPS_dh_√w
();

176 
FIPS_dh_‰ì
(
DH
 *
dh
);

179 
DH_£t_deÁu…_mëhod
(c⁄° 
DH_METHOD
 *
mëh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

180 c⁄° 
DH_METHOD
 *
DH_gë_deÁu…_mëhod
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

181 
DH_£t_mëhod
(
DH
 *
dh
, c⁄° 
DH_METHOD
 *
mëh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

182 
DH
 *
DH_√w_mëhod
(
ENGINE
 *
ígöe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

184 
DH
 * 
DH_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

185 
DH_‰ì
(
DH
 *
dh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

186 
DH_up_ªf
(
DH
 *
dh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

187 
DH_size
(c⁄° 
DH
 *
dh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

188 
DH_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w
 *
√w_func
,

189 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

190 
DH_£t_ex_d©a
(
DH
 *
d
, 
idx
, *
¨g
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

191 *
DH_gë_ex_d©a
(
DH
 *
d
, 
idx
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

194 #i‚de‡
OPENSSL_NO_DEPRECATED


195 
DH
 * 
DH_gíî©e_∑ømëîs
(
¥ime_Àn
,
gíî©‹
,

196 (*
ˇŒback
)(,,*),*
cb_¨g
);

200 
DH_gíî©e_∑ømëîs_ex
(
DH
 *
dh
, 
¥ime_Àn
,
gíî©‹
, 
BN_GENCB
 *
cb
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

202 
DH_check
(c⁄° 
DH
 *
dh
,*
codes
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

203 
DH_check_pub_key
(c⁄° 
DH
 *
dh
,c⁄° 
BIGNUM
 *
pub_key
, *
codes
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

204 
DH_gíî©e_key
(
DH
 *
dh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

205 
DH_compuã_key
(*
key
,c⁄° 
BIGNUM
 *
pub_key
,
DH
 *
dh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

206 
DH
 * 
d2i_DH∑øms
(DH **
a
,c⁄° **
µ
, 
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

207 
i2d_DH∑øms
(c⁄° 
DH
 *
a
,**
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

208 #i‚de‡
OPENSSL_NO_FP_API


209 
DH∑øms_¥öt_Â
(
FILE
 *
Â
, c⁄° 
DH
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

211 #i‚de‡
OPENSSL_NO_BIO


212 
DH∑øms_¥öt
(
BIO
 *
bp
, c⁄° 
DH
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

214 
DH∑øms_¥öt
(*
bp
, c⁄° 
DH
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

221 
ERR_lﬂd_DH_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

226 
	#DH_F_COMPUTE_KEY
 102

	)

227 
	#DH_F_DHPARAMS_PRINT
 100

	)

228 
	#DH_F_DHPARAMS_PRINT_FP
 101

	)

229 
	#DH_F_DH_BUILTIN_GENPARAMS
 106

	)

230 
	#DH_F_DH_COMPUTE_KEY
 107

	)

231 
	#DH_F_DH_GENERATE_KEY
 108

	)

232 
	#DH_F_DH_GENERATE_PARAMETERS
 109

	)

233 
	#DH_F_DH_NEW_METHOD
 105

	)

234 
	#DH_F_GENERATE_KEY
 103

	)

235 
	#DH_F_GENERATE_PARAMETERS
 104

	)

238 
	#DH_R_BAD_GENERATOR
 101

	)

239 
	#DH_R_INVALID_PUBKEY
 102

	)

240 
	#DH_R_KEY_SIZE_TOO_SMALL
 104

	)

241 
	#DH_R_MODULUS_TOO_LARGE
 103

	)

242 
	#DH_R_NO_PRIVATE_VALUE
 100

	)

244 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/dsa.h

65 #i‚de‡
HEADER_DSA_H


66 
	#HEADER_DSA_H


	)

68 
	~<AvaûabûôyMa¸os.h
>

70 
	~<›ís¶/e_os2.h
>

72 #ifde‡
OPENSSL_NO_DSA


73 #îr‹ 
DSA
 
is
 
dißbÀd
.

76 #i‚de‡
OPENSSL_NO_BIO


77 
	~<›ís¶/bio.h
>

79 
	~<›ís¶/¸y±o.h
>

80 
	~<›ís¶/os¶_typ.h
>

82 #i‚de‡
OPENSSL_NO_DEPRECATED


83 
	~<›ís¶/bn.h
>

84 #i‚de‡
OPENSSL_NO_DH


85 
	~<›ís¶/dh.h
>

89 #i‚de‡
OPENSSL_DSA_MAX_MODULUS_BITS


90 
	#OPENSSL_DSA_MAX_MODULUS_BITS
 10000

	)

93 
	#OPENSSL_DSA_FIPS_MIN_MODULUS_BITS
 1024

	)

95 
	#DSA_FLAG_CACHE_MONT_P
 0x01

	)

96 
	#DSA_FLAG_NO_EXP_CONSTTIME
 0x02

	)

110 
	#DSA_FLAG_FIPS_METHOD
 0x0400

	)

117 
	#DSA_FLAG_NON_FIPS_ALLOW
 0x0400

	)

119 #ifde‡
OPENSSL_FIPS


120 
	#FIPS_DSA_SIZE_T
 

	)

123 #ifde‡ 
__˝lu•lus


131 
	sDSA_SIG_°


133 
BIGNUM
 *
r
;

134 
BIGNUM
 *
s
;

135 } 
	tDSA_SIG
;

137 
	sdß_mëhod


139 c⁄° *
«me
;

140 
DSA_SIG
 * (*
dß_do_sign
)(c⁄° *
dg°
, 
dÀn
, 
DSA
 *
dß
);

141 (*
dß_sign_£tup
)(
DSA
 *
dß
, 
BN_CTX
 *
˘x_ö
, 
BIGNUM
 **
kövp
,

142 
BIGNUM
 **
Ω
);

143 (*
dß_do_vîify
)(c⁄° *
dg°
, 
dg°_Àn
,

144 
DSA_SIG
 *
sig
, 
DSA
 *
dß
);

145 (*
dß_mod_exp
)(
DSA
 *
dß
, 
BIGNUM
 *
º
, BIGNUM *
a1
, BIGNUM *
p1
,

146 
BIGNUM
 *
a2
, BIGNUM *
p2
, BIGNUM *
m
, 
BN_CTX
 *
˘x
,

147 
BN_MONT_CTX
 *
ö_m⁄t
);

148 (*
bn_mod_exp
)(
DSA
 *
dß
, 
BIGNUM
 *
r
, BIGNUM *
a
, c⁄° BIGNUM *
p
,

149 c⁄° 
BIGNUM
 *
m
, 
BN_CTX
 *
˘x
,

150 
BN_MONT_CTX
 *
m_˘x
);

151 (*
öô
)(
DSA
 *
dß
);

152 (*
föish
)(
DSA
 *
dß
);

153 
Êags
;

154 *
≠p_d©a
;

156 (*
dß_∑ømgí
)(
DSA
 *
dß
, 
bôs
,

157 *
£ed
, 
£ed_Àn
,

158 *
cou¡î_ªt
, *
h_ªt
,

159 
BN_GENCB
 *
cb
);

161 (*
dß_keygí
)(
DSA
 *
dß
);

164 
	sdß_°


168 
∑d
;

169 
vîsi⁄
;

170 
wrôe_∑øms
;

171 
BIGNUM
 *
p
;

172 
BIGNUM
 *
q
;

173 
BIGNUM
 *
g
;

175 
BIGNUM
 *
pub_key
;

176 
BIGNUM
 *
¥iv_key
;

178 
BIGNUM
 *
köv
;

179 
BIGNUM
 *
r
;

181 
Êags
;

183 
BN_MONT_CTX
 *
mëhod_m⁄t_p
;

184 
ª„ªn˚s
;

185 
CRYPTO_EX_DATA
 
ex_d©a
;

186 c⁄° 
DSA_METHOD
 *
mëh
;

188 
ENGINE
 *
ígöe
;

191 
	#DSA∑øms_dup
(
x
Ë
	`ASN1_dup_of_c⁄°
(
DSA
,
i2d_DSA∑øms
,
d2i_DSA∑øms
,x)

	)

192 
	#d2i_DSA∑øms_Â
(
Â
,
x
Ë(
DSA
 *)
	`ASN1_d2i_Â
((*(*)())
DSA_√w
, \

193 (*(*)())
d2i_DSA∑øms
,(
Â
),(**)(
x
))

	)

194 
	#i2d_DSA∑øms_Â
(
Â
,
x
Ë
	`ASN1_i2d_Â
(
i2d_DSA∑øms
,(fp), \

195 (*)(
x
))

	)

196 
	#d2i_DSA∑øms_bio
(
bp
,
x
Ë
	`ASN1_d2i_bio_of
(
DSA
,
DSA_√w
,
d2i_DSA∑øms
,bp,x)

	)

197 
	#i2d_DSA∑øms_bio
(
bp
,
x
Ë
	`ASN1_i2d_bio_of_c⁄°
(
DSA
,
i2d_DSA∑øms
,bp,x)

	)

200 
DSA_SIG
 * 
DSA_SIG_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

201 
DSA_SIG_‰ì
(
DSA_SIG
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

202 
i2d_DSA_SIG
(c⁄° 
DSA_SIG
 *
a
, **
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

203 
DSA_SIG
 * 
d2i_DSA_SIG
(DSA_SIG **
v
, c⁄° **
µ
, 
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

205 
DSA_SIG
 * 
DSA_do_sign
(c⁄° *
dg°
,
dÀn
,
DSA
 *
dß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

206 
DSA_do_vîify
(c⁄° *
dg°
,
dg°_Àn
,

207 
DSA_SIG
 *
sig
,
DSA
 *
dß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

209 c⁄° 
DSA_METHOD
 *
DSA_O≥nSSL
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

211 
DSA_£t_deÁu…_mëhod
(c⁄° 
DSA_METHOD
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

212 c⁄° 
DSA_METHOD
 *
DSA_gë_deÁu…_mëhod
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

213 
DSA_£t_mëhod
(
DSA
 *
dß
, c⁄° 
DSA_METHOD
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

215 #ifde‡
OPENSSL_FIPS


216 
DSA
 * 
FIPS_dß_√w
();

217 
FIPS_dß_‰ì
 (
DSA
 *
r
);

220 
DSA
 * 
DSA_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

221 
DSA
 * 
DSA_√w_mëhod
(
ENGINE
 *
ígöe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

222 
DSA_‰ì
 (
DSA
 *
r
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

224 
DSA_up_ªf
(
DSA
 *
r
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

225 
DSA_size
(c⁄° 
DSA
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

227 
DSA_sign_£tup
–
DSA
 *
dß
,
BN_CTX
 *
˘x_ö
,
BIGNUM
 **
kövp
,BIGNUM **
Ω
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

228 
DSA_sign
(
ty≥
,c⁄° *
dg°
,
dÀn
,

229 *
sig
, *
sigÀn
, 
DSA
 *
dß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

230 
DSA_vîify
(
ty≥
,c⁄° *
dg°
,
dg°_Àn
,

231 c⁄° *
sigbuf
, 
sigÀn
, 
DSA
 *
dß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

232 
DSA_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w
 *
√w_func
,

233 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

234 
DSA_£t_ex_d©a
(
DSA
 *
d
, 
idx
, *
¨g
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

235 *
DSA_gë_ex_d©a
(
DSA
 *
d
, 
idx
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

237 
DSA
 * 
d2i_DSAPublicKey
(DSA **
a
, c⁄° **
µ
, 
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

238 
DSA
 * 
d2i_DSAPriv©eKey
(DSA **
a
, c⁄° **
µ
, 
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

239 
DSA
 * 
d2i_DSA∑øms
(DSA **
a
, c⁄° **
µ
, 
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

242 #i‚de‡
OPENSSL_NO_DEPRECATED


243 
DSA
 * 
DSA_gíî©e_∑ømëîs
(
bôs
,

244 *
£ed
,
£ed_Àn
,

245 *
cou¡î_ªt
, *
h_ªt
,

246 (*
ˇŒback
)(, , *),*
cb_¨g
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

250 
DSA_gíî©e_∑ømëîs_ex
(
DSA
 *
dß
, 
bôs
,

251 *
£ed
,
£ed_Àn
,

252 *
cou¡î_ªt
, *
h_ªt
, 
BN_GENCB
 *
cb
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

254 
DSA_gíî©e_key
(
DSA
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

255 
i2d_DSAPublicKey
(c⁄° 
DSA
 *
a
, **
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

256 
i2d_DSAPriv©eKey
(c⁄° 
DSA
 *
a
, **
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

257 
i2d_DSA∑øms
(c⁄° 
DSA
 *
a
,**
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

259 #i‚de‡
OPENSSL_NO_BIO


260 
DSA∑øms_¥öt
(
BIO
 *
bp
, c⁄° 
DSA
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

261 
DSA_¥öt
(
BIO
 *
bp
, c⁄° 
DSA
 *
x
, 
off
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

263 #i‚de‡
OPENSSL_NO_FP_API


264 
DSA∑øms_¥öt_Â
(
FILE
 *
Â
, c⁄° 
DSA
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

265 
DSA_¥öt_Â
(
FILE
 *
bp
, c⁄° 
DSA
 *
x
, 
off
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

268 
	#DSS_¥ime_checks
 50

	)

271 
	#DSA_is_¥ime
(
n
, 
ˇŒback
, 
cb_¨g
) \

272 
	`BN_is_¥ime
(
n
, 
DSS_¥ime_checks
, 
ˇŒback
, 
NULL
, 
cb_¨g
)

	)

274 #i‚de‡
OPENSSL_NO_DH


277 
DH
 *
DSA_dup_DH
(c⁄° 
DSA
 *
r
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

280 #ifde‡
OPENSSL_FIPS


281 
FIPS_dß_sig_ícode
(*
out
, 
DSA_SIG
 *
sig
);

282 
FIPS_dß_sig_decode
(
DSA_SIG
 *
sig
, c⁄° *
ö
, 
öÀn
);

289 
ERR_lﬂd_DSA_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

294 
	#DSA_F_D2I_DSA_SIG
 110

	)

295 
	#DSA_F_DSAPARAMS_PRINT
 100

	)

296 
	#DSA_F_DSAPARAMS_PRINT_FP
 101

	)

297 
	#DSA_F_DSA_BUILTIN_KEYGEN
 119

	)

298 
	#DSA_F_DSA_BUILTIN_PARAMGEN
 118

	)

299 
	#DSA_F_DSA_DO_SIGN
 112

	)

300 
	#DSA_F_DSA_DO_VERIFY
 113

	)

301 
	#DSA_F_DSA_GENERATE_PARAMETERS
 117

	)

302 
	#DSA_F_DSA_NEW_METHOD
 103

	)

303 
	#DSA_F_DSA_PRINT
 104

	)

304 
	#DSA_F_DSA_PRINT_FP
 105

	)

305 
	#DSA_F_DSA_SET_DEFAULT_METHOD
 115

	)

306 
	#DSA_F_DSA_SET_METHOD
 116

	)

307 
	#DSA_F_DSA_SIGN
 106

	)

308 
	#DSA_F_DSA_SIGN_SETUP
 107

	)

309 
	#DSA_F_DSA_SIG_NEW
 109

	)

310 
	#DSA_F_DSA_VERIFY
 108

	)

311 
	#DSA_F_I2D_DSA_SIG
 111

	)

312 
	#DSA_F_SIG_CB
 114

	)

315 
	#DSA_R_BAD_Q_VALUE
 102

	)

316 
	#DSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE
 100

	)

317 
	#DSA_R_KEY_SIZE_TOO_SMALL
 106

	)

318 
	#DSA_R_MISSING_PARAMETERS
 101

	)

319 
	#DSA_R_MODULUS_TOO_LARGE
 103

	)

320 
	#DSA_R_NON_FIPS_METHOD
 104

	)

321 
	#DSA_R_OPERATION_NOT_ALLOWED_IN_FIPS_MODE
 105

	)

323 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/e_os2.h

56 
	~<›ís¶/›ís¶c⁄f.h
>

58 #i‚de‡
HEADER_E_OS2_H


59 
	#HEADER_E_OS2_H


	)

61 #ifde‡ 
__˝lu•lus


71 
	#OPENSSL_SYS_UNIX


	)

74 #i‡
deföed
(
__MWERKS__
Ë&& deföed(
macötosh
Ë|| deföed(
OPENSSL_SYSNAME_MAC
)

75 #unde‡
OPENSSL_SYS_UNIX


76 
	#OPENSSL_SYS_MACINTOSH_CLASSIC


	)

80 #i‡
deföed
(
NETWARE
Ë|| deföed(
OPENSSL_SYSNAME_NETWARE
)

81 #unde‡
OPENSSL_SYS_UNIX


82 
	#OPENSSL_SYS_NETWARE


	)

89 #i‡
deföed
(
OPENSSL_SYSNAME_MSDOS
)

90 #unde‡
OPENSSL_SYS_UNIX


91 
	#OPENSSL_SYS_MSDOS


	)

96 #i‡
deföed
(
OPENSSL_SYSNAME_UWIN
)

97 #unde‡
OPENSSL_SYS_UNIX


98 
	#OPENSSL_SYS_WIN32_UWIN


	)

100 #i‡
deföed
(
__CYGWIN32__
Ë|| deföed(
OPENSSL_SYSNAME_CYGWIN32
)

101 #unde‡
OPENSSL_SYS_UNIX


102 
	#OPENSSL_SYS_WIN32_CYGWIN


	)

104 #i‡
deföed
(
_WIN32
Ë|| deföed(
OPENSSL_SYSNAME_WIN32
)

105 #unde‡
OPENSSL_SYS_UNIX


106 
	#OPENSSL_SYS_WIN32


	)

108 #i‡
deföed
(
OPENSSL_SYSNAME_WINNT
)

109 #unde‡
OPENSSL_SYS_UNIX


110 
	#OPENSSL_SYS_WINNT


	)

112 #i‡
deföed
(
OPENSSL_SYSNAME_WINCE
)

113 #unde‡
OPENSSL_SYS_UNIX


114 
	#OPENSSL_SYS_WINCE


	)

120 #i‡
deföed
(
OPENSSL_SYS_WIN32
Ë|| deföed(
OPENSSL_SYS_WINNT
Ë|| deföed(
OPENSSL_SYS_WINCE
)

121 #unde‡
OPENSSL_SYS_UNIX


122 
	#OPENSSL_SYS_WINDOWS


	)

123 #i‚de‡
OPENSSL_SYS_MSDOS


124 
	#OPENSSL_SYS_MSDOS


	)

131 #ifde‡
OPENSSL_SYS_WINDOWS


132 #i‚de‡
OPENSSL_OPT_WINDLL


133 #i‡
deföed
(
_WINDLL
)

135 
	#OPENSSL_OPT_WINDLL


	)

141 #i‡
deföed
(
__VMS
Ë|| deföed(
VMS
Ë|| deföed(
OPENSSL_SYSNAME_VMS
)

142 #unde‡
OPENSSL_SYS_UNIX


143 
	#OPENSSL_SYS_VMS


	)

144 #i‡
deföed
(
__DECC
)

145 
	#OPENSSL_SYS_VMS_DECC


	)

146 #ñi‡
deföed
(
__DECCXX
)

147 
	#OPENSSL_SYS_VMS_DECC


	)

148 
	#OPENSSL_SYS_VMS_DECCXX


	)

150 
	#OPENSSL_SYS_VMS_NODECC


	)

155 #i‡
deföed
(
__EMX__
Ë|| deföed(
__OS2__
)

156 #unde‡
OPENSSL_SYS_UNIX


157 
	#OPENSSL_SYS_OS2


	)

161 #ifde‡
OPENSSL_SYS_UNIX


162 #i‡
deföed
(
löux
Ë|| deföed(
__löux__
Ë|| deföed(
OPENSSL_SYSNAME_LINUX
)

163 
	#OPENSSL_SYS_LINUX


	)

165 #ifde‡
OPENSSL_SYSNAME_MPE


166 
	#OPENSSL_SYS_MPE


	)

168 #ifde‡
OPENSSL_SYSNAME_SNI


169 
	#OPENSSL_SYS_SNI


	)

171 #ifde‡
OPENSSL_SYSNAME_ULTRASPARC


172 
	#OPENSSL_SYS_ULTRASPARC


	)

174 #ifde‡
OPENSSL_SYSNAME_NEWS4


175 
	#OPENSSL_SYS_NEWS4


	)

177 #ifde‡
OPENSSL_SYSNAME_MACOSX


178 
	#OPENSSL_SYS_MACOSX


	)

180 #ifde‡
OPENSSL_SYSNAME_MACOSX_RHAPSODY


181 
	#OPENSSL_SYS_MACOSX_RHAPSODY


	)

182 
	#OPENSSL_SYS_MACOSX


	)

184 #ifde‡
OPENSSL_SYSNAME_SUNOS


185 
	#OPENSSL_SYS_SUNOS


	)

187 #i‡
deföed
(
_CRAY
Ë|| deföed(
OPENSSL_SYSNAME_CRAY
)

188 
	#OPENSSL_SYS_CRAY


	)

190 #i‡
deföed
(
_AIX
Ë|| deföed(
OPENSSL_SYSNAME_AIX
)

191 
	#OPENSSL_SYS_AIX


	)

196 #ifde‡
OPENSSL_SYSNAME_VOS


197 
	#OPENSSL_SYS_VOS


	)

201 #ifde‡
OPENSSL_SYSNAME_VXWORKS


202 
	#OPENSSL_SYS_VXWORKS


	)

211 #ifde‡
OPENSSL_SYS_MSDOS


212 
	#OPENSSL_UNISTD_IO
 <
io
.
h
>

	)

213 
	#OPENSSL_DECLARE_EXIT
 
	`exô
();

	)

215 
	#OPENSSL_UNISTD_IO
 
OPENSSL_UNISTD


	)

216 
	#OPENSSL_DECLARE_EXIT


	)

238 #i‡
deföed
(
OPENSSL_SYS_VMS_NODECC
)

239 
	#OPENSSL_EXPORT
 
globÆªf


	)

240 
	#OPENSSL_IMPORT
 
globÆªf


	)

241 
	#OPENSSL_GLOBAL
 
globÆdef


	)

242 #ñi‡
deföed
(
OPENSSL_SYS_WINDOWS
Ë&& deföed(
OPENSSL_OPT_WINDLL
)

243 
	#OPENSSL_EXPORT
 
	`__de˛•ec
(
dŒexp‹t
)

	)

244 
	#OPENSSL_IMPORT
 
	`__de˛•ec
(
dŒimp‹t
)

	)

245 
	#OPENSSL_GLOBAL


	)

247 
	#OPENSSL_EXPORT
 

	)

248 
	#OPENSSL_IMPORT
 

	)

249 
	#OPENSSL_GLOBAL


	)

251 
	#OPENSSL_EXTERN
 
OPENSSL_IMPORT


	)

263 #ifde‡
OPENSSL_EXPORT_VAR_AS_FUNCTION


264 
	#OPENSSL_IMPLEMENT_GLOBAL
(
ty≥
,
«me
) \

265 
ty≥
 
_hide_
##
«me
; \

266 
ty≥
 *
_shadow_
##
	`«me
(Ë{  &
_hide_
##
«me
; } \

267 
ty≥
 
_hide_
##
«me


	)

268 
	#OPENSSL_DECLARE_GLOBAL
(
ty≥
,
«me
Ëty≥ *
_shadow_
##
	`«me
()

	)

269 
	#OPENSSL_GLOBAL_REF
(
«me
Ë(*(
_shadow_
##
	`«me
()))

	)

271 
	#OPENSSL_IMPLEMENT_GLOBAL
(
ty≥
,
«me
Ë
OPENSSL_GLOBAL
Åy≥ 
_shadow_
##
	)
name

272 
	#OPENSSL_DECLARE_GLOBAL
(
ty≥
,
«me
Ë
OPENSSL_EXPORT
Åy≥ 
_shadow_
##
	)
name

273 
	#OPENSSL_GLOBAL_REF
(
«me
Ë
_shadow_
##
	)
name

276 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/ecdh.h

69 #i‚de‡
HEADER_ECDH_H


70 
	#HEADER_ECDH_H


	)

72 
	~<AvaûabûôyMa¸os.h
>

74 
	~<›ís¶/›ís¶c⁄f.h
>

76 #ifde‡
OPENSSL_NO_ECDH


77 #îr‹ 
ECDH
 
is
 
dißbÀd
.

80 
	~<›ís¶/ec.h
>

81 
	~<›ís¶/os¶_typ.h
>

82 #i‚de‡
OPENSSL_NO_DEPRECATED


83 
	~<›ís¶/bn.h
>

86 #ifde‡
__˝lu•lus


90 c⁄° 
ECDH_METHOD
 *
ECDH_O≥nSSL
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

92 
ECDH_£t_deÁu…_mëhod
(c⁄° 
ECDH_METHOD
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

93 c⁄° 
ECDH_METHOD
 *
ECDH_gë_deÁu…_mëhod
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

94 
ECDH_£t_mëhod
(
EC_KEY
 *, c⁄° 
ECDH_METHOD
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

96 
ECDH_compuã_key
(*
out
, 
size_t
 
ouéí
, c⁄° 
EC_POINT
 *
pub_key
, 
EC_KEY
 *
ecdh
,

97 *(*
KDF
)(c⁄° *
ö
, 
size_t
 
öÀn
, *
out
, size_à*
ouéí
)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

99 
ECDH_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w


100 *
√w_func
, 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

101 
ECDH_£t_ex_d©a
(
EC_KEY
 *
d
, 
idx
, *
¨g
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

102 *
ECDH_gë_ex_d©a
(
EC_KEY
 *
d
, 
idx
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

109 
ERR_lﬂd_ECDH_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

114 
	#ECDH_F_ECDH_COMPUTE_KEY
 100

	)

115 
	#ECDH_F_ECDH_DATA_NEW_METHOD
 101

	)

118 
	#ECDH_R_KDF_FAILED
 102

	)

119 
	#ECDH_R_NO_PRIVATE_VALUE
 100

	)

120 
	#ECDH_R_POINT_ARITHMETIC_FAILURE
 101

	)

122 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/ecdsa.h

59 #i‚de‡
HEADER_ECDSA_H


60 
	#HEADER_ECDSA_H


	)

62 
	~<AvaûabûôyMa¸os.h
>

64 
	~<›ís¶/›ís¶c⁄f.h
>

66 #ifde‡
OPENSSL_NO_ECDSA


67 #îr‹ 
ECDSA
 
is
 
dißbÀd
.

70 
	~<›ís¶/ec.h
>

71 
	~<›ís¶/os¶_typ.h
>

72 #i‚de‡
OPENSSL_NO_DEPRECATED


73 
	~<›ís¶/bn.h
>

76 #ifde‡
__˝lu•lus


80 
	sECDSA_SIG_°


82 
BIGNUM
 *
r
;

83 
BIGNUM
 *
s
;

84 } 
	tECDSA_SIG
;

90 
ECDSA_SIG
 *
ECDSA_SIG_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

96 
ECDSA_SIG_‰ì
(
ECDSA_SIG
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

105 
i2d_ECDSA_SIG
(c⁄° 
ECDSA_SIG
 *
a
, **
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

115 
ECDSA_SIG
 *
d2i_ECDSA_SIG
(ECDSA_SIG **
v
, c⁄° **
µ
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

125 
ECDSA_SIG
 *
ECDSA_do_sign
(c⁄° *
dg°
,
dg°_Àn
,
EC_KEY
 *
eckey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

138 
ECDSA_SIG
 *
ECDSA_do_sign_ex
(c⁄° *
dg°
, 
dg°Àn
,

139 c⁄° 
BIGNUM
 *
köv
, c⁄° BIGNUM *
Ω
, 
EC_KEY
 *
eckey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

150 
ECDSA_do_vîify
(c⁄° *
dg°
, 
dg°_Àn
,

151 c⁄° 
ECDSA_SIG
 *
sig
, 
EC_KEY
* 
eckey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

153 c⁄° 
ECDSA_METHOD
 *
ECDSA_O≥nSSL
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

159 
ECDSA_£t_deÁu…_mëhod
(c⁄° 
ECDSA_METHOD
 *
mëh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

165 c⁄° 
ECDSA_METHOD
 *
ECDSA_gë_deÁu…_mëhod
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

173 
ECDSA_£t_mëhod
(
EC_KEY
 *
eckey
, c⁄° 
ECDSA_METHOD
 *
mëh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

180 
ECDSA_size
(c⁄° 
EC_KEY
 *
eckey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

190 
ECDSA_sign_£tup
(
EC_KEY
 *
eckey
, 
BN_CTX
 *
˘x
, 
BIGNUM
 **
köv
,

191 
BIGNUM
 **
Ω
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

204 
ECDSA_sign
(
ty≥
, c⁄° *
dg°
, 
dg°Àn
,

205 *
sig
, *
sigÀn
, 
EC_KEY
 *
eckey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

222 
ECDSA_sign_ex
(
ty≥
, c⁄° *
dg°
, 
dg°Àn
,

223 *
sig
, *
sigÀn
, c⁄° 
BIGNUM
 *
köv
,

224 c⁄° 
BIGNUM
 *
Ω
, 
EC_KEY
 *
eckey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

237 
ECDSA_vîify
(
ty≥
, c⁄° *
dg°
, 
dg°Àn
,

238 c⁄° *
sig
, 
sigÀn
, 
EC_KEY
 *
eckey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

241 
ECDSA_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w


242 *
√w_func
, 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

243 
ECDSA_£t_ex_d©a
(
EC_KEY
 *
d
, 
idx
, *
¨g
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

244 *
ECDSA_gë_ex_d©a
(
EC_KEY
 *
d
, 
idx
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

251 
ERR_lﬂd_ECDSA_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

256 
	#ECDSA_F_ECDSA_DATA_NEW_METHOD
 100

	)

257 
	#ECDSA_F_ECDSA_DO_SIGN
 101

	)

258 
	#ECDSA_F_ECDSA_DO_VERIFY
 102

	)

259 
	#ECDSA_F_ECDSA_SIGN_SETUP
 103

	)

262 
	#ECDSA_R_BAD_SIGNATURE
 100

	)

263 
	#ECDSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE
 101

	)

264 
	#ECDSA_R_ERR_EC_LIB
 102

	)

265 
	#ECDSA_R_MISSING_PARAMETERS
 103

	)

266 
	#ECDSA_R_NEED_NEW_SETUP_VALUES
 106

	)

267 
	#ECDSA_R_RANDOM_NUMBER_GENERATION_FAILED
 104

	)

268 
	#ECDSA_R_SIGNATURE_MALLOC_FAILED
 105

	)

270 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/err.h

59 #i‚de‡
HEADER_ERR_H


60 
	#HEADER_ERR_H


	)

62 
	~<AvaûabûôyMa¸os.h
>

64 
	~<›ís¶/e_os2.h
>

66 #i‚de‡
OPENSSL_NO_FP_API


67 
	~<°dio.h
>

68 
	~<°dlib.h
>

71 
	~<›ís¶/os¶_typ.h
>

72 #i‚de‡
OPENSSL_NO_BIO


73 
	~<›ís¶/bio.h
>

75 #i‚de‡
OPENSSL_NO_LHASH


76 
	~<›ís¶/lhash.h
>

79 #ifdef 
__˝lu•lus


83 #i‚de‡
OPENSSL_NO_ERR


84 
	#ERR_PUT_îr‹
(
a
,
b
,
c
,
d
,
e
Ë
	`ERR_put_îr‹
◊,b,c,d,e)

	)

86 
	#ERR_PUT_îr‹
(
a
,
b
,
c
,
d
,
e
Ë
	`ERR_put_îr‹
◊,b,c,
NULL
,0)

	)

89 
	~<î∫o.h
>

91 
	#ERR_TXT_MALLOCED
 0x01

	)

92 
	#ERR_TXT_STRING
 0x02

	)

94 
	#ERR_FLAG_MARK
 0x01

	)

96 
	#ERR_NUM_ERRORS
 16

	)

97 
	sîr_°©e_°


99 
pid
;

100 
îr_Êags
[
ERR_NUM_ERRORS
];

101 
îr_buf„r
[
ERR_NUM_ERRORS
];

102 *
îr_d©a
[
ERR_NUM_ERRORS
];

103 
îr_d©a_Êags
[
ERR_NUM_ERRORS
];

104 c⁄° *
îr_fûe
[
ERR_NUM_ERRORS
];

105 
îr_löe
[
ERR_NUM_ERRORS
];

106 
t›
,
bŸtom
;

107 } 
	tERR_STATE
;

110 
	#ERR_LIB_NONE
 1

	)

111 
	#ERR_LIB_SYS
 2

	)

112 
	#ERR_LIB_BN
 3

	)

113 
	#ERR_LIB_RSA
 4

	)

114 
	#ERR_LIB_DH
 5

	)

115 
	#ERR_LIB_EVP
 6

	)

116 
	#ERR_LIB_BUF
 7

	)

117 
	#ERR_LIB_OBJ
 8

	)

118 
	#ERR_LIB_PEM
 9

	)

119 
	#ERR_LIB_DSA
 10

	)

120 
	#ERR_LIB_X509
 11

	)

122 
	#ERR_LIB_ASN1
 13

	)

123 
	#ERR_LIB_CONF
 14

	)

124 
	#ERR_LIB_CRYPTO
 15

	)

125 
	#ERR_LIB_EC
 16

	)

126 
	#ERR_LIB_SSL
 20

	)

132 
	#ERR_LIB_BIO
 32

	)

133 
	#ERR_LIB_PKCS7
 33

	)

134 
	#ERR_LIB_X509V3
 34

	)

135 
	#ERR_LIB_PKCS12
 35

	)

136 
	#ERR_LIB_RAND
 36

	)

137 
	#ERR_LIB_DSO
 37

	)

138 
	#ERR_LIB_ENGINE
 38

	)

139 
	#ERR_LIB_OCSP
 39

	)

140 
	#ERR_LIB_UI
 40

	)

141 
	#ERR_LIB_COMP
 41

	)

142 
	#ERR_LIB_ECDSA
 42

	)

143 
	#ERR_LIB_ECDH
 43

	)

144 
	#ERR_LIB_STORE
 44

	)

145 
	#ERR_LIB_FIPS
 45

	)

146 
	#ERR_LIB_CMS
 46

	)

147 
	#ERR_LIB_JPAKE
 47

	)

149 
	#ERR_LIB_USER
 128

	)

151 
	#SYSîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_SYS
,(f),‘),
__FILE__
,
__LINE__
)

	)

152 
	#BNîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_BN
,(f),‘),
__FILE__
,
__LINE__
)

	)

153 
	#RSAîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_RSA
,(f),‘),
__FILE__
,
__LINE__
)

	)

154 
	#DHîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_DH
,(f),‘),
__FILE__
,
__LINE__
)

	)

155 
	#EVPîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_EVP
,(f),‘),
__FILE__
,
__LINE__
)

	)

156 
	#BUFîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_BUF
,(f),‘),
__FILE__
,
__LINE__
)

	)

157 
	#OBJîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_OBJ
,(f),‘),
__FILE__
,
__LINE__
)

	)

158 
	#PEMîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_PEM
,(f),‘),
__FILE__
,
__LINE__
)

	)

159 
	#DSAîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_DSA
,(f),‘),
__FILE__
,
__LINE__
)

	)

160 
	#X509îr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_X509
,(f),‘),
__FILE__
,
__LINE__
)

	)

161 
	#ASN1îr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_ASN1
,(f),‘),
__FILE__
,
__LINE__
)

	)

162 
	#CONFîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_CONF
,(f),‘),
__FILE__
,
__LINE__
)

	)

163 
	#CRYPTOîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_CRYPTO
,(f),‘),
__FILE__
,
__LINE__
)

	)

164 
	#ECîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_EC
,(f),‘),
__FILE__
,
__LINE__
)

	)

165 
	#SSLîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_SSL
,(f),‘),
__FILE__
,
__LINE__
)

	)

166 
	#BIOîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_BIO
,(f),‘),
__FILE__
,
__LINE__
)

	)

167 
	#PKCS7îr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_PKCS7
,(f),‘),
__FILE__
,
__LINE__
)

	)

168 
	#X509V3îr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_X509V3
,(f),‘),
__FILE__
,
__LINE__
)

	)

169 
	#PKCS12îr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_PKCS12
,(f),‘),
__FILE__
,
__LINE__
)

	)

170 
	#RANDîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_RAND
,(f),‘),
__FILE__
,
__LINE__
)

	)

171 
	#DSOîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_DSO
,(f),‘),
__FILE__
,
__LINE__
)

	)

172 
	#ENGINEîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_ENGINE
,(f),‘),
__FILE__
,
__LINE__
)

	)

173 
	#OCSPîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_OCSP
,(f),‘),
__FILE__
,
__LINE__
)

	)

174 
	#UIîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_UI
,(f),‘),
__FILE__
,
__LINE__
)

	)

175 
	#COMPîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_COMP
,(f),‘),
__FILE__
,
__LINE__
)

	)

176 
	#ECDSAîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_ECDSA
,(f),‘),
__FILE__
,
__LINE__
)

	)

177 
	#ECDHîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_ECDH
,(f),‘),
__FILE__
,
__LINE__
)

	)

178 
	#STOREîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_STORE
,(f),‘),
__FILE__
,
__LINE__
)

	)

179 
	#FIPSîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_FIPS
,(f),‘),
__FILE__
,
__LINE__
)

	)

180 
	#CMSîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_CMS
,(f),‘),
__FILE__
,
__LINE__
)

	)

181 
	#JPAKEîr
(
f
,
r
Ë
	`ERR_PUT_îr‹
(
ERR_LIB_JPAKE
,(f),‘),
__FILE__
,
__LINE__
)

	)

185 
	#ERR_PACK
(
l
,
f
,
r
) ((((()l)&0xffL)*0x1000000)| \

186 (((()
f
)&0xfffL)*0x1000)| \

187 (((()
r
)&0xfffL)))

	)

188 
	#ERR_GET_LIB
(
l
Ë()((((Ó)>>24L)&0xffL)

	)

189 
	#ERR_GET_FUNC
(
l
Ë()((((Ó)>>12L)&0xfffL)

	)

190 
	#ERR_GET_REASON
(
l
Ë()(÷)&0xfffL)

	)

191 
	#ERR_FATAL_ERROR
(
l
Ë()(÷)&
ERR_R_FATAL
)

	)

195 
	#SYS_F_FOPEN
 1

	)

196 
	#SYS_F_CONNECT
 2

	)

197 
	#SYS_F_GETSERVBYNAME
 3

	)

198 
	#SYS_F_SOCKET
 4

	)

199 
	#SYS_F_IOCTLSOCKET
 5

	)

200 
	#SYS_F_BIND
 6

	)

201 
	#SYS_F_LISTEN
 7

	)

202 
	#SYS_F_ACCEPT
 8

	)

203 
	#SYS_F_WSASTARTUP
 9

	)

204 
	#SYS_F_OPENDIR
 10

	)

205 
	#SYS_F_FREAD
 11

	)

209 
	#ERR_R_SYS_LIB
 
ERR_LIB_SYS


	)

210 
	#ERR_R_BN_LIB
 
ERR_LIB_BN


	)

211 
	#ERR_R_RSA_LIB
 
ERR_LIB_RSA


	)

212 
	#ERR_R_DH_LIB
 
ERR_LIB_DH


	)

213 
	#ERR_R_EVP_LIB
 
ERR_LIB_EVP


	)

214 
	#ERR_R_BUF_LIB
 
ERR_LIB_BUF


	)

215 
	#ERR_R_OBJ_LIB
 
ERR_LIB_OBJ


	)

216 
	#ERR_R_PEM_LIB
 
ERR_LIB_PEM


	)

217 
	#ERR_R_DSA_LIB
 
ERR_LIB_DSA


	)

218 
	#ERR_R_X509_LIB
 
ERR_LIB_X509


	)

219 
	#ERR_R_ASN1_LIB
 
ERR_LIB_ASN1


	)

220 
	#ERR_R_CONF_LIB
 
ERR_LIB_CONF


	)

221 
	#ERR_R_CRYPTO_LIB
 
ERR_LIB_CRYPTO


	)

222 
	#ERR_R_EC_LIB
 
ERR_LIB_EC


	)

223 
	#ERR_R_SSL_LIB
 
ERR_LIB_SSL


	)

224 
	#ERR_R_BIO_LIB
 
ERR_LIB_BIO


	)

225 
	#ERR_R_PKCS7_LIB
 
ERR_LIB_PKCS7


	)

226 
	#ERR_R_X509V3_LIB
 
ERR_LIB_X509V3


	)

227 
	#ERR_R_PKCS12_LIB
 
ERR_LIB_PKCS12


	)

228 
	#ERR_R_RAND_LIB
 
ERR_LIB_RAND


	)

229 
	#ERR_R_DSO_LIB
 
ERR_LIB_DSO


	)

230 
	#ERR_R_ENGINE_LIB
 
ERR_LIB_ENGINE


	)

231 
	#ERR_R_OCSP_LIB
 
ERR_LIB_OCSP


	)

232 
	#ERR_R_UI_LIB
 
ERR_LIB_UI


	)

233 
	#ERR_R_COMP_LIB
 
ERR_LIB_COMP


	)

234 
	#ERR_R_ECDSA_LIB
 
ERR_LIB_ECDSA


	)

235 
	#ERR_R_ECDH_LIB
 
ERR_LIB_ECDH


	)

236 
	#ERR_R_STORE_LIB
 
ERR_LIB_STORE


	)

238 
	#ERR_R_NESTED_ASN1_ERROR
 58

	)

239 
	#ERR_R_BAD_ASN1_OBJECT_HEADER
 59

	)

240 
	#ERR_R_BAD_GET_ASN1_OBJECT_CALL
 60

	)

241 
	#ERR_R_EXPECTING_AN_ASN1_SEQUENCE
 61

	)

242 
	#ERR_R_ASN1_LENGTH_MISMATCH
 62

	)

243 
	#ERR_R_MISSING_ASN1_EOS
 63

	)

246 
	#ERR_R_FATAL
 64

	)

247 
	#ERR_R_MALLOC_FAILURE
 (1|
ERR_R_FATAL
)

	)

248 
	#ERR_R_SHOULD_NOT_HAVE_BEEN_CALLED
 (2|
ERR_R_FATAL
)

	)

249 
	#ERR_R_PASSED_NULL_PARAMETER
 (3|
ERR_R_FATAL
)

	)

250 
	#ERR_R_INTERNAL_ERROR
 (4|
ERR_R_FATAL
)

	)

251 
	#ERR_R_DISABLED
 (5|
ERR_R_FATAL
)

	)

257 
	sERR_°rög_d©a_°


259 
îr‹
;

260 c⁄° *
°rög
;

261 } 
	tERR_STRING_DATA
;

263 
ERR_put_îr‹
(
lib
, 
func
,
ªas⁄
,c⁄° *
fûe
,
löe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

264 
ERR_£t_îr‹_d©a
(*
d©a
,
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

266 
ERR_gë_îr‹
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

267 
ERR_gë_îr‹_löe
(c⁄° **
fûe
,*
löe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

268 
ERR_gë_îr‹_löe_d©a
(c⁄° **
fûe
,*
löe
,

269 c⁄° **
d©a
, *
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

270 
ERR_≥ek_îr‹
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

271 
ERR_≥ek_îr‹_löe
(c⁄° **
fûe
,*
löe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

272 
ERR_≥ek_îr‹_löe_d©a
(c⁄° **
fûe
,*
löe
,

273 c⁄° **
d©a
,*
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

274 
ERR_≥ek_œ°_îr‹
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

275 
ERR_≥ek_œ°_îr‹_löe
(c⁄° **
fûe
,*
löe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

276 
ERR_≥ek_œ°_îr‹_löe_d©a
(c⁄° **
fûe
,*
löe
,

277 c⁄° **
d©a
,*
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

278 
ERR_˛ór_îr‹
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

279 *
ERR_îr‹_°rög
(
e
,*
buf
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

280 
ERR_îr‹_°rög_n
(
e
, *
buf
, 
size_t
 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

281 c⁄° *
ERR_lib_îr‹_°rög
(
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

282 c⁄° *
ERR_func_îr‹_°rög
(
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

283 c⁄° *
ERR_ªas⁄_îr‹_°rög
(
e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

284 
ERR_¥öt_îr‹s_cb
((*
cb
)(c⁄° *
°r
, 
size_t
 
Àn
, *
u
),

285 *
u
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

286 #i‚de‡
OPENSSL_NO_FP_API


287 
ERR_¥öt_îr‹s_Â
(
FILE
 *
Â
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

289 #i‚de‡
OPENSSL_NO_BIO


290 
ERR_¥öt_îr‹s
(
BIO
 *
bp
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

291 
ERR_add_îr‹_d©a
(
num
, ...Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

293 
ERR_lﬂd_°rögs
(
lib
,
ERR_STRING_DATA
 
°r
[]Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

294 
ERR_u∆ﬂd_°rögs
(
lib
,
ERR_STRING_DATA
 
°r
[]Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

295 
ERR_lﬂd_ERR_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

296 
ERR_lﬂd_¸y±o_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

297 
ERR_‰ì_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

299 
ERR_ªmove_°©e
(
pid
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

300 
ERR_STATE
 *
ERR_gë_°©e
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

302 #i‚de‡
OPENSSL_NO_LHASH


303 
LHASH
 *
ERR_gë_°rög_èbÀ
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

304 
LHASH
 *
ERR_gë_îr_°©e_èbÀ
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

305 
ERR_ªÀa£_îr_°©e_èbÀ
(
LHASH
 **
hash
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

308 
ERR_gë_√xt_îr‹_libøry
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

310 
ERR_£t_m¨k
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

311 
ERR_p›_to_m¨k
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

313 #ifde‡
OPENSSL_FIPS


314 
öt_ERR_£t_°©e_func
(
ERR_STATE
 *(*
gë_func
)(),

315 (*
ªmove_func
)(
pid
)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

316 
öt_ERR_lib_öô
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

323 c⁄° 
ERR_FNS
 *
ERR_gë_im∂emíèti⁄
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

326 
ERR_£t_im∂emíèti⁄
(c⁄° 
ERR_FNS
 *
‚s
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

328 #ifdef 
__˝lu•lus


	@/usr/include/openssl/evp.h

59 #i‚de‡
HEADER_ENVELOPE_H


60 
	#HEADER_ENVELOPE_H


	)

62 
	~<AvaûabûôyMa¸os.h
>

64 #ifde‡
OPENSSL_ALGORITHM_DEFINES


65 
	~<›ís¶/›ís¶c⁄f.h
>

67 
	#OPENSSL_ALGORITHM_DEFINES


	)

68 
	~<›ís¶/›ís¶c⁄f.h
>

69 #unde‡
OPENSSL_ALGORITHM_DEFINES


72 
	~<›ís¶/os¶_typ.h
>

74 
	~<›ís¶/symhacks.h
>

76 #i‚de‡
OPENSSL_NO_BIO


77 
	~<›ís¶/bio.h
>

80 #ifde‡
OPENSSL_FIPS


81 
	~<›ís¶/fùs.h
>

91 
	#EVP_MAX_MD_SIZE
 64

	)

92 
	#EVP_MAX_KEY_LENGTH
 32

	)

93 
	#EVP_MAX_IV_LENGTH
 16

	)

94 
	#EVP_MAX_BLOCK_LENGTH
 32

	)

96 
	#PKCS5_SALT_LEN
 8

	)

98 
	#PKCS5_DEFAULT_ITER
 2048

	)

100 
	~<›ís¶/obje˘s.h
>

102 
	#EVP_PK_RSA
 0x0001

	)

103 
	#EVP_PK_DSA
 0x0002

	)

104 
	#EVP_PK_DH
 0x0004

	)

105 
	#EVP_PK_EC
 0x0008

	)

106 
	#EVP_PKT_SIGN
 0x0010

	)

107 
	#EVP_PKT_ENC
 0x0020

	)

108 
	#EVP_PKT_EXCH
 0x0040

	)

109 
	#EVP_PKS_RSA
 0x0100

	)

110 
	#EVP_PKS_DSA
 0x0200

	)

111 
	#EVP_PKS_EC
 0x0400

	)

112 
	#EVP_PKT_EXP
 0x1000

	)

114 
	#EVP_PKEY_NONE
 
NID_undef


	)

115 
	#EVP_PKEY_RSA
 
NID_rßEn¸y±i⁄


	)

116 
	#EVP_PKEY_RSA2
 
NID_rß


	)

117 
	#EVP_PKEY_DSA
 
NID_dß


	)

118 
	#EVP_PKEY_DSA1
 
NID_dß_2


	)

119 
	#EVP_PKEY_DSA2
 
NID_dßWôhSHA


	)

120 
	#EVP_PKEY_DSA3
 
NID_dßWôhSHA1


	)

121 
	#EVP_PKEY_DSA4
 
NID_dßWôhSHA1_2


	)

122 
	#EVP_PKEY_DH
 
NID_dhKeyAgªemít


	)

123 
	#EVP_PKEY_EC
 
NID_X9_62_id_ecPublicKey


	)

125 #ifdef 
__˝lu•lus


132 
	sevp_pkey_°


134 
ty≥
;

135 
ßve_ty≥
;

136 
ª„ªn˚s
;

138 *
±r
;

139 #i‚de‡
OPENSSL_NO_RSA


140 
rß_°
 *
rß
;

142 #i‚de‡
OPENSSL_NO_DSA


143 
dß_°
 *
dß
;

145 #i‚de‡
OPENSSL_NO_DH


146 
dh_°
 *
dh
;

148 #i‚de‡
OPENSSL_NO_EC


149 
ec_key_°
 *
ec
;

151 } 
pkey
;

152 
ßve_∑ømëîs
;

153 
STACK_OF
(
X509_ATTRIBUTE
Ë*
©åibuãs
;

156 
	#EVP_PKEY_MO_SIGN
 0x0001

	)

157 
	#EVP_PKEY_MO_VERIFY
 0x0002

	)

158 
	#EVP_PKEY_MO_ENCRYPT
 0x0004

	)

159 
	#EVP_PKEY_MO_DECRYPT
 0x0008

	)

172 
	sevp_pkey_md_°


174 
oid
;

175 
EVP_MD
 *
md
;

176 
EVP_PKEY_METHOD
 *
pkey
;

177 } 
	tEVP_PKEY_MD
;

179 
	#EVP_rß_md2
() \

180 
	`EVP_PKEY_MD_add
(
NID_md2WôhRSAEn¸y±i⁄
,\

181 
	`EVP_rß_pkcs1
(),
	`EVP_md2
())

	)

182 
	#EVP_rß_md5
() \

183 
	`EVP_PKEY_MD_add
(
NID_md5WôhRSAEn¸y±i⁄
,\

184 
	`EVP_rß_pkcs1
(),
	`EVP_md5
())

	)

185 
	#EVP_rß_sha0
() \

186 
	`EVP_PKEY_MD_add
(
NID_shaWôhRSAEn¸y±i⁄
,\

187 
	`EVP_rß_pkcs1
(),
	`EVP_sha
())

	)

188 
	#EVP_rß_sha1
() \

189 
	`EVP_PKEY_MD_add
(
NID_sha1WôhRSAEn¸y±i⁄
,\

190 
	`EVP_rß_pkcs1
(),
	`EVP_sha1
())

	)

191 
	#EVP_rß_rùemd160
() \

192 
	`EVP_PKEY_MD_add
(
NID_rùemd160WôhRSA
,\

193 
	`EVP_rß_pkcs1
(),
	`EVP_rùemd160
())

	)

194 
	#EVP_rß_mdc2
() \

195 
	`EVP_PKEY_MD_add
(
NID_mdc2WôhRSA
,\

196 
	`EVP_rß_o˘ë_°rög
(),
	`EVP_mdc2
())

	)

197 
	#EVP_dß_sha
() \

198 
	`EVP_PKEY_MD_add
(
NID_dßWôhSHA
,\

199 
	`EVP_dß
(),
	`EVP_sha
())

	)

200 
	#EVP_dß_sha1
() \

201 
	`EVP_PKEY_MD_add
(
NID_dßWôhSHA1
,\

202 
	`EVP_dß
(),
	`EVP_sha1
())

	)

204 
	sevp_pkey_mëhod_°


206 *
«me
;

207 
Êags
;

208 
ty≥
;

209 
oid
;

210 
í¸y±_oid
;

212 (*
sign
)();

213 (*
vîify
)();

215 (*
£t
)();

216 (*
gë
)();

217 (*
í¸y±
)();

218 (*
de¸y±
)();

219 (*
i2d
)();

220 (*
d2i
)();

221 (*
dup
)();

222 } 
pub
,
¥iv
;

223 (*
£t_a¢1_∑ømëîs
)();

224 (*
gë_a¢1_∑ømëîs
)();

225 } 
	tEVP_PKEY_METHOD
;

228 #i‚de‡
EVP_MD


229 
	sív_md_°


231 
ty≥
;

232 
pkey_ty≥
;

233 
md_size
;

234 
Êags
;

235 (*
öô
)(
EVP_MD_CTX
 *
˘x
);

236 (*
upd©e
)(
EVP_MD_CTX
 *
˘x
,c⁄° *
d©a
,
size_t
 
cou¡
);

237 (*
föÆ
)(
EVP_MD_CTX
 *
˘x
,*
md
);

238 (*
c›y
)(
EVP_MD_CTX
 *
to
,c⁄° EVP_MD_CTX *
‰om
);

239 (*
˛ónup
)(
EVP_MD_CTX
 *
˘x
);

242 (*
sign
)(
ty≥
, c⁄° *
m
, 
m_Àngth
,

243 *
sigªt
, *
sigÀn
, *
key
);

244 (*
vîify
)(
ty≥
, c⁄° *
m
, 
m_Àngth
,

245 c⁄° *
sigbuf
, 
sigÀn
,

246 *
key
);

247 
ªquúed_pkey_ty≥
[5];

248 
block_size
;

249 
˘x_size
;

252 
	tevp_sign_mëhod
(
	tty≥
,c⁄° *
	tm
,

253 
	tm_Àngth
,*
	tsigªt
,

254 *
	tsigÀn
, *
	tkey
);

255 
	tevp_vîify_mëhod
(
	tty≥
,c⁄° *
	tm
,

256 
	tm_Àngth
,c⁄° *
	tsigbuf
,

257 
	tsigÀn
, *
	tkey
);

261 
EVP_MD_CTX
 *
m˘x
;

262 *
key
;

263 } 
	tEVP_MD_SVCTX
;

265 
	#EVP_MD_FLAG_ONESHOT
 0x0001

	)

268 
	#EVP_MD_FLAG_FIPS
 0x0400

	)

270 
	#EVP_MD_FLAG_SVCTX
 0x0800

	)

272 
	#EVP_PKEY_NULL_mëhod
 
NULL
,NULL,{0,0,0,0}

	)

274 #i‚de‡
OPENSSL_NO_DSA


275 
	#EVP_PKEY_DSA_mëhod
 (
evp_sign_mëhod
 *)
DSA_sign
, \

276 (
evp_vîify_mëhod
 *)
DSA_vîify
, \

277 {
EVP_PKEY_DSA
,
EVP_PKEY_DSA2
,
EVP_PKEY_DSA3
, \

278 
EVP_PKEY_DSA4
,0}

	)

280 
	#EVP_PKEY_DSA_mëhod
 
EVP_PKEY_NULL_mëhod


	)

283 #i‚de‡
OPENSSL_NO_ECDSA


284 
	#EVP_PKEY_ECDSA_mëhod
 (
evp_sign_mëhod
 *)
ECDSA_sign
, \

285 (
evp_vîify_mëhod
 *)
ECDSA_vîify
, \

286 {
EVP_PKEY_EC
,0,0,0}

	)

288 
	#EVP_PKEY_ECDSA_mëhod
 
EVP_PKEY_NULL_mëhod


	)

291 #i‚de‡
OPENSSL_NO_RSA


292 
	#EVP_PKEY_RSA_mëhod
 (
evp_sign_mëhod
 *)
RSA_sign
, \

293 (
evp_vîify_mëhod
 *)
RSA_vîify
, \

294 {
EVP_PKEY_RSA
,
EVP_PKEY_RSA2
,0,0}

	)

295 
	#EVP_PKEY_RSA_ASN1_OCTET_STRING_mëhod
 \

296 (
evp_sign_mëhod
 *)
RSA_sign_ASN1_OCTET_STRING
, \

297 (
evp_vîify_mëhod
 *)
RSA_vîify_ASN1_OCTET_STRING
, \

298 {
EVP_PKEY_RSA
,
EVP_PKEY_RSA2
,0,0}

	)

300 
	#EVP_PKEY_RSA_mëhod
 
EVP_PKEY_NULL_mëhod


	)

301 
	#EVP_PKEY_RSA_ASN1_OCTET_STRING_mëhod
 
EVP_PKEY_NULL_mëhod


	)

306 
	sív_md_˘x_°


308 c⁄° 
EVP_MD
 *
dige°
;

309 
ENGINE
 *
ígöe
;

310 
Êags
;

311 *
md_d©a
;

316 
	#EVP_MD_CTX_FLAG_ONESHOT
 0x0001

	)

318 
	#EVP_MD_CTX_FLAG_CLEANED
 0x0002

	)

320 
	#EVP_MD_CTX_FLAG_REUSE
 0x0004

	)

322 
	#EVP_MD_CTX_FLAG_NON_FIPS_ALLOW
 0x0008

	)

325 
	#EVP_MD_CTX_FLAG_PAD_MASK
 0xF0

	)

326 
	#EVP_MD_CTX_FLAG_PAD_PKCS1
 0x00

	)

327 
	#EVP_MD_CTX_FLAG_PAD_X931
 0x10

	)

328 
	#EVP_MD_CTX_FLAG_PAD_PSS
 0x20

	)

329 
	#M_EVP_MD_CTX_FLAG_PSS_SALT
(
˘x
) \

330 ((
˘x
->
Êags
>>16Ë&0xFFFFË

	)

331 
	#EVP_MD_CTX_FLAG_PSS_MDLEN
 0xFFFF

	)

332 
	#EVP_MD_CTX_FLAG_PSS_MREC
 0xFFFE

	)

334 
	sevp_cùhî_°


336 
nid
;

337 
block_size
;

338 
key_Àn
;

339 
iv_Àn
;

340 
Êags
;

341 (*
öô
)(
EVP_CIPHER_CTX
 *
˘x
, c⁄° *
key
,

342 c⁄° *
iv
, 
íc
);

343 (*
do_cùhî
)(
EVP_CIPHER_CTX
 *
˘x
, *
out
,

344 c⁄° *
ö
, 
öl
);

345 (*
˛ónup
)(
EVP_CIPHER_CTX
 *);

346 
˘x_size
;

347 (*
£t_a¢1_∑ømëîs
)(
EVP_CIPHER_CTX
 *, 
ASN1_TYPE
 *);

348 (*
gë_a¢1_∑ømëîs
)(
EVP_CIPHER_CTX
 *, 
ASN1_TYPE
 *);

349 (*
˘æ
)(
EVP_CIPHER_CTX
 *, 
ty≥
, 
¨g
, *
±r
);

350 *
≠p_d©a
;

357 
	#EVP_CIPH_STREAM_CIPHER
 0x0

	)

358 
	#EVP_CIPH_ECB_MODE
 0x1

	)

359 
	#EVP_CIPH_CBC_MODE
 0x2

	)

360 
	#EVP_CIPH_CFB_MODE
 0x3

	)

361 
	#EVP_CIPH_OFB_MODE
 0x4

	)

362 
	#EVP_CIPH_MODE
 0x7

	)

364 
	#EVP_CIPH_VARIABLE_LENGTH
 0x8

	)

366 
	#EVP_CIPH_CUSTOM_IV
 0x10

	)

368 
	#EVP_CIPH_ALWAYS_CALL_INIT
 0x20

	)

370 
	#EVP_CIPH_CTRL_INIT
 0x40

	)

372 
	#EVP_CIPH_CUSTOM_KEY_LENGTH
 0x80

	)

374 
	#EVP_CIPH_NO_PADDING
 0x100

	)

376 
	#EVP_CIPH_RAND_KEY
 0x200

	)

378 
	#EVP_CIPH_FLAG_FIPS
 0x400

	)

380 
	#EVP_CIPH_FLAG_NON_FIPS_ALLOW
 0x800

	)

382 
	#EVP_CIPH_FLAG_DEFAULT_ASN1
 0x1000

	)

384 
	#EVP_CIPH_FLAG_LENGTH_BITS
 0x2000

	)

388 
	#EVP_CTRL_INIT
 0x0

	)

389 
	#EVP_CTRL_SET_KEY_LENGTH
 0x1

	)

390 
	#EVP_CTRL_GET_RC2_KEY_BITS
 0x2

	)

391 
	#EVP_CTRL_SET_RC2_KEY_BITS
 0x3

	)

392 
	#EVP_CTRL_GET_RC5_ROUNDS
 0x4

	)

393 
	#EVP_CTRL_SET_RC5_ROUNDS
 0x5

	)

394 
	#EVP_CTRL_RAND_KEY
 0x6

	)

396 
	sevp_cùhî_öfo_°


398 c⁄° 
EVP_CIPHER
 *
cùhî
;

399 
iv
[
EVP_MAX_IV_LENGTH
];

400 } 
	tEVP_CIPHER_INFO
;

402 
	sevp_cùhî_˘x_°


404 c⁄° 
EVP_CIPHER
 *
cùhî
;

405 
ENGINE
 *
ígöe
;

406 
í¸y±
;

407 
buf_Àn
;

409 
oiv
[
EVP_MAX_IV_LENGTH
];

410 
iv
[
EVP_MAX_IV_LENGTH
];

411 
buf
[
EVP_MAX_BLOCK_LENGTH
];

412 
num
;

414 *
≠p_d©a
;

415 
key_Àn
;

416 
Êags
;

417 *
cùhî_d©a
;

418 
föÆ_u£d
;

419 
block_mask
;

420 
föÆ
[
EVP_MAX_BLOCK_LENGTH
];

423 
	sevp_Encode_Ctx_°


425 
num
;

426 
Àngth
;

431 
íc_d©a
[80];

432 
löe_num
;

433 
ex≥˘_∆
;

434 } 
	tEVP_ENCODE_CTX
;

437 (
EVP_PBE_KEYGEN
)(
	tEVP_CIPHER_CTX
 *
	t˘x
, c⁄° *
	t∑ss
, 
	t∑s¶í
,

438 
	tASN1_TYPE
 *
	t∑øm
, c⁄° 
	tEVP_CIPHER
 *
	tcùhî
,

439 c⁄° 
	tEVP_MD
 *
	tmd
, 
	tí_de
);

441 #i‚de‡
OPENSSL_NO_RSA


442 
	#EVP_PKEY_assign_RSA
(
pkey
,
rß
Ë
	`EVP_PKEY_assign
(’key),
EVP_PKEY_RSA
,\

443 (*)(
rß
))

	)

446 #i‚de‡
OPENSSL_NO_DSA


447 
	#EVP_PKEY_assign_DSA
(
pkey
,
dß
Ë
	`EVP_PKEY_assign
(’key),
EVP_PKEY_DSA
,\

448 (*)(
dß
))

	)

451 #i‚de‡
OPENSSL_NO_DH


452 
	#EVP_PKEY_assign_DH
(
pkey
,
dh
Ë
	`EVP_PKEY_assign
(’key),
EVP_PKEY_DH
,\

453 (*)(
dh
))

	)

456 #i‚de‡
OPENSSL_NO_EC


457 
	#EVP_PKEY_assign_EC_KEY
(
pkey
,
eckey
Ë
	`EVP_PKEY_assign
(’key),
EVP_PKEY_EC
,\

458 (*)(
eckey
))

	)

462 
	#EVP_gë_dige°bynid
(
a
Ë
	`EVP_gë_dige°by«me
(
	`OBJ_nid2¢
◊))

	)

463 
	#EVP_gë_dige°byobj
(
a
Ë
	`EVP_gë_dige°bynid
(
	`OBJ_obj2nid
◊))

	)

464 
	#EVP_gë_cùhîbynid
(
a
Ë
	`EVP_gë_cùhîby«me
(
	`OBJ_nid2¢
◊))

	)

465 
	#EVP_gë_cùhîbyobj
(
a
Ë
	`EVP_gë_cùhîbynid
(
	`OBJ_obj2nid
◊))

	)

468 
	#M_EVP_MD_size
(
e
Ë(”)->
md_size
)

	)

469 
	#M_EVP_MD_block_size
(
e
Ë(”)->
block_size
)

	)

470 
	#M_EVP_MD_CTX_£t_Êags
(
˘x
,
Êgs
Ë((˘x)->
Êags
|=(Êgs))

	)

471 
	#M_EVP_MD_CTX_˛ór_Êags
(
˘x
,
Êgs
Ë((˘x)->
Êags
&=~(Êgs))

	)

472 
	#M_EVP_MD_CTX_ã°_Êags
(
˘x
,
Êgs
Ë((˘x)->
Êags
&(Êgs))

	)

473 
	#M_EVP_MD_ty≥
(
e
Ë(”)->
ty≥
)

	)

474 
	#M_EVP_MD_CTX_ty≥
(
e
Ë
	`M_EVP_MD_ty≥
(
	`M_EVP_MD_CTX_md
”))

	)

475 
	#M_EVP_MD_CTX_md
(
e
Ë(”)->
dige°
)

	)

477 
	#M_EVP_CIPHER_CTX_£t_Êags
(
˘x
,
Êgs
Ë((˘x)->
Êags
|=(Êgs))

	)

479 
EVP_MD_ty≥
(c⁄° 
EVP_MD
 *
md
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

480 
	#EVP_MD_nid
(
e
Ë
	`EVP_MD_ty≥
”)

	)

481 
	#EVP_MD_«me
(
e
Ë
	`OBJ_nid2¢
(
	`EVP_MD_nid
”))

	)

482 
EVP_MD_pkey_ty≥
(c⁄° 
EVP_MD
 *
md
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

483 
EVP_MD_size
(c⁄° 
EVP_MD
 *
md
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

484 
EVP_MD_block_size
(c⁄° 
EVP_MD
 *
md
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

486 c⁄° 
EVP_MD
 * 
EVP_MD_CTX_md
(c⁄° 
EVP_MD_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

487 
	#EVP_MD_CTX_size
(
e
Ë
	`EVP_MD_size
(
	`EVP_MD_CTX_md
”))

	)

488 
	#EVP_MD_CTX_block_size
(
e
Ë
	`EVP_MD_block_size
(
	`EVP_MD_CTX_md
”))

	)

489 
	#EVP_MD_CTX_ty≥
(
e
Ë
	`EVP_MD_ty≥
(
	`EVP_MD_CTX_md
”))

	)

491 
EVP_CIPHER_nid
(c⁄° 
EVP_CIPHER
 *
cùhî
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

492 
	#EVP_CIPHER_«me
(
e
Ë
	`OBJ_nid2¢
(
	`EVP_CIPHER_nid
”))

	)

493 
EVP_CIPHER_block_size
(c⁄° 
EVP_CIPHER
 *
cùhî
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

494 
EVP_CIPHER_key_Àngth
(c⁄° 
EVP_CIPHER
 *
cùhî
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

495 
EVP_CIPHER_iv_Àngth
(c⁄° 
EVP_CIPHER
 *
cùhî
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

496 
EVP_CIPHER_Êags
(c⁄° 
EVP_CIPHER
 *
cùhî
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

497 
	#EVP_CIPHER_mode
(
e
Ë(
	`EVP_CIPHER_Êags
”Ë& 
EVP_CIPH_MODE
)

	)

499 c⁄° 
EVP_CIPHER
 * 
EVP_CIPHER_CTX_cùhî
(c⁄° 
EVP_CIPHER_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

500 
EVP_CIPHER_CTX_nid
(c⁄° 
EVP_CIPHER_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

501 
EVP_CIPHER_CTX_block_size
(c⁄° 
EVP_CIPHER_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

502 
EVP_CIPHER_CTX_key_Àngth
(c⁄° 
EVP_CIPHER_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

503 
EVP_CIPHER_CTX_iv_Àngth
(c⁄° 
EVP_CIPHER_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

504 * 
EVP_CIPHER_CTX_gë_≠p_d©a
(c⁄° 
EVP_CIPHER_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

505 
EVP_CIPHER_CTX_£t_≠p_d©a
(
EVP_CIPHER_CTX
 *
˘x
, *
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

506 
	#EVP_CIPHER_CTX_ty≥
(
c
Ë
	`EVP_CIPHER_ty≥
(
	`EVP_CIPHER_CTX_cùhî
(c))

	)

507 
EVP_CIPHER_CTX_Êags
(c⁄° 
EVP_CIPHER_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

508 
	#EVP_CIPHER_CTX_mode
(
e
Ë(
	`EVP_CIPHER_CTX_Êags
”Ë& 
EVP_CIPH_MODE
)

	)

510 
	#EVP_ENCODE_LENGTH
(
l
Ë((÷+2)/3*4)+÷/48+1)*2+80)

	)

511 
	#EVP_DECODE_LENGTH
(
l
Ë(÷+3)/4*3+80)

	)

513 
	#EVP_SignInô_ex
(
a
,
b
,
c
Ë
	`EVP_Dige°Inô_ex
◊,b,c)

	)

514 
	#EVP_SignInô
(
a
,
b
Ë
	`EVP_Dige°Inô
◊,b)

	)

515 
	#EVP_SignUpd©e
(
a
,
b
,
c
Ë
	`EVP_Dige°Upd©e
◊,b,c)

	)

516 
	#EVP_VîifyInô_ex
(
a
,
b
,
c
Ë
	`EVP_Dige°Inô_ex
◊,b,c)

	)

517 
	#EVP_VîifyInô
(
a
,
b
Ë
	`EVP_Dige°Inô
◊,b)

	)

518 
	#EVP_VîifyUpd©e
(
a
,
b
,
c
Ë
	`EVP_Dige°Upd©e
◊,b,c)

	)

519 
	#EVP_O≥nUpd©e
(
a
,
b
,
c
,
d
,
e
Ë
	`EVP_De¸y±Upd©e
◊,b,c,d,e)

	)

520 
	#EVP_SólUpd©e
(
a
,
b
,
c
,
d
,
e
Ë
	`EVP_En¸y±Upd©e
◊,b,c,d,e)

	)

522 #ifde‡
CONST_STRICT


523 
BIO_£t_md
(
BIO
 *,c⁄° 
EVP_MD
 *
md
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

525 
	#BIO_£t_md
(
b
,
md
Ë
	`BIO_˘æ
(b,
BIO_C_SET_MD
,0,(*)md)

	)

527 
	#BIO_gë_md
(
b
,
mdp
Ë
	`BIO_˘æ
(b,
BIO_C_GET_MD
,0,(*)mdp)

	)

528 
	#BIO_gë_md_˘x
(
b
,
md˝
Ë
	`BIO_˘æ
(b,
BIO_C_GET_MD_CTX
,0,(*)md˝)

	)

529 
	#BIO_£t_md_˘x
(
b
,
md˝
Ë
	`BIO_˘æ
(b,
BIO_C_SET_MD_CTX
,0,(*)md˝)

	)

530 
	#BIO_gë_cùhî_°©us
(
b
Ë
	`BIO_˘æ
(b,
BIO_C_GET_CIPHER_STATUS
,0,
NULL
)

	)

531 
	#BIO_gë_cùhî_˘x
(
b
,
c_µ
Ë
	`BIO_˘æ
(b,
BIO_C_GET_CIPHER_CTX
,0,(*)c_µ)

	)

533 
EVP_Cùhî
(
EVP_CIPHER_CTX
 *
c
,

534 *
out
,

535 c⁄° *
ö
,

536 
öl
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

538 
	#EVP_add_cùhî_Æüs
(
n
,
Æüs
) \

539 
	`OBJ_NAME_add
((
Æüs
),
OBJ_NAME_TYPE_CIPHER_METH
|
OBJ_NAME_ALIAS
,(
n
))

	)

540 
	#EVP_add_dige°_Æüs
(
n
,
Æüs
) \

541 
	`OBJ_NAME_add
((
Æüs
),
OBJ_NAME_TYPE_MD_METH
|
OBJ_NAME_ALIAS
,(
n
))

	)

542 
	#EVP_dñëe_cùhî_Æüs
(
Æüs
) \

543 
	`OBJ_NAME_ªmove
(
Æüs
,
OBJ_NAME_TYPE_CIPHER_METH
|
OBJ_NAME_ALIAS
);

	)

544 
	#EVP_dñëe_dige°_Æüs
(
Æüs
) \

545 
	`OBJ_NAME_ªmove
(
Æüs
,
OBJ_NAME_TYPE_MD_METH
|
OBJ_NAME_ALIAS
);

	)

547 
EVP_MD_CTX_öô
(
EVP_MD_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

548 
EVP_MD_CTX_˛ónup
(
EVP_MD_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

549 
EVP_MD_CTX
 *
EVP_MD_CTX_¸óã
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

550 
EVP_MD_CTX_de°roy
(
EVP_MD_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

551 
EVP_MD_CTX_c›y_ex
(
EVP_MD_CTX
 *
out
,c⁄° EVP_MD_CTX *
ö
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

552 
EVP_MD_CTX_£t_Êags
(
EVP_MD_CTX
 *
˘x
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

553 
EVP_MD_CTX_˛ór_Êags
(
EVP_MD_CTX
 *
˘x
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

554 
EVP_MD_CTX_ã°_Êags
(c⁄° 
EVP_MD_CTX
 *
˘x
,
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

555 
EVP_Dige°Inô_ex
(
EVP_MD_CTX
 *
˘x
, c⁄° 
EVP_MD
 *
ty≥
, 
ENGINE
 *
im∂
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

556 
EVP_Dige°Upd©e
(
EVP_MD_CTX
 *
˘x
,c⁄° *
d
,

557 
size_t
 
˙t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

558 
EVP_Dige°FöÆ_ex
(
EVP_MD_CTX
 *
˘x
,*
md
,*
s
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

559 
EVP_Dige°
(c⁄° *
d©a
, 
size_t
 
cou¡
,

560 *
md
, *
size
, c⁄° 
EVP_MD
 *
ty≥
, 
ENGINE
 *
im∂
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

562 
EVP_MD_CTX_c›y
(
EVP_MD_CTX
 *
out
,c⁄° EVP_MD_CTX *
ö
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

563 
EVP_Dige°Inô
(
EVP_MD_CTX
 *
˘x
, c⁄° 
EVP_MD
 *
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

564 
EVP_Dige°FöÆ
(
EVP_MD_CTX
 *
˘x
,*
md
,*
s
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

566 
EVP_ªad_pw_°rög
(*
buf
,
Àngth
,c⁄° *
¥om±
,
vîify
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

567 
EVP_£t_pw_¥om±
(c⁄° *
¥om±
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

568 * 
EVP_gë_pw_¥om±
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

570 
EVP_ByãsToKey
(c⁄° 
EVP_CIPHER
 *
ty≥
,c⁄° 
EVP_MD
 *
md
,

571 c⁄° *
ß…
, c⁄° *
d©a
,

572 
d©Æ
, 
cou¡
, *
key
,*
iv
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

574 
EVP_CIPHER_CTX_£t_Êags
(
EVP_CIPHER_CTX
 *
˘x
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

575 
EVP_CIPHER_CTX_˛ór_Êags
(
EVP_CIPHER_CTX
 *
˘x
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

576 
EVP_CIPHER_CTX_ã°_Êags
(c⁄° 
EVP_CIPHER_CTX
 *
˘x
,
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

578 
EVP_En¸y±Inô
(
EVP_CIPHER_CTX
 *
˘x
,c⁄° 
EVP_CIPHER
 *
cùhî
,

579 c⁄° *
key
, c⁄° *
iv
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

580 
EVP_En¸y±Inô_ex
(
EVP_CIPHER_CTX
 *
˘x
,c⁄° 
EVP_CIPHER
 *
cùhî
, 
ENGINE
 *
im∂
,

581 c⁄° *
key
, c⁄° *
iv
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

582 
EVP_En¸y±Upd©e
(
EVP_CIPHER_CTX
 *
˘x
, *
out
,

583 *
oué
, c⁄° *
ö
, 
öl
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

584 
EVP_En¸y±FöÆ_ex
(
EVP_CIPHER_CTX
 *
˘x
, *
out
, *
oué
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

585 
EVP_En¸y±FöÆ
(
EVP_CIPHER_CTX
 *
˘x
, *
out
, *
oué
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

587 
EVP_De¸y±Inô
(
EVP_CIPHER_CTX
 *
˘x
,c⁄° 
EVP_CIPHER
 *
cùhî
,

588 c⁄° *
key
, c⁄° *
iv
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

589 
EVP_De¸y±Inô_ex
(
EVP_CIPHER_CTX
 *
˘x
,c⁄° 
EVP_CIPHER
 *
cùhî
, 
ENGINE
 *
im∂
,

590 c⁄° *
key
, c⁄° *
iv
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

591 
EVP_De¸y±Upd©e
(
EVP_CIPHER_CTX
 *
˘x
, *
out
,

592 *
oué
, c⁄° *
ö
, 
öl
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

593 
EVP_De¸y±FöÆ
(
EVP_CIPHER_CTX
 *
˘x
, *
outm
, *
oué
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

594 
EVP_De¸y±FöÆ_ex
(
EVP_CIPHER_CTX
 *
˘x
, *
outm
, *
oué
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

596 
EVP_CùhîInô
(
EVP_CIPHER_CTX
 *
˘x
,c⁄° 
EVP_CIPHER
 *
cùhî
,

597 c⁄° *
key
,c⁄° *
iv
,

598 
íc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

599 
EVP_CùhîInô_ex
(
EVP_CIPHER_CTX
 *
˘x
,c⁄° 
EVP_CIPHER
 *
cùhî
, 
ENGINE
 *
im∂
,

600 c⁄° *
key
,c⁄° *
iv
,

601 
íc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

602 
EVP_CùhîUpd©e
(
EVP_CIPHER_CTX
 *
˘x
, *
out
,

603 *
oué
, c⁄° *
ö
, 
öl
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

604 
EVP_CùhîFöÆ
(
EVP_CIPHER_CTX
 *
˘x
, *
outm
, *
oué
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

605 
EVP_CùhîFöÆ_ex
(
EVP_CIPHER_CTX
 *
˘x
, *
outm
, *
oué
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

607 
EVP_SignFöÆ
(
EVP_MD_CTX
 *
˘x
,*
md
,*
s
,

608 
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

610 
EVP_VîifyFöÆ
(
EVP_MD_CTX
 *
˘x
,c⁄° *
sigbuf
,

611 
sigÀn
,
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

613 
EVP_O≥nInô
(
EVP_CIPHER_CTX
 *
˘x
,c⁄° 
EVP_CIPHER
 *
ty≥
,

614 c⁄° *
ek
, 
ekl
, c⁄° *
iv
,

615 
EVP_PKEY
 *
¥iv
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

616 
EVP_O≥nFöÆ
(
EVP_CIPHER_CTX
 *
˘x
, *
out
, *
oué
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

618 
EVP_SólInô
(
EVP_CIPHER_CTX
 *
˘x
, c⁄° 
EVP_CIPHER
 *
ty≥
,

619 **
ek
, *
ekl
, *
iv
,

620 
EVP_PKEY
 **
pubk
, 
≈ubk
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

621 
EVP_SólFöÆ
(
EVP_CIPHER_CTX
 *
˘x
,*
out
,*
oué
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

623 
EVP_EncodeInô
(
EVP_ENCODE_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

624 
EVP_EncodeUpd©e
(
EVP_ENCODE_CTX
 *
˘x
,*
out
,*
oué
,

625 c⁄° *
ö
,
öl
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

626 
EVP_EncodeFöÆ
(
EVP_ENCODE_CTX
 *
˘x
,*
out
,*
oué
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

627 
EVP_EncodeBlock
(*
t
, c⁄° *
f
, 
n
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

629 
EVP_DecodeInô
(
EVP_ENCODE_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

630 
EVP_DecodeUpd©e
(
EVP_ENCODE_CTX
 *
˘x
,*
out
,*
oué
,

631 c⁄° *
ö
, 
öl
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

632 
EVP_DecodeFöÆ
(
EVP_ENCODE_CTX
 *
˘x
, 

633 *
out
, *
oué
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

634 
EVP_DecodeBlock
(*
t
, c⁄° *
f
, 
n
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

636 
EVP_CIPHER_CTX_öô
(
EVP_CIPHER_CTX
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

637 
EVP_CIPHER_CTX_˛ónup
(
EVP_CIPHER_CTX
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

638 
EVP_CIPHER_CTX
 *
EVP_CIPHER_CTX_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

639 
EVP_CIPHER_CTX_‰ì
(
EVP_CIPHER_CTX
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

640 
EVP_CIPHER_CTX_£t_key_Àngth
(
EVP_CIPHER_CTX
 *
x
, 
keyÀn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

641 
EVP_CIPHER_CTX_£t_∑ddög
(
EVP_CIPHER_CTX
 *
c
, 
∑d
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

642 
EVP_CIPHER_CTX_˘æ
(
EVP_CIPHER_CTX
 *
˘x
, 
ty≥
, 
¨g
, *
±r
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

643 
EVP_CIPHER_CTX_ønd_key
(
EVP_CIPHER_CTX
 *
˘x
, *
key
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

645 #i‚de‡
OPENSSL_NO_BIO


646 
BIO_METHOD
 *
BIO_f_md
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

647 
BIO_METHOD
 *
BIO_f_ba£64
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

648 
BIO_METHOD
 *
BIO_f_cùhî
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

649 
BIO_METHOD
 *
BIO_f_ªlübÀ
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

650 
BIO_£t_cùhî
(
BIO
 *
b
,c⁄° 
EVP_CIPHER
 *
c
,c⁄° *
k
,

651 c⁄° *
i
, 
íc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

654 c⁄° 
EVP_MD
 *
EVP_md_nuŒ
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

655 #i‚de‡
OPENSSL_NO_MD2


656 c⁄° 
EVP_MD
 *
EVP_md2
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

658 #i‚de‡
OPENSSL_NO_MD4


659 c⁄° 
EVP_MD
 *
EVP_md4
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

661 #i‚de‡
OPENSSL_NO_MD5


662 c⁄° 
EVP_MD
 *
EVP_md5
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

664 #i‚de‡
OPENSSL_NO_SHA


665 c⁄° 
EVP_MD
 *
EVP_sha
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

666 c⁄° 
EVP_MD
 *
EVP_sha1
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

667 c⁄° 
EVP_MD
 *
EVP_dss
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

668 c⁄° 
EVP_MD
 *
EVP_dss1
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

669 c⁄° 
EVP_MD
 *
EVP_ecdß
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

671 #i‚de‡
OPENSSL_NO_SHA256


672 c⁄° 
EVP_MD
 *
EVP_sha224
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

673 c⁄° 
EVP_MD
 *
EVP_sha256
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

675 #i‚de‡
OPENSSL_NO_SHA512


676 c⁄° 
EVP_MD
 *
EVP_sha384
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

677 c⁄° 
EVP_MD
 *
EVP_sha512
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

679 #i‚de‡
OPENSSL_NO_MDC2


680 c⁄° 
EVP_MD
 *
EVP_mdc2
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

682 #i‚de‡
OPENSSL_NO_RIPEMD


683 c⁄° 
EVP_MD
 *
EVP_rùemd160
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

685 c⁄° 
EVP_CIPHER
 *
EVP_íc_nuŒ
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

686 #i‚de‡
OPENSSL_NO_DES


687 c⁄° 
EVP_CIPHER
 *
EVP_des_ecb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

688 c⁄° 
EVP_CIPHER
 *
EVP_des_ede
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

689 c⁄° 
EVP_CIPHER
 *
EVP_des_ede3
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

690 c⁄° 
EVP_CIPHER
 *
EVP_des_ede_ecb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

691 c⁄° 
EVP_CIPHER
 *
EVP_des_ede3_ecb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

692 c⁄° 
EVP_CIPHER
 *
EVP_des_cfb64
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

693 
	#EVP_des_cfb
 
EVP_des_cfb64


	)

694 c⁄° 
EVP_CIPHER
 *
EVP_des_cfb1
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

695 c⁄° 
EVP_CIPHER
 *
EVP_des_cfb8
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

696 c⁄° 
EVP_CIPHER
 *
EVP_des_ede_cfb64
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

697 
	#EVP_des_ede_cfb
 
EVP_des_ede_cfb64


	)

699 c⁄° 
EVP_CIPHER
 *
EVP_des_ede_cfb1
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

700 c⁄° 
EVP_CIPHER
 *
EVP_des_ede_cfb8
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

702 c⁄° 
EVP_CIPHER
 *
EVP_des_ede3_cfb64
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

703 
	#EVP_des_ede3_cfb
 
EVP_des_ede3_cfb64


	)

704 c⁄° 
EVP_CIPHER
 *
EVP_des_ede3_cfb1
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

705 c⁄° 
EVP_CIPHER
 *
EVP_des_ede3_cfb8
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

706 c⁄° 
EVP_CIPHER
 *
EVP_des_ofb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

707 c⁄° 
EVP_CIPHER
 *
EVP_des_ede_ofb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

708 c⁄° 
EVP_CIPHER
 *
EVP_des_ede3_ofb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

709 c⁄° 
EVP_CIPHER
 *
EVP_des_cbc
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

710 c⁄° 
EVP_CIPHER
 *
EVP_des_ede_cbc
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

711 c⁄° 
EVP_CIPHER
 *
EVP_des_ede3_cbc
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

712 c⁄° 
EVP_CIPHER
 *
EVP_desx_cbc
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

716 #ifde‡
OPENSSL_OPENBSD_DEV_CRYPTO


717 c⁄° 
EVP_CIPHER
 *
EVP_dev_¸y±o_des_ede3_cbc
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

718 c⁄° 
EVP_CIPHER
 *
EVP_dev_¸y±o_rc4
();

719 c⁄° 
EVP_MD
 *
EVP_dev_¸y±o_md5
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

723 #i‚de‡
OPENSSL_NO_RC4


724 c⁄° 
EVP_CIPHER
 *
EVP_rc4
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

725 c⁄° 
EVP_CIPHER
 *
EVP_rc4_40
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

727 #i‚de‡
OPENSSL_NO_IDEA


728 c⁄° 
EVP_CIPHER
 *
EVP_idó_ecb
();

729 c⁄° 
EVP_CIPHER
 *
EVP_idó_cfb64
();

730 
	#EVP_idó_cfb
 
EVP_idó_cfb64


	)

731 c⁄° 
EVP_CIPHER
 *
EVP_idó_ofb
();

732 c⁄° 
EVP_CIPHER
 *
EVP_idó_cbc
();

734 #i‚de‡
OPENSSL_NO_RC2


735 c⁄° 
EVP_CIPHER
 *
EVP_rc2_ecb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

736 c⁄° 
EVP_CIPHER
 *
EVP_rc2_cbc
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

737 c⁄° 
EVP_CIPHER
 *
EVP_rc2_40_cbc
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

738 c⁄° 
EVP_CIPHER
 *
EVP_rc2_64_cbc
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

739 c⁄° 
EVP_CIPHER
 *
EVP_rc2_cfb64
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

740 
	#EVP_rc2_cfb
 
EVP_rc2_cfb64


	)

741 c⁄° 
EVP_CIPHER
 *
EVP_rc2_ofb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

743 #i‚de‡
OPENSSL_NO_BF


744 c⁄° 
EVP_CIPHER
 *
EVP_bf_ecb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

745 c⁄° 
EVP_CIPHER
 *
EVP_bf_cbc
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

746 c⁄° 
EVP_CIPHER
 *
EVP_bf_cfb64
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

747 
	#EVP_bf_cfb
 
EVP_bf_cfb64


	)

748 c⁄° 
EVP_CIPHER
 *
EVP_bf_ofb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

750 #i‚de‡
OPENSSL_NO_CAST


751 c⁄° 
EVP_CIPHER
 *
EVP_ˇ°5_ecb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

752 c⁄° 
EVP_CIPHER
 *
EVP_ˇ°5_cbc
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

753 c⁄° 
EVP_CIPHER
 *
EVP_ˇ°5_cfb64
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

754 
	#EVP_ˇ°5_cfb
 
EVP_ˇ°5_cfb64


	)

755 c⁄° 
EVP_CIPHER
 *
EVP_ˇ°5_ofb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

757 #i‚de‡
OPENSSL_NO_RC5


758 c⁄° 
EVP_CIPHER
 *
EVP_rc5_32_12_16_cbc
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

759 c⁄° 
EVP_CIPHER
 *
EVP_rc5_32_12_16_ecb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

760 c⁄° 
EVP_CIPHER
 *
EVP_rc5_32_12_16_cfb64
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

761 
	#EVP_rc5_32_12_16_cfb
 
EVP_rc5_32_12_16_cfb64


	)

762 c⁄° 
EVP_CIPHER
 *
EVP_rc5_32_12_16_ofb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

764 #i‚de‡
OPENSSL_NO_AES


765 c⁄° 
EVP_CIPHER
 *
EVP_´s_128_ecb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

766 c⁄° 
EVP_CIPHER
 *
EVP_´s_128_cbc
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

767 c⁄° 
EVP_CIPHER
 *
EVP_´s_128_cfb1
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

768 c⁄° 
EVP_CIPHER
 *
EVP_´s_128_cfb8
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

769 c⁄° 
EVP_CIPHER
 *
EVP_´s_128_cfb128
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

770 
	#EVP_´s_128_cfb
 
EVP_´s_128_cfb128


	)

771 c⁄° 
EVP_CIPHER
 *
EVP_´s_128_ofb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

773 c⁄° 
EVP_CIPHER
 *
EVP_´s_128_˘r
();

775 c⁄° 
EVP_CIPHER
 *
EVP_´s_192_ecb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

776 c⁄° 
EVP_CIPHER
 *
EVP_´s_192_cbc
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

777 c⁄° 
EVP_CIPHER
 *
EVP_´s_192_cfb1
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

778 c⁄° 
EVP_CIPHER
 *
EVP_´s_192_cfb8
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

779 c⁄° 
EVP_CIPHER
 *
EVP_´s_192_cfb128
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

780 
	#EVP_´s_192_cfb
 
EVP_´s_192_cfb128


	)

781 c⁄° 
EVP_CIPHER
 *
EVP_´s_192_ofb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

783 c⁄° 
EVP_CIPHER
 *
EVP_´s_192_˘r
();

785 c⁄° 
EVP_CIPHER
 *
EVP_´s_256_ecb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

786 c⁄° 
EVP_CIPHER
 *
EVP_´s_256_cbc
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

787 c⁄° 
EVP_CIPHER
 *
EVP_´s_256_cfb1
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

788 c⁄° 
EVP_CIPHER
 *
EVP_´s_256_cfb8
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

789 c⁄° 
EVP_CIPHER
 *
EVP_´s_256_cfb128
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

790 
	#EVP_´s_256_cfb
 
EVP_´s_256_cfb128


	)

791 c⁄° 
EVP_CIPHER
 *
EVP_´s_256_ofb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

793 c⁄° 
EVP_CIPHER
 *
EVP_´s_256_˘r
();

796 #i‚de‡
OPENSSL_NO_CAMELLIA


797 c⁄° 
EVP_CIPHER
 *
EVP_ˇmñlü_128_ecb
();

798 c⁄° 
EVP_CIPHER
 *
EVP_ˇmñlü_128_cbc
();

799 c⁄° 
EVP_CIPHER
 *
EVP_ˇmñlü_128_cfb1
();

800 c⁄° 
EVP_CIPHER
 *
EVP_ˇmñlü_128_cfb8
();

801 c⁄° 
EVP_CIPHER
 *
EVP_ˇmñlü_128_cfb128
();

802 
	#EVP_ˇmñlü_128_cfb
 
EVP_ˇmñlü_128_cfb128


	)

803 c⁄° 
EVP_CIPHER
 *
EVP_ˇmñlü_128_ofb
();

804 c⁄° 
EVP_CIPHER
 *
EVP_ˇmñlü_192_ecb
();

805 c⁄° 
EVP_CIPHER
 *
EVP_ˇmñlü_192_cbc
();

806 c⁄° 
EVP_CIPHER
 *
EVP_ˇmñlü_192_cfb1
();

807 c⁄° 
EVP_CIPHER
 *
EVP_ˇmñlü_192_cfb8
();

808 c⁄° 
EVP_CIPHER
 *
EVP_ˇmñlü_192_cfb128
();

809 
	#EVP_ˇmñlü_192_cfb
 
EVP_ˇmñlü_192_cfb128


	)

810 c⁄° 
EVP_CIPHER
 *
EVP_ˇmñlü_192_ofb
();

811 c⁄° 
EVP_CIPHER
 *
EVP_ˇmñlü_256_ecb
();

812 c⁄° 
EVP_CIPHER
 *
EVP_ˇmñlü_256_cbc
();

813 c⁄° 
EVP_CIPHER
 *
EVP_ˇmñlü_256_cfb1
();

814 c⁄° 
EVP_CIPHER
 *
EVP_ˇmñlü_256_cfb8
();

815 c⁄° 
EVP_CIPHER
 *
EVP_ˇmñlü_256_cfb128
();

816 
	#EVP_ˇmñlü_256_cfb
 
EVP_ˇmñlü_256_cfb128


	)

817 c⁄° 
EVP_CIPHER
 *
EVP_ˇmñlü_256_ofb
();

820 #i‚de‡
OPENSSL_NO_SEED


821 c⁄° 
EVP_CIPHER
 *
EVP_£ed_ecb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

822 c⁄° 
EVP_CIPHER
 *
EVP_£ed_cbc
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

823 c⁄° 
EVP_CIPHER
 *
EVP_£ed_cfb128
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

824 
	#EVP_£ed_cfb
 
EVP_£ed_cfb128


	)

825 c⁄° 
EVP_CIPHER
 *
EVP_£ed_ofb
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

828 
OPENSSL_add_Æl_Æg‹ôhms_noc⁄f
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

829 
OPENSSL_add_Æl_Æg‹ôhms_c⁄f
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

831 #ifde‡
OPENSSL_LOAD_CONF


832 
	#O≥nSSL_add_Æl_Æg‹ôhms
() \

833 
	`OPENSSL_add_Æl_Æg‹ôhms_c⁄f
()

	)

835 
	#O≥nSSL_add_Æl_Æg‹ôhms
() \

836 
	`OPENSSL_add_Æl_Æg‹ôhms_noc⁄f
()

	)

839 
O≥nSSL_add_Æl_cùhîs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

840 
O≥nSSL_add_Æl_dige°s
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

841 
	#SSLóy_add_Æl_Æg‹ôhms
(Ë
	`O≥nSSL_add_Æl_Æg‹ôhms
()

	)

842 
	#SSLóy_add_Æl_cùhîs
(Ë
	`O≥nSSL_add_Æl_cùhîs
()

	)

843 
	#SSLóy_add_Æl_dige°s
(Ë
	`O≥nSSL_add_Æl_dige°s
()

	)

845 
EVP_add_cùhî
(c⁄° 
EVP_CIPHER
 *
cùhî
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

846 
EVP_add_dige°
(c⁄° 
EVP_MD
 *
dige°
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

848 c⁄° 
EVP_CIPHER
 *
EVP_gë_cùhîby«me
(c⁄° *
«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

849 c⁄° 
EVP_MD
 *
EVP_gë_dige°by«me
(c⁄° *
«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

850 
EVP_˛ónup
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

852 
EVP_PKEY_de¸y±
(*
dec_key
,

853 c⁄° *
íc_key
,
íc_key_Àn
,

854 
EVP_PKEY
 *
¥iv©e_key
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

855 
EVP_PKEY_í¸y±
(*
íc_key
,

856 c⁄° *
key
,
key_Àn
,

857 
EVP_PKEY
 *
pub_key
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

858 
EVP_PKEY_ty≥
(
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

859 
EVP_PKEY_bôs
(
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

860 
EVP_PKEY_size
(
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

861 
EVP_PKEY_assign
(
EVP_PKEY
 *
pkey
,
ty≥
,*
key
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

863 #i‚de‡
OPENSSL_NO_RSA


864 
rß_°
;

865 
EVP_PKEY_£t1_RSA
(
EVP_PKEY
 *
pkey
,
rß_°
 *
key
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

866 
rß_°
 *
EVP_PKEY_gë1_RSA
(
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

868 #i‚de‡
OPENSSL_NO_DSA


869 
dß_°
;

870 
EVP_PKEY_£t1_DSA
(
EVP_PKEY
 *
pkey
,
dß_°
 *
key
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

871 
dß_°
 *
EVP_PKEY_gë1_DSA
(
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

873 #i‚de‡
OPENSSL_NO_DH


874 
dh_°
;

875 
EVP_PKEY_£t1_DH
(
EVP_PKEY
 *
pkey
,
dh_°
 *
key
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

876 
dh_°
 *
EVP_PKEY_gë1_DH
(
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

878 #i‚de‡
OPENSSL_NO_EC


879 
ec_key_°
;

880 
EVP_PKEY_£t1_EC_KEY
(
EVP_PKEY
 *
pkey
,
ec_key_°
 *
key
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

881 
ec_key_°
 *
EVP_PKEY_gë1_EC_KEY
(
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

884 
EVP_PKEY
 * 
EVP_PKEY_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

885 
EVP_PKEY_‰ì
(
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

887 
EVP_PKEY
 * 
d2i_PublicKey
(
ty≥
,EVP_PKEY **
a
, c⁄° **
µ
,

888 
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

889 
i2d_PublicKey
(
EVP_PKEY
 *
a
, **
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

891 
EVP_PKEY
 * 
d2i_Priv©eKey
(
ty≥
,EVP_PKEY **
a
, c⁄° **
µ
,

892 
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

893 
EVP_PKEY
 * 
d2i_AutoPriv©eKey
(EVP_PKEY **
a
, c⁄° **
µ
,

894 
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

895 
i2d_Priv©eKey
(
EVP_PKEY
 *
a
, **
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

897 
EVP_PKEY_c›y_∑ømëîs
(
EVP_PKEY
 *
to
, c⁄° EVP_PKEY *
‰om
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

898 
EVP_PKEY_missög_∑ømëîs
(c⁄° 
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

899 
EVP_PKEY_ßve_∑ømëîs
(
EVP_PKEY
 *
pkey
,
mode
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

900 
EVP_PKEY_cmp_∑ømëîs
(c⁄° 
EVP_PKEY
 *
a
, c⁄° EVP_PKEY *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

902 
EVP_PKEY_cmp
(c⁄° 
EVP_PKEY
 *
a
, c⁄° EVP_PKEY *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

904 
EVP_CIPHER_ty≥
(c⁄° 
EVP_CIPHER
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

907 
EVP_CIPHER_∑øm_to_a¢1
(
EVP_CIPHER_CTX
 *
c
, 
ASN1_TYPE
 *
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

908 
EVP_CIPHER_a¢1_to_∑øm
(
EVP_CIPHER_CTX
 *
c
, 
ASN1_TYPE
 *
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

911 
EVP_CIPHER_£t_a¢1_iv
(
EVP_CIPHER_CTX
 *
c
,
ASN1_TYPE
 *
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

912 
EVP_CIPHER_gë_a¢1_iv
(
EVP_CIPHER_CTX
 *
c
,
ASN1_TYPE
 *
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

915 
PKCS5_PBE_keyivgí
(
EVP_CIPHER_CTX
 *
˘x
, c⁄° *
∑ss
, 
∑s¶í
,

916 
ASN1_TYPE
 *
∑øm
, c⁄° 
EVP_CIPHER
 *
cùhî
, c⁄° 
EVP_MD
 *
md
,

917 
í_de
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

918 
PKCS5_PBKDF2_HMAC_SHA1
(c⁄° *
∑ss
, 
∑s¶í
,

919 c⁄° *
ß…
, 
ß…Àn
, 
ôî
,

920 
keyÀn
, *
out
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

921 
PKCS5_v2_PBE_keyivgí
(
EVP_CIPHER_CTX
 *
˘x
, c⁄° *
∑ss
, 
∑s¶í
,

922 
ASN1_TYPE
 *
∑øm
, c⁄° 
EVP_CIPHER
 *
cùhî
, c⁄° 
EVP_MD
 *
md
,

923 
í_de
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

925 
PKCS5_PBE_add
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

927 
EVP_PBE_CùhîInô
 (
ASN1_OBJECT
 *
pbe_obj
, c⁄° *
∑ss
, 
∑s¶í
,

928 
ASN1_TYPE
 *
∑øm
, 
EVP_CIPHER_CTX
 *
˘x
, 
í_de
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

929 
EVP_PBE_Æg_add
(
nid
, c⁄° 
EVP_CIPHER
 *
cùhî
, c⁄° 
EVP_MD
 *
md
,

930 
EVP_PBE_KEYGEN
 *
keygí
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

931 
EVP_PBE_˛ónup
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

933 #ifde‡
OPENSSL_FIPS


934 #i‚de‡
OPENSSL_NO_ENGINE


935 
öt_EVP_MD_£t_ígöe_ˇŒbacks
(

936 (*
íg_md_öô
)(
ENGINE
 *
im∂
),

937 (*
íg_md_fö
)(
ENGINE
 *
im∂
),

938 (*
íg_md_evp
)

939 (
EVP_MD_CTX
 *
˘x
, c⁄° 
EVP_MD
 **
±y≥
, 
ENGINE
 *
im∂
)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

940 
öt_EVP_MD_öô_ígöe_ˇŒbacks
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

941 
öt_EVP_CIPHER_£t_ígöe_ˇŒbacks
(

942 (*
íg_cùh_fö
)(
ENGINE
 *
im∂
),

943 (*
íg_cùh_evp
)

944 (
EVP_CIPHER_CTX
 *
˘x
, c⁄° 
EVP_CIPHER
 **
pcùh
, 
ENGINE
 *
im∂
)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

945 
öt_EVP_CIPHER_öô_ígöe_ˇŒbacks
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

949 
EVP_add_Æg_moduÀ
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

955 
ERR_lﬂd_EVP_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

960 
	#EVP_F_AES_INIT_KEY
 133

	)

961 
	#EVP_F_ALG_MODULE_INIT
 138

	)

962 
	#EVP_F_CAMELLIA_INIT_KEY
 159

	)

963 
	#EVP_F_D2I_PKEY
 100

	)

964 
	#EVP_F_DO_EVP_ENC_ENGINE
 140

	)

965 
	#EVP_F_DO_EVP_ENC_ENGINE_FULL
 141

	)

966 
	#EVP_F_DO_EVP_MD_ENGINE
 139

	)

967 
	#EVP_F_DO_EVP_MD_ENGINE_FULL
 142

	)

968 
	#EVP_F_DSAPKEY2PKCS8
 134

	)

969 
	#EVP_F_DSA_PKEY2PKCS8
 135

	)

970 
	#EVP_F_ECDSA_PKEY2PKCS8
 129

	)

971 
	#EVP_F_ECKEY_PKEY2PKCS8
 132

	)

972 
	#EVP_F_EVP_CIPHERINIT
 137

	)

973 
	#EVP_F_EVP_CIPHERINIT_EX
 123

	)

974 
	#EVP_F_EVP_CIPHER_CTX_CTRL
 124

	)

975 
	#EVP_F_EVP_CIPHER_CTX_SET_KEY_LENGTH
 122

	)

976 
	#EVP_F_EVP_DECRYPTFINAL_EX
 101

	)

977 
	#EVP_F_EVP_DIGESTINIT
 136

	)

978 
	#EVP_F_EVP_DIGESTINIT_EX
 128

	)

979 
	#EVP_F_EVP_ENCRYPTFINAL_EX
 127

	)

980 
	#EVP_F_EVP_MD_CTX_COPY_EX
 110

	)

981 
	#EVP_F_EVP_OPENINIT
 102

	)

982 
	#EVP_F_EVP_PBE_ALG_ADD
 115

	)

983 
	#EVP_F_EVP_PBE_CIPHERINIT
 116

	)

984 
	#EVP_F_EVP_PKCS82PKEY
 111

	)

985 
	#EVP_F_EVP_PKEY2PKCS8_BROKEN
 113

	)

986 
	#EVP_F_EVP_PKEY_COPY_PARAMETERS
 103

	)

987 
	#EVP_F_EVP_PKEY_DECRYPT
 104

	)

988 
	#EVP_F_EVP_PKEY_ENCRYPT
 105

	)

989 
	#EVP_F_EVP_PKEY_GET1_DH
 119

	)

990 
	#EVP_F_EVP_PKEY_GET1_DSA
 120

	)

991 
	#EVP_F_EVP_PKEY_GET1_ECDSA
 130

	)

992 
	#EVP_F_EVP_PKEY_GET1_EC_KEY
 131

	)

993 
	#EVP_F_EVP_PKEY_GET1_RSA
 121

	)

994 
	#EVP_F_EVP_PKEY_NEW
 106

	)

995 
	#EVP_F_EVP_RIJNDAEL
 126

	)

996 
	#EVP_F_EVP_SIGNFINAL
 107

	)

997 
	#EVP_F_EVP_VERIFYFINAL
 108

	)

998 
	#EVP_F_PKCS5_PBE_KEYIVGEN
 117

	)

999 
	#EVP_F_PKCS5_V2_PBE_KEYIVGEN
 118

	)

1000 
	#EVP_F_PKCS8_SET_BROKEN
 112

	)

1001 
	#EVP_F_RC2_MAGIC_TO_METH
 109

	)

1002 
	#EVP_F_RC5_CTRL
 125

	)

1005 
	#EVP_R_AES_KEY_SETUP_FAILED
 143

	)

1006 
	#EVP_R_ASN1_LIB
 140

	)

1007 
	#EVP_R_BAD_BLOCK_LENGTH
 136

	)

1008 
	#EVP_R_BAD_DECRYPT
 100

	)

1009 
	#EVP_R_BAD_KEY_LENGTH
 137

	)

1010 
	#EVP_R_BN_DECODE_ERROR
 112

	)

1011 
	#EVP_R_BN_PUBKEY_ERROR
 113

	)

1012 
	#EVP_R_CAMELLIA_KEY_SETUP_FAILED
 157

	)

1013 
	#EVP_R_CIPHER_PARAMETER_ERROR
 122

	)

1014 
	#EVP_R_CTRL_NOT_IMPLEMENTED
 132

	)

1015 
	#EVP_R_CTRL_OPERATION_NOT_IMPLEMENTED
 133

	)

1016 
	#EVP_R_DATA_NOT_MULTIPLE_OF_BLOCK_LENGTH
 138

	)

1017 
	#EVP_R_DECODE_ERROR
 114

	)

1018 
	#EVP_R_DIFFERENT_KEY_TYPES
 101

	)

1019 
	#EVP_R_DISABLED_FOR_FIPS
 144

	)

1020 
	#EVP_R_ENCODE_ERROR
 115

	)

1021 
	#EVP_R_ERROR_LOADING_SECTION
 145

	)

1022 
	#EVP_R_ERROR_SETTING_FIPS_MODE
 146

	)

1023 
	#EVP_R_EVP_PBE_CIPHERINIT_ERROR
 119

	)

1024 
	#EVP_R_EXPECTING_AN_RSA_KEY
 127

	)

1025 
	#EVP_R_EXPECTING_A_DH_KEY
 128

	)

1026 
	#EVP_R_EXPECTING_A_DSA_KEY
 129

	)

1027 
	#EVP_R_EXPECTING_A_ECDSA_KEY
 141

	)

1028 
	#EVP_R_EXPECTING_A_EC_KEY
 142

	)

1029 
	#EVP_R_FIPS_MODE_NOT_SUPPORTED
 147

	)

1030 
	#EVP_R_INITIALIZATION_ERROR
 134

	)

1031 
	#EVP_R_INPUT_NOT_INITIALIZED
 111

	)

1032 
	#EVP_R_INVALID_FIPS_MODE
 148

	)

1033 
	#EVP_R_INVALID_KEY_LENGTH
 130

	)

1034 
	#EVP_R_IV_TOO_LARGE
 102

	)

1035 
	#EVP_R_KEYGEN_FAILURE
 120

	)

1036 
	#EVP_R_MISSING_PARAMETERS
 103

	)

1037 
	#EVP_R_NO_CIPHER_SET
 131

	)

1038 
	#EVP_R_NO_DIGEST_SET
 139

	)

1039 
	#EVP_R_NO_DSA_PARAMETERS
 116

	)

1040 
	#EVP_R_NO_SIGN_FUNCTION_CONFIGURED
 104

	)

1041 
	#EVP_R_NO_VERIFY_FUNCTION_CONFIGURED
 105

	)

1042 
	#EVP_R_PKCS8_UNKNOWN_BROKEN_TYPE
 117

	)

1043 
	#EVP_R_PUBLIC_KEY_NOT_RSA
 106

	)

1044 
	#EVP_R_UNKNOWN_OPTION
 149

	)

1045 
	#EVP_R_UNKNOWN_PBE_ALGORITHM
 121

	)

1046 
	#EVP_R_UNSUPORTED_NUMBER_OF_ROUNDS
 135

	)

1047 
	#EVP_R_UNSUPPORTED_CIPHER
 107

	)

1048 
	#EVP_R_UNSUPPORTED_KEYLENGTH
 123

	)

1049 
	#EVP_R_UNSUPPORTED_KEY_DERIVATION_FUNCTION
 124

	)

1050 
	#EVP_R_UNSUPPORTED_KEY_SIZE
 108

	)

1051 
	#EVP_R_UNSUPPORTED_PRF
 125

	)

1052 
	#EVP_R_UNSUPPORTED_PRIVATE_KEY_ALGORITHM
 118

	)

1053 
	#EVP_R_UNSUPPORTED_SALT_TYPE
 126

	)

1054 
	#EVP_R_WRONG_FINAL_BLOCK_LENGTH
 109

	)

1055 
	#EVP_R_WRONG_PUBLIC_KEY_TYPE
 110

	)

1056 
	#EVP_R_SEED_KEY_SETUP_FAILED
 162

	)

1058 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/opensslconf.h

5 #i‚de‡
OPENSSL_SYSNAME_MACOSX


6 
	#OPENSSL_SYSNAME_MACOSX


	)

8 #i‚de‡
OPENSSL_DOING_MAKEDEPEND


11 #i‚de‡
OPENSSL_NO_CAMELLIA


12 
	#OPENSSL_NO_CAMELLIA


	)

14 #i‚de‡
OPENSSL_NO_CAPIENG


15 
	#OPENSSL_NO_CAPIENG


	)

17 #i‚de‡
OPENSSL_NO_CMS


18 
	#OPENSSL_NO_CMS


	)

20 #i‚de‡
OPENSSL_NO_GMP


21 
	#OPENSSL_NO_GMP


	)

23 #i‚de‡
OPENSSL_NO_IDEA


24 
	#OPENSSL_NO_IDEA


	)

26 #i‚de‡
OPENSSL_NO_JPAKE


27 
	#OPENSSL_NO_JPAKE


	)

29 #i‚de‡
OPENSSL_NO_KRB5


30 
	#OPENSSL_NO_KRB5


	)

32 #i‚de‡
OPENSSL_NO_RFC3779


33 
	#OPENSSL_NO_RFC3779


	)

38 #i‚de‡
OPENSSL_THREADS


39 
	#OPENSSL_THREADS


	)

41 #i‚de‡
OPENSSL_NO_HW


42 
	#OPENSSL_NO_HW


	)

44 #i‚de‡
OPENSSL_NO_STATIC_ENGINE


45 
	#OPENSSL_NO_STATIC_ENGINE


	)

52 #ifde‡
OPENSSL_ALGORITHM_DEFINES


53 #i‡
deföed
(
OPENSSL_NO_CAMELLIA
Ë&& !deföed(
NO_CAMELLIA
)

54 
	#NO_CAMELLIA


	)

56 #i‡
deföed
(
OPENSSL_NO_CAPIENG
Ë&& !deföed(
NO_CAPIENG
)

57 
	#NO_CAPIENG


	)

59 #i‡
deföed
(
OPENSSL_NO_CMS
Ë&& !deföed(
NO_CMS
)

60 
	#NO_CMS


	)

62 #i‡
deföed
(
OPENSSL_NO_GMP
Ë&& !deföed(
NO_GMP
)

63 
	#NO_GMP


	)

65 #i‡
deföed
(
OPENSSL_NO_IDEA
Ë&& !deföed(
NO_IDEA
)

66 
	#NO_IDEA


	)

68 #i‡
deföed
(
OPENSSL_NO_JPAKE
Ë&& !deföed(
NO_JPAKE
)

69 
	#NO_JPAKE


	)

71 #i‡
deföed
(
OPENSSL_NO_KRB5
Ë&& !deföed(
NO_KRB5
)

72 
	#NO_KRB5


	)

74 #i‡
deföed
(
OPENSSL_NO_RFC3779
Ë&& !deföed(
NO_RFC3779
)

75 
	#NO_RFC3779


	)

81 #ifde‡
OPENSSL_DOING_MAKEDEPEND


90 #i‚de‡
OPENSSL_FIPS


91 
	#OPENSSL_FIPS


	)

97 #i‡
deföed
(
__i386__
)

98 #unde‡
I386_ONLY


100 #unde‡
I386_ONLY


103 #i‡!(
deföed
(
VMS
Ë|| deföed(
__VMS
))

104 #i‡
deföed
(
HEADER_CRYPTLIB_H
Ë&& !deföed(
OPENSSLDIR
)

105 
	#ENGINESDIR
 "/u§/lib/›ís¶/ígöes"

	)

106 
	#OPENSSLDIR
 "/Sy°em/Libøry/O≥nSSL"

	)

110 #unde‡
OPENSSL_UNISTD


111 
	#OPENSSL_UNISTD
 <
uni°d
.
h
>

	)

113 #unde‡
OPENSSL_EXPORT_VAR_AS_FUNCTION


115 #i‡
deföed
(
HEADER_IDEA_H
Ë&& !deföed(
IDEA_INT
)

116 
	#IDEA_INT
 

	)

119 #i‡
deföed
(
HEADER_MD2_H
Ë&& !deföed(
MD2_INT
)

120 
	#MD2_INT
 

	)

123 #i‡
deföed
(
HEADER_RC2_H
Ë&& !deföed(
RC2_INT
)

125 
	#RC2_INT
 

	)

128 #i‡
deföed
(
HEADER_RC4_H
)

129 #i‡!
deföed
(
RC4_INT
)

137 
	#RC4_INT
 

	)

139 #i‡!
deföed
(
RC4_CHUNK
)

144 
	#RC4_CHUNK
 

	)

148 #i‡(
deföed
(
HEADER_NEW_DES_H
Ë|| deföed(
HEADER_DES_H
)Ë&& !deföed(
DES_LONG
)

151 #i‚de‡
DES_LONG


152 #ifde‡
__LP64__


153 
	#DES_LONG
 

	)

155 
	#DES_LONG
 

	)

160 #i‡
deföed
(
HEADER_BN_H
Ë&& !deföed(
CONFIG_HEADER_BN_H
)

161 
	#CONFIG_HEADER_BN_H


	)

162 #ifde‡
__LP64__


163 #unde‡
BN_LLONG


165 
	#BN_LLONG


	)

174 #unde‡
SIXTY_FOUR_BIT_LONG


176 #ifde‡
__LP64__


177 
	#SIXTY_FOUR_BIT


	)

178 #unde‡
THIRTY_TWO_BIT


180 #unde‡
SIXTY_FOUR_BIT


181 
	#THIRTY_TWO_BIT


	)

184 #unde‡
SIXTEEN_BIT


185 #unde‡
EIGHT_BIT


188 #i‡
deföed
(
HEADER_RC4_LOCL_H
Ë&& !deföed(
CONFIG_HEADER_RC4_LOCL_H
)

189 
	#CONFIG_HEADER_RC4_LOCL_H


	)

192 #unde‡
RC4_INDEX


195 #i‡
deföed
(
HEADER_BF_LOCL_H
Ë&& !deföed(
CONFIG_HEADER_BF_LOCL_H
)

196 
	#CONFIG_HEADER_BF_LOCL_H


	)

197 #ifde‡
__LP64__


198 
	#BF_PTR2


	)

200 
	#BF_PTR


	)

204 #i‡
deföed
(
HEADER_DES_LOCL_H
Ë&& !deföed(
CONFIG_HEADER_DES_LOCL_H
)

205 
	#CONFIG_HEADER_DES_LOCL_H


	)

206 #i‚de‡
DES_DEFAULT_OPTIONS


209 #i‚de‡
DES_PTR


210 #unde‡
DES_PTR


216 #i‚de‡
DES_RISC1


217 #unde‡
DES_RISC1


220 #i‚de‡
DES_RISC2


221 #unde‡
DES_RISC2


224 #i‡
deföed
(
DES_RISC1
Ë&& deföed(
DES_RISC2
)

225 
YOU
 
SHOULD
 
NOT
 
HAVE
 
BOTH
 
DES_RISC1
 
AND
 
DES_RISC2
 
	gDEFINED
!!!!!

230 #i‚de‡
DES_UNROLL


231 
	#DES_UNROLL


	)

237 #i‡!
deföed
(
DES_PTR
Ë&& !deföed(
DES_RISC1
Ë&& !deföed(
DES_RISC2
Ë&& !deföed(
DES_UNROLL
)

244 #i‡
deföed
–
sun
 )

245 
	#DES_PTR


	)

246 
	#DES_RISC1


	)

247 
	#DES_UNROLL


	)

248 #ñi‡
deföed
–
__u…rix
 )

249 
	#DES_PTR


	)

250 
	#DES_RISC2


	)

251 
	#DES_UNROLL


	)

252 #ñi‡
deföed
–
__osf1__
 )

253 
	#DES_PTR


	)

254 
	#DES_RISC2


	)

255 #ñi‡
deföed
 ( 
_AIX
 )

257 #ñi‡
deföed
–
__hpux
 )

259 #ñi‡
deföed
–
__aux
 )

261 #ñi‡
deföed
–
__dgux
 )

262 
	#DES_UNROLL


	)

263 #ñi‡
deföed
–
__sgi
 )

264 
	#DES_PTR


	)

265 
	#DES_RISC2


	)

266 
	#DES_UNROLL


	)

267 #ñi‡
deföed
(
i386
Ë|| deföed(
__i386__
)

268 
	#DES_PTR


	)

269 
	#DES_RISC1


	)

270 
	#DES_UNROLL


	)

	@/usr/include/openssl/ossl_typ.h

55 #i‚de‡
HEADER_OPENSSL_TYPES_H


56 
	#HEADER_OPENSSL_TYPES_H


	)

58 
	~<›ís¶/e_os2.h
>

60 #ifde‡
NO_ASN1_TYPEDEFS


61 
	#ASN1_INTEGER
 
ASN1_STRING


	)

62 
	#ASN1_ENUMERATED
 
ASN1_STRING


	)

63 
	#ASN1_BIT_STRING
 
ASN1_STRING


	)

64 
	#ASN1_OCTET_STRING
 
ASN1_STRING


	)

65 
	#ASN1_PRINTABLESTRING
 
ASN1_STRING


	)

66 
	#ASN1_T61STRING
 
ASN1_STRING


	)

67 
	#ASN1_IA5STRING
 
ASN1_STRING


	)

68 
	#ASN1_UTCTIME
 
ASN1_STRING


	)

69 
	#ASN1_GENERALIZEDTIME
 
ASN1_STRING


	)

70 
	#ASN1_TIME
 
ASN1_STRING


	)

71 
	#ASN1_GENERALSTRING
 
ASN1_STRING


	)

72 
	#ASN1_UNIVERSALSTRING
 
ASN1_STRING


	)

73 
	#ASN1_BMPSTRING
 
ASN1_STRING


	)

74 
	#ASN1_VISIBLESTRING
 
ASN1_STRING


	)

75 
	#ASN1_UTF8STRING
 
ASN1_STRING


	)

76 
	#ASN1_BOOLEAN
 

	)

77 
	#ASN1_NULL
 

	)

79 
a¢1_°rög_°
 
	tASN1_INTEGER
;

80 
a¢1_°rög_°
 
	tASN1_ENUMERATED
;

81 
a¢1_°rög_°
 
	tASN1_BIT_STRING
;

82 
a¢1_°rög_°
 
	tASN1_OCTET_STRING
;

83 
a¢1_°rög_°
 
	tASN1_PRINTABLESTRING
;

84 
a¢1_°rög_°
 
	tASN1_T61STRING
;

85 
a¢1_°rög_°
 
	tASN1_IA5STRING
;

86 
a¢1_°rög_°
 
	tASN1_GENERALSTRING
;

87 
a¢1_°rög_°
 
	tASN1_UNIVERSALSTRING
;

88 
a¢1_°rög_°
 
	tASN1_BMPSTRING
;

89 
a¢1_°rög_°
 
	tASN1_UTCTIME
;

90 
a¢1_°rög_°
 
	tASN1_TIME
;

91 
a¢1_°rög_°
 
	tASN1_GENERALIZEDTIME
;

92 
a¢1_°rög_°
 
	tASN1_VISIBLESTRING
;

93 
a¢1_°rög_°
 
	tASN1_UTF8STRING
;

94 
	tASN1_BOOLEAN
;

95 
	tASN1_NULL
;

98 #ifde‡
OPENSSL_SYS_WIN32


99 #unde‡
X509_NAME


100 #unde‡
X509_EXTENSIONS


101 #unde‡
X509_CERT_PAIR


102 #unde‡
PKCS7_ISSUER_AND_SERIAL


103 #unde‡
OCSP_REQUEST


104 #unde‡
OCSP_RESPONSE


107 #ifde‡
BIGNUM


108 #unde‡
BIGNUM


110 
bignum_°
 
	tBIGNUM
;

111 
bignum_˘x
 
	tBN_CTX
;

112 
bn_blödög_°
 
	tBN_BLINDING
;

113 
bn_m⁄t_˘x_°
 
	tBN_MONT_CTX
;

114 
bn_ª˝_˘x_°
 
	tBN_RECP_CTX
;

115 
bn_gícb_°
 
	tBN_GENCB
;

117 
buf_mem_°
 
	tBUF_MEM
;

119 
evp_cùhî_°
 
	tEVP_CIPHER
;

120 
evp_cùhî_˘x_°
 
	tEVP_CIPHER_CTX
;

121 
ív_md_°
 
	tEVP_MD
;

122 
ív_md_˘x_°
 
	tEVP_MD_CTX
;

123 
evp_pkey_°
 
	tEVP_PKEY
;

125 
dh_°
 
	tDH
;

126 
dh_mëhod
 
	tDH_METHOD
;

128 
dß_°
 
	tDSA
;

129 
dß_mëhod
 
	tDSA_METHOD
;

131 
rß_°
 
	tRSA
;

132 
rß_mëh_°
 
	tRSA_METHOD
;

134 
ønd_mëh_°
 
	tRAND_METHOD
;

136 
ecdh_mëhod
 
	tECDH_METHOD
;

137 
ecdß_mëhod
 
	tECDSA_METHOD
;

139 
x509_°
 
	tX509
;

140 
X509_Æg‹_°
 
	tX509_ALGOR
;

141 
X509_¸l_°
 
	tX509_CRL
;

142 
X509_«me_°
 
	tX509_NAME
;

143 
x509_°‹e_°
 
	tX509_STORE
;

144 
x509_°‹e_˘x_°
 
	tX509_STORE_CTX
;

145 
s¶_°
 
	tSSL
;

146 
s¶_˘x_°
 
	tSSL_CTX
;

148 
v3_ext_˘x
 
	tX509V3_CTX
;

149 
c⁄f_°
 
	tCONF
;

151 
°‹e_°
 
	tSTORE
;

152 
°‹e_mëhod_°
 
	tSTORE_METHOD
;

154 
ui_°
 
	tUI
;

155 
ui_mëhod_°
 
	tUI_METHOD
;

157 
°_ERR_FNS
 
	tERR_FNS
;

159 
ígöe_°
 
	tENGINE
;

161 
X509_POLICY_NODE_°
 
	tX509_POLICY_NODE
;

162 
X509_POLICY_LEVEL_°
 
	tX509_POLICY_LEVEL
;

163 
X509_POLICY_TREE_°
 
	tX509_POLICY_TREE
;

164 
X509_POLICY_CACHE_°
 
	tX509_POLICY_CACHE
;

167 
	#DECLARE_PKCS12_STACK_OF
(
ty≥
Ë

	)

168 
	#IMPLEMENT_PKCS12_STACK_OF
(
ty≥
Ë

	)

170 
¸y±o_ex_d©a_°
 
	tCRYPTO_EX_DATA
;

172 
	tCRYPTO_EX_√w
(*
	t∑ª¡
, *
	t±r
, 
	tCRYPTO_EX_DATA
 *
	tad
,

173 
	tidx
, 
	t¨gl
, *
	t¨gp
);

174 
	tCRYPTO_EX_‰ì
(*
	t∑ª¡
, *
	t±r
, 
	tCRYPTO_EX_DATA
 *
	tad
,

175 
	tidx
, 
	t¨gl
, *
	t¨gp
);

176 
	tCRYPTO_EX_dup
(
	tCRYPTO_EX_DATA
 *
	tto
, CRYPTO_EX_DATA *
	t‰om
, *
	t‰om_d
,

177 
	tidx
, 
	t¨gl
, *
	t¨gp
);

179 
oc•_ªq_˘x_°
 
	tOCSP_REQ_CTX
;

180 
oc•_ª•⁄£_°
 
	tOCSP_RESPONSE
;

181 
oc•_ª•⁄dî_id_°
 
	tOCSP_RESPID
;

	@/usr/include/openssl/pem2.h

60 #ifde‡
__˝lu•lus


64 #i‚de‡
HEADER_PEM_H


65 
ERR_lﬂd_PEM_°rögs
();

68 #ifde‡
__˝lu•lus


	@/usr/include/openssl/rand.h

59 #i‚de‡
HEADER_RAND_H


60 
	#HEADER_RAND_H


	)

62 
	~<AvaûabûôyMa¸os.h
>

64 
	~<°dlib.h
>

65 
	~<›ís¶/os¶_typ.h
>

66 
	~<›ís¶/e_os2.h
>

68 #i‡
deföed
(
OPENSSL_SYS_WINDOWS
)

69 
	~<wödows.h
>

72 #ifde‡ 
__˝lu•lus


76 #i‡
deföed
(
OPENSSL_FIPS
)

77 
	#FIPS_RAND_SIZE_T
 

	)

83 
	sønd_mëh_°


85 (*
£ed
)(c⁄° *
buf
, 
num
);

86 (*
byãs
)(*
buf
, 
num
);

87 (*
˛ónup
)();

88 (*
add
)(c⁄° *
buf
, 
num
, 
íå›y
);

89 (*
p£ud‹™d
)(*
buf
, 
num
);

90 (*
°©us
)();

93 #ifde‡
BN_DEBUG


94 
ønd_¥edi˘abÀ
;

97 
RAND_£t_ønd_mëhod
(c⁄° 
RAND_METHOD
 *
mëh
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

98 c⁄° 
RAND_METHOD
 *
RAND_gë_ønd_mëhod
(Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

99 #i‚de‡
OPENSSL_NO_ENGINE


100 
RAND_£t_ønd_ígöe
(
ENGINE
 *
ígöe
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

102 
RAND_METHOD
 *
RAND_SSLóy
(Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

103 
RAND_˛ónup
(Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

104 
RAND_byãs
(*
buf
,
num
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

105 
RAND_p£udo_byãs
(*
buf
,
num
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

106 
RAND_£ed
(c⁄° *
buf
,
num
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

107 
RAND_add
(c⁄° *
buf
,
num
,
íå›y
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

108 
RAND_lﬂd_fûe
(c⁄° *
fûe
,
max_byãs
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

109 
RAND_wrôe_fûe
(c⁄° *
fûe
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

110 c⁄° *
RAND_fûe_«me
(*
fûe
,
size_t
 
num
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

111 
RAND_°©us
(Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

112 
RAND_quîy_egd_byãs
(c⁄° *
∑th
, *
buf
, 
byãs
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

113 
RAND_egd
(c⁄° *
∑th
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

114 
RAND_egd_byãs
(c⁄° *
∑th
,
byãs
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

115 
RAND_pﬁl
(Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

116 #i‚de‡
OPENSSL_NO_ENGINE


117 #ifde‡
OPENSSL_FIPS


118 
öt_RAND_öô_ígöe_ˇŒbacks
(Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

119 
öt_RAND_£t_ˇŒbacks
(

120 (*
£t_ønd_func
)(c⁄° 
RAND_METHOD
 *
mëh
,

121 c⁄° 
RAND_METHOD
 **
pmëh
),

122 c⁄° 
RAND_METHOD
 *(*
gë_ønd_func
)(c⁄° RAND_METHOD **
pmëh
)Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

126 #i‡
deföed
(
OPENSSL_SYS_WINDOWS
Ë|| deföed(
OPENSSL_SYS_WIN32
)

128 
RAND_s¸ìn
();

129 
RAND_evít
(
UINT
, 
WPARAM
, 
LPARAM
);

137 
ERR_lﬂd_RAND_°rögs
(Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

142 
	#RAND_F_ENG_RAND_GET_RAND_METHOD
 108

	)

143 
	#RAND_F_FIPS_RAND
 103

	)

144 
	#RAND_F_FIPS_RAND_BYTES
 102

	)

145 
	#RAND_F_FIPS_RAND_GET_RAND_METHOD
 109

	)

146 
	#RAND_F_FIPS_RAND_SET_DT
 106

	)

147 
	#RAND_F_FIPS_SET_DT
 104

	)

148 
	#RAND_F_FIPS_SET_PRNG_SEED
 107

	)

149 
	#RAND_F_FIPS_SET_TEST_MODE
 105

	)

150 
	#RAND_F_RAND_GET_RAND_METHOD
 101

	)

151 
	#RAND_F_SSLEAY_RAND_BYTES
 100

	)

154 
	#RAND_R_NON_FIPS_METHOD
 105

	)

155 
	#RAND_R_NOT_IN_TEST_MODE
 106

	)

156 
	#RAND_R_NO_KEY_SET
 107

	)

157 
	#RAND_R_PRNG_ASKING_FOR_TOO_MUCH
 101

	)

158 
	#RAND_R_PRNG_ERROR
 108

	)

159 
	#RAND_R_PRNG_KEYED
 109

	)

160 
	#RAND_R_PRNG_NOT_REKEYED
 102

	)

161 
	#RAND_R_PRNG_NOT_RESEEDED
 103

	)

162 
	#RAND_R_PRNG_NOT_SEEDED
 100

	)

163 
	#RAND_R_PRNG_SEED_MUST_NOT_MATCH_KEY
 110

	)

164 
	#RAND_R_PRNG_STUCK
 104

	)

166 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/stack.h

59 #i‚de‡
HEADER_STACK_H


60 
	#HEADER_STACK_H


	)

62 
	~<AvaûabûôyMa¸os.h
>

64 #ifde‡ 
__˝lu•lus


68 
	s°ack_°


70 
num
;

71 **
d©a
;

72 
s‹ãd
;

74 
num_Æloc
;

75 (*
comp
)(const * const *, const * const *);

76 } 
	tSTACK
;

78 
	#M_sk_num
(
sk
Ë((skË? (sk)->
num
:-1)

	)

79 
	#M_sk_vÆue
(
sk
,
n
Ë((skË? (sk)->
d©a
[n] : 
NULL
)

	)

81 
sk_num
(c⁄° 
STACK
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

82 *
sk_vÆue
(c⁄° 
STACK
 *, Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

84 *
sk_£t
(
STACK
 *, , *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

86 
STACK
 *
sk_√w
((*
cmp
)(c⁄° * c⁄° *, c⁄° * c⁄° *)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

87 
STACK
 *
sk_√w_nuŒ
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

88 
sk_‰ì
(
STACK
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

89 
sk_p›_‰ì
(
STACK
 *
°
, (*
func
)(*)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

90 
sk_ö£π
(
STACK
 *
sk
,*
d©a
,
whîe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

91 *
sk_dñëe
(
STACK
 *
°
,
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

92 *
sk_dñëe_±r
(
STACK
 *
°
, *
p
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

93 
sk_föd
(
STACK
 *
°
,*
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

94 
sk_föd_ex
(
STACK
 *
°
,*
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

95 
sk_push
(
STACK
 *
°
,*
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

96 
sk_unshi·
(
STACK
 *
°
,*
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

97 *
sk_shi·
(
STACK
 *
°
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

98 *
sk_p›
(
STACK
 *
°
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

99 
sk_zîo
(
STACK
 *
°
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

100 (*
sk_£t_cmp_func
(
STACK
 *
sk
, (*
c
)(const * const *,

102 (c⁄° * c⁄° *, c⁄° * c⁄° *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

103 
STACK
 *
sk_dup
(STACK *
°
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

104 
sk_s‹t
(
STACK
 *
°
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

105 
sk_is_s‹ãd
(c⁄° 
STACK
 *
°
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

107 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/store.h

59 #i‚de‡
HEADER_STORE_H


60 
	#HEADER_STORE_H


	)

62 
	~<AvaûabûôyMa¸os.h
>

64 
	~<›ís¶/os¶_typ.h
>

65 #i‚de‡
OPENSSL_NO_DEPRECATED


66 
	~<›ís¶/evp.h
>

67 
	~<›ís¶/bn.h
>

68 
	~<›ís¶/x509.h
>

71 #ifde‡ 
__˝lu•lus


85 
STORE
 *
STORE_√w_mëhod
(c⁄° 
STORE_METHOD
 *
mëhod
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

86 
STORE
 *
STORE_√w_ígöe
(
ENGINE
 *
ígöe
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

87 
STORE_‰ì
(
STORE
 *
ui
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

93 
STORE_˘æ
(
STORE
 *
°‹e
, 
cmd
, 
i
, *
p
, (*
f
)()Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

97 
	#STORE_CTRL_SET_DIRECTORY
 0x0001

	)

99 
	#STORE_CTRL_SET_FILE
 0x0002

	)

102 
	#STORE_CTRL_SET_CONF_FILE
 0x0003

	)

105 
	#STORE_CTRL_SET_CONF_SECTION
 0x0004

	)

109 
	#STORE_£t_≠p_d©a
(
s
,
¨g
Ë
	`STORE_£t_ex_d©a
(s,0,¨g)

	)

110 
	#STORE_gë_≠p_d©a
(
s
Ë
	`STORE_gë_ex_d©a
(s,0)

	)

111 
STORE_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w
 *
√w_func
,

112 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

113 
STORE_£t_ex_d©a
(
STORE
 *
r
,
idx
,*
¨g
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

114 *
STORE_gë_ex_d©a
(
STORE
 *
r
, 
idx
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

117 c⁄° 
STORE_METHOD
 *
STORE_gë_mëhod
(
STORE
 *
°‹e
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

118 c⁄° 
STORE_METHOD
 *
STORE_£t_mëhod
(
STORE
 *
°‹e
, c⁄° STORE_METHOD *
mëh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

124 c⁄° 
STORE_METHOD
 *
STORE_Mem‹y
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

128 c⁄° 
STORE_METHOD
 *
STORE_Dúe˘‹y
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

132 c⁄° 
STORE_METHOD
 *
STORE_Fûe
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

137 
	eSTORE_obje˘_ty≥s


139 
STORE_OBJECT_TYPE_X509_CERTIFICATE
= 0x01,

140 
STORE_OBJECT_TYPE_X509_CRL
= 0x02,

141 
STORE_OBJECT_TYPE_PRIVATE_KEY
= 0x03,

142 
STORE_OBJECT_TYPE_PUBLIC_KEY
= 0x04,

143 
STORE_OBJECT_TYPE_NUMBER
= 0x05,

144 
STORE_OBJECT_TYPE_ARBITRARY
= 0x06,

145 
STORE_OBJECT_TYPE_NUM
= 0x06

147 } 
	tSTORE_OBJECT_TYPES
;

149 c⁄° * c⁄° 
STORE_obje˘_ty≥_°rög
[
STORE_OBJECT_TYPE_NUM
+1];

154 
	eSTORE_∑øms


156 
	gSTORE_PARAM_EVP_TYPE
= 0x01,

157 
	gSTORE_PARAM_BITS
= 0x02,

158 
	gSTORE_PARAM_KEY_PARAMETERS
= 0x03,

159 
	gSTORE_PARAM_KEY_NO_PARAMETERS
= 0x04,

160 
	gSTORE_PARAM_AUTH_PASSPHRASE
= 0x05,

161 
	gSTORE_PARAM_AUTH_KRB5_TICKET
= 0x06,

162 
	gSTORE_PARAM_TYPE_NUM
= 0x06

164 } 
	tSTORE_PARAM_TYPES
;

166 c⁄° 
STORE_∑øm_sizes
[
STORE_PARAM_TYPE_NUM
+1];

171 
	eSTORE_©åibs


173 
	gSTORE_ATTR_END
= 0x00,

174 
	gSTORE_ATTR_FRIENDLYNAME
= 0x01,

175 
	gSTORE_ATTR_KEYID
= 0x02,

176 
	gSTORE_ATTR_ISSUERKEYID
= 0x03,

177 
	gSTORE_ATTR_SUBJECTKEYID
= 0x04,

178 
	gSTORE_ATTR_ISSUERSERIALHASH
= 0x05,

179 
	gSTORE_ATTR_ISSUER
= 0x06,

180 
	gSTORE_ATTR_SERIAL
= 0x07,

181 
	gSTORE_ATTR_SUBJECT
= 0x08,

182 
	gSTORE_ATTR_CERTHASH
= 0x09,

183 
	gSTORE_ATTR_EMAIL
= 0x0a,

184 
	gSTORE_ATTR_FILENAME
= 0x0b,

185 
	gSTORE_ATTR_TYPE_NUM
= 0x0b,

187 
	gSTORE_ATTR_OR
= 0xff

191 } 
	tSTORE_ATTR_TYPES
;

193 c⁄° 
STORE_©å_sizes
[
STORE_ATTR_TYPE_NUM
+1];

195 
	eSTORE_˚πifiˇã_°©us


197 
	gSTORE_X509_VALID
= 0x00,

198 
	gSTORE_X509_EXPIRED
= 0x01,

199 
	gSTORE_X509_SUSPENDED
= 0x02,

200 
	gSTORE_X509_REVOKED
= 0x03

201 } 
	tSTORE_CERTIFICATE_STATUS
;

208 
	sSTORE_OBJECT_°


210 
STORE_OBJECT_TYPES
 
	gty≥
;

215 
STORE_CERTIFICATE_STATUS
 
	g°©us
;

216 
X509
 *
	g˚πifiˇã
;

217 } 
	gx509
;

218 
X509_CRL
 *
	g¸l
;

219 
EVP_PKEY
 *
	gkey
;

220 
BIGNUM
 *
	gnumbî
;

221 
BUF_MEM
 *
	g¨bôøry
;

222 } 
	gd©a
;

223 } 
	tSTORE_OBJECT
;

224 
DECLARE_STACK_OF
(
STORE_OBJECT
)

225 
STORE_OBJECT
 *
STORE_OBJECT_√w
(Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

226 
STORE_OBJECT_‰ì
(
STORE_OBJECT
 *
d©a
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

232 
X509
 *
STORE_gë_˚πifiˇã
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

233 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

234 
STORE_°‹e_˚πifiˇã
(
STORE
 *
e
, 
X509
 *
d©a
, 
OPENSSL_ITEM
 
©åibuãs
[],

235 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

236 
STORE_modify_˚πifiˇã
(
STORE
 *
e
, 
OPENSSL_ITEM
 
£¨ch_©åibuãs
[],

237 
OPENSSL_ITEM
 
add_©åibuãs
[], OPENSSL_ITEM 
modify_©åibuãs
[],

238 
OPENSSL_ITEM
 
dñëe_©åibuãs
[], OPENSSL_ITEM 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

239 
STORE_ªvoke_˚πifiˇã
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

240 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

241 
STORE_dñëe_˚πifiˇã
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

242 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

243 *
STORE_li°_˚πifiˇã_°¨t
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

244 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

245 
X509
 *
STORE_li°_˚πifiˇã_√xt
(
STORE
 *
e
, *
h™dÀ
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

246 
STORE_li°_˚πifiˇã_íd
(
STORE
 *
e
, *
h™dÀ
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

247 
STORE_li°_˚πifiˇã_ídp
(
STORE
 *
e
, *
h™dÀ
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

248 
EVP_PKEY
 *
STORE_gíî©e_key
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

249 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

250 
EVP_PKEY
 *
STORE_gë_¥iv©e_key
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

251 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

252 
STORE_°‹e_¥iv©e_key
(
STORE
 *
e
, 
EVP_PKEY
 *
d©a
,

253 
OPENSSL_ITEM
 
©åibuãs
[], OPENSSL_ITEM 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

254 
STORE_modify_¥iv©e_key
(
STORE
 *
e
, 
OPENSSL_ITEM
 
£¨ch_©åibuãs
[],

255 
OPENSSL_ITEM
 
add_°åibuãs
[], OPENSSL_ITEM 
modify_©åibuãs
[],

256 
OPENSSL_ITEM
 
dñëe_©åibuãs
[], OPENSSL_ITEM 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

257 
STORE_ªvoke_¥iv©e_key
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

258 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

259 
STORE_dñëe_¥iv©e_key
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

260 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

261 *
STORE_li°_¥iv©e_key_°¨t
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

262 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

263 
EVP_PKEY
 *
STORE_li°_¥iv©e_key_√xt
(
STORE
 *
e
, *
h™dÀ
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

264 
STORE_li°_¥iv©e_key_íd
(
STORE
 *
e
, *
h™dÀ
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

265 
STORE_li°_¥iv©e_key_ídp
(
STORE
 *
e
, *
h™dÀ
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

266 
EVP_PKEY
 *
STORE_gë_public_key
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

267 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

268 
STORE_°‹e_public_key
(
STORE
 *
e
, 
EVP_PKEY
 *
d©a
, 
OPENSSL_ITEM
 
©åibuãs
[],

269 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

270 
STORE_modify_public_key
(
STORE
 *
e
, 
OPENSSL_ITEM
 
£¨ch_©åibuãs
[],

271 
OPENSSL_ITEM
 
add_°åibuãs
[], OPENSSL_ITEM 
modify_©åibuãs
[],

272 
OPENSSL_ITEM
 
dñëe_©åibuãs
[], OPENSSL_ITEM 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

273 
STORE_ªvoke_public_key
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

274 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

275 
STORE_dñëe_public_key
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

276 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

277 *
STORE_li°_public_key_°¨t
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

278 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

279 
EVP_PKEY
 *
STORE_li°_public_key_√xt
(
STORE
 *
e
, *
h™dÀ
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

280 
STORE_li°_public_key_íd
(
STORE
 *
e
, *
h™dÀ
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

281 
STORE_li°_public_key_ídp
(
STORE
 *
e
, *
h™dÀ
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

282 
X509_CRL
 *
STORE_gíî©e_¸l
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

283 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

284 
X509_CRL
 *
STORE_gë_¸l
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

285 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

286 
STORE_°‹e_¸l
(
STORE
 *
e
, 
X509_CRL
 *
d©a
, 
OPENSSL_ITEM
 
©åibuãs
[],

287 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

288 
STORE_modify_¸l
(
STORE
 *
e
, 
OPENSSL_ITEM
 
£¨ch_©åibuãs
[],

289 
OPENSSL_ITEM
 
add_°åibuãs
[], OPENSSL_ITEM 
modify_©åibuãs
[],

290 
OPENSSL_ITEM
 
dñëe_©åibuãs
[], OPENSSL_ITEM 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

291 
STORE_dñëe_¸l
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

292 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

293 *
STORE_li°_¸l_°¨t
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

294 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

295 
X509_CRL
 *
STORE_li°_¸l_√xt
(
STORE
 *
e
, *
h™dÀ
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

296 
STORE_li°_¸l_íd
(
STORE
 *
e
, *
h™dÀ
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

297 
STORE_li°_¸l_ídp
(
STORE
 *
e
, *
h™dÀ
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

298 
STORE_°‹e_numbî
(
STORE
 *
e
, 
BIGNUM
 *
d©a
, 
OPENSSL_ITEM
 
©åibuãs
[],

299 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

300 
STORE_modify_numbî
(
STORE
 *
e
, 
OPENSSL_ITEM
 
£¨ch_©åibuãs
[],

301 
OPENSSL_ITEM
 
add_°åibuãs
[], OPENSSL_ITEM 
modify_©åibuãs
[],

302 
OPENSSL_ITEM
 
dñëe_©åibuãs
[], OPENSSL_ITEM 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

303 
BIGNUM
 *
STORE_gë_numbî
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

304 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

305 
STORE_dñëe_numbî
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

306 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

307 
STORE_°‹e_¨bôøry
(
STORE
 *
e
, 
BUF_MEM
 *
d©a
, 
OPENSSL_ITEM
 
©åibuãs
[],

308 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

309 
STORE_modify_¨bôøry
(
STORE
 *
e
, 
OPENSSL_ITEM
 
£¨ch_©åibuãs
[],

310 
OPENSSL_ITEM
 
add_°åibuãs
[], OPENSSL_ITEM 
modify_©åibuãs
[],

311 
OPENSSL_ITEM
 
dñëe_©åibuãs
[], OPENSSL_ITEM 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

312 
BUF_MEM
 *
STORE_gë_¨bôøry
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

313 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

314 
STORE_dñëe_¨bôøry
(
STORE
 *
e
, 
OPENSSL_ITEM
 
©åibuãs
[],

315 
OPENSSL_ITEM
 
∑ømëîs
[]Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

319 
STORE_METHOD
 *
STORE_¸óã_mëhod
(*
«me
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

320 
STORE_de°roy_mëhod
(
STORE_METHOD
 *
°‹e_mëhod
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

323 (*
	gSTORE_INITIALISE_FUNC_PTR
)(
	tSTORE
 *);

324 (*
	gSTORE_CLEANUP_FUNC_PTR
)(
	tSTORE
 *);

325 
	gSTORE_OBJECT
 *(*
	tSTORE_GENERATE_OBJECT_FUNC_PTR
)(
	tSTORE
 *, 
	tSTORE_OBJECT_TYPES
 
	tty≥
, 
	tOPENSSL_ITEM
 
	t©åibuãs
[], OPENSSL_ITEM 
	t∑ømëîs
[]);

326 
	gSTORE_OBJECT
 *(*
	tSTORE_GET_OBJECT_FUNC_PTR
)(
	tSTORE
 *, 
	tSTORE_OBJECT_TYPES
 
	tty≥
, 
	tOPENSSL_ITEM
 
	t©åibuãs
[], OPENSSL_ITEM 
	t∑ømëîs
[]);

327 *(*
	tSTORE_START_OBJECT_FUNC_PTR
)(
	tSTORE
 *, 
	tSTORE_OBJECT_TYPES
 
	tty≥
, 
	tOPENSSL_ITEM
 
	t©åibuãs
[], OPENSSL_ITEM 
	t∑ømëîs
[]);

328 
	gSTORE_OBJECT
 *(*
	tSTORE_NEXT_OBJECT_FUNC_PTR
)(
	tSTORE
 *, *
	th™dÀ
);

329 (*
	gSTORE_END_OBJECT_FUNC_PTR
)(
	tSTORE
 *, *
	th™dÀ
);

330 (*
	gSTORE_HANDLE_OBJECT_FUNC_PTR
)(
	tSTORE
 *, 
	tSTORE_OBJECT_TYPES
 
	tty≥
, 
	tOPENSSL_ITEM
 
	t©åibuãs
[], OPENSSL_ITEM 
	t∑ømëîs
[]);

331 (*
	gSTORE_STORE_OBJECT_FUNC_PTR
)(
	tSTORE
 *, 
	tSTORE_OBJECT_TYPES
 
	tty≥
, 
	tSTORE_OBJECT
 *
	td©a
, 
	tOPENSSL_ITEM
 
	t©åibuãs
[], OPENSSL_ITEM 
	t∑ømëîs
[]);

332 (*
	gSTORE_MODIFY_OBJECT_FUNC_PTR
)(
	tSTORE
 *, 
	tSTORE_OBJECT_TYPES
 
	tty≥
, 
	tOPENSSL_ITEM
 
	t£¨ch_©åibuãs
[], OPENSSL_ITEM 
	tadd_©åibuãs
[], OPENSSL_ITEM 
	tmodify_©åibuãs
[], OPENSSL_ITEM 
	tdñëe_©åibuãs
[], OPENSSL_ITEM 
	t∑ømëîs
[]);

333 (*
	gSTORE_GENERIC_FUNC_PTR
)(
	tSTORE
 *, 
	tOPENSSL_ITEM
 
	t©åibuãs
[], OPENSSL_ITEM 
	t∑ømëîs
[]);

334 (*
	gSTORE_CTRL_FUNC_PTR
)(
	tSTORE
 *, 
	tcmd
, 
	tl
, *
	tp
, (*
	tf
)());

336 
STORE_mëhod_£t_öôüli£_fun˘i⁄
(
STORE_METHOD
 *
sm
, 
STORE_INITIALISE_FUNC_PTR
 
öô_f
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

337 
STORE_mëhod_£t_˛ónup_fun˘i⁄
(
STORE_METHOD
 *
sm
, 
STORE_CLEANUP_FUNC_PTR
 
˛ón_f
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

338 
STORE_mëhod_£t_gíî©e_fun˘i⁄
(
STORE_METHOD
 *
sm
, 
STORE_GENERATE_OBJECT_FUNC_PTR
 
gíî©e_f
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

339 
STORE_mëhod_£t_gë_fun˘i⁄
(
STORE_METHOD
 *
sm
, 
STORE_GET_OBJECT_FUNC_PTR
 
gë_f
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

340 
STORE_mëhod_£t_°‹e_fun˘i⁄
(
STORE_METHOD
 *
sm
, 
STORE_STORE_OBJECT_FUNC_PTR
 
°‹e_f
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

341 
STORE_mëhod_£t_modify_fun˘i⁄
(
STORE_METHOD
 *
sm
, 
STORE_MODIFY_OBJECT_FUNC_PTR
 
°‹e_f
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

342 
STORE_mëhod_£t_ªvoke_fun˘i⁄
(
STORE_METHOD
 *
sm
, 
STORE_HANDLE_OBJECT_FUNC_PTR
 
ªvoke_f
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

343 
STORE_mëhod_£t_dñëe_fun˘i⁄
(
STORE_METHOD
 *
sm
, 
STORE_HANDLE_OBJECT_FUNC_PTR
 
dñëe_f
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

344 
STORE_mëhod_£t_li°_°¨t_fun˘i⁄
(
STORE_METHOD
 *
sm
, 
STORE_START_OBJECT_FUNC_PTR
 
li°_°¨t_f
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

345 
STORE_mëhod_£t_li°_√xt_fun˘i⁄
(
STORE_METHOD
 *
sm
, 
STORE_NEXT_OBJECT_FUNC_PTR
 
li°_√xt_f
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

346 
STORE_mëhod_£t_li°_íd_fun˘i⁄
(
STORE_METHOD
 *
sm
, 
STORE_END_OBJECT_FUNC_PTR
 
li°_íd_f
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

347 
STORE_mëhod_£t_upd©e_°‹e_fun˘i⁄
(
STORE_METHOD
 *
sm
, 
STORE_GENERIC_FUNC_PTR
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

348 
STORE_mëhod_£t_lock_°‹e_fun˘i⁄
(
STORE_METHOD
 *
sm
, 
STORE_GENERIC_FUNC_PTR
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

349 
STORE_mëhod_£t_u∆ock_°‹e_fun˘i⁄
(
STORE_METHOD
 *
sm
, 
STORE_GENERIC_FUNC_PTR
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

350 
STORE_mëhod_£t_˘æ_fun˘i⁄
(
STORE_METHOD
 *
sm
, 
STORE_CTRL_FUNC_PTR
 
˘æ_f
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

352 
STORE_INITIALISE_FUNC_PTR
 
STORE_mëhod_gë_öôüli£_fun˘i⁄
(
STORE_METHOD
 *
sm
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

353 
STORE_CLEANUP_FUNC_PTR
 
STORE_mëhod_gë_˛ónup_fun˘i⁄
(
STORE_METHOD
 *
sm
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

354 
STORE_GENERATE_OBJECT_FUNC_PTR
 
STORE_mëhod_gë_gíî©e_fun˘i⁄
(
STORE_METHOD
 *
sm
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

355 
STORE_GET_OBJECT_FUNC_PTR
 
STORE_mëhod_gë_gë_fun˘i⁄
(
STORE_METHOD
 *
sm
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

356 
STORE_STORE_OBJECT_FUNC_PTR
 
STORE_mëhod_gë_°‹e_fun˘i⁄
(
STORE_METHOD
 *
sm
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

357 
STORE_MODIFY_OBJECT_FUNC_PTR
 
STORE_mëhod_gë_modify_fun˘i⁄
(
STORE_METHOD
 *
sm
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

358 
STORE_HANDLE_OBJECT_FUNC_PTR
 
STORE_mëhod_gë_ªvoke_fun˘i⁄
(
STORE_METHOD
 *
sm
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

359 
STORE_HANDLE_OBJECT_FUNC_PTR
 
STORE_mëhod_gë_dñëe_fun˘i⁄
(
STORE_METHOD
 *
sm
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

360 
STORE_START_OBJECT_FUNC_PTR
 
STORE_mëhod_gë_li°_°¨t_fun˘i⁄
(
STORE_METHOD
 *
sm
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

361 
STORE_NEXT_OBJECT_FUNC_PTR
 
STORE_mëhod_gë_li°_√xt_fun˘i⁄
(
STORE_METHOD
 *
sm
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

362 
STORE_END_OBJECT_FUNC_PTR
 
STORE_mëhod_gë_li°_íd_fun˘i⁄
(
STORE_METHOD
 *
sm
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

363 
STORE_GENERIC_FUNC_PTR
 
STORE_mëhod_gë_upd©e_°‹e_fun˘i⁄
(
STORE_METHOD
 *
sm
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

364 
STORE_GENERIC_FUNC_PTR
 
STORE_mëhod_gë_lock_°‹e_fun˘i⁄
(
STORE_METHOD
 *
sm
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

365 
STORE_GENERIC_FUNC_PTR
 
STORE_mëhod_gë_u∆ock_°‹e_fun˘i⁄
(
STORE_METHOD
 *
sm
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

366 
STORE_CTRL_FUNC_PTR
 
STORE_mëhod_gë_˘æ_fun˘i⁄
(
STORE_METHOD
 *
sm
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

373 
STORE_©å_öfo_°
 
	tSTORE_ATTR_INFO
;

379 *
STORE_∑r£_©ås_°¨t
(
OPENSSL_ITEM
 *
©åibuãs
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

380 
STORE_ATTR_INFO
 *
STORE_∑r£_©ås_√xt
(*
h™dÀ
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

381 
STORE_∑r£_©ås_íd
(*
h™dÀ
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

382 
STORE_∑r£_©ås_ídp
(*
h™dÀ
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

385 
STORE_ATTR_INFO
 *
STORE_ATTR_INFO_√w
(Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

386 
STORE_ATTR_INFO_‰ì
(
STORE_ATTR_INFO
 *
©ås
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

389 *
STORE_ATTR_INFO_gë0_c°r
(
STORE_ATTR_INFO
 *
©ås
, 
STORE_ATTR_TYPES
 
code
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

390 *
STORE_ATTR_INFO_gë0_sha1°r
(
STORE_ATTR_INFO
 *
©ås
,

391 
STORE_ATTR_TYPES
 
code
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

392 
X509_NAME
 *
STORE_ATTR_INFO_gë0_dn
(
STORE_ATTR_INFO
 *
©ås
, 
STORE_ATTR_TYPES
 
code
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

393 
BIGNUM
 *
STORE_ATTR_INFO_gë0_numbî
(
STORE_ATTR_INFO
 *
©ås
, 
STORE_ATTR_TYPES
 
code
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

394 
STORE_ATTR_INFO_£t_c°r
(
STORE_ATTR_INFO
 *
©ås
, 
STORE_ATTR_TYPES
 
code
,

395 *
c°r
, 
size_t
 
c°r_size
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

396 
STORE_ATTR_INFO_£t_sha1°r
(
STORE_ATTR_INFO
 *
©ås
, 
STORE_ATTR_TYPES
 
code
,

397 *
sha1°r
, 
size_t
 
sha1°r_size
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

398 
STORE_ATTR_INFO_£t_dn
(
STORE_ATTR_INFO
 *
©ås
, 
STORE_ATTR_TYPES
 
code
,

399 
X509_NAME
 *
dn
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

400 
STORE_ATTR_INFO_£t_numbî
(
STORE_ATTR_INFO
 *
©ås
, 
STORE_ATTR_TYPES
 
code
,

401 
BIGNUM
 *
numbî
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

402 
STORE_ATTR_INFO_modify_c°r
(
STORE_ATTR_INFO
 *
©ås
, 
STORE_ATTR_TYPES
 
code
,

403 *
c°r
, 
size_t
 
c°r_size
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

404 
STORE_ATTR_INFO_modify_sha1°r
(
STORE_ATTR_INFO
 *
©ås
, 
STORE_ATTR_TYPES
 
code
,

405 *
sha1°r
, 
size_t
 
sha1°r_size
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

406 
STORE_ATTR_INFO_modify_dn
(
STORE_ATTR_INFO
 *
©ås
, 
STORE_ATTR_TYPES
 
code
,

407 
X509_NAME
 *
dn
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

408 
STORE_ATTR_INFO_modify_numbî
(
STORE_ATTR_INFO
 *
©ås
, 
STORE_ATTR_TYPES
 
code
,

409 
BIGNUM
 *
numbî
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

413 
STORE_ATTR_INFO_com∑ª
(
STORE_ATTR_INFO
 *
a
, STORE_ATTR_INFO *
b
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

416 
STORE_ATTR_INFO_ö_ønge
(
STORE_ATTR_INFO
 *
a
, STORE_ATTR_INFO *
b
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

418 
STORE_ATTR_INFO_ö
(
STORE_ATTR_INFO
 *
a
, STORE_ATTR_INFO *
b
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

420 
STORE_ATTR_INFO_ö_ex
(
STORE_ATTR_INFO
 *
a
, STORE_ATTR_INFO *
b
Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

427 
ERR_lﬂd_STORE_°rögs
(Ë
	gDEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

432 
	#STORE_F_MEM_DELETE
 134

	)

433 
	#STORE_F_MEM_GENERATE
 135

	)

434 
	#STORE_F_MEM_LIST_END
 168

	)

435 
	#STORE_F_MEM_LIST_NEXT
 136

	)

436 
	#STORE_F_MEM_LIST_START
 137

	)

437 
	#STORE_F_MEM_MODIFY
 169

	)

438 
	#STORE_F_MEM_STORE
 138

	)

439 
	#STORE_F_STORE_ATTR_INFO_GET0_CSTR
 139

	)

440 
	#STORE_F_STORE_ATTR_INFO_GET0_DN
 140

	)

441 
	#STORE_F_STORE_ATTR_INFO_GET0_NUMBER
 141

	)

442 
	#STORE_F_STORE_ATTR_INFO_GET0_SHA1STR
 142

	)

443 
	#STORE_F_STORE_ATTR_INFO_MODIFY_CSTR
 143

	)

444 
	#STORE_F_STORE_ATTR_INFO_MODIFY_DN
 144

	)

445 
	#STORE_F_STORE_ATTR_INFO_MODIFY_NUMBER
 145

	)

446 
	#STORE_F_STORE_ATTR_INFO_MODIFY_SHA1STR
 146

	)

447 
	#STORE_F_STORE_ATTR_INFO_SET_CSTR
 147

	)

448 
	#STORE_F_STORE_ATTR_INFO_SET_DN
 148

	)

449 
	#STORE_F_STORE_ATTR_INFO_SET_NUMBER
 149

	)

450 
	#STORE_F_STORE_ATTR_INFO_SET_SHA1STR
 150

	)

451 
	#STORE_F_STORE_CERTIFICATE
 170

	)

452 
	#STORE_F_STORE_CTRL
 161

	)

453 
	#STORE_F_STORE_DELETE_ARBITRARY
 158

	)

454 
	#STORE_F_STORE_DELETE_CERTIFICATE
 102

	)

455 
	#STORE_F_STORE_DELETE_CRL
 103

	)

456 
	#STORE_F_STORE_DELETE_NUMBER
 104

	)

457 
	#STORE_F_STORE_DELETE_PRIVATE_KEY
 105

	)

458 
	#STORE_F_STORE_DELETE_PUBLIC_KEY
 106

	)

459 
	#STORE_F_STORE_GENERATE_CRL
 107

	)

460 
	#STORE_F_STORE_GENERATE_KEY
 108

	)

461 
	#STORE_F_STORE_GET_ARBITRARY
 159

	)

462 
	#STORE_F_STORE_GET_CERTIFICATE
 109

	)

463 
	#STORE_F_STORE_GET_CRL
 110

	)

464 
	#STORE_F_STORE_GET_NUMBER
 111

	)

465 
	#STORE_F_STORE_GET_PRIVATE_KEY
 112

	)

466 
	#STORE_F_STORE_GET_PUBLIC_KEY
 113

	)

467 
	#STORE_F_STORE_LIST_CERTIFICATE_END
 114

	)

468 
	#STORE_F_STORE_LIST_CERTIFICATE_ENDP
 153

	)

469 
	#STORE_F_STORE_LIST_CERTIFICATE_NEXT
 115

	)

470 
	#STORE_F_STORE_LIST_CERTIFICATE_START
 116

	)

471 
	#STORE_F_STORE_LIST_CRL_END
 117

	)

472 
	#STORE_F_STORE_LIST_CRL_ENDP
 154

	)

473 
	#STORE_F_STORE_LIST_CRL_NEXT
 118

	)

474 
	#STORE_F_STORE_LIST_CRL_START
 119

	)

475 
	#STORE_F_STORE_LIST_PRIVATE_KEY_END
 120

	)

476 
	#STORE_F_STORE_LIST_PRIVATE_KEY_ENDP
 155

	)

477 
	#STORE_F_STORE_LIST_PRIVATE_KEY_NEXT
 121

	)

478 
	#STORE_F_STORE_LIST_PRIVATE_KEY_START
 122

	)

479 
	#STORE_F_STORE_LIST_PUBLIC_KEY_END
 123

	)

480 
	#STORE_F_STORE_LIST_PUBLIC_KEY_ENDP
 156

	)

481 
	#STORE_F_STORE_LIST_PUBLIC_KEY_NEXT
 124

	)

482 
	#STORE_F_STORE_LIST_PUBLIC_KEY_START
 125

	)

483 
	#STORE_F_STORE_MODIFY_ARBITRARY
 162

	)

484 
	#STORE_F_STORE_MODIFY_CERTIFICATE
 163

	)

485 
	#STORE_F_STORE_MODIFY_CRL
 164

	)

486 
	#STORE_F_STORE_MODIFY_NUMBER
 165

	)

487 
	#STORE_F_STORE_MODIFY_PRIVATE_KEY
 166

	)

488 
	#STORE_F_STORE_MODIFY_PUBLIC_KEY
 167

	)

489 
	#STORE_F_STORE_NEW_ENGINE
 133

	)

490 
	#STORE_F_STORE_NEW_METHOD
 132

	)

491 
	#STORE_F_STORE_PARSE_ATTRS_END
 151

	)

492 
	#STORE_F_STORE_PARSE_ATTRS_ENDP
 172

	)

493 
	#STORE_F_STORE_PARSE_ATTRS_NEXT
 152

	)

494 
	#STORE_F_STORE_PARSE_ATTRS_START
 171

	)

495 
	#STORE_F_STORE_REVOKE_CERTIFICATE
 129

	)

496 
	#STORE_F_STORE_REVOKE_PRIVATE_KEY
 130

	)

497 
	#STORE_F_STORE_REVOKE_PUBLIC_KEY
 131

	)

498 
	#STORE_F_STORE_STORE_ARBITRARY
 157

	)

499 
	#STORE_F_STORE_STORE_CERTIFICATE
 100

	)

500 
	#STORE_F_STORE_STORE_CRL
 101

	)

501 
	#STORE_F_STORE_STORE_NUMBER
 126

	)

502 
	#STORE_F_STORE_STORE_PRIVATE_KEY
 127

	)

503 
	#STORE_F_STORE_STORE_PUBLIC_KEY
 128

	)

506 
	#STORE_R_ALREADY_HAS_A_VALUE
 127

	)

507 
	#STORE_R_FAILED_DELETING_ARBITRARY
 132

	)

508 
	#STORE_R_FAILED_DELETING_CERTIFICATE
 100

	)

509 
	#STORE_R_FAILED_DELETING_KEY
 101

	)

510 
	#STORE_R_FAILED_DELETING_NUMBER
 102

	)

511 
	#STORE_R_FAILED_GENERATING_CRL
 103

	)

512 
	#STORE_R_FAILED_GENERATING_KEY
 104

	)

513 
	#STORE_R_FAILED_GETTING_ARBITRARY
 133

	)

514 
	#STORE_R_FAILED_GETTING_CERTIFICATE
 105

	)

515 
	#STORE_R_FAILED_GETTING_KEY
 106

	)

516 
	#STORE_R_FAILED_GETTING_NUMBER
 107

	)

517 
	#STORE_R_FAILED_LISTING_CERTIFICATES
 108

	)

518 
	#STORE_R_FAILED_LISTING_KEYS
 109

	)

519 
	#STORE_R_FAILED_MODIFYING_ARBITRARY
 138

	)

520 
	#STORE_R_FAILED_MODIFYING_CERTIFICATE
 139

	)

521 
	#STORE_R_FAILED_MODIFYING_CRL
 140

	)

522 
	#STORE_R_FAILED_MODIFYING_NUMBER
 141

	)

523 
	#STORE_R_FAILED_MODIFYING_PRIVATE_KEY
 142

	)

524 
	#STORE_R_FAILED_MODIFYING_PUBLIC_KEY
 143

	)

525 
	#STORE_R_FAILED_REVOKING_CERTIFICATE
 110

	)

526 
	#STORE_R_FAILED_REVOKING_KEY
 111

	)

527 
	#STORE_R_FAILED_STORING_ARBITRARY
 134

	)

528 
	#STORE_R_FAILED_STORING_CERTIFICATE
 112

	)

529 
	#STORE_R_FAILED_STORING_KEY
 113

	)

530 
	#STORE_R_FAILED_STORING_NUMBER
 114

	)

531 
	#STORE_R_NOT_IMPLEMENTED
 128

	)

532 
	#STORE_R_NO_CONTROL_FUNCTION
 144

	)

533 
	#STORE_R_NO_DELETE_ARBITRARY_FUNCTION
 135

	)

534 
	#STORE_R_NO_DELETE_NUMBER_FUNCTION
 115

	)

535 
	#STORE_R_NO_DELETE_OBJECT_FUNCTION
 116

	)

536 
	#STORE_R_NO_GENERATE_CRL_FUNCTION
 117

	)

537 
	#STORE_R_NO_GENERATE_OBJECT_FUNCTION
 118

	)

538 
	#STORE_R_NO_GET_OBJECT_ARBITRARY_FUNCTION
 136

	)

539 
	#STORE_R_NO_GET_OBJECT_FUNCTION
 119

	)

540 
	#STORE_R_NO_GET_OBJECT_NUMBER_FUNCTION
 120

	)

541 
	#STORE_R_NO_LIST_OBJECT_ENDP_FUNCTION
 131

	)

542 
	#STORE_R_NO_LIST_OBJECT_END_FUNCTION
 121

	)

543 
	#STORE_R_NO_LIST_OBJECT_NEXT_FUNCTION
 122

	)

544 
	#STORE_R_NO_LIST_OBJECT_START_FUNCTION
 123

	)

545 
	#STORE_R_NO_MODIFY_OBJECT_FUNCTION
 145

	)

546 
	#STORE_R_NO_REVOKE_OBJECT_FUNCTION
 124

	)

547 
	#STORE_R_NO_STORE
 129

	)

548 
	#STORE_R_NO_STORE_OBJECT_ARBITRARY_FUNCTION
 137

	)

549 
	#STORE_R_NO_STORE_OBJECT_FUNCTION
 125

	)

550 
	#STORE_R_NO_STORE_OBJECT_NUMBER_FUNCTION
 126

	)

551 
	#STORE_R_NO_VALUE
 130

	)

553 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/symhacks.h

55 #i‚de‡
HEADER_SYMHACKS_H


56 
	#HEADER_SYMHACKS_H


	)

58 
	~<›ís¶/e_os2.h
>

68 #ifde‡
OPENSSL_SYS_VMS


71 #unde‡
öt_CRYPTO_£t_do_dy∆ock_ˇŒback


72 
	#öt_CRYPTO_£t_do_dy∆ock_ˇŒback
 
öt_CRYPTO_£t_do_dy∆ock_cb


	)

75 #unde‡
CRYPTO_gë_ex_d©a_im∂emíèti⁄


76 
	#CRYPTO_gë_ex_d©a_im∂emíèti⁄
 
CRYPTO_gë_ex_d©a_im∂


	)

77 #unde‡
CRYPTO_£t_ex_d©a_im∂emíèti⁄


78 
	#CRYPTO_£t_ex_d©a_im∂emíèti⁄
 
CRYPTO_£t_ex_d©a_im∂


	)

81 #unde‡
ASN1_STRING_£t_deÁu…_mask_asc


82 
	#ASN1_STRING_£t_deÁu…_mask_asc
 
ASN1_STRING_£t_def_mask_asc


	)

86 #unde‡
i2d_ASN1_SET_OF_PKCS7_SIGNER_INFO


87 
	#i2d_ASN1_SET_OF_PKCS7_SIGNER_INFO
 
i2d_ASN1_SET_OF_PKCS7_SIGINF


	)

88 #unde‡
d2i_ASN1_SET_OF_PKCS7_SIGNER_INFO


89 
	#d2i_ASN1_SET_OF_PKCS7_SIGNER_INFO
 
d2i_ASN1_SET_OF_PKCS7_SIGINF


	)

94 #unde‡
i2d_ASN1_SET_OF_PKCS7_RECIP_INFO


95 
	#i2d_ASN1_SET_OF_PKCS7_RECIP_INFO
 
i2d_ASN1_SET_OF_PKCS7_RECINF


	)

96 #unde‡
d2i_ASN1_SET_OF_PKCS7_RECIP_INFO


97 
	#d2i_ASN1_SET_OF_PKCS7_RECIP_INFO
 
d2i_ASN1_SET_OF_PKCS7_RECINF


	)

102 #unde‡
i2d_ASN1_SET_OF_ACCESS_DESCRIPTION


103 
	#i2d_ASN1_SET_OF_ACCESS_DESCRIPTION
 
i2d_ASN1_SET_OF_ACC_DESC


	)

104 #unde‡
d2i_ASN1_SET_OF_ACCESS_DESCRIPTION


105 
	#d2i_ASN1_SET_OF_ACCESS_DESCRIPTION
 
d2i_ASN1_SET_OF_ACC_DESC


	)

109 #unde‡
PEM_ªad_NETSCAPE_CERT_SEQUENCE


110 
	#PEM_ªad_NETSCAPE_CERT_SEQUENCE
 
PEM_ªad_NS_CERT_SEQ


	)

111 #unde‡
PEM_wrôe_NETSCAPE_CERT_SEQUENCE


112 
	#PEM_wrôe_NETSCAPE_CERT_SEQUENCE
 
PEM_wrôe_NS_CERT_SEQ


	)

113 #unde‡
PEM_ªad_bio_NETSCAPE_CERT_SEQUENCE


114 
	#PEM_ªad_bio_NETSCAPE_CERT_SEQUENCE
 
PEM_ªad_bio_NS_CERT_SEQ


	)

115 #unde‡
PEM_wrôe_bio_NETSCAPE_CERT_SEQUENCE


116 
	#PEM_wrôe_bio_NETSCAPE_CERT_SEQUENCE
 
PEM_wrôe_bio_NS_CERT_SEQ


	)

117 #unde‡
PEM_wrôe_cb_bio_NETSCAPE_CERT_SEQUENCE


118 
	#PEM_wrôe_cb_bio_NETSCAPE_CERT_SEQUENCE
 
PEM_wrôe_cb_bio_NS_CERT_SEQ


	)

121 #unde‡
PEM_ªad_PKCS8_PRIV_KEY_INFO


122 
	#PEM_ªad_PKCS8_PRIV_KEY_INFO
 
PEM_ªad_P8_PRIV_KEY_INFO


	)

123 #unde‡
PEM_wrôe_PKCS8_PRIV_KEY_INFO


124 
	#PEM_wrôe_PKCS8_PRIV_KEY_INFO
 
PEM_wrôe_P8_PRIV_KEY_INFO


	)

125 #unde‡
PEM_ªad_bio_PKCS8_PRIV_KEY_INFO


126 
	#PEM_ªad_bio_PKCS8_PRIV_KEY_INFO
 
PEM_ªad_bio_P8_PRIV_KEY_INFO


	)

127 #unde‡
PEM_wrôe_bio_PKCS8_PRIV_KEY_INFO


128 
	#PEM_wrôe_bio_PKCS8_PRIV_KEY_INFO
 
PEM_wrôe_bio_P8_PRIV_KEY_INFO


	)

129 #unde‡
PEM_wrôe_cb_bio_PKCS8_PRIV_KEY_INFO


130 
	#PEM_wrôe_cb_bio_PKCS8_PRIV_KEY_INFO
 
PEM_wπ_cb_bio_P8_PRIV_KEY_INFO


	)

133 #unde‡
PEM_wrôe_bio_PKCS8Priv©eKey_nid


134 
	#PEM_wrôe_bio_PKCS8Priv©eKey_nid
 
PEM_wrôe_bio_PKCS8PrivKey_nid


	)

137 #unde‡
X509_REVOKED_gë_ext_by_¸ôiˇl


138 
	#X509_REVOKED_gë_ext_by_¸ôiˇl
 
X509_REVOKED_gë_ext_by_¸ôic


	)

139 #unde‡
X509_pﬁicy_åì_gë0_u£r_pﬁicõs


140 
	#X509_pﬁicy_åì_gë0_u£r_pﬁicõs
 
X509_pcy_åì_gë0_u§_pﬁicõs


	)

141 #unde‡
X509_pﬁicy_node_gë0_quÆifõrs


142 
	#X509_pﬁicy_node_gë0_quÆifõrs
 
X509_pcy_node_gë0_quÆifõrs


	)

143 #unde‡
X509_STORE_CTX_gë_ex∂icô_pﬁicy


144 
	#X509_STORE_CTX_gë_ex∂icô_pﬁicy
 
X509_STORE_CTX_gë_ex∂_pﬁicy


	)

145 #unde‡
X509_STORE_CTX_gë0_cuºít_issuî


146 
	#X509_STORE_CTX_gë0_cuºít_issuî
 
X509_STORE_CTX_gë0_cur_issuî


	)

149 #unde‡
CRYPTO_£t_dy∆ock_de°roy_ˇŒback


150 
	#CRYPTO_£t_dy∆ock_de°roy_ˇŒback
 
CRYPTO_£t_dy∆ock_de°roy_cb


	)

151 #unde‡
CRYPTO_£t_dy∆ock_¸óã_ˇŒback


152 
	#CRYPTO_£t_dy∆ock_¸óã_ˇŒback
 
CRYPTO_£t_dy∆ock_¸óã_cb


	)

153 #unde‡
CRYPTO_£t_dy∆ock_lock_ˇŒback


154 
	#CRYPTO_£t_dy∆ock_lock_ˇŒback
 
CRYPTO_£t_dy∆ock_lock_cb


	)

155 #unde‡
CRYPTO_gë_dy∆ock_lock_ˇŒback


156 
	#CRYPTO_gë_dy∆ock_lock_ˇŒback
 
CRYPTO_gë_dy∆ock_lock_cb


	)

157 #unde‡
CRYPTO_gë_dy∆ock_de°roy_ˇŒback


158 
	#CRYPTO_gë_dy∆ock_de°roy_ˇŒback
 
CRYPTO_gë_dy∆ock_de°roy_cb


	)

159 #unde‡
CRYPTO_gë_dy∆ock_¸óã_ˇŒback


160 
	#CRYPTO_gë_dy∆ock_¸óã_ˇŒback
 
CRYPTO_gë_dy∆ock_¸óã_cb


	)

161 #unde‡
CRYPTO_£t_locked_mem_ex_fun˘i⁄s


162 
	#CRYPTO_£t_locked_mem_ex_fun˘i⁄s
 
CRYPTO_£t_locked_mem_ex_funcs


	)

163 #unde‡
CRYPTO_gë_locked_mem_ex_fun˘i⁄s


164 
	#CRYPTO_gë_locked_mem_ex_fun˘i⁄s
 
CRYPTO_gë_locked_mem_ex_funcs


	)

167 #unde‡
SSL_CTX_£t_deÁu…_vîify_∑ths


168 
	#SSL_CTX_£t_deÁu…_vîify_∑ths
 
SSL_CTX_£t_def_vîify_∑ths


	)

169 #unde‡
SSL_gë_ex_d©a_X509_STORE_CTX_idx


170 
	#SSL_gë_ex_d©a_X509_STORE_CTX_idx
 
SSL_gë_ex_d_X509_STORE_CTX_idx


	)

171 #unde‡
SSL_add_fûe_˚π_subje˘s_to_°ack


172 
	#SSL_add_fûe_˚π_subje˘s_to_°ack
 
SSL_add_fûe_˚π_subjs_to_°k


	)

173 #unde‡
SSL_add_dú_˚π_subje˘s_to_°ack


174 
	#SSL_add_dú_˚π_subje˘s_to_°ack
 
SSL_add_dú_˚π_subjs_to_°k


	)

175 #unde‡
SSL_CTX_u£_˚πifiˇã_chaö_fûe


176 
	#SSL_CTX_u£_˚πifiˇã_chaö_fûe
 
SSL_CTX_u£_˚π_chaö_fûe


	)

177 #unde‡
SSL_CTX_£t_˚π_vîify_ˇŒback


178 
	#SSL_CTX_£t_˚π_vîify_ˇŒback
 
SSL_CTX_£t_˚π_vîify_cb


	)

179 #unde‡
SSL_CTX_£t_deÁu…_∑sswd_cb_u£rd©a


180 
	#SSL_CTX_£t_deÁu…_∑sswd_cb_u£rd©a
 
SSL_CTX_£t_def_∑sswd_cb_ud


	)

181 #unde‡
SSL_COMP_gë_com¥essi⁄_mëhods


182 
	#SSL_COMP_gë_com¥essi⁄_mëhods
 
SSL_COMP_gë_com¥ess_mëhods


	)

184 #unde‡
s¶_add_˛õ¡hñlo_ª√gŸüã_ext


185 
	#s¶_add_˛õ¡hñlo_ª√gŸüã_ext
 
s¶_add_˛õ¡hñlo_ª√g_ext


	)

186 #unde‡
s¶_add_£rvîhñlo_ª√gŸüã_ext


187 
	#s¶_add_£rvîhñlo_ª√gŸüã_ext
 
s¶_add_£rvîhñlo_ª√g_ext


	)

188 #unde‡
s¶_∑r£_˛õ¡hñlo_ª√gŸüã_ext


189 
	#s¶_∑r£_˛õ¡hñlo_ª√gŸüã_ext
 
s¶_∑r£_˛õ¡hñlo_ª√g_ext


	)

190 #unde‡
s¶_∑r£_£rvîhñlo_ª√gŸüã_ext


191 
	#s¶_∑r£_£rvîhñlo_ª√gŸüã_ext
 
s¶_∑r£_£rvîhñlo_ª√g_ext


	)

194 #unde‡
ENGINE_gë_deÁu…_BN_mod_exp_¸t


195 
	#ENGINE_gë_deÁu…_BN_mod_exp_¸t
 
ENGINE_gë_def_BN_mod_exp_¸t


	)

196 #unde‡
ENGINE_£t_deÁu…_BN_mod_exp_¸t


197 
	#ENGINE_£t_deÁu…_BN_mod_exp_¸t
 
ENGINE_£t_def_BN_mod_exp_¸t


	)

198 #unde‡
ENGINE_£t_lﬂd_¥ivkey_fun˘i⁄


199 
	#ENGINE_£t_lﬂd_¥ivkey_fun˘i⁄
 
ENGINE_£t_lﬂd_¥ivkey_‚


	)

200 #unde‡
ENGINE_gë_lﬂd_¥ivkey_fun˘i⁄


201 
	#ENGINE_gë_lﬂd_¥ivkey_fun˘i⁄
 
ENGINE_gë_lﬂd_¥ivkey_‚


	)

202 #unde‡
ENGINE_£t_lﬂd_s¶_˛õ¡_˚π_fun˘i⁄


203 
	#ENGINE_£t_lﬂd_s¶_˛õ¡_˚π_fun˘i⁄
 \

204 
ENGINE_£t_ld_s¶_˛¡_˚π_‚


	)

205 #unde‡
ENGINE_gë_s¶_˛õ¡_˚π_fun˘i⁄


206 
	#ENGINE_gë_s¶_˛õ¡_˚π_fun˘i⁄
 
ENGINE_gë_s¶_˛õ¡_˚π_‚


	)

209 #unde‡
OCSP_REQUEST_gë_ext_by_¸ôiˇl


210 
	#OCSP_REQUEST_gë_ext_by_¸ôiˇl
 
OCSP_REQUEST_gë_ext_by_¸ô


	)

211 #unde‡
OCSP_BASICRESP_gë_ext_by_¸ôiˇl


212 
	#OCSP_BASICRESP_gë_ext_by_¸ôiˇl
 
OCSP_BASICRESP_gë_ext_by_¸ô


	)

213 #unde‡
OCSP_SINGLERESP_gë_ext_by_¸ôiˇl


214 
	#OCSP_SINGLERESP_gë_ext_by_¸ôiˇl
 
OCSP_SINGLERESP_gë_ext_by_¸ô


	)

217 #unde‡
_os¶_ﬁd_des_ede3_cfb64_í¸y±


218 
	#_os¶_ﬁd_des_ede3_cfb64_í¸y±
 
_os¶_odes_ede3_cfb64_í¸y±


	)

219 #unde‡
_os¶_ﬁd_des_ede3_ofb64_í¸y±


220 
	#_os¶_ﬁd_des_ede3_ofb64_í¸y±
 
_os¶_odes_ede3_ofb64_í¸y±


	)

223 #unde‡
OPENSSL_add_Æl_Æg‹ôhms_noc⁄f


224 
	#OPENSSL_add_Æl_Æg‹ôhms_noc⁄f
 
OPENSSL_add_Æl_Ægo_noc⁄f


	)

225 #unde‡
OPENSSL_add_Æl_Æg‹ôhms_c⁄f


226 
	#OPENSSL_add_Æl_Æg‹ôhms_c⁄f
 
OPENSSL_add_Æl_Ægo_c⁄f


	)

229 #unde‡
EC_GROUP_£t_poöt_c⁄vîsi⁄_f‹m


230 
	#EC_GROUP_£t_poöt_c⁄vîsi⁄_f‹m
 
EC_GROUP_£t_poöt_c⁄v_f‹m


	)

231 #unde‡
EC_GROUP_gë_poöt_c⁄vîsi⁄_f‹m


232 
	#EC_GROUP_gë_poöt_c⁄vîsi⁄_f‹m
 
EC_GROUP_gë_poöt_c⁄v_f‹m


	)

233 #unde‡
EC_GROUP_˛ór_‰ì_Æl_exåa_d©a


234 
	#EC_GROUP_˛ór_‰ì_Æl_exåa_d©a
 
EC_GROUP_˛r_‰ì_Æl_xåa_d©a


	)

235 #unde‡
EC_POINT_£t_J¥oje˘ive_co‹dö©es_GFp


236 
	#EC_POINT_£t_J¥oje˘ive_co‹dö©es_GFp
 \

237 
EC_POINT_£t_J¥oj_co‹ds_GFp


	)

238 #unde‡
EC_POINT_gë_J¥oje˘ive_co‹dö©es_GFp


239 
	#EC_POINT_gë_J¥oje˘ive_co‹dö©es_GFp
 \

240 
EC_POINT_gë_J¥oj_co‹ds_GFp


	)

241 #unde‡
EC_POINT_£t_afföe_co‹dö©es_GFp


242 
	#EC_POINT_£t_afföe_co‹dö©es_GFp
 
EC_POINT_£t_afföe_co‹ds_GFp


	)

243 #unde‡
EC_POINT_gë_afföe_co‹dö©es_GFp


244 
	#EC_POINT_gë_afföe_co‹dö©es_GFp
 
EC_POINT_gë_afföe_co‹ds_GFp


	)

245 #unde‡
EC_POINT_£t_com¥es£d_co‹dö©es_GFp


246 
	#EC_POINT_£t_com¥es£d_co‹dö©es_GFp
 
EC_POINT_£t_com¥_co‹ds_GFp


	)

247 #unde‡
EC_POINT_£t_afföe_co‹dö©es_GF2m


248 
	#EC_POINT_£t_afföe_co‹dö©es_GF2m
 
EC_POINT_£t_afföe_co‹ds_GF2m


	)

249 #unde‡
EC_POINT_gë_afföe_co‹dö©es_GF2m


250 
	#EC_POINT_gë_afföe_co‹dö©es_GF2m
 
EC_POINT_gë_afföe_co‹ds_GF2m


	)

251 #unde‡
EC_POINT_£t_com¥es£d_co‹dö©es_GF2m


252 
	#EC_POINT_£t_com¥es£d_co‹dö©es_GF2m
 \

253 
EC_POINT_£t_com¥_co‹ds_GF2m


	)

254 #unde‡
ec_GF2m_sim∂e_group_˛ór_föish


255 
	#ec_GF2m_sim∂e_group_˛ór_föish
 
ec_GF2m_sim∂e_gΩ_˛r_föish


	)

256 #unde‡
ec_GF2m_sim∂e_group_check_dis¸imö™t


257 
	#ec_GF2m_sim∂e_group_check_dis¸imö™t
 
ec_GF2m_sim∂e_gΩ_chk_dis¸im


	)

258 #unde‡
ec_GF2m_sim∂e_poöt_˛ór_föish


259 
	#ec_GF2m_sim∂e_poöt_˛ór_föish
 
ec_GF2m_sim∂e_±_˛r_föish


	)

260 #unde‡
ec_GF2m_sim∂e_poöt_£t_to_öföôy


261 
	#ec_GF2m_sim∂e_poöt_£t_to_öföôy
 
ec_GF2m_sim∂e_±_£t_to_öf


	)

262 #unde‡
ec_GF2m_sim∂e_poöts_make_afföe


263 
	#ec_GF2m_sim∂e_poöts_make_afföe
 
ec_GF2m_sim∂e_±s_make_afföe


	)

264 #unde‡
ec_GF2m_sim∂e_poöt_£t_afföe_co‹dö©es


265 
	#ec_GF2m_sim∂e_poöt_£t_afföe_co‹dö©es
 \

266 
ec_GF2m_smp_±_£t_af_co‹ds


	)

267 #unde‡
ec_GF2m_sim∂e_poöt_gë_afföe_co‹dö©es


268 
	#ec_GF2m_sim∂e_poöt_gë_afföe_co‹dö©es
 \

269 
ec_GF2m_smp_±_gë_af_co‹ds


	)

270 #unde‡
ec_GF2m_sim∂e_£t_com¥es£d_co‹dö©es


271 
	#ec_GF2m_sim∂e_£t_com¥es£d_co‹dö©es
 \

272 
ec_GF2m_smp_£t_com¥_co‹ds


	)

273 #unde‡
ec_GFp_sim∂e_group_£t_curve_GFp


274 
	#ec_GFp_sim∂e_group_£t_curve_GFp
 
ec_GFp_sim∂e_gΩ_£t_curve_GFp


	)

275 #unde‡
ec_GFp_sim∂e_group_gë_curve_GFp


276 
	#ec_GFp_sim∂e_group_gë_curve_GFp
 
ec_GFp_sim∂e_gΩ_gë_curve_GFp


	)

277 #unde‡
ec_GFp_sim∂e_group_˛ór_föish


278 
	#ec_GFp_sim∂e_group_˛ór_föish
 
ec_GFp_sim∂e_gΩ_˛ór_föish


	)

279 #unde‡
ec_GFp_sim∂e_group_£t_gíî©‹


280 
	#ec_GFp_sim∂e_group_£t_gíî©‹
 
ec_GFp_sim∂e_gΩ_£t_gíî©‹


	)

281 #unde‡
ec_GFp_sim∂e_group_gë0_gíî©‹


282 
	#ec_GFp_sim∂e_group_gë0_gíî©‹
 
ec_GFp_sim∂e_gΩ_gt0_gíî©‹


	)

283 #unde‡
ec_GFp_sim∂e_group_gë_coÁ˘‹


284 
	#ec_GFp_sim∂e_group_gë_coÁ˘‹
 
ec_GFp_sim∂e_gΩ_gë_coÁ˘‹


	)

285 #unde‡
ec_GFp_sim∂e_poöt_˛ór_föish


286 
	#ec_GFp_sim∂e_poöt_˛ór_föish
 
ec_GFp_sim∂e_±_˛ór_föish


	)

287 #unde‡
ec_GFp_sim∂e_poöt_£t_to_öföôy


288 
	#ec_GFp_sim∂e_poöt_£t_to_öföôy
 
ec_GFp_sim∂e_±_£t_to_öf


	)

289 #unde‡
ec_GFp_sim∂e_poöts_make_afföe


290 
	#ec_GFp_sim∂e_poöts_make_afföe
 
ec_GFp_sim∂e_±s_make_afföe


	)

291 #unde‡
ec_GFp_sim∂e_£t_J¥oje˘ive_co‹dö©es_GFp


292 
	#ec_GFp_sim∂e_£t_J¥oje˘ive_co‹dö©es_GFp
 \

293 
ec_GFp_smp_£t_J¥oj_co‹ds_GFp


	)

294 #unde‡
ec_GFp_sim∂e_gë_J¥oje˘ive_co‹dö©es_GFp


295 
	#ec_GFp_sim∂e_gë_J¥oje˘ive_co‹dö©es_GFp
 \

296 
ec_GFp_smp_gë_J¥oj_co‹ds_GFp


	)

297 #unde‡
ec_GFp_sim∂e_poöt_£t_afföe_co‹dö©es_GFp


298 
	#ec_GFp_sim∂e_poöt_£t_afföe_co‹dö©es_GFp
 \

299 
ec_GFp_smp_±_£t_af_co‹ds_GFp


	)

300 #unde‡
ec_GFp_sim∂e_poöt_gë_afföe_co‹dö©es_GFp


301 
	#ec_GFp_sim∂e_poöt_gë_afföe_co‹dö©es_GFp
 \

302 
ec_GFp_smp_±_gë_af_co‹ds_GFp


	)

303 #unde‡
ec_GFp_sim∂e_£t_com¥es£d_co‹dö©es_GFp


304 
	#ec_GFp_sim∂e_£t_com¥es£d_co‹dö©es_GFp
 \

305 
ec_GFp_smp_£t_com¥_co‹ds_GFp


	)

306 #unde‡
ec_GFp_sim∂e_poöt_£t_afföe_co‹dö©es


307 
	#ec_GFp_sim∂e_poöt_£t_afföe_co‹dö©es
 \

308 
ec_GFp_smp_±_£t_af_co‹ds


	)

309 #unde‡
ec_GFp_sim∂e_poöt_gë_afföe_co‹dö©es


310 
	#ec_GFp_sim∂e_poöt_gë_afföe_co‹dö©es
 \

311 
ec_GFp_smp_±_gë_af_co‹ds


	)

312 #unde‡
ec_GFp_sim∂e_£t_com¥es£d_co‹dö©es


313 
	#ec_GFp_sim∂e_£t_com¥es£d_co‹dö©es
 \

314 
ec_GFp_smp_£t_com¥_co‹ds


	)

315 #unde‡
ec_GFp_sim∂e_group_check_dis¸imö™t


316 
	#ec_GFp_sim∂e_group_check_dis¸imö™t
 
ec_GFp_sim∂e_gΩ_chk_dis¸im


	)

319 #unde‡
STORE_mëhod_£t_öôüli£_fun˘i⁄


320 
	#STORE_mëhod_£t_öôüli£_fun˘i⁄
 
STORE_mëh_£t_öôüli£_‚


	)

321 #unde‡
STORE_mëhod_£t_˛ónup_fun˘i⁄


322 
	#STORE_mëhod_£t_˛ónup_fun˘i⁄
 
STORE_mëh_£t_˛ónup_‚


	)

323 #unde‡
STORE_mëhod_£t_gíî©e_fun˘i⁄


324 
	#STORE_mëhod_£t_gíî©e_fun˘i⁄
 
STORE_mëh_£t_gíî©e_‚


	)

325 #unde‡
STORE_mëhod_£t_modify_fun˘i⁄


326 
	#STORE_mëhod_£t_modify_fun˘i⁄
 
STORE_mëh_£t_modify_‚


	)

327 #unde‡
STORE_mëhod_£t_ªvoke_fun˘i⁄


328 
	#STORE_mëhod_£t_ªvoke_fun˘i⁄
 
STORE_mëh_£t_ªvoke_‚


	)

329 #unde‡
STORE_mëhod_£t_dñëe_fun˘i⁄


330 
	#STORE_mëhod_£t_dñëe_fun˘i⁄
 
STORE_mëh_£t_dñëe_‚


	)

331 #unde‡
STORE_mëhod_£t_li°_°¨t_fun˘i⁄


332 
	#STORE_mëhod_£t_li°_°¨t_fun˘i⁄
 
STORE_mëh_£t_li°_°¨t_‚


	)

333 #unde‡
STORE_mëhod_£t_li°_√xt_fun˘i⁄


334 
	#STORE_mëhod_£t_li°_√xt_fun˘i⁄
 
STORE_mëh_£t_li°_√xt_‚


	)

335 #unde‡
STORE_mëhod_£t_li°_íd_fun˘i⁄


336 
	#STORE_mëhod_£t_li°_íd_fun˘i⁄
 
STORE_mëh_£t_li°_íd_‚


	)

337 #unde‡
STORE_mëhod_£t_upd©e_°‹e_fun˘i⁄


338 
	#STORE_mëhod_£t_upd©e_°‹e_fun˘i⁄
 
STORE_mëh_£t_upd©e_°‹e_‚


	)

339 #unde‡
STORE_mëhod_£t_lock_°‹e_fun˘i⁄


340 
	#STORE_mëhod_£t_lock_°‹e_fun˘i⁄
 
STORE_mëh_£t_lock_°‹e_‚


	)

341 #unde‡
STORE_mëhod_£t_u∆ock_°‹e_fun˘i⁄


342 
	#STORE_mëhod_£t_u∆ock_°‹e_fun˘i⁄
 
STORE_mëh_£t_u∆ock_°‹e_‚


	)

343 #unde‡
STORE_mëhod_gë_öôüli£_fun˘i⁄


344 
	#STORE_mëhod_gë_öôüli£_fun˘i⁄
 
STORE_mëh_gë_öôüli£_‚


	)

345 #unde‡
STORE_mëhod_gë_˛ónup_fun˘i⁄


346 
	#STORE_mëhod_gë_˛ónup_fun˘i⁄
 
STORE_mëh_gë_˛ónup_‚


	)

347 #unde‡
STORE_mëhod_gë_gíî©e_fun˘i⁄


348 
	#STORE_mëhod_gë_gíî©e_fun˘i⁄
 
STORE_mëh_gë_gíî©e_‚


	)

349 #unde‡
STORE_mëhod_gë_modify_fun˘i⁄


350 
	#STORE_mëhod_gë_modify_fun˘i⁄
 
STORE_mëh_gë_modify_‚


	)

351 #unde‡
STORE_mëhod_gë_ªvoke_fun˘i⁄


352 
	#STORE_mëhod_gë_ªvoke_fun˘i⁄
 
STORE_mëh_gë_ªvoke_‚


	)

353 #unde‡
STORE_mëhod_gë_dñëe_fun˘i⁄


354 
	#STORE_mëhod_gë_dñëe_fun˘i⁄
 
STORE_mëh_gë_dñëe_‚


	)

355 #unde‡
STORE_mëhod_gë_li°_°¨t_fun˘i⁄


356 
	#STORE_mëhod_gë_li°_°¨t_fun˘i⁄
 
STORE_mëh_gë_li°_°¨t_‚


	)

357 #unde‡
STORE_mëhod_gë_li°_√xt_fun˘i⁄


358 
	#STORE_mëhod_gë_li°_√xt_fun˘i⁄
 
STORE_mëh_gë_li°_√xt_‚


	)

359 #unde‡
STORE_mëhod_gë_li°_íd_fun˘i⁄


360 
	#STORE_mëhod_gë_li°_íd_fun˘i⁄
 
STORE_mëh_gë_li°_íd_‚


	)

361 #unde‡
STORE_mëhod_gë_upd©e_°‹e_fun˘i⁄


362 
	#STORE_mëhod_gë_upd©e_°‹e_fun˘i⁄
 
STORE_mëh_gë_upd©e_°‹e_‚


	)

363 #unde‡
STORE_mëhod_gë_lock_°‹e_fun˘i⁄


364 
	#STORE_mëhod_gë_lock_°‹e_fun˘i⁄
 
STORE_mëh_gë_lock_°‹e_‚


	)

365 #unde‡
STORE_mëhod_gë_u∆ock_°‹e_fun˘i⁄


366 
	#STORE_mëhod_gë_u∆ock_°‹e_fun˘i⁄
 
STORE_mëh_gë_u∆ock_°‹e_‚


	)

369 #unde‡
CMS_Recùõ¡Info_kåi_gë0_Ægs


370 
	#CMS_Recùõ¡Info_kåi_gë0_Ægs
 
CMS_RecùInfo_kåi_gë0_Ægs


	)

371 #unde‡
CMS_Recùõ¡Info_kåi_gë0_sig√r_id


372 
	#CMS_Recùõ¡Info_kåi_gë0_sig√r_id
 
CMS_RecùInfo_kåi_gë0_sigr_id


	)

373 #unde‡
CMS_OthîRevoˇti⁄InfoF‹m©_ô


374 
	#CMS_OthîRevoˇti⁄InfoF‹m©_ô
 
CMS_OthîRevocInfoF‹m©_ô


	)

375 #unde‡
CMS_KeyAgªeRecùõ¡Idítifõr_ô


376 
	#CMS_KeyAgªeRecùõ¡Idítifõr_ô
 
CMS_KeyAgªeRecùIdítifõr_ô


	)

377 #unde‡
CMS_Origö©‹IdítifõrOrKey_ô


378 
	#CMS_Origö©‹IdítifõrOrKey_ô
 
CMS_Origö©‹IdOrKey_ô


	)

379 #unde‡
cms_Sig√rIdítifõr_gë0_sig√r_id


380 
	#cms_Sig√rIdítifõr_gë0_sig√r_id
 
cms_Sig√rId_gë0_sig√r_id


	)

383 #unde‡
dés1_ªå™smô_buf„ªd_mesßges


384 
	#dés1_ªå™smô_buf„ªd_mesßges
 
dés1_ªå™smô_buf„ªd_msgs


	)

390 #i‡
deföed
(
OPENSSL_SYS_WIN16
Ë|| deföed(
OPENSSL_SYS_VMS
Ë|| deföed(
OPENSSL_SYS_OS2
)

391 #unde‡
ERR_lﬂd_CRYPTO_°rögs


392 
	#ERR_lﬂd_CRYPTO_°rögs
 
ERR_lﬂd_CRYPTOlib_°rögs


	)

393 #unde‡
OCSP_¸lID_√w


394 
	#OCSP_¸lID_√w
 
OCSP_¸lID2_√w


	)

396 #unde‡
d2i_ECPARAMETERS


397 
	#d2i_ECPARAMETERS
 
d2i_UC_ECPARAMETERS


	)

398 #unde‡
i2d_ECPARAMETERS


399 
	#i2d_ECPARAMETERS
 
i2d_UC_ECPARAMETERS


	)

400 #unde‡
d2i_ECPKPARAMETERS


401 
	#d2i_ECPKPARAMETERS
 
d2i_UC_ECPKPARAMETERS


	)

402 #unde‡
i2d_ECPKPARAMETERS


403 
	#i2d_ECPKPARAMETERS
 
i2d_UC_ECPKPARAMETERS


	)

411 #unde‡
X509v3_˛ónup_exãnsi⁄s


412 
	#X509v3_˛ónup_exãnsi⁄s
 
oX509v3_˛ónup_exãnsi⁄s


	)

413 #unde‡
X509v3_add_exãnsi⁄


414 
	#X509v3_add_exãnsi⁄
 
oX509v3_add_exãnsi⁄


	)

415 #unde‡
X509v3_add_√tsˇ≥_exãnsi⁄s


416 
	#X509v3_add_√tsˇ≥_exãnsi⁄s
 
oX509v3_add_√tsˇ≥_exãnsi⁄s


	)

417 #unde‡
X509v3_add_°™d¨d_exãnsi⁄s


418 
	#X509v3_add_°™d¨d_exãnsi⁄s
 
oX509v3_add_°™d¨d_exãnsi⁄s


	)

426 #unde‡
cms_D©a_¸óã


427 
	#cms_D©a_¸óã
 
¥iv_cms_D©a_¸óã


	)

	@/usr/include/openssl/ui.h

59 #i‚de‡
HEADER_UI_H


60 
	#HEADER_UI_H


	)

62 
	~<AvaûabûôyMa¸os.h
>

64 #i‚de‡
OPENSSL_NO_DEPRECATED


65 
	~<›ís¶/¸y±o.h
>

67 
	~<›ís¶/ß„°ack.h
>

68 
	~<›ís¶/os¶_typ.h
>

70 #ifde‡ 
__˝lu•lus


85 
UI
 *
UI_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

86 
UI
 *
UI_√w_mëhod
(c⁄° 
UI_METHOD
 *
mëhod
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

87 
UI_‰ì
(
UI
 *
ui
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

132 
UI_add_öput_°rög
(
UI
 *
ui
, c⁄° *
¥om±
, 
Êags
,

133 *
ªsu…_buf
, 
mösize
, 
maxsize
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

134 
UI_dup_öput_°rög
(
UI
 *
ui
, c⁄° *
¥om±
, 
Êags
,

135 *
ªsu…_buf
, 
mösize
, 
maxsize
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

136 
UI_add_vîify_°rög
(
UI
 *
ui
, c⁄° *
¥om±
, 
Êags
,

137 *
ªsu…_buf
, 
mösize
, 
maxsize
, c⁄° *
ã°_buf
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

138 
UI_dup_vîify_°rög
(
UI
 *
ui
, c⁄° *
¥om±
, 
Êags
,

139 *
ªsu…_buf
, 
mösize
, 
maxsize
, c⁄° *
ã°_buf
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

140 
UI_add_öput_boﬁón
(
UI
 *
ui
, c⁄° *
¥om±
, c⁄° *
a˘i⁄_desc
,

141 c⁄° *
ok_ch¨s
, c⁄° *
ˇn˚l_ch¨s
,

142 
Êags
, *
ªsu…_buf
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

143 
UI_dup_öput_boﬁón
(
UI
 *
ui
, c⁄° *
¥om±
, c⁄° *
a˘i⁄_desc
,

144 c⁄° *
ok_ch¨s
, c⁄° *
ˇn˚l_ch¨s
,

145 
Êags
, *
ªsu…_buf
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

146 
UI_add_öfo_°rög
(
UI
 *
ui
, c⁄° *
ãxt
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

147 
UI_dup_öfo_°rög
(
UI
 *
ui
, c⁄° *
ãxt
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

148 
UI_add_îr‹_°rög
(
UI
 *
ui
, c⁄° *
ãxt
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

149 
UI_dup_îr‹_°rög
(
UI
 *
ui
, c⁄° *
ãxt
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

153 
	#UI_INPUT_FLAG_ECHO
 0x01

	)

159 
	#UI_INPUT_FLAG_DEFAULT_PWD
 0x02

	)

170 
	#UI_INPUT_FLAG_USER_BASE
 16

	)

190 *
UI_c⁄°ru˘_¥om±
(
UI
 *
ui_mëhod
,

191 c⁄° *
obje˘_desc
, c⁄° *
obje˘_«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

203 *
UI_add_u£r_d©a
(
UI
 *
ui
, *
u£r_d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

205 *
UI_gë0_u£r_d©a
(
UI
 *
ui
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

208 c⁄° *
UI_gë0_ªsu…
(
UI
 *
ui
, 
i
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

211 
UI_¥o˚ss
(
UI
 *
ui
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

216 
UI_˘æ
(
UI
 *
ui
, 
cmd
, 
i
, *
p
, (*
f
)()Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

222 
	#UI_CTRL_PRINT_ERRORS
 1

	)

226 
	#UI_CTRL_IS_REDOABLE
 2

	)

230 
	#UI_£t_≠p_d©a
(
s
,
¨g
Ë
	`UI_£t_ex_d©a
(s,0,¨g)

	)

231 
	#UI_gë_≠p_d©a
(
s
Ë
	`UI_gë_ex_d©a
(s,0)

	)

232 
UI_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w
 *
√w_func
,

233 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

234 
UI_£t_ex_d©a
(
UI
 *
r
,
idx
,*
¨g
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

235 *
UI_gë_ex_d©a
(
UI
 *
r
, 
idx
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

238 
UI_£t_deÁu…_mëhod
(c⁄° 
UI_METHOD
 *
mëh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

239 c⁄° 
UI_METHOD
 *
UI_gë_deÁu…_mëhod
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

240 c⁄° 
UI_METHOD
 *
UI_gë_mëhod
(
UI
 *
ui
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

241 c⁄° 
UI_METHOD
 *
UI_£t_mëhod
(
UI
 *
ui
, c⁄° UI_METHOD *
mëh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

244 
UI_METHOD
 *
UI_O≥nSSL
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

292 
DECLARE_STACK_OF
(
UI_STRING
)

293 
ui_°rög_°
 
	tUI_STRING
;

297 
	eUI_°rög_ty≥s


299 
UIT_NONE
=0,

300 
UIT_PROMPT
,

301 
UIT_VERIFY
,

302 
UIT_BOOLEAN
,

303 
UIT_INFO
,

304 
UIT_ERROR


308 
UI_METHOD
 *
UI_¸óã_mëhod
(*
«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

309 
UI_de°roy_mëhod
(
UI_METHOD
 *
ui_mëhod
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

310 
UI_mëhod_£t_›íî
(
UI_METHOD
 *
mëhod
, (*
›íî
)(
UI
 *
ui
)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

311 
UI_mëhod_£t_wrôî
(
UI_METHOD
 *
mëhod
, (*
wrôî
)(
UI
 *
ui
, 
UI_STRING
 *
uis
)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

312 
UI_mëhod_£t_Êushî
(
UI_METHOD
 *
mëhod
, (*
Êushî
)(
UI
 *
ui
)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

313 
UI_mëhod_£t_ªadî
(
UI_METHOD
 *
mëhod
, (*
ªadî
)(
UI
 *
ui
, 
UI_STRING
 *
uis
)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

314 
UI_mëhod_£t_˛o£r
(
UI_METHOD
 *
mëhod
, (*
˛o£r
)(
UI
 *
ui
)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

315 (*
UI_mëhod_gë_›íî
(
UI_METHOD
 *
mëhod
))(
UI
*Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

316 (*
UI_mëhod_gë_wrôî
(
UI_METHOD
 *
mëhod
))(
UI
*,
UI_STRING
*Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

317 (*
UI_mëhod_gë_Êushî
(
UI_METHOD
 *
mëhod
))(
UI
*Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

318 (*
UI_mëhod_gë_ªadî
(
UI_METHOD
 *
mëhod
))(
UI
*,
UI_STRING
*Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

319 (*
UI_mëhod_gë_˛o£r
(
UI_METHOD
 *
mëhod
))(
UI
*Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

325 
UI_°rög_ty≥s
 
UI_gë_°rög_ty≥
(
UI_STRING
 *
uis
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

327 
UI_gë_öput_Êags
(
UI_STRING
 *
uis
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

329 c⁄° *
UI_gë0_ouçut_°rög
(
UI_STRING
 *
uis
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

331 c⁄° *
UI_gë0_a˘i⁄_°rög
(
UI_STRING
 *
uis
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

333 c⁄° *
UI_gë0_ªsu…_°rög
(
UI_STRING
 *
uis
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

335 c⁄° *
UI_gë0_ã°_°rög
(
UI_STRING
 *
uis
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

337 
UI_gë_ªsu…_mösize
(
UI_STRING
 *
uis
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

339 
UI_gë_ªsu…_maxsize
(
UI_STRING
 *
uis
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

341 
UI_£t_ªsu…
(
UI
 *
ui
, 
UI_STRING
 *
uis
, c⁄° *
ªsu…
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

345 
UI_UTIL_ªad_pw_°rög
(*
buf
,
Àngth
,c⁄° *
¥om±
,
vîify
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

346 
UI_UTIL_ªad_pw
(*
buf
,*
buff
,
size
,c⁄° *
¥om±
,
vîify
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

353 
ERR_lﬂd_UI_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

358 
	#UI_F_GENERAL_ALLOCATE_BOOLEAN
 108

	)

359 
	#UI_F_GENERAL_ALLOCATE_PROMPT
 109

	)

360 
	#UI_F_GENERAL_ALLOCATE_STRING
 100

	)

361 
	#UI_F_UI_CTRL
 111

	)

362 
	#UI_F_UI_DUP_ERROR_STRING
 101

	)

363 
	#UI_F_UI_DUP_INFO_STRING
 102

	)

364 
	#UI_F_UI_DUP_INPUT_BOOLEAN
 110

	)

365 
	#UI_F_UI_DUP_INPUT_STRING
 103

	)

366 
	#UI_F_UI_DUP_VERIFY_STRING
 106

	)

367 
	#UI_F_UI_GET0_RESULT
 107

	)

368 
	#UI_F_UI_NEW_METHOD
 104

	)

369 
	#UI_F_UI_SET_RESULT
 105

	)

372 
	#UI_R_COMMON_OK_AND_CANCEL_CHARACTERS
 104

	)

373 
	#UI_R_INDEX_TOO_LARGE
 102

	)

374 
	#UI_R_INDEX_TOO_SMALL
 103

	)

375 
	#UI_R_NO_RESULT_BUFFER
 105

	)

376 
	#UI_R_RESULT_TOO_LARGE
 100

	)

377 
	#UI_R_RESULT_TOO_SMALL
 101

	)

378 
	#UI_R_UNKNOWN_CONTROL_COMMAND
 106

	)

380 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/x509.h

64 #i‚de‡
HEADER_X509_H


65 
	#HEADER_X509_H


	)

67 
	~<AvaûabûôyMa¸os.h
>

69 
	~<›ís¶/e_os2.h
>

70 
	~<›ís¶/symhacks.h
>

71 #i‚de‡
OPENSSL_NO_BUFFER


72 
	~<›ís¶/buf„r.h
>

74 #i‚de‡
OPENSSL_NO_EVP


75 
	~<›ís¶/evp.h
>

77 #i‚de‡
OPENSSL_NO_BIO


78 
	~<›ís¶/bio.h
>

80 
	~<›ís¶/°ack.h
>

81 
	~<›ís¶/a¢1.h
>

82 
	~<›ís¶/ß„°ack.h
>

84 #i‚de‡
OPENSSL_NO_EC


85 
	~<›ís¶/ec.h
>

88 #i‚de‡
OPENSSL_NO_ECDSA


89 
	~<›ís¶/ecdß.h
>

92 #i‚de‡
OPENSSL_NO_ECDH


93 
	~<›ís¶/ecdh.h
>

96 #i‚de‡
OPENSSL_NO_DEPRECATED


97 #i‚de‡
OPENSSL_NO_RSA


98 
	~<›ís¶/rß.h
>

100 #i‚de‡
OPENSSL_NO_DSA


101 
	~<›ís¶/dß.h
>

103 #i‚de‡
OPENSSL_NO_DH


104 
	~<›ís¶/dh.h
>

108 #i‚de‡
OPENSSL_NO_SHA


109 
	~<›ís¶/sha.h
>

111 
	~<›ís¶/os¶_typ.h
>

113 #ifde‡ 
__˝lu•lus


117 #ifde‡
OPENSSL_SYS_WIN32


119 #unde‡
X509_NAME


120 #unde‡
X509_CERT_PAIR


121 #unde‡
X509_EXTENSIONS


124 
	#X509_FILETYPE_PEM
 1

	)

125 
	#X509_FILETYPE_ASN1
 2

	)

126 
	#X509_FILETYPE_DEFAULT
 3

	)

128 
	#X509v3_KU_DIGITAL_SIGNATURE
 0x0080

	)

129 
	#X509v3_KU_NON_REPUDIATION
 0x0040

	)

130 
	#X509v3_KU_KEY_ENCIPHERMENT
 0x0020

	)

131 
	#X509v3_KU_DATA_ENCIPHERMENT
 0x0010

	)

132 
	#X509v3_KU_KEY_AGREEMENT
 0x0008

	)

133 
	#X509v3_KU_KEY_CERT_SIGN
 0x0004

	)

134 
	#X509v3_KU_CRL_SIGN
 0x0002

	)

135 
	#X509v3_KU_ENCIPHER_ONLY
 0x0001

	)

136 
	#X509v3_KU_DECIPHER_ONLY
 0x8000

	)

137 
	#X509v3_KU_UNDEF
 0xffff

	)

139 
	sX509_obje˘s_°


141 
nid
;

142 (*
a2i
)();

143 (*
i2a
)();

144 } 
	tX509_OBJECTS
;

146 
	sX509_Æg‹_°


148 
ASN1_OBJECT
 *
Æg‹ôhm
;

149 
ASN1_TYPE
 *
∑ømëî
;

152 
DECLARE_ASN1_SET_OF
(
X509_ALGOR
)

154 
STACK_OF
(
	tX509_ALGOR
Ë
	tX509_ALGORS
;

156 
	sX509_vÆ_°


158 
ASN1_TIME
 *
nŸBef‹e
;

159 
ASN1_TIME
 *
nŸA·î
;

160 } 
	tX509_VAL
;

162 
	sX509_pubkey_°


164 
X509_ALGOR
 *
Æg‹
;

165 
ASN1_BIT_STRING
 *
public_key
;

166 
EVP_PKEY
 *
pkey
;

167 } 
	tX509_PUBKEY
;

169 
	sX509_sig_°


171 
X509_ALGOR
 *
Æg‹
;

172 
ASN1_OCTET_STRING
 *
dige°
;

173 } 
	tX509_SIG
;

175 
	sX509_«me_íåy_°


177 
ASN1_OBJECT
 *
obje˘
;

178 
ASN1_STRING
 *
vÆue
;

179 
£t
;

180 
size
;

181 } 
	tX509_NAME_ENTRY
;

183 
DECLARE_STACK_OF
(
X509_NAME_ENTRY
)

184 
DECLARE_ASN1_SET_OF
(
X509_NAME_ENTRY
)

187 
	sX509_«me_°


189 
STACK_OF
(
X509_NAME_ENTRY
Ë*
íåõs
;

190 
modifõd
;

191 #i‚de‡
OPENSSL_NO_BUFFER


192 
BUF_MEM
 *
byãs
;

194 *
byãs
;

196 
hash
;

199 
DECLARE_STACK_OF
(
X509_NAME
)

201 
	#X509_EX_V_NETSCAPE_HACK
 0x8000

	)

202 
	#X509_EX_V_INIT
 0x0001

	)

203 
	sX509_exãnsi⁄_°


205 
ASN1_OBJECT
 *
obje˘
;

206 
ASN1_BOOLEAN
 
¸ôiˇl
;

207 
ASN1_OCTET_STRING
 *
vÆue
;

208 } 
	tX509_EXTENSION
;

210 
STACK_OF
(
	tX509_EXTENSION
Ë
	tX509_EXTENSIONS
;

212 
DECLARE_STACK_OF
(
X509_EXTENSION
)

213 
DECLARE_ASN1_SET_OF
(
X509_EXTENSION
)

216 
	sx509_©åibuãs_°


218 
ASN1_OBJECT
 *
obje˘
;

219 
sögÀ
;

221 *
±r
;

222  
STACK_OF
(
ASN1_TYPE
Ë*
£t
;

223  
ASN1_TYPE
 *
sögÀ
;

224 } 
vÆue
;

225 } 
	tX509_ATTRIBUTE
;

227 
DECLARE_STACK_OF
(
X509_ATTRIBUTE
)

228 
DECLARE_ASN1_SET_OF
(
X509_ATTRIBUTE
)

231 
	sX509_ªq_öfo_°


233 
ASN1_ENCODING
 
íc
;

234 
ASN1_INTEGER
 *
vîsi⁄
;

235 
X509_NAME
 *
subje˘
;

236 
X509_PUBKEY
 *
pubkey
;

238 
STACK_OF
(
X509_ATTRIBUTE
Ë*
©åibuãs
;

239 } 
	tX509_REQ_INFO
;

241 
	sX509_ªq_°


243 
X509_REQ_INFO
 *
ªq_öfo
;

244 
X509_ALGOR
 *
sig_Æg
;

245 
ASN1_BIT_STRING
 *
sig«tuª
;

246 
ª„ªn˚s
;

247 } 
	tX509_REQ
;

249 
	sx509_cöf_°


251 
ASN1_INTEGER
 *
vîsi⁄
;

252 
ASN1_INTEGER
 *
£rülNumbî
;

253 
X509_ALGOR
 *
sig«tuª
;

254 
X509_NAME
 *
issuî
;

255 
X509_VAL
 *
vÆidôy
;

256 
X509_NAME
 *
subje˘
;

257 
X509_PUBKEY
 *
key
;

258 
ASN1_BIT_STRING
 *
issuîUID
;

259 
ASN1_BIT_STRING
 *
subje˘UID
;

260 
STACK_OF
(
X509_EXTENSION
Ë*
exãnsi⁄s
;

261 
ASN1_ENCODING
 
íc
;

262 } 
	tX509_CINF
;

270 
	sx509_˚π_aux_°


272 
STACK_OF
(
ASN1_OBJECT
Ë*
åu°
;

273 
STACK_OF
(
ASN1_OBJECT
Ë*
ªje˘
;

274 
ASN1_UTF8STRING
 *
Æüs
;

275 
ASN1_OCTET_STRING
 *
keyid
;

276 
STACK_OF
(
X509_ALGOR
Ë*
Ÿhî
;

277 } 
	tX509_CERT_AUX
;

279 
	sx509_°


281 
X509_CINF
 *
˚π_öfo
;

282 
X509_ALGOR
 *
sig_Æg
;

283 
ASN1_BIT_STRING
 *
sig«tuª
;

284 
vÆid
;

285 
ª„ªn˚s
;

286 *
«me
;

287 
CRYPTO_EX_DATA
 
ex_d©a
;

289 
ex_∑thÀn
;

290 
ex_p˝©hÀn
;

291 
ex_Êags
;

292 
ex_kußge
;

293 
ex_xkußge
;

294 
ex_ns˚π
;

295 
ASN1_OCTET_STRING
 *
skid
;

296 
AUTHORITY_KEYID_°
 *
akid
;

297 
X509_POLICY_CACHE
 *
pﬁicy_ˇche
;

298 #i‚de‡
OPENSSL_NO_RFC3779


299 
STACK_OF
(
IPAddªssFamûy
Ë*
rfc3779_addr
;

300 
ASIdítifõrs_°
 *
rfc3779_asid
;

302 #i‚de‡
OPENSSL_NO_SHA


303 
sha1_hash
[
SHA_DIGEST_LENGTH
];

305 
X509_CERT_AUX
 *
aux
;

308 
DECLARE_STACK_OF
(
X509
)

309 
DECLARE_ASN1_SET_OF
(
X509
)

313 
	sx509_åu°_°
 {

314 
åu°
;

315 
Êags
;

316 (*
check_åu°
)(
x509_åu°_°
 *, 
X509
 *, );

317 *
«me
;

318 
¨g1
;

319 *
¨g2
;

320 } 
	tX509_TRUST
;

322 
DECLARE_STACK_OF
(
X509_TRUST
)

324 
	sx509_˚π_∑ú_°
 {

325 
X509
 *
f‹w¨d
;

326 
X509
 *
ªvî£
;

327 } 
	tX509_CERT_PAIR
;

331 
	#X509_TRUST_DEFAULT
 -1

	)

333 
	#X509_TRUST_COMPAT
 1

	)

334 
	#X509_TRUST_SSL_CLIENT
 2

	)

335 
	#X509_TRUST_SSL_SERVER
 3

	)

336 
	#X509_TRUST_EMAIL
 4

	)

337 
	#X509_TRUST_OBJECT_SIGN
 5

	)

338 
	#X509_TRUST_OCSP_SIGN
 6

	)

339 
	#X509_TRUST_OCSP_REQUEST
 7

	)

342 
	#X509_TRUST_MIN
 1

	)

343 
	#X509_TRUST_MAX
 7

	)

347 
	#X509_TRUST_DYNAMIC
 1

	)

348 
	#X509_TRUST_DYNAMIC_NAME
 2

	)

352 
	#X509_TRUST_TRUSTED
 1

	)

353 
	#X509_TRUST_REJECTED
 2

	)

354 
	#X509_TRUST_UNTRUSTED
 3

	)

358 
	#X509_FLAG_COMPAT
 0

	)

359 
	#X509_FLAG_NO_HEADER
 1L

	)

360 
	#X509_FLAG_NO_VERSION
 (1L << 1)

	)

361 
	#X509_FLAG_NO_SERIAL
 (1L << 2)

	)

362 
	#X509_FLAG_NO_SIGNAME
 (1L << 3)

	)

363 
	#X509_FLAG_NO_ISSUER
 (1L << 4)

	)

364 
	#X509_FLAG_NO_VALIDITY
 (1L << 5)

	)

365 
	#X509_FLAG_NO_SUBJECT
 (1L << 6)

	)

366 
	#X509_FLAG_NO_PUBKEY
 (1L << 7)

	)

367 
	#X509_FLAG_NO_EXTENSIONS
 (1L << 8)

	)

368 
	#X509_FLAG_NO_SIGDUMP
 (1L << 9)

	)

369 
	#X509_FLAG_NO_AUX
 (1L << 10)

	)

370 
	#X509_FLAG_NO_ATTRIBUTES
 (1L << 11)

	)

376 
	#XN_FLAG_SEP_MASK
 (0x‡<< 16)

	)

378 
	#XN_FLAG_COMPAT
 0

	)

379 
	#XN_FLAG_SEP_COMMA_PLUS
 (1 << 16Ë

	)

380 
	#XN_FLAG_SEP_CPLUS_SPC
 (2 << 16Ë

	)

381 
	#XN_FLAG_SEP_SPLUS_SPC
 (3 << 16Ë

	)

382 
	#XN_FLAG_SEP_MULTILINE
 (4 << 16Ë

	)

384 
	#XN_FLAG_DN_REV
 (1 << 20Ë

	)

388 
	#XN_FLAG_FN_MASK
 (0x3 << 21)

	)

390 
	#XN_FLAG_FN_SN
 0

	)

391 
	#XN_FLAG_FN_LN
 (1 << 21Ë

	)

392 
	#XN_FLAG_FN_OID
 (2 << 21Ë

	)

393 
	#XN_FLAG_FN_NONE
 (3 << 21Ë

	)

395 
	#XN_FLAG_SPC_EQ
 (1 << 23Ë

	)

401 
	#XN_FLAG_DUMP_UNKNOWN_FIELDS
 (1 << 24)

	)

403 
	#XN_FLAG_FN_ALIGN
 (1 << 25Ë

	)

407 
	#XN_FLAG_RFC2253
 (
ASN1_STRFLGS_RFC2253
 | \

408 
XN_FLAG_SEP_COMMA_PLUS
 | \

409 
XN_FLAG_DN_REV
 | \

410 
XN_FLAG_FN_SN
 | \

411 
XN_FLAG_DUMP_UNKNOWN_FIELDS
)

	)

415 
	#XN_FLAG_ONELINE
 (
ASN1_STRFLGS_RFC2253
 | \

416 
ASN1_STRFLGS_ESC_QUOTE
 | \

417 
XN_FLAG_SEP_CPLUS_SPC
 | \

418 
XN_FLAG_SPC_EQ
 | \

419 
XN_FLAG_FN_SN
)

	)

423 
	#XN_FLAG_MULTILINE
 (
ASN1_STRFLGS_ESC_CTRL
 | \

424 
ASN1_STRFLGS_ESC_MSB
 | \

425 
XN_FLAG_SEP_MULTILINE
 | \

426 
XN_FLAG_SPC_EQ
 | \

427 
XN_FLAG_FN_LN
 | \

428 
XN_FLAG_FN_ALIGN
)

	)

430 
	sX509_ªvoked_°


432 
ASN1_INTEGER
 *
£rülNumbî
;

433 
ASN1_TIME
 *
ªvoˇti⁄D©e
;

434 
STACK_OF
(
X509_EXTENSION
Ë *
exãnsi⁄s
;

435 
£quí˚
;

436 } 
	tX509_REVOKED
;

438 
DECLARE_STACK_OF
(
X509_REVOKED
)

439 
DECLARE_ASN1_SET_OF
(
X509_REVOKED
)

441 
	sX509_¸l_öfo_°


443 
ASN1_INTEGER
 *
vîsi⁄
;

444 
X509_ALGOR
 *
sig_Æg
;

445 
X509_NAME
 *
issuî
;

446 
ASN1_TIME
 *
œ°Upd©e
;

447 
ASN1_TIME
 *
√xtUpd©e
;

448 
STACK_OF
(
X509_REVOKED
Ë*
ªvoked
;

449 
STACK_OF
(
X509_EXTENSION
Ë *
exãnsi⁄s
;

450 
ASN1_ENCODING
 
íc
;

451 } 
	tX509_CRL_INFO
;

453 
	sX509_¸l_°


456 
X509_CRL_INFO
 *
¸l
;

457 
X509_ALGOR
 *
sig_Æg
;

458 
ASN1_BIT_STRING
 *
sig«tuª
;

459 
ª„ªn˚s
;

462 
DECLARE_STACK_OF
(
X509_CRL
)

463 
DECLARE_ASN1_SET_OF
(
X509_CRL
)

465 
	s¥iv©e_key_°


467 
vîsi⁄
;

469 
X509_ALGOR
 *
íc_Æg‹
;

470 
ASN1_OCTET_STRING
 *
íc_pkey
;

473 
EVP_PKEY
 *
dec_pkey
;

476 
key_Àngth
;

477 *
key_d©a
;

478 
key_‰ì
;

481 
EVP_CIPHER_INFO
 
cùhî
;

483 
ª„ªn˚s
;

484 } 
	tX509_PKEY
;

486 #i‚de‡
OPENSSL_NO_EVP


487 
	sX509_öfo_°


489 
X509
 *
x509
;

490 
X509_CRL
 *
¸l
;

491 
X509_PKEY
 *
x_pkey
;

493 
EVP_CIPHER_INFO
 
íc_cùhî
;

494 
íc_Àn
;

495 *
íc_d©a
;

497 
ª„ªn˚s
;

498 } 
	tX509_INFO
;

500 
DECLARE_STACK_OF
(
X509_INFO
)

507 
	sNësˇ≥_•kac_°


509 
X509_PUBKEY
 *
pubkey
;

510 
ASN1_IA5STRING
 *
chÆÀnge
;

511 } 
	tNETSCAPE_SPKAC
;

513 
	sNësˇ≥_•ki_°


515 
NETSCAPE_SPKAC
 *
•kac
;

516 
X509_ALGOR
 *
sig_Æg‹
;

517 
ASN1_BIT_STRING
 *
sig«tuª
;

518 } 
	tNETSCAPE_SPKI
;

521 
	sNësˇ≥_˚πifiˇã_£quí˚


523 
ASN1_OBJECT
 *
ty≥
;

524 
STACK_OF
(
X509
Ë*
˚πs
;

525 } 
	tNETSCAPE_CERT_SEQUENCE
;

536 
	sPBEPARAM_°
 {

537 
ASN1_OCTET_STRING
 *
ß…
;

538 
ASN1_INTEGER
 *
ôî
;

539 } 
	tPBEPARAM
;

543 
	sPBE2PARAM_°
 {

544 
X509_ALGOR
 *
keyfunc
;

545 
X509_ALGOR
 *
í¸y±i⁄
;

546 } 
	tPBE2PARAM
;

548 
	sPBKDF2PARAM_°
 {

549 
ASN1_TYPE
 *
ß…
;

550 
ASN1_INTEGER
 *
ôî
;

551 
ASN1_INTEGER
 *
keyÀngth
;

552 
X509_ALGOR
 *
¥f
;

553 } 
	tPBKDF2PARAM
;

558 
	spkcs8_¥iv_key_öfo_°


560 
brokí
;

561 
	#PKCS8_OK
 0

	)

562 
	#PKCS8_NO_OCTET
 1

	)

563 
	#PKCS8_EMBEDDED_PARAM
 2

	)

564 
	#PKCS8_NS_DB
 3

	)

565 
ASN1_INTEGER
 *
vîsi⁄
;

566 
X509_ALGOR
 *
pkeyÆg
;

567 
ASN1_TYPE
 *
pkey
;

568 
STACK_OF
(
X509_ATTRIBUTE
Ë*
©åibuãs
;

569 } 
	tPKCS8_PRIV_KEY_INFO
;

571 #ifde‡ 
__˝lu•lus


575 
	~<›ís¶/x509_vfy.h
>

576 
	~<›ís¶/pkcs7.h
>

578 #ifde‡ 
__˝lu•lus


582 #ifde‡
SSLEAY_MACROS


583 
	#X509_vîify
(
a
,
r
Ë
	`ASN1_vîify
(((*)())
i2d_X509_CINF
,a->
sig_Æg
,\

584 
a
->
sig«tuª
,(*Ô->
˚π_öfo
,
r
)

	)

585 
	#X509_REQ_vîify
(
a
,
r
Ë
	`ASN1_vîify
(((*)())
i2d_X509_REQ_INFO
, \

586 
a
->
sig_Æg
,a->
sig«tuª
,(*Ô->
ªq_öfo
,
r
)

	)

587 
	#X509_CRL_vîify
(
a
,
r
Ë
	`ASN1_vîify
(((*)())
i2d_X509_CRL_INFO
, \

588 
a
->
sig_Æg
,á->
sig«tuª
,(*Ô->
¸l
,
r
)

	)

590 
	#X509_sign
(
x
,
pkey
,
md
) \

591 
	`ASN1_sign
(((*)())
i2d_X509_CINF
, 
x
->
˚π_öfo
->
sig«tuª
, \

592 
x
->
sig_Æg
, x->
sig«tuª
, (*)x->
˚π_öfo
,
pkey
,
md
)

	)

593 
	#X509_REQ_sign
(
x
,
pkey
,
md
) \

594 
	`ASN1_sign
(((*)())
i2d_X509_REQ_INFO
,
x
->
sig_Æg
, 
NULL
, \

595 
x
->
sig«tuª
, (*)x->
ªq_öfo
,
pkey
,
md
)

	)

596 
	#X509_CRL_sign
(
x
,
pkey
,
md
) \

597 
	`ASN1_sign
(((*)())
i2d_X509_CRL_INFO
,
x
->
¸l
->
sig_Æg
,x->sig_alg, \

598 
x
->
sig«tuª
, (*)x->
¸l
,
pkey
,
md
)

	)

599 
	#NETSCAPE_SPKI_sign
(
x
,
pkey
,
md
) \

600 
	`ASN1_sign
(((*)())
i2d_NETSCAPE_SPKAC
, 
x
->
sig_Æg‹
,
NULL
, \

601 
x
->
sig«tuª
, (*)x->
•kac
,
pkey
,
md
)

	)

603 
	#X509_dup
(
x509
Ë(
X509
 *)
	`ASN1_dup
(((*)())
i2d_X509
, \

604 (*(*)())
d2i_X509
,(*)
x509
)

	)

605 
	#X509_ATTRIBUTE_dup
(
xa
Ë(
X509_ATTRIBUTE
 *)
	`ASN1_dup
(\

606 ((*)())
i2d_X509_ATTRIBUTE
, \

607 (*(*)())
d2i_X509_ATTRIBUTE
,(*)
xa
)

	)

608 
	#X509_EXTENSION_dup
(
ex
Ë(
X509_EXTENSION
 *)
	`ASN1_dup
( \

609 ((*)())
i2d_X509_EXTENSION
, \

610 (*(*)())
d2i_X509_EXTENSION
,(*)
ex
)

	)

611 
	#d2i_X509_Â
(
Â
,
x509
Ë(
X509
 *)
	`ASN1_d2i_Â
((*(*)())
X509_√w
, \

612 (*(*)())
d2i_X509
, (
Â
),(**)(
x509
))

	)

613 
	#i2d_X509_Â
(
Â
,
x509
Ë
	`ASN1_i2d_Â
(
i2d_X509
,Â,(*)x509)

	)

614 
	#d2i_X509_bio
(
bp
,
x509
Ë(
X509
 *)
	`ASN1_d2i_bio
((*(*)())
X509_√w
, \

615 (*(*)())
d2i_X509
, (
bp
),(**)(
x509
))

	)

616 
	#i2d_X509_bio
(
bp
,
x509
Ë
	`ASN1_i2d_bio
(
i2d_X509
,bp,(*)x509)

	)

618 
	#X509_CRL_dup
(
¸l
Ë(
X509_CRL
 *)
	`ASN1_dup
(((*)())
i2d_X509_CRL
, \

619 (*(*)())
d2i_X509_CRL
,(*)
¸l
)

	)

620 
	#d2i_X509_CRL_Â
(
Â
,
¸l
Ë(
X509_CRL
 *)
	`ASN1_d2i_Â
((*(*)()) \

621 
X509_CRL_√w
,(*(*)())
d2i_X509_CRL
, (
Â
),\

622 (**)(
¸l
))

	)

623 
	#i2d_X509_CRL_Â
(
Â
,
¸l
Ë
	`ASN1_i2d_Â
(
i2d_X509_CRL
,fp,\

624 (*)
¸l
)

	)

625 
	#d2i_X509_CRL_bio
(
bp
,
¸l
Ë(
X509_CRL
 *)
	`ASN1_d2i_bio
((*(*)()) \

626 
X509_CRL_√w
,(*(*)())
d2i_X509_CRL
, (
bp
),\

627 (**)(
¸l
))

	)

628 
	#i2d_X509_CRL_bio
(
bp
,
¸l
Ë
	`ASN1_i2d_bio
(
i2d_X509_CRL
,bp,\

629 (*)
¸l
)

	)

631 
	#PKCS7_dup
(
p7
Ë(
PKCS7
 *)
	`ASN1_dup
(((*)())
i2d_PKCS7
, \

632 (*(*)())
d2i_PKCS7
,(*)
p7
)

	)

633 
	#d2i_PKCS7_Â
(
Â
,
p7
Ë(
PKCS7
 *)
	`ASN1_d2i_Â
((*(*)()) \

634 
PKCS7_√w
,(*(*)())
d2i_PKCS7
, (
Â
),\

635 (**)(
p7
))

	)

636 
	#i2d_PKCS7_Â
(
Â
,
p7
Ë
	`ASN1_i2d_Â
(
i2d_PKCS7
,fp,\

637 (*)
p7
)

	)

638 
	#d2i_PKCS7_bio
(
bp
,
p7
Ë(
PKCS7
 *)
	`ASN1_d2i_bio
((*(*)()) \

639 
PKCS7_√w
,(*(*)())
d2i_PKCS7
, (
bp
),\

640 (**)(
p7
))

	)

641 
	#i2d_PKCS7_bio
(
bp
,
p7
Ë
	`ASN1_i2d_bio
(
i2d_PKCS7
,bp,\

642 (*)
p7
)

	)

644 
	#X509_REQ_dup
(
ªq
Ë(
X509_REQ
 *)
	`ASN1_dup
(((*)())
i2d_X509_REQ
, \

645 (*(*)())
d2i_X509_REQ
,(*)
ªq
)

	)

646 
	#d2i_X509_REQ_Â
(
Â
,
ªq
Ë(
X509_REQ
 *)
	`ASN1_d2i_Â
((*(*)())\

647 
X509_REQ_√w
, (*(*)())
d2i_X509_REQ
, (
Â
),\

648 (**)(
ªq
))

	)

649 
	#i2d_X509_REQ_Â
(
Â
,
ªq
Ë
	`ASN1_i2d_Â
(
i2d_X509_REQ
,fp,\

650 (*)
ªq
)

	)

651 
	#d2i_X509_REQ_bio
(
bp
,
ªq
Ë(
X509_REQ
 *)
	`ASN1_d2i_bio
((*(*)())\

652 
X509_REQ_√w
, (*(*)())
d2i_X509_REQ
, (
bp
),\

653 (**)(
ªq
))

	)

654 
	#i2d_X509_REQ_bio
(
bp
,
ªq
Ë
	`ASN1_i2d_bio
(
i2d_X509_REQ
,bp,\

655 (*)
ªq
)

	)

657 
	#RSAPublicKey_dup
(
rß
Ë(
RSA
 *)
	`ASN1_dup
(((*)())
i2d_RSAPublicKey
, \

658 (*(*)())
d2i_RSAPublicKey
,(*)
rß
)

	)

659 
	#RSAPriv©eKey_dup
(
rß
Ë(
RSA
 *)
	`ASN1_dup
(((*)())
i2d_RSAPriv©eKey
, \

660 (*(*)())
d2i_RSAPriv©eKey
,(*)
rß
)

	)

662 
	#d2i_RSAPriv©eKey_Â
(
Â
,
rß
Ë(
RSA
 *)
	`ASN1_d2i_Â
((*(*)())\

663 
RSA_√w
,(*(*)())
d2i_RSAPriv©eKey
, (
Â
), \

664 (**)(
rß
))

	)

665 
	#i2d_RSAPriv©eKey_Â
(
Â
,
rß
Ë
	`ASN1_i2d_Â
(
i2d_RSAPriv©eKey
,fp, \

666 (*)
rß
)

	)

667 
	#d2i_RSAPriv©eKey_bio
(
bp
,
rß
Ë(
RSA
 *)
	`ASN1_d2i_bio
((*(*)())\

668 
RSA_√w
,(*(*)())
d2i_RSAPriv©eKey
, (
bp
), \

669 (**)(
rß
))

	)

670 
	#i2d_RSAPriv©eKey_bio
(
bp
,
rß
Ë
	`ASN1_i2d_bio
(
i2d_RSAPriv©eKey
,bp, \

671 (*)
rß
)

	)

673 
	#d2i_RSAPublicKey_Â
(
Â
,
rß
Ë(
RSA
 *)
	`ASN1_d2i_Â
((*(*)())\

674 
RSA_√w
,(*(*)())
d2i_RSAPublicKey
, (
Â
), \

675 (**)(
rß
))

	)

676 
	#i2d_RSAPublicKey_Â
(
Â
,
rß
Ë
	`ASN1_i2d_Â
(
i2d_RSAPublicKey
,fp, \

677 (*)
rß
)

	)

678 
	#d2i_RSAPublicKey_bio
(
bp
,
rß
Ë(
RSA
 *)
	`ASN1_d2i_bio
((*(*)())\

679 
RSA_√w
,(*(*)())
d2i_RSAPublicKey
, (
bp
), \

680 (**)(
rß
))

	)

681 
	#i2d_RSAPublicKey_bio
(
bp
,
rß
Ë
	`ASN1_i2d_bio
(
i2d_RSAPublicKey
,bp, \

682 (*)
rß
)

	)

684 
	#d2i_DSAPriv©eKey_Â
(
Â
,
dß
Ë(
DSA
 *)
	`ASN1_d2i_Â
((*(*)())\

685 
DSA_√w
,(*(*)())
d2i_DSAPriv©eKey
, (
Â
), \

686 (**)(
dß
))

	)

687 
	#i2d_DSAPriv©eKey_Â
(
Â
,
dß
Ë
	`ASN1_i2d_Â
(
i2d_DSAPriv©eKey
,fp, \

688 (*)
dß
)

	)

689 
	#d2i_DSAPriv©eKey_bio
(
bp
,
dß
Ë(
DSA
 *)
	`ASN1_d2i_bio
((*(*)())\

690 
DSA_√w
,(*(*)())
d2i_DSAPriv©eKey
, (
bp
), \

691 (**)(
dß
))

	)

692 
	#i2d_DSAPriv©eKey_bio
(
bp
,
dß
Ë
	`ASN1_i2d_bio
(
i2d_DSAPriv©eKey
,bp, \

693 (*)
dß
)

	)

695 
	#d2i_ECPriv©eKey_Â
(
Â
,
ecdß
Ë(
EC_KEY
 *)
	`ASN1_d2i_Â
((*(*)())\

696 
EC_KEY_√w
,(*(*)())
d2i_ECPriv©eKey
, (
Â
), \

697 (**)(
ecdß
))

	)

698 
	#i2d_ECPriv©eKey_Â
(
Â
,
ecdß
Ë
	`ASN1_i2d_Â
(
i2d_ECPriv©eKey
,fp, \

699 (*)
ecdß
)

	)

700 
	#d2i_ECPriv©eKey_bio
(
bp
,
ecdß
Ë(
EC_KEY
 *)
	`ASN1_d2i_bio
((*(*)())\

701 
EC_KEY_√w
,(*(*)())
d2i_ECPriv©eKey
, (
bp
), \

702 (**)(
ecdß
))

	)

703 
	#i2d_ECPriv©eKey_bio
(
bp
,
ecdß
Ë
	`ASN1_i2d_bio
(
i2d_ECPriv©eKey
,bp, \

704 (*)
ecdß
)

	)

706 
	#X509_ALGOR_dup
(
xn
Ë(
X509_ALGOR
 *)
	`ASN1_dup
(((*)())
i2d_X509_ALGOR
,\

707 (*(*)())
d2i_X509_ALGOR
,(*)
xn
)

	)

709 
	#X509_NAME_dup
(
xn
Ë(
X509_NAME
 *)
	`ASN1_dup
(((*)())
i2d_X509_NAME
, \

710 (*(*)())
d2i_X509_NAME
,(*)
xn
)

	)

711 
	#X509_NAME_ENTRY_dup
(
√
Ë(
X509_NAME_ENTRY
 *)
	`ASN1_dup
( \

712 ((*)())
i2d_X509_NAME_ENTRY
, \

713 (*(*)())
d2i_X509_NAME_ENTRY
,\

714 (*)
√
)

	)

716 
	#X509_dige°
(
d©a
,
ty≥
,
md
,
Àn
) \

717 
	`ASN1_dige°
(((*)())
i2d_X509
,
ty≥
,(*)
d©a
,
md
,
Àn
)

	)

718 
	#X509_NAME_dige°
(
d©a
,
ty≥
,
md
,
Àn
) \

719 
	`ASN1_dige°
(((*)())
i2d_X509_NAME
,
ty≥
,(*)
d©a
,
md
,
Àn
)

	)

720 #i‚de‡
PKCS7_ISSUER_AND_SERIAL_dige°


721 
	#PKCS7_ISSUER_AND_SERIAL_dige°
(
d©a
,
ty≥
,
md
,
Àn
) \

722 
	`ASN1_dige°
(((*)())
i2d_PKCS7_ISSUER_AND_SERIAL
,
ty≥
,\

723 (*)
d©a
,
md
,
Àn
)

	)

727 
	#X509_EXT_PACK_UNKNOWN
 1

	)

728 
	#X509_EXT_PACK_STRING
 2

	)

730 
	#X509_gë_vîsi⁄
(
x
Ë
	`ASN1_INTEGER_gë
((x)->
˚π_öfo
->
vîsi⁄
)

	)

732 
	#X509_gë_nŸBef‹e
(
x
Ë((x)->
˚π_öfo
->
vÆidôy
->
nŸBef‹e
)

	)

733 
	#X509_gë_nŸA·î
(
x
Ë((x)->
˚π_öfo
->
vÆidôy
->
nŸA·î
)

	)

734 
	#X509_exåa˘_key
(
x
Ë
	`X509_gë_pubkey
(xË

	)

735 
	#X509_REQ_gë_vîsi⁄
(
x
Ë
	`ASN1_INTEGER_gë
((x)->
ªq_öfo
->
vîsi⁄
)

	)

736 
	#X509_REQ_gë_subje˘_«me
(
x
Ë((x)->
ªq_öfo
->
subje˘
)

	)

737 
	#X509_REQ_exåa˘_key
(
a
Ë
	`X509_REQ_gë_pubkey
◊)

	)

738 
	#X509_«me_cmp
(
a
,
b
Ë
	`X509_NAME_cmp
(◊),(b))

	)

739 
	#X509_gë_sig«tuª_ty≥
(
x
Ë
	`EVP_PKEY_ty≥
(
	`OBJ_obj2nid
((x)->
sig_Æg
->
Æg‹ôhm
))

	)

741 
	#X509_CRL_gë_vîsi⁄
(
x
Ë
	`ASN1_INTEGER_gë
((x)->
¸l
->
vîsi⁄
)

	)

742 
	#X509_CRL_gë_œ°Upd©e
(
x
Ë((x)->
¸l
->
œ°Upd©e
)

	)

743 
	#X509_CRL_gë_√xtUpd©e
(
x
Ë((x)->
¸l
->
√xtUpd©e
)

	)

744 
	#X509_CRL_gë_issuî
(
x
Ë((x)->
¸l
->
issuî
)

	)

745 
	#X509_CRL_gë_REVOKED
(
x
Ë((x)->
¸l
->
ªvoked
)

	)

749 
	#X509_gë_X509_PUBKEY
(
x
Ë((x)->
˚π_öfo
->
key
)

	)

752 c⁄° *
X509_vîify_˚π_îr‹_°rög
(
n
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

754 #i‚de‡
SSLEAY_MACROS


755 #i‚de‡
OPENSSL_NO_EVP


756 
X509_vîify
(
X509
 *
a
, 
EVP_PKEY
 *
r
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

758 
X509_REQ_vîify
(
X509_REQ
 *
a
, 
EVP_PKEY
 *
r
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

759 
X509_CRL_vîify
(
X509_CRL
 *
a
, 
EVP_PKEY
 *
r
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

760 
NETSCAPE_SPKI_vîify
(
NETSCAPE_SPKI
 *
a
, 
EVP_PKEY
 *
r
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

762 
NETSCAPE_SPKI
 * 
NETSCAPE_SPKI_b64_decode
(c⁄° *
°r
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

763 * 
NETSCAPE_SPKI_b64_ícode
(
NETSCAPE_SPKI
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

764 
EVP_PKEY
 *
NETSCAPE_SPKI_gë_pubkey
(
NETSCAPE_SPKI
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

765 
NETSCAPE_SPKI_£t_pubkey
(
NETSCAPE_SPKI
 *
x
, 
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

767 
NETSCAPE_SPKI_¥öt
(
BIO
 *
out
, 
NETSCAPE_SPKI
 *
•ki
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

769 
X509_sig«tuª_¥öt
(
BIO
 *
bp
,
X509_ALGOR
 *
Æg
, 
ASN1_STRING
 *
sig
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

771 
X509_sign
(
X509
 *
x
, 
EVP_PKEY
 *
pkey
, c⁄° 
EVP_MD
 *
md
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

772 
X509_REQ_sign
(
X509_REQ
 *
x
, 
EVP_PKEY
 *
pkey
, c⁄° 
EVP_MD
 *
md
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

773 
X509_CRL_sign
(
X509_CRL
 *
x
, 
EVP_PKEY
 *
pkey
, c⁄° 
EVP_MD
 *
md
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

774 
NETSCAPE_SPKI_sign
(
NETSCAPE_SPKI
 *
x
, 
EVP_PKEY
 *
pkey
, c⁄° 
EVP_MD
 *
md
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

776 
X509_pubkey_dige°
(c⁄° 
X509
 *
d©a
,c⁄° 
EVP_MD
 *
ty≥
,

777 *
md
, *
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

778 
X509_dige°
(c⁄° 
X509
 *
d©a
,c⁄° 
EVP_MD
 *
ty≥
,

779 *
md
, *
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

780 
X509_CRL_dige°
(c⁄° 
X509_CRL
 *
d©a
,c⁄° 
EVP_MD
 *
ty≥
,

781 *
md
, *
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

782 
X509_REQ_dige°
(c⁄° 
X509_REQ
 *
d©a
,c⁄° 
EVP_MD
 *
ty≥
,

783 *
md
, *
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

784 
X509_NAME_dige°
(c⁄° 
X509_NAME
 *
d©a
,c⁄° 
EVP_MD
 *
ty≥
,

785 *
md
, *
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

788 #i‚de‡
OPENSSL_NO_FP_API


789 
X509
 *
d2i_X509_Â
(
FILE
 *
Â
, X509 **
x509
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

790 
i2d_X509_Â
(
FILE
 *
Â
,
X509
 *
x509
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

791 
X509_CRL
 *
d2i_X509_CRL_Â
(
FILE
 *
Â
,X509_CRL **
¸l
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

792 
i2d_X509_CRL_Â
(
FILE
 *
Â
,
X509_CRL
 *
¸l
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

793 
X509_REQ
 *
d2i_X509_REQ_Â
(
FILE
 *
Â
,X509_REQ **
ªq
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

794 
i2d_X509_REQ_Â
(
FILE
 *
Â
,
X509_REQ
 *
ªq
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

795 #i‚de‡
OPENSSL_NO_RSA


796 
RSA
 *
d2i_RSAPriv©eKey_Â
(
FILE
 *
Â
,RSA **
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

797 
i2d_RSAPriv©eKey_Â
(
FILE
 *
Â
,
RSA
 *
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

798 
RSA
 *
d2i_RSAPublicKey_Â
(
FILE
 *
Â
,RSA **
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

799 
i2d_RSAPublicKey_Â
(
FILE
 *
Â
,
RSA
 *
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

800 
RSA
 *
d2i_RSA_PUBKEY_Â
(
FILE
 *
Â
,RSA **
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

801 
i2d_RSA_PUBKEY_Â
(
FILE
 *
Â
,
RSA
 *
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

803 #i‚de‡
OPENSSL_NO_DSA


804 
DSA
 *
d2i_DSA_PUBKEY_Â
(
FILE
 *
Â
, DSA **
dß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

805 
i2d_DSA_PUBKEY_Â
(
FILE
 *
Â
, 
DSA
 *
dß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

806 
DSA
 *
d2i_DSAPriv©eKey_Â
(
FILE
 *
Â
, DSA **
dß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

807 
i2d_DSAPriv©eKey_Â
(
FILE
 *
Â
, 
DSA
 *
dß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

809 #i‚de‡
OPENSSL_NO_EC


810 
EC_KEY
 *
d2i_EC_PUBKEY_Â
(
FILE
 *
Â
, EC_KEY **
eckey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

811 
i2d_EC_PUBKEY_Â
(
FILE
 *
Â
, 
EC_KEY
 *
eckey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

812 
EC_KEY
 *
d2i_ECPriv©eKey_Â
(
FILE
 *
Â
, EC_KEY **
eckey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

813 
i2d_ECPriv©eKey_Â
(
FILE
 *
Â
, 
EC_KEY
 *
eckey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

815 
X509_SIG
 *
d2i_PKCS8_Â
(
FILE
 *
Â
,X509_SIG **
p8
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

816 
i2d_PKCS8_Â
(
FILE
 *
Â
,
X509_SIG
 *
p8
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

817 
PKCS8_PRIV_KEY_INFO
 *
d2i_PKCS8_PRIV_KEY_INFO_Â
(
FILE
 *
Â
,

818 
PKCS8_PRIV_KEY_INFO
 **
p8öf
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

819 
i2d_PKCS8_PRIV_KEY_INFO_Â
(
FILE
 *
Â
,
PKCS8_PRIV_KEY_INFO
 *
p8öf
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

820 
i2d_PKCS8Priv©eKeyInfo_Â
(
FILE
 *
Â
, 
EVP_PKEY
 *
key
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

821 
i2d_Priv©eKey_Â
(
FILE
 *
Â
, 
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

822 
EVP_PKEY
 *
d2i_Priv©eKey_Â
(
FILE
 *
Â
, EVP_PKEY **
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

823 
i2d_PUBKEY_Â
(
FILE
 *
Â
, 
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

824 
EVP_PKEY
 *
d2i_PUBKEY_Â
(
FILE
 *
Â
, EVP_PKEY **
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

827 #i‚de‡
OPENSSL_NO_BIO


828 
X509
 *
d2i_X509_bio
(
BIO
 *
bp
,X509 **
x509
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

829 
i2d_X509_bio
(
BIO
 *
bp
,
X509
 *
x509
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

830 
X509_CRL
 *
d2i_X509_CRL_bio
(
BIO
 *
bp
,X509_CRL **
¸l
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

831 
i2d_X509_CRL_bio
(
BIO
 *
bp
,
X509_CRL
 *
¸l
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

832 
X509_REQ
 *
d2i_X509_REQ_bio
(
BIO
 *
bp
,X509_REQ **
ªq
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

833 
i2d_X509_REQ_bio
(
BIO
 *
bp
,
X509_REQ
 *
ªq
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

834 #i‚de‡
OPENSSL_NO_RSA


835 
RSA
 *
d2i_RSAPriv©eKey_bio
(
BIO
 *
bp
,RSA **
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

836 
i2d_RSAPriv©eKey_bio
(
BIO
 *
bp
,
RSA
 *
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

837 
RSA
 *
d2i_RSAPublicKey_bio
(
BIO
 *
bp
,RSA **
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

838 
i2d_RSAPublicKey_bio
(
BIO
 *
bp
,
RSA
 *
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

839 
RSA
 *
d2i_RSA_PUBKEY_bio
(
BIO
 *
bp
,RSA **
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

840 
i2d_RSA_PUBKEY_bio
(
BIO
 *
bp
,
RSA
 *
rß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

842 #i‚de‡
OPENSSL_NO_DSA


843 
DSA
 *
d2i_DSA_PUBKEY_bio
(
BIO
 *
bp
, DSA **
dß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

844 
i2d_DSA_PUBKEY_bio
(
BIO
 *
bp
, 
DSA
 *
dß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

845 
DSA
 *
d2i_DSAPriv©eKey_bio
(
BIO
 *
bp
, DSA **
dß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

846 
i2d_DSAPriv©eKey_bio
(
BIO
 *
bp
, 
DSA
 *
dß
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

848 #i‚de‡
OPENSSL_NO_EC


849 
EC_KEY
 *
d2i_EC_PUBKEY_bio
(
BIO
 *
bp
, EC_KEY **
eckey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

850 
i2d_EC_PUBKEY_bio
(
BIO
 *
bp
, 
EC_KEY
 *
eckey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

851 
EC_KEY
 *
d2i_ECPriv©eKey_bio
(
BIO
 *
bp
, EC_KEY **
eckey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

852 
i2d_ECPriv©eKey_bio
(
BIO
 *
bp
, 
EC_KEY
 *
eckey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

854 
X509_SIG
 *
d2i_PKCS8_bio
(
BIO
 *
bp
,X509_SIG **
p8
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

855 
i2d_PKCS8_bio
(
BIO
 *
bp
,
X509_SIG
 *
p8
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

856 
PKCS8_PRIV_KEY_INFO
 *
d2i_PKCS8_PRIV_KEY_INFO_bio
(
BIO
 *
bp
,

857 
PKCS8_PRIV_KEY_INFO
 **
p8öf
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

858 
i2d_PKCS8_PRIV_KEY_INFO_bio
(
BIO
 *
bp
,
PKCS8_PRIV_KEY_INFO
 *
p8öf
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

859 
i2d_PKCS8Priv©eKeyInfo_bio
(
BIO
 *
bp
, 
EVP_PKEY
 *
key
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

860 
i2d_Priv©eKey_bio
(
BIO
 *
bp
, 
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

861 
EVP_PKEY
 *
d2i_Priv©eKey_bio
(
BIO
 *
bp
, EVP_PKEY **
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

862 
i2d_PUBKEY_bio
(
BIO
 *
bp
, 
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

863 
EVP_PKEY
 *
d2i_PUBKEY_bio
(
BIO
 *
bp
, EVP_PKEY **
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

866 
X509
 *
X509_dup
(X509 *
x509
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

867 
X509_ATTRIBUTE
 *
X509_ATTRIBUTE_dup
(X509_ATTRIBUTE *
xa
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

868 
X509_EXTENSION
 *
X509_EXTENSION_dup
(X509_EXTENSION *
ex
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

869 
X509_CRL
 *
X509_CRL_dup
(X509_CRL *
¸l
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

870 
X509_REQ
 *
X509_REQ_dup
(X509_REQ *
ªq
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

871 
X509_ALGOR
 *
X509_ALGOR_dup
(X509_ALGOR *
xn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

872 
X509_ALGOR_£t0
(
X509_ALGOR
 *
Æg
, 
ASN1_OBJECT
 *
aobj
, 
±y≥
, *
pvÆ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

873 
X509_ALGOR_gë0
(
ASN1_OBJECT
 **
∑obj
, *
µty≥
, **
µvÆ
,

874 
X509_ALGOR
 *
Æg‹
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

876 
X509_NAME
 *
X509_NAME_dup
(X509_NAME *
xn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

877 
X509_NAME_ENTRY
 *
X509_NAME_ENTRY_dup
(X509_NAME_ENTRY *
√
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

881 
X509_cmp_time
(
ASN1_TIME
 *
s
, 
time_t
 *
t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

882 
X509_cmp_cuºít_time
(
ASN1_TIME
 *
s
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

883 
ASN1_TIME
 * 
X509_time_adj
(ASN1_TIME *
s
, 
adj
, 
time_t
 *
t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

884 
ASN1_TIME
 * 
X509_gmtime_adj
(ASN1_TIME *
s
, 
adj
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

886 c⁄° * 
X509_gë_deÁu…_˚π_¨ó
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

887 c⁄° * 
X509_gë_deÁu…_˚π_dú
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

888 c⁄° * 
X509_gë_deÁu…_˚π_fûe
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

889 c⁄° * 
X509_gë_deÁu…_˚π_dú_ív
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

890 c⁄° * 
X509_gë_deÁu…_˚π_fûe_ív
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

891 c⁄° * 
X509_gë_deÁu…_¥iv©e_dú
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

893 
X509_REQ
 * 
X509_to_X509_REQ
(
X509
 *
x
, 
EVP_PKEY
 *
pkey
, c⁄° 
EVP_MD
 *
md
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

894 
X509
 * 
X509_REQ_to_X509
(
X509_REQ
 *
r
, 
days
,
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

896 
DECLARE_ASN1_FUNCTIONS
(
X509_ALGOR
)

897 
DECLARE_ASN1_ENCODE_FUNCTIONS
(
X509_ALGORS
, X509_ALGORS, X509_ALGORS)

898 
DECLARE_ASN1_FUNCTIONS
(
X509_VAL
)

900 
DECLARE_ASN1_FUNCTIONS
(
X509_PUBKEY
)

902 
X509_PUBKEY_£t
(
X509_PUBKEY
 **
x
, 
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

903 
EVP_PKEY
 * 
X509_PUBKEY_gë
(
X509_PUBKEY
 *
key
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

904 
X509_gë_pubkey_∑ømëîs
(
EVP_PKEY
 *
pkey
,

905 
STACK_OF
(
X509
Ë*
chaö
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

906 
i2d_PUBKEY
(
EVP_PKEY
 *
a
,**
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

907 
EVP_PKEY
 * 
d2i_PUBKEY
(EVP_PKEY **
a
,c⁄° **
µ
,

908 
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

909 #i‚de‡
OPENSSL_NO_RSA


910 
i2d_RSA_PUBKEY
(
RSA
 *
a
,**
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

911 
RSA
 * 
d2i_RSA_PUBKEY
(RSA **
a
,c⁄° **
µ
,

912 
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

914 #i‚de‡
OPENSSL_NO_DSA


915 
i2d_DSA_PUBKEY
(
DSA
 *
a
,**
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

916 
DSA
 * 
d2i_DSA_PUBKEY
(DSA **
a
,c⁄° **
µ
,

917 
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

919 #i‚de‡
OPENSSL_NO_EC


920 
i2d_EC_PUBKEY
(
EC_KEY
 *
a
, **
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

921 
EC_KEY
 *
d2i_EC_PUBKEY
(EC_KEY **
a
, c⁄° **
µ
,

922 
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

925 
DECLARE_ASN1_FUNCTIONS
(
X509_SIG
)

926 
DECLARE_ASN1_FUNCTIONS
(
X509_REQ_INFO
)

927 
DECLARE_ASN1_FUNCTIONS
(
X509_REQ
)

929 
DECLARE_ASN1_FUNCTIONS
(
X509_ATTRIBUTE
)

930 
X509_ATTRIBUTE
 *
X509_ATTRIBUTE_¸óã
(
nid
, 
©πy≥
, *
vÆue
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

932 
DECLARE_ASN1_FUNCTIONS
(
X509_EXTENSION
)

933 
DECLARE_ASN1_ENCODE_FUNCTIONS
(
X509_EXTENSIONS
, X509_EXTENSIONS, X509_EXTENSIONS)

935 
DECLARE_ASN1_FUNCTIONS
(
X509_NAME_ENTRY
)

937 
DECLARE_ASN1_FUNCTIONS
(
X509_NAME
)

939 
X509_NAME_£t
(
X509_NAME
 **
xn
, X509_NAME *
«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

941 
DECLARE_ASN1_FUNCTIONS
(
X509_CINF
)

943 
DECLARE_ASN1_FUNCTIONS
(
X509
)

944 
DECLARE_ASN1_FUNCTIONS
(
X509_CERT_AUX
)

946 
DECLARE_ASN1_FUNCTIONS
(
X509_CERT_PAIR
)

948 
X509_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w
 *
√w_func
,

949 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

950 
X509_£t_ex_d©a
(
X509
 *
r
, 
idx
, *
¨g
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

951 *
X509_gë_ex_d©a
(
X509
 *
r
, 
idx
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

952 
i2d_X509_AUX
(
X509
 *
a
,**
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

953 
X509
 * 
d2i_X509_AUX
(X509 **
a
,c⁄° **
µ
,
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

955 
X509_Æüs_£t1
(
X509
 *
x
, *
«me
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

956 
X509_keyid_£t1
(
X509
 *
x
, *
id
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

957 * 
X509_Æüs_gë0
(
X509
 *
x
, *
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

958 * 
X509_keyid_gë0
(
X509
 *
x
, *
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

959 (*
X509_TRUST_£t_deÁu…
((*
åu°
)(, 
X509
 *, )))(, X509 *, Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

960 
X509_TRUST_£t
(*
t
, 
åu°
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

961 
X509_add1_åu°_obje˘
(
X509
 *
x
, 
ASN1_OBJECT
 *
obj
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

962 
X509_add1_ªje˘_obje˘
(
X509
 *
x
, 
ASN1_OBJECT
 *
obj
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

963 
X509_åu°_˛ór
(
X509
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

964 
X509_ªje˘_˛ór
(
X509
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

966 
DECLARE_ASN1_FUNCTIONS
(
X509_REVOKED
)

967 
DECLARE_ASN1_FUNCTIONS
(
X509_CRL_INFO
)

968 
DECLARE_ASN1_FUNCTIONS
(
X509_CRL
)

970 
X509_CRL_add0_ªvoked
(
X509_CRL
 *
¸l
, 
X509_REVOKED
 *
ªv
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

972 
X509_PKEY
 * 
X509_PKEY_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

973 
X509_PKEY_‰ì
(
X509_PKEY
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

974 
i2d_X509_PKEY
(
X509_PKEY
 *
a
,**
µ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

975 
X509_PKEY
 * 
d2i_X509_PKEY
(X509_PKEY **
a
,c⁄° **
µ
,
Àngth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

977 
DECLARE_ASN1_FUNCTIONS
(
NETSCAPE_SPKI
)

978 
DECLARE_ASN1_FUNCTIONS
(
NETSCAPE_SPKAC
)

979 
DECLARE_ASN1_FUNCTIONS
(
NETSCAPE_CERT_SEQUENCE
)

981 #i‚de‡
OPENSSL_NO_EVP


982 
X509_INFO
 * 
X509_INFO_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

983 
X509_INFO_‰ì
(
X509_INFO
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

984 * 
X509_NAME_⁄ñöe
(
X509_NAME
 *
a
,*
buf
,
size
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

986 
ASN1_vîify
(
i2d_of_void
 *
i2d
, 
X509_ALGOR
 *
Æg‹1
,

987 
ASN1_BIT_STRING
 *
sig«tuª
,*
d©a
,
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

989 
ASN1_dige°
(
i2d_of_void
 *
i2d
,c⁄° 
EVP_MD
 *
ty≥
,*
d©a
,

990 *
md
,*
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

992 
ASN1_sign
(
i2d_of_void
 *
i2d
, 
X509_ALGOR
 *
Æg‹1
,

993 
X509_ALGOR
 *
Æg‹2
, 
ASN1_BIT_STRING
 *
sig«tuª
,

994 *
d©a
,
EVP_PKEY
 *
pkey
, c⁄° 
EVP_MD
 *
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

996 
ASN1_ôem_dige°
(c⁄° 
ASN1_ITEM
 *
ô
,c⁄° 
EVP_MD
 *
ty≥
,*
d©a
,

997 *
md
,*
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

999 
ASN1_ôem_vîify
(c⁄° 
ASN1_ITEM
 *
ô
, 
X509_ALGOR
 *
Æg‹1
,

1000 
ASN1_BIT_STRING
 *
sig«tuª
,*
d©a
,
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1002 
ASN1_ôem_sign
(c⁄° 
ASN1_ITEM
 *
ô
, 
X509_ALGOR
 *
Æg‹1
, X509_ALGOR *
Æg‹2
,

1003 
ASN1_BIT_STRING
 *
sig«tuª
,

1004 *
d©a
, 
EVP_PKEY
 *
pkey
, c⁄° 
EVP_MD
 *
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1007 
X509_£t_vîsi⁄
(
X509
 *
x
,
vîsi⁄
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1008 
X509_£t_£rülNumbî
(
X509
 *
x
, 
ASN1_INTEGER
 *
£rül
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1009 
ASN1_INTEGER
 * 
X509_gë_£rülNumbî
(
X509
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1010 
X509_£t_issuî_«me
(
X509
 *
x
, 
X509_NAME
 *
«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1011 
X509_NAME
 * 
X509_gë_issuî_«me
(
X509
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1012 
X509_£t_subje˘_«me
(
X509
 *
x
, 
X509_NAME
 *
«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1013 
X509_NAME
 * 
X509_gë_subje˘_«me
(
X509
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1014 
X509_£t_nŸBef‹e
(
X509
 *
x
, 
ASN1_TIME
 *
tm
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1015 
X509_£t_nŸA·î
(
X509
 *
x
, 
ASN1_TIME
 *
tm
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1016 
X509_£t_pubkey
(
X509
 *
x
, 
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1017 
EVP_PKEY
 * 
X509_gë_pubkey
(
X509
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1018 
ASN1_BIT_STRING
 * 
X509_gë0_pubkey_bô°r
(c⁄° 
X509
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1019 
X509_˚πifiˇã_ty≥
(
X509
 *
x
,
EVP_PKEY
 *
pubkey
 ) 
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1021 
X509_REQ_£t_vîsi⁄
(
X509_REQ
 *
x
,
vîsi⁄
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1022 
X509_REQ_£t_subje˘_«me
(
X509_REQ
 *
ªq
,
X509_NAME
 *
«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1023 
X509_REQ_£t_pubkey
(
X509_REQ
 *
x
, 
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1024 
EVP_PKEY
 * 
X509_REQ_gë_pubkey
(
X509_REQ
 *
ªq
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1025 
X509_REQ_exãnsi⁄_nid
(
nid
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1026 * 
X509_REQ_gë_exãnsi⁄_nids
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1027 
X509_REQ_£t_exãnsi⁄_nids
(*
nids
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1028 
STACK_OF
(
X509_EXTENSION
Ë*
X509_REQ_gë_exãnsi⁄s
(
X509_REQ
 *
ªq
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1029 
X509_REQ_add_exãnsi⁄s_nid
(
X509_REQ
 *
ªq
, 
STACK_OF
(
X509_EXTENSION
Ë*
exts
,

1030 
nid
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1031 
X509_REQ_add_exãnsi⁄s
(
X509_REQ
 *
ªq
, 
STACK_OF
(
X509_EXTENSION
Ë*
exts
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1032 
X509_REQ_gë_©å_cou¡
(c⁄° 
X509_REQ
 *
ªq
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1033 
X509_REQ_gë_©å_by_NID
(c⁄° 
X509_REQ
 *
ªq
, 
nid
,

1034 
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1035 
X509_REQ_gë_©å_by_OBJ
(c⁄° 
X509_REQ
 *
ªq
, 
ASN1_OBJECT
 *
obj
,

1036 
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1037 
X509_ATTRIBUTE
 *
X509_REQ_gë_©å
(c⁄° 
X509_REQ
 *
ªq
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1038 
X509_ATTRIBUTE
 *
X509_REQ_dñëe_©å
(
X509_REQ
 *
ªq
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1039 
X509_REQ_add1_©å
(
X509_REQ
 *
ªq
, 
X509_ATTRIBUTE
 *
©å
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1040 
X509_REQ_add1_©å_by_OBJ
(
X509_REQ
 *
ªq
,

1041 c⁄° 
ASN1_OBJECT
 *
obj
, 
ty≥
,

1042 c⁄° *
byãs
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1043 
X509_REQ_add1_©å_by_NID
(
X509_REQ
 *
ªq
,

1044 
nid
, 
ty≥
,

1045 c⁄° *
byãs
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1046 
X509_REQ_add1_©å_by_txt
(
X509_REQ
 *
ªq
,

1047 c⁄° *
©å«me
, 
ty≥
,

1048 c⁄° *
byãs
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1050 
X509_CRL_£t_vîsi⁄
(
X509_CRL
 *
x
, 
vîsi⁄
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1051 
X509_CRL_£t_issuî_«me
(
X509_CRL
 *
x
, 
X509_NAME
 *
«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1052 
X509_CRL_£t_œ°Upd©e
(
X509_CRL
 *
x
, 
ASN1_TIME
 *
tm
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1053 
X509_CRL_£t_√xtUpd©e
(
X509_CRL
 *
x
, 
ASN1_TIME
 *
tm
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1054 
X509_CRL_s‹t
(
X509_CRL
 *
¸l
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1056 
X509_REVOKED_£t_£rülNumbî
(
X509_REVOKED
 *
x
, 
ASN1_INTEGER
 *
£rül
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1057 
X509_REVOKED_£t_ªvoˇti⁄D©e
(
X509_REVOKED
 *
r
, 
ASN1_TIME
 *
tm
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1059 
X509_REQ_check_¥iv©e_key
(
X509_REQ
 *
x509
,
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1061 
X509_check_¥iv©e_key
(
X509
 *
x509
,
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1063 
X509_issuî_™d_£rül_cmp
(c⁄° 
X509
 *
a
, c⁄° X509 *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1064 
X509_issuî_™d_£rül_hash
(
X509
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1066 
X509_issuî_«me_cmp
(c⁄° 
X509
 *
a
, c⁄° X509 *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1067 
X509_issuî_«me_hash
(
X509
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1069 
X509_subje˘_«me_cmp
(c⁄° 
X509
 *
a
, c⁄° X509 *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1070 
X509_subje˘_«me_hash
(
X509
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1072 
X509_cmp
(c⁄° 
X509
 *
a
, c⁄° X509 *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1073 
X509_NAME_cmp
(c⁄° 
X509_NAME
 *
a
, c⁄° X509_NAME *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1074 
X509_NAME_hash
(
X509_NAME
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1076 
X509_CRL_cmp
(c⁄° 
X509_CRL
 *
a
, c⁄° X509_CRL *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1077 #i‚de‡
OPENSSL_NO_FP_API


1078 
X509_¥öt_ex_Â
(
FILE
 *
bp
,
X509
 *
x
, 
nmÊag
, 
cÊag
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1079 
X509_¥öt_Â
(
FILE
 *
bp
,
X509
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1080 
X509_CRL_¥öt_Â
(
FILE
 *
bp
,
X509_CRL
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1081 
X509_REQ_¥öt_Â
(
FILE
 *
bp
,
X509_REQ
 *
ªq
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1082 
X509_NAME_¥öt_ex_Â
(
FILE
 *
Â
, 
X509_NAME
 *
nm
, 
ödít
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1085 #i‚de‡
OPENSSL_NO_BIO


1086 
X509_NAME_¥öt
(
BIO
 *
bp
, 
X509_NAME
 *
«me
, 
oba£
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1087 
X509_NAME_¥öt_ex
(
BIO
 *
out
, 
X509_NAME
 *
nm
, 
ödít
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1088 
X509_¥öt_ex
(
BIO
 *
bp
,
X509
 *
x
, 
nmÊag
, 
cÊag
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1089 
X509_¥öt
(
BIO
 *
bp
,
X509
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1090 
X509_oc•id_¥öt
(
BIO
 *
bp
,
X509
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1091 
X509_CERT_AUX_¥öt
(
BIO
 *
bp
,
X509_CERT_AUX
 *
x
, 
ödít
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1092 
X509_CRL_¥öt
(
BIO
 *
bp
,
X509_CRL
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1093 
X509_REQ_¥öt_ex
(
BIO
 *
bp
, 
X509_REQ
 *
x
, 
nmÊag
, 
cÊag
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1094 
X509_REQ_¥öt
(
BIO
 *
bp
,
X509_REQ
 *
ªq
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1097 
X509_NAME_íåy_cou¡
(
X509_NAME
 *
«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1098 
X509_NAME_gë_ãxt_by_NID
(
X509_NAME
 *
«me
, 
nid
,

1099 *
buf
,
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1100 
X509_NAME_gë_ãxt_by_OBJ
(
X509_NAME
 *
«me
, 
ASN1_OBJECT
 *
obj
,

1101 *
buf
,
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1105 
X509_NAME_gë_ödex_by_NID
(
X509_NAME
 *
«me
,
nid
,
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1106 
X509_NAME_gë_ödex_by_OBJ
(
X509_NAME
 *
«me
,
ASN1_OBJECT
 *
obj
,

1107 
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1108 
X509_NAME_ENTRY
 *
X509_NAME_gë_íåy
(
X509_NAME
 *
«me
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1109 
X509_NAME_ENTRY
 *
X509_NAME_dñëe_íåy
(
X509_NAME
 *
«me
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1110 
X509_NAME_add_íåy
(
X509_NAME
 *
«me
,
X509_NAME_ENTRY
 *
√
,

1111 
loc
, 
£t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1112 
X509_NAME_add_íåy_by_OBJ
(
X509_NAME
 *
«me
, 
ASN1_OBJECT
 *
obj
, 
ty≥
,

1113 *
byãs
, 
Àn
, 
loc
, 
£t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1114 
X509_NAME_add_íåy_by_NID
(
X509_NAME
 *
«me
, 
nid
, 
ty≥
,

1115 *
byãs
, 
Àn
, 
loc
, 
£t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1116 
X509_NAME_ENTRY
 *
X509_NAME_ENTRY_¸óã_by_txt
(X509_NAME_ENTRY **
√
,

1117 c⁄° *
fõld
, 
ty≥
, c⁄° *
byãs
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1118 
X509_NAME_ENTRY
 *
X509_NAME_ENTRY_¸óã_by_NID
(X509_NAME_ENTRY **
√
, 
nid
,

1119 
ty≥
,*
byãs
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1120 
X509_NAME_add_íåy_by_txt
(
X509_NAME
 *
«me
, c⁄° *
fõld
, 
ty≥
,

1121 c⁄° *
byãs
, 
Àn
, 
loc
, 
£t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1122 
X509_NAME_ENTRY
 *
X509_NAME_ENTRY_¸óã_by_OBJ
(X509_NAME_ENTRY **
√
,

1123 
ASN1_OBJECT
 *
obj
, 
ty≥
,c⁄° *
byãs
,

1124 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1125 
X509_NAME_ENTRY_£t_obje˘
(
X509_NAME_ENTRY
 *
√
,

1126 
ASN1_OBJECT
 *
obj
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1127 
X509_NAME_ENTRY_£t_d©a
(
X509_NAME_ENTRY
 *
√
, 
ty≥
,

1128 c⁄° *
byãs
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1129 
ASN1_OBJECT
 * 
X509_NAME_ENTRY_gë_obje˘
(
X509_NAME_ENTRY
 *
√
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1130 
ASN1_STRING
 * 
X509_NAME_ENTRY_gë_d©a
(
X509_NAME_ENTRY
 *
√
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1132 
X509v3_gë_ext_cou¡
(c⁄° 
STACK_OF
(
X509_EXTENSION
Ë*
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1133 
X509v3_gë_ext_by_NID
(c⁄° 
STACK_OF
(
X509_EXTENSION
Ë*
x
,

1134 
nid
, 
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1135 
X509v3_gë_ext_by_OBJ
(c⁄° 
STACK_OF
(
X509_EXTENSION
Ë*
x
,

1136 
ASN1_OBJECT
 *
obj
,
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1137 
X509v3_gë_ext_by_¸ôiˇl
(c⁄° 
STACK_OF
(
X509_EXTENSION
Ë*
x
,

1138 
¸ô
, 
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1139 
X509_EXTENSION
 *
X509v3_gë_ext
(c⁄° 
STACK_OF
(X509_EXTENSIONË*
x
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1140 
X509_EXTENSION
 *
X509v3_dñëe_ext
(
STACK_OF
(X509_EXTENSIONË*
x
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1141 
STACK_OF
(
X509_EXTENSION
Ë*
X509v3_add_ext
(STACK_OF(X509_EXTENSIONË**
x
,

1142 
X509_EXTENSION
 *
ex
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1144 
X509_gë_ext_cou¡
(
X509
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1145 
X509_gë_ext_by_NID
(
X509
 *
x
, 
nid
, 
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1146 
X509_gë_ext_by_OBJ
(
X509
 *
x
,
ASN1_OBJECT
 *
obj
,
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1147 
X509_gë_ext_by_¸ôiˇl
(
X509
 *
x
, 
¸ô
, 
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1148 
X509_EXTENSION
 *
X509_gë_ext
(
X509
 *
x
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1149 
X509_EXTENSION
 *
X509_dñëe_ext
(
X509
 *
x
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1150 
X509_add_ext
(
X509
 *
x
, 
X509_EXTENSION
 *
ex
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1151 * 
X509_gë_ext_d2i
(
X509
 *
x
, 
nid
, *
¸ô
, *
idx
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1152 
X509_add1_ext_i2d
(
X509
 *
x
, 
nid
, *
vÆue
, 
¸ô
,

1153 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1155 
X509_CRL_gë_ext_cou¡
(
X509_CRL
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1156 
X509_CRL_gë_ext_by_NID
(
X509_CRL
 *
x
, 
nid
, 
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1157 
X509_CRL_gë_ext_by_OBJ
(
X509_CRL
 *
x
,
ASN1_OBJECT
 *
obj
,
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1158 
X509_CRL_gë_ext_by_¸ôiˇl
(
X509_CRL
 *
x
, 
¸ô
, 
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1159 
X509_EXTENSION
 *
X509_CRL_gë_ext
(
X509_CRL
 *
x
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1160 
X509_EXTENSION
 *
X509_CRL_dñëe_ext
(
X509_CRL
 *
x
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1161 
X509_CRL_add_ext
(
X509_CRL
 *
x
, 
X509_EXTENSION
 *
ex
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1162 * 
X509_CRL_gë_ext_d2i
(
X509_CRL
 *
x
, 
nid
, *
¸ô
, *
idx
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1163 
X509_CRL_add1_ext_i2d
(
X509_CRL
 *
x
, 
nid
, *
vÆue
, 
¸ô
,

1164 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1166 
X509_REVOKED_gë_ext_cou¡
(
X509_REVOKED
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1167 
X509_REVOKED_gë_ext_by_NID
(
X509_REVOKED
 *
x
, 
nid
, 
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1168 
X509_REVOKED_gë_ext_by_OBJ
(
X509_REVOKED
 *
x
,
ASN1_OBJECT
 *
obj
,
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1169 
X509_REVOKED_gë_ext_by_¸ôiˇl
(
X509_REVOKED
 *
x
, 
¸ô
, 
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1170 
X509_EXTENSION
 *
X509_REVOKED_gë_ext
(
X509_REVOKED
 *
x
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1171 
X509_EXTENSION
 *
X509_REVOKED_dñëe_ext
(
X509_REVOKED
 *
x
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1172 
X509_REVOKED_add_ext
(
X509_REVOKED
 *
x
, 
X509_EXTENSION
 *
ex
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1173 * 
X509_REVOKED_gë_ext_d2i
(
X509_REVOKED
 *
x
, 
nid
, *
¸ô
, *
idx
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1174 
X509_REVOKED_add1_ext_i2d
(
X509_REVOKED
 *
x
, 
nid
, *
vÆue
, 
¸ô
,

1175 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1177 
X509_EXTENSION
 *
X509_EXTENSION_¸óã_by_NID
(X509_EXTENSION **
ex
,

1178 
nid
, 
¸ô
, 
ASN1_OCTET_STRING
 *
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1179 
X509_EXTENSION
 *
X509_EXTENSION_¸óã_by_OBJ
(X509_EXTENSION **
ex
,

1180 
ASN1_OBJECT
 *
obj
,
¸ô
,
ASN1_OCTET_STRING
 *
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1181 
X509_EXTENSION_£t_obje˘
(
X509_EXTENSION
 *
ex
,
ASN1_OBJECT
 *
obj
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1182 
X509_EXTENSION_£t_¸ôiˇl
(
X509_EXTENSION
 *
ex
, 
¸ô
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1183 
X509_EXTENSION_£t_d©a
(
X509_EXTENSION
 *
ex
,

1184 
ASN1_OCTET_STRING
 *
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1185 
ASN1_OBJECT
 * 
X509_EXTENSION_gë_obje˘
(
X509_EXTENSION
 *
ex
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1186 
ASN1_OCTET_STRING
 *
X509_EXTENSION_gë_d©a
(
X509_EXTENSION
 *
√
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1187 
X509_EXTENSION_gë_¸ôiˇl
(
X509_EXTENSION
 *
ex
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1189 
X509©_gë_©å_cou¡
(c⁄° 
STACK_OF
(
X509_ATTRIBUTE
Ë*
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1190 
X509©_gë_©å_by_NID
(c⁄° 
STACK_OF
(
X509_ATTRIBUTE
Ë*
x
, 
nid
,

1191 
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1192 
X509©_gë_©å_by_OBJ
(c⁄° 
STACK_OF
(
X509_ATTRIBUTE
Ë*
sk
, 
ASN1_OBJECT
 *
obj
,

1193 
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1194 
X509_ATTRIBUTE
 *
X509©_gë_©å
(c⁄° 
STACK_OF
(X509_ATTRIBUTEË*
x
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1195 
X509_ATTRIBUTE
 *
X509©_dñëe_©å
(
STACK_OF
(X509_ATTRIBUTEË*
x
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1196 
STACK_OF
(
X509_ATTRIBUTE
Ë*
X509©_add1_©å
(STACK_OF(X509_ATTRIBUTEË**
x
,

1197 
X509_ATTRIBUTE
 *
©å
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1198 
STACK_OF
(
X509_ATTRIBUTE
Ë*
X509©_add1_©å_by_OBJ
(STACK_OF(X509_ATTRIBUTEË**
x
,

1199 c⁄° 
ASN1_OBJECT
 *
obj
, 
ty≥
,

1200 c⁄° *
byãs
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1201 
STACK_OF
(
X509_ATTRIBUTE
Ë*
X509©_add1_©å_by_NID
(STACK_OF(X509_ATTRIBUTEË**
x
,

1202 
nid
, 
ty≥
,

1203 c⁄° *
byãs
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1204 
STACK_OF
(
X509_ATTRIBUTE
Ë*
X509©_add1_©å_by_txt
(STACK_OF(X509_ATTRIBUTEË**
x
,

1205 c⁄° *
©å«me
, 
ty≥
,

1206 c⁄° *
byãs
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1207 *
X509©_gë0_d©a_by_OBJ
(
STACK_OF
(
X509_ATTRIBUTE
Ë*
x
,

1208 
ASN1_OBJECT
 *
obj
, 
œ°pos
, 
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1209 
X509_ATTRIBUTE
 *
X509_ATTRIBUTE_¸óã_by_NID
(X509_ATTRIBUTE **
©å
, 
nid
,

1210 
©πy≥
, c⁄° *
d©a
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1211 
X509_ATTRIBUTE
 *
X509_ATTRIBUTE_¸óã_by_OBJ
(X509_ATTRIBUTE **
©å
,

1212 c⁄° 
ASN1_OBJECT
 *
obj
, 
©πy≥
, c⁄° *
d©a
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1213 
X509_ATTRIBUTE
 *
X509_ATTRIBUTE_¸óã_by_txt
(X509_ATTRIBUTE **
©å
,

1214 c⁄° *
©∫ame
, 
ty≥
, c⁄° *
byãs
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1215 
X509_ATTRIBUTE_£t1_obje˘
(
X509_ATTRIBUTE
 *
©å
, c⁄° 
ASN1_OBJECT
 *
obj
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1216 
X509_ATTRIBUTE_£t1_d©a
(
X509_ATTRIBUTE
 *
©å
, 
©åty≥
, c⁄° *
d©a
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1217 *
X509_ATTRIBUTE_gë0_d©a
(
X509_ATTRIBUTE
 *
©å
, 
idx
,

1218 
©πy≥
, *
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1219 
X509_ATTRIBUTE_cou¡
(
X509_ATTRIBUTE
 *
©å
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1220 
ASN1_OBJECT
 *
X509_ATTRIBUTE_gë0_obje˘
(
X509_ATTRIBUTE
 *
©å
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1221 
ASN1_TYPE
 *
X509_ATTRIBUTE_gë0_ty≥
(
X509_ATTRIBUTE
 *
©å
, 
idx
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1223 
EVP_PKEY_gë_©å_cou¡
(c⁄° 
EVP_PKEY
 *
key
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1224 
EVP_PKEY_gë_©å_by_NID
(c⁄° 
EVP_PKEY
 *
key
, 
nid
,

1225 
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1226 
EVP_PKEY_gë_©å_by_OBJ
(c⁄° 
EVP_PKEY
 *
key
, 
ASN1_OBJECT
 *
obj
,

1227 
œ°pos
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1228 
X509_ATTRIBUTE
 *
EVP_PKEY_gë_©å
(c⁄° 
EVP_PKEY
 *
key
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1229 
X509_ATTRIBUTE
 *
EVP_PKEY_dñëe_©å
(
EVP_PKEY
 *
key
, 
loc
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1230 
EVP_PKEY_add1_©å
(
EVP_PKEY
 *
key
, 
X509_ATTRIBUTE
 *
©å
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1231 
EVP_PKEY_add1_©å_by_OBJ
(
EVP_PKEY
 *
key
,

1232 c⁄° 
ASN1_OBJECT
 *
obj
, 
ty≥
,

1233 c⁄° *
byãs
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1234 
EVP_PKEY_add1_©å_by_NID
(
EVP_PKEY
 *
key
,

1235 
nid
, 
ty≥
,

1236 c⁄° *
byãs
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1237 
EVP_PKEY_add1_©å_by_txt
(
EVP_PKEY
 *
key
,

1238 c⁄° *
©å«me
, 
ty≥
,

1239 c⁄° *
byãs
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1241 
X509_vîify_˚π
(
X509_STORE_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1244 
X509
 *
X509_föd_by_issuî_™d_£rül
(
STACK_OF
(X509Ë*
sk
,
X509_NAME
 *
«me
,

1245 
ASN1_INTEGER
 *
£rül
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1246 
X509
 *
X509_föd_by_subje˘
(
STACK_OF
(X509Ë*
sk
,
X509_NAME
 *
«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1248 
DECLARE_ASN1_FUNCTIONS
(
PBEPARAM
)

1249 
DECLARE_ASN1_FUNCTIONS
(
PBE2PARAM
)

1250 
DECLARE_ASN1_FUNCTIONS
(
PBKDF2PARAM
)

1252 
X509_ALGOR
 *
PKCS5_pbe_£t
(
Æg
, 
ôî
, *
ß…
, 
ß…Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1253 
X509_ALGOR
 *
PKCS5_pbe2_£t
(c⁄° 
EVP_CIPHER
 *
cùhî
, 
ôî
,

1254 *
ß…
, 
ß…Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1258 
DECLARE_ASN1_FUNCTIONS
(
PKCS8_PRIV_KEY_INFO
)

1260 
EVP_PKEY
 *
EVP_PKCS82PKEY
(
PKCS8_PRIV_KEY_INFO
 *
p8
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1261 
PKCS8_PRIV_KEY_INFO
 *
EVP_PKEY2PKCS8
(
EVP_PKEY
 *
pkey
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1262 
PKCS8_PRIV_KEY_INFO
 *
EVP_PKEY2PKCS8_brokí
(
EVP_PKEY
 *
pkey
, 
brokí
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1263 
PKCS8_PRIV_KEY_INFO
 *
PKCS8_£t_brokí
(PKCS8_PRIV_KEY_INFO *
p8
, 
brokí
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1265 
X509_check_åu°
(
X509
 *
x
, 
id
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1266 
X509_TRUST_gë_cou¡
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1267 
X509_TRUST
 * 
X509_TRUST_gë0
(
idx
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1268 
X509_TRUST_gë_by_id
(
id
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1269 
X509_TRUST_add
(
id
, 
Êags
, (*
ck
)(
X509_TRUST
 *, 
X509
 *, ),

1270 *
«me
, 
¨g1
, *
¨g2
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1271 
X509_TRUST_˛ónup
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1272 
X509_TRUST_gë_Êags
(
X509_TRUST
 *
xp
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1273 *
X509_TRUST_gë0_«me
(
X509_TRUST
 *
xp
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1274 
X509_TRUST_gë_åu°
(
X509_TRUST
 *
xp
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1280 
ERR_lﬂd_X509_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1285 
	#X509_F_ADD_CERT_DIR
 100

	)

1286 
	#X509_F_BY_FILE_CTRL
 101

	)

1287 
	#X509_F_CHECK_POLICY
 145

	)

1288 
	#X509_F_DIR_CTRL
 102

	)

1289 
	#X509_F_GET_CERT_BY_SUBJECT
 103

	)

1290 
	#X509_F_NETSCAPE_SPKI_B64_DECODE
 129

	)

1291 
	#X509_F_NETSCAPE_SPKI_B64_ENCODE
 130

	)

1292 
	#X509_F_X509AT_ADD1_ATTR
 135

	)

1293 
	#X509_F_X509V3_ADD_EXT
 104

	)

1294 
	#X509_F_X509_ATTRIBUTE_CREATE_BY_NID
 136

	)

1295 
	#X509_F_X509_ATTRIBUTE_CREATE_BY_OBJ
 137

	)

1296 
	#X509_F_X509_ATTRIBUTE_CREATE_BY_TXT
 140

	)

1297 
	#X509_F_X509_ATTRIBUTE_GET0_DATA
 139

	)

1298 
	#X509_F_X509_ATTRIBUTE_SET1_DATA
 138

	)

1299 
	#X509_F_X509_CHECK_PRIVATE_KEY
 128

	)

1300 
	#X509_F_X509_CRL_PRINT_FP
 147

	)

1301 
	#X509_F_X509_EXTENSION_CREATE_BY_NID
 108

	)

1302 
	#X509_F_X509_EXTENSION_CREATE_BY_OBJ
 109

	)

1303 
	#X509_F_X509_GET_PUBKEY_PARAMETERS
 110

	)

1304 
	#X509_F_X509_LOAD_CERT_CRL_FILE
 132

	)

1305 
	#X509_F_X509_LOAD_CERT_FILE
 111

	)

1306 
	#X509_F_X509_LOAD_CRL_FILE
 112

	)

1307 
	#X509_F_X509_NAME_ADD_ENTRY
 113

	)

1308 
	#X509_F_X509_NAME_ENTRY_CREATE_BY_NID
 114

	)

1309 
	#X509_F_X509_NAME_ENTRY_CREATE_BY_TXT
 131

	)

1310 
	#X509_F_X509_NAME_ENTRY_SET_OBJECT
 115

	)

1311 
	#X509_F_X509_NAME_ONELINE
 116

	)

1312 
	#X509_F_X509_NAME_PRINT
 117

	)

1313 
	#X509_F_X509_PRINT_EX_FP
 118

	)

1314 
	#X509_F_X509_PUBKEY_GET
 119

	)

1315 
	#X509_F_X509_PUBKEY_SET
 120

	)

1316 
	#X509_F_X509_REQ_CHECK_PRIVATE_KEY
 144

	)

1317 
	#X509_F_X509_REQ_PRINT_EX
 121

	)

1318 
	#X509_F_X509_REQ_PRINT_FP
 122

	)

1319 
	#X509_F_X509_REQ_TO_X509
 123

	)

1320 
	#X509_F_X509_STORE_ADD_CERT
 124

	)

1321 
	#X509_F_X509_STORE_ADD_CRL
 125

	)

1322 
	#X509_F_X509_STORE_CTX_GET1_ISSUER
 146

	)

1323 
	#X509_F_X509_STORE_CTX_INIT
 143

	)

1324 
	#X509_F_X509_STORE_CTX_NEW
 142

	)

1325 
	#X509_F_X509_STORE_CTX_PURPOSE_INHERIT
 134

	)

1326 
	#X509_F_X509_TO_X509_REQ
 126

	)

1327 
	#X509_F_X509_TRUST_ADD
 133

	)

1328 
	#X509_F_X509_TRUST_SET
 141

	)

1329 
	#X509_F_X509_VERIFY_CERT
 127

	)

1332 
	#X509_R_BAD_X509_FILETYPE
 100

	)

1333 
	#X509_R_BASE64_DECODE_ERROR
 118

	)

1334 
	#X509_R_CANT_CHECK_DH_KEY
 114

	)

1335 
	#X509_R_CERT_ALREADY_IN_HASH_TABLE
 101

	)

1336 
	#X509_R_ERR_ASN1_LIB
 102

	)

1337 
	#X509_R_INVALID_DIRECTORY
 113

	)

1338 
	#X509_R_INVALID_FIELD_NAME
 119

	)

1339 
	#X509_R_INVALID_TRUST
 123

	)

1340 
	#X509_R_KEY_TYPE_MISMATCH
 115

	)

1341 
	#X509_R_KEY_VALUES_MISMATCH
 116

	)

1342 
	#X509_R_LOADING_CERT_DIR
 103

	)

1343 
	#X509_R_LOADING_DEFAULTS
 104

	)

1344 
	#X509_R_NO_CERT_SET_FOR_US_TO_VERIFY
 105

	)

1345 
	#X509_R_SHOULD_RETRY
 106

	)

1346 
	#X509_R_UNABLE_TO_FIND_PARAMETERS_IN_CHAIN
 107

	)

1347 
	#X509_R_UNABLE_TO_GET_CERTS_PUBLIC_KEY
 108

	)

1348 
	#X509_R_UNKNOWN_KEY_TYPE
 117

	)

1349 
	#X509_R_UNKNOWN_NID
 109

	)

1350 
	#X509_R_UNKNOWN_PURPOSE_ID
 121

	)

1351 
	#X509_R_UNKNOWN_TRUST_ID
 120

	)

1352 
	#X509_R_UNSUPPORTED_ALGORITHM
 111

	)

1353 
	#X509_R_WRONG_LOOKUP_TYPE
 112

	)

1354 
	#X509_R_WRONG_TYPE
 122

	)

1356 #ifde‡ 
__˝lu•lus


	@/usr/include/pthread_impl.h

24 #i‚de‡
_PTHREAD_IMPL_H_


25 
	#_PTHREAD_IMPL_H_


	)

32 #i‚de‡
__POSIX_LIB__


37 
	#_PTHREAD_MUTEX_SIG_öô
 0x32AAABA7

	)

39 
	#_PTHREAD_ERRORCHECK_MUTEX_SIG_öô
 0x32AAABA1

	)

40 
	#_PTHREAD_RECURSIVE_MUTEX_SIG_öô
 0x32AAABA2

	)

41 
	#_PTHREAD_FIRSTFIT_MUTEX_SIG_öô
 0x32AAABA3

	)

43 
	#_PTHREAD_COND_SIG_öô
 0x3CB0B1BB

	)

44 
	#_PTHREAD_ONCE_SIG_öô
 0x30B1BCBA

	)

45 
	#_PTHREAD_RWLOCK_SIG_öô
 0x2DA8B3B4

	)

50 
	#SCHED_OTHER
 1

	)

51 
	#SCHED_FIFO
 4

	)

52 
	#SCHED_RR
 2

	)

54 
	#__SCHED_PARAM_SIZE__
 4

	)

	@/usr/include/runetype.h

39 #i‚def 
_RUNETYPE_H_


40 
	#_RUNETYPE_H_


	)

42 
	~<_ty≥s.h
>

44 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

46 
	~<sys/_ty≥s/_size_t.h
>

47 
	~<sys/_ty≥s/_˘_ru√_t.h
>

48 
	~<sys/_ty≥s/_ru√_t.h
>

49 
	~<sys/_ty≥s/_wch¨_t.h
>

50 
	~<sys/_ty≥s/_wöt_t.h
>

54 
	#_CACHED_RUNES
 (1 <<8 )

	)

55 
	#_CRMASK
 (~(
_CACHED_RUNES
 - 1))

	)

61 
__d¨wö_ru√_t
 
	m__mö
;

62 
__d¨wö_ru√_t
 
	m__max
;

63 
__d¨wö_ru√_t
 
	m__m≠
;

64 
__uöt32_t
 *
	m__ty≥s
;

65 } 
	t_Ru√E¡ry
;

68 
	m__ƒ™ges
;

69 
_Ru√E¡ry
 *
	m__ønges
;

70 } 
	t_Ru√R™ge
;

73 
	m__«me
[14];

74 
__uöt32_t
 
	m__mask
;

75 } 
	t_Ru√Ch¨Cœss
;

78 
	m__magic
[8];

79 
	m__ícodög
[32];

81 
__d¨wö_ru√_t
 (*
__sgëru√
)(c⁄° *, 
	m__d¨wö_size_t
, const **);

82 (*
	m__•uåu√
)(
	m__d¨wö_ru√_t
, *, 
	m__d¨wö_size_t
, **);

83 
__d¨wö_ru√_t
 
	m__övÆid_ru√
;

85 
__uöt32_t
 
	m__ru√ty≥
[
_CACHED_RUNES
];

86 
__d¨wö_ru√_t
 
	m__m≠lowî
[
_CACHED_RUNES
];

87 
__d¨wö_ru√_t
 
	m__m≠uµî
[
_CACHED_RUNES
];

94 
_Ru√R™ge
 
	m__ru√ty≥_ext
;

95 
_Ru√R™ge
 
	m__m≠lowî_ext
;

96 
_Ru√R™ge
 
	m__m≠uµî_ext
;

98 *
	m__v¨übÀ
;

99 
	m__v¨übÀ_Àn
;

104 
	m__nch¨˛as£s
;

105 
_Ru√Ch¨Cœss
 *
	m__ch¨˛as£s
;

106 } 
	t_Ru√LoˇÀ
;

108 
	#_RUNE_MAGIC_A
 "Ru√MagA"

	)

110 
__BEGIN_DECLS


111 
_Ru√LoˇÀ
 
_DeÁu…Ru√LoˇÀ
;

112 
_Ru√LoˇÀ
 *
_CuºítRu√LoˇÀ
;

113 
	g__END_DECLS


	@/usr/include/secure/_stdio.h

24 #i‚de‡
_STDIO_H_


25 #îr‹ 
îr‹
 "Never use <secure/_stdio.h> directly; include <stdio.h> instead."

28 #i‚de‡
_SECURE__STDIO_H_


29 
	#_SECURE__STDIO_H_


	)

31 
	~<£cuª/_comm⁄.h
>

33 #i‡
_USE_FORTIFY_LEVEL
 > 0

35 #i‚de‡
__has_buûtö


36 
	#_undef__has_buûtö


	)

37 
	#__has_buûtö
(
x
Ë0

	)

41 #i‡
__has_buûtö
(
__buûtö___•rötf_chk
Ë|| 
deföed
(
__GNUC__
)

42 
__•rötf_chk
 (* 
__ª°ri˘
, , 
size_t
,

43 c⁄° * 
__ª°ri˘
, ...);

45 #unde‡
•rötf


46 
	#•rötf
(
°r
, ...) \

47 
	`__buûtö___•rötf_chk
 (
°r
, 0, 
	`__d¨wö_obsz
(°r), 
__VA_ARGS__
)

	)

50 #i‡
__DARWIN_C_LEVEL
 >= 200112L

51 #i‡
__has_buûtö
(
__buûtö___¢¥ötf_chk
Ë|| 
deföed
(
__GNUC__
)

52 
__¢¥ötf_chk
 (* 
__ª°ri˘
, 
size_t
, , size_t,

53 c⁄° * 
__ª°ri˘
, ...);

55 #unde‡
¢¥ötf


56 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

57 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 0, 
	`__d¨wö_obsz
(°r), 
__VA_ARGS__
)

	)

60 #i‡
__has_buûtö
(
__buûtö___v•rötf_chk
Ë|| 
deföed
(
__GNUC__
)

61 
__v•rötf_chk
 (* 
__ª°ri˘
, , 
size_t
,

62 c⁄° * 
__ª°ri˘
, 
va_li°
);

64 #unde‡
v•rötf


65 
	#v•rötf
(
°r
, 
f‹m©
, 
≠
) \

66 
	`__buûtö___v•rötf_chk
 (
°r
, 0, 
	`__d¨wö_obsz
(°r), 
f‹m©
, 
≠
)

	)

69 #i‡
__has_buûtö
(
__buûtö___v¢¥ötf_chk
Ë|| 
deföed
(
__GNUC__
)

70 
__v¢¥ötf_chk
 (* 
__ª°ri˘
, 
size_t
, , size_t,

71 c⁄° * 
__ª°ri˘
, 
va_li°
);

73 #unde‡
v¢¥ötf


74 
	#v¢¥ötf
(
°r
, 
Àn
, 
f‹m©
, 
≠
) \

75 
	`__buûtö___v¢¥ötf_chk
 (
°r
, 
Àn
, 0, 
	`__d¨wö_obsz
(°r), 
f‹m©
, 
≠
)

	)

80 #ifde‡
_undef__has_buûtö


81 #unde‡
_undef__has_buûtö


82 #unde‡
__has_buûtö


	@/usr/include/secure/_string.h

24 #i‚de‡
_STRING_H_


28 #i‚de‡
_SECURE__STRING_H_


29 
	#_SECURE__STRING_H_


	)

31 
	~<Avaûabûôy.h
>

32 
	~<sys/cdefs.h
>

33 
	~<£cuª/_comm⁄.h
>

35 #i‡
_USE_FORTIFY_LEVEL
 > 0

37 #i‚de‡
__has_buûtö


38 
	#_undef__has_buûtö


	)

39 
	#__has_buûtö
(
x
Ë0

	)

43 #i‡
deföed
(
__˛™g__
) && \

44 ((
deföed
(
__≠∂e_buûd_vîsi⁄__
Ë&& 
	g__≠∂e_buûd_vîsi⁄__
 >= 4260006) || \

45 (!
deföed
(
__≠∂e_buûd_vîsi⁄__
Ë&& (
__˛™g_maj‹__
 > 3 || (__˛™g_maj‹__ =3 && 
__˛™g_mö‹__
 >= 3))))

46 
	#__HAS_FIXED_CHK_PROTOTYPES
 1

	)

48 
	#__HAS_FIXED_CHK_PROTOTYPES
 0

	)

54 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 >70000 || 
__MAC_OS_X_VERSION_MIN_REQUIRED
 >= 1090

55 #i‡
__has_buûtö
(
__buûtö___memc˝y_chk
Ë&& 
__HAS_FIXED_CHK_PROTOTYPES


56 #unde‡
memc˝y


57 
	#memc˝y
(
de°
, 
§c
, 
c
, 
Àn
) \

58 
	`__buûtö___memc˝y_chk
 (
de°
, 
§c
, 
c
, 
Àn
, 
	`__d¨wö_obsz0
 (de°))

	)

62 #i‡
__has_buûtö
(
__buûtö___mem˝y_chk
Ë|| 
deföed
(
__GNUC__
)

63 #unde‡
mem˝y


64 
	#mem˝y
(
de°
, 
§c
, 
Àn
) \

65 
	`__buûtö___mem˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__d¨wö_obsz0
 (de°))

	)

68 #i‡
__has_buûtö
(
__buûtö___memmove_chk
Ë|| 
deföed
(
__GNUC__
)

69 #unde‡
memmove


70 
	#memmove
(
de°
, 
§c
, 
Àn
) \

71 
	`__buûtö___memmove_chk
 (
de°
, 
§c
, 
Àn
, 
	`__d¨wö_obsz0
 (de°))

	)

74 #i‡
__has_buûtö
(
__buûtö___mem£t_chk
Ë|| 
deföed
(
__GNUC__
)

75 #unde‡
mem£t


76 
	#mem£t
(
de°
, 
vÆ
, 
Àn
) \

77 
	`__buûtö___mem£t_chk
 (
de°
, 
vÆ
, 
Àn
, 
	`__d¨wö_obsz0
 (de°))

	)

80 #i‡
__has_buûtö
(
__buûtö___°r˝y_chk
Ë|| 
deföed
(
__GNUC__
)

81 #unde‡
°r˝y


82 
	#°r˝y
(
de°
, 
§c
) \

83 
	`__buûtö___°r˝y_chk
 (
de°
, 
§c
, 
	`__d¨wö_obsz
 (de°))

	)

86 #i‡
__DARWIN_C_LEVEL
 >= 200809L

87 #i‡
__has_buûtö
(
__buûtö___°p˝y_chk
Ë|| 
deföed
(
__GNUC__
)

88 #unde‡
°p˝y


89 
	#°p˝y
(
de°
, 
§c
) \

90 
	`__buûtö___°p˝y_chk
 (
de°
, 
§c
, 
	`__d¨wö_obsz
 (de°))

	)

93 #i‡
__has_buûtö
(
__buûtö___°≤˝y_chk
Ë|| 
__APPLE_CC__
 >5666 || 
__GNUC__
 > 4 || (__GNUC__ =4 && 
__GNUC_MINOR__
 >= 7)

94 #unde‡
°≤˝y


95 
	#°≤˝y
(
de°
, 
§c
, 
Àn
) \

96 
	`__buûtö___°≤˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__d¨wö_obsz
 (de°))

	)

100 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


101 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 >70000 || 
__MAC_OS_X_VERSION_MIN_REQUIRED
 >= 1090

102 #i‡
__has_buûtö
(
__buûtö___°æ˝y_chk
Ë&& 
__HAS_FIXED_CHK_PROTOTYPES


103 #unde‡
°æ˝y


104 
	#°æ˝y
(
de°
, 
§c
, 
Àn
) \

105 
	`__buûtö___°æ˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__d¨wö_obsz
 (de°))

	)

108 #i‡
__has_buûtö
(
__buûtö___°æˇt_chk
Ë&& 
__HAS_FIXED_CHK_PROTOTYPES


109 #unde‡
°æˇt


110 
	#°æˇt
(
de°
, 
§c
, 
Àn
) \

111 
	`__buûtö___°æˇt_chk
 (
de°
, 
§c
, 
Àn
, 
	`__d¨wö_obsz
 (de°))

	)

116 #i‡
__has_buûtö
(
__buûtö___°∫˝y_chk
Ë|| 
deföed
(
__GNUC__
)

117 #unde‡
°∫˝y


118 
	#°∫˝y
(
de°
, 
§c
, 
Àn
) \

119 
	`__buûtö___°∫˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__d¨wö_obsz
 (de°))

	)

122 #i‡
__has_buûtö
(
__buûtö___°rˇt_chk
Ë|| 
deföed
(
__GNUC__
)

123 #unde‡
°rˇt


124 
	#°rˇt
(
de°
, 
§c
) \

125 
	`__buûtö___°rˇt_chk
 (
de°
, 
§c
, 
	`__d¨wö_obsz
 (de°))

	)

128 #i‡! (
deföed
(
__IPHONE_OS_VERSION_MIN_REQUIRED
) && __IPHONE_OS_VERSION_MIN_REQUIRED < 32000)

129 #i‡
__has_buûtö
(
__buûtö___°∫ˇt_chk
Ë|| 
deföed
(
__GNUC__
)

130 #unde‡
°∫ˇt


131 
	#°∫ˇt
(
de°
, 
§c
, 
Àn
) \

132 
	`__buûtö___°∫ˇt_chk
 (
de°
, 
§c
, 
Àn
, 
	`__d¨wö_obsz
 (de°))

	)

136 #ifde‡
_undef__has_buûtö


137 #unde‡
_undef__has_buûtö


138 #unde‡
__has_buûtö


141 #unde‡
__HAS_FIXED_CHK_PROTOTYPES


	@/usr/include/stdbool.h

29 #i‚de‡
_STDBOOL_H_


30 
	#_STDBOOL_H_


	)

32 
	#__boﬁ_åue_Ál£_¨e_deföed
 1

	)

34 #i‚de‡
__˝lu•lus


36 
	#boﬁ
 
_Boﬁ


	)

37 #i‡
__STDC_VERSION__
 < 199901L && 
__GNUC__
 < 3

38 
	t_Boﬁ
;

41 
	#Ál£
 0

	)

42 
	#åue
 1

	)

	@/usr/include/strings.h

58 #i‚de‡
_STRINGS_H_


59 
	#_STRINGS_H_


	)

61 
	~<_ty≥s.h
>

63 
	~<sys/cdefs.h
>

64 
	~<Avaûabûôy.h
>

65 
	~<sys/_ty≥s/_size_t.h
>

67 
	g__BEGIN_DECLS


69 #i‡!
deföed
(
_POSIX_C_SOURCE
) || _POSIX_C_SOURCE < 200809L

70 
	$bcmp
(c⁄° *, c⁄° *, 
size_t
Ë
	`__POSIX_C_DEPRECATED
(200112L);

71 
	$bc›y
(c⁄° *, *, 
size_t
Ë
	`__POSIX_C_DEPRECATED
(200112L);

72 
	$bzîo
(*, 
size_t
Ë
	`__POSIX_C_DEPRECATED
(200112L);

73 *
	$ödex
(c⁄° *, Ë
	`__POSIX_C_DEPRECATED
(200112L);

74 *
	$rödex
(c⁄° *, Ë
	`__POSIX_C_DEPRECATED
(200112L);

77 
	`ffs
();

78 
	`°rˇ£cmp
(const *, const *);

79 
	`°∫ˇ£cmp
(c⁄° *, c⁄° *, 
size_t
);

80 
__END_DECLS


83 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


84 
__BEGIN_DECLS


85 
	$ff¶
(Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

86 
	$ff¶l
(Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_9
, 
__IPHONE_7_0
);

87 
	$Ês
(Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

88 
	$Ê¶
(Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_5
, 
__IPHONE_2_0
);

89 
	$Ê¶l
(Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_9
, 
__IPHONE_7_0
);

90 
__END_DECLS


92 
	~<°rög.h
>

	@/usr/include/sys/_endian.h

90 #i‚de‡
_SYS__ENDIAN_H_


91 
	#_SYS__ENDIAN_H_


	)

93 
	~<sys/cdefs.h
>

99 #i‡
deföed
(
löt
)

101 
__BEGIN_DECLS


102 
__uöt16_t
 
¡ohs
(__uint16_t);

103 
__uöt16_t
 
ht⁄s
(__uint16_t);

104 
__uöt32_t
 
¡ohl
(__uint32_t);

105 
__uöt32_t
 
ht⁄l
(__uint32_t);

106 
	g__END_DECLS


108 #ñi‡
__DARWIN_BYTE_ORDER
 =
__DARWIN_BIG_ENDIAN


110 
	#¡ohl
(
x
Ë((
__uöt32_t
)(x))

	)

111 
	#¡ohs
(
x
Ë((
__uöt16_t
)(x))

	)

112 
	#ht⁄l
(
x
Ë((
__uöt32_t
)(x))

	)

113 
	#ht⁄s
(
x
Ë((
__uöt16_t
)(x))

	)

115 #i‡ 
deföed
(
KERNEL
Ë|| (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

116 
	#NTOHL
(
x
Ë(x)

	)

117 
	#NTOHS
(
x
Ë(x)

	)

118 
	#HTONL
(
x
Ë(x)

	)

119 
	#HTONS
(
x
Ë(x)

	)

124 
	~<libkîn/_OSByãOrdî.h
>

126 
	#¡ohs
(
x
Ë
	`__DARWIN_OSSw≠I¡16
(x)

	)

127 
	#ht⁄s
(
x
Ë
	`__DARWIN_OSSw≠I¡16
(x)

	)

129 
	#¡ohl
(
x
Ë
	`__DARWIN_OSSw≠I¡32
(x)

	)

130 
	#ht⁄l
(
x
Ë
	`__DARWIN_OSSw≠I¡32
(x)

	)

132 #if 
deföed
(
KERNEL
Ë|| (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

133 
	#NTOHL
(
x
Ë(xË
	`¡ohl
((
__uöt32_t
)x)

	)

134 
	#NTOHS
(
x
Ë(xË
	`¡ohs
((
__uöt16_t
)x)

	)

135 
	#HTONL
(
x
Ë(xË
	`ht⁄l
((
__uöt32_t
)x)

	)

136 
	#HTONS
(
x
Ë(xË
	`ht⁄s
((
__uöt16_t
)x)

	)

	@/usr/include/sys/_select.h

36 #i‚de‡
_SYS__SELECT_H_


37 
	#_SYS__SELECT_H_


	)

39 
	$£À˘
(, 
fd_£t
 * 
__ª°ri˘
, fd_set * __restrict,

40 
fd_£t
 * 
__ª°ri˘
, 
timevÆ
 * __restrict)

41 #i‡
	`deföed
(
_DARWIN_C_SOURCE
Ë|| deföed(
_DARWIN_UNLIMITED_SELECT
)

42 
	$__DARWIN_EXTSN_C
(
£À˘
)

44 #i‡
	`deföed
(
__LP64__
Ë&& !
__DARWIN_NON_CANCELABLE


45 
	$__DARWIN_1050
(
£À˘
)

47 
	$__DARWIN_ALIAS_C
(
£À˘
)

	@/usr/include/sys/_types.h

29 #i‚de‡
_SYS__TYPES_H_


30 
	#_SYS__TYPES_H_


	)

32 
	~<sys/cdefs.h
>

33 
	~<machöe/_ty≥s.h
>

36 #i‡
deföed
(
__LP64__
)

37 
	#__PTHREAD_SIZE__
 1168

	)

38 
	#__PTHREAD_ATTR_SIZE__
 56

	)

39 
	#__PTHREAD_MUTEXATTR_SIZE__
 8

	)

40 
	#__PTHREAD_MUTEX_SIZE__
 56

	)

41 
	#__PTHREAD_CONDATTR_SIZE__
 8

	)

42 
	#__PTHREAD_COND_SIZE__
 40

	)

43 
	#__PTHREAD_ONCE_SIZE__
 8

	)

44 
	#__PTHREAD_RWLOCK_SIZE__
 192

	)

45 
	#__PTHREAD_RWLOCKATTR_SIZE__
 16

	)

47 
	#__PTHREAD_SIZE__
 596

	)

48 
	#__PTHREAD_ATTR_SIZE__
 36

	)

49 
	#__PTHREAD_MUTEXATTR_SIZE__
 8

	)

50 
	#__PTHREAD_MUTEX_SIZE__
 40

	)

51 
	#__PTHREAD_CONDATTR_SIZE__
 4

	)

52 
	#__PTHREAD_COND_SIZE__
 24

	)

53 
	#__PTHREAD_ONCE_SIZE__
 4

	)

54 
	#__PTHREAD_RWLOCK_SIZE__
 124

	)

55 
	#__PTHREAD_RWLOCKATTR_SIZE__
 12

	)

58 
	s__d¨wö_±hªad_h™dÀr_ªc


60 (*
	m__routöe
)(*);

61 *
	m__¨g
;

62 
__d¨wö_±hªad_h™dÀr_ªc
 *
	m__√xt
;

64 
	s_›aque_±hªad_©å_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_ATTR_SIZE__
]; };

65 
	s_›aque_±hªad_c⁄d_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_COND_SIZE__
]; };

66 
	s_›aque_±hªad_c⁄d©å_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_CONDATTR_SIZE__
]; };

67 
	s_›aque_±hªad_muãx_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_MUTEX_SIZE__
]; };

68 
	s_›aque_±hªad_muãx©å_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_MUTEXATTR_SIZE__
]; };

69 
	s_›aque_±hªad_⁄˚_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_ONCE_SIZE__
]; };

70 
	s_›aque_±hªad_rwlock_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_RWLOCK_SIZE__
]; };

71 
	s_›aque_±hªad_rwlock©å_t
 { 
	m__sig
; 
	m__›aque
[
__PTHREAD_RWLOCKATTR_SIZE__
]; };

72 
	s_›aque_±hªad_t
 { 
	m__sig
; 
__d¨wö_±hªad_h™dÀr_ªc
 *
	m__˛ónup_°ack
; 
	m__›aque
[
__PTHREAD_SIZE__
]; };

80 #ifde‡
__˝lu•lus


81 #ifde‡
__GNUG__


82 
	#__DARWIN_NULL
 
__nuŒ


	)

84 #ifde‡
__LP64__


85 
	#__DARWIN_NULL
 (0L)

	)

87 
	#__DARWIN_NULL
 0

	)

91 
	#__DARWIN_NULL
 ((*)0)

	)

94 
__öt64_t
 
	t__d¨wö_blk˙t_t
;

95 
__öt32_t
 
	t__d¨wö_blksize_t
;

96 
__öt32_t
 
	t__d¨wö_dev_t
;

97 
	t__d¨wö_fsblk˙t_t
;

98 
	t__d¨wö_fsfû˙t_t
;

99 
__uöt32_t
 
	t__d¨wö_gid_t
;

100 
__uöt32_t
 
	t__d¨wö_id_t
;

101 
__uöt64_t
 
	t__d¨wö_öo64_t
;

102 #i‡
__DARWIN_64_BIT_INO_T


103 
__d¨wö_öo64_t
 
	t__d¨wö_öo_t
;

105 
__uöt32_t
 
	t__d¨wö_öo_t
;

107 
__d¨wö_«tuøl_t
 
	t__d¨wö_mach_p‹t_«me_t
;

108 
__d¨wö_mach_p‹t_«me_t
 
	t__d¨wö_mach_p‹t_t
;

109 
__uöt16_t
 
	t__d¨wö_mode_t
;

110 
__öt64_t
 
	t__d¨wö_off_t
;

111 
__öt32_t
 
	t__d¨wö_pid_t
;

112 
_›aque_±hªad_©å_t


113 
	t__d¨wö_±hªad_©å_t
;

114 
_›aque_±hªad_c⁄d_t


115 
	t__d¨wö_±hªad_c⁄d_t
;

116 
_›aque_±hªad_c⁄d©å_t


117 
	t__d¨wö_±hªad_c⁄d©å_t
;

118 
	t__d¨wö_±hªad_key_t
;

119 
_›aque_±hªad_muãx_t


120 
	t__d¨wö_±hªad_muãx_t
;

121 
_›aque_±hªad_muãx©å_t


122 
	t__d¨wö_±hªad_muãx©å_t
;

123 
_›aque_±hªad_⁄˚_t


124 
	t__d¨wö_±hªad_⁄˚_t
;

125 
_›aque_±hªad_rwlock_t


126 
	t__d¨wö_±hªad_rwlock_t
;

127 
_›aque_±hªad_rwlock©å_t


128 
	t__d¨wö_±hªad_rwlock©å_t
;

129 
_›aque_±hªad_t


130 *
	t__d¨wö_±hªad_t
;

131 
__uöt32_t
 
	t__d¨wö_sig£t_t
;

132 
__öt32_t
 
	t__d¨wö_su£c⁄ds_t
;

133 
__uöt32_t
 
	t__d¨wö_uid_t
;

134 
__uöt32_t
 
	t__d¨wö_u£c⁄ds_t
;

135 
	t__d¨wö_uuid_t
[16];

136 
	t__d¨wö_uuid_°rög_t
[37];

	@/usr/include/sys/_types/_blkcnt_t.h

28 #i‚de‡
_BLKCNT_T


29 
	#_BLKCNT_T


	)

30 
__d¨wö_blk˙t_t
 
	tblk˙t_t
;

	@/usr/include/sys/_types/_blksize_t.h

28 #i‚de‡
_BLKSIZE_T


29 
	#_BLKSIZE_T


	)

30 
__d¨wö_blksize_t
 
	tblksize_t
;

	@/usr/include/sys/_types/_clock_t.h

28 #i‚de‡
_CLOCK_T


29 
	#_CLOCK_T


	)

30 
__d¨wö_˛ock_t
 
	t˛ock_t
;

	@/usr/include/sys/_types/_ct_rune_t.h

29 #i‚de‡
_CT_RUNE_T


30 
	#_CT_RUNE_T


	)

31 
__d¨wö_˘_ru√_t
 
	t˘_ru√_t
;

	@/usr/include/sys/_types/_dev_t.h

28 #i‚de‡
_DEV_T


29 
	#_DEV_T


	)

30 
__d¨wö_dev_t
 
	tdev_t
;

	@/usr/include/sys/_types/_errno_t.h

28 #i‚de‡
_ERRNO_T


29 
	#_ERRNO_T


	)

30 
	tî∫o_t
;

	@/usr/include/sys/_types/_fd_clr.h

28 #i‚de‡
FD_CLR


29 
	#FD_CLR
(
n
, 
p
Ë
	`__DARWIN_FD_CLR
“,Ö)

	)

	@/usr/include/sys/_types/_fd_copy.h

28 #i‚de‡
FD_COPY


29 
	#FD_COPY
(
f
, 
t
Ë
	`__DARWIN_FD_COPY
(f,Å)

	)

	@/usr/include/sys/_types/_fd_def.h

28 #i‚de‡
_FD_SET


29 
	#_FD_SET


	)

36 #ifde‡
FD_SETSIZE


37 
	#__DARWIN_FD_SETSIZE
 
FD_SETSIZE


	)

39 
	#__DARWIN_FD_SETSIZE
 1024

	)

41 
	#__DARWIN_NBBY
 8

	)

42 
	#__DARWIN_NFDBITS
 ((
__öt32_t
Ë* 
__DARWIN_NBBY
Ë

	)

43 
	#__DARWIN_howm™y
(
x
, 
y
Ë((((xË% (y)Ë=0Ë? ((xË/ (y)Ë: (((xË/ (y)Ë+ 1)Ë

	)

45 
__BEGIN_DECLS


46 
	sfd_£t
 {

47 
__öt32_t
 
	mfds_bôs
[
__DARWIN_howm™y
(
__DARWIN_FD_SETSIZE
, 
__DARWIN_NFDBITS
)];

48 } 
	tfd_£t
;

49 
__END_DECLS


52 
__ölöe
 

53 
	$__d¨wö_fd_is£t
(
_n
, c⁄° 
fd_£t
 *
_p
)

55  (
_p
->
fds_bôs
[()
_n
/
__DARWIN_NFDBITS
] & ((
__öt32_t
)(1<<(()_n % __DARWIN_NFDBITS))));

56 
	}
}

58 
	#__DARWIN_FD_SET
(
n
, 
p
Ëdÿ{ 
__fd
 = (n); (’)->
fds_bôs
[()__fd/
__DARWIN_NFDBITS
] |((
__öt32_t
)(1<<(()__fd % __DARWIN_NFDBITS)))); } 0)

	)

59 
	#__DARWIN_FD_CLR
(
n
, 
p
Ëdÿ{ 
__fd
 = (n); (’)->
fds_bôs
[()__fd/
__DARWIN_NFDBITS
] &~((
__öt32_t
)(1<<(()__fd % __DARWIN_NFDBITS)))); } 0)

	)

60 
	#__DARWIN_FD_ISSET
(
n
, 
p
Ë
	`__d¨wö_fd_is£t
(“), (p))

	)

62 #i‡
__GNUC__
 > 3 || __GNUC__ =3 && 
__GNUC_MINOR__
 >= 3

67 
	#__DARWIN_FD_ZERO
(
p
Ë
	`__buûtö_bzîo
’, (*’)))

	)

69 
	#__DARWIN_FD_ZERO
(
p
Ë
	`bzîo
’, (*’)))

	)

72 
	#__DARWIN_FD_COPY
(
f
, 
t
Ë
	`bc›y
(f,Å, (*(f)))

	)

	@/usr/include/sys/_types/_fd_isset.h

28 #i‚de‡
FD_ISSET


29 
	#FD_ISSET
(
n
, 
p
Ë
	`__DARWIN_FD_ISSET
“,Ö)

	)

	@/usr/include/sys/_types/_fd_set.h

28 #i‚de‡
FD_SET


29 
	#FD_SET
(
n
, 
p
Ë
	`__DARWIN_FD_SET
“,Ö)

	)

	@/usr/include/sys/_types/_fd_setsize.h

28 #i‚def 
FD_SETSIZE


29 
	#FD_SETSIZE
 
__DARWIN_FD_SETSIZE


	)

	@/usr/include/sys/_types/_fd_zero.h

28 #i‚de‡
FD_ZERO


29 
	#FD_ZERO
(
p
Ë
	`__DARWIN_FD_ZERO
’)

	)

	@/usr/include/sys/_types/_filesec_t.h

28 #i‚de‡
_FILESEC_T


29 
	#_FILESEC_T


	)

30 
	g_fûe£c
;

31 
_fûe£c
 *
	tfûe£c_t
;

	@/usr/include/sys/_types/_fsblkcnt_t.h

28 #i‚de‡
_FSBLKCNT_T


29 
	#_FSBLKCNT_T


	)

30 
__d¨wö_fsblk˙t_t
 
	tfsblk˙t_t
;

	@/usr/include/sys/_types/_fsfilcnt_t.h

28 #i‚de‡
_FSFILCNT_T


29 
	#_FSFILCNT_T


	)

30 
__d¨wö_fsfû˙t_t
 
	tfsfû˙t_t
;

	@/usr/include/sys/_types/_gid_t.h

28 #i‚de‡
_GID_T


29 
	#_GID_T


	)

30 
__d¨wö_gid_t
 
	tgid_t
;

	@/usr/include/sys/_types/_id_t.h

28 #i‚de‡
_ID_T


29 
	#_ID_T


	)

30 
__d¨wö_id_t
 
	tid_t
;

	@/usr/include/sys/_types/_in_addr_t.h

28 #i‚de‡
_IN_ADDR_T


29 
	#_IN_ADDR_T


	)

30 
__uöt32_t
 
	tö_addr_t
;

	@/usr/include/sys/_types/_in_port_t.h

28 #i‚de‡
_IN_PORT_T


29 
	#_IN_PORT_T


	)

30 
__uöt16_t
 
	tö_p‹t_t
;

	@/usr/include/sys/_types/_ino64_t.h

28 #i‚de‡
_INO64_T


29 
	#_INO64_T


	)

30 
__d¨wö_öo64_t
 
	töo64_t
;

	@/usr/include/sys/_types/_ino_t.h

28 #i‚de‡
_INO_T


29 
	#_INO_T


	)

30 
__d¨wö_öo_t
 
	töo_t
;

	@/usr/include/sys/_types/_int16_t.h

28 #i‚de‡
_INT16_T


29 
	#_INT16_T


	)

30 
	töt16_t
;

	@/usr/include/sys/_types/_int32_t.h

28 #i‚de‡
_INT32_T


29 
	#_INT32_T


	)

30 
	töt32_t
;

	@/usr/include/sys/_types/_int64_t.h

28 #i‚de‡
_INT64_T


29 
	#_INT64_T


	)

30 
	töt64_t
;

	@/usr/include/sys/_types/_int8_t.h

28 #i‚de‡
_INT8_T


29 
	#_INT8_T


	)

30 
__sig√d
 
	töt8_t
;

	@/usr/include/sys/_types/_intptr_t.h

28 #i‚de‡
_INTPTR_T


29 
	#_INTPTR_T


	)

30 
__d¨wö_öçå_t
 
	töçå_t
;

	@/usr/include/sys/_types/_iovec_t.h

28 #i‚de‡
_STRUCT_IOVEC


29 
	#_STRUCT_IOVEC


	)

30 
	siovec
 {

31 * 
	miov_ba£
;

32 
size_t
 
	miov_Àn
;

	@/usr/include/sys/_types/_key_t.h

28 #i‚de‡
_KEY_T


29 
	#_KEY_T


	)

30 
__öt32_t
 
	tkey_t
;

	@/usr/include/sys/_types/_mach_port_t.h

47 #i‚de‡
_MACH_PORT_T


48 
	#_MACH_PORT_T


	)

49 
__d¨wö_mach_p‹t_t
 
	tmach_p‹t_t
;

	@/usr/include/sys/_types/_mode_t.h

28 #i‚de‡
_MODE_T


29 
	#_MODE_T


	)

30 
__d¨wö_mode_t
 
	tmode_t
;

	@/usr/include/sys/_types/_nlink_t.h

28 #i‚de‡
_NLINK_T


29 
	#_NLINK_T


	)

30 
__uöt16_t
 
	t∆ök_t
;

	@/usr/include/sys/_types/_null.h

28 #i‚de‡
NULL


29 
	#NULL
 
__DARWIN_NULL


	)

	@/usr/include/sys/_types/_off_t.h

28 #i‚de‡
_OFF_T


29 
	#_OFF_T


	)

30 
__d¨wö_off_t
 
	toff_t
;

	@/usr/include/sys/_types/_pid_t.h

28 #i‚de‡
_PID_T


29 
	#_PID_T


	)

30 
__d¨wö_pid_t
 
	tpid_t
;

	@/usr/include/sys/_types/_pthread_attr_t.h

28 #i‚de‡
_PTHREAD_ATTR_T


29 
	#_PTHREAD_ATTR_T


	)

30 
__d¨wö_±hªad_©å_t
 
	t±hªad_©å_t
;

	@/usr/include/sys/_types/_pthread_cond_t.h

28 #i‚de‡
_PTHREAD_COND_T


29 
	#_PTHREAD_COND_T


	)

30 
__d¨wö_±hªad_c⁄d_t
 
	t±hªad_c⁄d_t
;

	@/usr/include/sys/_types/_pthread_condattr_t.h

28 #i‚de‡
_PTHREAD_CONDATTR_T


29 
	#_PTHREAD_CONDATTR_T


	)

30 
__d¨wö_±hªad_c⁄d©å_t
 
	t±hªad_c⁄d©å_t
;

	@/usr/include/sys/_types/_pthread_key_t.h

28 #i‚de‡
_PTHREAD_KEY_T


29 
	#_PTHREAD_KEY_T


	)

30 
__d¨wö_±hªad_key_t
 
	t±hªad_key_t
;

	@/usr/include/sys/_types/_pthread_mutex_t.h

28 #i‚de‡
_PTHREAD_MUTEX_T


29 
	#_PTHREAD_MUTEX_T


	)

30 
__d¨wö_±hªad_muãx_t
 
	t±hªad_muãx_t
;

	@/usr/include/sys/_types/_pthread_mutexattr_t.h

28 #i‚de‡
_PTHREAD_MUTEXATTR_T


29 
	#_PTHREAD_MUTEXATTR_T


	)

30 
__d¨wö_±hªad_muãx©å_t
 
	t±hªad_muãx©å_t
;

	@/usr/include/sys/_types/_pthread_once_t.h

28 #i‚de‡
_PTHREAD_ONCE_T


29 
	#_PTHREAD_ONCE_T


	)

30 
__d¨wö_±hªad_⁄˚_t
 
	t±hªad_⁄˚_t
;

	@/usr/include/sys/_types/_pthread_rwlock_t.h

28 #i‚de‡
_PTHREAD_RWLOCK_T


29 
	#_PTHREAD_RWLOCK_T


	)

30 
__d¨wö_±hªad_rwlock_t
 
	t±hªad_rwlock_t
;

	@/usr/include/sys/_types/_pthread_rwlockattr_t.h

28 #i‚de‡
_PTHREAD_RWLOCKATTR_T


29 
	#_PTHREAD_RWLOCKATTR_T


	)

30 
__d¨wö_±hªad_rwlock©å_t
 
	t±hªad_rwlock©å_t
;

	@/usr/include/sys/_types/_pthread_t.h

28 #i‚de‡
_PTHREAD_T


29 
	#_PTHREAD_T


	)

30 
__d¨wö_±hªad_t
 
	t±hªad_t
;

	@/usr/include/sys/_types/_ptrdiff_t.h

29 #i‚de‡
_PTRDIFF_T


30 
	#_PTRDIFF_T


	)

31 
__d¨wö_±rdiff_t
 
	t±rdiff_t
;

	@/usr/include/sys/_types/_rsize_t.h

28 #i‚de‡
_RSIZE_T


29 
	#_RSIZE_T


	)

30 
__d¨wö_size_t
 
	trsize_t
;

	@/usr/include/sys/_types/_rune_t.h

28 #i‚de‡
_RUNE_T


29 
	#_RUNE_T


	)

30 
__d¨wö_ru√_t
 
	tru√_t
;

	@/usr/include/sys/_types/_s_ifmt.h

33 #i‚de‡
S_IFMT


35 
	#S_IFMT
 0170000

	)

36 
	#S_IFIFO
 0010000

	)

37 
	#S_IFCHR
 0020000

	)

38 
	#S_IFDIR
 0040000

	)

39 
	#S_IFBLK
 0060000

	)

40 
	#S_IFREG
 0100000

	)

41 
	#S_IFLNK
 0120000

	)

42 
	#S_IFSOCK
 0140000

	)

43 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

44 
	#S_IFWHT
 0160000

	)

49 
	#S_IRWXU
 0000700

	)

50 
	#S_IRUSR
 0000400

	)

51 
	#S_IWUSR
 0000200

	)

52 
	#S_IXUSR
 0000100

	)

54 
	#S_IRWXG
 0000070

	)

55 
	#S_IRGRP
 0000040

	)

56 
	#S_IWGRP
 0000020

	)

57 
	#S_IXGRP
 0000010

	)

59 
	#S_IRWXO
 0000007

	)

60 
	#S_IROTH
 0000004

	)

61 
	#S_IWOTH
 0000002

	)

62 
	#S_IXOTH
 0000001

	)

64 
	#S_ISUID
 0004000

	)

65 
	#S_ISGID
 0002000

	)

66 
	#S_ISVTX
 0001000

	)

68 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

69 
	#S_ISTXT
 
S_ISVTX


	)

70 
	#S_IREAD
 
S_IRUSR


	)

71 
	#S_IWRITE
 
S_IWUSR


	)

72 
	#S_IEXEC
 
S_IXUSR


	)

	@/usr/include/sys/_types/_sa_family_t.h

28 #i‚de‡
_SA_FAMILY_T


29 
	#_SA_FAMILY_T


	)

30 
__uöt8_t
 
	tß_Ámûy_t
;

	@/usr/include/sys/_types/_sigset_t.h

28 #i‚de‡
_SIGSET_T


29 
	#_SIGSET_T


	)

30 
__d¨wö_sig£t_t
 
	tsig£t_t
;

	@/usr/include/sys/_types/_size_t.h

28 #i‚de‡
_SIZE_T


29 
	#_SIZE_T


	)

30 
__d¨wö_size_t
 
	tsize_t
;

	@/usr/include/sys/_types/_socklen_t.h

28 #i‚de‡
_SOCKLEN_T


29 
	#_SOCKLEN_T


	)

30 
__d¨wö_sockÀn_t
 
	tsockÀn_t
;

	@/usr/include/sys/_types/_ssize_t.h

28 #i‚de‡
_SSIZE_T


29 
	#_SSIZE_T


	)

30 
__d¨wö_ssize_t
 
	tssize_t
;

	@/usr/include/sys/_types/_suseconds_t.h

28 #i‚de‡
_SUSECONDS_T


29 
	#_SUSECONDS_T


	)

30 
__d¨wö_su£c⁄ds_t
 
	tsu£c⁄ds_t
;

	@/usr/include/sys/_types/_time_t.h

28 #i‚de‡
_TIME_T


29 
	#_TIME_T


	)

30 
__d¨wö_time_t
 
	ttime_t
;

	@/usr/include/sys/_types/_timespec.h

28 #i‚de‡
_STRUCT_TIMESPEC


29 
	#_STRUCT_TIMESPEC
 
time•ec


	)

30 
	g_STRUCT_TIMESPEC


32 
__d¨wö_time_t
 
	gtv_£c
;

33 
	gtv_n£c
;

	@/usr/include/sys/_types/_timeval.h

28 #i‚de‡
_STRUCT_TIMEVAL


29 
	#_STRUCT_TIMEVAL
 
timevÆ


	)

30 
	g_STRUCT_TIMEVAL


32 
__d¨wö_time_t
 
	gtv_£c
;

33 
__d¨wö_su£c⁄ds_t
 
	gtv_u£c
;

	@/usr/include/sys/_types/_uid_t.h

28 #i‚de‡
_UID_T


29 
	#_UID_T


	)

30 
__d¨wö_uid_t
 
	tuid_t
;

	@/usr/include/sys/_types/_uintptr_t.h

28 #i‚de‡
_UINTPTR_T


29 
	#_UINTPTR_T


	)

30 
	tuöçå_t
;

	@/usr/include/sys/_types/_useconds_t.h

28 #i‚de‡
_USECONDS_T


29 
	#_USECONDS_T


	)

30 
__d¨wö_u£c⁄ds_t
 
	tu£c⁄ds_t
;

	@/usr/include/sys/_types/_uuid_t.h

28 #i‚de‡
_UUID_T


29 
	#_UUID_T


	)

30 
__d¨wö_uuid_t
 
	tuuid_t
;

	@/usr/include/sys/_types/_va_list.h

29 #i‚de‡
_VA_LIST_T


30 
	#_VA_LIST_T


	)

31 
__d¨wö_va_li°
 
	tva_li°
;

	@/usr/include/sys/_types/_wchar_t.h

30 #i‚de‡
__˝lu•lus


31 #i‚de‡
_WCHAR_T


32 
	#_WCHAR_T


	)

33 
__d¨wö_wch¨_t
 
	twch¨_t
;

	@/usr/include/sys/_types/_wint_t.h

29 #i‚de‡
_WINT_T


30 
	#_WINT_T


	)

31 
__d¨wö_wöt_t
 
	twöt_t
;

	@/usr/include/sys/appleapiopts.h

29 #i‚de‡
__SYS_APPLEAPIOPTS_H__


30 
	#__SYS_APPLEAPIOPTS_H__


	)

33 #i‚de‡
__APPLE_API_STANDARD


34 
	#__APPLE_API_STANDARD


	)

37 #i‚de‡
__APPLE_API_STABLE


38 
	#__APPLE_API_STABLE


	)

41 #i‚de‡
__APPLE_API_STRICT_CONFORMANCE


43 #i‚de‡
__APPLE_API_EVOLVING


44 
	#__APPLE_API_EVOLVING


	)

47 #i‚de‡
__APPLE_API_UNSTABLE


48 
	#__APPLE_API_UNSTABLE


	)

51 #i‚de‡
__APPLE_API_PRIVATE


52 
	#__APPLE_API_PRIVATE


	)

55 #i‚de‡
__APPLE_API_OBSOLETE


56 
	#__APPLE_API_OBSOLETE


	)

	@/usr/include/sys/cdefs.h

67 #i‚def 
_CDEFS_H_


68 
	#_CDEFS_H_


	)

70 #i‡
deföed
(
__˝lu•lus
)

71 
	#__BEGIN_DECLS
 "C" {

	)

72 
	#__END_DECLS
 }

	)

74 
	#__BEGIN_DECLS


	)

75 
	#__END_DECLS


	)

80 #i‡!
deföed
(
__GNUC__
) || __GNUC__ < 4

91 #i‡
deföed
(
__STDC__
Ë|| deföed(
__˝lu•lus
)

92 
	#__P
(
¥Ÿos
Ë¥Ÿo†

	)

93 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

94 
	#__STRING
(
x
Ë#x

	)

96 
	#__c⁄°
 c⁄°

	)

97 
	#__sig√d
 sig√d

	)

98 
	#__vﬁ©ûe
 vﬁ©ûe

	)

99 #i‡
deföed
(
__˝lu•lus
)

100 
	#__ölöe
 
ölöe


	)

102 #i‚de‡
__GNUC__


103 
	#__ölöe


	)

108 
	#__P
(
¥Ÿos
Ë(Ë

	)

109 
	#__CONCAT
(
x
,
y
Ëx 
	)
y

110 
	#__STRING
(
x
Ë"x"

	)

112 #i‚de‡
__GNUC__


113 
	#__c⁄°


	)

114 
	#__ölöe


	)

115 
	#__sig√d


	)

116 
	#__vﬁ©ûe


	)

127 #i‚def 
NO_ANSI_KEYWORDS


128 c⁄° 
__c⁄°


	)

129 
	#ölöe
 
__ölöe


	)

130 sig√d 
__sig√d


	)

131 vﬁ©ûê
__vﬁ©ûe


	)

135 
	#__dód2
 
	`__©åibuã__
((
n‹ëu∫
))

	)

136 
	#__puª2
 
	`__©åibuã__
((c⁄°))

	)

141 
	#__unu£d
 
	`__©åibuã__
((
unu£d
))

	)

146 
	#__u£d
 
	`__©åibuã__
((
u£d
))

	)

156 
	#__dïªˇãd
 
	`__©åibuã__
((
dïªˇãd
))

	)

158 #ifde‡
__has_exãnsi⁄


159 #i‡
__has_exãnsi⁄
(
©åibuã_dïªˇãd_wôh_mesßge
)

160 
	#__dïªˇãd_msg
(
_msg
Ë
	`__©åibuã__
((
	`dïªˇãd
(_msg)))

	)

162 
	#__dïªˇãd_msg
(
_msg
Ë
	`__©åibuã__
((
dïªˇãd
))

	)

164 #ñi‡
deföed
(
__GNUC__
Ë&& ((__GNUC__ >5Ë|| ((__GNUC__ =4Ë&& (
__GNUC_MINOR__
 >= 5)))

165 
	#__dïªˇãd_msg
(
_msg
Ë
	`__©åibuã__
((
	`dïªˇãd
(_msg)))

	)

167 
	#__dïªˇãd_msg
(
_msg
Ë
	`__©åibuã__
((
dïªˇãd
))

	)

170 #ifde‡
__has_exãnsi⁄


171 #i‡
__has_exãnsi⁄
(
íumî©‹_©åibuãs
)

172 
	#__dïªˇãd_íum_msg
(
_msg
Ë
	`__dïªˇãd_msg
(_msg)

	)

174 
	#__dïªˇãd_íum_msg
(
_msg
)

	)

177 
	#__dïªˇãd_íum_msg
(
_msg
)

	)

183 
	#__u«vaûabÀ
 
	`__©åibuã__
((
u«vaûabÀ
))

	)

186 #i‚de‡
__dód


187 
	#__dód


	)

188 
	#__puª


	)

195 #i‡
__STDC_VERSION__
 < 199901

196 
	#__ª°ri˘


	)

198 
	#__ª°ri˘
 
ª°ri˘


	)

217 #i‡
deföed
(
__˝lu•lus
) || \

218 (
__STDC_VERSION__
 >= 199901L && \

219 !
deföed
(
__GNUC_GNU_INLINE__
) && \

220 (!
deföed
(
__GNUC__
Ë|| 
	$deföed
(
__˛™g__
)))

221 
	#__hódî_ölöe
 
ölöe


	)

222 #ñi‡
	`deföed
(
__GNUC__
Ë&& deföed(
__GNUC_STDC_INLINE__
)

223 
	#__hódî_ölöe
 
__ölöe
 
	`__©åibuã__
((
__gnu_ölöe__
))

	)

224 #ñi‡
	`deföed
(
__GNUC__
)

225 
	#__hódî_ölöe
 
__ölöe


	)

230 
	#__hódî_ölöe
 
__ölöe


	)

233 #ifde‡
__GNUC__


234 
	#__hódî_Æways_ölöe
 
__hódî_ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

239 
	#__hódî_Æways_ölöe
 
__hódî_ölöe


	)

250 
	#__¥ötÊike
(
fmèrg
, 
fú°v¨¨g
) \

251 
	`__©åibuã__
((
	`__f‹m©__
 (
__¥ötf__
, 
fmèrg
, 
fú°v¨¨g
)))

	)

252 
	#__sˇnÊike
(
fmèrg
, 
fú°v¨¨g
) \

253 
	`__©åibuã__
((
	`__f‹m©__
 (
__sˇnf__
, 
fmèrg
, 
fú°v¨¨g
)))

	)

255 
	#__IDSTRING
(
«me
,
°rög
Ëc⁄° «me[] 
__u£d
 = 
	)
string

257 #i‚de‡
__COPYRIGHT


258 
	#__COPYRIGHT
(
s
Ë
	`__IDSTRING
(
c›yright
,s)

	)

261 #i‚de‡
__RCSID


262 
	#__RCSID
(
s
Ë
	`__IDSTRING
(
rcsid
,s)

	)

265 #i‚de‡
__SCCSID


266 
	#__SCCSID
(
s
Ë
	`__IDSTRING
(
sccsid
,s)

	)

269 #i‚de‡
__PROJECT_VERSION


270 
	#__PROJECT_VERSION
(
s
Ë
	`__IDSTRING
(
¥oje˘_vîsi⁄
,s)

	)

274 #i‚de‡
__FBSDID


275 
	#__FBSDID
(
s
)

	)

278 #i‚def 
__DECONST


279 
	#__DECONST
(
ty≥
, 
v¨
Ë
	`__CAST_AWAY_QUALIFIER
(v¨, c⁄°,Åy≥)

	)

282 #i‚def 
__DEVOLATILE


283 
	#__DEVOLATILE
(
ty≥
, 
v¨
Ë
	`__CAST_AWAY_QUALIFIER
(v¨, vﬁ©ûe,Åy≥)

	)

286 #i‚def 
__DEQUALIFY


287 
	#__DEQUALIFY
(
ty≥
, 
v¨
Ë
	`__CAST_AWAY_QUALIFIER
(v¨, c⁄° vﬁ©ûe,Åy≥)

	)

329 
	#__DARWIN_ONLY_64_BIT_INO_T
 0

	)

331 
	#__DARWIN_ONLY_VERS_1050
 0

	)

351 #i‡!
	`deföed
(
__DARWIN_ONLY_UNIX_CONFORMANCE
)

352 #i‡
	`deföed
(
__LP64__
)

353 
	#__DARWIN_ONLY_UNIX_CONFORMANCE
 1

	)

355 
	#__DARWIN_ONLY_UNIX_CONFORMANCE
 0

	)

359 #i‡!
	`deföed
(
__DARWIN_UNIX03
)

360 #i‡ 
__DARWIN_ONLY_UNIX_CONFORMANCE


361 #i‡
	`deföed
(
_NONSTD_SOURCE
)

364 
	#__DARWIN_UNIX03
 1

	)

365 #ñi‡
	`deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && ((__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__-0) < 1040)

366 
	#__DARWIN_UNIX03
 0

	)

367 #ñi‡
	`deföed
(
_DARWIN_C_SOURCE
Ë|| deföed(
_XOPEN_SOURCE
Ë|| deföed(
_POSIX_C_SOURCE
)

368 #i‡
	`deföed
(
_NONSTD_SOURCE
)

371 
	#__DARWIN_UNIX03
 1

	)

372 #ñi‡
	`deföed
(
_NONSTD_SOURCE
)

373 
	#__DARWIN_UNIX03
 0

	)

375 #i‡
	`deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && ((__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__-0) < 1050)

376 
	#__DARWIN_UNIX03
 0

	)

378 
	#__DARWIN_UNIX03
 1

	)

383 #i‡!
	`deföed
(
__DARWIN_64_BIT_INO_T
)

384 #i‡ 
	`deföed
(
_DARWIN_USE_64_BIT_INODE
)

385 #i‡
	`deföed
(
_DARWIN_NO_64_BIT_INODE
)

388 
	#__DARWIN_64_BIT_INO_T
 1

	)

389 #ñi‡
	`deföed
(
_DARWIN_NO_64_BIT_INODE
)

390 #i‡
__DARWIN_ONLY_64_BIT_INO_T


393 
	#__DARWIN_64_BIT_INO_T
 0

	)

395 #i‡
__DARWIN_ONLY_64_BIT_INO_T


396 
	#__DARWIN_64_BIT_INO_T
 1

	)

397 #ñi‡
	`deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
Ë&& ((__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__-0Ë< 1060Ë|| 
__DARWIN_UNIX03
 == 0

398 
	#__DARWIN_64_BIT_INO_T
 0

	)

400 
	#__DARWIN_64_BIT_INO_T
 1

	)

405 #i‡!
	`deföed
(
__DARWIN_VERS_1050
)

406 #i‡ 
__DARWIN_ONLY_VERS_1050


407 
	#__DARWIN_VERS_1050
 1

	)

408 #ñi‡
	`deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
Ë&& ((__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__-0Ë< 1050Ë|| 
__DARWIN_UNIX03
 == 0

409 
	#__DARWIN_VERS_1050
 0

	)

411 
	#__DARWIN_VERS_1050
 1

	)

415 #i‡!
	`deföed
(
__DARWIN_NON_CANCELABLE
)

416 
	#__DARWIN_NON_CANCELABLE
 0

	)

422 #i‡
__DARWIN_UNIX03


423 #i‡
__DARWIN_ONLY_UNIX_CONFORMANCE


424 
	#__DARWIN_SUF_UNIX03


	)

426 
	#__DARWIN_SUF_UNIX03
 "$UNIX2003"

	)

429 #i‡
__DARWIN_64_BIT_INO_T


430 #i‡
__DARWIN_ONLY_64_BIT_INO_T


431 
	#__DARWIN_SUF_64_BIT_INO_T


	)

433 
	#__DARWIN_SUF_64_BIT_INO_T
 "$INODE64"

	)

436 
	#__DARWIN_SUF_64_BIT_INO_T


	)

439 #i‡
__DARWIN_VERS_1050


440 #i‡
__DARWIN_ONLY_VERS_1050


441 
	#__DARWIN_SUF_1050


	)

443 
	#__DARWIN_SUF_1050
 "$1050"

	)

446 
	#__DARWIN_SUF_1050


	)

449 #i‡
__DARWIN_NON_CANCELABLE


450 
	#__DARWIN_SUF_NON_CANCELABLE
 "$NOCANCEL"

	)

452 
	#__DARWIN_SUF_NON_CANCELABLE


	)

456 
	#__DARWIN_SUF_UNIX03


	)

457 
	#__DARWIN_SUF_64_BIT_INO_T


	)

458 
	#__DARWIN_SUF_NON_CANCELABLE


	)

459 
	#__DARWIN_SUF_1050


	)

462 
	#__DARWIN_SUF_EXTSN
 "$DARWIN_EXTSN"

	)

467 
	#__DARWIN_ALIAS
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_UNIX03
)

	)

468 
	#__DARWIN_ALIAS_C
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_NON_CANCELABLE
 
__DARWIN_SUF_UNIX03
)

	)

469 
	#__DARWIN_ALIAS_I
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_64_BIT_INO_T
 
__DARWIN_SUF_UNIX03
)

	)

470 
	#__DARWIN_INODE64
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_64_BIT_INO_T
)

	)

472 
	#__DARWIN_1050
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
)

	)

473 
	#__DARWIN_1050ALIAS
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
 
__DARWIN_SUF_UNIX03
)

	)

474 
	#__DARWIN_1050ALIAS_C
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
 
__DARWIN_SUF_NON_CANCELABLE
 
__DARWIN_SUF_UNIX03
)

	)

475 
	#__DARWIN_1050ALIAS_I
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
 
__DARWIN_SUF_64_BIT_INO_T
 
__DARWIN_SUF_UNIX03
)

	)

476 
	#__DARWIN_1050INODE64
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_1050
 
__DARWIN_SUF_64_BIT_INO_T
)

	)

478 
	#__DARWIN_EXTSN
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_EXTSN
)

	)

479 
	#__DARWIN_EXTSN_C
(
sym
Ë
	`__asm
("_" 
	`__STRING
(symË
__DARWIN_SUF_EXTSN
 
__DARWIN_SUF_NON_CANCELABLE
)

	)

484 
	~<sys/_symbﬁ_Æüsög.h
>

486 #i‡
	`deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
)

487 
	#__DARWIN_ALIAS_STARTING
(
_mac
, 
_ùh⁄e
, 
x
Ë
__DARWIN_ALIAS_STARTING_IPHONE_
##
	`_ùh⁄e
(x)

	)

488 #ñi‡
	`deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
)

489 
	#__DARWIN_ALIAS_STARTING
(
_mac
, 
_ùh⁄e
, 
x
Ë
__DARWIN_ALIAS_STARTING_MAC_
##
	`_mac
(x)

	)

491 
	#__DARWIN_ALIAS_STARTING
(
_mac
, 
_ùh⁄e
, 
x
)

	)

516 #i‡
	`deföed
(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE == 1L

517 #unde‡
_POSIX_C_SOURCE


518 
	#_POSIX_C_SOURCE
 199009L

	)

522 #i‡
	`deföed
(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE == 2L

523 #unde‡
_POSIX_C_SOURCE


524 
	#_POSIX_C_SOURCE
 199209L

	)

528 #ifde‡
_XOPEN_SOURCE


529 #i‡
_XOPEN_SOURCE
 - 0L >700L && (!
	`deföed
(
_POSIX_C_SOURCE
) || _POSIX_C_SOURCE - 0L < 200809L)

530 #unde‡
_POSIX_C_SOURCE


531 
	#_POSIX_C_SOURCE
 200809L

	)

532 #ñi‡
_XOPEN_SOURCE
 - 0L >600L && (!
	`deföed
(
_POSIX_C_SOURCE
) || _POSIX_C_SOURCE - 0L < 200112L)

533 #unde‡
_POSIX_C_SOURCE


534 
	#_POSIX_C_SOURCE
 200112L

	)

535 #ñi‡
_XOPEN_SOURCE
 - 0L >500L && (!
	`deföed
(
_POSIX_C_SOURCE
) || _POSIX_C_SOURCE - 0L < 199506L)

536 #unde‡
_POSIX_C_SOURCE


537 
	#_POSIX_C_SOURCE
 199506L

	)

545 #i‡
	`deföed
(
_POSIX_SOURCE
Ë&& !deföed(
_POSIX_C_SOURCE
)

546 
	#_POSIX_C_SOURCE
 198808L

	)

550 
	~<sys/_posix_avaûabûôy.h
>

552 
	#__POSIX_C_DEPRECATED
(
vî
Ë
___POSIX_C_DEPRECATED_STARTING_
##
	)
ver

560 
	#__DARWIN_C_ANSI
 010000L

	)

561 
	#__DARWIN_C_FULL
 900000L

	)

563 #i‡ 
	`deföed
(
_ANSI_SOURCE
)

564 
	#__DARWIN_C_LEVEL
 
__DARWIN_C_ANSI


	)

565 #ñi‡
	`deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_DARWIN_C_SOURCE
Ë&& !deföed(
_NONSTD_SOURCE
)

566 
	#__DARWIN_C_LEVEL
 
_POSIX_C_SOURCE


	)

568 
	#__DARWIN_C_LEVEL
 
__DARWIN_C_FULL


	)

575 #i‡!
	`deföed
(
__STDC_WANT_LIB_EXT1__
Ë&& !deföed(
__STRICT_ANSI__
Ë&& 
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


576 
	#__STDC_WANT_LIB_EXT1__
 1

	)

584 
	#__DARWIN_NO_LONG_LONG
 (
	`deföed
(
__STRICT_ANSI__
) \

585 && (
__STDC_VERSION__
-0 < 199901L) \

586 && !
	`deföed
(
__GNUG__
))

	)

596 #i‡
__DARWIN_64_BIT_INO_T


597 
	#_DARWIN_FEATURE_64_BIT_INODE
 1

	)

606 #i‡
__DARWIN_ONLY_64_BIT_INO_T


607 
	#_DARWIN_FEATURE_ONLY_64_BIT_INODE
 1

	)

614 #i‡
__DARWIN_ONLY_VERS_1050


615 
	#_DARWIN_FEATURE_ONLY_VERS_1050
 1

	)

622 #i‡
__DARWIN_ONLY_UNIX_CONFORMANCE


623 
	#_DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE
 1

	)

630 #i‡
__DARWIN_UNIX03


631 
	#_DARWIN_FEATURE_UNIX_CONFORMANCE
 3

	)

640 #i‚de‡
__CAST_AWAY_QUALIFIER


641 
	#__CAST_AWAY_QUALIFIER
(
v¨übÀ
, 
quÆifõr
, 
ty≥
Ë—y≥Ë()(v¨übÀ)

	)

648 #i‚de‡
__XNU_PRIVATE_EXTERN


649 
	#__XNU_PRIVATE_EXTERN
 
	`__©åibuã__
((
	`visibûôy
("hiddí")))

	)

655 #i‡!
	`deföed
(
__sys_cdefs_¨ch_unknown__
Ë&& deföed(
__i386__
)

656 #ñi‡!
	`deföed
(
__sys_cdefs_¨ch_unknown__
Ë&& deföed(
__x86_64__
)

658 #îr‹ 
Unsuµ‹ãd
 
¨chôe˘uª


	@/usr/include/sys/dirent.h

75 #i‚de‡
_SYS_DIRENT_H


76 
	#_SYS_DIRENT_H


	)

78 
	~<sys/_ty≥s.h
>

79 
	~<sys/cdefs.h
>

81 
	~<sys/_ty≥s/_öo_t.h
>

84 
	#__DARWIN_MAXNAMLEN
 255

	)

86 #¥agm®
∑ck
(4)

88 #i‡!
__DARWIN_64_BIT_INO_T


89 
	sdúít
 {

90 
öo_t
 
	md_öo
;

91 
__uöt16_t
 
	md_ª˛í
;

92 
__uöt8_t
 
	md_ty≥
;

93 
__uöt8_t
 
	md_«mÀn
;

94 
	md_«me
[
__DARWIN_MAXNAMLEN
 + 1];

98 #¥agm®
∑ck
()

100 
	#__DARWIN_MAXPATHLEN
 1024

	)

102 
	#__DARWIN_STRUCT_DIRENTRY
 { \

103 
__uöt64_t
 
d_öo
; \

104 
__uöt64_t
 
d_£ekoff
; \

105 
__uöt16_t
 
d_ª˛í
; \

106 
__uöt16_t
 
d_«mÀn
; \

107 
__uöt8_t
 
d_ty≥
; \

108 
d_«me
[
__DARWIN_MAXPATHLEN
]; \

109 }

	)

111 #i‡
__DARWIN_64_BIT_INO_T


112 
dúít
 
	g__DARWIN_STRUCT_DIRENTRY
;

117 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

118 
	#d_fûío
 
d_öo


	)

119 
	#MAXNAMLEN
 
__DARWIN_MAXNAMLEN


	)

123 
	#DT_UNKNOWN
 0

	)

124 
	#DT_FIFO
 1

	)

125 
	#DT_CHR
 2

	)

126 
	#DT_DIR
 4

	)

127 
	#DT_BLK
 6

	)

128 
	#DT_REG
 8

	)

129 
	#DT_LNK
 10

	)

130 
	#DT_SOCK
 12

	)

131 
	#DT_WHT
 14

	)

136 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

137 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

	@/usr/include/sys/errno.h

69 #i‚def 
_SYS_ERRNO_H_


70 
	#_SYS_ERRNO_H_


	)

72 
	~<sys/cdefs.h
>

75 #i‡
deföed
(
__STDC_WANT_LIB_EXT1__
) && __STDC_WANT_LIB_EXT1__ >= 1

76 
	~<sys/_ty≥s/_î∫o_t.h
>

79 
__BEGIN_DECLS


80 * 
__îr‹
();

81 
	#î∫o
 (*
	`__îr‹
())

	)

82 
	g__END_DECLS


88 
	#EPERM
 1

	)

89 
	#ENOENT
 2

	)

90 
	#ESRCH
 3

	)

91 
	#EINTR
 4

	)

92 
	#EIO
 5

	)

93 
	#ENXIO
 6

	)

94 
	#E2BIG
 7

	)

95 
	#ENOEXEC
 8

	)

96 
	#EBADF
 9

	)

97 
	#ECHILD
 10

	)

98 
	#EDEADLK
 11

	)

100 
	#ENOMEM
 12

	)

101 
	#EACCES
 13

	)

102 
	#EFAULT
 14

	)

103 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


104 
	#ENOTBLK
 15

	)

106 
	#EBUSY
 16

	)

107 
	#EEXIST
 17

	)

108 
	#EXDEV
 18

	)

109 
	#ENODEV
 19

	)

110 
	#ENOTDIR
 20

	)

111 
	#EISDIR
 21

	)

112 
	#EINVAL
 22

	)

113 
	#ENFILE
 23

	)

114 
	#EMFILE
 24

	)

115 
	#ENOTTY
 25

	)

116 
	#ETXTBSY
 26

	)

117 
	#EFBIG
 27

	)

118 
	#ENOSPC
 28

	)

119 
	#ESPIPE
 29

	)

120 
	#EROFS
 30

	)

121 
	#EMLINK
 31

	)

122 
	#EPIPE
 32

	)

125 
	#EDOM
 33

	)

126 
	#ERANGE
 34

	)

129 
	#EAGAIN
 35

	)

130 
	#EWOULDBLOCK
 
EAGAIN


	)

131 
	#EINPROGRESS
 36

	)

132 
	#EALREADY
 37

	)

135 
	#ENOTSOCK
 38

	)

136 
	#EDESTADDRREQ
 39

	)

137 
	#EMSGSIZE
 40

	)

138 
	#EPROTOTYPE
 41

	)

139 
	#ENOPROTOOPT
 42

	)

140 
	#EPROTONOSUPPORT
 43

	)

141 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


142 
	#ESOCKTNOSUPPORT
 44

	)

144 
	#ENOTSUP
 45

	)

145 #i‡!
__DARWIN_UNIX03
 && !
deföed
(
KERNEL
)

154 
	#EOPNOTSUPP
 
ENOTSUP


	)

157 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


158 
	#EPFNOSUPPORT
 46

	)

160 
	#EAFNOSUPPORT
 47

	)

161 
	#EADDRINUSE
 48

	)

162 
	#EADDRNOTAVAIL
 49

	)

165 
	#ENETDOWN
 50

	)

166 
	#ENETUNREACH
 51

	)

167 
	#ENETRESET
 52

	)

168 
	#ECONNABORTED
 53

	)

169 
	#ECONNRESET
 54

	)

170 
	#ENOBUFS
 55

	)

171 
	#EISCONN
 56

	)

172 
	#ENOTCONN
 57

	)

173 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


174 
	#ESHUTDOWN
 58

	)

175 
	#ETOOMANYREFS
 59

	)

177 
	#ETIMEDOUT
 60

	)

178 
	#ECONNREFUSED
 61

	)

180 
	#ELOOP
 62

	)

181 
	#ENAMETOOLONG
 63

	)

184 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


185 
	#EHOSTDOWN
 64

	)

187 
	#EHOSTUNREACH
 65

	)

188 
	#ENOTEMPTY
 66

	)

191 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


192 
	#EPROCLIM
 67

	)

193 
	#EUSERS
 68

	)

195 
	#EDQUOT
 69

	)

198 
	#ESTALE
 70

	)

199 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


200 
	#EREMOTE
 71

	)

201 
	#EBADRPC
 72

	)

202 
	#ERPCMISMATCH
 73

	)

203 
	#EPROGUNAVAIL
 74

	)

204 
	#EPROGMISMATCH
 75

	)

205 
	#EPROCUNAVAIL
 76

	)

208 
	#ENOLCK
 77

	)

209 
	#ENOSYS
 78

	)

211 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


212 
	#EFTYPE
 79

	)

213 
	#EAUTH
 80

	)

214 
	#ENEEDAUTH
 81

	)

217 
	#EPWROFF
 82

	)

218 
	#EDEVERR
 83

	)

221 
	#EOVERFLOW
 84

	)

224 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


225 
	#EBADEXEC
 85

	)

226 
	#EBADARCH
 86

	)

227 
	#ESHLIBVERS
 87

	)

228 
	#EBADMACHO
 88

	)

231 
	#ECANCELED
 89

	)

233 
	#EIDRM
 90

	)

234 
	#ENOMSG
 91

	)

235 
	#EILSEQ
 92

	)

236 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


237 
	#ENOATTR
 93

	)

240 
	#EBADMSG
 94

	)

241 
	#EMULTIHOP
 95

	)

242 
	#ENODATA
 96

	)

243 
	#ENOLINK
 97

	)

244 
	#ENOSR
 98

	)

245 
	#ENOSTR
 99

	)

246 
	#EPROTO
 100

	)

247 
	#ETIME
 101

	)

249 #i‡
__DARWIN_UNIX03
 || 
deföed
(
KERNEL
)

251 
	#EOPNOTSUPP
 102

	)

254 
	#ENOPOLICY
 103

	)

256 #i‡
__DARWIN_C_LEVEL
 >= 200809L

257 
	#ENOTRECOVERABLE
 104

	)

258 
	#EOWNERDEAD
 105

	)

261 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


262 
	#EQFULL
 106

	)

263 
	#ELAST
 106

	)

	@/usr/include/sys/fcntl.h

70 #i‚de‡
_SYS_FCNTL_H_


71 
	#_SYS_FCNTL_H_


	)

78 
	~<sys/_ty≥s.h
>

79 
	~<sys/cdefs.h
>

80 
	~<Avaûabûôy.h
>

83 
	~<sys/_ty≥s/_size_t.h
>

84 
	~<sys/_ty≥s/_mode_t.h
>

85 
	~<sys/_ty≥s/_off_t.h
>

86 
	~<sys/_ty≥s/_pid_t.h
>

96 
	#O_RDONLY
 0x0000

	)

97 
	#O_WRONLY
 0x0001

	)

98 
	#O_RDWR
 0x0002

	)

99 
	#O_ACCMODE
 0x0003

	)

109 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

110 
	#FREAD
 0x0001

	)

111 
	#FWRITE
 0x0002

	)

113 
	#O_NONBLOCK
 0x0004

	)

114 
	#O_APPEND
 0x0008

	)

116 
	~<sys/_ty≥s/_o_sync.h
>

118 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

119 
	#O_SHLOCK
 0x0010

	)

120 
	#O_EXLOCK
 0x0020

	)

121 
	#O_ASYNC
 0x0040

	)

122 
	#O_FSYNC
 
O_SYNC


	)

123 
	#O_NOFOLLOW
 0x0100

	)

125 
	#O_CREAT
 0x0200

	)

126 
	#O_TRUNC
 0x0400

	)

127 
	#O_EXCL
 0x0800

	)

128 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

129 
	#O_EVTONLY
 0x8000

	)

133 
	#O_NOCTTY
 0x20000

	)

136 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

137 
	#O_DIRECTORY
 0x100000

	)

138 
	#O_SYMLINK
 0x200000

	)

141 
	~<sys/_ty≥s/_o_dsync.h
>

144 #i‡
__DARWIN_C_LEVEL
 >= 200809L

145 
	#O_CLOEXEC
 0x1000000

	)

152 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

153 
	#O_DP_GETRAWENCRYPTED
 0x0001

	)

163 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

164 
	#FAPPEND
 
O_APPEND


	)

165 
	#FASYNC
 
O_ASYNC


	)

166 
	#FFSYNC
 
O_FSYNC


	)

167 
	#FFDSYNC
 
O_DSYNC


	)

168 
	#FNONBLOCK
 
O_NONBLOCK


	)

169 
	#FNDELAY
 
O_NONBLOCK


	)

170 
	#O_NDELAY
 
O_NONBLOCK


	)

177 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

178 
	#CPF_OVERWRITE
 1

	)

179 
	#CPF_IGNORE_MODE
 2

	)

180 
	#CPF_MASK
 (
CPF_OVERWRITE
|
CPF_IGNORE_MODE
)

	)

188 
	#F_DUPFD
 0

	)

189 
	#F_GETFD
 1

	)

190 
	#F_SETFD
 2

	)

191 
	#F_GETFL
 3

	)

192 
	#F_SETFL
 4

	)

193 
	#F_GETOWN
 5

	)

194 
	#F_SETOWN
 6

	)

195 
	#F_GETLK
 7

	)

196 
	#F_SETLK
 8

	)

197 
	#F_SETLKW
 9

	)

198 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


199 
	#F_SETLKWTIMEOUT
 10

	)

201 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

202 
	#F_FLUSH_DATA
 40

	)

203 
	#F_CHKCLEAN
 41

	)

204 
	#F_PREALLOCATE
 42

	)

205 
	#F_SETSIZE
 43

	)

206 
	#F_RDADVISE
 44

	)

207 
	#F_RDAHEAD
 45

	)

211 
	#F_NOCACHE
 48

	)

212 
	#F_LOG2PHYS
 49

	)

213 
	#F_GETPATH
 50

	)

214 
	#F_FULLFSYNC
 51

	)

215 
	#F_PATHPKG_CHECK
 52

	)

216 
	#F_FREEZE_FS
 53

	)

217 
	#F_THAW_FS
 54

	)

218 
	#F_GLOBAL_NOCACHE
 55

	)

221 
	#F_ADDSIGS
 59

	)

224 
	#F_ADDFILESIGS
 61

	)

226 
	#F_NODIRECT
 62

	)

229 
	#F_GETPROTECTIONCLASS
 63

	)

230 
	#F_SETPROTECTIONCLASS
 64

	)

232 
	#F_LOG2PHYS_EXT
 65

	)

234 
	#F_GETLKPID
 66

	)

239 
	#F_SETBACKINGSTORE
 70

	)

240 
	#F_GETPATH_MTMINFO
 71

	)

244 
	#F_SETNOSIGPIPE
 73

	)

245 
	#F_GETNOSIGPIPE
 74

	)

247 
	#F_TRANSCODEKEY
 75

	)

249 
	#F_SINGLE_WRITER
 76

	)

252 
	#F_GETPROTECTIONLEVEL
 77

	)

254 
	#F_FINDSIGS
 78

	)

259 
	#FCNTL_FS_SPECIFIC_BASE
 0x00010000

	)

263 #i‡
__DARWIN_C_LEVEL
 >= 200809L

264 
	#F_DUPFD_CLOEXEC
 67

	)

268 
	#FD_CLOEXEC
 1

	)

271 
	#F_RDLCK
 1

	)

272 
	#F_UNLCK
 2

	)

273 
	#F_WRLCK
 3

	)

279 
	~<sys/_ty≥s/_£ek_£t.h
>

285 
	~<sys/_ty≥s/_s_ifmt.h
>

287 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

290 
	#F_ALLOCATECONTIG
 0x00000002

	)

291 
	#F_ALLOCATEALL
 0x00000004

	)

295 
	#F_PEOFPOSMODE
 3

	)

297 
	#F_VOLPOSMODE
 4

	)

304 
	sÊock
 {

305 
off_t
 
	ml_°¨t
;

306 
off_t
 
	ml_Àn
;

307 
pid_t
 
	ml_pid
;

308 
	ml_ty≥
;

309 
	ml_whí˚
;

312 
	~<sys/_ty≥s/_time•ec.h
>

314 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL


319 
	sÊocktimeout
 {

320 
Êock
 
	mÊ
;

321 
time•ec
 
	mtimeout
;

325 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

332 
	sødvis‹y
 {

333 
off_t
 
	mø_off£t
;

334 
	mø_cou¡
;

344 
	sfsig«tuªs
 {

345 
off_t
 
	mfs_fûe_°¨t
;

346 *
	mfs_blob_°¨t
;

347 
size_t
 
	mfs_blob_size
;

348 } 
	tfsig«tuªs_t
;

351 
	#LOCK_SH
 0x01

	)

352 
	#LOCK_EX
 0x02

	)

353 
	#LOCK_NB
 0x04

	)

354 
	#LOCK_UN
 0x08

	)

358 
	sf°‹e
 {

359 
	mf°_Êags
;

360 
	mf°_posmode
;

361 
off_t
 
	mf°_off£t
;

362 
off_t
 
	mf°_Àngth
;

363 
off_t
 
	mf°_byãßŒoc
;

364 } 
	tf°‹e_t
;

368 
	sfboŸ°ø±øns„r
 {

369 
off_t
 
	mfbt_off£t
;

370 
size_t
 
	mfbt_Àngth
;

371 *
	mfbt_buf„r
;

372 } 
	tfboŸ°ø±øns„r_t
;

396 #¥agm®
∑ck
(4)

398 
	slog2phys
 {

399 
	ml2p_Êags
;

400 
off_t
 
	ml2p_c⁄tigbyãs
;

403 
off_t
 
	ml2p_devoff£t
;

408 #¥agm®
∑ck
()

410 
	#O_POPUP
 0x80000000

	)

411 
	#O_ALERT
 0x20000000

	)

417 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

419 
	~<sys/_ty≥s/_fûe£c_t.h
>

422 
	mFILESEC_OWNER
 = 1,

423 
	mFILESEC_GROUP
 = 2,

424 
	mFILESEC_UUID
 = 3,

425 
	mFILESEC_MODE
 = 4,

426 
	mFILESEC_ACL
 = 5,

427 
	mFILESEC_GRPUUID
 = 6,

430 
	mFILESEC_ACL_RAW
 = 100,

431 
	mFILESEC_ACL_ALLOCSIZE
 = 101

432 } 
	tfûe£c_¥›îty_t
;

435 
	#FILESEC_GUID
 
FILESEC_UUID


	)

438 
__BEGIN_DECLS


439 
	$›í
(c⁄° *, , ...Ë
	`__DARWIN_ALIAS_C
(
›í
);

440 
	$¸ót
(c⁄° *, 
mode_t
Ë
	`__DARWIN_ALIAS_C
(
¸ót
);

441 
	$f˙é
(, , ...Ë
	`__DARWIN_ALIAS_C
(
f˙é
);

442 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

444 
	`›íx_≈
(c⁄° *, , 
fûe£c_t
);

446 
	`›í_d¥Ÿe˘ed_≈
 ( const *, , , , ...);

447 
	`Êock
(, );

448 
fûe£c_t
 
	`fûe£c_öô
();

449 
fûe£c_t
 
	`fûe£c_dup
(filesec_t);

450 
	`fûe£c_‰ì
(
fûe£c_t
);

451 
	`fûe£c_gë_¥›îty
(
fûe£c_t
, 
fûe£c_¥›îty_t
, *);

452 
	`fûe£c_quîy_¥›îty
(
fûe£c_t
, 
fûe£c_¥›îty_t
, *);

453 
	`fûe£c_£t_¥›îty
(
fûe£c_t
, 
fûe£c_¥›îty_t
, const *);

454 
	$fûe£c_un£t_¥›îty
(
fûe£c_t
, 
fûe£c_¥›îty_t
Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_6
, 
__IPHONE_3_2
);

455 
	#_FILESEC_UNSET_PROPERTY
 ((*)0)

	)

456 
	#_FILESEC_REMOVE_ACL
 ((*)1)

	)

458 
__END_DECLS


	@/usr/include/sys/select.h

63 #i‚de‡
_SYS_SELECT_H_


64 
	#_SYS_SELECT_H_


	)

66 
	~<sys/≠∂ópi›ts.h
>

67 
	~<sys/cdefs.h
>

68 
	~<sys/_ty≥s.h
>

75 
	~<sys/_ty≥s/_fd_def.h
>

76 
	~<sys/_ty≥s/_time•ec.h
>

77 
	~<sys/_ty≥s/_timevÆ.h
>

84 
	~<sys/_ty≥s/_time_t.h
>

85 
	~<sys/_ty≥s/_su£c⁄ds_t.h
>

86 
	~<sys/_ty≥s/_sig£t_t.h
>

100 
	~<sys/_ty≥s/_fd_£tsize.h
>

101 
	~<sys/_ty≥s/_fd_£t.h
>

102 
	~<sys/_ty≥s/_fd_˛r.h
>

103 
	~<sys/_ty≥s/_fd_is£t.h
>

104 
	~<sys/_ty≥s/_fd_zîo.h
>

106 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

107 
	~<sys/_ty≥s/_fd_c›y.h
>

111 
	g__BEGIN_DECLS


113 #i‚de‡ 
__MWERKS__


114 
	$p£À˘
(, 
fd_£t
 * 
__ª°ri˘
, fd_set * __restrict,

115 
fd_£t
 * 
__ª°ri˘
, c⁄° 
time•ec
 * __restrict,

116 c⁄° 
sig£t_t
 * 
__ª°ri˘
)

117 #i‡
	`deföed
(
_DARWIN_C_SOURCE
Ë|| deföed(
_DARWIN_UNLIMITED_SELECT
)

118 
	$__DARWIN_EXTSN_C
(
p£À˘
)

120 #i‡
	`deföed
(
__LP64__
Ë&& !
__DARWIN_NON_CANCELABLE


121 
	$__DARWIN_1050
(
p£À˘
)

123 
	$__DARWIN_ALIAS_C
(
p£À˘
)

129 
	~<sys/_£À˘.h
>

131 
__END_DECLS


	@/usr/include/sys/signal.h

69 #i‚def 
_SYS_SIGNAL_H_


70 
	#_SYS_SIGNAL_H_


	)

72 
	~<sys/cdefs.h
>

73 
	~<sys/≠∂ópi›ts.h
>

75 
	#__DARWIN_NSIG
 32

	)

77 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

78 
	#NSIG
 
__DARWIN_NSIG


	)

81 
	~<machöe/sig«l.h
>

83 
	#SIGHUP
 1

	)

84 
	#SIGINT
 2

	)

85 
	#SIGQUIT
 3

	)

86 
	#SIGILL
 4

	)

87 
	#SIGTRAP
 5

	)

88 
	#SIGABRT
 6

	)

89 #i‡ (
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_DARWIN_C_SOURCE
))

90 
	#SIGPOLL
 7

	)

92 
	#SIGIOT
 
SIGABRT


	)

93 
	#SIGEMT
 7

	)

95 
	#SIGFPE
 8

	)

96 
	#SIGKILL
 9

	)

97 
	#SIGBUS
 10

	)

98 
	#SIGSEGV
 11

	)

99 
	#SIGSYS
 12

	)

100 
	#SIGPIPE
 13

	)

101 
	#SIGALRM
 14

	)

102 
	#SIGTERM
 15

	)

103 
	#SIGURG
 16

	)

104 
	#SIGSTOP
 17

	)

105 
	#SIGTSTP
 18

	)

106 
	#SIGCONT
 19

	)

107 
	#SIGCHLD
 20

	)

108 
	#SIGTTIN
 21

	)

109 
	#SIGTTOU
 22

	)

110 #i‡ (!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

111 
	#SIGIO
 23

	)

113 
	#SIGXCPU
 24

	)

114 
	#SIGXFSZ
 25

	)

115 
	#SIGVTALRM
 26

	)

116 
	#SIGPROF
 27

	)

117 #i‡ (!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

118 
	#SIGWINCH
 28

	)

119 
	#SIGINFO
 29

	)

121 
	#SIGUSR1
 30

	)

122 
	#SIGUSR2
 31

	)

124 #i‡
deföed
(
_ANSI_SOURCE
Ë|| 
__DARWIN_UNIX03
 || deföed(
__˝lu•lus
)

130 
	#SIG_DFL
 ((*)())0

	)

131 
	#SIG_IGN
 ((*)())1

	)

132 
	#SIG_HOLD
 ((*)())5

	)

133 
	#SIG_ERR
 (((*)())-1)

	)

136 
	#SIG_DFL
 ((*)–))0

	)

137 
	#SIG_IGN
 ((*)–))1

	)

138 
	#SIG_HOLD
 ((*)–))5

	)

139 
	#SIG_ERR
 (((*)–))-1)

	)

142 #i‚de‡
_ANSI_SOURCE


143 
	~<sys/_ty≥s.h
>

145 
	~<machöe/_mc⁄ãxt.h
>

146 
	~<sys/_ty≥s/_sigÆt°ack.h
>

147 
	~<sys/_ty≥s/_uc⁄ãxt.h
>

149 
	~<sys/_ty≥s/_pid_t.h
>

150 
	~<sys/_ty≥s/_±hªad_©å_t.h
>

151 
	~<sys/_ty≥s/_sig£t_t.h
>

152 
	~<sys/_ty≥s/_size_t.h
>

153 
	~<sys/_ty≥s/_uid_t.h
>

155 
	usigvÆ
 {

157 
	msivÆ_öt
;

158 *
	msivÆ_±r
;

161 
	#SIGEV_NONE
 0

	)

162 
	#SIGEV_SIGNAL
 1

	)

163 
	#SIGEV_THREAD
 3

	)

165 
	ssigevít
 {

166 
	msigev_nŸify
;

167 
	msigev_signo
;

168 
sigvÆ
 
	msigev_vÆue
;

169 (*
	msigev_nŸify_fun˘i⁄
)(
	msigvÆ
);

170 
±hªad_©å_t
 *
	msigev_nŸify_©åibuãs
;

174 
	s__sigöfo
 {

175 
	msi_signo
;

176 
	msi_î∫o
;

177 
	msi_code
;

178 
pid_t
 
	msi_pid
;

179 
uid_t
 
	msi_uid
;

180 
	msi_°©us
;

181 *
	msi_addr
;

182 
sigvÆ
 
	msi_vÆue
;

183 
	msi_b™d
;

184 
	m__∑d
[7];

185 } 
	tsigöfo_t
;

202 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

203 
	#ILL_NOOP
 0

	)

205 
	#ILL_ILLOPC
 1

	)

206 
	#ILL_ILLTRP
 2

	)

207 
	#ILL_PRVOPC
 3

	)

208 
	#ILL_ILLOPN
 4

	)

209 
	#ILL_ILLADR
 5

	)

210 
	#ILL_PRVREG
 6

	)

211 
	#ILL_COPROC
 7

	)

212 
	#ILL_BADSTK
 8

	)

215 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

216 
	#FPE_NOOP
 0

	)

218 
	#FPE_FLTDIV
 1

	)

219 
	#FPE_FLTOVF
 2

	)

220 
	#FPE_FLTUND
 3

	)

221 
	#FPE_FLTRES
 4

	)

222 
	#FPE_FLTINV
 5

	)

223 
	#FPE_FLTSUB
 6

	)

224 
	#FPE_INTDIV
 7

	)

225 
	#FPE_INTOVF
 8

	)

228 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

229 
	#SEGV_NOOP
 0

	)

231 
	#SEGV_MAPERR
 1

	)

232 
	#SEGV_ACCERR
 2

	)

235 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

236 
	#BUS_NOOP
 0

	)

238 
	#BUS_ADRALN
 1

	)

239 
	#BUS_ADRERR
 2

	)

240 
	#BUS_OBJERR
 3

	)

243 
	#TRAP_BRKPT
 1

	)

244 
	#TRAP_TRACE
 2

	)

247 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

248 
	#CLD_NOOP
 0

	)

250 
	#CLD_EXITED
 1

	)

251 
	#CLD_KILLED
 2

	)

252 
	#CLD_DUMPED
 3

	)

253 
	#CLD_TRAPPED
 4

	)

254 
	#CLD_STOPPED
 5

	)

255 
	#CLD_CONTINUED
 6

	)

258 
	#POLL_IN
 1

	)

259 
	#POLL_OUT
 2

	)

260 
	#POLL_MSG
 3

	)

261 
	#POLL_ERR
 4

	)

262 
	#POLL_PRI
 5

	)

263 
	#POLL_HUP
 6

	)

266 
	u__siga˘i⁄_u
 {

267 (*
	m__ß_h™dÀr
)();

268 (*
	m__ß_siga˘i⁄
)(, 
	m__sigöfo
 *,

273 
	s__siga˘i⁄
 {

274 
__siga˘i⁄_u
 
	m__siga˘i⁄_u
;

275 (*
	mß_åamp
)(*, , , 
	msigöfo_t
 *, *);

276 
sig£t_t
 
	mß_mask
;

277 
	mß_Êags
;

283 
	ssiga˘i⁄
 {

284 
__siga˘i⁄_u
 
	m__siga˘i⁄_u
;

285 
sig£t_t
 
	mß_mask
;

286 
	mß_Êags
;

292 
	#ß_h™dÀr
 
__siga˘i⁄_u
.
__ß_h™dÀr


	)

293 
	#ß_siga˘i⁄
 
__siga˘i⁄_u
.
__ß_siga˘i⁄


	)

295 
	#SA_ONSTACK
 0x0001

	)

296 
	#SA_RESTART
 0x0002

	)

297 
	#SA_RESETHAND
 0x0004

	)

298 
	#SA_NOCLDSTOP
 0x0008

	)

299 
	#SA_NODEFER
 0x0010

	)

300 
	#SA_NOCLDWAIT
 0x0020

	)

301 
	#SA_SIGINFO
 0x0040

	)

302 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

303 
	#SA_USERTRAMP
 0x0100

	)

305 
	#SA_64REGSET
 0x0200

	)

311 
	#SA_USERSPACE_MASK
 (
SA_ONSTACK
 | 
SA_RESTART
 | 
SA_RESETHAND
 | 
SA_NOCLDSTOP
 | 
SA_NODEFER
 | 
SA_NOCLDWAIT
 | 
SA_SIGINFO
)

	)

316 
	#SIG_BLOCK
 1

	)

317 
	#SIG_UNBLOCK
 2

	)

318 
	#SIG_SETMASK
 3

	)

321 
	#SI_USER
 0x10001

	)

322 
	#SI_QUEUE
 0x10002

	)

323 
	#SI_TIMER
 0x10003

	)

324 
	#SI_ASYNCIO
 0x10004

	)

325 
	#SI_MESGQ
 0x10005

	)

327 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

328 (*
	tsig_t
)();

335 
	#SS_ONSTACK
 0x0001

	)

336 
	#SS_DISABLE
 0x0004

	)

337 
	#MINSIGSTKSZ
 32768

	)

338 
	#SIGSTKSZ
 131072

	)

340 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

345 
	ssigvec
 {

346 (*
sv_h™dÀr
)();

347 
sv_mask
;

348 
sv_Êags
;

351 
	#SV_ONSTACK
 
SA_ONSTACK


	)

352 
	#SV_INTERRUPT
 
SA_RESTART


	)

353 
	#SV_RESETHAND
 
SA_RESETHAND


	)

354 
	#SV_NODEFER
 
SA_NODEFER


	)

355 
	#SV_NOCLDSTOP
 
SA_NOCLDSTOP


	)

356 
	#SV_SIGINFO
 
SA_SIGINFO


	)

358 
	#sv_⁄°ack
 
sv_Êags


	)

364 
	ssig°ack
 {

365 *
ss_•
;

366 
ss_⁄°ack
;

369 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

374 
	#sigmask
(
m
Ë(1 << ((m)-1))

	)

377 
	#BADSIG
 
SIG_ERR


	)

386 
__BEGIN_DECLS


387 (*
	`sig«l
(, (*)()))();

388 
__END_DECLS


	@/usr/include/sys/syslimits.h

65 #i‚de‡
_SYS_SYSLIMITS_H_


66 
	#_SYS_SYSLIMITS_H_


	)

68 
	~<sys/cdefs.h
>

70 #i‡!
deföed
(
_ANSI_SOURCE
)

75 
	#ARG_MAX
 (256 * 1024Ë

	)

76 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

77 
	#CHILD_MAX
 266

	)

78 
	#GID_MAX
 2147483647U

	)

80 
	#LINK_MAX
 32767

	)

81 
	#MAX_CANON
 1024

	)

82 
	#MAX_INPUT
 1024

	)

83 
	#NAME_MAX
 255

	)

84 
	#NGROUPS_MAX
 16

	)

85 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

86 
	#UID_MAX
 2147483647U

	)

88 
	#OPEN_MAX
 10240

	)

91 
	#PATH_MAX
 1024

	)

92 
	#PIPE_BUF
 512

	)

94 
	#BC_BASE_MAX
 99

	)

95 
	#BC_DIM_MAX
 2048

	)

96 
	#BC_SCALE_MAX
 99

	)

97 
	#BC_STRING_MAX
 1000

	)

98 
	#CHARCLASS_NAME_MAX
 14

	)

99 
	#COLL_WEIGHTS_MAX
 2

	)

100 
	#EQUIV_CLASS_MAX
 2

	)

101 
	#EXPR_NEST_MAX
 32

	)

102 
	#LINE_MAX
 2048

	)

103 
	#RE_DUP_MAX
 255

	)

105 #i‡
__DARWIN_UNIX03


106 
	#NZERO
 20

	)

111 
	#NZERO
 0

	)

	@/usr/include/sys/ucontext.h

29 #i‚de‡
_SYS_UCONTEXT_H_


30 
	#_SYS_UCONTEXT_H_


	)

32 
	~<sys/cdefs.h
>

33 
	~<sys/_ty≥s.h
>

35 
	~<machöe/_mc⁄ãxt.h
>

36 
	~<sys/_ty≥s/_sigÆt°ack.h
>

37 
	~<sys/_ty≥s/_uc⁄ãxt.h
>

39 
	~<sys/_ty≥s/_sig£t_t.h
>

	@/usr/include/sys/unistd.h

64 #i‚de‡
_SYS_UNISTD_H_


65 
	#_SYS_UNISTD_H_


	)

67 
	~<sys/cdefs.h
>

75 #ifdef 
_NOT_AVAILABLE


76 
	#_POSIX_SAVED_IDS


	)

79 
	#_POSIX_VERSION
 200112L

	)

80 
	#_POSIX2_VERSION
 200112L

	)

84 
	~<sys/_ty≥s/_posix_vdißbÀ.h
>

86 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

89 
	#F_OK
 0

	)

90 
	#X_OK
 (1<<0Ë

	)

91 
	#W_OK
 (1<<1Ë

	)

92 
	#R_OK
 (1<<2Ë

	)

94 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

100 
	#_READ_OK
 (1<<9Ë

	)

101 
	#_WRITE_OK
 (1<<10Ë

	)

102 
	#_EXECUTE_OK
 (1<<11Ë

	)

103 
	#_DELETE_OK
 (1<<12Ë

	)

104 
	#_APPEND_OK
 (1<<13Ë

	)

105 
	#_RMFILE_OK
 (1<<14Ë

	)

106 
	#_RATTR_OK
 (1<<15Ë

	)

107 
	#_WATTR_OK
 (1<<16Ë

	)

108 
	#_REXT_OK
 (1<<17Ë

	)

109 
	#_WEXT_OK
 (1<<18Ë

	)

110 
	#_RPERM_OK
 (1<<19Ë

	)

111 
	#_WPERM_OK
 (1<<20Ë

	)

112 
	#_CHOWN_OK
 (1<<21Ë

	)

114 
	#_ACCESS_EXTENDED_MASK
 (
_READ_OK
 | 
_WRITE_OK
 | 
_EXECUTE_OK
 | \

115 
_DELETE_OK
 | 
_APPEND_OK
 | \

116 
_RMFILE_OK
 | 
_REXT_OK
 | \

117 
_WEXT_OK
 | 
_RATTR_OK
 | 
_WATTR_OK
 | 
_RPERM_OK
 | \

118 
_WPERM_OK
 | 
_CHOWN_OK
)

	)

122 
	~<sys/_ty≥s/_£ek_£t.h
>

124 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

126 
	#L_SET
 
SEEK_SET


	)

127 
	#L_INCR
 
SEEK_CUR


	)

128 
	#L_XTND
 
SEEK_END


	)

131 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

132 
	sac˚ssx_des¸ùt‹
 {

133 
	mad_«me_off£t
;

134 
	mad_Êags
;

135 
	mad_∑d
[2];

137 
	#ACCESSX_MAX_DESCRIPTORS
 100

	)

138 
	#ACCESSX_MAX_TABLESIZE
 (16 * 1024)

	)

142 
	#_PC_LINK_MAX
 1

	)

143 
	#_PC_MAX_CANON
 2

	)

144 
	#_PC_MAX_INPUT
 3

	)

145 
	#_PC_NAME_MAX
 4

	)

146 
	#_PC_PATH_MAX
 5

	)

147 
	#_PC_PIPE_BUF
 6

	)

148 
	#_PC_CHOWN_RESTRICTED
 7

	)

149 
	#_PC_NO_TRUNC
 8

	)

150 
	#_PC_VDISABLE
 9

	)

152 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

153 
	#_PC_NAME_CHARS_MAX
 10

	)

154 
	#_PC_CASE_SENSITIVE
 11

	)

155 
	#_PC_CASE_PRESERVING
 12

	)

156 
	#_PC_EXTENDED_SECURITY_NP
 13

	)

157 
	#_PC_AUTH_OPAQUE_NP
 14

	)

160 
	#_PC_2_SYMLINKS
 15

	)

161 
	#_PC_ALLOC_SIZE_MIN
 16

	)

162 
	#_PC_ASYNC_IO
 17

	)

163 
	#_PC_FILESIZEBITS
 18

	)

164 
	#_PC_PRIO_IO
 19

	)

165 
	#_PC_REC_INCR_XFER_SIZE
 20

	)

166 
	#_PC_REC_MAX_XFER_SIZE
 21

	)

167 
	#_PC_REC_MIN_XFER_SIZE
 22

	)

168 
	#_PC_REC_XFER_ALIGN
 23

	)

169 
	#_PC_SYMLINK_MAX
 24

	)

170 
	#_PC_SYNC_IO
 25

	)

171 
	#_PC_XATTR_SIZE_BITS
 26

	)

174 
	#_CS_PATH
 1

	)

	@/usr/include/xlocale/_ctype.h

24 #i‚de‡
_XLOCALE__CTYPE_H_


25 
	#_XLOCALE__CTYPE_H_


	)

30 #i‡!
deföed
(
_DONT_USE_CTYPE_INLINE_
) && \

31 (
deföed
(
_USE_CTYPE_INLINE_
Ë|| deföed(
__GNUC__
Ë|| 
	$deföed
(
__˝lu•lus
))

34 
__BEGIN_DECLS


35 
	`___ru√ty≥_l
(
__d¨wö_˘_ru√_t
, 
loˇÀ_t
);

36 
__d¨wö_˘_ru√_t
 
	`___tﬁowî_l
(__d¨wö_˘_ru√_t, 
loˇÀ_t
);

37 
__d¨wö_˘_ru√_t
 
	`___touµî_l
(__d¨wö_˘_ru√_t, 
loˇÀ_t
);

38 
__END_DECLS


40 
__BEGIN_DECLS


41 
	`__maskru√_l
(
__d¨wö_˘_ru√_t
, , 
loˇÀ_t
);

42 
__END_DECLS


44 
__DARWIN_CTYPE_ölöe
 

45 
	$__i°y≥_l
(
__d¨wö_˘_ru√_t
 
_c
, 
_f
, 
loˇÀ_t
 
_l
)

47  !!(
	`ißscii
(
_c
Ë? (
_DeÁu…Ru√LoˇÀ
.
__ru√ty≥
[_c] & 
_f
)

48 : 
	`__maskru√_l
(
_c
, 
_f
, 
_l
));

49 
	}
}

51 
__DARWIN_CTYPE_ölöe
 
__d¨wö_˘_ru√_t


52 
	$__touµî_l
(
__d¨wö_˘_ru√_t
 
_c
, 
loˇÀ_t
 
_l
)

54  
	`ißscii
(
_c
Ë? 
_DeÁu…Ru√LoˇÀ
.
__m≠uµî
[_c]

55 : 
	`___touµî_l
(
_c
, 
_l
);

56 
	}
}

58 
__DARWIN_CTYPE_ölöe
 
__d¨wö_˘_ru√_t


59 
	$__tﬁowî_l
(
__d¨wö_˘_ru√_t
 
_c
, 
loˇÀ_t
 
_l
)

61  
	`ißscii
(
_c
Ë? 
_DeÁu…Ru√LoˇÀ
.
__m≠lowî
[_c]

62 : 
	`___tﬁowî_l
(
_c
, 
_l
);

63 
	}
}

65 
__DARWIN_CTYPE_ölöe
 

66 
	$__wcwidth_l
(
__d¨wö_˘_ru√_t
 
_c
, 
loˇÀ_t
 
_l
)

68 
_x
;

70 i‡(
_c
 == 0)

72 
_x
 = ()
	`__maskru√_l
(
_c
, 
_CTYPE_SWM
|
_CTYPE_R
, 
_l
);

73 i‡((
_x
 & 
_CTYPE_SWM
) != 0)

74  ((
_x
 & 
_CTYPE_SWM
Ë>> 
_CTYPE_SWS
);

75  ((
_x
 & 
_CTYPE_R
) != 0 ? 1 : -1);

76 
	}
}

78 #i‚de‡
_EXTERNALIZE_CTYPE_INLINES_


80 
__DARWIN_CTYPE_TOP_ölöe
 

81 
	$digôtoöt_l
(
c
, 
loˇÀ_t
 
l
)

83  (
	`__maskru√_l
(
c
, 0x0F, 
l
));

84 
	}
}

86 
__DARWIN_CTYPE_TOP_ölöe
 

87 
	$iß um_l
(
c
, 
loˇÀ_t
 
l
)

89  (
	`__i°y≥_l
(
c
, 
_CTYPE_A
|
_CTYPE_D
, 
l
));

90 
	}
}

92 
__DARWIN_CTYPE_TOP_ölöe
 

93 
	$ißÕha_l
(
c
, 
loˇÀ_t
 
l
)

95  (
	`__i°y≥_l
(
c
, 
_CTYPE_A
, 
l
));

96 
	}
}

98 
__DARWIN_CTYPE_TOP_ölöe
 

99 
	$isbœnk_l
(
c
, 
loˇÀ_t
 
l
)

101  (
	`__i°y≥_l
(
c
, 
_CTYPE_B
, 
l
));

102 
	}
}

104 
__DARWIN_CTYPE_TOP_ölöe
 

105 
	$is˙ål_l
(
c
, 
loˇÀ_t
 
l
)

107  (
	`__i°y≥_l
(
c
, 
_CTYPE_C
, 
l
));

108 
	}
}

110 
__DARWIN_CTYPE_TOP_ölöe
 

111 
	$isdigô_l
(
c
, 
loˇÀ_t
 
l
)

113  (
	`__i°y≥_l
(
c
, 
_CTYPE_D
, 
l
));

114 
	}
}

116 
__DARWIN_CTYPE_TOP_ölöe
 

117 
	$isgøph_l
(
c
, 
loˇÀ_t
 
l
)

119  (
	`__i°y≥_l
(
c
, 
_CTYPE_G
, 
l
));

120 
	}
}

122 
__DARWIN_CTYPE_TOP_ölöe
 

123 
	$ishexnumbî_l
(
c
, 
loˇÀ_t
 
l
)

125  (
	`__i°y≥_l
(
c
, 
_CTYPE_X
, 
l
));

126 
	}
}

128 
__DARWIN_CTYPE_TOP_ölöe
 

129 
	$isideogøm_l
(
c
, 
loˇÀ_t
 
l
)

131  (
	`__i°y≥_l
(
c
, 
_CTYPE_I
, 
l
));

132 
	}
}

134 
__DARWIN_CTYPE_TOP_ölöe
 

135 
	$i¶owî_l
(
c
, 
loˇÀ_t
 
l
)

137  (
	`__i°y≥_l
(
c
, 
_CTYPE_L
, 
l
));

138 
	}
}

140 
__DARWIN_CTYPE_TOP_ölöe
 

141 
	$i¢umbî_l
(
c
, 
loˇÀ_t
 
l
)

143  (
	`__i°y≥_l
(
c
, 
_CTYPE_D
, 
l
));

144 
	}
}

146 
__DARWIN_CTYPE_TOP_ölöe
 

147 
	$i•h⁄ogøm_l
(
c
, 
loˇÀ_t
 
l
)

149  (
	`__i°y≥_l
(
c
, 
_CTYPE_Q
, 
l
));

150 
	}
}

152 
__DARWIN_CTYPE_TOP_ölöe
 

153 
	$i•röt_l
(
c
, 
loˇÀ_t
 
l
)

155  (
	`__i°y≥_l
(
c
, 
_CTYPE_R
, 
l
));

156 
	}
}

158 
__DARWIN_CTYPE_TOP_ölöe
 

159 
	$i•un˘_l
(
c
, 
loˇÀ_t
 
l
)

161  (
	`__i°y≥_l
(
c
, 
_CTYPE_P
, 
l
));

162 
	}
}

164 
__DARWIN_CTYPE_TOP_ölöe
 

165 
	$i§u√_l
(
c
, 
loˇÀ_t
 
l
)

167  (
	`__i°y≥_l
(
c
, 0xFFFFFFF0L, 
l
));

168 
	}
}

170 
__DARWIN_CTYPE_TOP_ölöe
 

171 
	$is•a˚_l
(
c
, 
loˇÀ_t
 
l
)

173  (
	`__i°y≥_l
(
c
, 
_CTYPE_S
, 
l
));

174 
	}
}

176 
__DARWIN_CTYPE_TOP_ölöe
 

177 
	$is•ecül_l
(
c
, 
loˇÀ_t
 
l
)

179  (
	`__i°y≥_l
(
c
, 
_CTYPE_T
, 
l
));

180 
	}
}

182 
__DARWIN_CTYPE_TOP_ölöe
 

183 
	$isuµî_l
(
c
, 
loˇÀ_t
 
l
)

185  (
	`__i°y≥_l
(
c
, 
_CTYPE_U
, 
l
));

186 
	}
}

188 
__DARWIN_CTYPE_TOP_ölöe
 

189 
	$isxdigô_l
(
c
, 
loˇÀ_t
 
l
)

191  (
	`__i°y≥_l
(
c
, 
_CTYPE_X
, 
l
));

192 
	}
}

194 
__DARWIN_CTYPE_TOP_ölöe
 

195 
	$tﬁowî_l
(
c
, 
loˇÀ_t
 
l
)

197  (
	`__tﬁowî_l
(
c
, 
l
));

198 
	}
}

200 
__DARWIN_CTYPE_TOP_ölöe
 

201 
	$touµî_l
(
c
, 
loˇÀ_t
 
l
)

203  (
	`__touµî_l
(
c
, 
l
));

204 
	}
}

209 
__BEGIN_DECLS


210 
digôtoöt_l
(, 
loˇÀ_t
);

211 
iß um_l
(, 
loˇÀ_t
);

212 
ißÕha_l
(, 
loˇÀ_t
);

213 
isbœnk_l
(, 
loˇÀ_t
);

214 
is˙ål_l
(, 
loˇÀ_t
);

215 
isdigô_l
(, 
loˇÀ_t
);

216 
isgøph_l
(, 
loˇÀ_t
);

217 
ishexnumbî_l
(, 
loˇÀ_t
);

218 
isideogøm_l
(, 
loˇÀ_t
);

219 
i¶owî_l
(, 
loˇÀ_t
);

220 
i¢umbî_l
(, 
loˇÀ_t
);

221 
i•h⁄ogøm_l
(, 
loˇÀ_t
);

222 
i•röt_l
(, 
loˇÀ_t
);

223 
i•un˘_l
(, 
loˇÀ_t
);

224 
i§u√_l
(, 
loˇÀ_t
);

225 
is•a˚_l
(, 
loˇÀ_t
);

226 
is•ecül_l
(, 
loˇÀ_t
);

227 
isuµî_l
(, 
loˇÀ_t
);

228 
isxdigô_l
(, 
loˇÀ_t
);

229 
tﬁowî_l
(, 
loˇÀ_t
);

230 
touµî_l
(, 
loˇÀ_t
);

231 
	g__END_DECLS


	@/usr/include/xlocale/_inttypes.h

24 #i‚de‡
_XLOCALE__INTTYPES_H_


25 
	#_XLOCALE__INTTYPES_H_


	)

27 
__BEGIN_DECLS


28 
ötmax_t
 
°πoimax_l
(c⁄° * 
__ª°ri˘
 
≈å
, ** __ª°ri˘ 
íd±r
,

29 
ba£
, 
loˇÀ_t
);

30 
uötmax_t
 
°πoumax_l
(c⁄° * 
__ª°ri˘
 
≈å
, ** __ª°ri˘ 
íd±r
,

31 
ba£
, 
loˇÀ_t
);

32 
ötmax_t
 
wc°oimax_l
(c⁄° 
wch¨_t
 * 
__ª°ri˘
 
≈å
,

33 
wch¨_t
 ** 
__ª°ri˘
 
íd±r
, 
ba£
, 
loˇÀ_t
);

34 
uötmax_t
 
wc°oumax_l
(c⁄° 
wch¨_t
 * 
__ª°ri˘
 
≈å
,

35 
wch¨_t
 ** 
__ª°ri˘
 
íd±r
, 
ba£
, 
loˇÀ_t
);

38 #i‡!
deföed
(
__˝lu•lus
Ë&& deföed(
__WCHAR_MAX__
) && __WCHAR_MAX__ <= 0xffffU

39 #¥agm®
GCC
 
pois⁄
 
wc°oimax_l
 
wc°oumax_l


41 
	g__END_DECLS


	@/usr/include/xlocale/_stdio.h

24 #i‚de‡
_XLOCALE__STDIO_H_


25 
	#_XLOCALE__STDIO_H_


	)

27 
__BEGIN_DECLS


29 
	$Ârötf_l
(
FILE
 * 
__ª°ri˘
, 
loˇÀ_t
 __restrict, const * __restrict, ...)

30 
	`__¥ötÊike
(3, 4);

31 
	$fsˇnf_l
(
FILE
 * 
__ª°ri˘
, 
loˇÀ_t
 __restrict, const * __restrict, ...)

32 
	`__sˇnÊike
(3, 4);

33 
	$¥ötf_l
(
loˇÀ_t
 
__ª°ri˘
, const * __restrict, ...)

34 
	`__¥ötÊike
(2, 3);

35 
	$sˇnf_l
(
loˇÀ_t
 
__ª°ri˘
, const * __restrict, ...)

36 
	`__sˇnÊike
(2, 3);

37 
	$•rötf_l
(* 
__ª°ri˘
, 
loˇÀ_t
 __restrict, const * __restrict, ...)

38 
	`__¥ötÊike
(3, 4);

39 
	$ssˇnf_l
(c⁄° * 
__ª°ri˘
, 
loˇÀ_t
 __restrict, const * __restrict, ...)

40 
	`__sˇnÊike
(3, 4);

41 
	$vÂrötf_l
(
FILE
 * 
__ª°ri˘
, 
loˇÀ_t
 __ª°ri˘, c⁄° * __ª°ri˘, 
va_li°
)

42 
	`__¥ötÊike
(3, 0);

43 
	$v¥ötf_l
(
loˇÀ_t
 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
)

44 
	`__¥ötÊike
(2, 0);

45 
	$v•rötf_l
(* 
__ª°ri˘
, 
loˇÀ_t
 __ª°ri˘, c⁄° * __ª°ri˘, 
va_li°
)

46 
	`__¥ötÊike
(3, 0);

48 #i‡
__DARWIN_C_LEVEL
 >200112L || 
	`deföed
(
__˝lu•lus
)

49 
	$¢¥ötf_l
(* 
__ª°ri˘
, 
size_t
, 
loˇÀ_t
 __restrict, const * __restrict, ...)

50 
	`__¥ötÊike
(4, 5);

51 
	$vfsˇnf_l
(
FILE
 * 
__ª°ri˘
, 
loˇÀ_t
 __ª°ri˘, c⁄° * __ª°ri˘, 
va_li°
)

52 
	`__sˇnÊike
(3, 0);

53 
	$vsˇnf_l
(
loˇÀ_t
 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
)

54 
	`__sˇnÊike
(2, 0);

55 
	$v¢¥ötf_l
(* 
__ª°ri˘
, 
size_t
, 
loˇÀ_t
 __ª°ri˘, c⁄° * __ª°ri˘, 
va_li°
)

56 
	`__¥ötÊike
(4, 0);

57 
	$vssˇnf_l
(c⁄° * 
__ª°ri˘
, 
loˇÀ_t
 __ª°ri˘, c⁄° * __ª°ri˘, 
va_li°
)

58 
	`__sˇnÊike
(3, 0);

61 #i‡
__DARWIN_C_LEVEL
 >200809L || 
	`deföed
(
__˝lu•lus
)

62 
	$d¥ötf_l
(, 
loˇÀ_t
 
__ª°ri˘
, const * __restrict, ...)

63 
	$__¥ötÊike
(3, 4Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

64 
	$vd¥ötf_l
(, 
loˇÀ_t
 
__ª°ri˘
, c⁄° * __ª°ri˘, 
va_li°
)

65 
	$__¥ötÊike
(3, 0Ë
	`__OSX_AVAILABLE_STARTING
(
__MAC_10_7
, 
__IPHONE_4_3
);

69 #i‡
__DARWIN_C_LEVEL
 >
__DARWIN_C_FULL
 || 
	`deföed
(
__˝lu•lus
)

70 
	$a•rötf_l
(** 
__ª°ri˘
, 
loˇÀ_t
 __restrict, const * __restrict, ...)

71 
	`__¥ötÊike
(3, 4);

72 
	$va•rötf_l
(** 
__ª°ri˘
, 
loˇÀ_t
 __ª°ri˘, c⁄° * __ª°ri˘, 
va_li°
)

73 
	`__¥ötÊike
(3, 0);

76 
__END_DECLS


	@/usr/include/xlocale/_stdlib.h

24 #i‚de‡
_XLOCALE__STDLIB_H_


25 
	#_XLOCALE__STDLIB_H_


	)

27 
__BEGIN_DECLS


28 
©of_l
(c⁄° *, 
loˇÀ_t
);

29 
©oi_l
(c⁄° *, 
loˇÀ_t
);

30 
©ﬁ_l
(c⁄° *, 
loˇÀ_t
);

31 #i‡!
__DARWIN_NO_LONG_LONG


33 
©ﬁl_l
(c⁄° *, 
loˇÀ_t
);

35 
mbÀn_l
(c⁄° *, 
size_t
, 
loˇÀ_t
);

36 
size_t
 
mb°owcs_l
(
wch¨_t
 * 
__ª°ri˘
 , const * __restrict, size_t,

37 
loˇÀ_t
);

38 
mbtowc_l
(
wch¨_t
 * 
__ª°ri˘
, c⁄° * __ª°ri˘, 
size_t
,

39 
loˇÀ_t
);

40 
	$°πod_l
(c⁄° *, **, 
loˇÀ_t
Ë
	`__DARWIN_ALIAS
(
°πod_l
);

41 
	$°πof_l
(c⁄° *, **, 
loˇÀ_t
Ë
	`__DARWIN_ALIAS
(
°πof_l
);

42 
	`°πﬁ_l
(c⁄° *, **, , 
loˇÀ_t
);

44 
	`°πﬁd_l
(c⁄° *, **, 
loˇÀ_t
);

46 
	`°πﬁl_l
(c⁄° *, **, , 
loˇÀ_t
);

47 #i‡!
__DARWIN_NO_LONG_LONG


49 
	`°πoq_l
(c⁄° *, **, , 
loˇÀ_t
);

52 
	`°πoul_l
(c⁄° *, **, , 
loˇÀ_t
);

54 
	`°πouŒ_l
(c⁄° *, **, , 
loˇÀ_t
);

55 #i‡!
__DARWIN_NO_LONG_LONG


57 
	`°πouq_l
(c⁄° *, **, , 
loˇÀ_t
);

59 
size_t
 
	`wc°ombs_l
(* 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict, size_t,

60 
loˇÀ_t
);

61 
	`w˘omb_l
(*, 
wch¨_t
, 
loˇÀ_t
);

64 #i‡!
	`deföed
(
__˝lu•lus
Ë&& deföed(
__WCHAR_MAX__
) && __WCHAR_MAX__ <= 0xffffU

65 #¥agm®
GCC
 
pois⁄
 
mb°owcs_l
 
mbtowc_l
 
wc°ombs_l
 
w˘omb_l


67 
__END_DECLS


	@/usr/include/xlocale/_string.h

24 #i‚de‡
_XLOCALE__STRING_H_


25 
	#_XLOCALE__STRING_H_


	)

27 
__BEGIN_DECLS


28 
°rcﬁl_l
(c⁄° *, c⁄° *, 
loˇÀ_t
);

29 
size_t
 
°rx‰m_l
(*, c⁄° *, size_t, 
loˇÀ_t
);

30 
°rˇ£cmp_l
(c⁄° *, c⁄° *, 
loˇÀ_t
);

31 *
°rˇ£°r_l
(c⁄° *, c⁄° *, 
loˇÀ_t
);

32 
°∫ˇ£cmp_l
(c⁄° *, c⁄° *, 
size_t
, 
loˇÀ_t
);

33 
	g__END_DECLS


	@/usr/include/xlocale/_time.h

24 #i‚de‡
_XLOCALE__TIME_H_


25 
	#_XLOCALE__TIME_H_


	)

27 
__BEGIN_DECLS


28 
size_t
 
	$°r·ime_l
(* 
__ª°ri˘
, 
size_t
, const * __restrict,

29 c⁄° 
tm
 * 
__ª°ri˘
, 
loˇÀ_t
)

30 
	$__DARWIN_ALIAS
(
°r·ime_l
Ë
	`__°r·imñike
(3);

31 *
	$°Ωtime_l
(c⁄° * 
__ª°ri˘
, const * __restrict,

32 
tm
 * 
__ª°ri˘
, 
loˇÀ_t
)

33 
	$__DARWIN_ALIAS
(
°Ωtime_l
Ë
	`__°r·imñike
(2);

34 
__END_DECLS


	@/usr/include/zconf.h

8 #i‚de‡
ZCONF_H


9 
	#ZCONF_H


	)

17 #ifde‡
Z_PREFIX


20 
	#_di°_code
 
z__di°_code


	)

21 
	#_Àngth_code
 
z__Àngth_code


	)

22 
	#_å_Æign
 
z__å_Æign


	)

23 
	#_å_Êush_block
 
z__å_Êush_block


	)

24 
	#_å_öô
 
z__å_öô


	)

25 
	#_å_°‹ed_block
 
z__å_°‹ed_block


	)

26 
	#_å_èŒy
 
z__å_èŒy


	)

27 
	#adÀr32
 
z_adÀr32


	)

28 
	#adÀr32_comböe
 
z_adÀr32_comböe


	)

29 
	#adÀr32_comböe64
 
z_adÀr32_comböe64


	)

30 
	#com¥ess
 
z_com¥ess


	)

31 
	#com¥ess2
 
z_com¥ess2


	)

32 
	#com¥essBound
 
z_com¥essBound


	)

33 
	#¸c32
 
z_¸c32


	)

34 
	#¸c32_comböe
 
z_¸c32_comböe


	)

35 
	#¸c32_comböe64
 
z_¸c32_comböe64


	)

36 
	#deÊ©e
 
z_deÊ©e


	)

37 
	#deÊ©eBound
 
z_deÊ©eBound


	)

38 
	#deÊ©eC›y
 
z_deÊ©eC›y


	)

39 
	#deÊ©eEnd
 
z_deÊ©eEnd


	)

40 
	#deÊ©eInô2_
 
z_deÊ©eInô2_


	)

41 
	#deÊ©eInô_
 
z_deÊ©eInô_


	)

42 
	#deÊ©eP¨ams
 
z_deÊ©eP¨ams


	)

43 
	#deÊ©ePrime
 
z_deÊ©ePrime


	)

44 
	#deÊ©eRe£t
 
z_deÊ©eRe£t


	)

45 
	#deÊ©eSëDi˘i⁄¨y
 
z_deÊ©eSëDi˘i⁄¨y


	)

46 
	#deÊ©eSëHódî
 
z_deÊ©eSëHódî


	)

47 
	#deÊ©eTu√
 
z_deÊ©eTu√


	)

48 
	#deÊ©e_c›yright
 
z_deÊ©e_c›yright


	)

49 
	#gë_¸c_èbÀ
 
z_gë_¸c_èbÀ


	)

50 
	#gz_îr‹
 
z_gz_îr‹


	)

51 
	#gz_ötmax
 
z_gz_ötmax


	)

52 
	#gz_°rwöîr‹
 
z_gz_°rwöîr‹


	)

53 
	#gzbuf„r
 
z_gzbuf„r


	)

54 
	#gz˛óªº
 
z_gz˛óªº


	)

55 
	#gz˛o£
 
z_gz˛o£


	)

56 
	#gz˛o£_r
 
z_gz˛o£_r


	)

57 
	#gz˛o£_w
 
z_gz˛o£_w


	)

58 
	#gzdúe˘
 
z_gzdúe˘


	)

59 
	#gzd›í
 
z_gzd›í


	)

60 
	#gzeof
 
z_gzeof


	)

61 
	#gzîr‹
 
z_gzîr‹


	)

62 
	#gzÊush
 
z_gzÊush


	)

63 
	#gzgëc
 
z_gzgëc


	)

64 
	#gzgës
 
z_gzgës


	)

65 
	#gzoff£t
 
z_gzoff£t


	)

66 
	#gzoff£t64
 
z_gzoff£t64


	)

67 
	#gz›í
 
z_gz›í


	)

68 
	#gz›í64
 
z_gz›í64


	)

69 
	#gz¥ötf
 
z_gz¥ötf


	)

70 
	#gzputc
 
z_gzputc


	)

71 
	#gzputs
 
z_gzputs


	)

72 
	#gzªad
 
z_gzªad


	)

73 
	#gzªwöd
 
z_gzªwöd


	)

74 
	#gz£ek
 
z_gz£ek


	)

75 
	#gz£ek64
 
z_gz£ek64


	)

76 
	#gz£ç¨ams
 
z_gz£ç¨ams


	)

77 
	#gzãŒ
 
z_gzãŒ


	)

78 
	#gzãŒ64
 
z_gzãŒ64


	)

79 
	#gzungëc
 
z_gzungëc


	)

80 
	#gzwrôe
 
z_gzwrôe


	)

81 
	#öÊ©e
 
z_öÊ©e


	)

82 
	#öÊ©eBack
 
z_öÊ©eBack


	)

83 
	#öÊ©eBackEnd
 
z_öÊ©eBackEnd


	)

84 
	#öÊ©eBackInô_
 
z_öÊ©eBackInô_


	)

85 
	#öÊ©eC›y
 
z_öÊ©eC›y


	)

86 
	#öÊ©eEnd
 
z_öÊ©eEnd


	)

87 
	#öÊ©eGëHódî
 
z_öÊ©eGëHódî


	)

88 
	#öÊ©eInô2_
 
z_öÊ©eInô2_


	)

89 
	#öÊ©eInô_
 
z_öÊ©eInô_


	)

90 
	#öÊ©eM¨k
 
z_öÊ©eM¨k


	)

91 
	#öÊ©ePrime
 
z_öÊ©ePrime


	)

92 
	#öÊ©eRe£t
 
z_öÊ©eRe£t


	)

93 
	#öÊ©eRe£t2
 
z_öÊ©eRe£t2


	)

94 
	#öÊ©eSëDi˘i⁄¨y
 
z_öÊ©eSëDi˘i⁄¨y


	)

95 
	#öÊ©eSync
 
z_öÊ©eSync


	)

96 
	#öÊ©eSyncPoöt
 
z_öÊ©eSyncPoöt


	)

97 
	#öÊ©eUndîmöe
 
z_öÊ©eUndîmöe


	)

98 
	#öÊ©e_c›yright
 
z_öÊ©e_c›yright


	)

99 
	#öÊ©e_Á°
 
z_öÊ©e_Á°


	)

100 
	#öÊ©e_èbÀ
 
z_öÊ©e_èbÀ


	)

101 
	#uncom¥ess
 
z_uncom¥ess


	)

102 
	#zEº‹
 
z_zEº‹


	)

103 
	#zˇŒoc
 
z_zˇŒoc


	)

104 
	#zc‰ì
 
z_zc‰ì


	)

105 
	#zlibCompûeFœgs
 
z_zlibCompûeFœgs


	)

106 
	#zlibVîsi⁄
 
z_zlibVîsi⁄


	)

109 
	#Byã
 
z_Byã


	)

110 
	#Byãf
 
z_Byãf


	)

111 
	#Æloc_func
 
z_Æloc_func


	)

112 
	#ch¨f
 
z_ch¨f


	)

113 
	#‰ì_func
 
z_‰ì_func


	)

114 
	#gzFûe
 
z_gzFûe


	)

115 
	#gz_hódî
 
z_gz_hódî


	)

116 
	#gz_hódîp
 
z_gz_hódîp


	)

117 
	#ö_func
 
z_ö_func


	)

118 
	#ötf
 
z_ötf


	)

119 
	#out_func
 
z_out_func


	)

120 
	#uI¡
 
z_uI¡


	)

121 
	#uI¡f
 
z_uI¡f


	)

122 
	#uL⁄g
 
z_uL⁄g


	)

123 
	#uL⁄gf
 
z_uL⁄gf


	)

124 
	#voidp
 
z_voidp


	)

125 
	#voidpc
 
z_voidpc


	)

126 
	#voidpf
 
z_voidpf


	)

129 
	#gz_hódî_s
 
z_gz_hódî_s


	)

130 
	#öã∫Æ_°©e
 
z_öã∫Æ_°©e


	)

134 #i‡
deföed
(
__MSDOS__
Ë&& !deföed(
MSDOS
)

135 
	#MSDOS


	)

137 #i‡(
deföed
(
OS_2
Ë|| deföed(
__OS2__
)Ë&& !deföed(
OS2
)

138 
	#OS2


	)

140 #i‡
deföed
(
_WINDOWS
Ë&& !deföed(
WINDOWS
)

141 
	#WINDOWS


	)

143 #i‡
deföed
(
_WIN32
Ë|| deföed(
_WIN32_WCE
Ë|| deföed(
__WIN32__
)

144 #i‚de‡
WIN32


145 
	#WIN32


	)

148 #i‡(
deföed
(
MSDOS
Ë|| deföed(
OS2
Ë|| deföed(
WINDOWS
)Ë&& !deföed(
WIN32
)

149 #i‡!
deföed
(
__GNUC__
Ë&& !deföed(
__FLAT__
Ë&& !deföed(
__386__
)

150 #i‚de‡
SYS16BIT


151 
	#SYS16BIT


	)

160 #ifde‡
SYS16BIT


161 
	#MAXSEG_64K


	)

163 #ifde‡
MSDOS


164 
	#UNALIGNED_OK


	)

167 #ifde‡
__STDC_VERSION__


168 #i‚de‡
STDC


169 
	#STDC


	)

171 #i‡
__STDC_VERSION__
 >= 199901L

172 #i‚de‡
STDC99


173 
	#STDC99


	)

177 #i‡!
deföed
(
STDC
Ë&& (deföed(
__STDC__
Ë|| deföed(
__˝lu•lus
))

178 
	#STDC


	)

180 #i‡!
deföed
(
STDC
Ë&& (deföed(
__GNUC__
Ë|| deföed(
__BORLANDC__
))

181 
	#STDC


	)

183 #i‡!
deföed
(
STDC
Ë&& (deföed(
MSDOS
Ë|| deföed(
WINDOWS
Ë|| deföed(
WIN32
))

184 
	#STDC


	)

186 #i‡!
deföed
(
STDC
Ë&& (deföed(
OS2
Ë|| deföed(
__HOS_AIX__
))

187 
	#STDC


	)

190 #i‡
deföed
(
__OS400__
Ë&& !deföed(
STDC
)

191 
	#STDC


	)

194 #i‚de‡
STDC


196 c⁄°

	)

201 #i‡
deföed
(
__MWERKS__
)||deföed(
≠∂ec
)||deföed(
THINK_C
)||deföed(
__SC__
)

202 
	#NO_DUMMY_DECL


	)

206 #i‚de‡
MAX_MEM_LEVEL


207 #ifde‡
MAXSEG_64K


208 
	#MAX_MEM_LEVEL
 8

	)

210 
	#MAX_MEM_LEVEL
 9

	)

219 #i‚de‡
MAX_WBITS


220 
	#MAX_WBITS
 15

	)

238 #i‚de‡
OF


239 #ifde‡
STDC


240 
	#OF
(
¨gs
Ë
	)
args

242 
	#OF
(
¨gs
Ë()

	)

252 #ifde‡
SYS16BIT


253 #i‡
deföed
(
M_I86SM
Ë|| deföed(
M_I86MM
)

255 
	#SMALL_MEDIUM


	)

256 #ifde‡
_MSC_VER


257 
	#FAR
 
_Ár


	)

259 
	#FAR
 
Ár


	)

262 #i‡(
deföed
(
__SMALL__
Ë|| deföed(
__MEDIUM__
))

264 
	#SMALL_MEDIUM


	)

265 #ifde‡
__BORLANDC__


266 
	#FAR
 
_Ár


	)

268 
	#FAR
 
Ár


	)

273 #i‡
deföed
(
WINDOWS
Ë|| deföed(
WIN32
)

277 #ifde‡
ZLIB_DLL


278 #i‡
deföed
(
WIN32
Ë&& (!deföed(
__BORLANDC__
) || (__BORLANDC__ >= 0x500))

279 #ifde‡
ZLIB_INTERNAL


280 
	#ZEXTERN
 
	`__de˛•ec
(
dŒexp‹t
)

	)

282 
	#ZEXTERN
 
	`__de˛•ec
(
dŒimp‹t
)

	)

290 #ifde‡
ZLIB_WINAPI


291 #ifde‡
FAR


292 #unde‡
FAR


294 
	~<wödows.h
>

297 
	#ZEXPORT
 
WINAPI


	)

298 #ifde‡
WIN32


299 
	#ZEXPORTVA
 
WINAPIV


	)

301 
	#ZEXPORTVA
 
FAR
 
CDECL


	)

306 #i‡
deföed
 (
__BEOS__
)

307 #ifde‡
ZLIB_DLL


308 #ifde‡
ZLIB_INTERNAL


309 
	#ZEXPORT
 
	`__de˛•ec
(
dŒexp‹t
)

	)

310 
	#ZEXPORTVA
 
	`__de˛•ec
(
dŒexp‹t
)

	)

312 
	#ZEXPORT
 
	`__de˛•ec
(
dŒimp‹t
)

	)

313 
	#ZEXPORTVA
 
	`__de˛•ec
(
dŒimp‹t
)

	)

318 #i‚de‡
ZEXTERN


319 
	#ZEXTERN
 

	)

321 #i‚de‡
ZEXPORT


322 
	#ZEXPORT


	)

324 #i‚de‡
ZEXPORTVA


325 
	#ZEXPORTVA


	)

328 #i‚de‡
FAR


329 
	#FAR


	)

332 #i‡!
deföed
(
__MACTYPES__
)

333 
	tByã
;

335 
	tuI¡
;

336 
	tuL⁄g
;

338 #ifde‡
SMALL_MEDIUM


340 
	#Byãf
 
Byã
 
FAR


	)

342 
Byã
 
	tFAR
 
	tByãf
;

344 
	tFAR
 
	tch¨f
;

345 
	tFAR
 
	tötf
;

346 
uI¡
 
	tFAR
 
	tuI¡f
;

347 
uL⁄g
 
	tFAR
 
	tuL⁄gf
;

349 #ifde‡
STDC


350 c⁄° *
	tvoidpc
;

351 
	tFAR
 *
	tvoidpf
;

352 *
	tvoidp
;

354 
Byã
 c⁄° *
	tvoidpc
;

355 
Byã
 
	tFAR
 *
	tvoidpf
;

356 
Byã
 *
	tvoidp
;

359 #i‡
deföed
(
__APPLE__
)

361 
	#Z_HAVE_UNISTD_H


	)

365 #ifde‡
STDC


366 
	~<sys/ty≥s.h
>

375 #i‡-
_LARGEFILE64_SOURCE
 - -1 == 1

376 #unde‡
_LARGEFILE64_SOURCE


379 #i‡
deföed
(
Z_HAVE_UNISTD_H
Ë|| deföed(
_LARGEFILE64_SOURCE
)

380 
	~<uni°d.h
>

381 #ifde‡
VMS


382 
	~<unixio.h
>

384 #i‡!
deföed
(
z_off_t
Ë&& !deföed(
__APPLE__
)

385 
	#z_off_t
 
off_t


	)

389 #i‚de‡
SEEK_SET


390 
	#SEEK_SET
 0

	)

391 
	#SEEK_CUR
 1

	)

392 
	#SEEK_END
 2

	)

395 #i‚de‡
z_off_t


396 
	#z_off_t
 

	)

399 #i‡
deföed
(
_LARGEFILE64_SOURCE
Ë&& 
_LFS64_LARGEFILE
-0

400 
	#z_off64_t
 
off64_t


	)

401 #ñi‡
deföed
(
__APPLE__
)

402 
	#z_off64_t
 
off_t


	)

404 
	#z_off64_t
 
z_off_t


	)

407 #i‡
deföed
(
__OS400__
)

408 
	#NO_v¢¥ötf


	)

411 #i‡
deföed
(
__MVS__
)

412 
	#NO_v¢¥ötf


	)

416 #i‡
deföed
(
__MVS__
)

417 #¥agm®
m≠
(
deÊ©eInô_
,"DEIN")

418 #¥agm®
m≠
(
deÊ©eInô2_
,"DEIN2")

419 #¥agm®
m≠
(
deÊ©eEnd
,"DEEND")

420 #¥agm®
m≠
(
deÊ©eBound
,"DEBND")

421 #¥agm®
m≠
(
öÊ©eInô_
,"ININ")

422 #¥agm®
m≠
(
öÊ©eInô2_
,"ININ2")

423 #¥agm®
m≠
(
öÊ©eEnd
,"INEND")

424 #¥agm®
m≠
(
öÊ©eSync
,"INSY")

425 #¥agm®
m≠
(
öÊ©eSëDi˘i⁄¨y
,"INSEDI")

426 #¥agm®
m≠
(
com¥essBound
,"CMBND")

427 #¥agm®
m≠
(
öÊ©e_èbÀ
,"INTABL")

428 #¥agm®
m≠
(
öÊ©e_Á°
,"INFA")

429 #¥agm®
m≠
(
öÊ©e_c›yright
,"INCOPY")

	@/usr/include/AvailabilityInternal.h

30 #i‚de‡
__AVAILABILITY_INTERNAL__


31 
	#__AVAILABILITY_INTERNAL__


	)

35 #i‚de‡
__IPHONE_OS_VERSION_MIN_REQUIRED


36 #ifde‡
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__


38 
	#__IPHONE_OS_VERSION_MIN_REQUIRED
 
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__


	)

42 
	#__AVAILABILITY_INTERNAL_DEPRECATED
 
	`__©åibuã__
((
dïªˇãd
))

	)

43 #ifde‡
__has_„©uª


44 #i‡
__has_„©uª
(
©åibuã_dïªˇãd_wôh_mesßge
)

45 
	#__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(
_msg
Ë
	`__©åibuã__
((
	`dïªˇãd
(_msg)))

	)

47 
	#__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(
_msg
Ë
	`__©åibuã__
((
dïªˇãd
))

	)

49 #ñi‡
deföed
(
__GNUC__
Ë&& ((__GNUC__ >5Ë|| ((__GNUC__ =4Ë&& (
__GNUC_MINOR__
 >= 5)))

50 
	#__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(
_msg
Ë
	`__©åibuã__
((
	`dïªˇãd
(_msg)))

	)

52 
	#__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(
_msg
Ë
	`__©åibuã__
((
dïªˇãd
))

	)

54 
	#__AVAILABILITY_INTERNAL_UNAVAILABLE
 
	`__©åibuã__
((
u«vaûabÀ
))

	)

55 
	#__AVAILABILITY_INTERNAL_WEAK_IMPORT
 
	`__©åibuã__
((
wók_imp‹t
))

	)

56 
	#__AVAILABILITY_INTERNAL_REGULAR


	)

58 #ifde‡
__IPHONE_OS_VERSION_MIN_REQUIRED


60 #i‚de‡
__IPHONE_OS_VERSION_MAX_ALLOWED


61 
	#__IPHONE_OS_VERSION_MAX_ALLOWED
 
__IPHONE_7_0


	)

64 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_0


65 #unde‡
__IPHONE_OS_VERSION_MIN_REQUIRED


66 
	#__IPHONE_OS_VERSION_MIN_REQUIRED
 
__IPHONE_2_0


	)

69 #i‡
deföed
(
__has_©åibuã
Ë&& deföed(
__has_„©uª
)

70 #i‡
__has_©åibuã
(
avaûabûôy
)

72 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0)))

	)

73 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=2.0)))

	)

74 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

75 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=2.0,
mesßge
=_msg)))

	)

77 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=2.0)))

	)

79 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=2.1)))

	)

80 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

81 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=2.1,
mesßge
=_msg)))

	)

83 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=2.1)))

	)

85 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=2.2)))

	)

86 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

87 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=2.2,
mesßge
=_msg)))

	)

89 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=2.2)))

	)

91 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=3.0)))

	)

92 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

93 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=3.0,
mesßge
=_msg)))

	)

95 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=3.0)))

	)

97 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=3.1)))

	)

98 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

99 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=3.1,
mesßge
=_msg)))

	)

101 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=3.1)))

	)

103 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=3.2)))

	)

104 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

105 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=3.2,
mesßge
=_msg)))

	)

107 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=3.2)))

	)

109 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=4.0)))

	)

110 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

111 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=4.0,
mesßge
=_msg)))

	)

113 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=4.0)))

	)

115 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=4.1)))

	)

116 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

117 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=4.1,
mesßge
=_msg)))

	)

119 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=4.1)))

	)

121 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=4.2)))

	)

122 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

123 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=4.2,
mesßge
=_msg)))

	)

125 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=4.2)))

	)

127 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=4.3)))

	)

128 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

129 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=4.3,
mesßge
=_msg)))

	)

131 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=4.3)))

	)

133 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=5.0)))

	)

134 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

135 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=5.0,
mesßge
=_msg)))

	)

137 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=5.0)))

	)

139 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=5.1)))

	)

140 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

141 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=5.1,
mesßge
=_msg)))

	)

143 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=5.1)))

	)

145 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=6.0)))

	)

146 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

147 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=6.0,
mesßge
=_msg)))

	)

149 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=6.0)))

	)

151 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=6.1)))

	)

152 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

153 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=6.1,
mesßge
=_msg)))

	)

155 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=6.1)))

	)

157 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=7.0)))

	)

158 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

159 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=7.0,
mesßge
=_msg)))

	)

161 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0,
dïªˇãd
=7.0)))

	)

163 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0)))

	)

164 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.0)))

	)

165 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1)))

	)

166 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=2.1)))

	)

167 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

168 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=2.1,
mesßge
=_msg)))

	)

170 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=2.1)))

	)

172 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=2.2)))

	)

173 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

174 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=2.2,
mesßge
=_msg)))

	)

176 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=2.2)))

	)

178 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=3.0)))

	)

179 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

180 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=3.0,
mesßge
=_msg)))

	)

182 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=3.0)))

	)

184 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=3.1)))

	)

185 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

186 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=3.1,
mesßge
=_msg)))

	)

188 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=3.1)))

	)

190 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=3.2)))

	)

191 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

192 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=3.2,
mesßge
=_msg)))

	)

194 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=3.2)))

	)

196 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=4.0)))

	)

197 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

198 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=4.0,
mesßge
=_msg)))

	)

200 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=4.0)))

	)

202 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=4.1)))

	)

203 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

204 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=4.1,
mesßge
=_msg)))

	)

206 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=4.1)))

	)

208 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=4.2)))

	)

209 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

210 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=4.2,
mesßge
=_msg)))

	)

212 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=4.2)))

	)

214 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=4.3)))

	)

215 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

216 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=4.3,
mesßge
=_msg)))

	)

218 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=4.3)))

	)

220 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=5.0)))

	)

221 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

222 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=5.0,
mesßge
=_msg)))

	)

224 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=5.0)))

	)

226 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=5.1)))

	)

227 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

228 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=5.1,
mesßge
=_msg)))

	)

230 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=5.1)))

	)

232 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=6.0)))

	)

233 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

234 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=6.0,
mesßge
=_msg)))

	)

236 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=6.0)))

	)

238 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=6.1)))

	)

239 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

240 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=6.1,
mesßge
=_msg)))

	)

242 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=6.1)))

	)

244 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=7.0)))

	)

245 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

246 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=7.0,
mesßge
=_msg)))

	)

248 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1,
dïªˇãd
=7.0)))

	)

250 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1)))

	)

251 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.1)))

	)

252 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2)))

	)

253 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_2_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=2.2)))

	)

254 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

255 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_2_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=2.2,
mesßge
=_msg)))

	)

257 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_2_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=2.2)))

	)

259 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=3.0)))

	)

260 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

261 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=3.0,
mesßge
=_msg)))

	)

263 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=3.0)))

	)

265 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=3.1)))

	)

266 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

267 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=3.1,
mesßge
=_msg)))

	)

269 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=3.1)))

	)

271 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=3.2)))

	)

272 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

273 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=3.2,
mesßge
=_msg)))

	)

275 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=3.2)))

	)

277 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=4.0)))

	)

278 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

279 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=4.0,
mesßge
=_msg)))

	)

281 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=4.0)))

	)

283 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=4.1)))

	)

284 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

285 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=4.1,
mesßge
=_msg)))

	)

287 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=4.1)))

	)

289 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=4.2)))

	)

290 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

291 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=4.2,
mesßge
=_msg)))

	)

293 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=4.2)))

	)

295 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=4.3)))

	)

296 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

297 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=4.3,
mesßge
=_msg)))

	)

299 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=4.3)))

	)

301 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=5.0)))

	)

302 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

303 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=5.0,
mesßge
=_msg)))

	)

305 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=5.0)))

	)

307 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=5.1)))

	)

308 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

309 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=5.1,
mesßge
=_msg)))

	)

311 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=5.1)))

	)

313 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=6.0)))

	)

314 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

315 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=6.0,
mesßge
=_msg)))

	)

317 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=6.0)))

	)

319 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=6.1)))

	)

320 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

321 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=6.1,
mesßge
=_msg)))

	)

323 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=6.1)))

	)

325 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=7.0)))

	)

326 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

327 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=7.0,
mesßge
=_msg)))

	)

329 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2,
dïªˇãd
=7.0)))

	)

331 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2)))

	)

332 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=2.2)))

	)

333 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0)))

	)

334 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=3.0)))

	)

335 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

336 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=3.0,
mesßge
=_msg)))

	)

338 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=3.0)))

	)

340 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=3.1)))

	)

341 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

342 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=3.1,
mesßge
=_msg)))

	)

344 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=3.1)))

	)

346 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=3.2)))

	)

347 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

348 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=3.2,
mesßge
=_msg)))

	)

350 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=3.2)))

	)

352 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=4.0)))

	)

353 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

354 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=4.0,
mesßge
=_msg)))

	)

356 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=4.0)))

	)

358 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=4.1)))

	)

359 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

360 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=4.1,
mesßge
=_msg)))

	)

362 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=4.1)))

	)

364 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=4.2)))

	)

365 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

366 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=4.2,
mesßge
=_msg)))

	)

368 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=4.2)))

	)

370 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=4.3)))

	)

371 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

372 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=4.3,
mesßge
=_msg)))

	)

374 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=4.3)))

	)

376 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=5.0)))

	)

377 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

378 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=5.0,
mesßge
=_msg)))

	)

380 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=5.0)))

	)

382 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=5.1)))

	)

383 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

384 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=5.1,
mesßge
=_msg)))

	)

386 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=5.1)))

	)

388 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=6.0)))

	)

389 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

390 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=6.0,
mesßge
=_msg)))

	)

392 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=6.0)))

	)

394 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=6.1)))

	)

395 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

396 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=6.1,
mesßge
=_msg)))

	)

398 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=6.1)))

	)

400 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=7.0)))

	)

401 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

402 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=7.0,
mesßge
=_msg)))

	)

404 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0,
dïªˇãd
=7.0)))

	)

406 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0)))

	)

407 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.0)))

	)

408 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1)))

	)

409 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=3.1)))

	)

410 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

411 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=3.1,
mesßge
=_msg)))

	)

413 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=3.1)))

	)

415 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=3.2)))

	)

416 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

417 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=3.2,
mesßge
=_msg)))

	)

419 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=3.2)))

	)

421 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=4.0)))

	)

422 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

423 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=4.0,
mesßge
=_msg)))

	)

425 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=4.0)))

	)

427 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=4.1)))

	)

428 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

429 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=4.1,
mesßge
=_msg)))

	)

431 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=4.1)))

	)

433 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=4.2)))

	)

434 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

435 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=4.2,
mesßge
=_msg)))

	)

437 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=4.2)))

	)

439 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=4.3)))

	)

440 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

441 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=4.3,
mesßge
=_msg)))

	)

443 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=4.3)))

	)

445 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=5.0)))

	)

446 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

447 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=5.0,
mesßge
=_msg)))

	)

449 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=5.0)))

	)

451 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=5.1)))

	)

452 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

453 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=5.1,
mesßge
=_msg)))

	)

455 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=5.1)))

	)

457 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=6.0)))

	)

458 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

459 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=6.0,
mesßge
=_msg)))

	)

461 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=6.0)))

	)

463 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=6.1)))

	)

464 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

465 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=6.1,
mesßge
=_msg)))

	)

467 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=6.1)))

	)

469 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=7.0)))

	)

470 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

471 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=7.0,
mesßge
=_msg)))

	)

473 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1,
dïªˇãd
=7.0)))

	)

475 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1)))

	)

476 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.1)))

	)

477 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2)))

	)

478 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=3.2)))

	)

479 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

480 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=3.2,
mesßge
=_msg)))

	)

482 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=3.2)))

	)

484 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=4.0)))

	)

485 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

486 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=4.0,
mesßge
=_msg)))

	)

488 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=4.0)))

	)

490 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=4.1)))

	)

491 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

492 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=4.1,
mesßge
=_msg)))

	)

494 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=4.1)))

	)

496 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=4.2)))

	)

497 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

498 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=4.2,
mesßge
=_msg)))

	)

500 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=4.2)))

	)

502 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=4.3)))

	)

503 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

504 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=4.3,
mesßge
=_msg)))

	)

506 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=4.3)))

	)

508 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=5.0)))

	)

509 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

510 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=5.0,
mesßge
=_msg)))

	)

512 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=5.0)))

	)

514 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=5.1)))

	)

515 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

516 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=5.1,
mesßge
=_msg)))

	)

518 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=5.1)))

	)

520 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=6.0)))

	)

521 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

522 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=6.0,
mesßge
=_msg)))

	)

524 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=6.0)))

	)

526 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=6.1)))

	)

527 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

528 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=6.1,
mesßge
=_msg)))

	)

530 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=6.1)))

	)

532 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=7.0)))

	)

533 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

534 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=7.0,
mesßge
=_msg)))

	)

536 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2,
dïªˇãd
=7.0)))

	)

538 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2)))

	)

539 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=3.2)))

	)

540 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0)))

	)

541 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=4.0)))

	)

542 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

543 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=4.0,
mesßge
=_msg)))

	)

545 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=4.0)))

	)

547 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=4.1)))

	)

548 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

549 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=4.1,
mesßge
=_msg)))

	)

551 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=4.1)))

	)

553 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=4.2)))

	)

554 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

555 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=4.2,
mesßge
=_msg)))

	)

557 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=4.2)))

	)

559 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=4.3)))

	)

560 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

561 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=4.3,
mesßge
=_msg)))

	)

563 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=4.3)))

	)

565 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=5.0)))

	)

566 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

567 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=5.0,
mesßge
=_msg)))

	)

569 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=5.0)))

	)

571 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=5.1)))

	)

572 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

573 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=5.1,
mesßge
=_msg)))

	)

575 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=5.1)))

	)

577 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=6.0)))

	)

578 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

579 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=6.0,
mesßge
=_msg)))

	)

581 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=6.0)))

	)

583 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=6.1)))

	)

584 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

585 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=6.1,
mesßge
=_msg)))

	)

587 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=6.1)))

	)

589 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=7.0)))

	)

590 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

591 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=7.0,
mesßge
=_msg)))

	)

593 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0,
dïªˇãd
=7.0)))

	)

595 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0)))

	)

596 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.0)))

	)

597 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1)))

	)

598 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=4.1)))

	)

599 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

600 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=4.1,
mesßge
=_msg)))

	)

602 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=4.1)))

	)

604 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=4.2)))

	)

605 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

606 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=4.2,
mesßge
=_msg)))

	)

608 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=4.2)))

	)

610 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=4.3)))

	)

611 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

612 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=4.3,
mesßge
=_msg)))

	)

614 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=4.3)))

	)

616 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=5.0)))

	)

617 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

618 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=5.0,
mesßge
=_msg)))

	)

620 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=5.0)))

	)

622 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=5.1)))

	)

623 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

624 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=5.1,
mesßge
=_msg)))

	)

626 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=5.1)))

	)

628 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=6.0)))

	)

629 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

630 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=6.0,
mesßge
=_msg)))

	)

632 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=6.0)))

	)

634 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=6.1)))

	)

635 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

636 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=6.1,
mesßge
=_msg)))

	)

638 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=6.1)))

	)

640 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=7.0)))

	)

641 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

642 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=7.0,
mesßge
=_msg)))

	)

644 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1,
dïªˇãd
=7.0)))

	)

646 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1)))

	)

647 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.1)))

	)

648 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2)))

	)

649 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=4.2)))

	)

650 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

651 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=4.2,
mesßge
=_msg)))

	)

653 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=4.2)))

	)

655 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=4.3)))

	)

656 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

657 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=4.3,
mesßge
=_msg)))

	)

659 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=4.3)))

	)

661 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=5.0)))

	)

662 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

663 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=5.0,
mesßge
=_msg)))

	)

665 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=5.0)))

	)

667 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=5.1)))

	)

668 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

669 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=5.1,
mesßge
=_msg)))

	)

671 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=5.1)))

	)

673 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=6.0)))

	)

674 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

675 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=6.0,
mesßge
=_msg)))

	)

677 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=6.0)))

	)

679 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=6.1)))

	)

680 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

681 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=6.1,
mesßge
=_msg)))

	)

683 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=6.1)))

	)

685 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=7.0)))

	)

686 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

687 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=7.0,
mesßge
=_msg)))

	)

689 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2,
dïªˇãd
=7.0)))

	)

691 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2)))

	)

692 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.2)))

	)

693 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3)))

	)

694 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3,
dïªˇãd
=4.3)))

	)

695 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

696 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3,
dïªˇãd
=4.3,
mesßge
=_msg)))

	)

698 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3,
dïªˇãd
=4.3)))

	)

700 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3,
dïªˇãd
=5.0)))

	)

701 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

702 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3,
dïªˇãd
=5.0,
mesßge
=_msg)))

	)

704 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3,
dïªˇãd
=5.0)))

	)

706 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3,
dïªˇãd
=5.1)))

	)

707 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

708 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3,
dïªˇãd
=5.1,
mesßge
=_msg)))

	)

710 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3,
dïªˇãd
=5.1)))

	)

712 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3,
dïªˇãd
=6.0)))

	)

713 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

714 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3,
dïªˇãd
=6.0,
mesßge
=_msg)))

	)

716 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3,
dïªˇãd
=6.0)))

	)

718 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3,
dïªˇãd
=6.1)))

	)

719 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

720 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3,
dïªˇãd
=6.1,
mesßge
=_msg)))

	)

722 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3,
dïªˇãd
=6.1)))

	)

724 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3,
dïªˇãd
=7.0)))

	)

725 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

726 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3,
dïªˇãd
=7.0,
mesßge
=_msg)))

	)

728 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3,
dïªˇãd
=7.0)))

	)

730 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3)))

	)

731 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=4.3)))

	)

732 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.0)))

	)

733 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.0,
dïªˇãd
=5.0)))

	)

734 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

735 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.0,
dïªˇãd
=5.0,
mesßge
=_msg)))

	)

737 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.0,
dïªˇãd
=5.0)))

	)

739 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.0,
dïªˇãd
=5.1)))

	)

740 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

741 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.0,
dïªˇãd
=5.1,
mesßge
=_msg)))

	)

743 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.0,
dïªˇãd
=5.1)))

	)

745 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.0,
dïªˇãd
=6.0)))

	)

746 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

747 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.0,
dïªˇãd
=6.0,
mesßge
=_msg)))

	)

749 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.0,
dïªˇãd
=6.0)))

	)

751 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.0,
dïªˇãd
=6.1)))

	)

752 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

753 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.0,
dïªˇãd
=6.1,
mesßge
=_msg)))

	)

755 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.0,
dïªˇãd
=6.1)))

	)

757 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.0,
dïªˇãd
=7.0)))

	)

758 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

759 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.0,
dïªˇãd
=7.0,
mesßge
=_msg)))

	)

761 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.0,
dïªˇãd
=7.0)))

	)

763 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.0)))

	)

764 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.0)))

	)

765 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.1)))

	)

766 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.1,
dïªˇãd
=5.1)))

	)

767 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

768 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.1,
dïªˇãd
=5.1,
mesßge
=_msg)))

	)

770 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.1,
dïªˇãd
=5.1)))

	)

772 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.1,
dïªˇãd
=6.0)))

	)

773 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

774 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.1,
dïªˇãd
=6.0,
mesßge
=_msg)))

	)

776 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.1,
dïªˇãd
=6.0)))

	)

778 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.1,
dïªˇãd
=6.1)))

	)

779 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

780 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.1,
dïªˇãd
=6.1,
mesßge
=_msg)))

	)

782 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.1,
dïªˇãd
=6.1)))

	)

784 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.1,
dïªˇãd
=7.0)))

	)

785 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

786 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.1,
dïªˇãd
=7.0,
mesßge
=_msg)))

	)

788 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.1,
dïªˇãd
=7.0)))

	)

790 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.1)))

	)

791 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=5.1)))

	)

792 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.0)))

	)

793 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.0,
dïªˇãd
=6.0)))

	)

794 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

795 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.0,
dïªˇãd
=6.0,
mesßge
=_msg)))

	)

797 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.0,
dïªˇãd
=6.0)))

	)

799 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.0,
dïªˇãd
=6.1)))

	)

800 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

801 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.0,
dïªˇãd
=6.1,
mesßge
=_msg)))

	)

803 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.0,
dïªˇãd
=6.1)))

	)

805 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.0,
dïªˇãd
=7.0)))

	)

806 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

807 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.0,
dïªˇãd
=7.0,
mesßge
=_msg)))

	)

809 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.0,
dïªˇãd
=7.0)))

	)

811 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.0)))

	)

812 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.0)))

	)

813 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.1)))

	)

814 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.1,
dïªˇãd
=6.1)))

	)

815 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

816 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.1,
dïªˇãd
=6.1,
mesßge
=_msg)))

	)

818 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.1,
dïªˇãd
=6.1)))

	)

820 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.1,
dïªˇãd
=7.0)))

	)

821 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

822 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.1,
dïªˇãd
=7.0,
mesßge
=_msg)))

	)

824 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.1,
dïªˇãd
=7.0)))

	)

826 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.1)))

	)

827 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=6.1)))

	)

828 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=7.0)))

	)

829 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=7.0,
dïªˇãd
=7.0)))

	)

830 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

831 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=7.0,
dïªˇãd
=7.0,
mesßge
=_msg)))

	)

833 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=7.0,
dïªˇãd
=7.0)))

	)

835 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=7.0)))

	)

836 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
öåodu˚d
=7.0)))

	)

837 
	#__AVAILABILITY_INTERNAL__IPHONE_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
u«vaûabÀ
)))

	)

838 
	#__AVAILABILITY_INTERNAL__IPHONE_NA_DEP__IPHONE_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
u«vaûabÀ
)))

	)

839 
	#__AVAILABILITY_INTERNAL__IPHONE_NA_DEP__IPHONE_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
ios
,
u«vaûabÀ
)))

	)

843 #i‚de‡
__AVAILABILITY_INTERNAL__IPHONE_2_0


845 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_2_0


846 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

847 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_0


848 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

850 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

852 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_2_0


	)

853 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_0


	)

854 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

855 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

857 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_2_1


858 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

859 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


860 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

862 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

864 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

865 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

866 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


867 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

868 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

869 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

870 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

872 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

873 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

874 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

875 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

878 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_2_2


879 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

880 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


881 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

883 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

885 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

886 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

887 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


888 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

889 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

890 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

891 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

892 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

893 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_2_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

894 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


895 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

896 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

897 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

898 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

899 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

900 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_2_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

902 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

903 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_2_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

904 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

905 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_2_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

906 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_2_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

907 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_2_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

910 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_3_0


911 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

912 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


913 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

915 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

917 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

918 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

919 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


920 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

921 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

922 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

923 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

924 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

925 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

926 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

927 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

928 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


929 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

930 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

931 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

932 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

933 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

934 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

935 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

936 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

937 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


938 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

939 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

940 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

941 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

942 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

943 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

944 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

945 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

947 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

948 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

949 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

950 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

951 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

952 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

953 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

954 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

957 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_3_1


958 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

959 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_1


960 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

962 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

964 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

965 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

966 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


967 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

968 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

969 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

970 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

971 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

972 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

973 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

974 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

975 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

976 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

977 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


978 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

979 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

980 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

981 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

982 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

983 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

984 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

985 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

986 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

987 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

988 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


989 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

990 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

991 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

992 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

993 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

994 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

995 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

996 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

997 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

998 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

999 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_1


1000 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1001 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1002 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1003 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1004 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1005 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1006 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1007 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1008 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1009 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1011 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1012 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1013 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1014 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1015 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1016 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1017 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1018 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1019 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1020 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1023 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_3_2


1024 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

1025 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_2


1026 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

1028 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1030 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1031 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1032 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


1033 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1034 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1035 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1036 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1037 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1038 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1039 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1040 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1041 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1042 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1043 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1044 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1045 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


1046 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1047 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1048 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1049 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1050 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1051 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1052 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1053 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1054 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1055 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1056 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1057 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1058 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


1059 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1060 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1061 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1062 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1063 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1064 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1065 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1066 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1067 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1068 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1069 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1070 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1071 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_1


1072 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1073 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1074 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1075 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1076 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1077 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1078 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1079 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1080 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1081 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1082 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1083 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1084 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_2


1085 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1086 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1087 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1088 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1089 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1090 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1091 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1092 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1093 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1094 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1095 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1096 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1098 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1099 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_3_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1100 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1101 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_3_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1102 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1103 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_3_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1104 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1105 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_3_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1106 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1107 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_3_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1108 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1109 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_3_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1112 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_4_0


1113 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

1114 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_0


1115 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

1117 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1119 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1120 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1121 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


1122 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1123 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1124 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1125 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1126 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1127 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1128 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1129 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1130 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1131 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1132 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1133 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1134 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1135 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1136 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


1137 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1138 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1139 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1140 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1141 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1142 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1143 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1144 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1145 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1146 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1147 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1148 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1149 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1150 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1151 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


1152 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1153 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1154 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1155 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1156 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1157 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1158 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1159 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1160 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1161 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1162 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1163 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1164 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1165 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1166 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_1


1167 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1168 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1169 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1170 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1171 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1172 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1173 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1174 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1175 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1176 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1177 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1178 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1179 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1180 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1181 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_2


1182 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1183 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1184 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1185 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1186 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1187 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1188 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1189 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1190 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1191 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1192 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1193 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1194 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1195 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1196 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_0


1197 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1198 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1199 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1200 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1201 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1202 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1203 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1204 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1205 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1206 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1207 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1208 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1209 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1210 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1212 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1213 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1214 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1215 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1216 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1217 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1218 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1219 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1220 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1221 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1222 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1223 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1224 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1225 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1228 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_4_1


1229 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

1230 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_1


1231 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

1233 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1235 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1236 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1237 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


1238 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1239 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1240 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1241 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1242 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1243 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1244 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1245 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1246 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1247 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1248 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1249 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1250 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1251 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1252 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1253 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1254 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


1255 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1256 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1257 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1258 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1259 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1260 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1261 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1262 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1263 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1264 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1265 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1266 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1267 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1268 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1269 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1270 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1271 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


1272 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1273 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1274 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1275 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1276 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1277 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1278 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1279 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1280 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1281 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1282 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1283 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1284 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1285 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1286 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1287 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1288 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_1


1289 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1290 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1291 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1292 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1293 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1294 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1295 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1296 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1297 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1298 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1299 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1300 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1301 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1302 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1303 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1304 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1305 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_2


1306 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1307 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1308 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1309 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1310 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1311 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1312 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1313 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1314 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1315 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1316 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1317 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1318 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1319 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1320 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1321 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1322 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_0


1323 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1324 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1325 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1326 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1327 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1328 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1329 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1330 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1331 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1332 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1333 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1334 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1335 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1336 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1337 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1338 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1339 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_1


1340 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1341 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1342 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1343 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1344 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1345 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1346 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1347 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1348 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1349 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1350 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1351 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1352 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1353 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1354 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1355 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1357 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1358 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1359 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1360 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1361 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1362 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1363 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1364 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1365 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1366 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1367 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1368 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1369 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1370 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1371 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1372 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1375 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_4_2


1376 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

1377 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_2


1378 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

1380 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1382 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

1383 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

1384 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


1385 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1386 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1387 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1388 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1389 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1390 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1391 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1392 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1393 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1394 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1395 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1396 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1397 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1398 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1399 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1400 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1401 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1402 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1403 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


1404 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1405 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1406 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1407 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1408 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1409 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1410 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1411 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1412 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1413 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1414 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1415 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1416 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1417 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1418 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1419 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1420 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1421 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1422 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


1423 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1424 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1425 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1426 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1427 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1428 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1429 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1430 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1431 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1432 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1433 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1434 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1435 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1436 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1437 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1438 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1439 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1440 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1441 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_1


1442 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1443 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1444 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1445 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1446 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1447 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1448 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1449 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1450 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1451 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1452 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1453 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1454 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1455 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1456 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1457 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1458 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1459 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1460 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_2


1461 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1462 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1463 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1464 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1465 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1466 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1467 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1468 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1469 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1470 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1471 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1472 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1473 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1474 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1475 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1476 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1477 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1478 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1479 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_0


1480 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1481 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1482 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1483 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1484 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1485 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1486 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1487 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1488 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1489 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1490 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1491 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1492 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1493 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1494 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1495 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1496 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1497 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1498 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_1


1499 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1500 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1501 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1502 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1503 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1504 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1505 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1506 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1507 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1508 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1509 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1510 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1511 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1512 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1513 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1514 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1515 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1516 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1517 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_2


1518 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1519 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1520 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1521 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1522 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1523 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1524 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1525 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1526 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1527 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1528 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1529 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1530 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1531 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1532 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1533 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1534 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

1535 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

1537 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1538 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1539 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1540 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1541 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1542 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1543 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1544 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1545 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1546 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1547 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1548 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1549 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1550 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1551 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1552 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1553 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1554 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1557 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_4_3


1558 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

1559 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_3


1560 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

1562 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1564 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

1565 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

1566 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


1567 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1568 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1569 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1570 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1571 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1572 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1573 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1574 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1575 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1576 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1577 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1578 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1579 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1580 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1581 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1582 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1583 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1584 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1585 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1586 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1587 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


1588 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1589 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1590 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1591 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1592 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1593 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1594 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1595 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1596 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1597 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1598 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1599 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1600 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1601 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1602 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1603 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1604 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1605 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1606 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1607 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1608 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


1609 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1610 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1611 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1612 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1613 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1614 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1615 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1616 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1617 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1618 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1619 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1620 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1621 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1622 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1623 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1624 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1625 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1626 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1627 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1628 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1629 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_1


1630 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1631 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1632 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1633 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1634 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1635 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1636 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1637 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1638 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1639 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1640 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1641 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1642 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1643 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1644 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1645 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1646 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1647 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1648 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1649 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1650 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_2


1651 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1652 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1653 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1654 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1655 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1656 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1657 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1658 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1659 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1660 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1661 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1662 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1663 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1664 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1665 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1666 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1667 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1668 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1669 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1670 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1671 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_0


1672 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1673 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1674 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1675 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1676 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1677 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1678 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1679 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1680 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1681 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1682 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1683 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1684 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1685 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1686 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1687 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1688 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1689 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1690 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1691 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1692 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_1


1693 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1694 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1695 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1696 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1697 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1698 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1699 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1700 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1701 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1702 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1703 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1704 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1705 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1706 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1707 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1708 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1709 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1710 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1711 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1712 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1713 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_2


1714 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1715 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1716 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1717 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1718 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1719 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1720 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1721 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1722 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1723 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1724 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1725 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1726 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1727 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1728 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1729 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1730 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

1731 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

1732 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

1733 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

1734 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_3


1735 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1736 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1737 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1738 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1739 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1740 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1741 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1742 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1743 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1744 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1745 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1746 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1747 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1748 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1749 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1750 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1751 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1752 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1753 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

1754 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

1756 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1757 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1758 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1759 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1760 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1761 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1762 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1763 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1764 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1765 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1766 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1767 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1768 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1769 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1770 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1771 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1772 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1773 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1774 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

1775 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_4_3_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

1778 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_5_0


1779 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

1780 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_5_0


1781 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

1783 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1785 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

1786 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

1787 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


1788 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1789 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1790 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1791 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1792 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1793 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1794 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1795 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1796 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1797 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1798 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1799 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1800 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1801 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1802 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1803 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1804 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1805 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1806 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1807 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1808 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1809 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

1810 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


1811 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1812 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1813 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1814 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1815 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1816 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1817 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1818 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1819 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1820 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1821 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1822 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1823 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1824 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1825 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1826 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1827 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1828 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1829 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1830 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1831 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1832 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

1833 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


1834 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1835 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1836 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1837 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1838 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1839 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1840 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1841 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1842 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1843 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1844 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1845 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1846 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1847 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1848 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1849 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1850 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1851 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1852 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1853 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1854 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1855 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

1856 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_1


1857 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1858 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1859 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1860 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1861 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1862 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1863 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1864 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1865 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1866 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1867 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1868 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1869 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1870 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1871 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1872 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1873 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1874 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1875 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1876 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1877 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1878 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

1879 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_2


1880 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1881 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1882 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1883 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1884 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1885 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1886 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1887 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1888 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1889 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1890 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1891 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1892 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1893 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1894 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1895 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1896 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1897 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1898 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1899 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1900 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1901 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

1902 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_0


1903 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1904 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1905 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1906 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1907 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1908 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1909 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1910 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1911 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1912 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1913 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1914 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1915 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1916 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1917 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1918 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1919 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1920 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1921 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1922 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1923 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1924 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

1925 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_1


1926 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1927 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1928 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1929 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1930 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1931 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1932 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1933 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1934 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1935 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1936 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1937 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1938 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1939 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1940 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1941 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1942 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1943 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1944 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1945 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1946 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1947 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

1948 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_2


1949 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1950 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1951 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1952 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1953 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1954 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1955 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1956 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1957 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1958 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1959 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1960 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1961 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1962 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1963 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1964 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1965 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

1966 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

1967 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

1968 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

1969 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

1970 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

1971 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_3


1972 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1973 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1974 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1975 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1976 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1977 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1978 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1979 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1980 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1981 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1982 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1983 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1984 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1985 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1986 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1987 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1988 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1989 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1990 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

1991 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

1992 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

1993 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

1994 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_5_0


1995 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1996 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1997 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

1998 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

1999 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2000 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2001 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2002 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2003 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2004 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2005 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2006 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2007 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2008 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2009 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2010 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2011 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2012 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2013 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2014 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2015 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

2016 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

2018 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2019 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2020 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2021 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2022 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2023 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2024 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2025 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2026 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2027 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2028 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2029 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2030 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2031 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2032 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2033 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2034 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2035 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2036 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2037 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2038 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2039 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2042 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_5_1


2043 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

2044 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_5_1


2045 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

2047 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2049 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

2050 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

2051 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


2052 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2053 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2054 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2055 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2056 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2057 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2058 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2059 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2060 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2061 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2062 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2063 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2064 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2065 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2066 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2067 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2068 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2069 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2070 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2071 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2072 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2073 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2074 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2075 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2076 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


2077 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2078 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2079 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2080 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2081 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2082 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2083 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2084 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2085 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2086 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2087 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2088 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2089 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2090 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2091 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2092 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2093 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2094 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2095 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2096 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2097 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2098 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2099 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2100 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2101 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


2102 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2103 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2104 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2105 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2106 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2107 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2108 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2109 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2110 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2111 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2112 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2113 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2114 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2115 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2116 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2117 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2118 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2119 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2120 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2121 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2122 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2123 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2124 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2125 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2126 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_1


2127 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2128 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2129 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2130 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2131 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2132 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2133 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2134 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2135 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2136 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2137 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2138 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2139 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2140 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2141 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2142 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2143 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2144 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2145 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2146 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2147 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2148 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2149 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2150 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2151 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_2


2152 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2153 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2154 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2155 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2156 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2157 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2158 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2159 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2160 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2161 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2162 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2163 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2164 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2165 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2166 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2167 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2168 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2169 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2170 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2171 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2172 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2173 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2174 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2175 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2176 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_0


2177 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2178 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2179 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2180 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2181 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2182 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2183 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2184 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2185 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2186 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2187 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2188 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2189 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2190 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2191 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2192 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2193 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2194 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2195 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2196 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2197 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2198 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2199 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2200 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2201 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_1


2202 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2203 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2204 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2205 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2206 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2207 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2208 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2209 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2210 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2211 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2212 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2213 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2214 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2215 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2216 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2217 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2218 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2219 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2220 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2221 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2222 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2223 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2224 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2225 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2226 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_2


2227 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2228 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2229 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2230 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2231 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2232 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2233 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2234 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2235 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2236 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2237 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2238 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2239 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2240 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2241 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2242 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2243 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2244 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2245 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2246 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2247 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2248 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2249 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2250 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2251 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_3


2252 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2253 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2254 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2255 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2256 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2257 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2258 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2259 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2260 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2261 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2262 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2263 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2264 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2265 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2266 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2267 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2268 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2269 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2270 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2271 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2272 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2273 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2274 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2275 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2276 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_5_0


2277 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2278 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2279 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2280 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2281 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2282 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2283 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2284 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2285 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2286 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2287 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2288 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2289 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2290 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2291 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2292 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2293 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2294 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2295 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2296 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2297 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

2298 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

2299 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

2300 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

2301 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_5_1


2302 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2303 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2304 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2305 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2306 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2307 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2308 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2309 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2310 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2311 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2312 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2313 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2314 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2315 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2316 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2317 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2318 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2319 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2320 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2321 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2322 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2323 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2324 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

2325 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

2327 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2328 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2329 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2330 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2331 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2332 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2333 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2334 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2335 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2336 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2337 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2338 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2339 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2340 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2341 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2342 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2343 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2344 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2345 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2346 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2347 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2348 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2349 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2350 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_5_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2353 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_6_0


2354 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

2355 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_6_0


2356 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

2358 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2360 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_6_0


	)

2361 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_6_0


	)

2362 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


2363 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2364 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2365 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2366 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2367 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2368 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2369 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2370 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2371 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2372 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2373 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2374 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2375 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2376 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2377 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2378 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2379 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2380 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2381 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2382 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2383 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2384 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2385 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2386 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2387 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2388 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2389 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


2390 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2391 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2392 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2393 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2394 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2395 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2396 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2397 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2398 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2399 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2400 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2401 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2402 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2403 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2404 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2405 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2406 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2407 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2408 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2409 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2410 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2411 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2412 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2413 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2414 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2415 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2416 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


2417 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2418 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2419 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2420 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2421 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2422 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2423 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2424 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2425 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2426 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2427 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2428 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2429 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2430 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2431 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2432 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2433 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2434 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2435 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2436 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2437 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2438 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2439 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2440 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2441 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2442 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2443 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_1


2444 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2445 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2446 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2447 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2448 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2449 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2450 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2451 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2452 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2453 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2454 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2455 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2456 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2457 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2458 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2459 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2460 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2461 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2462 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2463 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2464 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2465 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2466 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2467 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2468 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2469 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2470 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_2


2471 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2472 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2473 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2474 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2475 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2476 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2477 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2478 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2479 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2480 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2481 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2482 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2483 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2484 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2485 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2486 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2487 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2488 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2489 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2490 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2491 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2492 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2493 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2494 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2495 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2496 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2497 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_0


2498 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2499 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2500 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2501 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2502 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2503 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2504 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2505 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2506 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2507 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2508 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2509 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2510 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2511 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2512 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2513 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2514 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2515 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2516 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2517 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2518 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2519 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2520 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2521 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2522 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2523 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2524 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_1


2525 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2526 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2527 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2528 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2529 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2530 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2531 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2532 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2533 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2534 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2535 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2536 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2537 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2538 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2539 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2540 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2541 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2542 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2543 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2544 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2545 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2546 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2547 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2548 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2549 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2550 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2551 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_2


2552 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2553 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2554 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2555 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2556 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2557 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2558 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2559 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2560 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2561 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2562 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2563 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2564 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2565 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2566 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2567 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2568 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2569 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2570 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2571 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2572 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2573 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2574 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2575 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2576 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2577 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2578 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_3


2579 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2580 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2581 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2582 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2583 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2584 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2585 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2586 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2587 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2588 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2589 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2590 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2591 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2592 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2593 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2594 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2595 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2596 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2597 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2598 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2599 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2600 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2601 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2602 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2603 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2604 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2605 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_5_0


2606 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2607 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2608 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2609 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2610 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2611 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2612 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2613 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2614 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2615 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2616 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2617 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2618 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2619 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2620 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2621 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2622 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2623 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2624 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2625 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2626 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

2627 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

2628 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

2629 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

2630 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

2631 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

2632 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_5_1


2633 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2634 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2635 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2636 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2637 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2638 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2639 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2640 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2641 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2642 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2643 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2644 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2645 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2646 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2647 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2648 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2649 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2650 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2651 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2652 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2653 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2654 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2655 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

2656 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

2657 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

2658 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

2659 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_6_0


2660 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2661 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2662 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2663 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2664 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2665 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2666 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2667 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2668 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2669 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2670 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2671 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2672 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2673 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2674 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2675 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2676 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2677 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2678 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2679 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2680 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2681 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2682 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2683 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2684 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL__IPHONE_6_0


	)

2685 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_6_0


	)

2687 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2688 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2689 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2690 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2691 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2692 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2693 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2694 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2695 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2696 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2697 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2698 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2699 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2700 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2701 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2702 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2703 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2704 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2705 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2706 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2707 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2708 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2709 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2710 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2711 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

2712 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

2715 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_6_1


2716 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

2717 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_6_1


2718 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

2720 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2722 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_6_1


	)

2723 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_6_1


	)

2724 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


2725 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2726 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2727 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2728 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2729 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2730 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2731 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2732 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2733 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2734 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2735 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2736 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2737 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2738 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2739 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2740 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2741 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2742 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2743 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2744 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2745 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2746 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2747 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2748 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2749 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2750 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2751 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2752 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

2753 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


2754 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2755 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2756 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2757 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2758 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2759 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2760 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2761 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2762 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2763 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2764 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2765 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2766 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2767 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2768 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2769 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2770 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2771 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2772 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2773 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2774 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2775 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2776 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2777 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2778 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2779 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2780 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2781 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

2782 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


2783 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2784 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2785 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2786 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2787 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2788 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2789 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2790 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2791 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2792 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2793 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2794 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2795 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2796 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2797 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2798 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2799 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2800 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2801 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2802 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2803 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2804 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2805 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2806 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2807 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2808 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2809 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2810 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

2811 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_1


2812 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2813 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2814 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2815 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2816 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2817 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2818 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2819 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2820 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2821 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2822 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2823 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2824 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2825 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2826 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2827 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2828 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2829 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2830 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2831 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2832 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2833 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2834 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2835 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2836 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2837 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2838 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2839 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

2840 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_2


2841 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2842 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2843 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2844 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2845 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2846 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2847 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2848 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2849 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2850 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2851 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2852 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2853 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2854 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2855 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2856 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2857 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2858 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2859 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2860 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2861 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2862 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2863 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2864 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2865 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2866 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2867 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2868 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

2869 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_0


2870 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2871 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2872 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2873 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2874 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2875 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2876 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2877 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2878 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2879 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2880 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2881 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2882 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2883 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2884 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2885 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2886 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2887 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2888 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2889 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2890 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2891 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2892 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2893 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2894 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2895 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2896 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2897 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

2898 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_1


2899 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2900 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2901 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2902 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2903 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2904 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2905 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2906 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2907 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2908 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2909 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2910 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2911 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2912 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2913 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2914 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2915 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2916 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2917 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2918 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2919 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2920 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2921 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2922 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2923 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2924 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2925 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2926 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

2927 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_2


2928 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2929 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2930 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2931 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2932 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2933 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2934 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2935 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2936 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2937 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2938 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2939 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2940 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2941 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2942 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2943 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2944 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2945 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2946 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2947 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2948 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2949 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2950 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2951 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2952 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2953 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2954 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2955 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

2956 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_3


2957 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2958 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2959 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2960 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2961 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2962 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2963 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2964 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2965 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2966 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2967 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2968 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2969 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2970 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2971 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2972 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2973 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2974 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2975 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2976 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2977 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2978 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2979 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2980 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2981 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2982 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2983 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2984 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

2985 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_5_0


2986 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2987 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2988 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2989 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2990 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2991 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2992 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2993 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2994 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2995 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2996 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2997 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

2998 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

2999 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3000 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3001 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3002 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3003 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3004 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3005 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3006 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

3007 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

3008 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

3009 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

3010 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

3011 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

3012 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

3013 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

3014 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_5_1


3015 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3016 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3017 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3018 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3019 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3020 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3021 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3022 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3023 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3024 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3025 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3026 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3027 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3028 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3029 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3030 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3031 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3032 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3033 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3034 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3035 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3036 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3037 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

3038 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

3039 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

3040 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

3041 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

3042 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

3043 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_6_0


3044 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3045 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3046 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3047 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3048 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3049 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3050 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3051 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3052 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3053 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3054 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3055 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3056 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3057 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3058 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3059 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3060 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3061 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3062 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3063 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3064 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3065 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3066 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3067 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3068 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_6_0


	)

3069 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_6_0


	)

3070 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_6_0


	)

3071 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_6_0


	)

3072 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_6_1


3073 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3074 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3075 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3076 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3077 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3078 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3079 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3080 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3081 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3082 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3083 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3084 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3085 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3086 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3087 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3088 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3089 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3090 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3091 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3092 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3093 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3094 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3095 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3096 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3097 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3098 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3099 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL__IPHONE_6_1


	)

3100 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_6_1


	)

3102 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3103 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3104 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3105 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3106 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3107 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3108 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3109 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3110 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3111 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3112 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3113 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3114 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3115 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3116 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3117 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3118 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3119 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3120 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3121 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3122 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3123 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3124 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3125 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3126 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3127 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3128 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3129 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_6_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3132 #i‡
__IPHONE_OS_VERSION_MAX_ALLOWED
 < 
__IPHONE_7_0


3133 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

3134 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_7_0


3135 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

3137 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3139 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL__IPHONE_7_0


	)

3140 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_7_0


	)

3141 #i‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_1


3142 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3143 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3144 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3145 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3146 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3147 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3148 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3149 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3150 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3151 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3152 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3153 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3154 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3155 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3156 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3157 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3158 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3159 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3160 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3161 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3162 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3163 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3164 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3165 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3166 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3167 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3168 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3169 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3170 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3171 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_1


	)

3172 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_2_2


3173 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3174 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3175 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3176 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3177 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3178 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3179 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3180 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3181 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3182 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3183 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3184 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3185 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3186 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3187 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3188 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3189 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3190 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3191 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3192 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3193 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3194 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3195 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3196 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3197 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3198 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3199 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3200 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3201 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3202 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_2_2


	)

3203 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_0


3204 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3205 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3206 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3207 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3208 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3209 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3210 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3211 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3212 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3213 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3214 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3215 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3216 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3217 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3218 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3219 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3220 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3221 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3222 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3223 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3224 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3225 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3226 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3227 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3228 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3229 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3230 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3231 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3232 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3233 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_0


	)

3234 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_1


3235 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3236 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3237 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3238 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3239 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3240 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3241 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3242 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3243 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3244 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3245 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3246 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3247 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3248 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3249 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3250 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3251 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3252 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3253 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3254 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3255 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3256 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3257 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3258 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3259 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3260 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3261 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3262 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3263 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3264 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_1


	)

3265 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_3_2


3266 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3267 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3268 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3269 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3270 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3271 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3272 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3273 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3274 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3275 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3276 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3277 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3278 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3279 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3280 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3281 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3282 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3283 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3284 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3285 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3286 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3287 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3288 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3289 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3290 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3291 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3292 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3293 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3294 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3295 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_3_2


	)

3296 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_0


3297 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3298 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3299 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3300 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3301 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3302 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3303 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3304 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3305 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3306 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3307 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3308 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3309 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

3310 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

3311 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

3312 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

3313 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

3314 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

3315 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

3316 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

3317 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

3318 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

3319 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

3320 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

3321 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

3322 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

3323 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

3324 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

3325 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

3326 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_0


	)

3327 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_1


3328 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3329 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3330 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3331 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3332 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3333 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3334 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3335 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3336 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3337 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3338 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3339 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3340 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3341 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3342 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

3343 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

3344 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

3345 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

3346 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

3347 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

3348 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

3349 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

3350 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

3351 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

3352 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

3353 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

3354 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

3355 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

3356 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

3357 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_1


	)

3358 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_2


3359 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3360 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3361 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3362 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3363 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3364 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3365 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3366 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3367 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3368 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3369 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3370 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3371 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3372 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3373 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3374 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3375 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

3376 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

3377 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

3378 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

3379 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

3380 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

3381 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

3382 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

3383 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

3384 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

3385 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

3386 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

3387 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

3388 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_2


	)

3389 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_4_3


3390 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3391 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3392 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3393 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3394 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3395 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3396 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3397 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3398 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3399 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3400 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3401 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3402 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3403 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3404 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3405 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3406 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3407 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3408 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

3409 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

3410 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

3411 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

3412 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

3413 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

3414 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

3415 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

3416 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

3417 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

3418 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

3419 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_4_3


	)

3420 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_5_0


3421 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3422 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3423 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3424 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3425 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3426 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3427 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3428 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3429 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3430 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3431 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3432 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3433 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3434 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3435 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3436 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3437 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3438 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3439 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3440 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3441 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

3442 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

3443 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

3444 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

3445 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

3446 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

3447 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

3448 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

3449 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

3450 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_0


	)

3451 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_5_1


3452 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3453 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3454 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3455 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3456 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3457 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3458 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3459 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3460 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3461 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3462 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3463 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3464 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3465 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3466 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3467 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3468 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3469 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3470 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3471 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3472 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3473 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3474 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

3475 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

3476 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

3477 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

3478 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

3479 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

3480 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

3481 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_5_1


	)

3482 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_6_0


3483 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3484 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3485 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3486 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3487 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3488 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3489 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3490 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3491 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3492 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3493 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3494 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3495 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3496 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3497 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3498 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3499 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3500 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3501 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3502 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3503 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3504 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3505 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3506 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3507 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_6_0


	)

3508 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_6_0


	)

3509 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_6_0


	)

3510 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_6_0


	)

3511 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_6_0


	)

3512 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_6_0


	)

3513 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_6_1


3514 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3515 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3516 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3517 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3518 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3519 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3520 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3521 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3522 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3523 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3524 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3525 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3526 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3527 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3528 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3529 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3530 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3531 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3532 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3533 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3534 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3535 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3536 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3537 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3538 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3539 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3540 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_6_1


	)

3541 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_6_1


	)

3542 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_6_1


	)

3543 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_6_1


	)

3544 #ñi‡
__IPHONE_OS_VERSION_MIN_REQUIRED
 < 
__IPHONE_7_0


3545 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3546 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3547 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3548 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3549 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3550 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3551 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3552 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3553 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3554 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3555 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3556 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3557 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3558 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3559 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3560 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3561 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3562 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3563 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3564 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3565 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3566 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3567 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3568 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3569 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3570 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3571 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3572 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_REGULAR


	)

3573 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL__IPHONE_7_0


	)

3574 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__IPHONE_7_0


	)

3576 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3577 
	#__AVAILABILITY_INTERNAL__IPHONE_2_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3578 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3579 
	#__AVAILABILITY_INTERNAL__IPHONE_2_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3580 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3581 
	#__AVAILABILITY_INTERNAL__IPHONE_2_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3582 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3583 
	#__AVAILABILITY_INTERNAL__IPHONE_3_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3584 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3585 
	#__AVAILABILITY_INTERNAL__IPHONE_3_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3586 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3587 
	#__AVAILABILITY_INTERNAL__IPHONE_3_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3588 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3589 
	#__AVAILABILITY_INTERNAL__IPHONE_4_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3590 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3591 
	#__AVAILABILITY_INTERNAL__IPHONE_4_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3592 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3593 
	#__AVAILABILITY_INTERNAL__IPHONE_4_2_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3594 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3595 
	#__AVAILABILITY_INTERNAL__IPHONE_4_3_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3596 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3597 
	#__AVAILABILITY_INTERNAL__IPHONE_5_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3598 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3599 
	#__AVAILABILITY_INTERNAL__IPHONE_5_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3600 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3601 
	#__AVAILABILITY_INTERNAL__IPHONE_6_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3602 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3603 
	#__AVAILABILITY_INTERNAL__IPHONE_6_1_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3604 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

3605 
	#__AVAILABILITY_INTERNAL__IPHONE_7_0_DEP__IPHONE_7_0_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

3608 
	#__AVAILABILITY_INTERNAL__IPHONE_NA
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

3609 
	#__AVAILABILITY_INTERNAL__IPHONE_NA_DEP__IPHONE_NA
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

3610 
	#__AVAILABILITY_INTERNAL__IPHONE_NA_DEP__IPHONE_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

3613 #ñi‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
)

3615 
	#__MAC_OS_X_VERSION_MIN_REQUIRED
 
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__


	)

3617 #i‚de‡
__MAC_OS_X_VERSION_MAX_ALLOWED


3618 
	#__MAC_OS_X_VERSION_MAX_ALLOWED
 
__MAC_10_9


	)

3621 #i‡
deföed
(
__has_©åibuã
Ë&& deföed(
__has_„©uª
)

3622 #i‡
__has_©åibuã
(
avaûabûôy
)

3624 
	#__AVAILABILITY_INTERNAL__MAC_10_0
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0)))

	)

3625 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.0)))

	)

3626 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3627 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.0,
mesßge
=_msg)))

	)

3629 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.0)))

	)

3631 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.1)))

	)

3632 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3633 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.1,
mesßge
=_msg)))

	)

3635 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.1)))

	)

3637 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.2)))

	)

3638 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3639 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.2,
mesßge
=_msg)))

	)

3641 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.2)))

	)

3643 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.3)))

	)

3644 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3645 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.3,
mesßge
=_msg)))

	)

3647 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.3)))

	)

3649 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.4)))

	)

3650 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3651 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.4,
mesßge
=_msg)))

	)

3653 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.4)))

	)

3655 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.5)))

	)

3656 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3657 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.5,
mesßge
=_msg)))

	)

3659 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.5)))

	)

3661 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.6)))

	)

3662 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3663 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.6,
mesßge
=_msg)))

	)

3665 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.6)))

	)

3667 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.7)))

	)

3668 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3669 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.7,
mesßge
=_msg)))

	)

3671 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.7)))

	)

3673 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.8)))

	)

3674 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3675 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.8,
mesßge
=_msg)))

	)

3677 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.8)))

	)

3679 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.9)))

	)

3680 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3681 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.9,
mesßge
=_msg)))

	)

3683 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0,
dïªˇãd
=10.9)))

	)

3685 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0)))

	)

3686 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.0)))

	)

3687 
	#__AVAILABILITY_INTERNAL__MAC_10_1
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1)))

	)

3688 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.1)))

	)

3689 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3690 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.1,
mesßge
=_msg)))

	)

3692 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.1)))

	)

3694 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.2)))

	)

3695 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3696 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.2,
mesßge
=_msg)))

	)

3698 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.2)))

	)

3700 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.3)))

	)

3701 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3702 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.3,
mesßge
=_msg)))

	)

3704 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.3)))

	)

3706 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.4)))

	)

3707 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3708 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.4,
mesßge
=_msg)))

	)

3710 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.4)))

	)

3712 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.5)))

	)

3713 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3714 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.5,
mesßge
=_msg)))

	)

3716 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.5)))

	)

3718 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.6)))

	)

3719 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3720 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.6,
mesßge
=_msg)))

	)

3722 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.6)))

	)

3724 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.7)))

	)

3725 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3726 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.7,
mesßge
=_msg)))

	)

3728 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.7)))

	)

3730 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.8)))

	)

3731 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3732 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.8,
mesßge
=_msg)))

	)

3734 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.8)))

	)

3736 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.9)))

	)

3737 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3738 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.9,
mesßge
=_msg)))

	)

3740 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1,
dïªˇãd
=10.9)))

	)

3742 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1)))

	)

3743 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.1)))

	)

3744 
	#__AVAILABILITY_INTERNAL__MAC_10_2
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2)))

	)

3745 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.2)))

	)

3746 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3747 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.2,
mesßge
=_msg)))

	)

3749 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.2)))

	)

3751 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.3)))

	)

3752 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3753 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.3,
mesßge
=_msg)))

	)

3755 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.3)))

	)

3757 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.4)))

	)

3758 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3759 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.4,
mesßge
=_msg)))

	)

3761 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.4)))

	)

3763 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.5)))

	)

3764 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3765 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.5,
mesßge
=_msg)))

	)

3767 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.5)))

	)

3769 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.6)))

	)

3770 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3771 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.6,
mesßge
=_msg)))

	)

3773 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.6)))

	)

3775 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.7)))

	)

3776 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3777 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.7,
mesßge
=_msg)))

	)

3779 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.7)))

	)

3781 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.8)))

	)

3782 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3783 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.8,
mesßge
=_msg)))

	)

3785 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.8)))

	)

3787 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.9)))

	)

3788 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3789 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.9,
mesßge
=_msg)))

	)

3791 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2,
dïªˇãd
=10.9)))

	)

3793 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2)))

	)

3794 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.2)))

	)

3795 
	#__AVAILABILITY_INTERNAL__MAC_10_3
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3)))

	)

3796 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.3)))

	)

3797 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3798 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.3,
mesßge
=_msg)))

	)

3800 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.3)))

	)

3802 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.4)))

	)

3803 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3804 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.4,
mesßge
=_msg)))

	)

3806 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.4)))

	)

3808 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.5)))

	)

3809 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3810 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.5,
mesßge
=_msg)))

	)

3812 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.5)))

	)

3814 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.6)))

	)

3815 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3816 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.6,
mesßge
=_msg)))

	)

3818 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.6)))

	)

3820 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.7)))

	)

3821 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3822 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.7,
mesßge
=_msg)))

	)

3824 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.7)))

	)

3826 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.8)))

	)

3827 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3828 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.8,
mesßge
=_msg)))

	)

3830 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.8)))

	)

3832 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.9)))

	)

3833 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3834 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.9,
mesßge
=_msg)))

	)

3836 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3,
dïªˇãd
=10.9)))

	)

3838 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3)))

	)

3839 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.3)))

	)

3840 
	#__AVAILABILITY_INTERNAL__MAC_10_4
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4)))

	)

3841 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4,
dïªˇãd
=10.4)))

	)

3842 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3843 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4,
dïªˇãd
=10.4,
mesßge
=_msg)))

	)

3845 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4,
dïªˇãd
=10.4)))

	)

3847 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4,
dïªˇãd
=10.5)))

	)

3848 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3849 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4,
dïªˇãd
=10.5,
mesßge
=_msg)))

	)

3851 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4,
dïªˇãd
=10.5)))

	)

3853 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4,
dïªˇãd
=10.6)))

	)

3854 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3855 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4,
dïªˇãd
=10.6,
mesßge
=_msg)))

	)

3857 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4,
dïªˇãd
=10.6)))

	)

3859 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4,
dïªˇãd
=10.7)))

	)

3860 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3861 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4,
dïªˇãd
=10.7,
mesßge
=_msg)))

	)

3863 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4,
dïªˇãd
=10.7)))

	)

3865 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4,
dïªˇãd
=10.8)))

	)

3866 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3867 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4,
dïªˇãd
=10.8,
mesßge
=_msg)))

	)

3869 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4,
dïªˇãd
=10.8)))

	)

3871 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4,
dïªˇãd
=10.9)))

	)

3872 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3873 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4,
dïªˇãd
=10.9,
mesßge
=_msg)))

	)

3875 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4,
dïªˇãd
=10.9)))

	)

3877 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4)))

	)

3878 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.4)))

	)

3879 
	#__AVAILABILITY_INTERNAL__MAC_10_5
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.5)))

	)

3880 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.5,
dïªˇãd
=10.5)))

	)

3881 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3882 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.5,
dïªˇãd
=10.5,
mesßge
=_msg)))

	)

3884 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.5,
dïªˇãd
=10.5)))

	)

3886 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.5,
dïªˇãd
=10.6)))

	)

3887 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3888 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.5,
dïªˇãd
=10.6,
mesßge
=_msg)))

	)

3890 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.5,
dïªˇãd
=10.6)))

	)

3892 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.5,
dïªˇãd
=10.7)))

	)

3893 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3894 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.5,
dïªˇãd
=10.7,
mesßge
=_msg)))

	)

3896 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.5,
dïªˇãd
=10.7)))

	)

3898 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.5,
dïªˇãd
=10.8)))

	)

3899 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3900 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.5,
dïªˇãd
=10.8,
mesßge
=_msg)))

	)

3902 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.5,
dïªˇãd
=10.8)))

	)

3904 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.5,
dïªˇãd
=10.9)))

	)

3905 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3906 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.5,
dïªˇãd
=10.9,
mesßge
=_msg)))

	)

3908 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.5,
dïªˇãd
=10.9)))

	)

3910 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.5)))

	)

3911 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.5)))

	)

3912 
	#__AVAILABILITY_INTERNAL__MAC_10_6
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.6)))

	)

3913 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.6,
dïªˇãd
=10.6)))

	)

3914 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3915 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.6,
dïªˇãd
=10.6,
mesßge
=_msg)))

	)

3917 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.6,
dïªˇãd
=10.6)))

	)

3919 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.6,
dïªˇãd
=10.7)))

	)

3920 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3921 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.6,
dïªˇãd
=10.7,
mesßge
=_msg)))

	)

3923 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.6,
dïªˇãd
=10.7)))

	)

3925 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.6,
dïªˇãd
=10.8)))

	)

3926 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3927 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.6,
dïªˇãd
=10.8,
mesßge
=_msg)))

	)

3929 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.6,
dïªˇãd
=10.8)))

	)

3931 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.6,
dïªˇãd
=10.9)))

	)

3932 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3933 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.6,
dïªˇãd
=10.9,
mesßge
=_msg)))

	)

3935 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.6,
dïªˇãd
=10.9)))

	)

3937 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.6)))

	)

3938 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.6)))

	)

3939 
	#__AVAILABILITY_INTERNAL__MAC_10_7
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.7)))

	)

3940 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.7,
dïªˇãd
=10.7)))

	)

3941 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3942 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.7,
dïªˇãd
=10.7,
mesßge
=_msg)))

	)

3944 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.7,
dïªˇãd
=10.7)))

	)

3946 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.7,
dïªˇãd
=10.8)))

	)

3947 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3948 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.7,
dïªˇãd
=10.8,
mesßge
=_msg)))

	)

3950 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.7,
dïªˇãd
=10.8)))

	)

3952 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.7,
dïªˇãd
=10.9)))

	)

3953 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3954 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.7,
dïªˇãd
=10.9,
mesßge
=_msg)))

	)

3956 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.7,
dïªˇãd
=10.9)))

	)

3958 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.7)))

	)

3959 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.7)))

	)

3960 
	#__AVAILABILITY_INTERNAL__MAC_10_8
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.8)))

	)

3961 
	#__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.8,
dïªˇãd
=10.8)))

	)

3962 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3963 
	#__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.8,
dïªˇãd
=10.8,
mesßge
=_msg)))

	)

3965 
	#__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.8,
dïªˇãd
=10.8)))

	)

3967 
	#__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.8,
dïªˇãd
=10.9)))

	)

3968 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3969 
	#__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.8,
dïªˇãd
=10.9,
mesßge
=_msg)))

	)

3971 
	#__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.8,
dïªˇãd
=10.9)))

	)

3973 
	#__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.8)))

	)

3974 
	#__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.8)))

	)

3975 
	#__AVAILABILITY_INTERNAL__MAC_10_9
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.9)))

	)

3976 
	#__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.9,
dïªˇãd
=10.9)))

	)

3977 #i‡
__has_„©uª
(
©åibuã_avaûabûôy_wôh_mesßge
)

3978 
	#__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.9,
dïªˇãd
=10.9,
mesßge
=_msg)))

	)

3980 
	#__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.9,
dïªˇãd
=10.9)))

	)

3982 
	#__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.9)))

	)

3983 
	#__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
öåodu˚d
=10.9)))

	)

3984 
	#__AVAILABILITY_INTERNAL__MAC_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
u«vaûabÀ
)))

	)

3985 
	#__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA
 
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
u«vaûabÀ
)))

	)

3986 
	#__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA_MSG
(
_msg
Ë
	`__©åibuã__
((
	`avaûabûôy
(
macosx
,
u«vaûabÀ
)))

	)

3990 #i‚de‡
__AVAILABILITY_INTERNAL__MAC_10_0


3992 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_9


3993 
	#__AVAILABILITY_INTERNAL__MAC_10_9
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

3994 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_9


3995 
	#__AVAILABILITY_INTERNAL__MAC_10_9
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

3997 
	#__AVAILABILITY_INTERNAL__MAC_10_9
 
__AVAILABILITY_INTERNAL_REGULAR


	)

3999 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_8


4000 
	#__AVAILABILITY_INTERNAL__MAC_10_8
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

4001 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_8


4002 
	#__AVAILABILITY_INTERNAL__MAC_10_8
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

4004 
	#__AVAILABILITY_INTERNAL__MAC_10_8
 
__AVAILABILITY_INTERNAL_REGULAR


	)

4006 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_7


4007 
	#__AVAILABILITY_INTERNAL__MAC_10_7
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

4008 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_7


4009 
	#__AVAILABILITY_INTERNAL__MAC_10_7
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

4011 
	#__AVAILABILITY_INTERNAL__MAC_10_7
 
__AVAILABILITY_INTERNAL_REGULAR


	)

4013 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_6


4014 
	#__AVAILABILITY_INTERNAL__MAC_10_6
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

4015 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_6


4016 
	#__AVAILABILITY_INTERNAL__MAC_10_6
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

4018 
	#__AVAILABILITY_INTERNAL__MAC_10_6
 
__AVAILABILITY_INTERNAL_REGULAR


	)

4020 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_5


4021 
	#__AVAILABILITY_INTERNAL__MAC_10_5
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

4022 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_5


4023 
	#__AVAILABILITY_INTERNAL__MAC_10_5
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

4025 
	#__AVAILABILITY_INTERNAL__MAC_10_5
 
__AVAILABILITY_INTERNAL_REGULAR


	)

4027 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_4


4028 
	#__AVAILABILITY_INTERNAL__MAC_10_4
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

4029 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_4


4030 
	#__AVAILABILITY_INTERNAL__MAC_10_4
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

4032 
	#__AVAILABILITY_INTERNAL__MAC_10_4
 
__AVAILABILITY_INTERNAL_REGULAR


	)

4034 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_3


4035 
	#__AVAILABILITY_INTERNAL__MAC_10_3
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

4036 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_3


4037 
	#__AVAILABILITY_INTERNAL__MAC_10_3
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

4039 
	#__AVAILABILITY_INTERNAL__MAC_10_3
 
__AVAILABILITY_INTERNAL_REGULAR


	)

4041 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_2


4042 
	#__AVAILABILITY_INTERNAL__MAC_10_2
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

4043 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_2


4044 
	#__AVAILABILITY_INTERNAL__MAC_10_2
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

4046 
	#__AVAILABILITY_INTERNAL__MAC_10_2
 
__AVAILABILITY_INTERNAL_REGULAR


	)

4048 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_1


4049 
	#__AVAILABILITY_INTERNAL__MAC_10_1
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

4050 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_1


4051 
	#__AVAILABILITY_INTERNAL__MAC_10_1
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

4053 
	#__AVAILABILITY_INTERNAL__MAC_10_1
 
__AVAILABILITY_INTERNAL_REGULAR


	)

4055 #i‡
__MAC_OS_X_VERSION_MAX_ALLOWED
 < 
__MAC_10_0


4056 
	#__AVAILABILITY_INTERNAL__MAC_10_0
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

4057 #ñi‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 < 
__MAC_10_0


4058 
	#__AVAILABILITY_INTERNAL__MAC_10_0
 
__AVAILABILITY_INTERNAL_WEAK_IMPORT


	)

4060 
	#__AVAILABILITY_INTERNAL__MAC_10_0
 
__AVAILABILITY_INTERNAL_REGULAR


	)

4062 
	#__AVAILABILITY_INTERNAL__MAC_NA
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

4063 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_1


4064 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4065 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4066 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4067 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4069 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4070 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4071 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4072 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4074 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_2


4075 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4076 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4077 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4078 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4079 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4080 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4082 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4083 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4084 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4085 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4086 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

4087 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_2


	)

4089 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_3


4090 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4091 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4092 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4093 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4094 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4095 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4096 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4097 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4099 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4100 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4101 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4102 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4103 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

4104 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_2


	)

4105 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3
 
__AVAILABILITY_INTERNAL__MAC_10_3


	)

4106 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_3


	)

4108 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_4


4109 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4110 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4111 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4112 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4113 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4114 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4115 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4116 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4117 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4118 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4120 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4121 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4122 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4123 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4124 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

4125 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_2


	)

4126 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL__MAC_10_3


	)

4127 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_3


	)

4128 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4
 
__AVAILABILITY_INTERNAL__MAC_10_4


	)

4129 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_4


	)

4131 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_5


4132 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4133 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4134 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4135 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4136 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4137 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4138 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4139 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4140 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4141 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4142 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4143 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4145 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4146 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4147 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4148 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4149 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

4150 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_2


	)

4151 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL__MAC_10_3


	)

4152 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_3


	)

4153 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL__MAC_10_4


	)

4154 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_4


	)

4155 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5
 
__AVAILABILITY_INTERNAL__MAC_10_5


	)

4156 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_5


	)

4158 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_6


4159 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4160 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4161 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4162 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4163 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4164 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4165 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4166 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4167 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4168 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4169 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4170 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4171 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4172 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4174 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4175 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4176 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4177 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4178 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

4179 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_2


	)

4180 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL__MAC_10_3


	)

4181 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_3


	)

4182 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL__MAC_10_4


	)

4183 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_4


	)

4184 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL__MAC_10_5


	)

4185 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_5


	)

4186 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6
 
__AVAILABILITY_INTERNAL__MAC_10_6


	)

4187 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_6


	)

4189 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_7


4190 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4191 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4192 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4193 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4194 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4195 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4196 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4197 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4198 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4199 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4200 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4201 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4202 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4203 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4204 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4205 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4207 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4208 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4209 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4210 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4211 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

4212 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_2


	)

4213 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL__MAC_10_3


	)

4214 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_3


	)

4215 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL__MAC_10_4


	)

4216 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_4


	)

4217 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL__MAC_10_5


	)

4218 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_5


	)

4219 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL__MAC_10_6


	)

4220 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_6


	)

4221 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7
 
__AVAILABILITY_INTERNAL__MAC_10_7


	)

4222 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_7


	)

4224 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_8


4225 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4226 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4227 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4228 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4229 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4230 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4231 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4232 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4233 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4234 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4235 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4236 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4237 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4238 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4239 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4240 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4241 
	#__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4242 
	#__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4244 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4245 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4246 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4247 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4248 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

4249 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_2


	)

4250 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8
 
__AVAILABILITY_INTERNAL__MAC_10_3


	)

4251 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_3


	)

4252 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8
 
__AVAILABILITY_INTERNAL__MAC_10_4


	)

4253 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_4


	)

4254 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8
 
__AVAILABILITY_INTERNAL__MAC_10_5


	)

4255 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_5


	)

4256 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8
 
__AVAILABILITY_INTERNAL__MAC_10_6


	)

4257 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_6


	)

4258 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8
 
__AVAILABILITY_INTERNAL__MAC_10_7


	)

4259 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_7


	)

4260 
	#__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8
 
__AVAILABILITY_INTERNAL__MAC_10_8


	)

4261 
	#__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_8


	)

4263 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >
__MAC_10_9


4264 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4265 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4266 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4267 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4268 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4269 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4270 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4271 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4272 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4273 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4274 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4275 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4276 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4277 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4278 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4279 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4280 
	#__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4281 
	#__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4282 
	#__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL_DEPRECATED


	)

4283 
	#__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9_MSG
(
_msg
Ë
	`__AVAILABILITY_INTERNAL_DEPRECATED_MSG
(_msg)

	)

4285 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4286 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4287 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4288 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4289 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

4290 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_2


	)

4291 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL__MAC_10_3


	)

4292 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_3


	)

4293 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL__MAC_10_4


	)

4294 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_4


	)

4295 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL__MAC_10_5


	)

4296 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_5


	)

4297 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL__MAC_10_6


	)

4298 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_6


	)

4299 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL__MAC_10_7


	)

4300 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_7


	)

4301 
	#__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL__MAC_10_8


	)

4302 
	#__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_8


	)

4303 
	#__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9
 
__AVAILABILITY_INTERNAL__MAC_10_9


	)

4304 
	#__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_9


	)

4306 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4307 
	#__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_0


	)

4308 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4309 
	#__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_1


	)

4310 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_2


	)

4311 
	#__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_2


	)

4312 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_3


	)

4313 
	#__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_3


	)

4314 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_4


	)

4315 
	#__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_4


	)

4316 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_5


	)

4317 
	#__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_5


	)

4318 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_6


	)

4319 
	#__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_6


	)

4320 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_7


	)

4321 
	#__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_7


	)

4322 
	#__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_8


	)

4323 
	#__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_8


	)

4324 
	#__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL__MAC_10_9


	)

4325 
	#__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL__MAC_10_9


	)

4326 
	#__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA
 
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

4327 
	#__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA_MSG
(
_msg
Ë
__AVAILABILITY_INTERNAL_UNAVAILABLE


	)

	@/usr/include/i386/_limits.h

22 #i‚def 
_I386__LIMITS_H_


23 
	#_I386__LIMITS_H_


	)

25 
	#__DARWIN_CLK_TCK
 100

	)

	@/usr/include/i386/_param.h

29 #i‚de‡
_I386__PARAM_H_


30 
	#_I386__PARAM_H_


	)

32 
	~<i386/_ty≥s.h
>

39 
	#__DARWIN_ALIGNBYTES
 ((
__d¨wö_size_t
Ë- 1)

	)

40 
	#__DARWIN_ALIGN
(
p
Ë((
__d¨wö_size_t
)((*)(__d¨wö_size_t)’Ë+ 
__DARWIN_ALIGNBYTES
Ë&~ __DARWIN_ALIGNBYTES)

	)

42 
	#__DARWIN_ALIGNBYTES32
 ((
__uöt32_t
Ë- 1)

	)

43 
	#__DARWIN_ALIGN32
(
p
Ë((
__d¨wö_size_t
)((*)(__d¨wö_size_t)’Ë+ 
__DARWIN_ALIGNBYTES32
Ë&~ __DARWIN_ALIGNBYTES32)

	)

	@/usr/include/i386/limits.h

36 #i‚de‡
_I386_LIMITS_H_


37 
	#_I386_LIMITS_H_


	)

39 
	~<sys/cdefs.h
>

40 
	~<i386/_limôs.h
>

42 
	#CHAR_BIT
 8

	)

43 
	#MB_LEN_MAX
 6

	)

45 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

46 
	#CLK_TCK
 
__DARWIN_CLK_TCK


	)

59 
	#SCHAR_MAX
 127

	)

60 
	#SCHAR_MIN
 (-128Ë

	)

62 
	#UCHAR_MAX
 255

	)

63 
	#CHAR_MAX
 127

	)

64 
	#CHAR_MIN
 (-128Ë

	)

66 
	#USHRT_MAX
 65535

	)

67 
	#SHRT_MAX
 32767

	)

68 
	#SHRT_MIN
 (-32768Ë

	)

70 
	#UINT_MAX
 0xfffffff‡

	)

71 
	#INT_MAX
 2147483647

	)

72 
	#INT_MIN
 (-2147483647-1Ë

	)

74 #ifde‡
__LP64__


75 
	#ULONG_MAX
 0xffffffffffffffffUL

	)

76 
	#LONG_MAX
 0x7fffffffffffffffL

	)

77 
	#LONG_MIN
 (-0x7fffffffffffffffL-1Ë

	)

79 
	#ULONG_MAX
 0xffffffffUL

	)

80 
	#LONG_MAX
 2147483647L

	)

81 
	#LONG_MIN
 (-2147483647L-1Ë

	)

84 
	#ULLONG_MAX
 0xffffffffffffffffULL

	)

85 
	#LLONG_MAX
 0x7fffffffffffffffLL

	)

86 
	#LLONG_MIN
 (-0x7fffffffffffffffLL-1Ë

	)

88 #i‡!
deföed
(
_ANSI_SOURCE
)

89 #ifde‡
__LP64__


90 
	#LONG_BIT
 64

	)

92 
	#LONG_BIT
 32

	)

94 
	#SSIZE_MAX
 
LONG_MAX


	)

95 
	#WORD_BIT
 32

	)

97 #i‡(!
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_XOPEN_SOURCE
)Ë|| deföed(
_DARWIN_C_SOURCE
)

98 
	#SIZE_T_MAX
 
ULONG_MAX


	)

100 
	#UQUAD_MAX
 
ULLONG_MAX


	)

101 
	#QUAD_MAX
 
LLONG_MAX


	)

102 
	#QUAD_MIN
 
LLONG_MIN


	)

	@/usr/include/i386/types.h

66 #i‚def 
_MACHTYPES_H_


67 
	#_MACHTYPES_H_


	)

69 #i‚de‡
__ASSEMBLER__


70 
	~<i386/_ty≥s.h
>

71 
	~<sys/cdefs.h
>

76 
	~<sys/_ty≥s/_öt8_t.h
>

77 
	~<sys/_ty≥s/_öt16_t.h
>

78 
	~<sys/_ty≥s/_öt32_t.h
>

79 
	~<sys/_ty≥s/_öt64_t.h
>

81 
	tu_öt8_t
;

82 
	tu_öt16_t
;

83 
	tu_öt32_t
;

84 
	tu_öt64_t
;

86 #i‡
__LP64__


87 
öt64_t
 
	tªgi°î_t
;

89 
öt32_t
 
	tªgi°î_t
;

92 
	~<sys/_ty≥s/_öçå_t.h
>

93 
	~<sys/_ty≥s/_uöçå_t.h
>

95 #i‡!
deföed
(
_ANSI_SOURCE
Ë&& (!deföed(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
))

97 
u_öt64_t
 
	tu£r_addr_t
;

98 
u_öt64_t
 
	tu£r_size_t
;

99 
öt64_t
 
	tu£r_ssize_t
;

100 
öt64_t
 
	tu£r_l⁄g_t
;

101 
u_öt64_t
 
	tu£r_ul⁄g_t
;

102 
öt64_t
 
	tu£r_time_t
;

103 
öt64_t
 
	tu£r_off_t
;

104 
	#USER_ADDR_NULL
 ((
u£r_addr_t
Ë0)

	)

105 
	#CAST_USER_ADDR_T
(
a_±r
Ë((
u£r_addr_t
)((
uöçå_t
)◊_±r)))

	)

111 
u_öt64_t
 
	tsysˇŒ_¨g_t
;

113 
	~<sys/_ty≥s/___off£tof.h
>

	@/usr/include/libkern/_OSByteOrder.h

29 #i‚de‡
_OS__OSBYTEORDER_H


30 
	#_OS__OSBYTEORDER_H


	)

40 
	~<sys/_ty≥s.h
>

43 
	#__DARWIN_OSSw≠C⁄°I¡16
(
x
) \

44 ((
__uöt16_t
)((((__uöt16_t)(
x
) & 0xff00) >> 8) | \

45 (((
__uöt16_t
)(
x
Ë& 0x00ffË<< 8)))

	)

47 
	#__DARWIN_OSSw≠C⁄°I¡32
(
x
) \

48 ((
__uöt32_t
)((((__uöt32_t)(
x
) & 0xff000000) >> 24) | \

49 (((
__uöt32_t
)(
x
) & 0x00ff0000) >> 8) | \

50 (((
__uöt32_t
)(
x
) & 0x0000ff00) << 8) | \

51 (((
__uöt32_t
)(
x
Ë& 0x000000ffË<< 24)))

	)

53 
	#__DARWIN_OSSw≠C⁄°I¡64
(
x
) \

54 ((
__uöt64_t
)((((__uöt64_t)(
x
) & 0xff00000000000000ULL) >> 56) | \

55 (((
__uöt64_t
)(
x
) & 0x00ff000000000000ULL) >> 40) | \

56 (((
__uöt64_t
)(
x
) & 0x0000ff0000000000ULL) >> 24) | \

57 (((
__uöt64_t
)(
x
) & 0x000000ff00000000ULL) >> 8) | \

58 (((
__uöt64_t
)(
x
) & 0x00000000ff000000ULL) << 8) | \

59 (((
__uöt64_t
)(
x
) & 0x0000000000ff0000ULL) << 24) | \

60 (((
__uöt64_t
)(
x
) & 0x000000000000ff00ULL) << 40) | \

61 (((
__uöt64_t
)(
x
Ë& 0x00000000000000ffULLË<< 56)))

	)

63 #i‡
deföed
(
__GNUC__
)

65 #i‡
deföed
(
__i386__
Ë|| deföed(
__x86_64__
)

66 
	~<libkîn/i386/_OSByãOrdî.h
>

71 
	#__DARWIN_OSSw≠I¡16
(
x
) \

72 ((
__uöt16_t
)(
	`__buûtö_c⁄°™t_p
(
x
Ë? 
	`__DARWIN_OSSw≠C⁄°I¡16
(xË: 
	`_OSSw≠I¡16
(x)))

	)

74 
	#__DARWIN_OSSw≠I¡32
(
x
) \

75 (
	`__buûtö_c⁄°™t_p
(
x
Ë? 
	`__DARWIN_OSSw≠C⁄°I¡32
(xË: 
	`_OSSw≠I¡32
(x))

	)

77 
	#__DARWIN_OSSw≠I¡64
(
x
) \

78 (
	`__buûtö_c⁄°™t_p
(
x
Ë? 
	`__DARWIN_OSSw≠C⁄°I¡64
(xË: 
	`_OSSw≠I¡64
(x))

	)

82 #i‡
deföed
(
__i386__
Ë|| deföed(
__x86_64__
)

84 #i‡!
deföed
(
__DARWIN_OS_INLINE
)

85 #i‡
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

86 
	#__DARWIN_OS_INLINE
 
ölöe


	)

87 #ñi‡
deföed
(
__MWERKS__
Ë|| deföed(
__˝lu•lus
)

88 
	#__DARWIN_OS_INLINE
 
ölöe


	)

90 
	#__DARWIN_OS_INLINE
 
__ölöe__


	)

94 
__DARWIN_OS_INLINE


95 
uöt16_t


96 
	$_OSSw≠I¡16
(

97 
uöt16_t
 
d©a


100  
	`__DARWIN_OSSw≠C⁄°I¡16
(
d©a
);

101 
	}
}

103 
__DARWIN_OS_INLINE


104 
uöt32_t


105 
	$_OSSw≠I¡32
(

106 
uöt32_t
 
d©a


109  
	`__DARWIN_OSSw≠C⁄°I¡32
(
d©a
);

110 
	}
}

112 
__DARWIN_OS_INLINE


113 
uöt64_t


114 
	$_OSSw≠I¡64
(

115 
uöt64_t
 
d©a


118  
	`__DARWIN_OSSw≠C⁄°I¡64
(
d©a
);

119 
	}
}

122 
	#__DARWIN_OSSw≠I¡16
(
x
Ë
	`_OSSw≠I¡16
(x)

	)

124 
	#__DARWIN_OSSw≠I¡32
(
x
Ë
	`_OSSw≠I¡32
(x)

	)

126 
	#__DARWIN_OSSw≠I¡64
(
x
Ë
	`_OSSw≠I¡64
(x)

	)

	@/usr/include/machine/_mcontext.h

28 #i‡
deföed
 (
__i386__
Ë|| deföed (
__x86_64__
)

29 
	~"i386/_mc⁄ãxt.h
"

31 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/machine/_types.h

28 #i‚de‡
_BSD_MACHINE__TYPES_H_


29 
	#_BSD_MACHINE__TYPES_H_


	)

31 #i‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

32 
	~"i386/_ty≥s.h
"

34 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/machine/signal.h

28 #i‚de‡
_BSD_MACHINE_SIGNAL_H_


29 
	#_BSD_MACHINE_SIGNAL_H_


	)

31 #i‡
deföed
 (
__i386__
Ë|| deföed(
__x86_64__
)

32 
	~"i386/sig«l.h
"

34 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/openssl/buffer.h

59 #i‚de‡
HEADER_BUFFER_H


60 
	#HEADER_BUFFER_H


	)

62 
	~<AvaûabûôyMa¸os.h
>

64 
	~<›ís¶/os¶_typ.h
>

66 #ifde‡ 
__˝lu•lus


70 
	~<°ddef.h
>

72 #i‡!
deföed
(
NO_SYS_TYPES_H
)

73 
	~<sys/ty≥s.h
>

79 
	sbuf_mem_°


81 
Àngth
;

82 *
d©a
;

83 
max
;

86 
BUF_MEM
 *
BUF_MEM_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

87 
BUF_MEM_‰ì
(
BUF_MEM
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

88 
BUF_MEM_grow
(
BUF_MEM
 *
°r
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

89 
BUF_MEM_grow_˛ón
(
BUF_MEM
 *
°r
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

90 * 
BUF_°rdup
(c⁄° *
°r
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

91 * 
BUF_°∫dup
(c⁄° *
°r
, 
size_t
 
siz
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

92 * 
BUF_memdup
(c⁄° *
d©a
, 
size_t
 
siz
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

95 
size_t
 
BUF_°æ˝y
(*
d°
,c⁄° *
§c
,size_à
siz
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

96 
size_t
 
BUF_°æˇt
(*
d°
,c⁄° *
§c
,size_à
siz
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

103 
ERR_lﬂd_BUF_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

108 
	#BUF_F_BUF_MEMDUP
 103

	)

109 
	#BUF_F_BUF_MEM_GROW
 100

	)

110 
	#BUF_F_BUF_MEM_GROW_CLEAN
 105

	)

111 
	#BUF_F_BUF_MEM_NEW
 101

	)

112 
	#BUF_F_BUF_STRDUP
 102

	)

113 
	#BUF_F_BUF_STRNDUP
 104

	)

117 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/ebcdic.h

3 #i‚de‡
HEADER_EBCDIC_H


4 
	#HEADER_EBCDIC_H


	)

6 
	~<sys/ty≥s.h
>

9 
	#os_tﬂscii
 
_›ís¶_os_tﬂscii


	)

10 
	#os_t€bcdic
 
_›ís¶_os_t€bcdic


	)

11 
	#ebcdic2ascii
 
_›ís¶_ebcdic2ascii


	)

12 
	#ascii2ebcdic
 
_›ís¶_ascii2ebcdic


	)

14 c⁄° 
os_tﬂscii
[256];

15 c⁄° 
os_t€bcdic
[256];

16 *
ebcdic2ascii
(*
de°
, c⁄° *
§˚
, 
size_t
 
cou¡
);

17 *
ascii2ebcdic
(*
de°
, c⁄° *
§˚
, 
size_t
 
cou¡
);

	@/usr/include/openssl/ec.h

72 #i‚de‡
HEADER_EC_H


73 
	#HEADER_EC_H


	)

75 
	~<AvaûabûôyMa¸os.h
>

77 
	~<›ís¶/›ís¶c⁄f.h
>

79 #ifde‡
OPENSSL_NO_EC


80 #îr‹ 
EC
 
is
 
dißbÀd
.

83 
	~<›ís¶/a¢1.h
>

84 
	~<›ís¶/symhacks.h
>

85 #i‚de‡
OPENSSL_NO_DEPRECATED


86 
	~<›ís¶/bn.h
>

89 #ifde‡ 
__˝lu•lus


91 #ñi‡
deföed
(
__SUNPRO_C
)

92 #i‡
__SUNPRO_C
 >= 0x520

93 #¥agm®
îr‹_mesßges
 (
off
,
E_ARRAY_OF_INCOMPLETE_NONAME
,
E_ARRAY_OF_INCOMPLETE
)

98 #i‚de‡
OPENSSL_ECC_MAX_FIELD_BITS


99 
	#OPENSSL_ECC_MAX_FIELD_BITS
 661

	)

104 
POINT_CONVERSION_COMPRESSED
 = 2,

105 
POINT_CONVERSION_UNCOMPRESSED
 = 4,

106 
POINT_CONVERSION_HYBRID
 = 6

107 } 
	tpoöt_c⁄vîsi⁄_f‹m_t
;

110 
ec_mëhod_°
 
	tEC_METHOD
;

112 
ec_group_°


121 
	tEC_GROUP
;

123 
ec_poöt_°
 
	tEC_POINT
;

129 c⁄° 
EC_METHOD
 *
EC_GFp_sim∂e_mëhod
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

130 c⁄° 
EC_METHOD
 *
EC_GFp_m⁄t_mëhod
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

131 c⁄° 
EC_METHOD
 *
EC_GFp_ni°_mëhod
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

135 c⁄° 
EC_METHOD
 *
EC_GF2m_sim∂e_mëhod
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

138 
EC_GROUP
 *
EC_GROUP_√w
(c⁄° 
EC_METHOD
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

139 
EC_GROUP_‰ì
(
EC_GROUP
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

140 
EC_GROUP_˛ór_‰ì
(
EC_GROUP
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

141 
EC_GROUP_c›y
(
EC_GROUP
 *, c⁄° EC_GROUP *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

142 
EC_GROUP
 *
EC_GROUP_dup
(c⁄° EC_GROUP *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

144 c⁄° 
EC_METHOD
 *
EC_GROUP_mëhod_of
(c⁄° 
EC_GROUP
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

145 
EC_METHOD_gë_fõld_ty≥
(c⁄° 
EC_METHOD
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

147 
EC_GROUP_£t_gíî©‹
(
EC_GROUP
 *, c⁄° 
EC_POINT
 *
gíî©‹
, c⁄° 
BIGNUM
 *
‹dî
, c⁄° BIGNUM *
coÁ˘‹
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

148 c⁄° 
EC_POINT
 *
EC_GROUP_gë0_gíî©‹
(c⁄° 
EC_GROUP
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

149 
EC_GROUP_gë_‹dî
(c⁄° 
EC_GROUP
 *, 
BIGNUM
 *
‹dî
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

150 
EC_GROUP_gë_coÁ˘‹
(c⁄° 
EC_GROUP
 *, 
BIGNUM
 *
coÁ˘‹
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

152 
EC_GROUP_£t_curve_«me
(
EC_GROUP
 *, 
nid
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

153 
EC_GROUP_gë_curve_«me
(c⁄° 
EC_GROUP
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

155 
EC_GROUP_£t_a¢1_Êag
(
EC_GROUP
 *, 
Êag
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

156 
EC_GROUP_gë_a¢1_Êag
(c⁄° 
EC_GROUP
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

158 
EC_GROUP_£t_poöt_c⁄vîsi⁄_f‹m
(
EC_GROUP
 *, 
poöt_c⁄vîsi⁄_f‹m_t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

159 
poöt_c⁄vîsi⁄_f‹m_t
 
EC_GROUP_gë_poöt_c⁄vîsi⁄_f‹m
(c⁄° 
EC_GROUP
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

161 *
EC_GROUP_gë0_£ed
(c⁄° 
EC_GROUP
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

162 
size_t
 
EC_GROUP_gë_£ed_Àn
(c⁄° 
EC_GROUP
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

163 
size_t
 
EC_GROUP_£t_£ed
(
EC_GROUP
 *, c⁄° *, size_à
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

165 
EC_GROUP_£t_curve_GFp
(
EC_GROUP
 *, c⁄° 
BIGNUM
 *
p
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

166 
EC_GROUP_gë_curve_GFp
(c⁄° 
EC_GROUP
 *, 
BIGNUM
 *
p
, BIGNUM *
a
, BIGNUM *
b
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

167 
EC_GROUP_£t_curve_GF2m
(
EC_GROUP
 *, c⁄° 
BIGNUM
 *
p
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

168 
EC_GROUP_gë_curve_GF2m
(c⁄° 
EC_GROUP
 *, 
BIGNUM
 *
p
, BIGNUM *
a
, BIGNUM *
b
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

171 
EC_GROUP_gë_degªe
(c⁄° 
EC_GROUP
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

174 
EC_GROUP_check
(c⁄° 
EC_GROUP
 *
group
, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

177 
EC_GROUP_check_dis¸imö™t
(c⁄° 
EC_GROUP
 *, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

180 
EC_GROUP_cmp
(c⁄° 
EC_GROUP
 *, c⁄° EC_GROUP *, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

184 
EC_GROUP
 *
EC_GROUP_√w_curve_GFp
(c⁄° 
BIGNUM
 *
p
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

185 
EC_GROUP
 *
EC_GROUP_√w_curve_GF2m
(c⁄° 
BIGNUM
 *
p
, c⁄° BIGNUM *
a
, c⁄° BIGNUM *
b
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

189 
EC_GROUP
 *
EC_GROUP_√w_by_curve_«me
(
nid
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

192 
nid
;

193 c⁄° *
commít
;

194 } 
	tEC_buûtö_curve
;

199 
size_t
 
EC_gë_buûtö_curves
(
EC_buûtö_curve
 *
r
, size_à
nôems
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

204 
EC_POINT
 *
EC_POINT_√w
(c⁄° 
EC_GROUP
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

205 
EC_POINT_‰ì
(
EC_POINT
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

206 
EC_POINT_˛ór_‰ì
(
EC_POINT
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

207 
EC_POINT_c›y
(
EC_POINT
 *, c⁄° EC_POINT *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

208 
EC_POINT
 *
EC_POINT_dup
(c⁄° EC_POINT *, c⁄° 
EC_GROUP
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

210 c⁄° 
EC_METHOD
 *
EC_POINT_mëhod_of
(c⁄° 
EC_POINT
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

212 
EC_POINT_£t_to_öföôy
(c⁄° 
EC_GROUP
 *, 
EC_POINT
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

213 
EC_POINT_£t_J¥oje˘ive_co‹dö©es_GFp
(c⁄° 
EC_GROUP
 *, 
EC_POINT
 *,

214 c⁄° 
BIGNUM
 *
x
, c⁄° BIGNUM *
y
, c⁄° BIGNUM *
z
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

215 
EC_POINT_gë_J¥oje˘ive_co‹dö©es_GFp
(c⁄° 
EC_GROUP
 *, c⁄° 
EC_POINT
 *,

216 
BIGNUM
 *
x
, BIGNUM *
y
, BIGNUM *
z
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

217 
EC_POINT_£t_afföe_co‹dö©es_GFp
(c⁄° 
EC_GROUP
 *, 
EC_POINT
 *,

218 c⁄° 
BIGNUM
 *
x
, c⁄° BIGNUM *
y
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

219 
EC_POINT_gë_afföe_co‹dö©es_GFp
(c⁄° 
EC_GROUP
 *, c⁄° 
EC_POINT
 *,

220 
BIGNUM
 *
x
, BIGNUM *
y
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

221 
EC_POINT_£t_com¥es£d_co‹dö©es_GFp
(c⁄° 
EC_GROUP
 *, 
EC_POINT
 *,

222 c⁄° 
BIGNUM
 *
x
, 
y_bô
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

224 
EC_POINT_£t_afföe_co‹dö©es_GF2m
(c⁄° 
EC_GROUP
 *, 
EC_POINT
 *,

225 c⁄° 
BIGNUM
 *
x
, c⁄° BIGNUM *
y
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

226 
EC_POINT_gë_afföe_co‹dö©es_GF2m
(c⁄° 
EC_GROUP
 *, c⁄° 
EC_POINT
 *,

227 
BIGNUM
 *
x
, BIGNUM *
y
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

228 
EC_POINT_£t_com¥es£d_co‹dö©es_GF2m
(c⁄° 
EC_GROUP
 *, 
EC_POINT
 *,

229 c⁄° 
BIGNUM
 *
x
, 
y_bô
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

231 
size_t
 
EC_POINT_poöt2o˘
(c⁄° 
EC_GROUP
 *, c⁄° 
EC_POINT
 *, 
poöt_c⁄vîsi⁄_f‹m_t
 
f‹m
,

232 *
buf
, 
size_t
 
Àn
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

233 
EC_POINT_o˘2poöt
(c⁄° 
EC_GROUP
 *, 
EC_POINT
 *,

234 c⁄° *
buf
, 
size_t
 
Àn
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

237 
BIGNUM
 *
EC_POINT_poöt2bn
(c⁄° 
EC_GROUP
 *, c⁄° 
EC_POINT
 *,

238 
poöt_c⁄vîsi⁄_f‹m_t
 
f‹m
, 
BIGNUM
 *, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

239 
EC_POINT
 *
EC_POINT_bn2poöt
(c⁄° 
EC_GROUP
 *, c⁄° 
BIGNUM
 *,

240 
EC_POINT
 *, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

241 *
EC_POINT_poöt2hex
(c⁄° 
EC_GROUP
 *, c⁄° 
EC_POINT
 *,

242 
poöt_c⁄vîsi⁄_f‹m_t
 
f‹m
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

243 
EC_POINT
 *
EC_POINT_hex2poöt
(c⁄° 
EC_GROUP
 *, const *,

244 
EC_POINT
 *, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

246 
EC_POINT_add
(c⁄° 
EC_GROUP
 *, 
EC_POINT
 *
r
, c⁄° EC_POINT *
a
, c⁄° EC_POINT *
b
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

247 
EC_POINT_dbl
(c⁄° 
EC_GROUP
 *, 
EC_POINT
 *
r
, c⁄° EC_POINT *
a
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

248 
EC_POINT_övît
(c⁄° 
EC_GROUP
 *, 
EC_POINT
 *, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

250 
EC_POINT_is_©_öföôy
(c⁄° 
EC_GROUP
 *, c⁄° 
EC_POINT
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

251 
EC_POINT_is_⁄_curve
(c⁄° 
EC_GROUP
 *, c⁄° 
EC_POINT
 *, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

252 
EC_POINT_cmp
(c⁄° 
EC_GROUP
 *, c⁄° 
EC_POINT
 *
a
, c⁄° EC_POINT *
b
, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

254 
EC_POINT_make_afföe
(c⁄° 
EC_GROUP
 *, 
EC_POINT
 *, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

255 
EC_POINTs_make_afföe
(c⁄° 
EC_GROUP
 *, 
size_t
 
num
, 
EC_POINT
 *[], 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

258 
EC_POINTs_mul
(c⁄° 
EC_GROUP
 *, 
EC_POINT
 *
r
, c⁄° 
BIGNUM
 *, 
size_t
 
num
, c⁄° EC_POINT *[], c⁄° BIGNUM *[], 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

259 
EC_POINT_mul
(c⁄° 
EC_GROUP
 *, 
EC_POINT
 *
r
, c⁄° 
BIGNUM
 *, c⁄° EC_POINT *, c⁄° BIGNUM *, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

262 
EC_GROUP_¥ecompuã_mu…
(
EC_GROUP
 *, 
BN_CTX
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

264 
EC_GROUP_have_¥ecompuã_mu…
(c⁄° 
EC_GROUP
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

272 
EC_GROUP_gë_basis_ty≥
(c⁄° 
EC_GROUP
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

273 
EC_GROUP_gë_åöomül_basis
(c⁄° 
EC_GROUP
 *, *
k
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

274 
EC_GROUP_gë_≥¡™omül_basis
(c⁄° 
EC_GROUP
 *, *
k1
,

275 *
k2
, *
k3
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

277 
	#OPENSSL_EC_NAMED_CURVE
 0x001

	)

279 
e˝k_∑ømëîs_°
 
	tECPKPARAMETERS
;

281 
EC_GROUP
 *
d2i_ECPKP¨amëîs
(EC_GROUP **, c⁄° **
ö
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

282 
i2d_ECPKP¨amëîs
(c⁄° 
EC_GROUP
 *, **
out
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

284 
	#d2i_ECPKP¨amëîs_bio
(
bp
,
x
Ë
	`ASN1_d2i_bio_of
(
EC_GROUP
,
NULL
,
d2i_ECPKP¨amëîs
,bp,x)

	)

285 
	#i2d_ECPKP¨amëîs_bio
(
bp
,
x
Ë
	`ASN1_i2d_bio_of_c⁄°
(
EC_GROUP
,
i2d_ECPKP¨amëîs
,bp,x)

	)

286 
	#d2i_ECPKP¨amëîs_Â
(
Â
,
x
Ë(
EC_GROUP
 *)
	`ASN1_d2i_Â
(
NULL
, \

287 (*(*)())
d2i_ECPKP¨amëîs
,(
Â
),(**)(
x
))

	)

288 
	#i2d_ECPKP¨amëîs_Â
(
Â
,
x
Ë
	`ASN1_i2d_Â
(
i2d_ECPKP¨amëîs
,(fp), \

289 (*)(
x
))

	)

291 #i‚de‡
OPENSSL_NO_BIO


292 
ECPKP¨amëîs_¥öt
(
BIO
 *
bp
, c⁄° 
EC_GROUP
 *
x
, 
off
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

294 #i‚de‡
OPENSSL_NO_FP_API


295 
ECPKP¨amëîs_¥öt_Â
(
FILE
 *
Â
, c⁄° 
EC_GROUP
 *
x
, 
off
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

299 
ec_key_°
 
	tEC_KEY
;

302 
	#EC_PKEY_NO_PARAMETERS
 0x001

	)

303 
	#EC_PKEY_NO_PUBKEY
 0x002

	)

305 
EC_KEY
 *
EC_KEY_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

306 
EC_KEY
 *
EC_KEY_√w_by_curve_«me
(
nid
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

307 
EC_KEY_‰ì
(
EC_KEY
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

308 
EC_KEY
 *
EC_KEY_c›y
(EC_KEY *, c⁄° EC_KEY *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

309 
EC_KEY
 *
EC_KEY_dup
(c⁄° EC_KEY *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

311 
EC_KEY_up_ªf
(
EC_KEY
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

313 c⁄° 
EC_GROUP
 *
EC_KEY_gë0_group
(c⁄° 
EC_KEY
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

314 
EC_KEY_£t_group
(
EC_KEY
 *, c⁄° 
EC_GROUP
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

315 c⁄° 
BIGNUM
 *
EC_KEY_gë0_¥iv©e_key
(c⁄° 
EC_KEY
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

316 
EC_KEY_£t_¥iv©e_key
(
EC_KEY
 *, c⁄° 
BIGNUM
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

317 c⁄° 
EC_POINT
 *
EC_KEY_gë0_public_key
(c⁄° 
EC_KEY
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

318 
EC_KEY_£t_public_key
(
EC_KEY
 *, c⁄° 
EC_POINT
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

319 
EC_KEY_gë_íc_Êags
(c⁄° 
EC_KEY
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

320 
EC_KEY_£t_íc_Êags
(
EC_KEY
 *, Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

321 
poöt_c⁄vîsi⁄_f‹m_t
 
EC_KEY_gë_c⁄v_f‹m
(c⁄° 
EC_KEY
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

322 
EC_KEY_£t_c⁄v_f‹m
(
EC_KEY
 *, 
poöt_c⁄vîsi⁄_f‹m_t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

324 *
EC_KEY_gë_key_mëhod_d©a
(
EC_KEY
 *,

325 *(*
dup_func
)(*), (*
‰ì_func
)(*), (*
˛ór_‰ì_func
)(*)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

334 *
EC_KEY_ö£π_key_mëhod_d©a
(
EC_KEY
 *
key
, *
d©a
,

335 *(*
dup_func
)(*), (*
‰ì_func
)(*), (*
˛ór_‰ì_func
)(*)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

337 
EC_KEY_£t_a¢1_Êag
(
EC_KEY
 *, Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

338 
EC_KEY_¥ecompuã_mu…
(
EC_KEY
 *, 
BN_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

341 
EC_KEY_gíî©e_key
(
EC_KEY
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

343 
EC_KEY_check_key
(c⁄° 
EC_KEY
 *Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

346 
EC_KEY
 *
d2i_ECPriv©eKey
(EC_KEY **
a
, c⁄° **
ö
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

347 
i2d_ECPriv©eKey
(
EC_KEY
 *
a
, **
out
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

349 
EC_KEY
 *
d2i_ECP¨amëîs
(EC_KEY **
a
, c⁄° **
ö
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

350 
i2d_ECP¨amëîs
(
EC_KEY
 *
a
, **
out
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

353 
EC_KEY
 *
o2i_ECPublicKey
(EC_KEY **
a
, c⁄° **
ö
, 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

354 
i2o_ECPublicKey
(
EC_KEY
 *
a
, **
out
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

356 #i‚de‡
OPENSSL_NO_BIO


357 
ECP¨amëîs_¥öt
(
BIO
 *
bp
, c⁄° 
EC_KEY
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

358 
EC_KEY_¥öt
(
BIO
 *
bp
, c⁄° 
EC_KEY
 *
x
, 
off
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

360 #i‚de‡
OPENSSL_NO_FP_API


361 
ECP¨amëîs_¥öt_Â
(
FILE
 *
Â
, c⁄° 
EC_KEY
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

362 
EC_KEY_¥öt_Â
(
FILE
 *
Â
, c⁄° 
EC_KEY
 *
x
, 
off
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

365 
	#ECP¨amëîs_dup
(
x
Ë
	`ASN1_dup_of
(
EC_KEY
,
i2d_ECP¨amëîs
,
d2i_ECP¨amëîs
,x)

	)

367 #i‚de‡
__˝lu•lus


368 #i‡
deföed
(
__SUNPRO_C
)

369 #i‡
__SUNPRO_C
 >= 0x520

370 #¥agm®
îr‹_mesßges
 (,
E_ARRAY_OF_INCOMPLETE_NONAME
,
E_ARRAY_OF_INCOMPLETE
)

379 
ERR_lﬂd_EC_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

384 
	#EC_F_COMPUTE_WNAF
 143

	)

385 
	#EC_F_D2I_ECPARAMETERS
 144

	)

386 
	#EC_F_D2I_ECPKPARAMETERS
 145

	)

387 
	#EC_F_D2I_ECPRIVATEKEY
 146

	)

388 
	#EC_F_ECPARAMETERS_PRINT
 147

	)

389 
	#EC_F_ECPARAMETERS_PRINT_FP
 148

	)

390 
	#EC_F_ECPKPARAMETERS_PRINT
 149

	)

391 
	#EC_F_ECPKPARAMETERS_PRINT_FP
 150

	)

392 
	#EC_F_ECP_NIST_MOD_192
 203

	)

393 
	#EC_F_ECP_NIST_MOD_224
 204

	)

394 
	#EC_F_ECP_NIST_MOD_256
 205

	)

395 
	#EC_F_ECP_NIST_MOD_521
 206

	)

396 
	#EC_F_EC_ASN1_GROUP2CURVE
 153

	)

397 
	#EC_F_EC_ASN1_GROUP2FIELDID
 154

	)

398 
	#EC_F_EC_ASN1_GROUP2PARAMETERS
 155

	)

399 
	#EC_F_EC_ASN1_GROUP2PKPARAMETERS
 156

	)

400 
	#EC_F_EC_ASN1_PARAMETERS2GROUP
 157

	)

401 
	#EC_F_EC_ASN1_PKPARAMETERS2GROUP
 158

	)

402 
	#EC_F_EC_EX_DATA_SET_DATA
 211

	)

403 
	#EC_F_EC_GF2M_MONTGOMERY_POINT_MULTIPLY
 208

	)

404 
	#EC_F_EC_GF2M_SIMPLE_GROUP_CHECK_DISCRIMINANT
 159

	)

405 
	#EC_F_EC_GF2M_SIMPLE_GROUP_SET_CURVE
 195

	)

406 
	#EC_F_EC_GF2M_SIMPLE_OCT2POINT
 160

	)

407 
	#EC_F_EC_GF2M_SIMPLE_POINT2OCT
 161

	)

408 
	#EC_F_EC_GF2M_SIMPLE_POINT_GET_AFFINE_COORDINATES
 162

	)

409 
	#EC_F_EC_GF2M_SIMPLE_POINT_SET_AFFINE_COORDINATES
 163

	)

410 
	#EC_F_EC_GF2M_SIMPLE_SET_COMPRESSED_COORDINATES
 164

	)

411 
	#EC_F_EC_GFP_MONT_FIELD_DECODE
 133

	)

412 
	#EC_F_EC_GFP_MONT_FIELD_ENCODE
 134

	)

413 
	#EC_F_EC_GFP_MONT_FIELD_MUL
 131

	)

414 
	#EC_F_EC_GFP_MONT_FIELD_SET_TO_ONE
 209

	)

415 
	#EC_F_EC_GFP_MONT_FIELD_SQR
 132

	)

416 
	#EC_F_EC_GFP_MONT_GROUP_SET_CURVE
 189

	)

417 
	#EC_F_EC_GFP_MONT_GROUP_SET_CURVE_GFP
 135

	)

418 
	#EC_F_EC_GFP_NIST_FIELD_MUL
 200

	)

419 
	#EC_F_EC_GFP_NIST_FIELD_SQR
 201

	)

420 
	#EC_F_EC_GFP_NIST_GROUP_SET_CURVE
 202

	)

421 
	#EC_F_EC_GFP_SIMPLE_GROUP_CHECK_DISCRIMINANT
 165

	)

422 
	#EC_F_EC_GFP_SIMPLE_GROUP_SET_CURVE
 166

	)

423 
	#EC_F_EC_GFP_SIMPLE_GROUP_SET_CURVE_GFP
 100

	)

424 
	#EC_F_EC_GFP_SIMPLE_GROUP_SET_GENERATOR
 101

	)

425 
	#EC_F_EC_GFP_SIMPLE_MAKE_AFFINE
 102

	)

426 
	#EC_F_EC_GFP_SIMPLE_OCT2POINT
 103

	)

427 
	#EC_F_EC_GFP_SIMPLE_POINT2OCT
 104

	)

428 
	#EC_F_EC_GFP_SIMPLE_POINTS_MAKE_AFFINE
 137

	)

429 
	#EC_F_EC_GFP_SIMPLE_POINT_GET_AFFINE_COORDINATES
 167

	)

430 
	#EC_F_EC_GFP_SIMPLE_POINT_GET_AFFINE_COORDINATES_GFP
 105

	)

431 
	#EC_F_EC_GFP_SIMPLE_POINT_SET_AFFINE_COORDINATES
 168

	)

432 
	#EC_F_EC_GFP_SIMPLE_POINT_SET_AFFINE_COORDINATES_GFP
 128

	)

433 
	#EC_F_EC_GFP_SIMPLE_SET_COMPRESSED_COORDINATES
 169

	)

434 
	#EC_F_EC_GFP_SIMPLE_SET_COMPRESSED_COORDINATES_GFP
 129

	)

435 
	#EC_F_EC_GROUP_CHECK
 170

	)

436 
	#EC_F_EC_GROUP_CHECK_DISCRIMINANT
 171

	)

437 
	#EC_F_EC_GROUP_COPY
 106

	)

438 
	#EC_F_EC_GROUP_GET0_GENERATOR
 139

	)

439 
	#EC_F_EC_GROUP_GET_COFACTOR
 140

	)

440 
	#EC_F_EC_GROUP_GET_CURVE_GF2M
 172

	)

441 
	#EC_F_EC_GROUP_GET_CURVE_GFP
 130

	)

442 
	#EC_F_EC_GROUP_GET_DEGREE
 173

	)

443 
	#EC_F_EC_GROUP_GET_ORDER
 141

	)

444 
	#EC_F_EC_GROUP_GET_PENTANOMIAL_BASIS
 193

	)

445 
	#EC_F_EC_GROUP_GET_TRINOMIAL_BASIS
 194

	)

446 
	#EC_F_EC_GROUP_NEW
 108

	)

447 
	#EC_F_EC_GROUP_NEW_BY_CURVE_NAME
 174

	)

448 
	#EC_F_EC_GROUP_NEW_FROM_DATA
 175

	)

449 
	#EC_F_EC_GROUP_PRECOMPUTE_MULT
 142

	)

450 
	#EC_F_EC_GROUP_SET_CURVE_GF2M
 176

	)

451 
	#EC_F_EC_GROUP_SET_CURVE_GFP
 109

	)

452 
	#EC_F_EC_GROUP_SET_EXTRA_DATA
 110

	)

453 
	#EC_F_EC_GROUP_SET_GENERATOR
 111

	)

454 
	#EC_F_EC_KEY_CHECK_KEY
 177

	)

455 
	#EC_F_EC_KEY_COPY
 178

	)

456 
	#EC_F_EC_KEY_GENERATE_KEY
 179

	)

457 
	#EC_F_EC_KEY_NEW
 182

	)

458 
	#EC_F_EC_KEY_PRINT
 180

	)

459 
	#EC_F_EC_KEY_PRINT_FP
 181

	)

460 
	#EC_F_EC_POINTS_MAKE_AFFINE
 136

	)

461 
	#EC_F_EC_POINTS_MUL
 138

	)

462 
	#EC_F_EC_POINT_ADD
 112

	)

463 
	#EC_F_EC_POINT_CMP
 113

	)

464 
	#EC_F_EC_POINT_COPY
 114

	)

465 
	#EC_F_EC_POINT_DBL
 115

	)

466 
	#EC_F_EC_POINT_GET_AFFINE_COORDINATES_GF2M
 183

	)

467 
	#EC_F_EC_POINT_GET_AFFINE_COORDINATES_GFP
 116

	)

468 
	#EC_F_EC_POINT_GET_JPROJECTIVE_COORDINATES_GFP
 117

	)

469 
	#EC_F_EC_POINT_INVERT
 210

	)

470 
	#EC_F_EC_POINT_IS_AT_INFINITY
 118

	)

471 
	#EC_F_EC_POINT_IS_ON_CURVE
 119

	)

472 
	#EC_F_EC_POINT_MAKE_AFFINE
 120

	)

473 
	#EC_F_EC_POINT_MUL
 184

	)

474 
	#EC_F_EC_POINT_NEW
 121

	)

475 
	#EC_F_EC_POINT_OCT2POINT
 122

	)

476 
	#EC_F_EC_POINT_POINT2OCT
 123

	)

477 
	#EC_F_EC_POINT_SET_AFFINE_COORDINATES_GF2M
 185

	)

478 
	#EC_F_EC_POINT_SET_AFFINE_COORDINATES_GFP
 124

	)

479 
	#EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GF2M
 186

	)

480 
	#EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GFP
 125

	)

481 
	#EC_F_EC_POINT_SET_JPROJECTIVE_COORDINATES_GFP
 126

	)

482 
	#EC_F_EC_POINT_SET_TO_INFINITY
 127

	)

483 
	#EC_F_EC_PRE_COMP_DUP
 207

	)

484 
	#EC_F_EC_PRE_COMP_NEW
 196

	)

485 
	#EC_F_EC_WNAF_MUL
 187

	)

486 
	#EC_F_EC_WNAF_PRECOMPUTE_MULT
 188

	)

487 
	#EC_F_I2D_ECPARAMETERS
 190

	)

488 
	#EC_F_I2D_ECPKPARAMETERS
 191

	)

489 
	#EC_F_I2D_ECPRIVATEKEY
 192

	)

490 
	#EC_F_I2O_ECPUBLICKEY
 151

	)

491 
	#EC_F_O2I_ECPUBLICKEY
 152

	)

494 
	#EC_R_ASN1_ERROR
 115

	)

495 
	#EC_R_ASN1_UNKNOWN_FIELD
 116

	)

496 
	#EC_R_BUFFER_TOO_SMALL
 100

	)

497 
	#EC_R_D2I_ECPKPARAMETERS_FAILURE
 117

	)

498 
	#EC_R_DISCRIMINANT_IS_ZERO
 118

	)

499 
	#EC_R_EC_GROUP_NEW_BY_NAME_FAILURE
 119

	)

500 
	#EC_R_FIELD_TOO_LARGE
 138

	)

501 
	#EC_R_GROUP2PKPARAMETERS_FAILURE
 120

	)

502 
	#EC_R_I2D_ECPKPARAMETERS_FAILURE
 121

	)

503 
	#EC_R_INCOMPATIBLE_OBJECTS
 101

	)

504 
	#EC_R_INVALID_ARGUMENT
 112

	)

505 
	#EC_R_INVALID_COMPRESSED_POINT
 110

	)

506 
	#EC_R_INVALID_COMPRESSION_BIT
 109

	)

507 
	#EC_R_INVALID_ENCODING
 102

	)

508 
	#EC_R_INVALID_FIELD
 103

	)

509 
	#EC_R_INVALID_FORM
 104

	)

510 
	#EC_R_INVALID_GROUP_ORDER
 122

	)

511 
	#EC_R_INVALID_PENTANOMIAL_BASIS
 132

	)

512 
	#EC_R_INVALID_PRIVATE_KEY
 123

	)

513 
	#EC_R_INVALID_TRINOMIAL_BASIS
 137

	)

514 
	#EC_R_MISSING_PARAMETERS
 124

	)

515 
	#EC_R_MISSING_PRIVATE_KEY
 125

	)

516 
	#EC_R_NOT_A_NIST_PRIME
 135

	)

517 
	#EC_R_NOT_A_SUPPORTED_NIST_PRIME
 136

	)

518 
	#EC_R_NOT_IMPLEMENTED
 126

	)

519 
	#EC_R_NOT_INITIALIZED
 111

	)

520 
	#EC_R_NO_FIELD_MOD
 133

	)

521 
	#EC_R_PASSED_NULL_PARAMETER
 134

	)

522 
	#EC_R_PKPARAMETERS2GROUP_FAILURE
 127

	)

523 
	#EC_R_POINT_AT_INFINITY
 106

	)

524 
	#EC_R_POINT_IS_NOT_ON_CURVE
 107

	)

525 
	#EC_R_SLOT_FULL
 108

	)

526 
	#EC_R_UNDEFINED_GENERATOR
 113

	)

527 
	#EC_R_UNDEFINED_ORDER
 128

	)

528 
	#EC_R_UNKNOWN_GROUP
 129

	)

529 
	#EC_R_UNKNOWN_ORDER
 114

	)

530 
	#EC_R_UNSUPPORTED_FIELD
 131

	)

531 
	#EC_R_WRONG_ORDER
 130

	)

533 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/lhash.h

63 #i‚de‡
HEADER_LHASH_H


64 
	#HEADER_LHASH_H


	)

66 
	~<AvaûabûôyMa¸os.h
>

68 
	~<›ís¶/e_os2.h
>

69 #i‚de‡
OPENSSL_NO_FP_API


70 
	~<°dio.h
>

73 #i‚de‡
OPENSSL_NO_BIO


74 
	~<›ís¶/bio.h
>

77 #ifde‡ 
__˝lu•lus


81 
	slhash_node_°


83 *
d©a
;

84 
lhash_node_°
 *
√xt
;

85 #i‚de‡
OPENSSL_NO_HASH_COMP


86 
hash
;

88 } 
	tLHASH_NODE
;

90 (*
LHASH_COMP_FN_TYPE
)(const *, const *);

91 (*
	tLHASH_HASH_FN_TYPE
)(const *);

92 (*
LHASH_DOALL_FN_TYPE
)(*);

93 (*
LHASH_DOALL_ARG_FN_TYPE
)(*, *);

103 
	#DECLARE_LHASH_HASH_FN
(
f_«me
,
o_ty≥
) \

104 
f_«me
##
	`_LHASH_HASH
(c⁄° *);

	)

105 
	#IMPLEMENT_LHASH_HASH_FN
(
f_«me
,
o_ty≥
) \

106 
f_«me
##
	`_LHASH_HASH
(c⁄° *
¨g
) { \

107 
o_ty≥
 
a
 = (o_ty≥)
¨g
; \

108  
	`f_«me
(
a
); }

	)

109 
	#LHASH_HASH_FN
(
f_«me
Ëf_«me##
_LHASH_HASH


	)

112 
	#DECLARE_LHASH_COMP_FN
(
f_«me
,
o_ty≥
) \

113 
f_«me
##
	`_LHASH_COMP
(c⁄° *, c⁄° *);

	)

114 
	#IMPLEMENT_LHASH_COMP_FN
(
f_«me
,
o_ty≥
) \

115 
f_«me
##
	`_LHASH_COMP
(c⁄° *
¨g1
, c⁄° *
¨g2
) { \

116 
o_ty≥
 
a
 = (o_ty≥)
¨g1
; \

117 
o_ty≥
 
b
 = (o_ty≥)
¨g2
; \

118  
	`f_«me
(
a
,
b
); }

	)

119 
	#LHASH_COMP_FN
(
f_«me
Ëf_«me##
_LHASH_COMP


	)

122 
	#DECLARE_LHASH_DOALL_FN
(
f_«me
,
o_ty≥
) \

123 
f_«me
##
	`_LHASH_DOALL
(*);

	)

124 
	#IMPLEMENT_LHASH_DOALL_FN
(
f_«me
,
o_ty≥
) \

125 
f_«me
##
	`_LHASH_DOALL
(*
¨g
) { \

126 
o_ty≥
 
a
 = (o_ty≥)
¨g
; \

127 
	`f_«me
(
a
); }

	)

128 
	#LHASH_DOALL_FN
(
f_«me
Ëf_«me##
_LHASH_DOALL


	)

131 
	#DECLARE_LHASH_DOALL_ARG_FN
(
f_«me
,
o_ty≥
,
a_ty≥
) \

132 
f_«me
##
	`_LHASH_DOALL_ARG
(*, *);

	)

133 
	#IMPLEMENT_LHASH_DOALL_ARG_FN
(
f_«me
,
o_ty≥
,
a_ty≥
) \

134 
f_«me
##
	`_LHASH_DOALL_ARG
(*
¨g1
, *
¨g2
) { \

135 
o_ty≥
 
a
 = (o_ty≥)
¨g1
; \

136 
a_ty≥
 
b
 = (a_ty≥)
¨g2
; \

137 
	`f_«me
(
a
,
b
); }

	)

138 
	#LHASH_DOALL_ARG_FN
(
f_«me
Ëf_«me##
_LHASH_DOALL_ARG


	)

140 
	slhash_°


142 
LHASH_NODE
 **
b
;

143 
LHASH_COMP_FN_TYPE
 
comp
;

144 
LHASH_HASH_FN_TYPE
 
hash
;

145 
num_nodes
;

146 
num_Æloc_nodes
;

147 
p
;

148 
pmax
;

149 
up_lﬂd
;

150 
down_lﬂd
;

151 
num_ôems
;

153 
num_ex∑nds
;

154 
num_ex∑nd_ªÆlocs
;

155 
num_c⁄åa˘s
;

156 
num_c⁄åa˘_ªÆlocs
;

157 
num_hash_ˇŒs
;

158 
num_comp_ˇŒs
;

159 
num_ö£π
;

160 
num_ª∂a˚
;

161 
num_dñëe
;

162 
num_no_dñëe
;

163 
num_ªåõve
;

164 
num_ªåõve_miss
;

165 
num_hash_comps
;

167 
îr‹
;

168 } 
	tLHASH
;

170 
	#LH_LOAD_MULT
 256

	)

174 
	#lh_îr‹
(
lh
Ë(÷h)->
îr‹
)

	)

176 
LHASH
 *
lh_√w
(
LHASH_HASH_FN_TYPE
 
h
, 
LHASH_COMP_FN_TYPE
 
c
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

177 
lh_‰ì
(
LHASH
 *
lh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

178 *
lh_ö£π
(
LHASH
 *
lh
, *
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

179 *
lh_dñëe
(
LHASH
 *
lh
, c⁄° *
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

180 *
lh_ªåõve
(
LHASH
 *
lh
, c⁄° *
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

181 
lh_dﬂŒ
(
LHASH
 *
lh
, 
LHASH_DOALL_FN_TYPE
 
func
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

182 
lh_dﬂŒ_¨g
(
LHASH
 *
lh
, 
LHASH_DOALL_ARG_FN_TYPE
 
func
, *
¨g
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

183 
lh_°rhash
(c⁄° *
c
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

184 
lh_num_ôems
(c⁄° 
LHASH
 *
lh
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

186 #i‚de‡
OPENSSL_NO_FP_API


187 
lh_°©s
(c⁄° 
LHASH
 *
lh
, 
FILE
 *
out
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

188 
lh_node_°©s
(c⁄° 
LHASH
 *
lh
, 
FILE
 *
out
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

189 
lh_node_ußge_°©s
(c⁄° 
LHASH
 *
lh
, 
FILE
 *
out
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

192 #i‚de‡
OPENSSL_NO_BIO


193 
lh_°©s_bio
(c⁄° 
LHASH
 *
lh
, 
BIO
 *
out
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

194 
lh_node_°©s_bio
(c⁄° 
LHASH
 *
lh
, 
BIO
 *
out
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

195 
lh_node_ußge_°©s_bio
(c⁄° 
LHASH
 *
lh
, 
BIO
 *
out
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

197 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/objects.h

59 #i‚de‡
HEADER_OBJECTS_H


60 
	#HEADER_OBJECTS_H


	)

62 
	~<AvaûabûôyMa¸os.h
>

64 
	#USE_OBJ_MAC


	)

66 #ifde‡
USE_OBJ_MAC


67 
	~<›ís¶/obj_mac.h
>

69 
	#SN_undef
 "UNDEF"

	)

70 
	#LN_undef
 "undeföed"

	)

71 
	#NID_undef
 0

	)

72 
	#OBJ_undef
 0L

	)

74 
	#SN_Alg‹ôhm
 "Alg‹ôhm"

	)

75 
	#LN_Æg‹ôhm
 "Æg‹ôhm"

	)

76 
	#NID_Æg‹ôhm
 38

	)

77 
	#OBJ_Æg‹ôhm
 1L,3L,14L,3L,2L

	)

79 
	#LN_rßdsi
 "rßdsi"

	)

80 
	#NID_rßdsi
 1

	)

81 
	#OBJ_rßdsi
 1L,2L,840L,113549L

	)

83 
	#LN_pkcs
 "pkcs"

	)

84 
	#NID_pkcs
 2

	)

85 
	#OBJ_pkcs
 
OBJ_rßdsi
,1L

	)

87 
	#SN_md2
 "MD2"

	)

88 
	#LN_md2
 "md2"

	)

89 
	#NID_md2
 3

	)

90 
	#OBJ_md2
 
OBJ_rßdsi
,2L,2L

	)

92 
	#SN_md5
 "MD5"

	)

93 
	#LN_md5
 "md5"

	)

94 
	#NID_md5
 4

	)

95 
	#OBJ_md5
 
OBJ_rßdsi
,2L,5L

	)

97 
	#SN_rc4
 "RC4"

	)

98 
	#LN_rc4
 "rc4"

	)

99 
	#NID_rc4
 5

	)

100 
	#OBJ_rc4
 
OBJ_rßdsi
,3L,4L

	)

102 
	#LN_rßEn¸y±i⁄
 "rßEn¸y±i⁄"

	)

103 
	#NID_rßEn¸y±i⁄
 6

	)

104 
	#OBJ_rßEn¸y±i⁄
 
OBJ_pkcs
,1L,1L

	)

106 
	#SN_md2WôhRSAEn¸y±i⁄
 "RSA-MD2"

	)

107 
	#LN_md2WôhRSAEn¸y±i⁄
 "md2WôhRSAEn¸y±i⁄"

	)

108 
	#NID_md2WôhRSAEn¸y±i⁄
 7

	)

109 
	#OBJ_md2WôhRSAEn¸y±i⁄
 
OBJ_pkcs
,1L,2L

	)

111 
	#SN_md5WôhRSAEn¸y±i⁄
 "RSA-MD5"

	)

112 
	#LN_md5WôhRSAEn¸y±i⁄
 "md5WôhRSAEn¸y±i⁄"

	)

113 
	#NID_md5WôhRSAEn¸y±i⁄
 8

	)

114 
	#OBJ_md5WôhRSAEn¸y±i⁄
 
OBJ_pkcs
,1L,4L

	)

116 
	#SN_pbeWôhMD2AndDES_CBC
 "PBE-MD2-DES"

	)

117 
	#LN_pbeWôhMD2AndDES_CBC
 "pbeWôhMD2AndDES-CBC"

	)

118 
	#NID_pbeWôhMD2AndDES_CBC
 9

	)

119 
	#OBJ_pbeWôhMD2AndDES_CBC
 
OBJ_pkcs
,5L,1L

	)

121 
	#SN_pbeWôhMD5AndDES_CBC
 "PBE-MD5-DES"

	)

122 
	#LN_pbeWôhMD5AndDES_CBC
 "pbeWôhMD5AndDES-CBC"

	)

123 
	#NID_pbeWôhMD5AndDES_CBC
 10

	)

124 
	#OBJ_pbeWôhMD5AndDES_CBC
 
OBJ_pkcs
,5L,3L

	)

126 
	#LN_X500
 "X500"

	)

127 
	#NID_X500
 11

	)

128 
	#OBJ_X500
 2L,5L

	)

130 
	#LN_X509
 "X509"

	)

131 
	#NID_X509
 12

	)

132 
	#OBJ_X509
 
OBJ_X500
,4L

	)

134 
	#SN_comm⁄Name
 "CN"

	)

135 
	#LN_comm⁄Name
 "comm⁄Name"

	)

136 
	#NID_comm⁄Name
 13

	)

137 
	#OBJ_comm⁄Name
 
OBJ_X509
,3L

	)

139 
	#SN_cou¡ryName
 "C"

	)

140 
	#LN_cou¡ryName
 "cou¡ryName"

	)

141 
	#NID_cou¡ryName
 14

	)

142 
	#OBJ_cou¡ryName
 
OBJ_X509
,6L

	)

144 
	#SN_loˇlôyName
 "L"

	)

145 
	#LN_loˇlôyName
 "loˇlôyName"

	)

146 
	#NID_loˇlôyName
 15

	)

147 
	#OBJ_loˇlôyName
 
OBJ_X509
,7L

	)

152 
	#SN_°©eOrProvö˚Name
 "ST"

	)

153 
	#LN_°©eOrProvö˚Name
 "°©eOrProvö˚Name"

	)

154 
	#NID_°©eOrProvö˚Name
 16

	)

155 
	#OBJ_°©eOrProvö˚Name
 
OBJ_X509
,8L

	)

157 
	#SN_‹g™iz©i⁄Name
 "O"

	)

158 
	#LN_‹g™iz©i⁄Name
 "‹g™iz©i⁄Name"

	)

159 
	#NID_‹g™iz©i⁄Name
 17

	)

160 
	#OBJ_‹g™iz©i⁄Name
 
OBJ_X509
,10L

	)

162 
	#SN_‹g™iz©i⁄ÆUnôName
 "OU"

	)

163 
	#LN_‹g™iz©i⁄ÆUnôName
 "‹g™iz©i⁄ÆUnôName"

	)

164 
	#NID_‹g™iz©i⁄ÆUnôName
 18

	)

165 
	#OBJ_‹g™iz©i⁄ÆUnôName
 
OBJ_X509
,11L

	)

167 
	#SN_rß
 "RSA"

	)

168 
	#LN_rß
 "rß"

	)

169 
	#NID_rß
 19

	)

170 
	#OBJ_rß
 
OBJ_X500
,8L,1L,1L

	)

172 
	#LN_pkcs7
 "pkcs7"

	)

173 
	#NID_pkcs7
 20

	)

174 
	#OBJ_pkcs7
 
OBJ_pkcs
,7L

	)

176 
	#LN_pkcs7_d©a
 "pkcs7-d©a"

	)

177 
	#NID_pkcs7_d©a
 21

	)

178 
	#OBJ_pkcs7_d©a
 
OBJ_pkcs7
,1L

	)

180 
	#LN_pkcs7_sig√d
 "pkcs7-sig√dD©a"

	)

181 
	#NID_pkcs7_sig√d
 22

	)

182 
	#OBJ_pkcs7_sig√d
 
OBJ_pkcs7
,2L

	)

184 
	#LN_pkcs7_ívñ›ed
 "pkcs7-ívñ›edD©a"

	)

185 
	#NID_pkcs7_ívñ›ed
 23

	)

186 
	#OBJ_pkcs7_ívñ›ed
 
OBJ_pkcs7
,3L

	)

188 
	#LN_pkcs7_sig√dAndEnvñ›ed
 "pkcs7-sig√dAndEnvñ›edD©a"

	)

189 
	#NID_pkcs7_sig√dAndEnvñ›ed
 24

	)

190 
	#OBJ_pkcs7_sig√dAndEnvñ›ed
 
OBJ_pkcs7
,4L

	)

192 
	#LN_pkcs7_dige°
 "pkcs7-dige°D©a"

	)

193 
	#NID_pkcs7_dige°
 25

	)

194 
	#OBJ_pkcs7_dige°
 
OBJ_pkcs7
,5L

	)

196 
	#LN_pkcs7_í¸y±ed
 "pkcs7-í¸y±edD©a"

	)

197 
	#NID_pkcs7_í¸y±ed
 26

	)

198 
	#OBJ_pkcs7_í¸y±ed
 
OBJ_pkcs7
,6L

	)

200 
	#LN_pkcs3
 "pkcs3"

	)

201 
	#NID_pkcs3
 27

	)

202 
	#OBJ_pkcs3
 
OBJ_pkcs
,3L

	)

204 
	#LN_dhKeyAgªemít
 "dhKeyAgªemít"

	)

205 
	#NID_dhKeyAgªemít
 28

	)

206 
	#OBJ_dhKeyAgªemít
 
OBJ_pkcs3
,1L

	)

208 
	#SN_des_ecb
 "DES-ECB"

	)

209 
	#LN_des_ecb
 "des-ecb"

	)

210 
	#NID_des_ecb
 29

	)

211 
	#OBJ_des_ecb
 
OBJ_Æg‹ôhm
,6L

	)

213 
	#SN_des_cfb64
 "DES-CFB"

	)

214 
	#LN_des_cfb64
 "des-cfb"

	)

215 
	#NID_des_cfb64
 30

	)

217 
	#OBJ_des_cfb64
 
OBJ_Æg‹ôhm
,9L

	)

219 
	#SN_des_cbc
 "DES-CBC"

	)

220 
	#LN_des_cbc
 "des-cbc"

	)

221 
	#NID_des_cbc
 31

	)

223 
	#OBJ_des_cbc
 
OBJ_Æg‹ôhm
,7L

	)

225 
	#SN_des_ede
 "DES-EDE"

	)

226 
	#LN_des_ede
 "des-ede"

	)

227 
	#NID_des_ede
 32

	)

229 
	#OBJ_des_ede
 
OBJ_Æg‹ôhm
,17L

	)

231 
	#SN_des_ede3
 "DES-EDE3"

	)

232 
	#LN_des_ede3
 "des-ede3"

	)

233 
	#NID_des_ede3
 33

	)

235 
	#SN_idó_cbc
 "IDEA-CBC"

	)

236 
	#LN_idó_cbc
 "idó-cbc"

	)

237 
	#NID_idó_cbc
 34

	)

238 
	#OBJ_idó_cbc
 1L,3L,6L,1L,4L,1L,188L,7L,1L,1L,2L

	)

240 
	#SN_idó_cfb64
 "IDEA-CFB"

	)

241 
	#LN_idó_cfb64
 "idó-cfb"

	)

242 
	#NID_idó_cfb64
 35

	)

244 
	#SN_idó_ecb
 "IDEA-ECB"

	)

245 
	#LN_idó_ecb
 "idó-ecb"

	)

246 
	#NID_idó_ecb
 36

	)

248 
	#SN_rc2_cbc
 "RC2-CBC"

	)

249 
	#LN_rc2_cbc
 "rc2-cbc"

	)

250 
	#NID_rc2_cbc
 37

	)

251 
	#OBJ_rc2_cbc
 
OBJ_rßdsi
,3L,2L

	)

253 
	#SN_rc2_ecb
 "RC2-ECB"

	)

254 
	#LN_rc2_ecb
 "rc2-ecb"

	)

255 
	#NID_rc2_ecb
 38

	)

257 
	#SN_rc2_cfb64
 "RC2-CFB"

	)

258 
	#LN_rc2_cfb64
 "rc2-cfb"

	)

259 
	#NID_rc2_cfb64
 39

	)

261 
	#SN_rc2_ofb64
 "RC2-OFB"

	)

262 
	#LN_rc2_ofb64
 "rc2-ofb"

	)

263 
	#NID_rc2_ofb64
 40

	)

265 
	#SN_sha
 "SHA"

	)

266 
	#LN_sha
 "sha"

	)

267 
	#NID_sha
 41

	)

268 
	#OBJ_sha
 
OBJ_Æg‹ôhm
,18L

	)

270 
	#SN_shaWôhRSAEn¸y±i⁄
 "RSA-SHA"

	)

271 
	#LN_shaWôhRSAEn¸y±i⁄
 "shaWôhRSAEn¸y±i⁄"

	)

272 
	#NID_shaWôhRSAEn¸y±i⁄
 42

	)

273 
	#OBJ_shaWôhRSAEn¸y±i⁄
 
OBJ_Æg‹ôhm
,15L

	)

275 
	#SN_des_ede_cbc
 "DES-EDE-CBC"

	)

276 
	#LN_des_ede_cbc
 "des-ede-cbc"

	)

277 
	#NID_des_ede_cbc
 43

	)

279 
	#SN_des_ede3_cbc
 "DES-EDE3-CBC"

	)

280 
	#LN_des_ede3_cbc
 "des-ede3-cbc"

	)

281 
	#NID_des_ede3_cbc
 44

	)

282 
	#OBJ_des_ede3_cbc
 
OBJ_rßdsi
,3L,7L

	)

284 
	#SN_des_ofb64
 "DES-OFB"

	)

285 
	#LN_des_ofb64
 "des-ofb"

	)

286 
	#NID_des_ofb64
 45

	)

287 
	#OBJ_des_ofb64
 
OBJ_Æg‹ôhm
,8L

	)

289 
	#SN_idó_ofb64
 "IDEA-OFB"

	)

290 
	#LN_idó_ofb64
 "idó-ofb"

	)

291 
	#NID_idó_ofb64
 46

	)

293 
	#LN_pkcs9
 "pkcs9"

	)

294 
	#NID_pkcs9
 47

	)

295 
	#OBJ_pkcs9
 
OBJ_pkcs
,9L

	)

297 
	#SN_pkcs9_emaûAddªss
 "Emaû"

	)

298 
	#LN_pkcs9_emaûAddªss
 "emaûAddªss"

	)

299 
	#NID_pkcs9_emaûAddªss
 48

	)

300 
	#OBJ_pkcs9_emaûAddªss
 
OBJ_pkcs9
,1L

	)

302 
	#LN_pkcs9_un°ru˘uªdName
 "un°ru˘uªdName"

	)

303 
	#NID_pkcs9_un°ru˘uªdName
 49

	)

304 
	#OBJ_pkcs9_un°ru˘uªdName
 
OBJ_pkcs9
,2L

	)

306 
	#LN_pkcs9_c⁄ã¡Ty≥
 "c⁄ã¡Ty≥"

	)

307 
	#NID_pkcs9_c⁄ã¡Ty≥
 50

	)

308 
	#OBJ_pkcs9_c⁄ã¡Ty≥
 
OBJ_pkcs9
,3L

	)

310 
	#LN_pkcs9_mesßgeDige°
 "mesßgeDige°"

	)

311 
	#NID_pkcs9_mesßgeDige°
 51

	)

312 
	#OBJ_pkcs9_mesßgeDige°
 
OBJ_pkcs9
,4L

	)

314 
	#LN_pkcs9_signögTime
 "signögTime"

	)

315 
	#NID_pkcs9_signögTime
 52

	)

316 
	#OBJ_pkcs9_signögTime
 
OBJ_pkcs9
,5L

	)

318 
	#LN_pkcs9_cou¡îsig«tuª
 "cou¡îsig«tuª"

	)

319 
	#NID_pkcs9_cou¡îsig«tuª
 53

	)

320 
	#OBJ_pkcs9_cou¡îsig«tuª
 
OBJ_pkcs9
,6L

	)

322 
	#LN_pkcs9_chÆÀngePassw‹d
 "chÆÀngePassw‹d"

	)

323 
	#NID_pkcs9_chÆÀngePassw‹d
 54

	)

324 
	#OBJ_pkcs9_chÆÀngePassw‹d
 
OBJ_pkcs9
,7L

	)

326 
	#LN_pkcs9_un°ru˘uªdAddªss
 "un°ru˘uªdAddªss"

	)

327 
	#NID_pkcs9_un°ru˘uªdAddªss
 55

	)

328 
	#OBJ_pkcs9_un°ru˘uªdAddªss
 
OBJ_pkcs9
,8L

	)

330 
	#LN_pkcs9_extCîtAâribuãs
 "exãndedCîtifiˇãAâribuãs"

	)

331 
	#NID_pkcs9_extCîtAâribuãs
 56

	)

332 
	#OBJ_pkcs9_extCîtAâribuãs
 
OBJ_pkcs9
,9L

	)

334 
	#SN_√tsˇ≥
 "Nësˇ≥"

	)

335 
	#LN_√tsˇ≥
 "Nësˇ≥ Communiˇti⁄†C‹p."

	)

336 
	#NID_√tsˇ≥
 57

	)

337 
	#OBJ_√tsˇ≥
 2L,16L,840L,1L,113730L

	)

339 
	#SN_√tsˇ≥_˚π_exãnsi⁄
 "nsCîtExt"

	)

340 
	#LN_√tsˇ≥_˚π_exãnsi⁄
 "Nësˇ≥ Cîtifiˇã Exãnsi⁄"

	)

341 
	#NID_√tsˇ≥_˚π_exãnsi⁄
 58

	)

342 
	#OBJ_√tsˇ≥_˚π_exãnsi⁄
 
OBJ_√tsˇ≥
,1L

	)

344 
	#SN_√tsˇ≥_d©a_ty≥
 "nsD©aTy≥"

	)

345 
	#LN_√tsˇ≥_d©a_ty≥
 "Nësˇ≥ D©®Ty≥"

	)

346 
	#NID_√tsˇ≥_d©a_ty≥
 59

	)

347 
	#OBJ_√tsˇ≥_d©a_ty≥
 
OBJ_√tsˇ≥
,2L

	)

349 
	#SN_des_ede_cfb64
 "DES-EDE-CFB"

	)

350 
	#LN_des_ede_cfb64
 "des-ede-cfb"

	)

351 
	#NID_des_ede_cfb64
 60

	)

353 
	#SN_des_ede3_cfb64
 "DES-EDE3-CFB"

	)

354 
	#LN_des_ede3_cfb64
 "des-ede3-cfb"

	)

355 
	#NID_des_ede3_cfb64
 61

	)

357 
	#SN_des_ede_ofb64
 "DES-EDE-OFB"

	)

358 
	#LN_des_ede_ofb64
 "des-ede-ofb"

	)

359 
	#NID_des_ede_ofb64
 62

	)

361 
	#SN_des_ede3_ofb64
 "DES-EDE3-OFB"

	)

362 
	#LN_des_ede3_ofb64
 "des-ede3-ofb"

	)

363 
	#NID_des_ede3_ofb64
 63

	)

366 
	#SN_sha1
 "SHA1"

	)

367 
	#LN_sha1
 "sha1"

	)

368 
	#NID_sha1
 64

	)

369 
	#OBJ_sha1
 
OBJ_Æg‹ôhm
,26L

	)

373 
	#SN_sha1WôhRSAEn¸y±i⁄
 "RSA-SHA1"

	)

374 
	#LN_sha1WôhRSAEn¸y±i⁄
 "sha1WôhRSAEn¸y±i⁄"

	)

375 
	#NID_sha1WôhRSAEn¸y±i⁄
 65

	)

376 
	#OBJ_sha1WôhRSAEn¸y±i⁄
 
OBJ_pkcs
,1L,5L

	)

378 
	#SN_dßWôhSHA
 "DSA-SHA"

	)

379 
	#LN_dßWôhSHA
 "dßWôhSHA"

	)

380 
	#NID_dßWôhSHA
 66

	)

381 
	#OBJ_dßWôhSHA
 
OBJ_Æg‹ôhm
,13L

	)

383 
	#SN_dß_2
 "DSA-ﬁd"

	)

384 
	#LN_dß_2
 "dßEn¸y±i⁄-ﬁd"

	)

385 
	#NID_dß_2
 67

	)

386 
	#OBJ_dß_2
 
OBJ_Æg‹ôhm
,12L

	)

389 
	#SN_pbeWôhSHA1AndRC2_CBC
 "PBE-SHA1-RC2-64"

	)

390 
	#LN_pbeWôhSHA1AndRC2_CBC
 "pbeWôhSHA1AndRC2-CBC"

	)

391 
	#NID_pbeWôhSHA1AndRC2_CBC
 68

	)

392 
	#OBJ_pbeWôhSHA1AndRC2_CBC
 
OBJ_pkcs
,5L,11L

	)

398 
	#LN_id_pbkdf2
 "PBKDF2"

	)

399 
	#NID_id_pbkdf2
 69

	)

400 
	#OBJ_id_pbkdf2
 
OBJ_pkcs
,5L,12L

	)

402 
	#SN_dßWôhSHA1_2
 "DSA-SHA1-ﬁd"

	)

403 
	#LN_dßWôhSHA1_2
 "dßWôhSHA1-ﬁd"

	)

404 
	#NID_dßWôhSHA1_2
 70

	)

406 
	#OBJ_dßWôhSHA1_2
 
OBJ_Æg‹ôhm
,27L

	)

408 
	#SN_√tsˇ≥_˚π_ty≥
 "nsCîtTy≥"

	)

409 
	#LN_√tsˇ≥_˚π_ty≥
 "Nësˇ≥ CîàTy≥"

	)

410 
	#NID_√tsˇ≥_˚π_ty≥
 71

	)

411 
	#OBJ_√tsˇ≥_˚π_ty≥
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,1L

	)

413 
	#SN_√tsˇ≥_ba£_uæ
 "nsBa£Uæ"

	)

414 
	#LN_√tsˇ≥_ba£_uæ
 "Nësˇ≥ Ba£ Uæ"

	)

415 
	#NID_√tsˇ≥_ba£_uæ
 72

	)

416 
	#OBJ_√tsˇ≥_ba£_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,2L

	)

418 
	#SN_√tsˇ≥_ªvoˇti⁄_uæ
 "nsRevoˇti⁄Uæ"

	)

419 
	#LN_√tsˇ≥_ªvoˇti⁄_uæ
 "Nësˇ≥ Revoˇti⁄ Uæ"

	)

420 
	#NID_√tsˇ≥_ªvoˇti⁄_uæ
 73

	)

421 
	#OBJ_√tsˇ≥_ªvoˇti⁄_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,3L

	)

423 
	#SN_√tsˇ≥_ˇ_ªvoˇti⁄_uæ
 "nsCaRevoˇti⁄Uæ"

	)

424 
	#LN_√tsˇ≥_ˇ_ªvoˇti⁄_uæ
 "Nësˇ≥ CA Revoˇti⁄ Uæ"

	)

425 
	#NID_√tsˇ≥_ˇ_ªvoˇti⁄_uæ
 74

	)

426 
	#OBJ_√tsˇ≥_ˇ_ªvoˇti⁄_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,4L

	)

428 
	#SN_√tsˇ≥_ª√wÆ_uæ
 "nsRíewÆUæ"

	)

429 
	#LN_√tsˇ≥_ª√wÆ_uæ
 "Nësˇ≥ RíewÆ Uæ"

	)

430 
	#NID_√tsˇ≥_ª√wÆ_uæ
 75

	)

431 
	#OBJ_√tsˇ≥_ª√wÆ_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,7L

	)

433 
	#SN_√tsˇ≥_ˇ_pﬁicy_uæ
 "nsCaPﬁicyUæ"

	)

434 
	#LN_√tsˇ≥_ˇ_pﬁicy_uæ
 "Nësˇ≥ CA Pﬁicy Uæ"

	)

435 
	#NID_√tsˇ≥_ˇ_pﬁicy_uæ
 76

	)

436 
	#OBJ_√tsˇ≥_ˇ_pﬁicy_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,8L

	)

438 
	#SN_√tsˇ≥_s¶_£rvî_«me
 "nsS¶SîvîName"

	)

439 
	#LN_√tsˇ≥_s¶_£rvî_«me
 "Nësˇ≥ SSL Sîvî Name"

	)

440 
	#NID_√tsˇ≥_s¶_£rvî_«me
 77

	)

441 
	#OBJ_√tsˇ≥_s¶_£rvî_«me
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,12L

	)

443 
	#SN_√tsˇ≥_commít
 "nsCommít"

	)

444 
	#LN_√tsˇ≥_commít
 "Nësˇ≥ Commít"

	)

445 
	#NID_√tsˇ≥_commít
 78

	)

446 
	#OBJ_√tsˇ≥_commít
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,13L

	)

448 
	#SN_√tsˇ≥_˚π_£quí˚
 "nsCîtSequí˚"

	)

449 
	#LN_√tsˇ≥_˚π_£quí˚
 "Nësˇ≥ Cîtifiˇã Sequí˚"

	)

450 
	#NID_√tsˇ≥_˚π_£quí˚
 79

	)

451 
	#OBJ_√tsˇ≥_˚π_£quí˚
 
OBJ_√tsˇ≥_d©a_ty≥
,5L

	)

453 
	#SN_desx_cbc
 "DESX-CBC"

	)

454 
	#LN_desx_cbc
 "desx-cbc"

	)

455 
	#NID_desx_cbc
 80

	)

457 
	#SN_id_˚
 "id-˚"

	)

458 
	#NID_id_˚
 81

	)

459 
	#OBJ_id_˚
 2L,5L,29L

	)

461 
	#SN_subje˘_key_idítifõr
 "subje˘KeyIdítifõr"

	)

462 
	#LN_subje˘_key_idítifõr
 "X509v3 Subje˘ Key Idítifõr"

	)

463 
	#NID_subje˘_key_idítifõr
 82

	)

464 
	#OBJ_subje˘_key_idítifõr
 
OBJ_id_˚
,14L

	)

466 
	#SN_key_ußge
 "keyUßge"

	)

467 
	#LN_key_ußge
 "X509v3 Key Ußge"

	)

468 
	#NID_key_ußge
 83

	)

469 
	#OBJ_key_ußge
 
OBJ_id_˚
,15L

	)

471 
	#SN_¥iv©e_key_ußge_≥riod
 "¥iv©eKeyUßgePîiod"

	)

472 
	#LN_¥iv©e_key_ußge_≥riod
 "X509v3 Priv©êKey UßgêPîiod"

	)

473 
	#NID_¥iv©e_key_ußge_≥riod
 84

	)

474 
	#OBJ_¥iv©e_key_ußge_≥riod
 
OBJ_id_˚
,16L

	)

476 
	#SN_subje˘_Æt_«me
 "subje˘A…Name"

	)

477 
	#LN_subje˘_Æt_«me
 "X509v3 Subje˘ A…î«tivêName"

	)

478 
	#NID_subje˘_Æt_«me
 85

	)

479 
	#OBJ_subje˘_Æt_«me
 
OBJ_id_˚
,17L

	)

481 
	#SN_issuî_Æt_«me
 "issuîA…Name"

	)

482 
	#LN_issuî_Æt_«me
 "X509v3 Issuî A…î«tivêName"

	)

483 
	#NID_issuî_Æt_«me
 86

	)

484 
	#OBJ_issuî_Æt_«me
 
OBJ_id_˚
,18L

	)

486 
	#SN_basic_c⁄°øöts
 "basicC⁄°øöts"

	)

487 
	#LN_basic_c⁄°øöts
 "X509v3 Basi¯C⁄°øöts"

	)

488 
	#NID_basic_c⁄°øöts
 87

	)

489 
	#OBJ_basic_c⁄°øöts
 
OBJ_id_˚
,19L

	)

491 
	#SN_¸l_numbî
 "¸lNumbî"

	)

492 
	#LN_¸l_numbî
 "X509v3 CRL Numbî"

	)

493 
	#NID_¸l_numbî
 88

	)

494 
	#OBJ_¸l_numbî
 
OBJ_id_˚
,20L

	)

496 
	#SN_˚πifiˇã_pﬁicõs
 "˚πifiˇãPﬁicõs"

	)

497 
	#LN_˚πifiˇã_pﬁicõs
 "X509v3 Cîtifiˇã Pﬁicõs"

	)

498 
	#NID_˚πifiˇã_pﬁicõs
 89

	)

499 
	#OBJ_˚πifiˇã_pﬁicõs
 
OBJ_id_˚
,32L

	)

501 
	#SN_auth‹ôy_key_idítifõr
 "auth‹ôyKeyIdítifõr"

	)

502 
	#LN_auth‹ôy_key_idítifõr
 "X509v3 Auth‹ôy Key Idítifõr"

	)

503 
	#NID_auth‹ôy_key_idítifõr
 90

	)

504 
	#OBJ_auth‹ôy_key_idítifõr
 
OBJ_id_˚
,35L

	)

506 
	#SN_bf_cbc
 "BF-CBC"

	)

507 
	#LN_bf_cbc
 "bf-cbc"

	)

508 
	#NID_bf_cbc
 91

	)

509 
	#OBJ_bf_cbc
 1L,3L,6L,1L,4L,1L,3029L,1L,2L

	)

511 
	#SN_bf_ecb
 "BF-ECB"

	)

512 
	#LN_bf_ecb
 "bf-ecb"

	)

513 
	#NID_bf_ecb
 92

	)

515 
	#SN_bf_cfb64
 "BF-CFB"

	)

516 
	#LN_bf_cfb64
 "bf-cfb"

	)

517 
	#NID_bf_cfb64
 93

	)

519 
	#SN_bf_ofb64
 "BF-OFB"

	)

520 
	#LN_bf_ofb64
 "bf-ofb"

	)

521 
	#NID_bf_ofb64
 94

	)

523 
	#SN_mdc2
 "MDC2"

	)

524 
	#LN_mdc2
 "mdc2"

	)

525 
	#NID_mdc2
 95

	)

526 
	#OBJ_mdc2
 2L,5L,8L,3L,101L

	)

529 
	#SN_mdc2WôhRSA
 "RSA-MDC2"

	)

530 
	#LN_mdc2WôhRSA
 "mdc2wôhRSA"

	)

531 
	#NID_mdc2WôhRSA
 96

	)

532 
	#OBJ_mdc2WôhRSA
 2L,5L,8L,3L,100L

	)

534 
	#SN_rc4_40
 "RC4-40"

	)

535 
	#LN_rc4_40
 "rc4-40"

	)

536 
	#NID_rc4_40
 97

	)

538 
	#SN_rc2_40_cbc
 "RC2-40-CBC"

	)

539 
	#LN_rc2_40_cbc
 "rc2-40-cbc"

	)

540 
	#NID_rc2_40_cbc
 98

	)

542 
	#SN_givíName
 "G"

	)

543 
	#LN_givíName
 "givíName"

	)

544 
	#NID_givíName
 99

	)

545 
	#OBJ_givíName
 
OBJ_X509
,42L

	)

547 
	#SN_su∫ame
 "S"

	)

548 
	#LN_su∫ame
 "su∫ame"

	)

549 
	#NID_su∫ame
 100

	)

550 
	#OBJ_su∫ame
 
OBJ_X509
,4L

	)

552 
	#SN_öôüls
 "I"

	)

553 
	#LN_öôüls
 "öôüls"

	)

554 
	#NID_öôüls
 101

	)

555 
	#OBJ_öôüls
 
OBJ_X509
,43L

	)

557 
	#SN_uniqueIdítifõr
 "UID"

	)

558 
	#LN_uniqueIdítifõr
 "uniqueIdítifõr"

	)

559 
	#NID_uniqueIdítifõr
 102

	)

560 
	#OBJ_uniqueIdítifõr
 
OBJ_X509
,45L

	)

562 
	#SN_¸l_di°ributi⁄_poöts
 "¸lDi°ributi⁄Poöts"

	)

563 
	#LN_¸l_di°ributi⁄_poöts
 "X509v3 CRL Di°ributi⁄ Poöts"

	)

564 
	#NID_¸l_di°ributi⁄_poöts
 103

	)

565 
	#OBJ_¸l_di°ributi⁄_poöts
 
OBJ_id_˚
,31L

	)

567 
	#SN_md5WôhRSA
 "RSA-NP-MD5"

	)

568 
	#LN_md5WôhRSA
 "md5WôhRSA"

	)

569 
	#NID_md5WôhRSA
 104

	)

570 
	#OBJ_md5WôhRSA
 
OBJ_Æg‹ôhm
,3L

	)

572 
	#SN_£rülNumbî
 "SN"

	)

573 
	#LN_£rülNumbî
 "£rülNumbî"

	)

574 
	#NID_£rülNumbî
 105

	)

575 
	#OBJ_£rülNumbî
 
OBJ_X509
,5L

	)

577 
	#SN_tôÀ
 "T"

	)

578 
	#LN_tôÀ
 "tôÀ"

	)

579 
	#NID_tôÀ
 106

	)

580 
	#OBJ_tôÀ
 
OBJ_X509
,12L

	)

582 
	#SN_des¸ùti⁄
 "D"

	)

583 
	#LN_des¸ùti⁄
 "des¸ùti⁄"

	)

584 
	#NID_des¸ùti⁄
 107

	)

585 
	#OBJ_des¸ùti⁄
 
OBJ_X509
,13L

	)

588 
	#SN_ˇ°5_cbc
 "CAST5-CBC"

	)

589 
	#LN_ˇ°5_cbc
 "ˇ°5-cbc"

	)

590 
	#NID_ˇ°5_cbc
 108

	)

591 
	#OBJ_ˇ°5_cbc
 1L,2L,840L,113533L,7L,66L,10L

	)

593 
	#SN_ˇ°5_ecb
 "CAST5-ECB"

	)

594 
	#LN_ˇ°5_ecb
 "ˇ°5-ecb"

	)

595 
	#NID_ˇ°5_ecb
 109

	)

597 
	#SN_ˇ°5_cfb64
 "CAST5-CFB"

	)

598 
	#LN_ˇ°5_cfb64
 "ˇ°5-cfb"

	)

599 
	#NID_ˇ°5_cfb64
 110

	)

601 
	#SN_ˇ°5_ofb64
 "CAST5-OFB"

	)

602 
	#LN_ˇ°5_ofb64
 "ˇ°5-ofb"

	)

603 
	#NID_ˇ°5_ofb64
 111

	)

605 
	#LN_pbeWôhMD5AndCa°5_CBC
 "pbeWôhMD5AndCa°5CBC"

	)

606 
	#NID_pbeWôhMD5AndCa°5_CBC
 112

	)

607 
	#OBJ_pbeWôhMD5AndCa°5_CBC
 1L,2L,840L,113533L,7L,66L,12L

	)

613 
	#SN_dßWôhSHA1
 "DSA-SHA1"

	)

614 
	#LN_dßWôhSHA1
 "dßWôhSHA1"

	)

615 
	#NID_dßWôhSHA1
 113

	)

616 
	#OBJ_dßWôhSHA1
 1L,2L,840L,10040L,4L,3L

	)

618 
	#NID_md5_sha1
 114

	)

619 
	#SN_md5_sha1
 "MD5-SHA1"

	)

620 
	#LN_md5_sha1
 "md5-sha1"

	)

622 
	#SN_sha1WôhRSA
 "RSA-SHA1-2"

	)

623 
	#LN_sha1WôhRSA
 "sha1WôhRSA"

	)

624 
	#NID_sha1WôhRSA
 115

	)

625 
	#OBJ_sha1WôhRSA
 
OBJ_Æg‹ôhm
,29L

	)

627 
	#SN_dß
 "DSA"

	)

628 
	#LN_dß
 "dßEn¸y±i⁄"

	)

629 
	#NID_dß
 116

	)

630 
	#OBJ_dß
 1L,2L,840L,10040L,4L,1L

	)

632 
	#SN_rùemd160
 "RIPEMD160"

	)

633 
	#LN_rùemd160
 "rùemd160"

	)

634 
	#NID_rùemd160
 117

	)

635 
	#OBJ_rùemd160
 1L,3L,36L,3L,2L,1L

	)

639 
	#SN_rùemd160WôhRSA
 "RSA-RIPEMD160"

	)

640 
	#LN_rùemd160WôhRSA
 "rùemd160WôhRSA"

	)

641 
	#NID_rùemd160WôhRSA
 119

	)

642 
	#OBJ_rùemd160WôhRSA
 1L,3L,36L,3L,3L,1L,2L

	)

652 
	#SN_rc5_cbc
 "RC5-CBC"

	)

653 
	#LN_rc5_cbc
 "rc5-cbc"

	)

654 
	#NID_rc5_cbc
 120

	)

655 
	#OBJ_rc5_cbc
 
OBJ_rßdsi
,3L,8L

	)

657 
	#SN_rc5_ecb
 "RC5-ECB"

	)

658 
	#LN_rc5_ecb
 "rc5-ecb"

	)

659 
	#NID_rc5_ecb
 121

	)

661 
	#SN_rc5_cfb64
 "RC5-CFB"

	)

662 
	#LN_rc5_cfb64
 "rc5-cfb"

	)

663 
	#NID_rc5_cfb64
 122

	)

665 
	#SN_rc5_ofb64
 "RC5-OFB"

	)

666 
	#LN_rc5_ofb64
 "rc5-ofb"

	)

667 
	#NID_rc5_ofb64
 123

	)

669 
	#SN_æe_com¥essi⁄
 "RLE"

	)

670 
	#LN_æe_com¥essi⁄
 "ru¿Àngth com¥essi⁄"

	)

671 
	#NID_æe_com¥essi⁄
 124

	)

672 
	#OBJ_æe_com¥essi⁄
 1L,1L,1L,1L,666L,1L

	)

674 
	#SN_zlib_com¥essi⁄
 "ZLIB"

	)

675 
	#LN_zlib_com¥essi⁄
 "zlib com¥essi⁄"

	)

676 
	#NID_zlib_com¥essi⁄
 125

	)

677 
	#OBJ_zlib_com¥essi⁄
 1L,1L,1L,1L,666L,2L

	)

679 
	#SN_ext_key_ußge
 "exãndedKeyUßge"

	)

680 
	#LN_ext_key_ußge
 "X509v3 Exãnded Key Ußge"

	)

681 
	#NID_ext_key_ußge
 126

	)

682 
	#OBJ_ext_key_ußge
 
OBJ_id_˚
,37

	)

684 
	#SN_id_pkix
 "PKIX"

	)

685 
	#NID_id_pkix
 127

	)

686 
	#OBJ_id_pkix
 1L,3L,6L,1L,5L,5L,7L

	)

688 
	#SN_id_kp
 "id-kp"

	)

689 
	#NID_id_kp
 128

	)

690 
	#OBJ_id_kp
 
OBJ_id_pkix
,3L

	)

694 
	#SN_£rvî_auth
 "£rvîAuth"

	)

695 
	#LN_£rvî_auth
 "TLS Web Sîvî Authítiˇti⁄"

	)

696 
	#NID_£rvî_auth
 129

	)

697 
	#OBJ_£rvî_auth
 
OBJ_id_kp
,1L

	)

699 
	#SN_˛õ¡_auth
 "˛õ¡Auth"

	)

700 
	#LN_˛õ¡_auth
 "TLS Web Clõ¡ Authítiˇti⁄"

	)

701 
	#NID_˛õ¡_auth
 130

	)

702 
	#OBJ_˛õ¡_auth
 
OBJ_id_kp
,2L

	)

704 
	#SN_code_sign
 "codeSignög"

	)

705 
	#LN_code_sign
 "CodêSignög"

	)

706 
	#NID_code_sign
 131

	)

707 
	#OBJ_code_sign
 
OBJ_id_kp
,3L

	)

709 
	#SN_emaû_¥Ÿe˘
 "emaûPrŸe˘i⁄"

	)

710 
	#LN_emaû_¥Ÿe˘
 "E-maû PrŸe˘i⁄"

	)

711 
	#NID_emaû_¥Ÿe˘
 132

	)

712 
	#OBJ_emaû_¥Ÿe˘
 
OBJ_id_kp
,4L

	)

714 
	#SN_time_°amp
 "timeSèmpög"

	)

715 
	#LN_time_°amp
 "TimêSèmpög"

	)

716 
	#NID_time_°amp
 133

	)

717 
	#OBJ_time_°amp
 
OBJ_id_kp
,8L

	)

721 
	#SN_ms_code_öd
 "msCodeInd"

	)

722 
	#LN_ms_code_öd
 "Mi¸oso· IndividuÆ CodêSignög"

	)

723 
	#NID_ms_code_öd
 134

	)

724 
	#OBJ_ms_code_öd
 1L,3L,6L,1L,4L,1L,311L,2L,1L,21L

	)

726 
	#SN_ms_code_com
 "msCodeCom"

	)

727 
	#LN_ms_code_com
 "Mi¸oso· Commîcü»CodêSignög"

	)

728 
	#NID_ms_code_com
 135

	)

729 
	#OBJ_ms_code_com
 1L,3L,6L,1L,4L,1L,311L,2L,1L,22L

	)

731 
	#SN_ms_˘l_sign
 "msCTLSign"

	)

732 
	#LN_ms_˘l_sign
 "Mi¸oso· Tru° Li° Signög"

	)

733 
	#NID_ms_˘l_sign
 136

	)

734 
	#OBJ_ms_˘l_sign
 1L,3L,6L,1L,4L,1L,311L,10L,3L,1L

	)

736 
	#SN_ms_sgc
 "msSGC"

	)

737 
	#LN_ms_sgc
 "Mi¸oso· Sîvî G©ed Cry±o"

	)

738 
	#NID_ms_sgc
 137

	)

739 
	#OBJ_ms_sgc
 1L,3L,6L,1L,4L,1L,311L,10L,3L,3L

	)

741 
	#SN_ms_efs
 "msEFS"

	)

742 
	#LN_ms_efs
 "Mi¸oso· En¸y±ed FûêSy°em"

	)

743 
	#NID_ms_efs
 138

	)

744 
	#OBJ_ms_efs
 1L,3L,6L,1L,4L,1L,311L,10L,3L,4L

	)

748 
	#SN_ns_sgc
 "nsSGC"

	)

749 
	#LN_ns_sgc
 "Nësˇ≥ Sîvî G©ed Cry±o"

	)

750 
	#NID_ns_sgc
 139

	)

751 
	#OBJ_ns_sgc
 
OBJ_√tsˇ≥
,4L,1L

	)

753 
	#SN_dñè_¸l
 "dñèCRL"

	)

754 
	#LN_dñè_¸l
 "X509v3 Dñè CRL Indiˇt‹"

	)

755 
	#NID_dñè_¸l
 140

	)

756 
	#OBJ_dñè_¸l
 
OBJ_id_˚
,27L

	)

758 
	#SN_¸l_ªas⁄
 "CRLRós⁄"

	)

759 
	#LN_¸l_ªas⁄
 "CRL Rós⁄ Code"

	)

760 
	#NID_¸l_ªas⁄
 141

	)

761 
	#OBJ_¸l_ªas⁄
 
OBJ_id_˚
,21L

	)

763 
	#SN_övÆidôy_d©e
 "övÆidôyD©e"

	)

764 
	#LN_övÆidôy_d©e
 "InvÆidôy D©e"

	)

765 
	#NID_övÆidôy_d©e
 142

	)

766 
	#OBJ_övÆidôy_d©e
 
OBJ_id_˚
,24L

	)

768 
	#SN_sx√t
 "SXNëID"

	)

769 
	#LN_sx√t
 "Så⁄g Exå™ë ID"

	)

770 
	#NID_sx√t
 143

	)

771 
	#OBJ_sx√t
 1L,3L,101L,1L,4L,1L

	)

775 
	#OBJ_pkcs12
 
OBJ_pkcs
,12L

	)

776 
	#OBJ_pkcs12_pbeids
 
OBJ_pkcs12
, 1

	)

778 
	#SN_pbe_WôhSHA1And128BôRC4
 "PBE-SHA1-RC4-128"

	)

779 
	#LN_pbe_WôhSHA1And128BôRC4
 "pbeWôhSHA1And128BôRC4"

	)

780 
	#NID_pbe_WôhSHA1And128BôRC4
 144

	)

781 
	#OBJ_pbe_WôhSHA1And128BôRC4
 
OBJ_pkcs12_pbeids
, 1L

	)

783 
	#SN_pbe_WôhSHA1And40BôRC4
 "PBE-SHA1-RC4-40"

	)

784 
	#LN_pbe_WôhSHA1And40BôRC4
 "pbeWôhSHA1And40BôRC4"

	)

785 
	#NID_pbe_WôhSHA1And40BôRC4
 145

	)

786 
	#OBJ_pbe_WôhSHA1And40BôRC4
 
OBJ_pkcs12_pbeids
, 2L

	)

788 
	#SN_pbe_WôhSHA1And3_Key_TrùÀDES_CBC
 "PBE-SHA1-3DES"

	)

789 
	#LN_pbe_WôhSHA1And3_Key_TrùÀDES_CBC
 "pbeWôhSHA1And3-KeyTrùÀDES-CBC"

	)

790 
	#NID_pbe_WôhSHA1And3_Key_TrùÀDES_CBC
 146

	)

791 
	#OBJ_pbe_WôhSHA1And3_Key_TrùÀDES_CBC
 
OBJ_pkcs12_pbeids
, 3L

	)

793 
	#SN_pbe_WôhSHA1And2_Key_TrùÀDES_CBC
 "PBE-SHA1-2DES"

	)

794 
	#LN_pbe_WôhSHA1And2_Key_TrùÀDES_CBC
 "pbeWôhSHA1And2-KeyTrùÀDES-CBC"

	)

795 
	#NID_pbe_WôhSHA1And2_Key_TrùÀDES_CBC
 147

	)

796 
	#OBJ_pbe_WôhSHA1And2_Key_TrùÀDES_CBC
 
OBJ_pkcs12_pbeids
, 4L

	)

798 
	#SN_pbe_WôhSHA1And128BôRC2_CBC
 "PBE-SHA1-RC2-128"

	)

799 
	#LN_pbe_WôhSHA1And128BôRC2_CBC
 "pbeWôhSHA1And128BôRC2-CBC"

	)

800 
	#NID_pbe_WôhSHA1And128BôRC2_CBC
 148

	)

801 
	#OBJ_pbe_WôhSHA1And128BôRC2_CBC
 
OBJ_pkcs12_pbeids
, 5L

	)

803 
	#SN_pbe_WôhSHA1And40BôRC2_CBC
 "PBE-SHA1-RC2-40"

	)

804 
	#LN_pbe_WôhSHA1And40BôRC2_CBC
 "pbeWôhSHA1And40BôRC2-CBC"

	)

805 
	#NID_pbe_WôhSHA1And40BôRC2_CBC
 149

	)

806 
	#OBJ_pbe_WôhSHA1And40BôRC2_CBC
 
OBJ_pkcs12_pbeids
, 6L

	)

808 
	#OBJ_pkcs12_Vîsi⁄1
 
OBJ_pkcs12
, 10L

	)

810 
	#OBJ_pkcs12_BagIds
 
OBJ_pkcs12_Vîsi⁄1
, 1L

	)

812 
	#LN_keyBag
 "keyBag"

	)

813 
	#NID_keyBag
 150

	)

814 
	#OBJ_keyBag
 
OBJ_pkcs12_BagIds
, 1L

	)

816 
	#LN_pkcs8ShroudedKeyBag
 "pkcs8ShroudedKeyBag"

	)

817 
	#NID_pkcs8ShroudedKeyBag
 151

	)

818 
	#OBJ_pkcs8ShroudedKeyBag
 
OBJ_pkcs12_BagIds
, 2L

	)

820 
	#LN_˚πBag
 "˚πBag"

	)

821 
	#NID_˚πBag
 152

	)

822 
	#OBJ_˚πBag
 
OBJ_pkcs12_BagIds
, 3L

	)

824 
	#LN_¸lBag
 "¸lBag"

	)

825 
	#NID_¸lBag
 153

	)

826 
	#OBJ_¸lBag
 
OBJ_pkcs12_BagIds
, 4L

	)

828 
	#LN_£¸ëBag
 "£¸ëBag"

	)

829 
	#NID_£¸ëBag
 154

	)

830 
	#OBJ_£¸ëBag
 
OBJ_pkcs12_BagIds
, 5L

	)

832 
	#LN_ß„C⁄ã¡sBag
 "ß„C⁄ã¡sBag"

	)

833 
	#NID_ß„C⁄ã¡sBag
 155

	)

834 
	#OBJ_ß„C⁄ã¡sBag
 
OBJ_pkcs12_BagIds
, 6L

	)

836 
	#LN_‰õndlyName
 "‰õndlyName"

	)

837 
	#NID_‰õndlyName
 156

	)

838 
	#OBJ_‰õndlyName
 
OBJ_pkcs9
, 20L

	)

840 
	#LN_loˇlKeyID
 "loˇlKeyID"

	)

841 
	#NID_loˇlKeyID
 157

	)

842 
	#OBJ_loˇlKeyID
 
OBJ_pkcs9
, 21L

	)

844 
	#OBJ_˚πTy≥s
 
OBJ_pkcs9
, 22L

	)

846 
	#LN_x509Cîtifiˇã
 "x509Cîtifiˇã"

	)

847 
	#NID_x509Cîtifiˇã
 158

	)

848 
	#OBJ_x509Cîtifiˇã
 
OBJ_˚πTy≥s
, 1L

	)

850 
	#LN_sdsiCîtifiˇã
 "sdsiCîtifiˇã"

	)

851 
	#NID_sdsiCîtifiˇã
 159

	)

852 
	#OBJ_sdsiCîtifiˇã
 
OBJ_˚πTy≥s
, 2L

	)

854 
	#OBJ_¸lTy≥s
 
OBJ_pkcs9
, 23L

	)

856 
	#LN_x509Cæ
 "x509Cæ"

	)

857 
	#NID_x509Cæ
 160

	)

858 
	#OBJ_x509Cæ
 
OBJ_¸lTy≥s
, 1L

	)

862 
	#LN_pbes2
 "PBES2"

	)

863 
	#NID_pbes2
 161

	)

864 
	#OBJ_pbes2
 
OBJ_pkcs
,5L,13L

	)

866 
	#LN_pbmac1
 "PBMAC1"

	)

867 
	#NID_pbmac1
 162

	)

868 
	#OBJ_pbmac1
 
OBJ_pkcs
,5L,14L

	)

870 
	#LN_hmacWôhSHA1
 "hmacWôhSHA1"

	)

871 
	#NID_hmacWôhSHA1
 163

	)

872 
	#OBJ_hmacWôhSHA1
 
OBJ_rßdsi
,2L,7L

	)

876 
	#LN_id_qt_˝s
 "Pﬁicy QuÆifõ∏CPS"

	)

877 
	#SN_id_qt_˝s
 "id-qt-˝s"

	)

878 
	#NID_id_qt_˝s
 164

	)

879 
	#OBJ_id_qt_˝s
 
OBJ_id_pkix
,2L,1L

	)

881 
	#LN_id_qt_unŸi˚
 "Pﬁicy QuÆifõ∏U£∏NŸi˚"

	)

882 
	#SN_id_qt_unŸi˚
 "id-qt-unŸi˚"

	)

883 
	#NID_id_qt_unŸi˚
 165

	)

884 
	#OBJ_id_qt_unŸi˚
 
OBJ_id_pkix
,2L,2L

	)

886 
	#SN_rc2_64_cbc
 "RC2-64-CBC"

	)

887 
	#LN_rc2_64_cbc
 "rc2-64-cbc"

	)

888 
	#NID_rc2_64_cbc
 166

	)

890 
	#SN_SMIMEC≠abûôõs
 "SMIME-CAPS"

	)

891 
	#LN_SMIMEC≠abûôõs
 "S/MIME C≠abûôõs"

	)

892 
	#NID_SMIMEC≠abûôõs
 167

	)

893 
	#OBJ_SMIMEC≠abûôõs
 
OBJ_pkcs9
,15L

	)

895 
	#SN_pbeWôhMD2AndRC2_CBC
 "PBE-MD2-RC2-64"

	)

896 
	#LN_pbeWôhMD2AndRC2_CBC
 "pbeWôhMD2AndRC2-CBC"

	)

897 
	#NID_pbeWôhMD2AndRC2_CBC
 168

	)

898 
	#OBJ_pbeWôhMD2AndRC2_CBC
 
OBJ_pkcs
,5L,4L

	)

900 
	#SN_pbeWôhMD5AndRC2_CBC
 "PBE-MD5-RC2-64"

	)

901 
	#LN_pbeWôhMD5AndRC2_CBC
 "pbeWôhMD5AndRC2-CBC"

	)

902 
	#NID_pbeWôhMD5AndRC2_CBC
 169

	)

903 
	#OBJ_pbeWôhMD5AndRC2_CBC
 
OBJ_pkcs
,5L,6L

	)

905 
	#SN_pbeWôhSHA1AndDES_CBC
 "PBE-SHA1-DES"

	)

906 
	#LN_pbeWôhSHA1AndDES_CBC
 "pbeWôhSHA1AndDES-CBC"

	)

907 
	#NID_pbeWôhSHA1AndDES_CBC
 170

	)

908 
	#OBJ_pbeWôhSHA1AndDES_CBC
 
OBJ_pkcs
,5L,10L

	)

912 
	#LN_ms_ext_ªq
 "Mi¸oso· Exãnsi⁄ Reque°"

	)

913 
	#SN_ms_ext_ªq
 "msExtReq"

	)

914 
	#NID_ms_ext_ªq
 171

	)

915 
	#OBJ_ms_ext_ªq
 1L,3L,6L,1L,4L,1L,311L,2L,1L,14L

	)

917 
	#LN_ext_ªq
 "Exãnsi⁄ Reque°"

	)

918 
	#SN_ext_ªq
 "extReq"

	)

919 
	#NID_ext_ªq
 172

	)

920 
	#OBJ_ext_ªq
 
OBJ_pkcs9
,14L

	)

922 
	#SN_«me
 "«me"

	)

923 
	#LN_«me
 "«me"

	)

924 
	#NID_«me
 173

	)

925 
	#OBJ_«me
 
OBJ_X509
,41L

	)

927 
	#SN_dnQuÆifõr
 "dnQuÆifõr"

	)

928 
	#LN_dnQuÆifõr
 "dnQuÆifõr"

	)

929 
	#NID_dnQuÆifõr
 174

	)

930 
	#OBJ_dnQuÆifõr
 
OBJ_X509
,46L

	)

932 
	#SN_id_≥
 "id-≥"

	)

933 
	#NID_id_≥
 175

	)

934 
	#OBJ_id_≥
 
OBJ_id_pkix
,1L

	)

936 
	#SN_id_ad
 "id-ad"

	)

937 
	#NID_id_ad
 176

	)

938 
	#OBJ_id_ad
 
OBJ_id_pkix
,48L

	)

940 
	#SN_öfo_ac˚ss
 "auth‹ôyInfoAc˚ss"

	)

941 
	#LN_öfo_ac˚ss
 "Auth‹ôy Inf‹m©i⁄ Ac˚ss"

	)

942 
	#NID_öfo_ac˚ss
 177

	)

943 
	#OBJ_öfo_ac˚ss
 
OBJ_id_≥
,1L

	)

945 
	#SN_ad_OCSP
 "OCSP"

	)

946 
	#LN_ad_OCSP
 "OCSP"

	)

947 
	#NID_ad_OCSP
 178

	)

948 
	#OBJ_ad_OCSP
 
OBJ_id_ad
,1L

	)

950 
	#SN_ad_ˇ_issuîs
 "ˇIssuîs"

	)

951 
	#LN_ad_ˇ_issuîs
 "CA Issuîs"

	)

952 
	#NID_ad_ˇ_issuîs
 179

	)

953 
	#OBJ_ad_ˇ_issuîs
 
OBJ_id_ad
,2L

	)

955 
	#SN_OCSP_sign
 "OCSPSignög"

	)

956 
	#LN_OCSP_sign
 "OCSP Signög"

	)

957 
	#NID_OCSP_sign
 180

	)

958 
	#OBJ_OCSP_sign
 
OBJ_id_kp
,9L

	)

961 
	~<›ís¶/bio.h
>

962 
	~<›ís¶/a¢1.h
>

964 
	#OBJ_NAME_TYPE_UNDEF
 0x00

	)

965 
	#OBJ_NAME_TYPE_MD_METH
 0x01

	)

966 
	#OBJ_NAME_TYPE_CIPHER_METH
 0x02

	)

967 
	#OBJ_NAME_TYPE_PKEY_METH
 0x03

	)

968 
	#OBJ_NAME_TYPE_COMP_METH
 0x04

	)

969 
	#OBJ_NAME_TYPE_NUM
 0x05

	)

971 
	#OBJ_NAME_ALIAS
 0x8000

	)

973 
	#OBJ_BSEARCH_VALUE_ON_NOMATCH
 0x01

	)

974 
	#OBJ_BSEARCH_FIRST_VALUE_ON_MATCH
 0x02

	)

977 #ifde‡ 
__˝lu•lus


981 
	sobj_«me_°


983 
ty≥
;

984 
Æüs
;

985 c⁄° *
«me
;

986 c⁄° *
d©a
;

987 } 
	tOBJ_NAME
;

989 
	#OBJ_¸óã_™d_add_obje˘
(
a
,
b
,
c
Ë
	`OBJ_¸óã
◊,b,c)

	)

992 
OBJ_NAME_öô
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

993 
OBJ_NAME_√w_ödex
((*
hash_func
)(const *),

994 (*
cmp_func
)(const *, const *),

995 (*
‰ì_func
)(c⁄° *, , c⁄° *)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

996 c⁄° *
OBJ_NAME_gë
(c⁄° *
«me
,
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

997 
OBJ_NAME_add
(c⁄° *
«me
,
ty≥
,c⁄° *
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

998 
OBJ_NAME_ªmove
(c⁄° *
«me
,
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

999 
OBJ_NAME_˛ónup
(
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1000 
OBJ_NAME_do_Æl
(
ty≥
,(*
‚
)(c⁄° 
OBJ_NAME
 *,*
¨g
),

1001 *
¨g
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1002 
OBJ_NAME_do_Æl_s‹ãd
(
ty≥
,(*
‚
)(c⁄° 
OBJ_NAME
 *,*
¨g
),

1003 *
¨g
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1005 
ASN1_OBJECT
 * 
OBJ_dup
(c⁄° ASN1_OBJECT *
o
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1006 
ASN1_OBJECT
 * 
OBJ_nid2obj
(
n
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1007 c⁄° * 
OBJ_nid2 
(
n
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1008 c⁄° * 
OBJ_nid2¢
(
n
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1009 
OBJ_obj2nid
(c⁄° 
ASN1_OBJECT
 *
o
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1010 
ASN1_OBJECT
 * 
OBJ_txt2obj
(c⁄° *
s
, 
no_«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1011 
OBJ_obj2txt
(*
buf
, 
buf_Àn
, c⁄° 
ASN1_OBJECT
 *
a
, 
no_«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1012 
OBJ_txt2nid
(c⁄° *
s
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1013 
OBJ_ 2nid
(c⁄° *
s
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1014 
OBJ_¢2nid
(c⁄° *
s
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1015 
OBJ_cmp
(c⁄° 
ASN1_OBJECT
 *
a
,c⁄° ASN1_OBJECT *
b
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1016 c⁄° * 
OBJ_b£¨ch
(c⁄° *
key
,c⁄° *
ba£
,
num
,
size
,

1017 (*
cmp
)(c⁄° *, c⁄° *)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1018 c⁄° * 
OBJ_b£¨ch_ex
(c⁄° *
key
,c⁄° *
ba£
,
num
,

1019 
size
, (*
cmp
)(c⁄° *, c⁄° *), 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1021 
OBJ_√w_nid
(
num
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1022 
OBJ_add_obje˘
(c⁄° 
ASN1_OBJECT
 *
obj
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1023 
OBJ_¸óã
(c⁄° *
oid
,c⁄° *
¢
,c⁄° *
 
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1024 
OBJ_˛ónup
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1025 
OBJ_¸óã_obje˘s
(
BIO
 *
ö
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1031 
ERR_lﬂd_OBJ_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

1036 
	#OBJ_F_OBJ_ADD_OBJECT
 105

	)

1037 
	#OBJ_F_OBJ_CREATE
 100

	)

1038 
	#OBJ_F_OBJ_DUP
 101

	)

1039 
	#OBJ_F_OBJ_NAME_NEW_INDEX
 106

	)

1040 
	#OBJ_F_OBJ_NID2LN
 102

	)

1041 
	#OBJ_F_OBJ_NID2OBJ
 103

	)

1042 
	#OBJ_F_OBJ_NID2SN
 104

	)

1045 
	#OBJ_R_MALLOC_FAILURE
 100

	)

1046 
	#OBJ_R_UNKNOWN_NID
 101

	)

1048 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/opensslv.h

1 #i‚de‡
HEADER_OPENSSLV_H


2 
	#HEADER_OPENSSLV_H


	)

28 
	#OPENSSL_VERSION_NUMBER
 0x0090819fL

	)

29 #ifde‡
OPENSSL_FIPS


30 
	#OPENSSL_VERSION_TEXT
 "O≥nSSL 0.9.8y-fù†5 Feb 2013"

	)

32 
	#OPENSSL_VERSION_TEXT
 "O≥nSSL 0.9.8y 5 Feb 2013"

	)

34 
	#OPENSSL_VERSION_PTEXT
 "Ö¨ào‡" 
OPENSSL_VERSION_TEXT


	)

85 
	#SHLIB_VERSION_HISTORY
 ""

	)

86 
	#SHLIB_VERSION_NUMBER
 "0.9.8"

	)

	@/usr/include/openssl/pkcs7.h

59 #i‚de‡
HEADER_PKCS7_H


60 
	#HEADER_PKCS7_H


	)

62 
	~<AvaûabûôyMa¸os.h
>

64 
	~<›ís¶/a¢1.h
>

65 
	~<›ís¶/bio.h
>

66 
	~<›ís¶/e_os2.h
>

68 
	~<›ís¶/symhacks.h
>

69 
	~<›ís¶/os¶_typ.h
>

71 #ifde‡ 
__˝lu•lus


75 #ifde‡
OPENSSL_SYS_WIN32


77 #unde‡
PKCS7_ISSUER_AND_SERIAL


78 #unde‡
PKCS7_SIGNER_INFO


88 
	spkcs7_issuî_™d_£rül_°


90 
X509_NAME
 *
issuî
;

91 
ASN1_INTEGER
 *
£rül
;

92 } 
	tPKCS7_ISSUER_AND_SERIAL
;

94 
	spkcs7_sig√r_öfo_°


96 
ASN1_INTEGER
 *
vîsi⁄
;

97 
PKCS7_ISSUER_AND_SERIAL
 *
issuî_™d_£rül
;

98 
X509_ALGOR
 *
dige°_Æg
;

99 
STACK_OF
(
X509_ATTRIBUTE
Ë*
auth_©å
;

100 
X509_ALGOR
 *
dige°_íc_Æg
;

101 
ASN1_OCTET_STRING
 *
íc_dige°
;

102 
STACK_OF
(
X509_ATTRIBUTE
Ë*
u«uth_©å
;

105 
EVP_PKEY
 *
pkey
;

106 } 
	tPKCS7_SIGNER_INFO
;

108 
DECLARE_STACK_OF
(
PKCS7_SIGNER_INFO
)

109 
DECLARE_ASN1_SET_OF
(
PKCS7_SIGNER_INFO
)

111 
	spkcs7_ªcù_öfo_°


113 
ASN1_INTEGER
 *
vîsi⁄
;

114 
PKCS7_ISSUER_AND_SERIAL
 *
issuî_™d_£rül
;

115 
X509_ALGOR
 *
key_íc_Æg‹
;

116 
ASN1_OCTET_STRING
 *
íc_key
;

117 
X509
 *
˚π
;

118 } 
	tPKCS7_RECIP_INFO
;

120 
DECLARE_STACK_OF
(
PKCS7_RECIP_INFO
)

121 
DECLARE_ASN1_SET_OF
(
PKCS7_RECIP_INFO
)

123 
	spkcs7_sig√d_°


125 
ASN1_INTEGER
 *
vîsi⁄
;

126 
STACK_OF
(
X509_ALGOR
Ë*
md_Ægs
;

127 
STACK_OF
(
X509
Ë*
˚π
;

128 
STACK_OF
(
X509_CRL
Ë*
¸l
;

129 
STACK_OF
(
PKCS7_SIGNER_INFO
Ë*
sig√r_öfo
;

131 
pkcs7_°
 *
c⁄ã¡s
;

132 } 
	tPKCS7_SIGNED
;

136 
	spkcs7_íc_c⁄ã¡_°


138 
ASN1_OBJECT
 *
c⁄ã¡_ty≥
;

139 
X509_ALGOR
 *
Æg‹ôhm
;

140 
ASN1_OCTET_STRING
 *
íc_d©a
;

141 c⁄° 
EVP_CIPHER
 *
cùhî
;

142 } 
	tPKCS7_ENC_CONTENT
;

144 
	spkcs7_ívñ›ed_°


146 
ASN1_INTEGER
 *
vîsi⁄
;

147 
STACK_OF
(
PKCS7_RECIP_INFO
Ë*
ªcùõ¡öfo
;

148 
PKCS7_ENC_CONTENT
 *
íc_d©a
;

149 } 
	tPKCS7_ENVELOPE
;

151 
	spkcs7_sig√d™dívñ›ed_°


153 
ASN1_INTEGER
 *
vîsi⁄
;

154 
STACK_OF
(
X509_ALGOR
Ë*
md_Ægs
;

155 
STACK_OF
(
X509
Ë*
˚π
;

156 
STACK_OF
(
X509_CRL
Ë*
¸l
;

157 
STACK_OF
(
PKCS7_SIGNER_INFO
Ë*
sig√r_öfo
;

159 
PKCS7_ENC_CONTENT
 *
íc_d©a
;

160 
STACK_OF
(
PKCS7_RECIP_INFO
Ë*
ªcùõ¡öfo
;

161 } 
	tPKCS7_SIGN_ENVELOPE
;

163 
	spkcs7_dige°_°


165 
ASN1_INTEGER
 *
vîsi⁄
;

166 
X509_ALGOR
 *
md
;

167 
pkcs7_°
 *
c⁄ã¡s
;

168 
ASN1_OCTET_STRING
 *
dige°
;

169 } 
	tPKCS7_DIGEST
;

171 
	spkcs7_í¸y±ed_°


173 
ASN1_INTEGER
 *
vîsi⁄
;

174 
PKCS7_ENC_CONTENT
 *
íc_d©a
;

175 } 
	tPKCS7_ENCRYPT
;

177 
	spkcs7_°


181 *
a¢1
;

182 
Àngth
;

184 
	#PKCS7_S_HEADER
 0

	)

185 
	#PKCS7_S_BODY
 1

	)

186 
	#PKCS7_S_TAIL
 2

	)

187 
°©e
;

189 
dëached
;

191 
ASN1_OBJECT
 *
ty≥
;

196 *
±r
;

199 
ASN1_OCTET_STRING
 *
d©a
;

202 
PKCS7_SIGNED
 *
sign
;

205 
PKCS7_ENVELOPE
 *
ívñ›ed
;

208 
PKCS7_SIGN_ENVELOPE
 *
sig√d_™d_ívñ›ed
;

211 
PKCS7_DIGEST
 *
dige°
;

214 
PKCS7_ENCRYPT
 *
í¸y±ed
;

217 
ASN1_TYPE
 *
Ÿhî
;

218 } 
d
;

219 } 
	tPKCS7
;

221 
DECLARE_STACK_OF
(
PKCS7
)

222 
DECLARE_ASN1_SET_OF
(
PKCS7
)

223 
DECLARE_PKCS12_STACK_OF
(
PKCS7
)

225 
	#PKCS7_OP_SET_DETACHED_SIGNATURE
 1

	)

226 
	#PKCS7_OP_GET_DETACHED_SIGNATURE
 2

	)

228 
	#PKCS7_gë_sig√d_©åibuãs
(
si
Ë((si)->
auth_©å
)

	)

229 
	#PKCS7_gë_©åibuãs
(
si
Ë((si)->
u«uth_©å
)

	)

231 
	#PKCS7_ty≥_is_sig√d
(
a
Ë(
	`OBJ_obj2nid
(◊)->
ty≥
Ë=
NID_pkcs7_sig√d
)

	)

232 
	#PKCS7_ty≥_is_í¸y±ed
(
a
Ë(
	`OBJ_obj2nid
(◊)->
ty≥
Ë=
NID_pkcs7_í¸y±ed
)

	)

233 
	#PKCS7_ty≥_is_ívñ›ed
(
a
Ë(
	`OBJ_obj2nid
(◊)->
ty≥
Ë=
NID_pkcs7_ívñ›ed
)

	)

234 
	#PKCS7_ty≥_is_sig√dAndEnvñ›ed
(
a
) \

235 (
	`OBJ_obj2nid
((
a
)->
ty≥
Ë=
NID_pkcs7_sig√dAndEnvñ›ed
)

	)

236 
	#PKCS7_ty≥_is_d©a
(
a
Ë(
	`OBJ_obj2nid
(◊)->
ty≥
Ë=
NID_pkcs7_d©a
)

	)

238 
	#PKCS7_ty≥_is_dige°
(
a
Ë(
	`OBJ_obj2nid
(◊)->
ty≥
Ë=
NID_pkcs7_dige°
)

	)

240 
	#PKCS7_£t_dëached
(
p
,
v
) \

241 
	`PKCS7_˘æ
(
p
,
PKCS7_OP_SET_DETACHED_SIGNATURE
,
v
,
NULL
)

	)

242 
	#PKCS7_gë_dëached
(
p
) \

243 
	`PKCS7_˘æ
(
p
,
PKCS7_OP_GET_DETACHED_SIGNATURE
,0,
NULL
)

	)

245 
	#PKCS7_is_dëached
(
p7
Ë(
	`PKCS7_ty≥_is_sig√d
’7Ë&& 
	`PKCS7_gë_dëached
’7))

	)

247 #ifde‡
SSLEAY_MACROS


248 #i‚de‡
PKCS7_ISSUER_AND_SERIAL_dige°


249 
	#PKCS7_ISSUER_AND_SERIAL_dige°
(
d©a
,
ty≥
,
md
,
Àn
) \

250 
	`ASN1_dige°
(((*)())
i2d_PKCS7_ISSUER_AND_SERIAL
,
ty≥
,\

251 (*)
d©a
,
md
,
Àn
)

	)

257 
	#PKCS7_TEXT
 0x1

	)

258 
	#PKCS7_NOCERTS
 0x2

	)

259 
	#PKCS7_NOSIGS
 0x4

	)

260 
	#PKCS7_NOCHAIN
 0x8

	)

261 
	#PKCS7_NOINTERN
 0x10

	)

262 
	#PKCS7_NOVERIFY
 0x20

	)

263 
	#PKCS7_DETACHED
 0x40

	)

264 
	#PKCS7_BINARY
 0x80

	)

265 
	#PKCS7_NOATTR
 0x100

	)

266 
	#PKCS7_NOSMIMECAP
 0x200

	)

267 
	#PKCS7_NOOLDMIMETYPE
 0x400

	)

268 
	#PKCS7_CRLFEOL
 0x800

	)

269 
	#PKCS7_STREAM
 0x1000

	)

270 
	#PKCS7_NOCRL
 0x2000

	)

274 
	#SMIME_TEXT
 
PKCS7_TEXT


	)

275 
	#SMIME_NOCERTS
 
PKCS7_NOCERTS


	)

276 
	#SMIME_NOSIGS
 
PKCS7_NOSIGS


	)

277 
	#SMIME_NOCHAIN
 
PKCS7_NOCHAIN


	)

278 
	#SMIME_NOINTERN
 
PKCS7_NOINTERN


	)

279 
	#SMIME_NOVERIFY
 
PKCS7_NOVERIFY


	)

280 
	#SMIME_DETACHED
 
PKCS7_DETACHED


	)

281 
	#SMIME_BINARY
 
PKCS7_BINARY


	)

282 
	#SMIME_NOATTR
 
PKCS7_NOATTR


	)

284 
DECLARE_ASN1_FUNCTIONS
(
PKCS7_ISSUER_AND_SERIAL
)

286 #i‚de‡
SSLEAY_MACROS


287 
PKCS7_ISSUER_AND_SERIAL_dige°
(
PKCS7_ISSUER_AND_SERIAL
 *
d©a
,c⁄° 
EVP_MD
 *
ty≥
,

288 *
md
,*
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

289 #i‚de‡
OPENSSL_NO_FP_API


290 
PKCS7
 *
d2i_PKCS7_Â
(
FILE
 *
Â
,PKCS7 **
p7
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

291 
i2d_PKCS7_Â
(
FILE
 *
Â
,
PKCS7
 *
p7
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

293 
PKCS7
 *
PKCS7_dup
(PKCS7 *
p7
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

294 
PKCS7
 *
d2i_PKCS7_bio
(
BIO
 *
bp
,PKCS7 **
p7
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

295 
i2d_PKCS7_bio
(
BIO
 *
bp
,
PKCS7
 *
p7
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

298 
DECLARE_ASN1_FUNCTIONS
(
PKCS7_SIGNER_INFO
)

299 
DECLARE_ASN1_FUNCTIONS
(
PKCS7_RECIP_INFO
)

300 
DECLARE_ASN1_FUNCTIONS
(
PKCS7_SIGNED
)

301 
DECLARE_ASN1_FUNCTIONS
(
PKCS7_ENC_CONTENT
)

302 
DECLARE_ASN1_FUNCTIONS
(
PKCS7_ENVELOPE
)

303 
DECLARE_ASN1_FUNCTIONS
(
PKCS7_SIGN_ENVELOPE
)

304 
DECLARE_ASN1_FUNCTIONS
(
PKCS7_DIGEST
)

305 
DECLARE_ASN1_FUNCTIONS
(
PKCS7_ENCRYPT
)

306 
DECLARE_ASN1_FUNCTIONS
(
PKCS7
)

308 
DECLARE_ASN1_ITEM
(
PKCS7_ATTR_SIGN
)

309 
DECLARE_ASN1_ITEM
(
PKCS7_ATTR_VERIFY
)

311 
DECLARE_ASN1_NDEF_FUNCTION
(
PKCS7
)

313 
PKCS7_˘æ
(
PKCS7
 *
p7
, 
cmd
, 
œrg
, *
∑rg
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

315 
PKCS7_£t_ty≥
(
PKCS7
 *
p7
, 
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

316 
PKCS7_£t0_ty≥_Ÿhî
(
PKCS7
 *
p7
, 
ty≥
, 
ASN1_TYPE
 *
Ÿhî
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

317 
PKCS7_£t_c⁄ã¡
(
PKCS7
 *
p7
, PKCS7 *
p7_d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

318 
PKCS7_SIGNER_INFO_£t
(
PKCS7_SIGNER_INFO
 *
p7i
, 
X509
 *
x509
, 
EVP_PKEY
 *
pkey
,

319 c⁄° 
EVP_MD
 *
dg°
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

320 
PKCS7_add_sig√r
(
PKCS7
 *
p7
, 
PKCS7_SIGNER_INFO
 *
p7i
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

321 
PKCS7_add_˚πifiˇã
(
PKCS7
 *
p7
, 
X509
 *
x509
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

322 
PKCS7_add_¸l
(
PKCS7
 *
p7
, 
X509_CRL
 *
x509
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

323 
PKCS7_c⁄ã¡_√w
(
PKCS7
 *
p7
, 
nid
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

324 
PKCS7_d©aVîify
(
X509_STORE
 *
˚π_°‹e
, 
X509_STORE_CTX
 *
˘x
,

325 
BIO
 *
bio
, 
PKCS7
 *
p7
, 
PKCS7_SIGNER_INFO
 *
si
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

326 
PKCS7_sig«tuªVîify
(
BIO
 *
bio
, 
PKCS7
 *
p7
, 
PKCS7_SIGNER_INFO
 *
si
,

327 
X509
 *
x509
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

329 
BIO
 *
PKCS7_d©aInô
(
PKCS7
 *
p7
, BIO *
bio
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

330 
PKCS7_d©aFöÆ
(
PKCS7
 *
p7
, 
BIO
 *
bio
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

331 
BIO
 *
PKCS7_d©aDecode
(
PKCS7
 *
p7
, 
EVP_PKEY
 *
pkey
, BIO *
ö_bio
, 
X509
 *
p˚π
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

334 
PKCS7_SIGNER_INFO
 *
PKCS7_add_sig«tuª
(
PKCS7
 *
p7
, 
X509
 *
x509
,

335 
EVP_PKEY
 *
pkey
, c⁄° 
EVP_MD
 *
dg°
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

336 
X509
 *
PKCS7_˚π_‰om_sig√r_öfo
(
PKCS7
 *
p7
, 
PKCS7_SIGNER_INFO
 *
si
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

337 
PKCS7_£t_dige°
(
PKCS7
 *
p7
, c⁄° 
EVP_MD
 *
md
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

338 
STACK_OF
(
PKCS7_SIGNER_INFO
Ë*
PKCS7_gë_sig√r_öfo
(
PKCS7
 *
p7
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

340 
PKCS7_RECIP_INFO
 *
PKCS7_add_ªcùõ¡
(
PKCS7
 *
p7
, 
X509
 *
x509
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

341 
PKCS7_add_ªcùõ¡_öfo
(
PKCS7
 *
p7
, 
PKCS7_RECIP_INFO
 *
ri
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

342 
PKCS7_RECIP_INFO_£t
(
PKCS7_RECIP_INFO
 *
p7i
, 
X509
 *
x509
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

343 
PKCS7_£t_cùhî
(
PKCS7
 *
p7
, c⁄° 
EVP_CIPHER
 *
cùhî
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

345 
PKCS7_ISSUER_AND_SERIAL
 *
PKCS7_gë_issuî_™d_£rül
(
PKCS7
 *
p7
, 
idx
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

346 
ASN1_OCTET_STRING
 *
PKCS7_dige°_‰om_©åibuãs
(
STACK_OF
(
X509_ATTRIBUTE
Ë*
sk
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

347 
PKCS7_add_sig√d_©åibuã
(
PKCS7_SIGNER_INFO
 *
p7si
,
nid
,
ty≥
,

348 *
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

349 
PKCS7_add_©åibuã
 (
PKCS7_SIGNER_INFO
 *
p7si
, 
nid
, 
©πy≥
,

350 *
vÆue
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

351 
ASN1_TYPE
 *
PKCS7_gë_©åibuã
(
PKCS7_SIGNER_INFO
 *
si
, 
nid
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

352 
ASN1_TYPE
 *
PKCS7_gë_sig√d_©åibuã
(
PKCS7_SIGNER_INFO
 *
si
, 
nid
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

353 
PKCS7_£t_sig√d_©åibuãs
(
PKCS7_SIGNER_INFO
 *
p7si
,

354 
STACK_OF
(
X509_ATTRIBUTE
Ë*
sk
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

355 
PKCS7_£t_©åibuãs
(
PKCS7_SIGNER_INFO
 *
p7si
,
STACK_OF
(
X509_ATTRIBUTE
Ë*
sk
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

358 
PKCS7
 *
PKCS7_sign
(
X509
 *
sign˚π
, 
EVP_PKEY
 *
pkey
, 
STACK_OF
(X509Ë*
˚πs
,

359 
BIO
 *
d©a
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

360 
PKCS7_vîify
(
PKCS7
 *
p7
, 
STACK_OF
(
X509
Ë*
˚πs
, 
X509_STORE
 *
°‹e
,

361 
BIO
 *
öd©a
, BIO *
out
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

362 
STACK_OF
(
X509
Ë*
PKCS7_gë0_sig√rs
(
PKCS7
 *
p7
, STACK_OF(X509Ë*
˚πs
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

363 
PKCS7
 *
PKCS7_í¸y±
(
STACK_OF
(
X509
Ë*
˚πs
, 
BIO
 *
ö
, c⁄° 
EVP_CIPHER
 *
cùhî
,

364 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

365 
PKCS7_de¸y±
(
PKCS7
 *
p7
, 
EVP_PKEY
 *
pkey
, 
X509
 *
˚π
, 
BIO
 *
d©a
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

367 
PKCS7_add_©åib_smimeˇp
(
PKCS7_SIGNER_INFO
 *
si
,

368 
STACK_OF
(
X509_ALGOR
Ë*
ˇp
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

369 
STACK_OF
(
X509_ALGOR
Ë*
PKCS7_gë_smimeˇp
(
PKCS7_SIGNER_INFO
 *
si
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

370 
PKCS7_sim∂e_smimeˇp
(
STACK_OF
(
X509_ALGOR
Ë*
sk
, 
nid
, 
¨g
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

372 
SMIME_wrôe_PKCS7
(
BIO
 *
bio
, 
PKCS7
 *
p7
, BIO *
d©a
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

373 
PKCS7
 *
SMIME_ªad_PKCS7
(
BIO
 *
bio
, BIO **
bc⁄t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

374 
SMIME_¸lf_c›y
(
BIO
 *
ö
, BIO *
out
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

375 
SMIME_ãxt
(
BIO
 *
ö
, BIO *
out
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

381 
ERR_lﬂd_PKCS7_°rögs
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

386 
	#PKCS7_F_B64_READ_PKCS7
 120

	)

387 
	#PKCS7_F_B64_WRITE_PKCS7
 121

	)

388 
	#PKCS7_F_PKCS7_ADD_ATTRIB_SMIMECAP
 118

	)

389 
	#PKCS7_F_PKCS7_ADD_CERTIFICATE
 100

	)

390 
	#PKCS7_F_PKCS7_ADD_CRL
 101

	)

391 
	#PKCS7_F_PKCS7_ADD_RECIPIENT_INFO
 102

	)

392 
	#PKCS7_F_PKCS7_ADD_SIGNER
 103

	)

393 
	#PKCS7_F_PKCS7_BIO_ADD_DIGEST
 125

	)

394 
	#PKCS7_F_PKCS7_CTRL
 104

	)

395 
	#PKCS7_F_PKCS7_DATADECODE
 112

	)

396 
	#PKCS7_F_PKCS7_DATAFINAL
 128

	)

397 
	#PKCS7_F_PKCS7_DATAINIT
 105

	)

398 
	#PKCS7_F_PKCS7_DATASIGN
 106

	)

399 
	#PKCS7_F_PKCS7_DATAVERIFY
 107

	)

400 
	#PKCS7_F_PKCS7_DECRYPT
 114

	)

401 
	#PKCS7_F_PKCS7_ENCRYPT
 115

	)

402 
	#PKCS7_F_PKCS7_FIND_DIGEST
 127

	)

403 
	#PKCS7_F_PKCS7_GET0_SIGNERS
 124

	)

404 
	#PKCS7_F_PKCS7_SET_CIPHER
 108

	)

405 
	#PKCS7_F_PKCS7_SET_CONTENT
 109

	)

406 
	#PKCS7_F_PKCS7_SET_DIGEST
 126

	)

407 
	#PKCS7_F_PKCS7_SET_TYPE
 110

	)

408 
	#PKCS7_F_PKCS7_SIGN
 116

	)

409 
	#PKCS7_F_PKCS7_SIGNATUREVERIFY
 113

	)

410 
	#PKCS7_F_PKCS7_SIMPLE_SMIMECAP
 119

	)

411 
	#PKCS7_F_PKCS7_VERIFY
 117

	)

412 
	#PKCS7_F_SMIME_READ_PKCS7
 122

	)

413 
	#PKCS7_F_SMIME_TEXT
 123

	)

416 
	#PKCS7_R_CERTIFICATE_VERIFY_ERROR
 117

	)

417 
	#PKCS7_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER
 144

	)

418 
	#PKCS7_R_CIPHER_NOT_INITIALIZED
 116

	)

419 
	#PKCS7_R_CONTENT_AND_DATA_PRESENT
 118

	)

420 
	#PKCS7_R_DECODE_ERROR
 130

	)

421 
	#PKCS7_R_DECRYPTED_KEY_IS_WRONG_LENGTH
 100

	)

422 
	#PKCS7_R_DECRYPT_ERROR
 119

	)

423 
	#PKCS7_R_DIGEST_FAILURE
 101

	)

424 
	#PKCS7_R_ERROR_ADDING_RECIPIENT
 120

	)

425 
	#PKCS7_R_ERROR_SETTING_CIPHER
 121

	)

426 
	#PKCS7_R_INVALID_MIME_TYPE
 131

	)

427 
	#PKCS7_R_INVALID_NULL_POINTER
 143

	)

428 
	#PKCS7_R_MIME_NO_CONTENT_TYPE
 132

	)

429 
	#PKCS7_R_MIME_PARSE_ERROR
 133

	)

430 
	#PKCS7_R_MIME_SIG_PARSE_ERROR
 134

	)

431 
	#PKCS7_R_MISSING_CERIPEND_INFO
 103

	)

432 
	#PKCS7_R_NO_CONTENT
 122

	)

433 
	#PKCS7_R_NO_CONTENT_TYPE
 135

	)

434 
	#PKCS7_R_NO_MULTIPART_BODY_FAILURE
 136

	)

435 
	#PKCS7_R_NO_MULTIPART_BOUNDARY
 137

	)

436 
	#PKCS7_R_NO_RECIPIENT_MATCHES_CERTIFICATE
 115

	)

437 
	#PKCS7_R_NO_RECIPIENT_MATCHES_KEY
 146

	)

438 
	#PKCS7_R_NO_SIGNATURES_ON_DATA
 123

	)

439 
	#PKCS7_R_NO_SIGNERS
 142

	)

440 
	#PKCS7_R_NO_SIG_CONTENT_TYPE
 138

	)

441 
	#PKCS7_R_OPERATION_NOT_SUPPORTED_ON_THIS_TYPE
 104

	)

442 
	#PKCS7_R_PKCS7_ADD_SIGNATURE_ERROR
 124

	)

443 
	#PKCS7_R_PKCS7_DATAFINAL
 126

	)

444 
	#PKCS7_R_PKCS7_DATAFINAL_ERROR
 125

	)

445 
	#PKCS7_R_PKCS7_DATASIGN
 145

	)

446 
	#PKCS7_R_PKCS7_PARSE_ERROR
 139

	)

447 
	#PKCS7_R_PKCS7_SIG_PARSE_ERROR
 140

	)

448 
	#PKCS7_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE
 127

	)

449 
	#PKCS7_R_SIGNATURE_FAILURE
 105

	)

450 
	#PKCS7_R_SIGNER_CERTIFICATE_NOT_FOUND
 128

	)

451 
	#PKCS7_R_SIG_INVALID_MIME_TYPE
 141

	)

452 
	#PKCS7_R_SMIME_TEXT_ERROR
 129

	)

453 
	#PKCS7_R_UNABLE_TO_FIND_CERTIFICATE
 106

	)

454 
	#PKCS7_R_UNABLE_TO_FIND_MEM_BIO
 107

	)

455 
	#PKCS7_R_UNABLE_TO_FIND_MESSAGE_DIGEST
 108

	)

456 
	#PKCS7_R_UNKNOWN_DIGEST_TYPE
 109

	)

457 
	#PKCS7_R_UNKNOWN_OPERATION
 110

	)

458 
	#PKCS7_R_UNSUPPORTED_CIPHER_TYPE
 111

	)

459 
	#PKCS7_R_UNSUPPORTED_CONTENT_TYPE
 112

	)

460 
	#PKCS7_R_WRONG_CONTENT_TYPE
 113

	)

461 
	#PKCS7_R_WRONG_PKCS7_TYPE
 114

	)

463 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/safestack.h

55 #i‚de‡
HEADER_SAFESTACK_H


56 
	#HEADER_SAFESTACK_H


	)

58 
	~<›ís¶/°ack.h
>

60 #ifde‡
DEBUG_SAFESTACK


62 #i‚de‡
CHECKED_PTR_OF


63 
	#CHECKED_PTR_OF
(
ty≥
, 
p
) \

64 ((*Ë(1 ? 
p
 : (
ty≥
*)0))

	)

67 
	#CHECKED_SK_FREE_FUNC
(
ty≥
, 
p
) \

68 (((*)(*)Ë((1 ? 
p
 : ((*)(
ty≥
 *))0)))

	)

70 
	#CHECKED_SK_CMP_FUNC
(
ty≥
, 
p
) \

72 ((1 ? 
p
 : ((*)(c⁄° 
ty≥
 * c⁄° *, c⁄°Åy≥ * c⁄° *))0)))

	)

74 
	#STACK_OF
(
ty≥
Ë
°ack_°_
##
	)
type

75 
	#PREDECLARE_STACK_OF
(
ty≥
Ë
	`STACK_OF
—y≥);

	)

77 
	#DECLARE_STACK_OF
(
ty≥
) \

78 
	`STACK_OF
(
ty≥
) \

80 
STACK
 
°ack
; \

81 };

	)

83 
	#IMPLEMENT_STACK_OF
(
ty≥
Ë

	)

87 
	#SKM_sk_√w
(
ty≥
, 
cmp
) \

88 ((
	`STACK_OF
(
ty≥
Ë*)
	`sk_√w
(
	`CHECKED_SK_CMP_FUNC
—y≥, 
cmp
)))

	)

89 
	#SKM_sk_√w_nuŒ
(
ty≥
) \

90 ((
	`STACK_OF
(
ty≥
Ë*)
	`sk_√w_nuŒ
())

	)

91 
	#SKM_sk_‰ì
(
ty≥
, 
°
) \

92 
	`sk_‰ì
(
	`CHECKED_PTR_OF
(
	`STACK_OF
(
ty≥
), 
°
))

	)

93 
	#SKM_sk_num
(
ty≥
, 
°
) \

94 
	`sk_num
(
	`CHECKED_PTR_OF
(
	`STACK_OF
(
ty≥
), 
°
))

	)

95 
	#SKM_sk_vÆue
(
ty≥
, 
°
,
i
) \

96 ((
ty≥
 *)
	`sk_vÆue
(
	`CHECKED_PTR_OF
(
	`STACK_OF
—y≥), 
°
), 
i
))

	)

97 
	#SKM_sk_£t
(
ty≥
, 
°
,
i
,
vÆ
) \

98 
	`sk_£t
(
	`CHECKED_PTR_OF
(
	`STACK_OF
(
ty≥
), 
°
), 
i
, CHECKED_PTR_OF—y≥, 
vÆ
))

	)

99 
	#SKM_sk_zîo
(
ty≥
, 
°
) \

100 
	`sk_zîo
(
	`CHECKED_PTR_OF
(
	`STACK_OF
(
ty≥
), 
°
))

	)

101 
	#SKM_sk_push
(
ty≥
, 
°
,
vÆ
) \

102 
	`sk_push
(
	`CHECKED_PTR_OF
(
	`STACK_OF
(
ty≥
), 
°
), CHECKED_PTR_OF—y≥, 
vÆ
))

	)

103 
	#SKM_sk_unshi·
(
ty≥
, 
°
,
vÆ
) \

104 
	`sk_unshi·
(
	`CHECKED_PTR_OF
(
	`STACK_OF
(
ty≥
), 
°
), CHECKED_PTR_OF—y≥, 
vÆ
))

	)

105 
	#SKM_sk_föd
(
ty≥
, 
°
,
vÆ
) \

106 
	`sk_föd
(
	`CHECKED_PTR_OF
(
	`STACK_OF
(
ty≥
), 
°
), CHECKED_PTR_OF—y≥, 
vÆ
))

	)

107 
	#SKM_sk_dñëe
(
ty≥
, 
°
,
i
) \

108 (
ty≥
 *)
	`sk_dñëe
(
	`CHECKED_PTR_OF
(
	`STACK_OF
—y≥), 
°
), 
i
)

	)

109 
	#SKM_sk_dñëe_±r
(
ty≥
, 
°
,
±r
) \

110 (
ty≥
 *)
	`sk_dñëe_±r
(
	`CHECKED_PTR_OF
(
	`STACK_OF
—y≥), 
°
), CHECKED_PTR_OF—y≥, 
±r
))

	)

111 
	#SKM_sk_ö£π
(
ty≥
, 
°
,
vÆ
,
i
) \

112 
	`sk_ö£π
(
	`CHECKED_PTR_OF
(
	`STACK_OF
(
ty≥
), 
°
), CHECKED_PTR_OF—y≥, 
vÆ
), 
i
)

	)

113 
	#SKM_sk_£t_cmp_func
(
ty≥
, 
°
,
cmp
) \

114 (((*)(c⁄° 
ty≥
 * const *,constÅype * const *)) \

115 
	`sk_£t_cmp_func
(
	`CHECKED_PTR_OF
(
	`STACK_OF
(
ty≥
), 
°
), 
	`CHECKED_SK_CMP_FUNC
—y≥, 
cmp
)))

	)

116 
	#SKM_sk_dup
(
ty≥
, 
°
) \

117 (
	`STACK_OF
(
ty≥
Ë*)
	`sk_dup
(
	`CHECKED_PTR_OF
(STACK_OF—y≥), 
°
))

	)

118 
	#SKM_sk_p›_‰ì
(
ty≥
, 
°
,
‰ì_func
) \

119 
	`sk_p›_‰ì
(
	`CHECKED_PTR_OF
(
	`STACK_OF
(
ty≥
), 
°
), 
	`CHECKED_SK_FREE_FUNC
—y≥, 
‰ì_func
))

	)

120 
	#SKM_sk_shi·
(
ty≥
, 
°
) \

121 (
ty≥
 *)
	`sk_shi·
(
	`CHECKED_PTR_OF
(
	`STACK_OF
—y≥), 
°
))

	)

122 
	#SKM_sk_p›
(
ty≥
, 
°
) \

123 (
ty≥
 *)
	`sk_p›
(
	`CHECKED_PTR_OF
(
	`STACK_OF
—y≥), 
°
))

	)

124 
	#SKM_sk_s‹t
(
ty≥
, 
°
) \

125 
	`sk_s‹t
(
	`CHECKED_PTR_OF
(
	`STACK_OF
(
ty≥
), 
°
))

	)

126 
	#SKM_sk_is_s‹ãd
(
ty≥
, 
°
) \

127 
	`sk_is_s‹ãd
(
	`CHECKED_PTR_OF
(
	`STACK_OF
(
ty≥
), 
°
))

	)

129 
	#SKM_ASN1_SET_OF_d2i
(
ty≥
, 
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

130 (
	`STACK_OF
(
ty≥
Ë*)
	`d2i_ASN1_SET
(
	`CHECKED_PTR_OF
(STACK_OF—y≥)*, 
°
), \

131 
µ
, 
Àngth
, \

132 
	`CHECKED_D2I_OF
(
ty≥
, 
d2i_func
), \

133 
	`CHECKED_SK_FREE_FUNC
(
ty≥
, 
‰ì_func
), \

134 
ex_èg
, 
ex_˛ass
)

	)

136 
	#SKM_ASN1_SET_OF_i2d
(
ty≥
, 
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

137 
	`i2d_ASN1_SET
(
	`CHECKED_PTR_OF
(
	`STACK_OF
(
ty≥
), 
°
), 
µ
, \

138 
	`CHECKED_I2D_OF
(
ty≥
, 
i2d_func
), \

139 
ex_èg
, 
ex_˛ass
, 
is_£t
)

	)

141 
	#SKM_ASN1_£q_∑ck
(
ty≥
, 
°
, 
i2d_func
, 
buf
, 
Àn
) \

142 
	`ASN1_£q_∑ck
(
	`CHECKED_PTR_OF
(
	`STACK_OF
(
ty≥
), 
°
), \

143 
	`CHECKED_I2D_OF
(
ty≥
, 
i2d_func
), 
buf
, 
Àn
)

	)

145 
	#SKM_ASN1_£q_u≈ack
(
ty≥
, 
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

146 (
	`STACK_OF
(
ty≥
Ë*)
	`ASN1_£q_u≈ack
(
buf
, 
Àn
, 
	`CHECKED_D2I_OF
—y≥, 
d2i_func
), 
	`CHECKED_SK_FREE_FUNC
—y≥, 
‰ì_func
))

	)

148 
	#SKM_PKCS12_de¸y±_d2i
(
ty≥
, 
Æg‹
, 
d2i_func
, 
‰ì_func
, 
∑ss
, 
∑s¶í
, 
o˘
, 
£q
) \

149 (
	`STACK_OF
(
ty≥
Ë*)
	`PKCS12_de¸y±_d2i
(
Æg‹
, \

150 
	`CHECKED_D2I_OF
(
ty≥
, 
d2i_func
), \

151 
	`CHECKED_SK_FREE_FUNC
(
ty≥
, 
‰ì_func
), \

152 
∑ss
, 
∑s¶í
, 
o˘
, 
£q
)

	)

156 
	#STACK_OF
(
ty≥
Ë
STACK


	)

157 
	#PREDECLARE_STACK_OF
(
ty≥
Ë

	)

158 
	#DECLARE_STACK_OF
(
ty≥
Ë

	)

159 
	#IMPLEMENT_STACK_OF
(
ty≥
Ë

	)

161 
	#SKM_sk_√w
(
ty≥
, 
cmp
) \

162 
	`sk_√w
(((*)(c⁄° * c⁄° *, c⁄° * c⁄° *))(
cmp
))

	)

163 
	#SKM_sk_√w_nuŒ
(
ty≥
) \

164 
	`sk_√w_nuŒ
()

	)

165 
	#SKM_sk_‰ì
(
ty≥
, 
°
) \

166 
	`sk_‰ì
(
°
)

	)

167 
	#SKM_sk_num
(
ty≥
, 
°
) \

168 
	`sk_num
(
°
)

	)

169 
	#SKM_sk_vÆue
(
ty≥
, 
°
,
i
) \

170 ((
ty≥
 *)
	`sk_vÆue
(
°
, 
i
))

	)

171 
	#SKM_sk_£t
(
ty≥
, 
°
,
i
,
vÆ
) \

172 ((
ty≥
 *)
	`sk_£t
(
°
, 
i
,(*)
vÆ
))

	)

173 
	#SKM_sk_zîo
(
ty≥
, 
°
) \

174 
	`sk_zîo
(
°
)

	)

175 
	#SKM_sk_push
(
ty≥
, 
°
,
vÆ
) \

176 
	`sk_push
(
°
, (*)
vÆ
)

	)

177 
	#SKM_sk_unshi·
(
ty≥
, 
°
,
vÆ
) \

178 
	`sk_unshi·
(
°
, (*)
vÆ
)

	)

179 
	#SKM_sk_föd
(
ty≥
, 
°
,
vÆ
) \

180 
	`sk_föd
(
°
, (*)
vÆ
)

	)

181 
	#SKM_sk_dñëe
(
ty≥
, 
°
,
i
) \

182 ((
ty≥
 *)
	`sk_dñëe
(
°
, 
i
))

	)

183 
	#SKM_sk_dñëe_±r
(
ty≥
, 
°
,
±r
) \

184 ((
ty≥
 *)
	`sk_dñëe_±r
(
°
,(*)
±r
))

	)

185 
	#SKM_sk_ö£π
(
ty≥
, 
°
,
vÆ
,
i
) \

186 
	`sk_ö£π
(
°
, (*)
vÆ
, 
i
)

	)

187 
	#SKM_sk_£t_cmp_func
(
ty≥
, 
°
,
cmp
) \

188 (((*)(c⁄° 
ty≥
 * const *,constÅype * const *)) \

189 
	`sk_£t_cmp_func
(
°
, ((*)(c⁄° * c⁄° *, c⁄° * c⁄° *))(
cmp
)))

	)

190 
	#SKM_sk_dup
(
ty≥
, 
°
) \

191 
	`sk_dup
(
°
)

	)

192 
	#SKM_sk_p›_‰ì
(
ty≥
, 
°
,
‰ì_func
) \

193 
	`sk_p›_‰ì
(
°
, ((*)(*))
‰ì_func
)

	)

194 
	#SKM_sk_shi·
(
ty≥
, 
°
) \

195 ((
ty≥
 *)
	`sk_shi·
(
°
))

	)

196 
	#SKM_sk_p›
(
ty≥
, 
°
) \

197 ((
ty≥
 *)
	`sk_p›
(
°
))

	)

198 
	#SKM_sk_s‹t
(
ty≥
, 
°
) \

199 
	`sk_s‹t
(
°
)

	)

200 
	#SKM_sk_is_s‹ãd
(
ty≥
, 
°
) \

201 
	`sk_is_s‹ãd
(
°
)

	)

203 
	#SKM_ASN1_SET_OF_d2i
(
ty≥
, 
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

204 
	`d2i_ASN1_SET
(
°
,
µ
,
Àngth
, (*(*)(** ,c⁄° ** ,))
d2i_func
, ((*)(*))
‰ì_func
, 
ex_èg
,
ex_˛ass
)

	)

205 
	#SKM_ASN1_SET_OF_i2d
(
ty≥
, 
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

206 
	`i2d_ASN1_SET
(
°
,
µ
,((*)(*, **))
i2d_func
,
ex_èg
,
ex_˛ass
,
is_£t
)

	)

208 
	#SKM_ASN1_£q_∑ck
(
ty≥
, 
°
, 
i2d_func
, 
buf
, 
Àn
) \

209 
	`ASN1_£q_∑ck
(
°
, ((*)(*, **))
i2d_func
, 
buf
, 
Àn
)

	)

210 
	#SKM_ASN1_£q_u≈ack
(
ty≥
, 
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

211 
	`ASN1_£q_u≈ack
(
buf
,
Àn
,(*(*)(**,c⁄° **,))
d2i_func
, ((*)(*))
‰ì_func
)

	)

213 
	#SKM_PKCS12_de¸y±_d2i
(
ty≥
, 
Æg‹
, 
d2i_func
, 
‰ì_func
, 
∑ss
, 
∑s¶í
, 
o˘
, 
£q
) \

214 ((
STACK
 *)
	`PKCS12_de¸y±_d2i
(
Æg‹
,(*(*)())
d2i_func
, ((*)(*))
‰ì_func
,
∑ss
,
∑s¶í
,
o˘
,
£q
))

	)

219 
	#sk_ACCESS_DESCRIPTION_√w
(
°
Ë
	`SKM_sk_√w
(
ACCESS_DESCRIPTION
, (°))

	)

220 
	#sk_ACCESS_DESCRIPTION_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
ACCESS_DESCRIPTION
)

	)

221 
	#sk_ACCESS_DESCRIPTION_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
ACCESS_DESCRIPTION
, (°))

	)

222 
	#sk_ACCESS_DESCRIPTION_num
(
°
Ë
	`SKM_sk_num
(
ACCESS_DESCRIPTION
, (°))

	)

223 
	#sk_ACCESS_DESCRIPTION_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
ACCESS_DESCRIPTION
, (°), (i))

	)

224 
	#sk_ACCESS_DESCRIPTION_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
ACCESS_DESCRIPTION
, (°), (i), (vÆ))

	)

225 
	#sk_ACCESS_DESCRIPTION_zîo
(
°
Ë
	`SKM_sk_zîo
(
ACCESS_DESCRIPTION
, (°))

	)

226 
	#sk_ACCESS_DESCRIPTION_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
ACCESS_DESCRIPTION
, (°), (vÆ))

	)

227 
	#sk_ACCESS_DESCRIPTION_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
ACCESS_DESCRIPTION
, (°), (vÆ))

	)

228 
	#sk_ACCESS_DESCRIPTION_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
ACCESS_DESCRIPTION
, (°), (vÆ))

	)

229 
	#sk_ACCESS_DESCRIPTION_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
ACCESS_DESCRIPTION
, (°), (vÆ))

	)

230 
	#sk_ACCESS_DESCRIPTION_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
ACCESS_DESCRIPTION
, (°), (i))

	)

231 
	#sk_ACCESS_DESCRIPTION_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
ACCESS_DESCRIPTION
, (°), (±r))

	)

232 
	#sk_ACCESS_DESCRIPTION_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
ACCESS_DESCRIPTION
, (°), (vÆ), (i))

	)

233 
	#sk_ACCESS_DESCRIPTION_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
ACCESS_DESCRIPTION
, (°), (cmp))

	)

234 
	#sk_ACCESS_DESCRIPTION_dup
(
°
Ë
	`SKM_sk_dup
(
ACCESS_DESCRIPTION
, st)

	)

235 
	#sk_ACCESS_DESCRIPTION_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
ACCESS_DESCRIPTION
, (°), (‰ì_func))

	)

236 
	#sk_ACCESS_DESCRIPTION_shi·
(
°
Ë
	`SKM_sk_shi·
(
ACCESS_DESCRIPTION
, (°))

	)

237 
	#sk_ACCESS_DESCRIPTION_p›
(
°
Ë
	`SKM_sk_p›
(
ACCESS_DESCRIPTION
, (°))

	)

238 
	#sk_ACCESS_DESCRIPTION_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
ACCESS_DESCRIPTION
, (°))

	)

239 
	#sk_ACCESS_DESCRIPTION_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
ACCESS_DESCRIPTION
, (°))

	)

241 
	#sk_ASIdOrR™ge_√w
(
°
Ë
	`SKM_sk_√w
(
ASIdOrR™ge
, (°))

	)

242 
	#sk_ASIdOrR™ge_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
ASIdOrR™ge
)

	)

243 
	#sk_ASIdOrR™ge_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
ASIdOrR™ge
, (°))

	)

244 
	#sk_ASIdOrR™ge_num
(
°
Ë
	`SKM_sk_num
(
ASIdOrR™ge
, (°))

	)

245 
	#sk_ASIdOrR™ge_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
ASIdOrR™ge
, (°), (i))

	)

246 
	#sk_ASIdOrR™ge_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
ASIdOrR™ge
, (°), (i), (vÆ))

	)

247 
	#sk_ASIdOrR™ge_zîo
(
°
Ë
	`SKM_sk_zîo
(
ASIdOrR™ge
, (°))

	)

248 
	#sk_ASIdOrR™ge_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
ASIdOrR™ge
, (°), (vÆ))

	)

249 
	#sk_ASIdOrR™ge_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
ASIdOrR™ge
, (°), (vÆ))

	)

250 
	#sk_ASIdOrR™ge_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
ASIdOrR™ge
, (°), (vÆ))

	)

251 
	#sk_ASIdOrR™ge_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
ASIdOrR™ge
, (°), (vÆ))

	)

252 
	#sk_ASIdOrR™ge_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
ASIdOrR™ge
, (°), (i))

	)

253 
	#sk_ASIdOrR™ge_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
ASIdOrR™ge
, (°), (±r))

	)

254 
	#sk_ASIdOrR™ge_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
ASIdOrR™ge
, (°), (vÆ), (i))

	)

255 
	#sk_ASIdOrR™ge_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
ASIdOrR™ge
, (°), (cmp))

	)

256 
	#sk_ASIdOrR™ge_dup
(
°
Ë
	`SKM_sk_dup
(
ASIdOrR™ge
, st)

	)

257 
	#sk_ASIdOrR™ge_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
ASIdOrR™ge
, (°), (‰ì_func))

	)

258 
	#sk_ASIdOrR™ge_shi·
(
°
Ë
	`SKM_sk_shi·
(
ASIdOrR™ge
, (°))

	)

259 
	#sk_ASIdOrR™ge_p›
(
°
Ë
	`SKM_sk_p›
(
ASIdOrR™ge
, (°))

	)

260 
	#sk_ASIdOrR™ge_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
ASIdOrR™ge
, (°))

	)

261 
	#sk_ASIdOrR™ge_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
ASIdOrR™ge
, (°))

	)

263 
	#sk_ASN1_GENERALSTRING_√w
(
°
Ë
	`SKM_sk_√w
(
ASN1_GENERALSTRING
, (°))

	)

264 
	#sk_ASN1_GENERALSTRING_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
ASN1_GENERALSTRING
)

	)

265 
	#sk_ASN1_GENERALSTRING_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
ASN1_GENERALSTRING
, (°))

	)

266 
	#sk_ASN1_GENERALSTRING_num
(
°
Ë
	`SKM_sk_num
(
ASN1_GENERALSTRING
, (°))

	)

267 
	#sk_ASN1_GENERALSTRING_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
ASN1_GENERALSTRING
, (°), (i))

	)

268 
	#sk_ASN1_GENERALSTRING_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
ASN1_GENERALSTRING
, (°), (i), (vÆ))

	)

269 
	#sk_ASN1_GENERALSTRING_zîo
(
°
Ë
	`SKM_sk_zîo
(
ASN1_GENERALSTRING
, (°))

	)

270 
	#sk_ASN1_GENERALSTRING_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
ASN1_GENERALSTRING
, (°), (vÆ))

	)

271 
	#sk_ASN1_GENERALSTRING_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
ASN1_GENERALSTRING
, (°), (vÆ))

	)

272 
	#sk_ASN1_GENERALSTRING_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
ASN1_GENERALSTRING
, (°), (vÆ))

	)

273 
	#sk_ASN1_GENERALSTRING_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
ASN1_GENERALSTRING
, (°), (vÆ))

	)

274 
	#sk_ASN1_GENERALSTRING_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
ASN1_GENERALSTRING
, (°), (i))

	)

275 
	#sk_ASN1_GENERALSTRING_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
ASN1_GENERALSTRING
, (°), (±r))

	)

276 
	#sk_ASN1_GENERALSTRING_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
ASN1_GENERALSTRING
, (°), (vÆ), (i))

	)

277 
	#sk_ASN1_GENERALSTRING_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
ASN1_GENERALSTRING
, (°), (cmp))

	)

278 
	#sk_ASN1_GENERALSTRING_dup
(
°
Ë
	`SKM_sk_dup
(
ASN1_GENERALSTRING
, st)

	)

279 
	#sk_ASN1_GENERALSTRING_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
ASN1_GENERALSTRING
, (°), (‰ì_func))

	)

280 
	#sk_ASN1_GENERALSTRING_shi·
(
°
Ë
	`SKM_sk_shi·
(
ASN1_GENERALSTRING
, (°))

	)

281 
	#sk_ASN1_GENERALSTRING_p›
(
°
Ë
	`SKM_sk_p›
(
ASN1_GENERALSTRING
, (°))

	)

282 
	#sk_ASN1_GENERALSTRING_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
ASN1_GENERALSTRING
, (°))

	)

283 
	#sk_ASN1_GENERALSTRING_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
ASN1_GENERALSTRING
, (°))

	)

285 
	#sk_ASN1_INTEGER_√w
(
°
Ë
	`SKM_sk_√w
(
ASN1_INTEGER
, (°))

	)

286 
	#sk_ASN1_INTEGER_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
ASN1_INTEGER
)

	)

287 
	#sk_ASN1_INTEGER_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
ASN1_INTEGER
, (°))

	)

288 
	#sk_ASN1_INTEGER_num
(
°
Ë
	`SKM_sk_num
(
ASN1_INTEGER
, (°))

	)

289 
	#sk_ASN1_INTEGER_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
ASN1_INTEGER
, (°), (i))

	)

290 
	#sk_ASN1_INTEGER_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
ASN1_INTEGER
, (°), (i), (vÆ))

	)

291 
	#sk_ASN1_INTEGER_zîo
(
°
Ë
	`SKM_sk_zîo
(
ASN1_INTEGER
, (°))

	)

292 
	#sk_ASN1_INTEGER_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
ASN1_INTEGER
, (°), (vÆ))

	)

293 
	#sk_ASN1_INTEGER_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
ASN1_INTEGER
, (°), (vÆ))

	)

294 
	#sk_ASN1_INTEGER_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
ASN1_INTEGER
, (°), (vÆ))

	)

295 
	#sk_ASN1_INTEGER_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
ASN1_INTEGER
, (°), (vÆ))

	)

296 
	#sk_ASN1_INTEGER_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
ASN1_INTEGER
, (°), (i))

	)

297 
	#sk_ASN1_INTEGER_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
ASN1_INTEGER
, (°), (±r))

	)

298 
	#sk_ASN1_INTEGER_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
ASN1_INTEGER
, (°), (vÆ), (i))

	)

299 
	#sk_ASN1_INTEGER_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
ASN1_INTEGER
, (°), (cmp))

	)

300 
	#sk_ASN1_INTEGER_dup
(
°
Ë
	`SKM_sk_dup
(
ASN1_INTEGER
, st)

	)

301 
	#sk_ASN1_INTEGER_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
ASN1_INTEGER
, (°), (‰ì_func))

	)

302 
	#sk_ASN1_INTEGER_shi·
(
°
Ë
	`SKM_sk_shi·
(
ASN1_INTEGER
, (°))

	)

303 
	#sk_ASN1_INTEGER_p›
(
°
Ë
	`SKM_sk_p›
(
ASN1_INTEGER
, (°))

	)

304 
	#sk_ASN1_INTEGER_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
ASN1_INTEGER
, (°))

	)

305 
	#sk_ASN1_INTEGER_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
ASN1_INTEGER
, (°))

	)

307 
	#sk_ASN1_OBJECT_√w
(
°
Ë
	`SKM_sk_√w
(
ASN1_OBJECT
, (°))

	)

308 
	#sk_ASN1_OBJECT_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
ASN1_OBJECT
)

	)

309 
	#sk_ASN1_OBJECT_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
ASN1_OBJECT
, (°))

	)

310 
	#sk_ASN1_OBJECT_num
(
°
Ë
	`SKM_sk_num
(
ASN1_OBJECT
, (°))

	)

311 
	#sk_ASN1_OBJECT_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
ASN1_OBJECT
, (°), (i))

	)

312 
	#sk_ASN1_OBJECT_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
ASN1_OBJECT
, (°), (i), (vÆ))

	)

313 
	#sk_ASN1_OBJECT_zîo
(
°
Ë
	`SKM_sk_zîo
(
ASN1_OBJECT
, (°))

	)

314 
	#sk_ASN1_OBJECT_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
ASN1_OBJECT
, (°), (vÆ))

	)

315 
	#sk_ASN1_OBJECT_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
ASN1_OBJECT
, (°), (vÆ))

	)

316 
	#sk_ASN1_OBJECT_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
ASN1_OBJECT
, (°), (vÆ))

	)

317 
	#sk_ASN1_OBJECT_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
ASN1_OBJECT
, (°), (vÆ))

	)

318 
	#sk_ASN1_OBJECT_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
ASN1_OBJECT
, (°), (i))

	)

319 
	#sk_ASN1_OBJECT_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
ASN1_OBJECT
, (°), (±r))

	)

320 
	#sk_ASN1_OBJECT_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
ASN1_OBJECT
, (°), (vÆ), (i))

	)

321 
	#sk_ASN1_OBJECT_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
ASN1_OBJECT
, (°), (cmp))

	)

322 
	#sk_ASN1_OBJECT_dup
(
°
Ë
	`SKM_sk_dup
(
ASN1_OBJECT
, st)

	)

323 
	#sk_ASN1_OBJECT_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
ASN1_OBJECT
, (°), (‰ì_func))

	)

324 
	#sk_ASN1_OBJECT_shi·
(
°
Ë
	`SKM_sk_shi·
(
ASN1_OBJECT
, (°))

	)

325 
	#sk_ASN1_OBJECT_p›
(
°
Ë
	`SKM_sk_p›
(
ASN1_OBJECT
, (°))

	)

326 
	#sk_ASN1_OBJECT_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
ASN1_OBJECT
, (°))

	)

327 
	#sk_ASN1_OBJECT_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
ASN1_OBJECT
, (°))

	)

329 
	#sk_ASN1_STRING_TABLE_√w
(
°
Ë
	`SKM_sk_√w
(
ASN1_STRING_TABLE
, (°))

	)

330 
	#sk_ASN1_STRING_TABLE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
ASN1_STRING_TABLE
)

	)

331 
	#sk_ASN1_STRING_TABLE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
ASN1_STRING_TABLE
, (°))

	)

332 
	#sk_ASN1_STRING_TABLE_num
(
°
Ë
	`SKM_sk_num
(
ASN1_STRING_TABLE
, (°))

	)

333 
	#sk_ASN1_STRING_TABLE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
ASN1_STRING_TABLE
, (°), (i))

	)

334 
	#sk_ASN1_STRING_TABLE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
ASN1_STRING_TABLE
, (°), (i), (vÆ))

	)

335 
	#sk_ASN1_STRING_TABLE_zîo
(
°
Ë
	`SKM_sk_zîo
(
ASN1_STRING_TABLE
, (°))

	)

336 
	#sk_ASN1_STRING_TABLE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
ASN1_STRING_TABLE
, (°), (vÆ))

	)

337 
	#sk_ASN1_STRING_TABLE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
ASN1_STRING_TABLE
, (°), (vÆ))

	)

338 
	#sk_ASN1_STRING_TABLE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
ASN1_STRING_TABLE
, (°), (vÆ))

	)

339 
	#sk_ASN1_STRING_TABLE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
ASN1_STRING_TABLE
, (°), (vÆ))

	)

340 
	#sk_ASN1_STRING_TABLE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
ASN1_STRING_TABLE
, (°), (i))

	)

341 
	#sk_ASN1_STRING_TABLE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
ASN1_STRING_TABLE
, (°), (±r))

	)

342 
	#sk_ASN1_STRING_TABLE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
ASN1_STRING_TABLE
, (°), (vÆ), (i))

	)

343 
	#sk_ASN1_STRING_TABLE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
ASN1_STRING_TABLE
, (°), (cmp))

	)

344 
	#sk_ASN1_STRING_TABLE_dup
(
°
Ë
	`SKM_sk_dup
(
ASN1_STRING_TABLE
, st)

	)

345 
	#sk_ASN1_STRING_TABLE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
ASN1_STRING_TABLE
, (°), (‰ì_func))

	)

346 
	#sk_ASN1_STRING_TABLE_shi·
(
°
Ë
	`SKM_sk_shi·
(
ASN1_STRING_TABLE
, (°))

	)

347 
	#sk_ASN1_STRING_TABLE_p›
(
°
Ë
	`SKM_sk_p›
(
ASN1_STRING_TABLE
, (°))

	)

348 
	#sk_ASN1_STRING_TABLE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
ASN1_STRING_TABLE
, (°))

	)

349 
	#sk_ASN1_STRING_TABLE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
ASN1_STRING_TABLE
, (°))

	)

351 
	#sk_ASN1_TYPE_√w
(
°
Ë
	`SKM_sk_√w
(
ASN1_TYPE
, (°))

	)

352 
	#sk_ASN1_TYPE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
ASN1_TYPE
)

	)

353 
	#sk_ASN1_TYPE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
ASN1_TYPE
, (°))

	)

354 
	#sk_ASN1_TYPE_num
(
°
Ë
	`SKM_sk_num
(
ASN1_TYPE
, (°))

	)

355 
	#sk_ASN1_TYPE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
ASN1_TYPE
, (°), (i))

	)

356 
	#sk_ASN1_TYPE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
ASN1_TYPE
, (°), (i), (vÆ))

	)

357 
	#sk_ASN1_TYPE_zîo
(
°
Ë
	`SKM_sk_zîo
(
ASN1_TYPE
, (°))

	)

358 
	#sk_ASN1_TYPE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
ASN1_TYPE
, (°), (vÆ))

	)

359 
	#sk_ASN1_TYPE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
ASN1_TYPE
, (°), (vÆ))

	)

360 
	#sk_ASN1_TYPE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
ASN1_TYPE
, (°), (vÆ))

	)

361 
	#sk_ASN1_TYPE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
ASN1_TYPE
, (°), (vÆ))

	)

362 
	#sk_ASN1_TYPE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
ASN1_TYPE
, (°), (i))

	)

363 
	#sk_ASN1_TYPE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
ASN1_TYPE
, (°), (±r))

	)

364 
	#sk_ASN1_TYPE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
ASN1_TYPE
, (°), (vÆ), (i))

	)

365 
	#sk_ASN1_TYPE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
ASN1_TYPE
, (°), (cmp))

	)

366 
	#sk_ASN1_TYPE_dup
(
°
Ë
	`SKM_sk_dup
(
ASN1_TYPE
, st)

	)

367 
	#sk_ASN1_TYPE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
ASN1_TYPE
, (°), (‰ì_func))

	)

368 
	#sk_ASN1_TYPE_shi·
(
°
Ë
	`SKM_sk_shi·
(
ASN1_TYPE
, (°))

	)

369 
	#sk_ASN1_TYPE_p›
(
°
Ë
	`SKM_sk_p›
(
ASN1_TYPE
, (°))

	)

370 
	#sk_ASN1_TYPE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
ASN1_TYPE
, (°))

	)

371 
	#sk_ASN1_TYPE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
ASN1_TYPE
, (°))

	)

373 
	#sk_ASN1_VALUE_√w
(
°
Ë
	`SKM_sk_√w
(
ASN1_VALUE
, (°))

	)

374 
	#sk_ASN1_VALUE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
ASN1_VALUE
)

	)

375 
	#sk_ASN1_VALUE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
ASN1_VALUE
, (°))

	)

376 
	#sk_ASN1_VALUE_num
(
°
Ë
	`SKM_sk_num
(
ASN1_VALUE
, (°))

	)

377 
	#sk_ASN1_VALUE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
ASN1_VALUE
, (°), (i))

	)

378 
	#sk_ASN1_VALUE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
ASN1_VALUE
, (°), (i), (vÆ))

	)

379 
	#sk_ASN1_VALUE_zîo
(
°
Ë
	`SKM_sk_zîo
(
ASN1_VALUE
, (°))

	)

380 
	#sk_ASN1_VALUE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
ASN1_VALUE
, (°), (vÆ))

	)

381 
	#sk_ASN1_VALUE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
ASN1_VALUE
, (°), (vÆ))

	)

382 
	#sk_ASN1_VALUE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
ASN1_VALUE
, (°), (vÆ))

	)

383 
	#sk_ASN1_VALUE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
ASN1_VALUE
, (°), (vÆ))

	)

384 
	#sk_ASN1_VALUE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
ASN1_VALUE
, (°), (i))

	)

385 
	#sk_ASN1_VALUE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
ASN1_VALUE
, (°), (±r))

	)

386 
	#sk_ASN1_VALUE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
ASN1_VALUE
, (°), (vÆ), (i))

	)

387 
	#sk_ASN1_VALUE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
ASN1_VALUE
, (°), (cmp))

	)

388 
	#sk_ASN1_VALUE_dup
(
°
Ë
	`SKM_sk_dup
(
ASN1_VALUE
, st)

	)

389 
	#sk_ASN1_VALUE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
ASN1_VALUE
, (°), (‰ì_func))

	)

390 
	#sk_ASN1_VALUE_shi·
(
°
Ë
	`SKM_sk_shi·
(
ASN1_VALUE
, (°))

	)

391 
	#sk_ASN1_VALUE_p›
(
°
Ë
	`SKM_sk_p›
(
ASN1_VALUE
, (°))

	)

392 
	#sk_ASN1_VALUE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
ASN1_VALUE
, (°))

	)

393 
	#sk_ASN1_VALUE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
ASN1_VALUE
, (°))

	)

395 
	#sk_BIO_√w
(
°
Ë
	`SKM_sk_√w
(
BIO
, (°))

	)

396 
	#sk_BIO_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
BIO
)

	)

397 
	#sk_BIO_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
BIO
, (°))

	)

398 
	#sk_BIO_num
(
°
Ë
	`SKM_sk_num
(
BIO
, (°))

	)

399 
	#sk_BIO_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
BIO
, (°), (i))

	)

400 
	#sk_BIO_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
BIO
, (°), (i), (vÆ))

	)

401 
	#sk_BIO_zîo
(
°
Ë
	`SKM_sk_zîo
(
BIO
, (°))

	)

402 
	#sk_BIO_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
BIO
, (°), (vÆ))

	)

403 
	#sk_BIO_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
BIO
, (°), (vÆ))

	)

404 
	#sk_BIO_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
BIO
, (°), (vÆ))

	)

405 
	#sk_BIO_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
BIO
, (°), (vÆ))

	)

406 
	#sk_BIO_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
BIO
, (°), (i))

	)

407 
	#sk_BIO_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
BIO
, (°), (±r))

	)

408 
	#sk_BIO_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
BIO
, (°), (vÆ), (i))

	)

409 
	#sk_BIO_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
BIO
, (°), (cmp))

	)

410 
	#sk_BIO_dup
(
°
Ë
	`SKM_sk_dup
(
BIO
, st)

	)

411 
	#sk_BIO_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
BIO
, (°), (‰ì_func))

	)

412 
	#sk_BIO_shi·
(
°
Ë
	`SKM_sk_shi·
(
BIO
, (°))

	)

413 
	#sk_BIO_p›
(
°
Ë
	`SKM_sk_p›
(
BIO
, (°))

	)

414 
	#sk_BIO_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
BIO
, (°))

	)

415 
	#sk_BIO_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
BIO
, (°))

	)

417 
	#sk_CMS_CîtifiˇãChoi˚s_√w
(
°
Ë
	`SKM_sk_√w
(
CMS_CîtifiˇãChoi˚s
, (°))

	)

418 
	#sk_CMS_CîtifiˇãChoi˚s_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
CMS_CîtifiˇãChoi˚s
)

	)

419 
	#sk_CMS_CîtifiˇãChoi˚s_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
CMS_CîtifiˇãChoi˚s
, (°))

	)

420 
	#sk_CMS_CîtifiˇãChoi˚s_num
(
°
Ë
	`SKM_sk_num
(
CMS_CîtifiˇãChoi˚s
, (°))

	)

421 
	#sk_CMS_CîtifiˇãChoi˚s_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
CMS_CîtifiˇãChoi˚s
, (°), (i))

	)

422 
	#sk_CMS_CîtifiˇãChoi˚s_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
CMS_CîtifiˇãChoi˚s
, (°), (i), (vÆ))

	)

423 
	#sk_CMS_CîtifiˇãChoi˚s_zîo
(
°
Ë
	`SKM_sk_zîo
(
CMS_CîtifiˇãChoi˚s
, (°))

	)

424 
	#sk_CMS_CîtifiˇãChoi˚s_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
CMS_CîtifiˇãChoi˚s
, (°), (vÆ))

	)

425 
	#sk_CMS_CîtifiˇãChoi˚s_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
CMS_CîtifiˇãChoi˚s
, (°), (vÆ))

	)

426 
	#sk_CMS_CîtifiˇãChoi˚s_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
CMS_CîtifiˇãChoi˚s
, (°), (vÆ))

	)

427 
	#sk_CMS_CîtifiˇãChoi˚s_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
CMS_CîtifiˇãChoi˚s
, (°), (vÆ))

	)

428 
	#sk_CMS_CîtifiˇãChoi˚s_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
CMS_CîtifiˇãChoi˚s
, (°), (i))

	)

429 
	#sk_CMS_CîtifiˇãChoi˚s_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
CMS_CîtifiˇãChoi˚s
, (°), (±r))

	)

430 
	#sk_CMS_CîtifiˇãChoi˚s_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
CMS_CîtifiˇãChoi˚s
, (°), (vÆ), (i))

	)

431 
	#sk_CMS_CîtifiˇãChoi˚s_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
CMS_CîtifiˇãChoi˚s
, (°), (cmp))

	)

432 
	#sk_CMS_CîtifiˇãChoi˚s_dup
(
°
Ë
	`SKM_sk_dup
(
CMS_CîtifiˇãChoi˚s
, st)

	)

433 
	#sk_CMS_CîtifiˇãChoi˚s_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
CMS_CîtifiˇãChoi˚s
, (°), (‰ì_func))

	)

434 
	#sk_CMS_CîtifiˇãChoi˚s_shi·
(
°
Ë
	`SKM_sk_shi·
(
CMS_CîtifiˇãChoi˚s
, (°))

	)

435 
	#sk_CMS_CîtifiˇãChoi˚s_p›
(
°
Ë
	`SKM_sk_p›
(
CMS_CîtifiˇãChoi˚s
, (°))

	)

436 
	#sk_CMS_CîtifiˇãChoi˚s_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
CMS_CîtifiˇãChoi˚s
, (°))

	)

437 
	#sk_CMS_CîtifiˇãChoi˚s_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
CMS_CîtifiˇãChoi˚s
, (°))

	)

439 
	#sk_CMS_Recùõ¡Info_√w
(
°
Ë
	`SKM_sk_√w
(
CMS_Recùõ¡Info
, (°))

	)

440 
	#sk_CMS_Recùõ¡Info_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
CMS_Recùõ¡Info
)

	)

441 
	#sk_CMS_Recùõ¡Info_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
CMS_Recùõ¡Info
, (°))

	)

442 
	#sk_CMS_Recùõ¡Info_num
(
°
Ë
	`SKM_sk_num
(
CMS_Recùõ¡Info
, (°))

	)

443 
	#sk_CMS_Recùõ¡Info_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
CMS_Recùõ¡Info
, (°), (i))

	)

444 
	#sk_CMS_Recùõ¡Info_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
CMS_Recùõ¡Info
, (°), (i), (vÆ))

	)

445 
	#sk_CMS_Recùõ¡Info_zîo
(
°
Ë
	`SKM_sk_zîo
(
CMS_Recùõ¡Info
, (°))

	)

446 
	#sk_CMS_Recùõ¡Info_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
CMS_Recùõ¡Info
, (°), (vÆ))

	)

447 
	#sk_CMS_Recùõ¡Info_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
CMS_Recùõ¡Info
, (°), (vÆ))

	)

448 
	#sk_CMS_Recùõ¡Info_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
CMS_Recùõ¡Info
, (°), (vÆ))

	)

449 
	#sk_CMS_Recùõ¡Info_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
CMS_Recùõ¡Info
, (°), (vÆ))

	)

450 
	#sk_CMS_Recùõ¡Info_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
CMS_Recùõ¡Info
, (°), (i))

	)

451 
	#sk_CMS_Recùõ¡Info_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
CMS_Recùõ¡Info
, (°), (±r))

	)

452 
	#sk_CMS_Recùõ¡Info_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
CMS_Recùõ¡Info
, (°), (vÆ), (i))

	)

453 
	#sk_CMS_Recùõ¡Info_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
CMS_Recùõ¡Info
, (°), (cmp))

	)

454 
	#sk_CMS_Recùõ¡Info_dup
(
°
Ë
	`SKM_sk_dup
(
CMS_Recùõ¡Info
, st)

	)

455 
	#sk_CMS_Recùõ¡Info_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
CMS_Recùõ¡Info
, (°), (‰ì_func))

	)

456 
	#sk_CMS_Recùõ¡Info_shi·
(
°
Ë
	`SKM_sk_shi·
(
CMS_Recùõ¡Info
, (°))

	)

457 
	#sk_CMS_Recùõ¡Info_p›
(
°
Ë
	`SKM_sk_p›
(
CMS_Recùõ¡Info
, (°))

	)

458 
	#sk_CMS_Recùõ¡Info_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
CMS_Recùõ¡Info
, (°))

	)

459 
	#sk_CMS_Recùõ¡Info_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
CMS_Recùõ¡Info
, (°))

	)

461 
	#sk_CMS_Revoˇti⁄InfoChoi˚_√w
(
°
Ë
	`SKM_sk_√w
(
CMS_Revoˇti⁄InfoChoi˚
, (°))

	)

462 
	#sk_CMS_Revoˇti⁄InfoChoi˚_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
CMS_Revoˇti⁄InfoChoi˚
)

	)

463 
	#sk_CMS_Revoˇti⁄InfoChoi˚_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
CMS_Revoˇti⁄InfoChoi˚
, (°))

	)

464 
	#sk_CMS_Revoˇti⁄InfoChoi˚_num
(
°
Ë
	`SKM_sk_num
(
CMS_Revoˇti⁄InfoChoi˚
, (°))

	)

465 
	#sk_CMS_Revoˇti⁄InfoChoi˚_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
CMS_Revoˇti⁄InfoChoi˚
, (°), (i))

	)

466 
	#sk_CMS_Revoˇti⁄InfoChoi˚_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
CMS_Revoˇti⁄InfoChoi˚
, (°), (i), (vÆ))

	)

467 
	#sk_CMS_Revoˇti⁄InfoChoi˚_zîo
(
°
Ë
	`SKM_sk_zîo
(
CMS_Revoˇti⁄InfoChoi˚
, (°))

	)

468 
	#sk_CMS_Revoˇti⁄InfoChoi˚_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
CMS_Revoˇti⁄InfoChoi˚
, (°), (vÆ))

	)

469 
	#sk_CMS_Revoˇti⁄InfoChoi˚_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
CMS_Revoˇti⁄InfoChoi˚
, (°), (vÆ))

	)

470 
	#sk_CMS_Revoˇti⁄InfoChoi˚_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
CMS_Revoˇti⁄InfoChoi˚
, (°), (vÆ))

	)

471 
	#sk_CMS_Revoˇti⁄InfoChoi˚_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
CMS_Revoˇti⁄InfoChoi˚
, (°), (vÆ))

	)

472 
	#sk_CMS_Revoˇti⁄InfoChoi˚_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
CMS_Revoˇti⁄InfoChoi˚
, (°), (i))

	)

473 
	#sk_CMS_Revoˇti⁄InfoChoi˚_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
CMS_Revoˇti⁄InfoChoi˚
, (°), (±r))

	)

474 
	#sk_CMS_Revoˇti⁄InfoChoi˚_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
CMS_Revoˇti⁄InfoChoi˚
, (°), (vÆ), (i))

	)

475 
	#sk_CMS_Revoˇti⁄InfoChoi˚_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
CMS_Revoˇti⁄InfoChoi˚
, (°), (cmp))

	)

476 
	#sk_CMS_Revoˇti⁄InfoChoi˚_dup
(
°
Ë
	`SKM_sk_dup
(
CMS_Revoˇti⁄InfoChoi˚
, st)

	)

477 
	#sk_CMS_Revoˇti⁄InfoChoi˚_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
CMS_Revoˇti⁄InfoChoi˚
, (°), (‰ì_func))

	)

478 
	#sk_CMS_Revoˇti⁄InfoChoi˚_shi·
(
°
Ë
	`SKM_sk_shi·
(
CMS_Revoˇti⁄InfoChoi˚
, (°))

	)

479 
	#sk_CMS_Revoˇti⁄InfoChoi˚_p›
(
°
Ë
	`SKM_sk_p›
(
CMS_Revoˇti⁄InfoChoi˚
, (°))

	)

480 
	#sk_CMS_Revoˇti⁄InfoChoi˚_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
CMS_Revoˇti⁄InfoChoi˚
, (°))

	)

481 
	#sk_CMS_Revoˇti⁄InfoChoi˚_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
CMS_Revoˇti⁄InfoChoi˚
, (°))

	)

483 
	#sk_CMS_Sig√rInfo_√w
(
°
Ë
	`SKM_sk_√w
(
CMS_Sig√rInfo
, (°))

	)

484 
	#sk_CMS_Sig√rInfo_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
CMS_Sig√rInfo
)

	)

485 
	#sk_CMS_Sig√rInfo_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
CMS_Sig√rInfo
, (°))

	)

486 
	#sk_CMS_Sig√rInfo_num
(
°
Ë
	`SKM_sk_num
(
CMS_Sig√rInfo
, (°))

	)

487 
	#sk_CMS_Sig√rInfo_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
CMS_Sig√rInfo
, (°), (i))

	)

488 
	#sk_CMS_Sig√rInfo_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
CMS_Sig√rInfo
, (°), (i), (vÆ))

	)

489 
	#sk_CMS_Sig√rInfo_zîo
(
°
Ë
	`SKM_sk_zîo
(
CMS_Sig√rInfo
, (°))

	)

490 
	#sk_CMS_Sig√rInfo_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
CMS_Sig√rInfo
, (°), (vÆ))

	)

491 
	#sk_CMS_Sig√rInfo_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
CMS_Sig√rInfo
, (°), (vÆ))

	)

492 
	#sk_CMS_Sig√rInfo_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
CMS_Sig√rInfo
, (°), (vÆ))

	)

493 
	#sk_CMS_Sig√rInfo_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
CMS_Sig√rInfo
, (°), (vÆ))

	)

494 
	#sk_CMS_Sig√rInfo_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
CMS_Sig√rInfo
, (°), (i))

	)

495 
	#sk_CMS_Sig√rInfo_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
CMS_Sig√rInfo
, (°), (±r))

	)

496 
	#sk_CMS_Sig√rInfo_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
CMS_Sig√rInfo
, (°), (vÆ), (i))

	)

497 
	#sk_CMS_Sig√rInfo_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
CMS_Sig√rInfo
, (°), (cmp))

	)

498 
	#sk_CMS_Sig√rInfo_dup
(
°
Ë
	`SKM_sk_dup
(
CMS_Sig√rInfo
, st)

	)

499 
	#sk_CMS_Sig√rInfo_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
CMS_Sig√rInfo
, (°), (‰ì_func))

	)

500 
	#sk_CMS_Sig√rInfo_shi·
(
°
Ë
	`SKM_sk_shi·
(
CMS_Sig√rInfo
, (°))

	)

501 
	#sk_CMS_Sig√rInfo_p›
(
°
Ë
	`SKM_sk_p›
(
CMS_Sig√rInfo
, (°))

	)

502 
	#sk_CMS_Sig√rInfo_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
CMS_Sig√rInfo
, (°))

	)

503 
	#sk_CMS_Sig√rInfo_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
CMS_Sig√rInfo
, (°))

	)

505 
	#sk_CONF_IMODULE_√w
(
°
Ë
	`SKM_sk_√w
(
CONF_IMODULE
, (°))

	)

506 
	#sk_CONF_IMODULE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
CONF_IMODULE
)

	)

507 
	#sk_CONF_IMODULE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
CONF_IMODULE
, (°))

	)

508 
	#sk_CONF_IMODULE_num
(
°
Ë
	`SKM_sk_num
(
CONF_IMODULE
, (°))

	)

509 
	#sk_CONF_IMODULE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
CONF_IMODULE
, (°), (i))

	)

510 
	#sk_CONF_IMODULE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
CONF_IMODULE
, (°), (i), (vÆ))

	)

511 
	#sk_CONF_IMODULE_zîo
(
°
Ë
	`SKM_sk_zîo
(
CONF_IMODULE
, (°))

	)

512 
	#sk_CONF_IMODULE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
CONF_IMODULE
, (°), (vÆ))

	)

513 
	#sk_CONF_IMODULE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
CONF_IMODULE
, (°), (vÆ))

	)

514 
	#sk_CONF_IMODULE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
CONF_IMODULE
, (°), (vÆ))

	)

515 
	#sk_CONF_IMODULE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
CONF_IMODULE
, (°), (vÆ))

	)

516 
	#sk_CONF_IMODULE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
CONF_IMODULE
, (°), (i))

	)

517 
	#sk_CONF_IMODULE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
CONF_IMODULE
, (°), (±r))

	)

518 
	#sk_CONF_IMODULE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
CONF_IMODULE
, (°), (vÆ), (i))

	)

519 
	#sk_CONF_IMODULE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
CONF_IMODULE
, (°), (cmp))

	)

520 
	#sk_CONF_IMODULE_dup
(
°
Ë
	`SKM_sk_dup
(
CONF_IMODULE
, st)

	)

521 
	#sk_CONF_IMODULE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
CONF_IMODULE
, (°), (‰ì_func))

	)

522 
	#sk_CONF_IMODULE_shi·
(
°
Ë
	`SKM_sk_shi·
(
CONF_IMODULE
, (°))

	)

523 
	#sk_CONF_IMODULE_p›
(
°
Ë
	`SKM_sk_p›
(
CONF_IMODULE
, (°))

	)

524 
	#sk_CONF_IMODULE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
CONF_IMODULE
, (°))

	)

525 
	#sk_CONF_IMODULE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
CONF_IMODULE
, (°))

	)

527 
	#sk_CONF_MODULE_√w
(
°
Ë
	`SKM_sk_√w
(
CONF_MODULE
, (°))

	)

528 
	#sk_CONF_MODULE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
CONF_MODULE
)

	)

529 
	#sk_CONF_MODULE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
CONF_MODULE
, (°))

	)

530 
	#sk_CONF_MODULE_num
(
°
Ë
	`SKM_sk_num
(
CONF_MODULE
, (°))

	)

531 
	#sk_CONF_MODULE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
CONF_MODULE
, (°), (i))

	)

532 
	#sk_CONF_MODULE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
CONF_MODULE
, (°), (i), (vÆ))

	)

533 
	#sk_CONF_MODULE_zîo
(
°
Ë
	`SKM_sk_zîo
(
CONF_MODULE
, (°))

	)

534 
	#sk_CONF_MODULE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
CONF_MODULE
, (°), (vÆ))

	)

535 
	#sk_CONF_MODULE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
CONF_MODULE
, (°), (vÆ))

	)

536 
	#sk_CONF_MODULE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
CONF_MODULE
, (°), (vÆ))

	)

537 
	#sk_CONF_MODULE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
CONF_MODULE
, (°), (vÆ))

	)

538 
	#sk_CONF_MODULE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
CONF_MODULE
, (°), (i))

	)

539 
	#sk_CONF_MODULE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
CONF_MODULE
, (°), (±r))

	)

540 
	#sk_CONF_MODULE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
CONF_MODULE
, (°), (vÆ), (i))

	)

541 
	#sk_CONF_MODULE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
CONF_MODULE
, (°), (cmp))

	)

542 
	#sk_CONF_MODULE_dup
(
°
Ë
	`SKM_sk_dup
(
CONF_MODULE
, st)

	)

543 
	#sk_CONF_MODULE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
CONF_MODULE
, (°), (‰ì_func))

	)

544 
	#sk_CONF_MODULE_shi·
(
°
Ë
	`SKM_sk_shi·
(
CONF_MODULE
, (°))

	)

545 
	#sk_CONF_MODULE_p›
(
°
Ë
	`SKM_sk_p›
(
CONF_MODULE
, (°))

	)

546 
	#sk_CONF_MODULE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
CONF_MODULE
, (°))

	)

547 
	#sk_CONF_MODULE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
CONF_MODULE
, (°))

	)

549 
	#sk_CONF_VALUE_√w
(
°
Ë
	`SKM_sk_√w
(
CONF_VALUE
, (°))

	)

550 
	#sk_CONF_VALUE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
CONF_VALUE
)

	)

551 
	#sk_CONF_VALUE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
CONF_VALUE
, (°))

	)

552 
	#sk_CONF_VALUE_num
(
°
Ë
	`SKM_sk_num
(
CONF_VALUE
, (°))

	)

553 
	#sk_CONF_VALUE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
CONF_VALUE
, (°), (i))

	)

554 
	#sk_CONF_VALUE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
CONF_VALUE
, (°), (i), (vÆ))

	)

555 
	#sk_CONF_VALUE_zîo
(
°
Ë
	`SKM_sk_zîo
(
CONF_VALUE
, (°))

	)

556 
	#sk_CONF_VALUE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
CONF_VALUE
, (°), (vÆ))

	)

557 
	#sk_CONF_VALUE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
CONF_VALUE
, (°), (vÆ))

	)

558 
	#sk_CONF_VALUE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
CONF_VALUE
, (°), (vÆ))

	)

559 
	#sk_CONF_VALUE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
CONF_VALUE
, (°), (vÆ))

	)

560 
	#sk_CONF_VALUE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
CONF_VALUE
, (°), (i))

	)

561 
	#sk_CONF_VALUE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
CONF_VALUE
, (°), (±r))

	)

562 
	#sk_CONF_VALUE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
CONF_VALUE
, (°), (vÆ), (i))

	)

563 
	#sk_CONF_VALUE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
CONF_VALUE
, (°), (cmp))

	)

564 
	#sk_CONF_VALUE_dup
(
°
Ë
	`SKM_sk_dup
(
CONF_VALUE
, st)

	)

565 
	#sk_CONF_VALUE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
CONF_VALUE
, (°), (‰ì_func))

	)

566 
	#sk_CONF_VALUE_shi·
(
°
Ë
	`SKM_sk_shi·
(
CONF_VALUE
, (°))

	)

567 
	#sk_CONF_VALUE_p›
(
°
Ë
	`SKM_sk_p›
(
CONF_VALUE
, (°))

	)

568 
	#sk_CONF_VALUE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
CONF_VALUE
, (°))

	)

569 
	#sk_CONF_VALUE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
CONF_VALUE
, (°))

	)

571 
	#sk_CRYPTO_EX_DATA_FUNCS_√w
(
°
Ë
	`SKM_sk_√w
(
CRYPTO_EX_DATA_FUNCS
, (°))

	)

572 
	#sk_CRYPTO_EX_DATA_FUNCS_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
CRYPTO_EX_DATA_FUNCS
)

	)

573 
	#sk_CRYPTO_EX_DATA_FUNCS_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
CRYPTO_EX_DATA_FUNCS
, (°))

	)

574 
	#sk_CRYPTO_EX_DATA_FUNCS_num
(
°
Ë
	`SKM_sk_num
(
CRYPTO_EX_DATA_FUNCS
, (°))

	)

575 
	#sk_CRYPTO_EX_DATA_FUNCS_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
CRYPTO_EX_DATA_FUNCS
, (°), (i))

	)

576 
	#sk_CRYPTO_EX_DATA_FUNCS_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
CRYPTO_EX_DATA_FUNCS
, (°), (i), (vÆ))

	)

577 
	#sk_CRYPTO_EX_DATA_FUNCS_zîo
(
°
Ë
	`SKM_sk_zîo
(
CRYPTO_EX_DATA_FUNCS
, (°))

	)

578 
	#sk_CRYPTO_EX_DATA_FUNCS_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
CRYPTO_EX_DATA_FUNCS
, (°), (vÆ))

	)

579 
	#sk_CRYPTO_EX_DATA_FUNCS_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
CRYPTO_EX_DATA_FUNCS
, (°), (vÆ))

	)

580 
	#sk_CRYPTO_EX_DATA_FUNCS_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
CRYPTO_EX_DATA_FUNCS
, (°), (vÆ))

	)

581 
	#sk_CRYPTO_EX_DATA_FUNCS_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
CRYPTO_EX_DATA_FUNCS
, (°), (vÆ))

	)

582 
	#sk_CRYPTO_EX_DATA_FUNCS_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
CRYPTO_EX_DATA_FUNCS
, (°), (i))

	)

583 
	#sk_CRYPTO_EX_DATA_FUNCS_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
CRYPTO_EX_DATA_FUNCS
, (°), (±r))

	)

584 
	#sk_CRYPTO_EX_DATA_FUNCS_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
CRYPTO_EX_DATA_FUNCS
, (°), (vÆ), (i))

	)

585 
	#sk_CRYPTO_EX_DATA_FUNCS_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
CRYPTO_EX_DATA_FUNCS
, (°), (cmp))

	)

586 
	#sk_CRYPTO_EX_DATA_FUNCS_dup
(
°
Ë
	`SKM_sk_dup
(
CRYPTO_EX_DATA_FUNCS
, st)

	)

587 
	#sk_CRYPTO_EX_DATA_FUNCS_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
CRYPTO_EX_DATA_FUNCS
, (°), (‰ì_func))

	)

588 
	#sk_CRYPTO_EX_DATA_FUNCS_shi·
(
°
Ë
	`SKM_sk_shi·
(
CRYPTO_EX_DATA_FUNCS
, (°))

	)

589 
	#sk_CRYPTO_EX_DATA_FUNCS_p›
(
°
Ë
	`SKM_sk_p›
(
CRYPTO_EX_DATA_FUNCS
, (°))

	)

590 
	#sk_CRYPTO_EX_DATA_FUNCS_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
CRYPTO_EX_DATA_FUNCS
, (°))

	)

591 
	#sk_CRYPTO_EX_DATA_FUNCS_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
CRYPTO_EX_DATA_FUNCS
, (°))

	)

593 
	#sk_CRYPTO_dy∆ock_√w
(
°
Ë
	`SKM_sk_√w
(
CRYPTO_dy∆ock
, (°))

	)

594 
	#sk_CRYPTO_dy∆ock_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
CRYPTO_dy∆ock
)

	)

595 
	#sk_CRYPTO_dy∆ock_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
CRYPTO_dy∆ock
, (°))

	)

596 
	#sk_CRYPTO_dy∆ock_num
(
°
Ë
	`SKM_sk_num
(
CRYPTO_dy∆ock
, (°))

	)

597 
	#sk_CRYPTO_dy∆ock_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
CRYPTO_dy∆ock
, (°), (i))

	)

598 
	#sk_CRYPTO_dy∆ock_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
CRYPTO_dy∆ock
, (°), (i), (vÆ))

	)

599 
	#sk_CRYPTO_dy∆ock_zîo
(
°
Ë
	`SKM_sk_zîo
(
CRYPTO_dy∆ock
, (°))

	)

600 
	#sk_CRYPTO_dy∆ock_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
CRYPTO_dy∆ock
, (°), (vÆ))

	)

601 
	#sk_CRYPTO_dy∆ock_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
CRYPTO_dy∆ock
, (°), (vÆ))

	)

602 
	#sk_CRYPTO_dy∆ock_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
CRYPTO_dy∆ock
, (°), (vÆ))

	)

603 
	#sk_CRYPTO_dy∆ock_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
CRYPTO_dy∆ock
, (°), (vÆ))

	)

604 
	#sk_CRYPTO_dy∆ock_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
CRYPTO_dy∆ock
, (°), (i))

	)

605 
	#sk_CRYPTO_dy∆ock_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
CRYPTO_dy∆ock
, (°), (±r))

	)

606 
	#sk_CRYPTO_dy∆ock_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
CRYPTO_dy∆ock
, (°), (vÆ), (i))

	)

607 
	#sk_CRYPTO_dy∆ock_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
CRYPTO_dy∆ock
, (°), (cmp))

	)

608 
	#sk_CRYPTO_dy∆ock_dup
(
°
Ë
	`SKM_sk_dup
(
CRYPTO_dy∆ock
, st)

	)

609 
	#sk_CRYPTO_dy∆ock_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
CRYPTO_dy∆ock
, (°), (‰ì_func))

	)

610 
	#sk_CRYPTO_dy∆ock_shi·
(
°
Ë
	`SKM_sk_shi·
(
CRYPTO_dy∆ock
, (°))

	)

611 
	#sk_CRYPTO_dy∆ock_p›
(
°
Ë
	`SKM_sk_p›
(
CRYPTO_dy∆ock
, (°))

	)

612 
	#sk_CRYPTO_dy∆ock_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
CRYPTO_dy∆ock
, (°))

	)

613 
	#sk_CRYPTO_dy∆ock_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
CRYPTO_dy∆ock
, (°))

	)

615 
	#sk_DIST_POINT_√w
(
°
Ë
	`SKM_sk_√w
(
DIST_POINT
, (°))

	)

616 
	#sk_DIST_POINT_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
DIST_POINT
)

	)

617 
	#sk_DIST_POINT_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
DIST_POINT
, (°))

	)

618 
	#sk_DIST_POINT_num
(
°
Ë
	`SKM_sk_num
(
DIST_POINT
, (°))

	)

619 
	#sk_DIST_POINT_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
DIST_POINT
, (°), (i))

	)

620 
	#sk_DIST_POINT_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
DIST_POINT
, (°), (i), (vÆ))

	)

621 
	#sk_DIST_POINT_zîo
(
°
Ë
	`SKM_sk_zîo
(
DIST_POINT
, (°))

	)

622 
	#sk_DIST_POINT_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
DIST_POINT
, (°), (vÆ))

	)

623 
	#sk_DIST_POINT_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
DIST_POINT
, (°), (vÆ))

	)

624 
	#sk_DIST_POINT_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
DIST_POINT
, (°), (vÆ))

	)

625 
	#sk_DIST_POINT_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
DIST_POINT
, (°), (vÆ))

	)

626 
	#sk_DIST_POINT_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
DIST_POINT
, (°), (i))

	)

627 
	#sk_DIST_POINT_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
DIST_POINT
, (°), (±r))

	)

628 
	#sk_DIST_POINT_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
DIST_POINT
, (°), (vÆ), (i))

	)

629 
	#sk_DIST_POINT_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
DIST_POINT
, (°), (cmp))

	)

630 
	#sk_DIST_POINT_dup
(
°
Ë
	`SKM_sk_dup
(
DIST_POINT
, st)

	)

631 
	#sk_DIST_POINT_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
DIST_POINT
, (°), (‰ì_func))

	)

632 
	#sk_DIST_POINT_shi·
(
°
Ë
	`SKM_sk_shi·
(
DIST_POINT
, (°))

	)

633 
	#sk_DIST_POINT_p›
(
°
Ë
	`SKM_sk_p›
(
DIST_POINT
, (°))

	)

634 
	#sk_DIST_POINT_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
DIST_POINT
, (°))

	)

635 
	#sk_DIST_POINT_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
DIST_POINT
, (°))

	)

637 
	#sk_ENGINE_√w
(
°
Ë
	`SKM_sk_√w
(
ENGINE
, (°))

	)

638 
	#sk_ENGINE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
ENGINE
)

	)

639 
	#sk_ENGINE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
ENGINE
, (°))

	)

640 
	#sk_ENGINE_num
(
°
Ë
	`SKM_sk_num
(
ENGINE
, (°))

	)

641 
	#sk_ENGINE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
ENGINE
, (°), (i))

	)

642 
	#sk_ENGINE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
ENGINE
, (°), (i), (vÆ))

	)

643 
	#sk_ENGINE_zîo
(
°
Ë
	`SKM_sk_zîo
(
ENGINE
, (°))

	)

644 
	#sk_ENGINE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
ENGINE
, (°), (vÆ))

	)

645 
	#sk_ENGINE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
ENGINE
, (°), (vÆ))

	)

646 
	#sk_ENGINE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
ENGINE
, (°), (vÆ))

	)

647 
	#sk_ENGINE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
ENGINE
, (°), (vÆ))

	)

648 
	#sk_ENGINE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
ENGINE
, (°), (i))

	)

649 
	#sk_ENGINE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
ENGINE
, (°), (±r))

	)

650 
	#sk_ENGINE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
ENGINE
, (°), (vÆ), (i))

	)

651 
	#sk_ENGINE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
ENGINE
, (°), (cmp))

	)

652 
	#sk_ENGINE_dup
(
°
Ë
	`SKM_sk_dup
(
ENGINE
, st)

	)

653 
	#sk_ENGINE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
ENGINE
, (°), (‰ì_func))

	)

654 
	#sk_ENGINE_shi·
(
°
Ë
	`SKM_sk_shi·
(
ENGINE
, (°))

	)

655 
	#sk_ENGINE_p›
(
°
Ë
	`SKM_sk_p›
(
ENGINE
, (°))

	)

656 
	#sk_ENGINE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
ENGINE
, (°))

	)

657 
	#sk_ENGINE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
ENGINE
, (°))

	)

659 
	#sk_ENGINE_CLEANUP_ITEM_√w
(
°
Ë
	`SKM_sk_√w
(
ENGINE_CLEANUP_ITEM
, (°))

	)

660 
	#sk_ENGINE_CLEANUP_ITEM_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
ENGINE_CLEANUP_ITEM
)

	)

661 
	#sk_ENGINE_CLEANUP_ITEM_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
ENGINE_CLEANUP_ITEM
, (°))

	)

662 
	#sk_ENGINE_CLEANUP_ITEM_num
(
°
Ë
	`SKM_sk_num
(
ENGINE_CLEANUP_ITEM
, (°))

	)

663 
	#sk_ENGINE_CLEANUP_ITEM_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
ENGINE_CLEANUP_ITEM
, (°), (i))

	)

664 
	#sk_ENGINE_CLEANUP_ITEM_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
ENGINE_CLEANUP_ITEM
, (°), (i), (vÆ))

	)

665 
	#sk_ENGINE_CLEANUP_ITEM_zîo
(
°
Ë
	`SKM_sk_zîo
(
ENGINE_CLEANUP_ITEM
, (°))

	)

666 
	#sk_ENGINE_CLEANUP_ITEM_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
ENGINE_CLEANUP_ITEM
, (°), (vÆ))

	)

667 
	#sk_ENGINE_CLEANUP_ITEM_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
ENGINE_CLEANUP_ITEM
, (°), (vÆ))

	)

668 
	#sk_ENGINE_CLEANUP_ITEM_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
ENGINE_CLEANUP_ITEM
, (°), (vÆ))

	)

669 
	#sk_ENGINE_CLEANUP_ITEM_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
ENGINE_CLEANUP_ITEM
, (°), (vÆ))

	)

670 
	#sk_ENGINE_CLEANUP_ITEM_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
ENGINE_CLEANUP_ITEM
, (°), (i))

	)

671 
	#sk_ENGINE_CLEANUP_ITEM_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
ENGINE_CLEANUP_ITEM
, (°), (±r))

	)

672 
	#sk_ENGINE_CLEANUP_ITEM_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
ENGINE_CLEANUP_ITEM
, (°), (vÆ), (i))

	)

673 
	#sk_ENGINE_CLEANUP_ITEM_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
ENGINE_CLEANUP_ITEM
, (°), (cmp))

	)

674 
	#sk_ENGINE_CLEANUP_ITEM_dup
(
°
Ë
	`SKM_sk_dup
(
ENGINE_CLEANUP_ITEM
, st)

	)

675 
	#sk_ENGINE_CLEANUP_ITEM_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
ENGINE_CLEANUP_ITEM
, (°), (‰ì_func))

	)

676 
	#sk_ENGINE_CLEANUP_ITEM_shi·
(
°
Ë
	`SKM_sk_shi·
(
ENGINE_CLEANUP_ITEM
, (°))

	)

677 
	#sk_ENGINE_CLEANUP_ITEM_p›
(
°
Ë
	`SKM_sk_p›
(
ENGINE_CLEANUP_ITEM
, (°))

	)

678 
	#sk_ENGINE_CLEANUP_ITEM_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
ENGINE_CLEANUP_ITEM
, (°))

	)

679 
	#sk_ENGINE_CLEANUP_ITEM_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
ENGINE_CLEANUP_ITEM
, (°))

	)

681 
	#sk_GENERAL_NAME_√w
(
°
Ë
	`SKM_sk_√w
(
GENERAL_NAME
, (°))

	)

682 
	#sk_GENERAL_NAME_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
GENERAL_NAME
)

	)

683 
	#sk_GENERAL_NAME_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
GENERAL_NAME
, (°))

	)

684 
	#sk_GENERAL_NAME_num
(
°
Ë
	`SKM_sk_num
(
GENERAL_NAME
, (°))

	)

685 
	#sk_GENERAL_NAME_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
GENERAL_NAME
, (°), (i))

	)

686 
	#sk_GENERAL_NAME_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
GENERAL_NAME
, (°), (i), (vÆ))

	)

687 
	#sk_GENERAL_NAME_zîo
(
°
Ë
	`SKM_sk_zîo
(
GENERAL_NAME
, (°))

	)

688 
	#sk_GENERAL_NAME_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
GENERAL_NAME
, (°), (vÆ))

	)

689 
	#sk_GENERAL_NAME_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
GENERAL_NAME
, (°), (vÆ))

	)

690 
	#sk_GENERAL_NAME_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
GENERAL_NAME
, (°), (vÆ))

	)

691 
	#sk_GENERAL_NAME_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
GENERAL_NAME
, (°), (vÆ))

	)

692 
	#sk_GENERAL_NAME_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
GENERAL_NAME
, (°), (i))

	)

693 
	#sk_GENERAL_NAME_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
GENERAL_NAME
, (°), (±r))

	)

694 
	#sk_GENERAL_NAME_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
GENERAL_NAME
, (°), (vÆ), (i))

	)

695 
	#sk_GENERAL_NAME_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
GENERAL_NAME
, (°), (cmp))

	)

696 
	#sk_GENERAL_NAME_dup
(
°
Ë
	`SKM_sk_dup
(
GENERAL_NAME
, st)

	)

697 
	#sk_GENERAL_NAME_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
GENERAL_NAME
, (°), (‰ì_func))

	)

698 
	#sk_GENERAL_NAME_shi·
(
°
Ë
	`SKM_sk_shi·
(
GENERAL_NAME
, (°))

	)

699 
	#sk_GENERAL_NAME_p›
(
°
Ë
	`SKM_sk_p›
(
GENERAL_NAME
, (°))

	)

700 
	#sk_GENERAL_NAME_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
GENERAL_NAME
, (°))

	)

701 
	#sk_GENERAL_NAME_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
GENERAL_NAME
, (°))

	)

703 
	#sk_GENERAL_NAMES_√w
(
°
Ë
	`SKM_sk_√w
(
GENERAL_NAMES
, (°))

	)

704 
	#sk_GENERAL_NAMES_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
GENERAL_NAMES
)

	)

705 
	#sk_GENERAL_NAMES_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
GENERAL_NAMES
, (°))

	)

706 
	#sk_GENERAL_NAMES_num
(
°
Ë
	`SKM_sk_num
(
GENERAL_NAMES
, (°))

	)

707 
	#sk_GENERAL_NAMES_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
GENERAL_NAMES
, (°), (i))

	)

708 
	#sk_GENERAL_NAMES_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
GENERAL_NAMES
, (°), (i), (vÆ))

	)

709 
	#sk_GENERAL_NAMES_zîo
(
°
Ë
	`SKM_sk_zîo
(
GENERAL_NAMES
, (°))

	)

710 
	#sk_GENERAL_NAMES_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
GENERAL_NAMES
, (°), (vÆ))

	)

711 
	#sk_GENERAL_NAMES_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
GENERAL_NAMES
, (°), (vÆ))

	)

712 
	#sk_GENERAL_NAMES_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
GENERAL_NAMES
, (°), (vÆ))

	)

713 
	#sk_GENERAL_NAMES_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
GENERAL_NAMES
, (°), (vÆ))

	)

714 
	#sk_GENERAL_NAMES_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
GENERAL_NAMES
, (°), (i))

	)

715 
	#sk_GENERAL_NAMES_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
GENERAL_NAMES
, (°), (±r))

	)

716 
	#sk_GENERAL_NAMES_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
GENERAL_NAMES
, (°), (vÆ), (i))

	)

717 
	#sk_GENERAL_NAMES_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
GENERAL_NAMES
, (°), (cmp))

	)

718 
	#sk_GENERAL_NAMES_dup
(
°
Ë
	`SKM_sk_dup
(
GENERAL_NAMES
, st)

	)

719 
	#sk_GENERAL_NAMES_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
GENERAL_NAMES
, (°), (‰ì_func))

	)

720 
	#sk_GENERAL_NAMES_shi·
(
°
Ë
	`SKM_sk_shi·
(
GENERAL_NAMES
, (°))

	)

721 
	#sk_GENERAL_NAMES_p›
(
°
Ë
	`SKM_sk_p›
(
GENERAL_NAMES
, (°))

	)

722 
	#sk_GENERAL_NAMES_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
GENERAL_NAMES
, (°))

	)

723 
	#sk_GENERAL_NAMES_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
GENERAL_NAMES
, (°))

	)

725 
	#sk_GENERAL_SUBTREE_√w
(
°
Ë
	`SKM_sk_√w
(
GENERAL_SUBTREE
, (°))

	)

726 
	#sk_GENERAL_SUBTREE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
GENERAL_SUBTREE
)

	)

727 
	#sk_GENERAL_SUBTREE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
GENERAL_SUBTREE
, (°))

	)

728 
	#sk_GENERAL_SUBTREE_num
(
°
Ë
	`SKM_sk_num
(
GENERAL_SUBTREE
, (°))

	)

729 
	#sk_GENERAL_SUBTREE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
GENERAL_SUBTREE
, (°), (i))

	)

730 
	#sk_GENERAL_SUBTREE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
GENERAL_SUBTREE
, (°), (i), (vÆ))

	)

731 
	#sk_GENERAL_SUBTREE_zîo
(
°
Ë
	`SKM_sk_zîo
(
GENERAL_SUBTREE
, (°))

	)

732 
	#sk_GENERAL_SUBTREE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
GENERAL_SUBTREE
, (°), (vÆ))

	)

733 
	#sk_GENERAL_SUBTREE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
GENERAL_SUBTREE
, (°), (vÆ))

	)

734 
	#sk_GENERAL_SUBTREE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
GENERAL_SUBTREE
, (°), (vÆ))

	)

735 
	#sk_GENERAL_SUBTREE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
GENERAL_SUBTREE
, (°), (vÆ))

	)

736 
	#sk_GENERAL_SUBTREE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
GENERAL_SUBTREE
, (°), (i))

	)

737 
	#sk_GENERAL_SUBTREE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
GENERAL_SUBTREE
, (°), (±r))

	)

738 
	#sk_GENERAL_SUBTREE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
GENERAL_SUBTREE
, (°), (vÆ), (i))

	)

739 
	#sk_GENERAL_SUBTREE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
GENERAL_SUBTREE
, (°), (cmp))

	)

740 
	#sk_GENERAL_SUBTREE_dup
(
°
Ë
	`SKM_sk_dup
(
GENERAL_SUBTREE
, st)

	)

741 
	#sk_GENERAL_SUBTREE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
GENERAL_SUBTREE
, (°), (‰ì_func))

	)

742 
	#sk_GENERAL_SUBTREE_shi·
(
°
Ë
	`SKM_sk_shi·
(
GENERAL_SUBTREE
, (°))

	)

743 
	#sk_GENERAL_SUBTREE_p›
(
°
Ë
	`SKM_sk_p›
(
GENERAL_SUBTREE
, (°))

	)

744 
	#sk_GENERAL_SUBTREE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
GENERAL_SUBTREE
, (°))

	)

745 
	#sk_GENERAL_SUBTREE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
GENERAL_SUBTREE
, (°))

	)

747 
	#sk_IPAddªssFamûy_√w
(
°
Ë
	`SKM_sk_√w
(
IPAddªssFamûy
, (°))

	)

748 
	#sk_IPAddªssFamûy_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
IPAddªssFamûy
)

	)

749 
	#sk_IPAddªssFamûy_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
IPAddªssFamûy
, (°))

	)

750 
	#sk_IPAddªssFamûy_num
(
°
Ë
	`SKM_sk_num
(
IPAddªssFamûy
, (°))

	)

751 
	#sk_IPAddªssFamûy_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
IPAddªssFamûy
, (°), (i))

	)

752 
	#sk_IPAddªssFamûy_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
IPAddªssFamûy
, (°), (i), (vÆ))

	)

753 
	#sk_IPAddªssFamûy_zîo
(
°
Ë
	`SKM_sk_zîo
(
IPAddªssFamûy
, (°))

	)

754 
	#sk_IPAddªssFamûy_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
IPAddªssFamûy
, (°), (vÆ))

	)

755 
	#sk_IPAddªssFamûy_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
IPAddªssFamûy
, (°), (vÆ))

	)

756 
	#sk_IPAddªssFamûy_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
IPAddªssFamûy
, (°), (vÆ))

	)

757 
	#sk_IPAddªssFamûy_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
IPAddªssFamûy
, (°), (vÆ))

	)

758 
	#sk_IPAddªssFamûy_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
IPAddªssFamûy
, (°), (i))

	)

759 
	#sk_IPAddªssFamûy_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
IPAddªssFamûy
, (°), (±r))

	)

760 
	#sk_IPAddªssFamûy_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
IPAddªssFamûy
, (°), (vÆ), (i))

	)

761 
	#sk_IPAddªssFamûy_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
IPAddªssFamûy
, (°), (cmp))

	)

762 
	#sk_IPAddªssFamûy_dup
(
°
Ë
	`SKM_sk_dup
(
IPAddªssFamûy
, st)

	)

763 
	#sk_IPAddªssFamûy_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
IPAddªssFamûy
, (°), (‰ì_func))

	)

764 
	#sk_IPAddªssFamûy_shi·
(
°
Ë
	`SKM_sk_shi·
(
IPAddªssFamûy
, (°))

	)

765 
	#sk_IPAddªssFamûy_p›
(
°
Ë
	`SKM_sk_p›
(
IPAddªssFamûy
, (°))

	)

766 
	#sk_IPAddªssFamûy_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
IPAddªssFamûy
, (°))

	)

767 
	#sk_IPAddªssFamûy_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
IPAddªssFamûy
, (°))

	)

769 
	#sk_IPAddªssOrR™ge_√w
(
°
Ë
	`SKM_sk_√w
(
IPAddªssOrR™ge
, (°))

	)

770 
	#sk_IPAddªssOrR™ge_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
IPAddªssOrR™ge
)

	)

771 
	#sk_IPAddªssOrR™ge_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
IPAddªssOrR™ge
, (°))

	)

772 
	#sk_IPAddªssOrR™ge_num
(
°
Ë
	`SKM_sk_num
(
IPAddªssOrR™ge
, (°))

	)

773 
	#sk_IPAddªssOrR™ge_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
IPAddªssOrR™ge
, (°), (i))

	)

774 
	#sk_IPAddªssOrR™ge_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
IPAddªssOrR™ge
, (°), (i), (vÆ))

	)

775 
	#sk_IPAddªssOrR™ge_zîo
(
°
Ë
	`SKM_sk_zîo
(
IPAddªssOrR™ge
, (°))

	)

776 
	#sk_IPAddªssOrR™ge_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
IPAddªssOrR™ge
, (°), (vÆ))

	)

777 
	#sk_IPAddªssOrR™ge_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
IPAddªssOrR™ge
, (°), (vÆ))

	)

778 
	#sk_IPAddªssOrR™ge_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
IPAddªssOrR™ge
, (°), (vÆ))

	)

779 
	#sk_IPAddªssOrR™ge_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
IPAddªssOrR™ge
, (°), (vÆ))

	)

780 
	#sk_IPAddªssOrR™ge_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
IPAddªssOrR™ge
, (°), (i))

	)

781 
	#sk_IPAddªssOrR™ge_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
IPAddªssOrR™ge
, (°), (±r))

	)

782 
	#sk_IPAddªssOrR™ge_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
IPAddªssOrR™ge
, (°), (vÆ), (i))

	)

783 
	#sk_IPAddªssOrR™ge_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
IPAddªssOrR™ge
, (°), (cmp))

	)

784 
	#sk_IPAddªssOrR™ge_dup
(
°
Ë
	`SKM_sk_dup
(
IPAddªssOrR™ge
, st)

	)

785 
	#sk_IPAddªssOrR™ge_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
IPAddªssOrR™ge
, (°), (‰ì_func))

	)

786 
	#sk_IPAddªssOrR™ge_shi·
(
°
Ë
	`SKM_sk_shi·
(
IPAddªssOrR™ge
, (°))

	)

787 
	#sk_IPAddªssOrR™ge_p›
(
°
Ë
	`SKM_sk_p›
(
IPAddªssOrR™ge
, (°))

	)

788 
	#sk_IPAddªssOrR™ge_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
IPAddªssOrR™ge
, (°))

	)

789 
	#sk_IPAddªssOrR™ge_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
IPAddªssOrR™ge
, (°))

	)

791 
	#sk_KRB5_APREQBODY_√w
(
°
Ë
	`SKM_sk_√w
(
KRB5_APREQBODY
, (°))

	)

792 
	#sk_KRB5_APREQBODY_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
KRB5_APREQBODY
)

	)

793 
	#sk_KRB5_APREQBODY_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
KRB5_APREQBODY
, (°))

	)

794 
	#sk_KRB5_APREQBODY_num
(
°
Ë
	`SKM_sk_num
(
KRB5_APREQBODY
, (°))

	)

795 
	#sk_KRB5_APREQBODY_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
KRB5_APREQBODY
, (°), (i))

	)

796 
	#sk_KRB5_APREQBODY_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
KRB5_APREQBODY
, (°), (i), (vÆ))

	)

797 
	#sk_KRB5_APREQBODY_zîo
(
°
Ë
	`SKM_sk_zîo
(
KRB5_APREQBODY
, (°))

	)

798 
	#sk_KRB5_APREQBODY_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
KRB5_APREQBODY
, (°), (vÆ))

	)

799 
	#sk_KRB5_APREQBODY_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
KRB5_APREQBODY
, (°), (vÆ))

	)

800 
	#sk_KRB5_APREQBODY_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
KRB5_APREQBODY
, (°), (vÆ))

	)

801 
	#sk_KRB5_APREQBODY_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
KRB5_APREQBODY
, (°), (vÆ))

	)

802 
	#sk_KRB5_APREQBODY_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
KRB5_APREQBODY
, (°), (i))

	)

803 
	#sk_KRB5_APREQBODY_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
KRB5_APREQBODY
, (°), (±r))

	)

804 
	#sk_KRB5_APREQBODY_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
KRB5_APREQBODY
, (°), (vÆ), (i))

	)

805 
	#sk_KRB5_APREQBODY_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
KRB5_APREQBODY
, (°), (cmp))

	)

806 
	#sk_KRB5_APREQBODY_dup
(
°
Ë
	`SKM_sk_dup
(
KRB5_APREQBODY
, st)

	)

807 
	#sk_KRB5_APREQBODY_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
KRB5_APREQBODY
, (°), (‰ì_func))

	)

808 
	#sk_KRB5_APREQBODY_shi·
(
°
Ë
	`SKM_sk_shi·
(
KRB5_APREQBODY
, (°))

	)

809 
	#sk_KRB5_APREQBODY_p›
(
°
Ë
	`SKM_sk_p›
(
KRB5_APREQBODY
, (°))

	)

810 
	#sk_KRB5_APREQBODY_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
KRB5_APREQBODY
, (°))

	)

811 
	#sk_KRB5_APREQBODY_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
KRB5_APREQBODY
, (°))

	)

813 
	#sk_KRB5_AUTHDATA_√w
(
°
Ë
	`SKM_sk_√w
(
KRB5_AUTHDATA
, (°))

	)

814 
	#sk_KRB5_AUTHDATA_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
KRB5_AUTHDATA
)

	)

815 
	#sk_KRB5_AUTHDATA_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
KRB5_AUTHDATA
, (°))

	)

816 
	#sk_KRB5_AUTHDATA_num
(
°
Ë
	`SKM_sk_num
(
KRB5_AUTHDATA
, (°))

	)

817 
	#sk_KRB5_AUTHDATA_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
KRB5_AUTHDATA
, (°), (i))

	)

818 
	#sk_KRB5_AUTHDATA_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
KRB5_AUTHDATA
, (°), (i), (vÆ))

	)

819 
	#sk_KRB5_AUTHDATA_zîo
(
°
Ë
	`SKM_sk_zîo
(
KRB5_AUTHDATA
, (°))

	)

820 
	#sk_KRB5_AUTHDATA_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
KRB5_AUTHDATA
, (°), (vÆ))

	)

821 
	#sk_KRB5_AUTHDATA_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
KRB5_AUTHDATA
, (°), (vÆ))

	)

822 
	#sk_KRB5_AUTHDATA_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
KRB5_AUTHDATA
, (°), (vÆ))

	)

823 
	#sk_KRB5_AUTHDATA_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
KRB5_AUTHDATA
, (°), (vÆ))

	)

824 
	#sk_KRB5_AUTHDATA_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
KRB5_AUTHDATA
, (°), (i))

	)

825 
	#sk_KRB5_AUTHDATA_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
KRB5_AUTHDATA
, (°), (±r))

	)

826 
	#sk_KRB5_AUTHDATA_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
KRB5_AUTHDATA
, (°), (vÆ), (i))

	)

827 
	#sk_KRB5_AUTHDATA_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
KRB5_AUTHDATA
, (°), (cmp))

	)

828 
	#sk_KRB5_AUTHDATA_dup
(
°
Ë
	`SKM_sk_dup
(
KRB5_AUTHDATA
, st)

	)

829 
	#sk_KRB5_AUTHDATA_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
KRB5_AUTHDATA
, (°), (‰ì_func))

	)

830 
	#sk_KRB5_AUTHDATA_shi·
(
°
Ë
	`SKM_sk_shi·
(
KRB5_AUTHDATA
, (°))

	)

831 
	#sk_KRB5_AUTHDATA_p›
(
°
Ë
	`SKM_sk_p›
(
KRB5_AUTHDATA
, (°))

	)

832 
	#sk_KRB5_AUTHDATA_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
KRB5_AUTHDATA
, (°))

	)

833 
	#sk_KRB5_AUTHDATA_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
KRB5_AUTHDATA
, (°))

	)

835 
	#sk_KRB5_AUTHENTBODY_√w
(
°
Ë
	`SKM_sk_√w
(
KRB5_AUTHENTBODY
, (°))

	)

836 
	#sk_KRB5_AUTHENTBODY_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
KRB5_AUTHENTBODY
)

	)

837 
	#sk_KRB5_AUTHENTBODY_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
KRB5_AUTHENTBODY
, (°))

	)

838 
	#sk_KRB5_AUTHENTBODY_num
(
°
Ë
	`SKM_sk_num
(
KRB5_AUTHENTBODY
, (°))

	)

839 
	#sk_KRB5_AUTHENTBODY_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
KRB5_AUTHENTBODY
, (°), (i))

	)

840 
	#sk_KRB5_AUTHENTBODY_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
KRB5_AUTHENTBODY
, (°), (i), (vÆ))

	)

841 
	#sk_KRB5_AUTHENTBODY_zîo
(
°
Ë
	`SKM_sk_zîo
(
KRB5_AUTHENTBODY
, (°))

	)

842 
	#sk_KRB5_AUTHENTBODY_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
KRB5_AUTHENTBODY
, (°), (vÆ))

	)

843 
	#sk_KRB5_AUTHENTBODY_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
KRB5_AUTHENTBODY
, (°), (vÆ))

	)

844 
	#sk_KRB5_AUTHENTBODY_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
KRB5_AUTHENTBODY
, (°), (vÆ))

	)

845 
	#sk_KRB5_AUTHENTBODY_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
KRB5_AUTHENTBODY
, (°), (vÆ))

	)

846 
	#sk_KRB5_AUTHENTBODY_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
KRB5_AUTHENTBODY
, (°), (i))

	)

847 
	#sk_KRB5_AUTHENTBODY_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
KRB5_AUTHENTBODY
, (°), (±r))

	)

848 
	#sk_KRB5_AUTHENTBODY_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
KRB5_AUTHENTBODY
, (°), (vÆ), (i))

	)

849 
	#sk_KRB5_AUTHENTBODY_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
KRB5_AUTHENTBODY
, (°), (cmp))

	)

850 
	#sk_KRB5_AUTHENTBODY_dup
(
°
Ë
	`SKM_sk_dup
(
KRB5_AUTHENTBODY
, st)

	)

851 
	#sk_KRB5_AUTHENTBODY_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
KRB5_AUTHENTBODY
, (°), (‰ì_func))

	)

852 
	#sk_KRB5_AUTHENTBODY_shi·
(
°
Ë
	`SKM_sk_shi·
(
KRB5_AUTHENTBODY
, (°))

	)

853 
	#sk_KRB5_AUTHENTBODY_p›
(
°
Ë
	`SKM_sk_p›
(
KRB5_AUTHENTBODY
, (°))

	)

854 
	#sk_KRB5_AUTHENTBODY_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
KRB5_AUTHENTBODY
, (°))

	)

855 
	#sk_KRB5_AUTHENTBODY_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
KRB5_AUTHENTBODY
, (°))

	)

857 
	#sk_KRB5_CHECKSUM_√w
(
°
Ë
	`SKM_sk_√w
(
KRB5_CHECKSUM
, (°))

	)

858 
	#sk_KRB5_CHECKSUM_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
KRB5_CHECKSUM
)

	)

859 
	#sk_KRB5_CHECKSUM_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
KRB5_CHECKSUM
, (°))

	)

860 
	#sk_KRB5_CHECKSUM_num
(
°
Ë
	`SKM_sk_num
(
KRB5_CHECKSUM
, (°))

	)

861 
	#sk_KRB5_CHECKSUM_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
KRB5_CHECKSUM
, (°), (i))

	)

862 
	#sk_KRB5_CHECKSUM_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
KRB5_CHECKSUM
, (°), (i), (vÆ))

	)

863 
	#sk_KRB5_CHECKSUM_zîo
(
°
Ë
	`SKM_sk_zîo
(
KRB5_CHECKSUM
, (°))

	)

864 
	#sk_KRB5_CHECKSUM_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
KRB5_CHECKSUM
, (°), (vÆ))

	)

865 
	#sk_KRB5_CHECKSUM_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
KRB5_CHECKSUM
, (°), (vÆ))

	)

866 
	#sk_KRB5_CHECKSUM_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
KRB5_CHECKSUM
, (°), (vÆ))

	)

867 
	#sk_KRB5_CHECKSUM_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
KRB5_CHECKSUM
, (°), (vÆ))

	)

868 
	#sk_KRB5_CHECKSUM_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
KRB5_CHECKSUM
, (°), (i))

	)

869 
	#sk_KRB5_CHECKSUM_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
KRB5_CHECKSUM
, (°), (±r))

	)

870 
	#sk_KRB5_CHECKSUM_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
KRB5_CHECKSUM
, (°), (vÆ), (i))

	)

871 
	#sk_KRB5_CHECKSUM_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
KRB5_CHECKSUM
, (°), (cmp))

	)

872 
	#sk_KRB5_CHECKSUM_dup
(
°
Ë
	`SKM_sk_dup
(
KRB5_CHECKSUM
, st)

	)

873 
	#sk_KRB5_CHECKSUM_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
KRB5_CHECKSUM
, (°), (‰ì_func))

	)

874 
	#sk_KRB5_CHECKSUM_shi·
(
°
Ë
	`SKM_sk_shi·
(
KRB5_CHECKSUM
, (°))

	)

875 
	#sk_KRB5_CHECKSUM_p›
(
°
Ë
	`SKM_sk_p›
(
KRB5_CHECKSUM
, (°))

	)

876 
	#sk_KRB5_CHECKSUM_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
KRB5_CHECKSUM
, (°))

	)

877 
	#sk_KRB5_CHECKSUM_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
KRB5_CHECKSUM
, (°))

	)

879 
	#sk_KRB5_ENCDATA_√w
(
°
Ë
	`SKM_sk_√w
(
KRB5_ENCDATA
, (°))

	)

880 
	#sk_KRB5_ENCDATA_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
KRB5_ENCDATA
)

	)

881 
	#sk_KRB5_ENCDATA_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
KRB5_ENCDATA
, (°))

	)

882 
	#sk_KRB5_ENCDATA_num
(
°
Ë
	`SKM_sk_num
(
KRB5_ENCDATA
, (°))

	)

883 
	#sk_KRB5_ENCDATA_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
KRB5_ENCDATA
, (°), (i))

	)

884 
	#sk_KRB5_ENCDATA_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
KRB5_ENCDATA
, (°), (i), (vÆ))

	)

885 
	#sk_KRB5_ENCDATA_zîo
(
°
Ë
	`SKM_sk_zîo
(
KRB5_ENCDATA
, (°))

	)

886 
	#sk_KRB5_ENCDATA_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
KRB5_ENCDATA
, (°), (vÆ))

	)

887 
	#sk_KRB5_ENCDATA_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
KRB5_ENCDATA
, (°), (vÆ))

	)

888 
	#sk_KRB5_ENCDATA_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
KRB5_ENCDATA
, (°), (vÆ))

	)

889 
	#sk_KRB5_ENCDATA_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
KRB5_ENCDATA
, (°), (vÆ))

	)

890 
	#sk_KRB5_ENCDATA_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
KRB5_ENCDATA
, (°), (i))

	)

891 
	#sk_KRB5_ENCDATA_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
KRB5_ENCDATA
, (°), (±r))

	)

892 
	#sk_KRB5_ENCDATA_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
KRB5_ENCDATA
, (°), (vÆ), (i))

	)

893 
	#sk_KRB5_ENCDATA_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
KRB5_ENCDATA
, (°), (cmp))

	)

894 
	#sk_KRB5_ENCDATA_dup
(
°
Ë
	`SKM_sk_dup
(
KRB5_ENCDATA
, st)

	)

895 
	#sk_KRB5_ENCDATA_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
KRB5_ENCDATA
, (°), (‰ì_func))

	)

896 
	#sk_KRB5_ENCDATA_shi·
(
°
Ë
	`SKM_sk_shi·
(
KRB5_ENCDATA
, (°))

	)

897 
	#sk_KRB5_ENCDATA_p›
(
°
Ë
	`SKM_sk_p›
(
KRB5_ENCDATA
, (°))

	)

898 
	#sk_KRB5_ENCDATA_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
KRB5_ENCDATA
, (°))

	)

899 
	#sk_KRB5_ENCDATA_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
KRB5_ENCDATA
, (°))

	)

901 
	#sk_KRB5_ENCKEY_√w
(
°
Ë
	`SKM_sk_√w
(
KRB5_ENCKEY
, (°))

	)

902 
	#sk_KRB5_ENCKEY_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
KRB5_ENCKEY
)

	)

903 
	#sk_KRB5_ENCKEY_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
KRB5_ENCKEY
, (°))

	)

904 
	#sk_KRB5_ENCKEY_num
(
°
Ë
	`SKM_sk_num
(
KRB5_ENCKEY
, (°))

	)

905 
	#sk_KRB5_ENCKEY_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
KRB5_ENCKEY
, (°), (i))

	)

906 
	#sk_KRB5_ENCKEY_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
KRB5_ENCKEY
, (°), (i), (vÆ))

	)

907 
	#sk_KRB5_ENCKEY_zîo
(
°
Ë
	`SKM_sk_zîo
(
KRB5_ENCKEY
, (°))

	)

908 
	#sk_KRB5_ENCKEY_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
KRB5_ENCKEY
, (°), (vÆ))

	)

909 
	#sk_KRB5_ENCKEY_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
KRB5_ENCKEY
, (°), (vÆ))

	)

910 
	#sk_KRB5_ENCKEY_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
KRB5_ENCKEY
, (°), (vÆ))

	)

911 
	#sk_KRB5_ENCKEY_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
KRB5_ENCKEY
, (°), (vÆ))

	)

912 
	#sk_KRB5_ENCKEY_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
KRB5_ENCKEY
, (°), (i))

	)

913 
	#sk_KRB5_ENCKEY_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
KRB5_ENCKEY
, (°), (±r))

	)

914 
	#sk_KRB5_ENCKEY_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
KRB5_ENCKEY
, (°), (vÆ), (i))

	)

915 
	#sk_KRB5_ENCKEY_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
KRB5_ENCKEY
, (°), (cmp))

	)

916 
	#sk_KRB5_ENCKEY_dup
(
°
Ë
	`SKM_sk_dup
(
KRB5_ENCKEY
, st)

	)

917 
	#sk_KRB5_ENCKEY_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
KRB5_ENCKEY
, (°), (‰ì_func))

	)

918 
	#sk_KRB5_ENCKEY_shi·
(
°
Ë
	`SKM_sk_shi·
(
KRB5_ENCKEY
, (°))

	)

919 
	#sk_KRB5_ENCKEY_p›
(
°
Ë
	`SKM_sk_p›
(
KRB5_ENCKEY
, (°))

	)

920 
	#sk_KRB5_ENCKEY_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
KRB5_ENCKEY
, (°))

	)

921 
	#sk_KRB5_ENCKEY_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
KRB5_ENCKEY
, (°))

	)

923 
	#sk_KRB5_PRINCNAME_√w
(
°
Ë
	`SKM_sk_√w
(
KRB5_PRINCNAME
, (°))

	)

924 
	#sk_KRB5_PRINCNAME_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
KRB5_PRINCNAME
)

	)

925 
	#sk_KRB5_PRINCNAME_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
KRB5_PRINCNAME
, (°))

	)

926 
	#sk_KRB5_PRINCNAME_num
(
°
Ë
	`SKM_sk_num
(
KRB5_PRINCNAME
, (°))

	)

927 
	#sk_KRB5_PRINCNAME_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
KRB5_PRINCNAME
, (°), (i))

	)

928 
	#sk_KRB5_PRINCNAME_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
KRB5_PRINCNAME
, (°), (i), (vÆ))

	)

929 
	#sk_KRB5_PRINCNAME_zîo
(
°
Ë
	`SKM_sk_zîo
(
KRB5_PRINCNAME
, (°))

	)

930 
	#sk_KRB5_PRINCNAME_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
KRB5_PRINCNAME
, (°), (vÆ))

	)

931 
	#sk_KRB5_PRINCNAME_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
KRB5_PRINCNAME
, (°), (vÆ))

	)

932 
	#sk_KRB5_PRINCNAME_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
KRB5_PRINCNAME
, (°), (vÆ))

	)

933 
	#sk_KRB5_PRINCNAME_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
KRB5_PRINCNAME
, (°), (vÆ))

	)

934 
	#sk_KRB5_PRINCNAME_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
KRB5_PRINCNAME
, (°), (i))

	)

935 
	#sk_KRB5_PRINCNAME_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
KRB5_PRINCNAME
, (°), (±r))

	)

936 
	#sk_KRB5_PRINCNAME_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
KRB5_PRINCNAME
, (°), (vÆ), (i))

	)

937 
	#sk_KRB5_PRINCNAME_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
KRB5_PRINCNAME
, (°), (cmp))

	)

938 
	#sk_KRB5_PRINCNAME_dup
(
°
Ë
	`SKM_sk_dup
(
KRB5_PRINCNAME
, st)

	)

939 
	#sk_KRB5_PRINCNAME_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
KRB5_PRINCNAME
, (°), (‰ì_func))

	)

940 
	#sk_KRB5_PRINCNAME_shi·
(
°
Ë
	`SKM_sk_shi·
(
KRB5_PRINCNAME
, (°))

	)

941 
	#sk_KRB5_PRINCNAME_p›
(
°
Ë
	`SKM_sk_p›
(
KRB5_PRINCNAME
, (°))

	)

942 
	#sk_KRB5_PRINCNAME_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
KRB5_PRINCNAME
, (°))

	)

943 
	#sk_KRB5_PRINCNAME_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
KRB5_PRINCNAME
, (°))

	)

945 
	#sk_KRB5_TKTBODY_√w
(
°
Ë
	`SKM_sk_√w
(
KRB5_TKTBODY
, (°))

	)

946 
	#sk_KRB5_TKTBODY_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
KRB5_TKTBODY
)

	)

947 
	#sk_KRB5_TKTBODY_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
KRB5_TKTBODY
, (°))

	)

948 
	#sk_KRB5_TKTBODY_num
(
°
Ë
	`SKM_sk_num
(
KRB5_TKTBODY
, (°))

	)

949 
	#sk_KRB5_TKTBODY_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
KRB5_TKTBODY
, (°), (i))

	)

950 
	#sk_KRB5_TKTBODY_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
KRB5_TKTBODY
, (°), (i), (vÆ))

	)

951 
	#sk_KRB5_TKTBODY_zîo
(
°
Ë
	`SKM_sk_zîo
(
KRB5_TKTBODY
, (°))

	)

952 
	#sk_KRB5_TKTBODY_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
KRB5_TKTBODY
, (°), (vÆ))

	)

953 
	#sk_KRB5_TKTBODY_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
KRB5_TKTBODY
, (°), (vÆ))

	)

954 
	#sk_KRB5_TKTBODY_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
KRB5_TKTBODY
, (°), (vÆ))

	)

955 
	#sk_KRB5_TKTBODY_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
KRB5_TKTBODY
, (°), (vÆ))

	)

956 
	#sk_KRB5_TKTBODY_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
KRB5_TKTBODY
, (°), (i))

	)

957 
	#sk_KRB5_TKTBODY_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
KRB5_TKTBODY
, (°), (±r))

	)

958 
	#sk_KRB5_TKTBODY_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
KRB5_TKTBODY
, (°), (vÆ), (i))

	)

959 
	#sk_KRB5_TKTBODY_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
KRB5_TKTBODY
, (°), (cmp))

	)

960 
	#sk_KRB5_TKTBODY_dup
(
°
Ë
	`SKM_sk_dup
(
KRB5_TKTBODY
, st)

	)

961 
	#sk_KRB5_TKTBODY_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
KRB5_TKTBODY
, (°), (‰ì_func))

	)

962 
	#sk_KRB5_TKTBODY_shi·
(
°
Ë
	`SKM_sk_shi·
(
KRB5_TKTBODY
, (°))

	)

963 
	#sk_KRB5_TKTBODY_p›
(
°
Ë
	`SKM_sk_p›
(
KRB5_TKTBODY
, (°))

	)

964 
	#sk_KRB5_TKTBODY_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
KRB5_TKTBODY
, (°))

	)

965 
	#sk_KRB5_TKTBODY_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
KRB5_TKTBODY
, (°))

	)

967 
	#sk_MIME_HEADER_√w
(
°
Ë
	`SKM_sk_√w
(
MIME_HEADER
, (°))

	)

968 
	#sk_MIME_HEADER_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
MIME_HEADER
)

	)

969 
	#sk_MIME_HEADER_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
MIME_HEADER
, (°))

	)

970 
	#sk_MIME_HEADER_num
(
°
Ë
	`SKM_sk_num
(
MIME_HEADER
, (°))

	)

971 
	#sk_MIME_HEADER_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
MIME_HEADER
, (°), (i))

	)

972 
	#sk_MIME_HEADER_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
MIME_HEADER
, (°), (i), (vÆ))

	)

973 
	#sk_MIME_HEADER_zîo
(
°
Ë
	`SKM_sk_zîo
(
MIME_HEADER
, (°))

	)

974 
	#sk_MIME_HEADER_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
MIME_HEADER
, (°), (vÆ))

	)

975 
	#sk_MIME_HEADER_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
MIME_HEADER
, (°), (vÆ))

	)

976 
	#sk_MIME_HEADER_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
MIME_HEADER
, (°), (vÆ))

	)

977 
	#sk_MIME_HEADER_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
MIME_HEADER
, (°), (vÆ))

	)

978 
	#sk_MIME_HEADER_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
MIME_HEADER
, (°), (i))

	)

979 
	#sk_MIME_HEADER_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
MIME_HEADER
, (°), (±r))

	)

980 
	#sk_MIME_HEADER_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
MIME_HEADER
, (°), (vÆ), (i))

	)

981 
	#sk_MIME_HEADER_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
MIME_HEADER
, (°), (cmp))

	)

982 
	#sk_MIME_HEADER_dup
(
°
Ë
	`SKM_sk_dup
(
MIME_HEADER
, st)

	)

983 
	#sk_MIME_HEADER_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
MIME_HEADER
, (°), (‰ì_func))

	)

984 
	#sk_MIME_HEADER_shi·
(
°
Ë
	`SKM_sk_shi·
(
MIME_HEADER
, (°))

	)

985 
	#sk_MIME_HEADER_p›
(
°
Ë
	`SKM_sk_p›
(
MIME_HEADER
, (°))

	)

986 
	#sk_MIME_HEADER_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
MIME_HEADER
, (°))

	)

987 
	#sk_MIME_HEADER_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
MIME_HEADER
, (°))

	)

989 
	#sk_MIME_PARAM_√w
(
°
Ë
	`SKM_sk_√w
(
MIME_PARAM
, (°))

	)

990 
	#sk_MIME_PARAM_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
MIME_PARAM
)

	)

991 
	#sk_MIME_PARAM_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
MIME_PARAM
, (°))

	)

992 
	#sk_MIME_PARAM_num
(
°
Ë
	`SKM_sk_num
(
MIME_PARAM
, (°))

	)

993 
	#sk_MIME_PARAM_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
MIME_PARAM
, (°), (i))

	)

994 
	#sk_MIME_PARAM_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
MIME_PARAM
, (°), (i), (vÆ))

	)

995 
	#sk_MIME_PARAM_zîo
(
°
Ë
	`SKM_sk_zîo
(
MIME_PARAM
, (°))

	)

996 
	#sk_MIME_PARAM_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
MIME_PARAM
, (°), (vÆ))

	)

997 
	#sk_MIME_PARAM_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
MIME_PARAM
, (°), (vÆ))

	)

998 
	#sk_MIME_PARAM_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
MIME_PARAM
, (°), (vÆ))

	)

999 
	#sk_MIME_PARAM_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
MIME_PARAM
, (°), (vÆ))

	)

1000 
	#sk_MIME_PARAM_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
MIME_PARAM
, (°), (i))

	)

1001 
	#sk_MIME_PARAM_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
MIME_PARAM
, (°), (±r))

	)

1002 
	#sk_MIME_PARAM_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
MIME_PARAM
, (°), (vÆ), (i))

	)

1003 
	#sk_MIME_PARAM_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
MIME_PARAM
, (°), (cmp))

	)

1004 
	#sk_MIME_PARAM_dup
(
°
Ë
	`SKM_sk_dup
(
MIME_PARAM
, st)

	)

1005 
	#sk_MIME_PARAM_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
MIME_PARAM
, (°), (‰ì_func))

	)

1006 
	#sk_MIME_PARAM_shi·
(
°
Ë
	`SKM_sk_shi·
(
MIME_PARAM
, (°))

	)

1007 
	#sk_MIME_PARAM_p›
(
°
Ë
	`SKM_sk_p›
(
MIME_PARAM
, (°))

	)

1008 
	#sk_MIME_PARAM_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
MIME_PARAM
, (°))

	)

1009 
	#sk_MIME_PARAM_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
MIME_PARAM
, (°))

	)

1011 
	#sk_NAME_FUNCS_√w
(
°
Ë
	`SKM_sk_√w
(
NAME_FUNCS
, (°))

	)

1012 
	#sk_NAME_FUNCS_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
NAME_FUNCS
)

	)

1013 
	#sk_NAME_FUNCS_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
NAME_FUNCS
, (°))

	)

1014 
	#sk_NAME_FUNCS_num
(
°
Ë
	`SKM_sk_num
(
NAME_FUNCS
, (°))

	)

1015 
	#sk_NAME_FUNCS_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
NAME_FUNCS
, (°), (i))

	)

1016 
	#sk_NAME_FUNCS_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
NAME_FUNCS
, (°), (i), (vÆ))

	)

1017 
	#sk_NAME_FUNCS_zîo
(
°
Ë
	`SKM_sk_zîo
(
NAME_FUNCS
, (°))

	)

1018 
	#sk_NAME_FUNCS_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
NAME_FUNCS
, (°), (vÆ))

	)

1019 
	#sk_NAME_FUNCS_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
NAME_FUNCS
, (°), (vÆ))

	)

1020 
	#sk_NAME_FUNCS_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
NAME_FUNCS
, (°), (vÆ))

	)

1021 
	#sk_NAME_FUNCS_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
NAME_FUNCS
, (°), (vÆ))

	)

1022 
	#sk_NAME_FUNCS_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
NAME_FUNCS
, (°), (i))

	)

1023 
	#sk_NAME_FUNCS_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
NAME_FUNCS
, (°), (±r))

	)

1024 
	#sk_NAME_FUNCS_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
NAME_FUNCS
, (°), (vÆ), (i))

	)

1025 
	#sk_NAME_FUNCS_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
NAME_FUNCS
, (°), (cmp))

	)

1026 
	#sk_NAME_FUNCS_dup
(
°
Ë
	`SKM_sk_dup
(
NAME_FUNCS
, st)

	)

1027 
	#sk_NAME_FUNCS_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
NAME_FUNCS
, (°), (‰ì_func))

	)

1028 
	#sk_NAME_FUNCS_shi·
(
°
Ë
	`SKM_sk_shi·
(
NAME_FUNCS
, (°))

	)

1029 
	#sk_NAME_FUNCS_p›
(
°
Ë
	`SKM_sk_p›
(
NAME_FUNCS
, (°))

	)

1030 
	#sk_NAME_FUNCS_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
NAME_FUNCS
, (°))

	)

1031 
	#sk_NAME_FUNCS_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
NAME_FUNCS
, (°))

	)

1033 
	#sk_OCSP_CERTID_√w
(
°
Ë
	`SKM_sk_√w
(
OCSP_CERTID
, (°))

	)

1034 
	#sk_OCSP_CERTID_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
OCSP_CERTID
)

	)

1035 
	#sk_OCSP_CERTID_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
OCSP_CERTID
, (°))

	)

1036 
	#sk_OCSP_CERTID_num
(
°
Ë
	`SKM_sk_num
(
OCSP_CERTID
, (°))

	)

1037 
	#sk_OCSP_CERTID_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
OCSP_CERTID
, (°), (i))

	)

1038 
	#sk_OCSP_CERTID_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
OCSP_CERTID
, (°), (i), (vÆ))

	)

1039 
	#sk_OCSP_CERTID_zîo
(
°
Ë
	`SKM_sk_zîo
(
OCSP_CERTID
, (°))

	)

1040 
	#sk_OCSP_CERTID_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
OCSP_CERTID
, (°), (vÆ))

	)

1041 
	#sk_OCSP_CERTID_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
OCSP_CERTID
, (°), (vÆ))

	)

1042 
	#sk_OCSP_CERTID_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
OCSP_CERTID
, (°), (vÆ))

	)

1043 
	#sk_OCSP_CERTID_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
OCSP_CERTID
, (°), (vÆ))

	)

1044 
	#sk_OCSP_CERTID_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
OCSP_CERTID
, (°), (i))

	)

1045 
	#sk_OCSP_CERTID_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
OCSP_CERTID
, (°), (±r))

	)

1046 
	#sk_OCSP_CERTID_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
OCSP_CERTID
, (°), (vÆ), (i))

	)

1047 
	#sk_OCSP_CERTID_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
OCSP_CERTID
, (°), (cmp))

	)

1048 
	#sk_OCSP_CERTID_dup
(
°
Ë
	`SKM_sk_dup
(
OCSP_CERTID
, st)

	)

1049 
	#sk_OCSP_CERTID_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
OCSP_CERTID
, (°), (‰ì_func))

	)

1050 
	#sk_OCSP_CERTID_shi·
(
°
Ë
	`SKM_sk_shi·
(
OCSP_CERTID
, (°))

	)

1051 
	#sk_OCSP_CERTID_p›
(
°
Ë
	`SKM_sk_p›
(
OCSP_CERTID
, (°))

	)

1052 
	#sk_OCSP_CERTID_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
OCSP_CERTID
, (°))

	)

1053 
	#sk_OCSP_CERTID_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
OCSP_CERTID
, (°))

	)

1055 
	#sk_OCSP_ONEREQ_√w
(
°
Ë
	`SKM_sk_√w
(
OCSP_ONEREQ
, (°))

	)

1056 
	#sk_OCSP_ONEREQ_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
OCSP_ONEREQ
)

	)

1057 
	#sk_OCSP_ONEREQ_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
OCSP_ONEREQ
, (°))

	)

1058 
	#sk_OCSP_ONEREQ_num
(
°
Ë
	`SKM_sk_num
(
OCSP_ONEREQ
, (°))

	)

1059 
	#sk_OCSP_ONEREQ_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
OCSP_ONEREQ
, (°), (i))

	)

1060 
	#sk_OCSP_ONEREQ_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
OCSP_ONEREQ
, (°), (i), (vÆ))

	)

1061 
	#sk_OCSP_ONEREQ_zîo
(
°
Ë
	`SKM_sk_zîo
(
OCSP_ONEREQ
, (°))

	)

1062 
	#sk_OCSP_ONEREQ_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
OCSP_ONEREQ
, (°), (vÆ))

	)

1063 
	#sk_OCSP_ONEREQ_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
OCSP_ONEREQ
, (°), (vÆ))

	)

1064 
	#sk_OCSP_ONEREQ_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
OCSP_ONEREQ
, (°), (vÆ))

	)

1065 
	#sk_OCSP_ONEREQ_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
OCSP_ONEREQ
, (°), (vÆ))

	)

1066 
	#sk_OCSP_ONEREQ_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
OCSP_ONEREQ
, (°), (i))

	)

1067 
	#sk_OCSP_ONEREQ_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
OCSP_ONEREQ
, (°), (±r))

	)

1068 
	#sk_OCSP_ONEREQ_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
OCSP_ONEREQ
, (°), (vÆ), (i))

	)

1069 
	#sk_OCSP_ONEREQ_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
OCSP_ONEREQ
, (°), (cmp))

	)

1070 
	#sk_OCSP_ONEREQ_dup
(
°
Ë
	`SKM_sk_dup
(
OCSP_ONEREQ
, st)

	)

1071 
	#sk_OCSP_ONEREQ_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
OCSP_ONEREQ
, (°), (‰ì_func))

	)

1072 
	#sk_OCSP_ONEREQ_shi·
(
°
Ë
	`SKM_sk_shi·
(
OCSP_ONEREQ
, (°))

	)

1073 
	#sk_OCSP_ONEREQ_p›
(
°
Ë
	`SKM_sk_p›
(
OCSP_ONEREQ
, (°))

	)

1074 
	#sk_OCSP_ONEREQ_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
OCSP_ONEREQ
, (°))

	)

1075 
	#sk_OCSP_ONEREQ_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
OCSP_ONEREQ
, (°))

	)

1077 
	#sk_OCSP_RESPID_√w
(
°
Ë
	`SKM_sk_√w
(
OCSP_RESPID
, (°))

	)

1078 
	#sk_OCSP_RESPID_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
OCSP_RESPID
)

	)

1079 
	#sk_OCSP_RESPID_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
OCSP_RESPID
, (°))

	)

1080 
	#sk_OCSP_RESPID_num
(
°
Ë
	`SKM_sk_num
(
OCSP_RESPID
, (°))

	)

1081 
	#sk_OCSP_RESPID_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
OCSP_RESPID
, (°), (i))

	)

1082 
	#sk_OCSP_RESPID_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
OCSP_RESPID
, (°), (i), (vÆ))

	)

1083 
	#sk_OCSP_RESPID_zîo
(
°
Ë
	`SKM_sk_zîo
(
OCSP_RESPID
, (°))

	)

1084 
	#sk_OCSP_RESPID_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
OCSP_RESPID
, (°), (vÆ))

	)

1085 
	#sk_OCSP_RESPID_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
OCSP_RESPID
, (°), (vÆ))

	)

1086 
	#sk_OCSP_RESPID_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
OCSP_RESPID
, (°), (vÆ))

	)

1087 
	#sk_OCSP_RESPID_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
OCSP_RESPID
, (°), (vÆ))

	)

1088 
	#sk_OCSP_RESPID_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
OCSP_RESPID
, (°), (i))

	)

1089 
	#sk_OCSP_RESPID_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
OCSP_RESPID
, (°), (±r))

	)

1090 
	#sk_OCSP_RESPID_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
OCSP_RESPID
, (°), (vÆ), (i))

	)

1091 
	#sk_OCSP_RESPID_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
OCSP_RESPID
, (°), (cmp))

	)

1092 
	#sk_OCSP_RESPID_dup
(
°
Ë
	`SKM_sk_dup
(
OCSP_RESPID
, st)

	)

1093 
	#sk_OCSP_RESPID_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
OCSP_RESPID
, (°), (‰ì_func))

	)

1094 
	#sk_OCSP_RESPID_shi·
(
°
Ë
	`SKM_sk_shi·
(
OCSP_RESPID
, (°))

	)

1095 
	#sk_OCSP_RESPID_p›
(
°
Ë
	`SKM_sk_p›
(
OCSP_RESPID
, (°))

	)

1096 
	#sk_OCSP_RESPID_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
OCSP_RESPID
, (°))

	)

1097 
	#sk_OCSP_RESPID_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
OCSP_RESPID
, (°))

	)

1099 
	#sk_OCSP_SINGLERESP_√w
(
°
Ë
	`SKM_sk_√w
(
OCSP_SINGLERESP
, (°))

	)

1100 
	#sk_OCSP_SINGLERESP_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
OCSP_SINGLERESP
)

	)

1101 
	#sk_OCSP_SINGLERESP_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
OCSP_SINGLERESP
, (°))

	)

1102 
	#sk_OCSP_SINGLERESP_num
(
°
Ë
	`SKM_sk_num
(
OCSP_SINGLERESP
, (°))

	)

1103 
	#sk_OCSP_SINGLERESP_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
OCSP_SINGLERESP
, (°), (i))

	)

1104 
	#sk_OCSP_SINGLERESP_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
OCSP_SINGLERESP
, (°), (i), (vÆ))

	)

1105 
	#sk_OCSP_SINGLERESP_zîo
(
°
Ë
	`SKM_sk_zîo
(
OCSP_SINGLERESP
, (°))

	)

1106 
	#sk_OCSP_SINGLERESP_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
OCSP_SINGLERESP
, (°), (vÆ))

	)

1107 
	#sk_OCSP_SINGLERESP_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
OCSP_SINGLERESP
, (°), (vÆ))

	)

1108 
	#sk_OCSP_SINGLERESP_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
OCSP_SINGLERESP
, (°), (vÆ))

	)

1109 
	#sk_OCSP_SINGLERESP_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
OCSP_SINGLERESP
, (°), (vÆ))

	)

1110 
	#sk_OCSP_SINGLERESP_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
OCSP_SINGLERESP
, (°), (i))

	)

1111 
	#sk_OCSP_SINGLERESP_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
OCSP_SINGLERESP
, (°), (±r))

	)

1112 
	#sk_OCSP_SINGLERESP_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
OCSP_SINGLERESP
, (°), (vÆ), (i))

	)

1113 
	#sk_OCSP_SINGLERESP_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
OCSP_SINGLERESP
, (°), (cmp))

	)

1114 
	#sk_OCSP_SINGLERESP_dup
(
°
Ë
	`SKM_sk_dup
(
OCSP_SINGLERESP
, st)

	)

1115 
	#sk_OCSP_SINGLERESP_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
OCSP_SINGLERESP
, (°), (‰ì_func))

	)

1116 
	#sk_OCSP_SINGLERESP_shi·
(
°
Ë
	`SKM_sk_shi·
(
OCSP_SINGLERESP
, (°))

	)

1117 
	#sk_OCSP_SINGLERESP_p›
(
°
Ë
	`SKM_sk_p›
(
OCSP_SINGLERESP
, (°))

	)

1118 
	#sk_OCSP_SINGLERESP_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
OCSP_SINGLERESP
, (°))

	)

1119 
	#sk_OCSP_SINGLERESP_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
OCSP_SINGLERESP
, (°))

	)

1121 
	#sk_PKCS12_SAFEBAG_√w
(
°
Ë
	`SKM_sk_√w
(
PKCS12_SAFEBAG
, (°))

	)

1122 
	#sk_PKCS12_SAFEBAG_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
PKCS12_SAFEBAG
)

	)

1123 
	#sk_PKCS12_SAFEBAG_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
PKCS12_SAFEBAG
, (°))

	)

1124 
	#sk_PKCS12_SAFEBAG_num
(
°
Ë
	`SKM_sk_num
(
PKCS12_SAFEBAG
, (°))

	)

1125 
	#sk_PKCS12_SAFEBAG_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
PKCS12_SAFEBAG
, (°), (i))

	)

1126 
	#sk_PKCS12_SAFEBAG_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
PKCS12_SAFEBAG
, (°), (i), (vÆ))

	)

1127 
	#sk_PKCS12_SAFEBAG_zîo
(
°
Ë
	`SKM_sk_zîo
(
PKCS12_SAFEBAG
, (°))

	)

1128 
	#sk_PKCS12_SAFEBAG_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
PKCS12_SAFEBAG
, (°), (vÆ))

	)

1129 
	#sk_PKCS12_SAFEBAG_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
PKCS12_SAFEBAG
, (°), (vÆ))

	)

1130 
	#sk_PKCS12_SAFEBAG_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
PKCS12_SAFEBAG
, (°), (vÆ))

	)

1131 
	#sk_PKCS12_SAFEBAG_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
PKCS12_SAFEBAG
, (°), (vÆ))

	)

1132 
	#sk_PKCS12_SAFEBAG_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
PKCS12_SAFEBAG
, (°), (i))

	)

1133 
	#sk_PKCS12_SAFEBAG_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
PKCS12_SAFEBAG
, (°), (±r))

	)

1134 
	#sk_PKCS12_SAFEBAG_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
PKCS12_SAFEBAG
, (°), (vÆ), (i))

	)

1135 
	#sk_PKCS12_SAFEBAG_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
PKCS12_SAFEBAG
, (°), (cmp))

	)

1136 
	#sk_PKCS12_SAFEBAG_dup
(
°
Ë
	`SKM_sk_dup
(
PKCS12_SAFEBAG
, st)

	)

1137 
	#sk_PKCS12_SAFEBAG_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
PKCS12_SAFEBAG
, (°), (‰ì_func))

	)

1138 
	#sk_PKCS12_SAFEBAG_shi·
(
°
Ë
	`SKM_sk_shi·
(
PKCS12_SAFEBAG
, (°))

	)

1139 
	#sk_PKCS12_SAFEBAG_p›
(
°
Ë
	`SKM_sk_p›
(
PKCS12_SAFEBAG
, (°))

	)

1140 
	#sk_PKCS12_SAFEBAG_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
PKCS12_SAFEBAG
, (°))

	)

1141 
	#sk_PKCS12_SAFEBAG_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
PKCS12_SAFEBAG
, (°))

	)

1143 
	#sk_PKCS7_√w
(
°
Ë
	`SKM_sk_√w
(
PKCS7
, (°))

	)

1144 
	#sk_PKCS7_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
PKCS7
)

	)

1145 
	#sk_PKCS7_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
PKCS7
, (°))

	)

1146 
	#sk_PKCS7_num
(
°
Ë
	`SKM_sk_num
(
PKCS7
, (°))

	)

1147 
	#sk_PKCS7_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
PKCS7
, (°), (i))

	)

1148 
	#sk_PKCS7_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
PKCS7
, (°), (i), (vÆ))

	)

1149 
	#sk_PKCS7_zîo
(
°
Ë
	`SKM_sk_zîo
(
PKCS7
, (°))

	)

1150 
	#sk_PKCS7_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
PKCS7
, (°), (vÆ))

	)

1151 
	#sk_PKCS7_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
PKCS7
, (°), (vÆ))

	)

1152 
	#sk_PKCS7_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
PKCS7
, (°), (vÆ))

	)

1153 
	#sk_PKCS7_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
PKCS7
, (°), (vÆ))

	)

1154 
	#sk_PKCS7_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
PKCS7
, (°), (i))

	)

1155 
	#sk_PKCS7_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
PKCS7
, (°), (±r))

	)

1156 
	#sk_PKCS7_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
PKCS7
, (°), (vÆ), (i))

	)

1157 
	#sk_PKCS7_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
PKCS7
, (°), (cmp))

	)

1158 
	#sk_PKCS7_dup
(
°
Ë
	`SKM_sk_dup
(
PKCS7
, st)

	)

1159 
	#sk_PKCS7_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
PKCS7
, (°), (‰ì_func))

	)

1160 
	#sk_PKCS7_shi·
(
°
Ë
	`SKM_sk_shi·
(
PKCS7
, (°))

	)

1161 
	#sk_PKCS7_p›
(
°
Ë
	`SKM_sk_p›
(
PKCS7
, (°))

	)

1162 
	#sk_PKCS7_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
PKCS7
, (°))

	)

1163 
	#sk_PKCS7_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
PKCS7
, (°))

	)

1165 
	#sk_PKCS7_RECIP_INFO_√w
(
°
Ë
	`SKM_sk_√w
(
PKCS7_RECIP_INFO
, (°))

	)

1166 
	#sk_PKCS7_RECIP_INFO_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
PKCS7_RECIP_INFO
)

	)

1167 
	#sk_PKCS7_RECIP_INFO_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
PKCS7_RECIP_INFO
, (°))

	)

1168 
	#sk_PKCS7_RECIP_INFO_num
(
°
Ë
	`SKM_sk_num
(
PKCS7_RECIP_INFO
, (°))

	)

1169 
	#sk_PKCS7_RECIP_INFO_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
PKCS7_RECIP_INFO
, (°), (i))

	)

1170 
	#sk_PKCS7_RECIP_INFO_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
PKCS7_RECIP_INFO
, (°), (i), (vÆ))

	)

1171 
	#sk_PKCS7_RECIP_INFO_zîo
(
°
Ë
	`SKM_sk_zîo
(
PKCS7_RECIP_INFO
, (°))

	)

1172 
	#sk_PKCS7_RECIP_INFO_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
PKCS7_RECIP_INFO
, (°), (vÆ))

	)

1173 
	#sk_PKCS7_RECIP_INFO_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
PKCS7_RECIP_INFO
, (°), (vÆ))

	)

1174 
	#sk_PKCS7_RECIP_INFO_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
PKCS7_RECIP_INFO
, (°), (vÆ))

	)

1175 
	#sk_PKCS7_RECIP_INFO_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
PKCS7_RECIP_INFO
, (°), (vÆ))

	)

1176 
	#sk_PKCS7_RECIP_INFO_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
PKCS7_RECIP_INFO
, (°), (i))

	)

1177 
	#sk_PKCS7_RECIP_INFO_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
PKCS7_RECIP_INFO
, (°), (±r))

	)

1178 
	#sk_PKCS7_RECIP_INFO_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
PKCS7_RECIP_INFO
, (°), (vÆ), (i))

	)

1179 
	#sk_PKCS7_RECIP_INFO_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
PKCS7_RECIP_INFO
, (°), (cmp))

	)

1180 
	#sk_PKCS7_RECIP_INFO_dup
(
°
Ë
	`SKM_sk_dup
(
PKCS7_RECIP_INFO
, st)

	)

1181 
	#sk_PKCS7_RECIP_INFO_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
PKCS7_RECIP_INFO
, (°), (‰ì_func))

	)

1182 
	#sk_PKCS7_RECIP_INFO_shi·
(
°
Ë
	`SKM_sk_shi·
(
PKCS7_RECIP_INFO
, (°))

	)

1183 
	#sk_PKCS7_RECIP_INFO_p›
(
°
Ë
	`SKM_sk_p›
(
PKCS7_RECIP_INFO
, (°))

	)

1184 
	#sk_PKCS7_RECIP_INFO_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
PKCS7_RECIP_INFO
, (°))

	)

1185 
	#sk_PKCS7_RECIP_INFO_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
PKCS7_RECIP_INFO
, (°))

	)

1187 
	#sk_PKCS7_SIGNER_INFO_√w
(
°
Ë
	`SKM_sk_√w
(
PKCS7_SIGNER_INFO
, (°))

	)

1188 
	#sk_PKCS7_SIGNER_INFO_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
PKCS7_SIGNER_INFO
)

	)

1189 
	#sk_PKCS7_SIGNER_INFO_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
PKCS7_SIGNER_INFO
, (°))

	)

1190 
	#sk_PKCS7_SIGNER_INFO_num
(
°
Ë
	`SKM_sk_num
(
PKCS7_SIGNER_INFO
, (°))

	)

1191 
	#sk_PKCS7_SIGNER_INFO_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
PKCS7_SIGNER_INFO
, (°), (i))

	)

1192 
	#sk_PKCS7_SIGNER_INFO_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
PKCS7_SIGNER_INFO
, (°), (i), (vÆ))

	)

1193 
	#sk_PKCS7_SIGNER_INFO_zîo
(
°
Ë
	`SKM_sk_zîo
(
PKCS7_SIGNER_INFO
, (°))

	)

1194 
	#sk_PKCS7_SIGNER_INFO_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
PKCS7_SIGNER_INFO
, (°), (vÆ))

	)

1195 
	#sk_PKCS7_SIGNER_INFO_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
PKCS7_SIGNER_INFO
, (°), (vÆ))

	)

1196 
	#sk_PKCS7_SIGNER_INFO_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
PKCS7_SIGNER_INFO
, (°), (vÆ))

	)

1197 
	#sk_PKCS7_SIGNER_INFO_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
PKCS7_SIGNER_INFO
, (°), (vÆ))

	)

1198 
	#sk_PKCS7_SIGNER_INFO_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
PKCS7_SIGNER_INFO
, (°), (i))

	)

1199 
	#sk_PKCS7_SIGNER_INFO_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
PKCS7_SIGNER_INFO
, (°), (±r))

	)

1200 
	#sk_PKCS7_SIGNER_INFO_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
PKCS7_SIGNER_INFO
, (°), (vÆ), (i))

	)

1201 
	#sk_PKCS7_SIGNER_INFO_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
PKCS7_SIGNER_INFO
, (°), (cmp))

	)

1202 
	#sk_PKCS7_SIGNER_INFO_dup
(
°
Ë
	`SKM_sk_dup
(
PKCS7_SIGNER_INFO
, st)

	)

1203 
	#sk_PKCS7_SIGNER_INFO_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
PKCS7_SIGNER_INFO
, (°), (‰ì_func))

	)

1204 
	#sk_PKCS7_SIGNER_INFO_shi·
(
°
Ë
	`SKM_sk_shi·
(
PKCS7_SIGNER_INFO
, (°))

	)

1205 
	#sk_PKCS7_SIGNER_INFO_p›
(
°
Ë
	`SKM_sk_p›
(
PKCS7_SIGNER_INFO
, (°))

	)

1206 
	#sk_PKCS7_SIGNER_INFO_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
PKCS7_SIGNER_INFO
, (°))

	)

1207 
	#sk_PKCS7_SIGNER_INFO_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
PKCS7_SIGNER_INFO
, (°))

	)

1209 
	#sk_POLICYINFO_√w
(
°
Ë
	`SKM_sk_√w
(
POLICYINFO
, (°))

	)

1210 
	#sk_POLICYINFO_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
POLICYINFO
)

	)

1211 
	#sk_POLICYINFO_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
POLICYINFO
, (°))

	)

1212 
	#sk_POLICYINFO_num
(
°
Ë
	`SKM_sk_num
(
POLICYINFO
, (°))

	)

1213 
	#sk_POLICYINFO_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
POLICYINFO
, (°), (i))

	)

1214 
	#sk_POLICYINFO_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
POLICYINFO
, (°), (i), (vÆ))

	)

1215 
	#sk_POLICYINFO_zîo
(
°
Ë
	`SKM_sk_zîo
(
POLICYINFO
, (°))

	)

1216 
	#sk_POLICYINFO_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
POLICYINFO
, (°), (vÆ))

	)

1217 
	#sk_POLICYINFO_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
POLICYINFO
, (°), (vÆ))

	)

1218 
	#sk_POLICYINFO_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
POLICYINFO
, (°), (vÆ))

	)

1219 
	#sk_POLICYINFO_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
POLICYINFO
, (°), (vÆ))

	)

1220 
	#sk_POLICYINFO_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
POLICYINFO
, (°), (i))

	)

1221 
	#sk_POLICYINFO_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
POLICYINFO
, (°), (±r))

	)

1222 
	#sk_POLICYINFO_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
POLICYINFO
, (°), (vÆ), (i))

	)

1223 
	#sk_POLICYINFO_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
POLICYINFO
, (°), (cmp))

	)

1224 
	#sk_POLICYINFO_dup
(
°
Ë
	`SKM_sk_dup
(
POLICYINFO
, st)

	)

1225 
	#sk_POLICYINFO_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
POLICYINFO
, (°), (‰ì_func))

	)

1226 
	#sk_POLICYINFO_shi·
(
°
Ë
	`SKM_sk_shi·
(
POLICYINFO
, (°))

	)

1227 
	#sk_POLICYINFO_p›
(
°
Ë
	`SKM_sk_p›
(
POLICYINFO
, (°))

	)

1228 
	#sk_POLICYINFO_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
POLICYINFO
, (°))

	)

1229 
	#sk_POLICYINFO_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
POLICYINFO
, (°))

	)

1231 
	#sk_POLICYQUALINFO_√w
(
°
Ë
	`SKM_sk_√w
(
POLICYQUALINFO
, (°))

	)

1232 
	#sk_POLICYQUALINFO_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
POLICYQUALINFO
)

	)

1233 
	#sk_POLICYQUALINFO_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
POLICYQUALINFO
, (°))

	)

1234 
	#sk_POLICYQUALINFO_num
(
°
Ë
	`SKM_sk_num
(
POLICYQUALINFO
, (°))

	)

1235 
	#sk_POLICYQUALINFO_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
POLICYQUALINFO
, (°), (i))

	)

1236 
	#sk_POLICYQUALINFO_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
POLICYQUALINFO
, (°), (i), (vÆ))

	)

1237 
	#sk_POLICYQUALINFO_zîo
(
°
Ë
	`SKM_sk_zîo
(
POLICYQUALINFO
, (°))

	)

1238 
	#sk_POLICYQUALINFO_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
POLICYQUALINFO
, (°), (vÆ))

	)

1239 
	#sk_POLICYQUALINFO_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
POLICYQUALINFO
, (°), (vÆ))

	)

1240 
	#sk_POLICYQUALINFO_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
POLICYQUALINFO
, (°), (vÆ))

	)

1241 
	#sk_POLICYQUALINFO_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
POLICYQUALINFO
, (°), (vÆ))

	)

1242 
	#sk_POLICYQUALINFO_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
POLICYQUALINFO
, (°), (i))

	)

1243 
	#sk_POLICYQUALINFO_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
POLICYQUALINFO
, (°), (±r))

	)

1244 
	#sk_POLICYQUALINFO_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
POLICYQUALINFO
, (°), (vÆ), (i))

	)

1245 
	#sk_POLICYQUALINFO_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
POLICYQUALINFO
, (°), (cmp))

	)

1246 
	#sk_POLICYQUALINFO_dup
(
°
Ë
	`SKM_sk_dup
(
POLICYQUALINFO
, st)

	)

1247 
	#sk_POLICYQUALINFO_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
POLICYQUALINFO
, (°), (‰ì_func))

	)

1248 
	#sk_POLICYQUALINFO_shi·
(
°
Ë
	`SKM_sk_shi·
(
POLICYQUALINFO
, (°))

	)

1249 
	#sk_POLICYQUALINFO_p›
(
°
Ë
	`SKM_sk_p›
(
POLICYQUALINFO
, (°))

	)

1250 
	#sk_POLICYQUALINFO_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
POLICYQUALINFO
, (°))

	)

1251 
	#sk_POLICYQUALINFO_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
POLICYQUALINFO
, (°))

	)

1253 
	#sk_POLICY_MAPPING_√w
(
°
Ë
	`SKM_sk_√w
(
POLICY_MAPPING
, (°))

	)

1254 
	#sk_POLICY_MAPPING_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
POLICY_MAPPING
)

	)

1255 
	#sk_POLICY_MAPPING_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
POLICY_MAPPING
, (°))

	)

1256 
	#sk_POLICY_MAPPING_num
(
°
Ë
	`SKM_sk_num
(
POLICY_MAPPING
, (°))

	)

1257 
	#sk_POLICY_MAPPING_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
POLICY_MAPPING
, (°), (i))

	)

1258 
	#sk_POLICY_MAPPING_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
POLICY_MAPPING
, (°), (i), (vÆ))

	)

1259 
	#sk_POLICY_MAPPING_zîo
(
°
Ë
	`SKM_sk_zîo
(
POLICY_MAPPING
, (°))

	)

1260 
	#sk_POLICY_MAPPING_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
POLICY_MAPPING
, (°), (vÆ))

	)

1261 
	#sk_POLICY_MAPPING_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
POLICY_MAPPING
, (°), (vÆ))

	)

1262 
	#sk_POLICY_MAPPING_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
POLICY_MAPPING
, (°), (vÆ))

	)

1263 
	#sk_POLICY_MAPPING_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
POLICY_MAPPING
, (°), (vÆ))

	)

1264 
	#sk_POLICY_MAPPING_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
POLICY_MAPPING
, (°), (i))

	)

1265 
	#sk_POLICY_MAPPING_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
POLICY_MAPPING
, (°), (±r))

	)

1266 
	#sk_POLICY_MAPPING_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
POLICY_MAPPING
, (°), (vÆ), (i))

	)

1267 
	#sk_POLICY_MAPPING_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
POLICY_MAPPING
, (°), (cmp))

	)

1268 
	#sk_POLICY_MAPPING_dup
(
°
Ë
	`SKM_sk_dup
(
POLICY_MAPPING
, st)

	)

1269 
	#sk_POLICY_MAPPING_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
POLICY_MAPPING
, (°), (‰ì_func))

	)

1270 
	#sk_POLICY_MAPPING_shi·
(
°
Ë
	`SKM_sk_shi·
(
POLICY_MAPPING
, (°))

	)

1271 
	#sk_POLICY_MAPPING_p›
(
°
Ë
	`SKM_sk_p›
(
POLICY_MAPPING
, (°))

	)

1272 
	#sk_POLICY_MAPPING_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
POLICY_MAPPING
, (°))

	)

1273 
	#sk_POLICY_MAPPING_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
POLICY_MAPPING
, (°))

	)

1275 
	#sk_SSL_CIPHER_√w
(
°
Ë
	`SKM_sk_√w
(
SSL_CIPHER
, (°))

	)

1276 
	#sk_SSL_CIPHER_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
SSL_CIPHER
)

	)

1277 
	#sk_SSL_CIPHER_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
SSL_CIPHER
, (°))

	)

1278 
	#sk_SSL_CIPHER_num
(
°
Ë
	`SKM_sk_num
(
SSL_CIPHER
, (°))

	)

1279 
	#sk_SSL_CIPHER_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
SSL_CIPHER
, (°), (i))

	)

1280 
	#sk_SSL_CIPHER_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
SSL_CIPHER
, (°), (i), (vÆ))

	)

1281 
	#sk_SSL_CIPHER_zîo
(
°
Ë
	`SKM_sk_zîo
(
SSL_CIPHER
, (°))

	)

1282 
	#sk_SSL_CIPHER_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
SSL_CIPHER
, (°), (vÆ))

	)

1283 
	#sk_SSL_CIPHER_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
SSL_CIPHER
, (°), (vÆ))

	)

1284 
	#sk_SSL_CIPHER_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
SSL_CIPHER
, (°), (vÆ))

	)

1285 
	#sk_SSL_CIPHER_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
SSL_CIPHER
, (°), (vÆ))

	)

1286 
	#sk_SSL_CIPHER_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
SSL_CIPHER
, (°), (i))

	)

1287 
	#sk_SSL_CIPHER_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
SSL_CIPHER
, (°), (±r))

	)

1288 
	#sk_SSL_CIPHER_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
SSL_CIPHER
, (°), (vÆ), (i))

	)

1289 
	#sk_SSL_CIPHER_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
SSL_CIPHER
, (°), (cmp))

	)

1290 
	#sk_SSL_CIPHER_dup
(
°
Ë
	`SKM_sk_dup
(
SSL_CIPHER
, st)

	)

1291 
	#sk_SSL_CIPHER_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
SSL_CIPHER
, (°), (‰ì_func))

	)

1292 
	#sk_SSL_CIPHER_shi·
(
°
Ë
	`SKM_sk_shi·
(
SSL_CIPHER
, (°))

	)

1293 
	#sk_SSL_CIPHER_p›
(
°
Ë
	`SKM_sk_p›
(
SSL_CIPHER
, (°))

	)

1294 
	#sk_SSL_CIPHER_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
SSL_CIPHER
, (°))

	)

1295 
	#sk_SSL_CIPHER_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
SSL_CIPHER
, (°))

	)

1297 
	#sk_SSL_COMP_√w
(
°
Ë
	`SKM_sk_√w
(
SSL_COMP
, (°))

	)

1298 
	#sk_SSL_COMP_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
SSL_COMP
)

	)

1299 
	#sk_SSL_COMP_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
SSL_COMP
, (°))

	)

1300 
	#sk_SSL_COMP_num
(
°
Ë
	`SKM_sk_num
(
SSL_COMP
, (°))

	)

1301 
	#sk_SSL_COMP_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
SSL_COMP
, (°), (i))

	)

1302 
	#sk_SSL_COMP_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
SSL_COMP
, (°), (i), (vÆ))

	)

1303 
	#sk_SSL_COMP_zîo
(
°
Ë
	`SKM_sk_zîo
(
SSL_COMP
, (°))

	)

1304 
	#sk_SSL_COMP_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
SSL_COMP
, (°), (vÆ))

	)

1305 
	#sk_SSL_COMP_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
SSL_COMP
, (°), (vÆ))

	)

1306 
	#sk_SSL_COMP_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
SSL_COMP
, (°), (vÆ))

	)

1307 
	#sk_SSL_COMP_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
SSL_COMP
, (°), (vÆ))

	)

1308 
	#sk_SSL_COMP_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
SSL_COMP
, (°), (i))

	)

1309 
	#sk_SSL_COMP_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
SSL_COMP
, (°), (±r))

	)

1310 
	#sk_SSL_COMP_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
SSL_COMP
, (°), (vÆ), (i))

	)

1311 
	#sk_SSL_COMP_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
SSL_COMP
, (°), (cmp))

	)

1312 
	#sk_SSL_COMP_dup
(
°
Ë
	`SKM_sk_dup
(
SSL_COMP
, st)

	)

1313 
	#sk_SSL_COMP_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
SSL_COMP
, (°), (‰ì_func))

	)

1314 
	#sk_SSL_COMP_shi·
(
°
Ë
	`SKM_sk_shi·
(
SSL_COMP
, (°))

	)

1315 
	#sk_SSL_COMP_p›
(
°
Ë
	`SKM_sk_p›
(
SSL_COMP
, (°))

	)

1316 
	#sk_SSL_COMP_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
SSL_COMP
, (°))

	)

1317 
	#sk_SSL_COMP_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
SSL_COMP
, (°))

	)

1319 
	#sk_STORE_OBJECT_√w
(
°
Ë
	`SKM_sk_√w
(
STORE_OBJECT
, (°))

	)

1320 
	#sk_STORE_OBJECT_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
STORE_OBJECT
)

	)

1321 
	#sk_STORE_OBJECT_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
STORE_OBJECT
, (°))

	)

1322 
	#sk_STORE_OBJECT_num
(
°
Ë
	`SKM_sk_num
(
STORE_OBJECT
, (°))

	)

1323 
	#sk_STORE_OBJECT_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
STORE_OBJECT
, (°), (i))

	)

1324 
	#sk_STORE_OBJECT_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
STORE_OBJECT
, (°), (i), (vÆ))

	)

1325 
	#sk_STORE_OBJECT_zîo
(
°
Ë
	`SKM_sk_zîo
(
STORE_OBJECT
, (°))

	)

1326 
	#sk_STORE_OBJECT_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
STORE_OBJECT
, (°), (vÆ))

	)

1327 
	#sk_STORE_OBJECT_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
STORE_OBJECT
, (°), (vÆ))

	)

1328 
	#sk_STORE_OBJECT_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
STORE_OBJECT
, (°), (vÆ))

	)

1329 
	#sk_STORE_OBJECT_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
STORE_OBJECT
, (°), (vÆ))

	)

1330 
	#sk_STORE_OBJECT_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
STORE_OBJECT
, (°), (i))

	)

1331 
	#sk_STORE_OBJECT_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
STORE_OBJECT
, (°), (±r))

	)

1332 
	#sk_STORE_OBJECT_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
STORE_OBJECT
, (°), (vÆ), (i))

	)

1333 
	#sk_STORE_OBJECT_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
STORE_OBJECT
, (°), (cmp))

	)

1334 
	#sk_STORE_OBJECT_dup
(
°
Ë
	`SKM_sk_dup
(
STORE_OBJECT
, st)

	)

1335 
	#sk_STORE_OBJECT_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
STORE_OBJECT
, (°), (‰ì_func))

	)

1336 
	#sk_STORE_OBJECT_shi·
(
°
Ë
	`SKM_sk_shi·
(
STORE_OBJECT
, (°))

	)

1337 
	#sk_STORE_OBJECT_p›
(
°
Ë
	`SKM_sk_p›
(
STORE_OBJECT
, (°))

	)

1338 
	#sk_STORE_OBJECT_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
STORE_OBJECT
, (°))

	)

1339 
	#sk_STORE_OBJECT_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
STORE_OBJECT
, (°))

	)

1341 
	#sk_SXNETID_√w
(
°
Ë
	`SKM_sk_√w
(
SXNETID
, (°))

	)

1342 
	#sk_SXNETID_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
SXNETID
)

	)

1343 
	#sk_SXNETID_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
SXNETID
, (°))

	)

1344 
	#sk_SXNETID_num
(
°
Ë
	`SKM_sk_num
(
SXNETID
, (°))

	)

1345 
	#sk_SXNETID_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
SXNETID
, (°), (i))

	)

1346 
	#sk_SXNETID_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
SXNETID
, (°), (i), (vÆ))

	)

1347 
	#sk_SXNETID_zîo
(
°
Ë
	`SKM_sk_zîo
(
SXNETID
, (°))

	)

1348 
	#sk_SXNETID_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
SXNETID
, (°), (vÆ))

	)

1349 
	#sk_SXNETID_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
SXNETID
, (°), (vÆ))

	)

1350 
	#sk_SXNETID_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
SXNETID
, (°), (vÆ))

	)

1351 
	#sk_SXNETID_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
SXNETID
, (°), (vÆ))

	)

1352 
	#sk_SXNETID_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
SXNETID
, (°), (i))

	)

1353 
	#sk_SXNETID_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
SXNETID
, (°), (±r))

	)

1354 
	#sk_SXNETID_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
SXNETID
, (°), (vÆ), (i))

	)

1355 
	#sk_SXNETID_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
SXNETID
, (°), (cmp))

	)

1356 
	#sk_SXNETID_dup
(
°
Ë
	`SKM_sk_dup
(
SXNETID
, st)

	)

1357 
	#sk_SXNETID_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
SXNETID
, (°), (‰ì_func))

	)

1358 
	#sk_SXNETID_shi·
(
°
Ë
	`SKM_sk_shi·
(
SXNETID
, (°))

	)

1359 
	#sk_SXNETID_p›
(
°
Ë
	`SKM_sk_p›
(
SXNETID
, (°))

	)

1360 
	#sk_SXNETID_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
SXNETID
, (°))

	)

1361 
	#sk_SXNETID_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
SXNETID
, (°))

	)

1363 
	#sk_UI_STRING_√w
(
°
Ë
	`SKM_sk_√w
(
UI_STRING
, (°))

	)

1364 
	#sk_UI_STRING_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
UI_STRING
)

	)

1365 
	#sk_UI_STRING_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
UI_STRING
, (°))

	)

1366 
	#sk_UI_STRING_num
(
°
Ë
	`SKM_sk_num
(
UI_STRING
, (°))

	)

1367 
	#sk_UI_STRING_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
UI_STRING
, (°), (i))

	)

1368 
	#sk_UI_STRING_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
UI_STRING
, (°), (i), (vÆ))

	)

1369 
	#sk_UI_STRING_zîo
(
°
Ë
	`SKM_sk_zîo
(
UI_STRING
, (°))

	)

1370 
	#sk_UI_STRING_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
UI_STRING
, (°), (vÆ))

	)

1371 
	#sk_UI_STRING_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
UI_STRING
, (°), (vÆ))

	)

1372 
	#sk_UI_STRING_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
UI_STRING
, (°), (vÆ))

	)

1373 
	#sk_UI_STRING_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
UI_STRING
, (°), (vÆ))

	)

1374 
	#sk_UI_STRING_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
UI_STRING
, (°), (i))

	)

1375 
	#sk_UI_STRING_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
UI_STRING
, (°), (±r))

	)

1376 
	#sk_UI_STRING_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
UI_STRING
, (°), (vÆ), (i))

	)

1377 
	#sk_UI_STRING_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
UI_STRING
, (°), (cmp))

	)

1378 
	#sk_UI_STRING_dup
(
°
Ë
	`SKM_sk_dup
(
UI_STRING
, st)

	)

1379 
	#sk_UI_STRING_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
UI_STRING
, (°), (‰ì_func))

	)

1380 
	#sk_UI_STRING_shi·
(
°
Ë
	`SKM_sk_shi·
(
UI_STRING
, (°))

	)

1381 
	#sk_UI_STRING_p›
(
°
Ë
	`SKM_sk_p›
(
UI_STRING
, (°))

	)

1382 
	#sk_UI_STRING_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
UI_STRING
, (°))

	)

1383 
	#sk_UI_STRING_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
UI_STRING
, (°))

	)

1385 
	#sk_X509_√w
(
°
Ë
	`SKM_sk_√w
(
X509
, (°))

	)

1386 
	#sk_X509_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509
)

	)

1387 
	#sk_X509_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509
, (°))

	)

1388 
	#sk_X509_num
(
°
Ë
	`SKM_sk_num
(
X509
, (°))

	)

1389 
	#sk_X509_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509
, (°), (i))

	)

1390 
	#sk_X509_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509
, (°), (i), (vÆ))

	)

1391 
	#sk_X509_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509
, (°))

	)

1392 
	#sk_X509_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509
, (°), (vÆ))

	)

1393 
	#sk_X509_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509
, (°), (vÆ))

	)

1394 
	#sk_X509_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509
, (°), (vÆ))

	)

1395 
	#sk_X509_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509
, (°), (vÆ))

	)

1396 
	#sk_X509_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509
, (°), (i))

	)

1397 
	#sk_X509_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509
, (°), (±r))

	)

1398 
	#sk_X509_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509
, (°), (vÆ), (i))

	)

1399 
	#sk_X509_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509
, (°), (cmp))

	)

1400 
	#sk_X509_dup
(
°
Ë
	`SKM_sk_dup
(
X509
, st)

	)

1401 
	#sk_X509_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509
, (°), (‰ì_func))

	)

1402 
	#sk_X509_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509
, (°))

	)

1403 
	#sk_X509_p›
(
°
Ë
	`SKM_sk_p›
(
X509
, (°))

	)

1404 
	#sk_X509_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509
, (°))

	)

1405 
	#sk_X509_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509
, (°))

	)

1407 
	#sk_X509V3_EXT_METHOD_√w
(
°
Ë
	`SKM_sk_√w
(
X509V3_EXT_METHOD
, (°))

	)

1408 
	#sk_X509V3_EXT_METHOD_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509V3_EXT_METHOD
)

	)

1409 
	#sk_X509V3_EXT_METHOD_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509V3_EXT_METHOD
, (°))

	)

1410 
	#sk_X509V3_EXT_METHOD_num
(
°
Ë
	`SKM_sk_num
(
X509V3_EXT_METHOD
, (°))

	)

1411 
	#sk_X509V3_EXT_METHOD_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509V3_EXT_METHOD
, (°), (i))

	)

1412 
	#sk_X509V3_EXT_METHOD_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509V3_EXT_METHOD
, (°), (i), (vÆ))

	)

1413 
	#sk_X509V3_EXT_METHOD_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509V3_EXT_METHOD
, (°))

	)

1414 
	#sk_X509V3_EXT_METHOD_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509V3_EXT_METHOD
, (°), (vÆ))

	)

1415 
	#sk_X509V3_EXT_METHOD_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509V3_EXT_METHOD
, (°), (vÆ))

	)

1416 
	#sk_X509V3_EXT_METHOD_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509V3_EXT_METHOD
, (°), (vÆ))

	)

1417 
	#sk_X509V3_EXT_METHOD_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509V3_EXT_METHOD
, (°), (vÆ))

	)

1418 
	#sk_X509V3_EXT_METHOD_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509V3_EXT_METHOD
, (°), (i))

	)

1419 
	#sk_X509V3_EXT_METHOD_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509V3_EXT_METHOD
, (°), (±r))

	)

1420 
	#sk_X509V3_EXT_METHOD_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509V3_EXT_METHOD
, (°), (vÆ), (i))

	)

1421 
	#sk_X509V3_EXT_METHOD_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509V3_EXT_METHOD
, (°), (cmp))

	)

1422 
	#sk_X509V3_EXT_METHOD_dup
(
°
Ë
	`SKM_sk_dup
(
X509V3_EXT_METHOD
, st)

	)

1423 
	#sk_X509V3_EXT_METHOD_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509V3_EXT_METHOD
, (°), (‰ì_func))

	)

1424 
	#sk_X509V3_EXT_METHOD_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509V3_EXT_METHOD
, (°))

	)

1425 
	#sk_X509V3_EXT_METHOD_p›
(
°
Ë
	`SKM_sk_p›
(
X509V3_EXT_METHOD
, (°))

	)

1426 
	#sk_X509V3_EXT_METHOD_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509V3_EXT_METHOD
, (°))

	)

1427 
	#sk_X509V3_EXT_METHOD_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509V3_EXT_METHOD
, (°))

	)

1429 
	#sk_X509_ALGOR_√w
(
°
Ë
	`SKM_sk_√w
(
X509_ALGOR
, (°))

	)

1430 
	#sk_X509_ALGOR_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_ALGOR
)

	)

1431 
	#sk_X509_ALGOR_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_ALGOR
, (°))

	)

1432 
	#sk_X509_ALGOR_num
(
°
Ë
	`SKM_sk_num
(
X509_ALGOR
, (°))

	)

1433 
	#sk_X509_ALGOR_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_ALGOR
, (°), (i))

	)

1434 
	#sk_X509_ALGOR_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_ALGOR
, (°), (i), (vÆ))

	)

1435 
	#sk_X509_ALGOR_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_ALGOR
, (°))

	)

1436 
	#sk_X509_ALGOR_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_ALGOR
, (°), (vÆ))

	)

1437 
	#sk_X509_ALGOR_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_ALGOR
, (°), (vÆ))

	)

1438 
	#sk_X509_ALGOR_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_ALGOR
, (°), (vÆ))

	)

1439 
	#sk_X509_ALGOR_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_ALGOR
, (°), (vÆ))

	)

1440 
	#sk_X509_ALGOR_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_ALGOR
, (°), (i))

	)

1441 
	#sk_X509_ALGOR_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_ALGOR
, (°), (±r))

	)

1442 
	#sk_X509_ALGOR_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_ALGOR
, (°), (vÆ), (i))

	)

1443 
	#sk_X509_ALGOR_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_ALGOR
, (°), (cmp))

	)

1444 
	#sk_X509_ALGOR_dup
(
°
Ë
	`SKM_sk_dup
(
X509_ALGOR
, st)

	)

1445 
	#sk_X509_ALGOR_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_ALGOR
, (°), (‰ì_func))

	)

1446 
	#sk_X509_ALGOR_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_ALGOR
, (°))

	)

1447 
	#sk_X509_ALGOR_p›
(
°
Ë
	`SKM_sk_p›
(
X509_ALGOR
, (°))

	)

1448 
	#sk_X509_ALGOR_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_ALGOR
, (°))

	)

1449 
	#sk_X509_ALGOR_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_ALGOR
, (°))

	)

1451 
	#sk_X509_ATTRIBUTE_√w
(
°
Ë
	`SKM_sk_√w
(
X509_ATTRIBUTE
, (°))

	)

1452 
	#sk_X509_ATTRIBUTE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_ATTRIBUTE
)

	)

1453 
	#sk_X509_ATTRIBUTE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_ATTRIBUTE
, (°))

	)

1454 
	#sk_X509_ATTRIBUTE_num
(
°
Ë
	`SKM_sk_num
(
X509_ATTRIBUTE
, (°))

	)

1455 
	#sk_X509_ATTRIBUTE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_ATTRIBUTE
, (°), (i))

	)

1456 
	#sk_X509_ATTRIBUTE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_ATTRIBUTE
, (°), (i), (vÆ))

	)

1457 
	#sk_X509_ATTRIBUTE_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_ATTRIBUTE
, (°))

	)

1458 
	#sk_X509_ATTRIBUTE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_ATTRIBUTE
, (°), (vÆ))

	)

1459 
	#sk_X509_ATTRIBUTE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_ATTRIBUTE
, (°), (vÆ))

	)

1460 
	#sk_X509_ATTRIBUTE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_ATTRIBUTE
, (°), (vÆ))

	)

1461 
	#sk_X509_ATTRIBUTE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_ATTRIBUTE
, (°), (vÆ))

	)

1462 
	#sk_X509_ATTRIBUTE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_ATTRIBUTE
, (°), (i))

	)

1463 
	#sk_X509_ATTRIBUTE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_ATTRIBUTE
, (°), (±r))

	)

1464 
	#sk_X509_ATTRIBUTE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_ATTRIBUTE
, (°), (vÆ), (i))

	)

1465 
	#sk_X509_ATTRIBUTE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_ATTRIBUTE
, (°), (cmp))

	)

1466 
	#sk_X509_ATTRIBUTE_dup
(
°
Ë
	`SKM_sk_dup
(
X509_ATTRIBUTE
, st)

	)

1467 
	#sk_X509_ATTRIBUTE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_ATTRIBUTE
, (°), (‰ì_func))

	)

1468 
	#sk_X509_ATTRIBUTE_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_ATTRIBUTE
, (°))

	)

1469 
	#sk_X509_ATTRIBUTE_p›
(
°
Ë
	`SKM_sk_p›
(
X509_ATTRIBUTE
, (°))

	)

1470 
	#sk_X509_ATTRIBUTE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_ATTRIBUTE
, (°))

	)

1471 
	#sk_X509_ATTRIBUTE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_ATTRIBUTE
, (°))

	)

1473 
	#sk_X509_CRL_√w
(
°
Ë
	`SKM_sk_√w
(
X509_CRL
, (°))

	)

1474 
	#sk_X509_CRL_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_CRL
)

	)

1475 
	#sk_X509_CRL_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_CRL
, (°))

	)

1476 
	#sk_X509_CRL_num
(
°
Ë
	`SKM_sk_num
(
X509_CRL
, (°))

	)

1477 
	#sk_X509_CRL_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_CRL
, (°), (i))

	)

1478 
	#sk_X509_CRL_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_CRL
, (°), (i), (vÆ))

	)

1479 
	#sk_X509_CRL_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_CRL
, (°))

	)

1480 
	#sk_X509_CRL_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_CRL
, (°), (vÆ))

	)

1481 
	#sk_X509_CRL_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_CRL
, (°), (vÆ))

	)

1482 
	#sk_X509_CRL_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_CRL
, (°), (vÆ))

	)

1483 
	#sk_X509_CRL_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_CRL
, (°), (vÆ))

	)

1484 
	#sk_X509_CRL_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_CRL
, (°), (i))

	)

1485 
	#sk_X509_CRL_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_CRL
, (°), (±r))

	)

1486 
	#sk_X509_CRL_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_CRL
, (°), (vÆ), (i))

	)

1487 
	#sk_X509_CRL_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_CRL
, (°), (cmp))

	)

1488 
	#sk_X509_CRL_dup
(
°
Ë
	`SKM_sk_dup
(
X509_CRL
, st)

	)

1489 
	#sk_X509_CRL_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_CRL
, (°), (‰ì_func))

	)

1490 
	#sk_X509_CRL_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_CRL
, (°))

	)

1491 
	#sk_X509_CRL_p›
(
°
Ë
	`SKM_sk_p›
(
X509_CRL
, (°))

	)

1492 
	#sk_X509_CRL_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_CRL
, (°))

	)

1493 
	#sk_X509_CRL_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_CRL
, (°))

	)

1495 
	#sk_X509_EXTENSION_√w
(
°
Ë
	`SKM_sk_√w
(
X509_EXTENSION
, (°))

	)

1496 
	#sk_X509_EXTENSION_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_EXTENSION
)

	)

1497 
	#sk_X509_EXTENSION_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_EXTENSION
, (°))

	)

1498 
	#sk_X509_EXTENSION_num
(
°
Ë
	`SKM_sk_num
(
X509_EXTENSION
, (°))

	)

1499 
	#sk_X509_EXTENSION_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_EXTENSION
, (°), (i))

	)

1500 
	#sk_X509_EXTENSION_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_EXTENSION
, (°), (i), (vÆ))

	)

1501 
	#sk_X509_EXTENSION_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_EXTENSION
, (°))

	)

1502 
	#sk_X509_EXTENSION_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_EXTENSION
, (°), (vÆ))

	)

1503 
	#sk_X509_EXTENSION_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_EXTENSION
, (°), (vÆ))

	)

1504 
	#sk_X509_EXTENSION_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_EXTENSION
, (°), (vÆ))

	)

1505 
	#sk_X509_EXTENSION_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_EXTENSION
, (°), (vÆ))

	)

1506 
	#sk_X509_EXTENSION_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_EXTENSION
, (°), (i))

	)

1507 
	#sk_X509_EXTENSION_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_EXTENSION
, (°), (±r))

	)

1508 
	#sk_X509_EXTENSION_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_EXTENSION
, (°), (vÆ), (i))

	)

1509 
	#sk_X509_EXTENSION_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_EXTENSION
, (°), (cmp))

	)

1510 
	#sk_X509_EXTENSION_dup
(
°
Ë
	`SKM_sk_dup
(
X509_EXTENSION
, st)

	)

1511 
	#sk_X509_EXTENSION_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_EXTENSION
, (°), (‰ì_func))

	)

1512 
	#sk_X509_EXTENSION_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_EXTENSION
, (°))

	)

1513 
	#sk_X509_EXTENSION_p›
(
°
Ë
	`SKM_sk_p›
(
X509_EXTENSION
, (°))

	)

1514 
	#sk_X509_EXTENSION_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_EXTENSION
, (°))

	)

1515 
	#sk_X509_EXTENSION_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_EXTENSION
, (°))

	)

1517 
	#sk_X509_INFO_√w
(
°
Ë
	`SKM_sk_√w
(
X509_INFO
, (°))

	)

1518 
	#sk_X509_INFO_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_INFO
)

	)

1519 
	#sk_X509_INFO_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_INFO
, (°))

	)

1520 
	#sk_X509_INFO_num
(
°
Ë
	`SKM_sk_num
(
X509_INFO
, (°))

	)

1521 
	#sk_X509_INFO_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_INFO
, (°), (i))

	)

1522 
	#sk_X509_INFO_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_INFO
, (°), (i), (vÆ))

	)

1523 
	#sk_X509_INFO_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_INFO
, (°))

	)

1524 
	#sk_X509_INFO_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_INFO
, (°), (vÆ))

	)

1525 
	#sk_X509_INFO_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_INFO
, (°), (vÆ))

	)

1526 
	#sk_X509_INFO_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_INFO
, (°), (vÆ))

	)

1527 
	#sk_X509_INFO_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_INFO
, (°), (vÆ))

	)

1528 
	#sk_X509_INFO_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_INFO
, (°), (i))

	)

1529 
	#sk_X509_INFO_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_INFO
, (°), (±r))

	)

1530 
	#sk_X509_INFO_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_INFO
, (°), (vÆ), (i))

	)

1531 
	#sk_X509_INFO_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_INFO
, (°), (cmp))

	)

1532 
	#sk_X509_INFO_dup
(
°
Ë
	`SKM_sk_dup
(
X509_INFO
, st)

	)

1533 
	#sk_X509_INFO_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_INFO
, (°), (‰ì_func))

	)

1534 
	#sk_X509_INFO_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_INFO
, (°))

	)

1535 
	#sk_X509_INFO_p›
(
°
Ë
	`SKM_sk_p›
(
X509_INFO
, (°))

	)

1536 
	#sk_X509_INFO_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_INFO
, (°))

	)

1537 
	#sk_X509_INFO_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_INFO
, (°))

	)

1539 
	#sk_X509_LOOKUP_√w
(
°
Ë
	`SKM_sk_√w
(
X509_LOOKUP
, (°))

	)

1540 
	#sk_X509_LOOKUP_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_LOOKUP
)

	)

1541 
	#sk_X509_LOOKUP_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_LOOKUP
, (°))

	)

1542 
	#sk_X509_LOOKUP_num
(
°
Ë
	`SKM_sk_num
(
X509_LOOKUP
, (°))

	)

1543 
	#sk_X509_LOOKUP_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_LOOKUP
, (°), (i))

	)

1544 
	#sk_X509_LOOKUP_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_LOOKUP
, (°), (i), (vÆ))

	)

1545 
	#sk_X509_LOOKUP_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_LOOKUP
, (°))

	)

1546 
	#sk_X509_LOOKUP_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_LOOKUP
, (°), (vÆ))

	)

1547 
	#sk_X509_LOOKUP_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_LOOKUP
, (°), (vÆ))

	)

1548 
	#sk_X509_LOOKUP_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_LOOKUP
, (°), (vÆ))

	)

1549 
	#sk_X509_LOOKUP_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_LOOKUP
, (°), (vÆ))

	)

1550 
	#sk_X509_LOOKUP_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_LOOKUP
, (°), (i))

	)

1551 
	#sk_X509_LOOKUP_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_LOOKUP
, (°), (±r))

	)

1552 
	#sk_X509_LOOKUP_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_LOOKUP
, (°), (vÆ), (i))

	)

1553 
	#sk_X509_LOOKUP_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_LOOKUP
, (°), (cmp))

	)

1554 
	#sk_X509_LOOKUP_dup
(
°
Ë
	`SKM_sk_dup
(
X509_LOOKUP
, st)

	)

1555 
	#sk_X509_LOOKUP_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_LOOKUP
, (°), (‰ì_func))

	)

1556 
	#sk_X509_LOOKUP_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_LOOKUP
, (°))

	)

1557 
	#sk_X509_LOOKUP_p›
(
°
Ë
	`SKM_sk_p›
(
X509_LOOKUP
, (°))

	)

1558 
	#sk_X509_LOOKUP_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_LOOKUP
, (°))

	)

1559 
	#sk_X509_LOOKUP_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_LOOKUP
, (°))

	)

1561 
	#sk_X509_NAME_√w
(
°
Ë
	`SKM_sk_√w
(
X509_NAME
, (°))

	)

1562 
	#sk_X509_NAME_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_NAME
)

	)

1563 
	#sk_X509_NAME_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_NAME
, (°))

	)

1564 
	#sk_X509_NAME_num
(
°
Ë
	`SKM_sk_num
(
X509_NAME
, (°))

	)

1565 
	#sk_X509_NAME_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_NAME
, (°), (i))

	)

1566 
	#sk_X509_NAME_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_NAME
, (°), (i), (vÆ))

	)

1567 
	#sk_X509_NAME_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_NAME
, (°))

	)

1568 
	#sk_X509_NAME_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_NAME
, (°), (vÆ))

	)

1569 
	#sk_X509_NAME_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_NAME
, (°), (vÆ))

	)

1570 
	#sk_X509_NAME_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_NAME
, (°), (vÆ))

	)

1571 
	#sk_X509_NAME_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_NAME
, (°), (vÆ))

	)

1572 
	#sk_X509_NAME_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_NAME
, (°), (i))

	)

1573 
	#sk_X509_NAME_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_NAME
, (°), (±r))

	)

1574 
	#sk_X509_NAME_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_NAME
, (°), (vÆ), (i))

	)

1575 
	#sk_X509_NAME_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_NAME
, (°), (cmp))

	)

1576 
	#sk_X509_NAME_dup
(
°
Ë
	`SKM_sk_dup
(
X509_NAME
, st)

	)

1577 
	#sk_X509_NAME_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_NAME
, (°), (‰ì_func))

	)

1578 
	#sk_X509_NAME_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_NAME
, (°))

	)

1579 
	#sk_X509_NAME_p›
(
°
Ë
	`SKM_sk_p›
(
X509_NAME
, (°))

	)

1580 
	#sk_X509_NAME_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_NAME
, (°))

	)

1581 
	#sk_X509_NAME_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_NAME
, (°))

	)

1583 
	#sk_X509_NAME_ENTRY_√w
(
°
Ë
	`SKM_sk_√w
(
X509_NAME_ENTRY
, (°))

	)

1584 
	#sk_X509_NAME_ENTRY_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_NAME_ENTRY
)

	)

1585 
	#sk_X509_NAME_ENTRY_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_NAME_ENTRY
, (°))

	)

1586 
	#sk_X509_NAME_ENTRY_num
(
°
Ë
	`SKM_sk_num
(
X509_NAME_ENTRY
, (°))

	)

1587 
	#sk_X509_NAME_ENTRY_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_NAME_ENTRY
, (°), (i))

	)

1588 
	#sk_X509_NAME_ENTRY_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_NAME_ENTRY
, (°), (i), (vÆ))

	)

1589 
	#sk_X509_NAME_ENTRY_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_NAME_ENTRY
, (°))

	)

1590 
	#sk_X509_NAME_ENTRY_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_NAME_ENTRY
, (°), (vÆ))

	)

1591 
	#sk_X509_NAME_ENTRY_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_NAME_ENTRY
, (°), (vÆ))

	)

1592 
	#sk_X509_NAME_ENTRY_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_NAME_ENTRY
, (°), (vÆ))

	)

1593 
	#sk_X509_NAME_ENTRY_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_NAME_ENTRY
, (°), (vÆ))

	)

1594 
	#sk_X509_NAME_ENTRY_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_NAME_ENTRY
, (°), (i))

	)

1595 
	#sk_X509_NAME_ENTRY_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_NAME_ENTRY
, (°), (±r))

	)

1596 
	#sk_X509_NAME_ENTRY_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_NAME_ENTRY
, (°), (vÆ), (i))

	)

1597 
	#sk_X509_NAME_ENTRY_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_NAME_ENTRY
, (°), (cmp))

	)

1598 
	#sk_X509_NAME_ENTRY_dup
(
°
Ë
	`SKM_sk_dup
(
X509_NAME_ENTRY
, st)

	)

1599 
	#sk_X509_NAME_ENTRY_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_NAME_ENTRY
, (°), (‰ì_func))

	)

1600 
	#sk_X509_NAME_ENTRY_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_NAME_ENTRY
, (°))

	)

1601 
	#sk_X509_NAME_ENTRY_p›
(
°
Ë
	`SKM_sk_p›
(
X509_NAME_ENTRY
, (°))

	)

1602 
	#sk_X509_NAME_ENTRY_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_NAME_ENTRY
, (°))

	)

1603 
	#sk_X509_NAME_ENTRY_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_NAME_ENTRY
, (°))

	)

1605 
	#sk_X509_OBJECT_√w
(
°
Ë
	`SKM_sk_√w
(
X509_OBJECT
, (°))

	)

1606 
	#sk_X509_OBJECT_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_OBJECT
)

	)

1607 
	#sk_X509_OBJECT_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_OBJECT
, (°))

	)

1608 
	#sk_X509_OBJECT_num
(
°
Ë
	`SKM_sk_num
(
X509_OBJECT
, (°))

	)

1609 
	#sk_X509_OBJECT_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_OBJECT
, (°), (i))

	)

1610 
	#sk_X509_OBJECT_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_OBJECT
, (°), (i), (vÆ))

	)

1611 
	#sk_X509_OBJECT_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_OBJECT
, (°))

	)

1612 
	#sk_X509_OBJECT_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_OBJECT
, (°), (vÆ))

	)

1613 
	#sk_X509_OBJECT_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_OBJECT
, (°), (vÆ))

	)

1614 
	#sk_X509_OBJECT_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_OBJECT
, (°), (vÆ))

	)

1615 
	#sk_X509_OBJECT_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_OBJECT
, (°), (vÆ))

	)

1616 
	#sk_X509_OBJECT_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_OBJECT
, (°), (i))

	)

1617 
	#sk_X509_OBJECT_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_OBJECT
, (°), (±r))

	)

1618 
	#sk_X509_OBJECT_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_OBJECT
, (°), (vÆ), (i))

	)

1619 
	#sk_X509_OBJECT_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_OBJECT
, (°), (cmp))

	)

1620 
	#sk_X509_OBJECT_dup
(
°
Ë
	`SKM_sk_dup
(
X509_OBJECT
, st)

	)

1621 
	#sk_X509_OBJECT_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_OBJECT
, (°), (‰ì_func))

	)

1622 
	#sk_X509_OBJECT_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_OBJECT
, (°))

	)

1623 
	#sk_X509_OBJECT_p›
(
°
Ë
	`SKM_sk_p›
(
X509_OBJECT
, (°))

	)

1624 
	#sk_X509_OBJECT_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_OBJECT
, (°))

	)

1625 
	#sk_X509_OBJECT_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_OBJECT
, (°))

	)

1627 
	#sk_X509_POLICY_DATA_√w
(
°
Ë
	`SKM_sk_√w
(
X509_POLICY_DATA
, (°))

	)

1628 
	#sk_X509_POLICY_DATA_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_POLICY_DATA
)

	)

1629 
	#sk_X509_POLICY_DATA_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_POLICY_DATA
, (°))

	)

1630 
	#sk_X509_POLICY_DATA_num
(
°
Ë
	`SKM_sk_num
(
X509_POLICY_DATA
, (°))

	)

1631 
	#sk_X509_POLICY_DATA_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_POLICY_DATA
, (°), (i))

	)

1632 
	#sk_X509_POLICY_DATA_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_POLICY_DATA
, (°), (i), (vÆ))

	)

1633 
	#sk_X509_POLICY_DATA_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_POLICY_DATA
, (°))

	)

1634 
	#sk_X509_POLICY_DATA_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_POLICY_DATA
, (°), (vÆ))

	)

1635 
	#sk_X509_POLICY_DATA_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_POLICY_DATA
, (°), (vÆ))

	)

1636 
	#sk_X509_POLICY_DATA_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_POLICY_DATA
, (°), (vÆ))

	)

1637 
	#sk_X509_POLICY_DATA_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_POLICY_DATA
, (°), (vÆ))

	)

1638 
	#sk_X509_POLICY_DATA_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_POLICY_DATA
, (°), (i))

	)

1639 
	#sk_X509_POLICY_DATA_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_POLICY_DATA
, (°), (±r))

	)

1640 
	#sk_X509_POLICY_DATA_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_POLICY_DATA
, (°), (vÆ), (i))

	)

1641 
	#sk_X509_POLICY_DATA_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_POLICY_DATA
, (°), (cmp))

	)

1642 
	#sk_X509_POLICY_DATA_dup
(
°
Ë
	`SKM_sk_dup
(
X509_POLICY_DATA
, st)

	)

1643 
	#sk_X509_POLICY_DATA_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_POLICY_DATA
, (°), (‰ì_func))

	)

1644 
	#sk_X509_POLICY_DATA_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_POLICY_DATA
, (°))

	)

1645 
	#sk_X509_POLICY_DATA_p›
(
°
Ë
	`SKM_sk_p›
(
X509_POLICY_DATA
, (°))

	)

1646 
	#sk_X509_POLICY_DATA_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_POLICY_DATA
, (°))

	)

1647 
	#sk_X509_POLICY_DATA_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_POLICY_DATA
, (°))

	)

1649 
	#sk_X509_POLICY_NODE_√w
(
°
Ë
	`SKM_sk_√w
(
X509_POLICY_NODE
, (°))

	)

1650 
	#sk_X509_POLICY_NODE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_POLICY_NODE
)

	)

1651 
	#sk_X509_POLICY_NODE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_POLICY_NODE
, (°))

	)

1652 
	#sk_X509_POLICY_NODE_num
(
°
Ë
	`SKM_sk_num
(
X509_POLICY_NODE
, (°))

	)

1653 
	#sk_X509_POLICY_NODE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_POLICY_NODE
, (°), (i))

	)

1654 
	#sk_X509_POLICY_NODE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_POLICY_NODE
, (°), (i), (vÆ))

	)

1655 
	#sk_X509_POLICY_NODE_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_POLICY_NODE
, (°))

	)

1656 
	#sk_X509_POLICY_NODE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_POLICY_NODE
, (°), (vÆ))

	)

1657 
	#sk_X509_POLICY_NODE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_POLICY_NODE
, (°), (vÆ))

	)

1658 
	#sk_X509_POLICY_NODE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_POLICY_NODE
, (°), (vÆ))

	)

1659 
	#sk_X509_POLICY_NODE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_POLICY_NODE
, (°), (vÆ))

	)

1660 
	#sk_X509_POLICY_NODE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_POLICY_NODE
, (°), (i))

	)

1661 
	#sk_X509_POLICY_NODE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_POLICY_NODE
, (°), (±r))

	)

1662 
	#sk_X509_POLICY_NODE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_POLICY_NODE
, (°), (vÆ), (i))

	)

1663 
	#sk_X509_POLICY_NODE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_POLICY_NODE
, (°), (cmp))

	)

1664 
	#sk_X509_POLICY_NODE_dup
(
°
Ë
	`SKM_sk_dup
(
X509_POLICY_NODE
, st)

	)

1665 
	#sk_X509_POLICY_NODE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_POLICY_NODE
, (°), (‰ì_func))

	)

1666 
	#sk_X509_POLICY_NODE_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_POLICY_NODE
, (°))

	)

1667 
	#sk_X509_POLICY_NODE_p›
(
°
Ë
	`SKM_sk_p›
(
X509_POLICY_NODE
, (°))

	)

1668 
	#sk_X509_POLICY_NODE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_POLICY_NODE
, (°))

	)

1669 
	#sk_X509_POLICY_NODE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_POLICY_NODE
, (°))

	)

1671 
	#sk_X509_POLICY_REF_√w
(
°
Ë
	`SKM_sk_√w
(
X509_POLICY_REF
, (°))

	)

1672 
	#sk_X509_POLICY_REF_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_POLICY_REF
)

	)

1673 
	#sk_X509_POLICY_REF_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_POLICY_REF
, (°))

	)

1674 
	#sk_X509_POLICY_REF_num
(
°
Ë
	`SKM_sk_num
(
X509_POLICY_REF
, (°))

	)

1675 
	#sk_X509_POLICY_REF_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_POLICY_REF
, (°), (i))

	)

1676 
	#sk_X509_POLICY_REF_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_POLICY_REF
, (°), (i), (vÆ))

	)

1677 
	#sk_X509_POLICY_REF_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_POLICY_REF
, (°))

	)

1678 
	#sk_X509_POLICY_REF_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_POLICY_REF
, (°), (vÆ))

	)

1679 
	#sk_X509_POLICY_REF_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_POLICY_REF
, (°), (vÆ))

	)

1680 
	#sk_X509_POLICY_REF_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_POLICY_REF
, (°), (vÆ))

	)

1681 
	#sk_X509_POLICY_REF_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_POLICY_REF
, (°), (vÆ))

	)

1682 
	#sk_X509_POLICY_REF_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_POLICY_REF
, (°), (i))

	)

1683 
	#sk_X509_POLICY_REF_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_POLICY_REF
, (°), (±r))

	)

1684 
	#sk_X509_POLICY_REF_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_POLICY_REF
, (°), (vÆ), (i))

	)

1685 
	#sk_X509_POLICY_REF_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_POLICY_REF
, (°), (cmp))

	)

1686 
	#sk_X509_POLICY_REF_dup
(
°
Ë
	`SKM_sk_dup
(
X509_POLICY_REF
, st)

	)

1687 
	#sk_X509_POLICY_REF_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_POLICY_REF
, (°), (‰ì_func))

	)

1688 
	#sk_X509_POLICY_REF_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_POLICY_REF
, (°))

	)

1689 
	#sk_X509_POLICY_REF_p›
(
°
Ë
	`SKM_sk_p›
(
X509_POLICY_REF
, (°))

	)

1690 
	#sk_X509_POLICY_REF_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_POLICY_REF
, (°))

	)

1691 
	#sk_X509_POLICY_REF_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_POLICY_REF
, (°))

	)

1693 
	#sk_X509_PURPOSE_√w
(
°
Ë
	`SKM_sk_√w
(
X509_PURPOSE
, (°))

	)

1694 
	#sk_X509_PURPOSE_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_PURPOSE
)

	)

1695 
	#sk_X509_PURPOSE_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_PURPOSE
, (°))

	)

1696 
	#sk_X509_PURPOSE_num
(
°
Ë
	`SKM_sk_num
(
X509_PURPOSE
, (°))

	)

1697 
	#sk_X509_PURPOSE_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_PURPOSE
, (°), (i))

	)

1698 
	#sk_X509_PURPOSE_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_PURPOSE
, (°), (i), (vÆ))

	)

1699 
	#sk_X509_PURPOSE_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_PURPOSE
, (°))

	)

1700 
	#sk_X509_PURPOSE_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_PURPOSE
, (°), (vÆ))

	)

1701 
	#sk_X509_PURPOSE_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_PURPOSE
, (°), (vÆ))

	)

1702 
	#sk_X509_PURPOSE_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_PURPOSE
, (°), (vÆ))

	)

1703 
	#sk_X509_PURPOSE_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_PURPOSE
, (°), (vÆ))

	)

1704 
	#sk_X509_PURPOSE_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_PURPOSE
, (°), (i))

	)

1705 
	#sk_X509_PURPOSE_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_PURPOSE
, (°), (±r))

	)

1706 
	#sk_X509_PURPOSE_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_PURPOSE
, (°), (vÆ), (i))

	)

1707 
	#sk_X509_PURPOSE_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_PURPOSE
, (°), (cmp))

	)

1708 
	#sk_X509_PURPOSE_dup
(
°
Ë
	`SKM_sk_dup
(
X509_PURPOSE
, st)

	)

1709 
	#sk_X509_PURPOSE_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_PURPOSE
, (°), (‰ì_func))

	)

1710 
	#sk_X509_PURPOSE_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_PURPOSE
, (°))

	)

1711 
	#sk_X509_PURPOSE_p›
(
°
Ë
	`SKM_sk_p›
(
X509_PURPOSE
, (°))

	)

1712 
	#sk_X509_PURPOSE_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_PURPOSE
, (°))

	)

1713 
	#sk_X509_PURPOSE_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_PURPOSE
, (°))

	)

1715 
	#sk_X509_REVOKED_√w
(
°
Ë
	`SKM_sk_√w
(
X509_REVOKED
, (°))

	)

1716 
	#sk_X509_REVOKED_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_REVOKED
)

	)

1717 
	#sk_X509_REVOKED_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_REVOKED
, (°))

	)

1718 
	#sk_X509_REVOKED_num
(
°
Ë
	`SKM_sk_num
(
X509_REVOKED
, (°))

	)

1719 
	#sk_X509_REVOKED_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_REVOKED
, (°), (i))

	)

1720 
	#sk_X509_REVOKED_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_REVOKED
, (°), (i), (vÆ))

	)

1721 
	#sk_X509_REVOKED_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_REVOKED
, (°))

	)

1722 
	#sk_X509_REVOKED_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_REVOKED
, (°), (vÆ))

	)

1723 
	#sk_X509_REVOKED_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_REVOKED
, (°), (vÆ))

	)

1724 
	#sk_X509_REVOKED_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_REVOKED
, (°), (vÆ))

	)

1725 
	#sk_X509_REVOKED_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_REVOKED
, (°), (vÆ))

	)

1726 
	#sk_X509_REVOKED_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_REVOKED
, (°), (i))

	)

1727 
	#sk_X509_REVOKED_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_REVOKED
, (°), (±r))

	)

1728 
	#sk_X509_REVOKED_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_REVOKED
, (°), (vÆ), (i))

	)

1729 
	#sk_X509_REVOKED_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_REVOKED
, (°), (cmp))

	)

1730 
	#sk_X509_REVOKED_dup
(
°
Ë
	`SKM_sk_dup
(
X509_REVOKED
, st)

	)

1731 
	#sk_X509_REVOKED_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_REVOKED
, (°), (‰ì_func))

	)

1732 
	#sk_X509_REVOKED_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_REVOKED
, (°))

	)

1733 
	#sk_X509_REVOKED_p›
(
°
Ë
	`SKM_sk_p›
(
X509_REVOKED
, (°))

	)

1734 
	#sk_X509_REVOKED_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_REVOKED
, (°))

	)

1735 
	#sk_X509_REVOKED_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_REVOKED
, (°))

	)

1737 
	#sk_X509_TRUST_√w
(
°
Ë
	`SKM_sk_√w
(
X509_TRUST
, (°))

	)

1738 
	#sk_X509_TRUST_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_TRUST
)

	)

1739 
	#sk_X509_TRUST_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_TRUST
, (°))

	)

1740 
	#sk_X509_TRUST_num
(
°
Ë
	`SKM_sk_num
(
X509_TRUST
, (°))

	)

1741 
	#sk_X509_TRUST_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_TRUST
, (°), (i))

	)

1742 
	#sk_X509_TRUST_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_TRUST
, (°), (i), (vÆ))

	)

1743 
	#sk_X509_TRUST_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_TRUST
, (°))

	)

1744 
	#sk_X509_TRUST_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_TRUST
, (°), (vÆ))

	)

1745 
	#sk_X509_TRUST_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_TRUST
, (°), (vÆ))

	)

1746 
	#sk_X509_TRUST_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_TRUST
, (°), (vÆ))

	)

1747 
	#sk_X509_TRUST_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_TRUST
, (°), (vÆ))

	)

1748 
	#sk_X509_TRUST_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_TRUST
, (°), (i))

	)

1749 
	#sk_X509_TRUST_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_TRUST
, (°), (±r))

	)

1750 
	#sk_X509_TRUST_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_TRUST
, (°), (vÆ), (i))

	)

1751 
	#sk_X509_TRUST_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_TRUST
, (°), (cmp))

	)

1752 
	#sk_X509_TRUST_dup
(
°
Ë
	`SKM_sk_dup
(
X509_TRUST
, st)

	)

1753 
	#sk_X509_TRUST_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_TRUST
, (°), (‰ì_func))

	)

1754 
	#sk_X509_TRUST_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_TRUST
, (°))

	)

1755 
	#sk_X509_TRUST_p›
(
°
Ë
	`SKM_sk_p›
(
X509_TRUST
, (°))

	)

1756 
	#sk_X509_TRUST_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_TRUST
, (°))

	)

1757 
	#sk_X509_TRUST_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_TRUST
, (°))

	)

1759 
	#sk_X509_VERIFY_PARAM_√w
(
°
Ë
	`SKM_sk_√w
(
X509_VERIFY_PARAM
, (°))

	)

1760 
	#sk_X509_VERIFY_PARAM_√w_nuŒ
(Ë
	`SKM_sk_√w_nuŒ
(
X509_VERIFY_PARAM
)

	)

1761 
	#sk_X509_VERIFY_PARAM_‰ì
(
°
Ë
	`SKM_sk_‰ì
(
X509_VERIFY_PARAM
, (°))

	)

1762 
	#sk_X509_VERIFY_PARAM_num
(
°
Ë
	`SKM_sk_num
(
X509_VERIFY_PARAM
, (°))

	)

1763 
	#sk_X509_VERIFY_PARAM_vÆue
(
°
, 
i
Ë
	`SKM_sk_vÆue
(
X509_VERIFY_PARAM
, (°), (i))

	)

1764 
	#sk_X509_VERIFY_PARAM_£t
(
°
, 
i
, 
vÆ
Ë
	`SKM_sk_£t
(
X509_VERIFY_PARAM
, (°), (i), (vÆ))

	)

1765 
	#sk_X509_VERIFY_PARAM_zîo
(
°
Ë
	`SKM_sk_zîo
(
X509_VERIFY_PARAM
, (°))

	)

1766 
	#sk_X509_VERIFY_PARAM_push
(
°
, 
vÆ
Ë
	`SKM_sk_push
(
X509_VERIFY_PARAM
, (°), (vÆ))

	)

1767 
	#sk_X509_VERIFY_PARAM_unshi·
(
°
, 
vÆ
Ë
	`SKM_sk_unshi·
(
X509_VERIFY_PARAM
, (°), (vÆ))

	)

1768 
	#sk_X509_VERIFY_PARAM_föd
(
°
, 
vÆ
Ë
	`SKM_sk_föd
(
X509_VERIFY_PARAM
, (°), (vÆ))

	)

1769 
	#sk_X509_VERIFY_PARAM_föd_ex
(
°
, 
vÆ
Ë
	`SKM_sk_föd_ex
(
X509_VERIFY_PARAM
, (°), (vÆ))

	)

1770 
	#sk_X509_VERIFY_PARAM_dñëe
(
°
, 
i
Ë
	`SKM_sk_dñëe
(
X509_VERIFY_PARAM
, (°), (i))

	)

1771 
	#sk_X509_VERIFY_PARAM_dñëe_±r
(
°
, 
±r
Ë
	`SKM_sk_dñëe_±r
(
X509_VERIFY_PARAM
, (°), (±r))

	)

1772 
	#sk_X509_VERIFY_PARAM_ö£π
(
°
, 
vÆ
, 
i
Ë
	`SKM_sk_ö£π
(
X509_VERIFY_PARAM
, (°), (vÆ), (i))

	)

1773 
	#sk_X509_VERIFY_PARAM_£t_cmp_func
(
°
, 
cmp
Ë
	`SKM_sk_£t_cmp_func
(
X509_VERIFY_PARAM
, (°), (cmp))

	)

1774 
	#sk_X509_VERIFY_PARAM_dup
(
°
Ë
	`SKM_sk_dup
(
X509_VERIFY_PARAM
, st)

	)

1775 
	#sk_X509_VERIFY_PARAM_p›_‰ì
(
°
, 
‰ì_func
Ë
	`SKM_sk_p›_‰ì
(
X509_VERIFY_PARAM
, (°), (‰ì_func))

	)

1776 
	#sk_X509_VERIFY_PARAM_shi·
(
°
Ë
	`SKM_sk_shi·
(
X509_VERIFY_PARAM
, (°))

	)

1777 
	#sk_X509_VERIFY_PARAM_p›
(
°
Ë
	`SKM_sk_p›
(
X509_VERIFY_PARAM
, (°))

	)

1778 
	#sk_X509_VERIFY_PARAM_s‹t
(
°
Ë
	`SKM_sk_s‹t
(
X509_VERIFY_PARAM
, (°))

	)

1779 
	#sk_X509_VERIFY_PARAM_is_s‹ãd
(
°
Ë
	`SKM_sk_is_s‹ãd
(
X509_VERIFY_PARAM
, (°))

	)

1781 
	#d2i_ASN1_SET_OF_ACCESS_DESCRIPTION
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1782 
	`SKM_ASN1_SET_OF_d2i
(
ACCESS_DESCRIPTION
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1783 
	#i2d_ASN1_SET_OF_ACCESS_DESCRIPTION
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1784 
	`SKM_ASN1_SET_OF_i2d
(
ACCESS_DESCRIPTION
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1785 
	#ASN1_£q_∑ck_ACCESS_DESCRIPTION
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1786 
	`SKM_ASN1_£q_∑ck
(
ACCESS_DESCRIPTION
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1787 
	#ASN1_£q_u≈ack_ACCESS_DESCRIPTION
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1788 
	`SKM_ASN1_£q_u≈ack
(
ACCESS_DESCRIPTION
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1790 
	#d2i_ASN1_SET_OF_ASN1_INTEGER
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1791 
	`SKM_ASN1_SET_OF_d2i
(
ASN1_INTEGER
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1792 
	#i2d_ASN1_SET_OF_ASN1_INTEGER
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1793 
	`SKM_ASN1_SET_OF_i2d
(
ASN1_INTEGER
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1794 
	#ASN1_£q_∑ck_ASN1_INTEGER
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1795 
	`SKM_ASN1_£q_∑ck
(
ASN1_INTEGER
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1796 
	#ASN1_£q_u≈ack_ASN1_INTEGER
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1797 
	`SKM_ASN1_£q_u≈ack
(
ASN1_INTEGER
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1799 
	#d2i_ASN1_SET_OF_ASN1_OBJECT
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1800 
	`SKM_ASN1_SET_OF_d2i
(
ASN1_OBJECT
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1801 
	#i2d_ASN1_SET_OF_ASN1_OBJECT
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1802 
	`SKM_ASN1_SET_OF_i2d
(
ASN1_OBJECT
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1803 
	#ASN1_£q_∑ck_ASN1_OBJECT
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1804 
	`SKM_ASN1_£q_∑ck
(
ASN1_OBJECT
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1805 
	#ASN1_£q_u≈ack_ASN1_OBJECT
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1806 
	`SKM_ASN1_£q_u≈ack
(
ASN1_OBJECT
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1808 
	#d2i_ASN1_SET_OF_ASN1_TYPE
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1809 
	`SKM_ASN1_SET_OF_d2i
(
ASN1_TYPE
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1810 
	#i2d_ASN1_SET_OF_ASN1_TYPE
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1811 
	`SKM_ASN1_SET_OF_i2d
(
ASN1_TYPE
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1812 
	#ASN1_£q_∑ck_ASN1_TYPE
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1813 
	`SKM_ASN1_£q_∑ck
(
ASN1_TYPE
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1814 
	#ASN1_£q_u≈ack_ASN1_TYPE
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1815 
	`SKM_ASN1_£q_u≈ack
(
ASN1_TYPE
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1817 
	#d2i_ASN1_SET_OF_DIST_POINT
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1818 
	`SKM_ASN1_SET_OF_d2i
(
DIST_POINT
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1819 
	#i2d_ASN1_SET_OF_DIST_POINT
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1820 
	`SKM_ASN1_SET_OF_i2d
(
DIST_POINT
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1821 
	#ASN1_£q_∑ck_DIST_POINT
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1822 
	`SKM_ASN1_£q_∑ck
(
DIST_POINT
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1823 
	#ASN1_£q_u≈ack_DIST_POINT
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1824 
	`SKM_ASN1_£q_u≈ack
(
DIST_POINT
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1826 
	#d2i_ASN1_SET_OF_GENERAL_NAME
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1827 
	`SKM_ASN1_SET_OF_d2i
(
GENERAL_NAME
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1828 
	#i2d_ASN1_SET_OF_GENERAL_NAME
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1829 
	`SKM_ASN1_SET_OF_i2d
(
GENERAL_NAME
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1830 
	#ASN1_£q_∑ck_GENERAL_NAME
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1831 
	`SKM_ASN1_£q_∑ck
(
GENERAL_NAME
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1832 
	#ASN1_£q_u≈ack_GENERAL_NAME
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1833 
	`SKM_ASN1_£q_u≈ack
(
GENERAL_NAME
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1835 
	#d2i_ASN1_SET_OF_OCSP_ONEREQ
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1836 
	`SKM_ASN1_SET_OF_d2i
(
OCSP_ONEREQ
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1837 
	#i2d_ASN1_SET_OF_OCSP_ONEREQ
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1838 
	`SKM_ASN1_SET_OF_i2d
(
OCSP_ONEREQ
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1839 
	#ASN1_£q_∑ck_OCSP_ONEREQ
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1840 
	`SKM_ASN1_£q_∑ck
(
OCSP_ONEREQ
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1841 
	#ASN1_£q_u≈ack_OCSP_ONEREQ
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1842 
	`SKM_ASN1_£q_u≈ack
(
OCSP_ONEREQ
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1844 
	#d2i_ASN1_SET_OF_OCSP_SINGLERESP
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1845 
	`SKM_ASN1_SET_OF_d2i
(
OCSP_SINGLERESP
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1846 
	#i2d_ASN1_SET_OF_OCSP_SINGLERESP
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1847 
	`SKM_ASN1_SET_OF_i2d
(
OCSP_SINGLERESP
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1848 
	#ASN1_£q_∑ck_OCSP_SINGLERESP
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1849 
	`SKM_ASN1_£q_∑ck
(
OCSP_SINGLERESP
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1850 
	#ASN1_£q_u≈ack_OCSP_SINGLERESP
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1851 
	`SKM_ASN1_£q_u≈ack
(
OCSP_SINGLERESP
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1853 
	#d2i_ASN1_SET_OF_PKCS12_SAFEBAG
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1854 
	`SKM_ASN1_SET_OF_d2i
(
PKCS12_SAFEBAG
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1855 
	#i2d_ASN1_SET_OF_PKCS12_SAFEBAG
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1856 
	`SKM_ASN1_SET_OF_i2d
(
PKCS12_SAFEBAG
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1857 
	#ASN1_£q_∑ck_PKCS12_SAFEBAG
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1858 
	`SKM_ASN1_£q_∑ck
(
PKCS12_SAFEBAG
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1859 
	#ASN1_£q_u≈ack_PKCS12_SAFEBAG
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1860 
	`SKM_ASN1_£q_u≈ack
(
PKCS12_SAFEBAG
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1862 
	#d2i_ASN1_SET_OF_PKCS7
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1863 
	`SKM_ASN1_SET_OF_d2i
(
PKCS7
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1864 
	#i2d_ASN1_SET_OF_PKCS7
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1865 
	`SKM_ASN1_SET_OF_i2d
(
PKCS7
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1866 
	#ASN1_£q_∑ck_PKCS7
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1867 
	`SKM_ASN1_£q_∑ck
(
PKCS7
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1868 
	#ASN1_£q_u≈ack_PKCS7
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1869 
	`SKM_ASN1_£q_u≈ack
(
PKCS7
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1871 
	#d2i_ASN1_SET_OF_PKCS7_RECIP_INFO
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1872 
	`SKM_ASN1_SET_OF_d2i
(
PKCS7_RECIP_INFO
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1873 
	#i2d_ASN1_SET_OF_PKCS7_RECIP_INFO
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1874 
	`SKM_ASN1_SET_OF_i2d
(
PKCS7_RECIP_INFO
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1875 
	#ASN1_£q_∑ck_PKCS7_RECIP_INFO
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1876 
	`SKM_ASN1_£q_∑ck
(
PKCS7_RECIP_INFO
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1877 
	#ASN1_£q_u≈ack_PKCS7_RECIP_INFO
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1878 
	`SKM_ASN1_£q_u≈ack
(
PKCS7_RECIP_INFO
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1880 
	#d2i_ASN1_SET_OF_PKCS7_SIGNER_INFO
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1881 
	`SKM_ASN1_SET_OF_d2i
(
PKCS7_SIGNER_INFO
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1882 
	#i2d_ASN1_SET_OF_PKCS7_SIGNER_INFO
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1883 
	`SKM_ASN1_SET_OF_i2d
(
PKCS7_SIGNER_INFO
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1884 
	#ASN1_£q_∑ck_PKCS7_SIGNER_INFO
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1885 
	`SKM_ASN1_£q_∑ck
(
PKCS7_SIGNER_INFO
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1886 
	#ASN1_£q_u≈ack_PKCS7_SIGNER_INFO
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1887 
	`SKM_ASN1_£q_u≈ack
(
PKCS7_SIGNER_INFO
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1889 
	#d2i_ASN1_SET_OF_POLICYINFO
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1890 
	`SKM_ASN1_SET_OF_d2i
(
POLICYINFO
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1891 
	#i2d_ASN1_SET_OF_POLICYINFO
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1892 
	`SKM_ASN1_SET_OF_i2d
(
POLICYINFO
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1893 
	#ASN1_£q_∑ck_POLICYINFO
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1894 
	`SKM_ASN1_£q_∑ck
(
POLICYINFO
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1895 
	#ASN1_£q_u≈ack_POLICYINFO
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1896 
	`SKM_ASN1_£q_u≈ack
(
POLICYINFO
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1898 
	#d2i_ASN1_SET_OF_POLICYQUALINFO
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1899 
	`SKM_ASN1_SET_OF_d2i
(
POLICYQUALINFO
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1900 
	#i2d_ASN1_SET_OF_POLICYQUALINFO
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1901 
	`SKM_ASN1_SET_OF_i2d
(
POLICYQUALINFO
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1902 
	#ASN1_£q_∑ck_POLICYQUALINFO
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1903 
	`SKM_ASN1_£q_∑ck
(
POLICYQUALINFO
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1904 
	#ASN1_£q_u≈ack_POLICYQUALINFO
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1905 
	`SKM_ASN1_£q_u≈ack
(
POLICYQUALINFO
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1907 
	#d2i_ASN1_SET_OF_SXNETID
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1908 
	`SKM_ASN1_SET_OF_d2i
(
SXNETID
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1909 
	#i2d_ASN1_SET_OF_SXNETID
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1910 
	`SKM_ASN1_SET_OF_i2d
(
SXNETID
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1911 
	#ASN1_£q_∑ck_SXNETID
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1912 
	`SKM_ASN1_£q_∑ck
(
SXNETID
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1913 
	#ASN1_£q_u≈ack_SXNETID
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1914 
	`SKM_ASN1_£q_u≈ack
(
SXNETID
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1916 
	#d2i_ASN1_SET_OF_X509
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1917 
	`SKM_ASN1_SET_OF_d2i
(
X509
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1918 
	#i2d_ASN1_SET_OF_X509
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1919 
	`SKM_ASN1_SET_OF_i2d
(
X509
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1920 
	#ASN1_£q_∑ck_X509
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1921 
	`SKM_ASN1_£q_∑ck
(
X509
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1922 
	#ASN1_£q_u≈ack_X509
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1923 
	`SKM_ASN1_£q_u≈ack
(
X509
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1925 
	#d2i_ASN1_SET_OF_X509_ALGOR
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1926 
	`SKM_ASN1_SET_OF_d2i
(
X509_ALGOR
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1927 
	#i2d_ASN1_SET_OF_X509_ALGOR
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1928 
	`SKM_ASN1_SET_OF_i2d
(
X509_ALGOR
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1929 
	#ASN1_£q_∑ck_X509_ALGOR
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1930 
	`SKM_ASN1_£q_∑ck
(
X509_ALGOR
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1931 
	#ASN1_£q_u≈ack_X509_ALGOR
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1932 
	`SKM_ASN1_£q_u≈ack
(
X509_ALGOR
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1934 
	#d2i_ASN1_SET_OF_X509_ATTRIBUTE
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1935 
	`SKM_ASN1_SET_OF_d2i
(
X509_ATTRIBUTE
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1936 
	#i2d_ASN1_SET_OF_X509_ATTRIBUTE
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1937 
	`SKM_ASN1_SET_OF_i2d
(
X509_ATTRIBUTE
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1938 
	#ASN1_£q_∑ck_X509_ATTRIBUTE
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1939 
	`SKM_ASN1_£q_∑ck
(
X509_ATTRIBUTE
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1940 
	#ASN1_£q_u≈ack_X509_ATTRIBUTE
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1941 
	`SKM_ASN1_£q_u≈ack
(
X509_ATTRIBUTE
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1943 
	#d2i_ASN1_SET_OF_X509_CRL
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1944 
	`SKM_ASN1_SET_OF_d2i
(
X509_CRL
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1945 
	#i2d_ASN1_SET_OF_X509_CRL
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1946 
	`SKM_ASN1_SET_OF_i2d
(
X509_CRL
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1947 
	#ASN1_£q_∑ck_X509_CRL
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1948 
	`SKM_ASN1_£q_∑ck
(
X509_CRL
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1949 
	#ASN1_£q_u≈ack_X509_CRL
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1950 
	`SKM_ASN1_£q_u≈ack
(
X509_CRL
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1952 
	#d2i_ASN1_SET_OF_X509_EXTENSION
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1953 
	`SKM_ASN1_SET_OF_d2i
(
X509_EXTENSION
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1954 
	#i2d_ASN1_SET_OF_X509_EXTENSION
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1955 
	`SKM_ASN1_SET_OF_i2d
(
X509_EXTENSION
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1956 
	#ASN1_£q_∑ck_X509_EXTENSION
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1957 
	`SKM_ASN1_£q_∑ck
(
X509_EXTENSION
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1958 
	#ASN1_£q_u≈ack_X509_EXTENSION
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1959 
	`SKM_ASN1_£q_u≈ack
(
X509_EXTENSION
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1961 
	#d2i_ASN1_SET_OF_X509_NAME_ENTRY
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1962 
	`SKM_ASN1_SET_OF_d2i
(
X509_NAME_ENTRY
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1963 
	#i2d_ASN1_SET_OF_X509_NAME_ENTRY
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1964 
	`SKM_ASN1_SET_OF_i2d
(
X509_NAME_ENTRY
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1965 
	#ASN1_£q_∑ck_X509_NAME_ENTRY
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1966 
	`SKM_ASN1_£q_∑ck
(
X509_NAME_ENTRY
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1967 
	#ASN1_£q_u≈ack_X509_NAME_ENTRY
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1968 
	`SKM_ASN1_£q_u≈ack
(
X509_NAME_ENTRY
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1970 
	#d2i_ASN1_SET_OF_X509_REVOKED
(
°
, 
µ
, 
Àngth
, 
d2i_func
, 
‰ì_func
, 
ex_èg
, 
ex_˛ass
) \

1971 
	`SKM_ASN1_SET_OF_d2i
(
X509_REVOKED
, (
°
), (
µ
), (
Àngth
), (
d2i_func
), (
‰ì_func
), (
ex_èg
), (
ex_˛ass
))

	)

1972 
	#i2d_ASN1_SET_OF_X509_REVOKED
(
°
, 
µ
, 
i2d_func
, 
ex_èg
, 
ex_˛ass
, 
is_£t
) \

1973 
	`SKM_ASN1_SET_OF_i2d
(
X509_REVOKED
, (
°
), (
µ
), (
i2d_func
), (
ex_èg
), (
ex_˛ass
), (
is_£t
))

	)

1974 
	#ASN1_£q_∑ck_X509_REVOKED
(
°
, 
i2d_func
, 
buf
, 
Àn
) \

1975 
	`SKM_ASN1_£q_∑ck
(
X509_REVOKED
, (
°
), (
i2d_func
), (
buf
), (
Àn
))

	)

1976 
	#ASN1_£q_u≈ack_X509_REVOKED
(
buf
, 
Àn
, 
d2i_func
, 
‰ì_func
) \

1977 
	`SKM_ASN1_£q_u≈ack
(
X509_REVOKED
, (
buf
), (
Àn
), (
d2i_func
), (
‰ì_func
))

	)

1979 
	#PKCS12_de¸y±_d2i_PKCS12_SAFEBAG
(
Æg‹
, 
d2i_func
, 
‰ì_func
, 
∑ss
, 
∑s¶í
, 
o˘
, 
£q
) \

1980 
	`SKM_PKCS12_de¸y±_d2i
(
PKCS12_SAFEBAG
, (
Æg‹
), (
d2i_func
), (
‰ì_func
), (
∑ss
), (
∑s¶í
), (
o˘
), (
£q
))

	)

1982 
	#PKCS12_de¸y±_d2i_PKCS7
(
Æg‹
, 
d2i_func
, 
‰ì_func
, 
∑ss
, 
∑s¶í
, 
o˘
, 
£q
) \

1983 
	`SKM_PKCS12_de¸y±_d2i
(
PKCS7
, (
Æg‹
), (
d2i_func
), (
‰ì_func
), (
∑ss
), (
∑s¶í
), (
o˘
), (
£q
))

	)

	@/usr/include/openssl/sha.h

59 #i‚de‡
HEADER_SHA_H


60 
	#HEADER_SHA_H


	)

62 
	~<AvaûabûôyMa¸os.h
>

64 
	~<›ís¶/e_os2.h
>

65 
	~<°ddef.h
>

67 #ifde‡ 
__˝lu•lus


71 #i‡
deföed
(
OPENSSL_NO_SHA
Ë|| (deföed(
OPENSSL_NO_SHA0
Ë&& deföed(
OPENSSL_NO_SHA1
))

72 #îr‹ 
SHA
 
is
 
dißbÀd
.

75 #i‡
deföed
(
OPENSSL_FIPS
)

76 
	#FIPS_SHA_SIZE_T
 
size_t


	)

86 #i‡
deföed
(
OPENSSL_SYS_WIN16
Ë|| deföed(
__LP32__
)

87 
	#SHA_LONG
 

	)

88 #ñi‡
deföed
(
OPENSSL_SYS_CRAY
Ë|| deföed(
__ILP64__
)

89 
	#SHA_LONG
 

	)

90 
	#SHA_LONG_LOG2
 3

	)

92 
	#SHA_LONG
 

	)

95 
	#SHA_LBLOCK
 16

	)

96 
	#SHA_CBLOCK
 (
SHA_LBLOCK
*4Ë

	)

99 
	#SHA_LAST_BLOCK
 (
SHA_CBLOCK
-8)

	)

100 
	#SHA_DIGEST_LENGTH
 20

	)

102 
	sSHA°©e_°


104 
SHA_LONG
 
h0
,
h1
,
h2
,
h3
,
h4
;

105 
SHA_LONG
 
Nl
,
Nh
;

106 
SHA_LONG
 
d©a
[
SHA_LBLOCK
];

107 
num
;

108 } 
	tSHA_CTX
;

110 #i‚de‡
OPENSSL_NO_SHA0


111 #ifde‡
OPENSSL_FIPS


112 
¥iv©e_SHA_Inô
(
SHA_CTX
 *
c
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

114 
SHA_Inô
(
SHA_CTX
 *
c
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

115 
SHA_Upd©e
(
SHA_CTX
 *
c
, c⁄° *
d©a
, 
size_t
 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

116 
SHA_FöÆ
(*
md
, 
SHA_CTX
 *
c
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

117 *
SHA
(c⁄° *
d
, 
size_t
 
n
, *
md
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

118 
SHA_Tønsf‹m
(
SHA_CTX
 *
c
, c⁄° *
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

120 #i‚de‡
OPENSSL_NO_SHA1


121 
SHA1_Inô
(
SHA_CTX
 *
c
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

122 
SHA1_Upd©e
(
SHA_CTX
 *
c
, c⁄° *
d©a
, 
size_t
 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

123 
SHA1_FöÆ
(*
md
, 
SHA_CTX
 *
c
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

124 *
SHA1
(c⁄° *
d
, 
size_t
 
n
, *
md
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

125 
SHA1_Tønsf‹m
(
SHA_CTX
 *
c
, c⁄° *
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

128 
	#SHA256_CBLOCK
 (
SHA_LBLOCK
*4Ë

	)

131 
	#SHA224_DIGEST_LENGTH
 28

	)

132 
	#SHA256_DIGEST_LENGTH
 32

	)

134 
	sSHA256°©e_°


136 
SHA_LONG
 
h
[8];

137 
SHA_LONG
 
Nl
,
Nh
;

138 
SHA_LONG
 
d©a
[
SHA_LBLOCK
];

139 
num
,
md_Àn
;

140 } 
	tSHA256_CTX
;

142 #i‚de‡
OPENSSL_NO_SHA256


143 
SHA224_Inô
(
SHA256_CTX
 *
c
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

144 
SHA224_Upd©e
(
SHA256_CTX
 *
c
, c⁄° *
d©a
, 
size_t
 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

145 
SHA224_FöÆ
(*
md
, 
SHA256_CTX
 *
c
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

146 *
SHA224
(c⁄° *
d
, 
size_t
 
n
,*
md
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

147 
SHA256_Inô
(
SHA256_CTX
 *
c
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

148 
SHA256_Upd©e
(
SHA256_CTX
 *
c
, c⁄° *
d©a
, 
size_t
 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

149 
SHA256_FöÆ
(*
md
, 
SHA256_CTX
 *
c
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

150 *
SHA256
(c⁄° *
d
, 
size_t
 
n
,*
md
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

151 
SHA256_Tønsf‹m
(
SHA256_CTX
 *
c
, c⁄° *
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

154 
	#SHA384_DIGEST_LENGTH
 48

	)

155 
	#SHA512_DIGEST_LENGTH
 64

	)

157 #i‚de‡
OPENSSL_NO_SHA512


163 
	#SHA512_CBLOCK
 (
SHA_LBLOCK
*8Ë

	)

166 #i‡(
deföed
(
_WIN32
Ë|| deföed(
_WIN64
)Ë&& !deföed(
__MINGW32__
)

167 
	#SHA_LONG64
 
__öt64


	)

168 
	#U64
(
C
ËC##
UI64


	)

169 #ñi‡
deföed
(
__¨ch64__
)

170 
	#SHA_LONG64
 

	)

171 
	#U64
(
C
ËC##
UL


	)

173 
	#SHA_LONG64
 

	)

174 
	#U64
(
C
ËC##
ULL


	)

177 
	sSHA512°©e_°


179 
SHA_LONG64
 
h
[8];

180 
SHA_LONG64
 
Nl
,
Nh
;

182 
SHA_LONG64
 
d
[
SHA_LBLOCK
];

183 
p
[
SHA512_CBLOCK
];

184 } 
u
;

185 
num
,
md_Àn
;

186 } 
	tSHA512_CTX
;

189 #i‚de‡
OPENSSL_NO_SHA512


190 
SHA384_Inô
(
SHA512_CTX
 *
c
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

191 
SHA384_Upd©e
(
SHA512_CTX
 *
c
, c⁄° *
d©a
, 
size_t
 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

192 
SHA384_FöÆ
(*
md
, 
SHA512_CTX
 *
c
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

193 *
SHA384
(c⁄° *
d
, 
size_t
 
n
,*
md
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

194 
SHA512_Inô
(
SHA512_CTX
 *
c
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

195 
SHA512_Upd©e
(
SHA512_CTX
 *
c
, c⁄° *
d©a
, 
size_t
 
Àn
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

196 
SHA512_FöÆ
(*
md
, 
SHA512_CTX
 *
c
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

197 *
SHA512
(c⁄° *
d
, 
size_t
 
n
,*
md
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

198 
SHA512_Tønsf‹m
(
SHA512_CTX
 *
c
, c⁄° *
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

201 #ifde‡ 
__˝lu•lus


	@/usr/include/openssl/x509_vfy.h

59 #i‚de‡
HEADER_X509_H


60 
	~<›ís¶/x509.h
>

65 #i‚de‡
HEADER_X509_VFY_H


66 
	#HEADER_X509_VFY_H


	)

68 
	~<AvaûabûôyMa¸os.h
>

70 
	~<›ís¶/›ís¶c⁄f.h
>

71 #i‚de‡
OPENSSL_NO_LHASH


72 
	~<›ís¶/lhash.h
>

74 
	~<›ís¶/bio.h
>

75 
	~<›ís¶/¸y±o.h
>

76 
	~<›ís¶/symhacks.h
>

78 #ifde‡ 
__˝lu•lus


83 
	sx509_hash_dú_°


85 
num_dús
;

86 **
dús
;

87 *
dús_ty≥
;

88 
num_dús_Ælo˚d
;

89 } 
	tX509_HASH_DIR_CTX
;

91 
	sx509_fûe_°


93 
num_∑ths
;

94 
num_Ælo˚d
;

95 **
∑ths
;

96 *
∑th_ty≥
;

97 } 
	tX509_CERT_FILE_CTX
;

117 
	#X509_LU_RETRY
 -1

	)

118 
	#X509_LU_FAIL
 0

	)

119 
	#X509_LU_X509
 1

	)

120 
	#X509_LU_CRL
 2

	)

121 
	#X509_LU_PKEY
 3

	)

123 
	sx509_obje˘_°


126 
ty≥
;

128 *
±r
;

129 
X509
 *
x509
;

130 
X509_CRL
 *
¸l
;

131 
EVP_PKEY
 *
pkey
;

132 } 
d©a
;

133 } 
	tX509_OBJECT
;

135 
x509_lookup_°
 
	tX509_LOOKUP
;

137 
DECLARE_STACK_OF
(
X509_LOOKUP
)

138 
DECLARE_STACK_OF
(
X509_OBJECT
)

141 
	sx509_lookup_mëhod_°


143 c⁄° *
«me
;

144 (*
√w_ôem
)(
X509_LOOKUP
 *
˘x
);

145 (*
‰ì
)(
X509_LOOKUP
 *
˘x
);

146 (*
öô
)(
X509_LOOKUP
 *
˘x
);

147 (*
shutdown
)(
X509_LOOKUP
 *
˘x
);

148 (*
˘æ
)(
X509_LOOKUP
 *
˘x
,
cmd
,c⁄° *
¨gc
,
¨gl
,

149 **
ªt
);

150 (*
gë_by_subje˘
)(
X509_LOOKUP
 *
˘x
,
ty≥
,
X509_NAME
 *
«me
,

151 
X509_OBJECT
 *
ªt
);

152 (*
gë_by_issuî_£rül
)(
X509_LOOKUP
 *
˘x
,
ty≥
,
X509_NAME
 *
«me
,

153 
ASN1_INTEGER
 *
£rül
,
X509_OBJECT
 *
ªt
);

154 (*
gë_by_fögî¥öt
)(
X509_LOOKUP
 *
˘x
,
ty≥
,

155 *
byãs
,
Àn
,

156 
X509_OBJECT
 *
ªt
);

157 (*
gë_by_Æüs
)(
X509_LOOKUP
 *
˘x
,
ty≥
,*
°r
,
Àn
,

158 
X509_OBJECT
 *
ªt
);

159 } 
	tX509_LOOKUP_METHOD
;

166 
	sX509_VERIFY_PARAM_°


168 *
«me
;

169 
time_t
 
check_time
;

170 
öh_Êags
;

171 
Êags
;

172 
puΩo£
;

173 
åu°
;

174 
dïth
;

175 
STACK_OF
(
ASN1_OBJECT
Ë*
pﬁicõs
;

176 } 
	tX509_VERIFY_PARAM
;

178 
DECLARE_STACK_OF
(
X509_VERIFY_PARAM
)

183 
	sx509_°‹e_°


186 
ˇche
;

187 
STACK_OF
(
X509_OBJECT
Ë*
objs
;

190 
STACK_OF
(
X509_LOOKUP
Ë*
gë_˚π_mëhods
;

192 
X509_VERIFY_PARAM
 *
∑øm
;

195 (*
vîify
)(
X509_STORE_CTX
 *
˘x
);

196 (*
vîify_cb
)(
ok
,
X509_STORE_CTX
 *
˘x
);

197 (*
gë_issuî
)(
X509
 **
issuî
, 
X509_STORE_CTX
 *
˘x
, X509 *
x
);

198 (*
check_issued
)(
X509_STORE_CTX
 *
˘x
, 
X509
 *
x
, X509 *
issuî
);

199 (*
check_ªvoˇti⁄
)(
X509_STORE_CTX
 *
˘x
);

200 (*
gë_¸l
)(
X509_STORE_CTX
 *
˘x
, 
X509_CRL
 **
¸l
, 
X509
 *
x
);

201 (*
check_¸l
)(
X509_STORE_CTX
 *
˘x
, 
X509_CRL
 *
¸l
);

202 (*
˚π_¸l
)(
X509_STORE_CTX
 *
˘x
, 
X509_CRL
 *
¸l
, 
X509
 *
x
);

203 (*
˛ónup
)(
X509_STORE_CTX
 *
˘x
);

205 
CRYPTO_EX_DATA
 
ex_d©a
;

206 
ª„ªn˚s
;

209 
X509_STORE_£t_dïth
(
X509_STORE
 *
°‹e
, 
dïth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

211 
	#X509_STORE_£t_vîify_cb_func
(
˘x
,
func
Ë((˘x)->
vîify_cb
=(func))

	)

212 
	#X509_STORE_£t_vîify_func
(
˘x
,
func
Ë((˘x)->
vîify
=(func))

	)

215 
	sx509_lookup_°


217 
öô
;

218 
skù
;

219 
X509_LOOKUP_METHOD
 *
mëhod
;

220 *
mëhod_d©a
;

222 
X509_STORE
 *
°‹e_˘x
;

228 
	sx509_°‹e_˘x_°


230 
X509_STORE
 *
˘x
;

231 
cuºít_mëhod
;

234 
X509
 *
˚π
;

235 
STACK_OF
(
X509
Ë*
u¡ru°ed
;

236 
STACK_OF
(
X509_CRL
Ë*
¸ls
;

238 
X509_VERIFY_PARAM
 *
∑øm
;

239 *
Ÿhî_˘x
;

242 (*
vîify
)(
X509_STORE_CTX
 *
˘x
);

243 (*
vîify_cb
)(
ok
,
X509_STORE_CTX
 *
˘x
);

244 (*
gë_issuî
)(
X509
 **
issuî
, 
X509_STORE_CTX
 *
˘x
, X509 *
x
);

245 (*
check_issued
)(
X509_STORE_CTX
 *
˘x
, 
X509
 *
x
, X509 *
issuî
);

246 (*
check_ªvoˇti⁄
)(
X509_STORE_CTX
 *
˘x
);

247 (*
gë_¸l
)(
X509_STORE_CTX
 *
˘x
, 
X509_CRL
 **
¸l
, 
X509
 *
x
);

248 (*
check_¸l
)(
X509_STORE_CTX
 *
˘x
, 
X509_CRL
 *
¸l
);

249 (*
˚π_¸l
)(
X509_STORE_CTX
 *
˘x
, 
X509_CRL
 *
¸l
, 
X509
 *
x
);

250 (*
check_pﬁicy
)(
X509_STORE_CTX
 *
˘x
);

251 (*
˛ónup
)(
X509_STORE_CTX
 *
˘x
);

254 
vÆid
;

255 
œ°_u¡ru°ed
;

256 
STACK_OF
(
X509
Ë*
chaö
;

257 
X509_POLICY_TREE
 *
åì
;

259 
ex∂icô_pﬁicy
;

262 
îr‹_dïth
;

263 
îr‹
;

264 
X509
 *
cuºít_˚π
;

265 
X509
 *
cuºít_issuî
;

266 
X509_CRL
 *
cuºít_¸l
;

268 
CRYPTO_EX_DATA
 
ex_d©a
;

271 
X509_STORE_CTX_£t_dïth
(
X509_STORE_CTX
 *
˘x
, 
dïth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

273 
	#X509_STORE_CTX_£t_≠p_d©a
(
˘x
,
d©a
) \

274 
	`X509_STORE_CTX_£t_ex_d©a
(
˘x
,0,
d©a
)

	)

275 
	#X509_STORE_CTX_gë_≠p_d©a
(
˘x
) \

276 
	`X509_STORE_CTX_gë_ex_d©a
(
˘x
,0)

	)

278 
	#X509_L_FILE_LOAD
 1

	)

279 
	#X509_L_ADD_DIR
 2

	)

281 
	#X509_LOOKUP_lﬂd_fûe
(
x
,
«me
,
ty≥
) \

282 
	`X509_LOOKUP_˘æ
((
x
),
X509_L_FILE_LOAD
,(
«me
),()(
ty≥
),
NULL
)

	)

284 
	#X509_LOOKUP_add_dú
(
x
,
«me
,
ty≥
) \

285 
	`X509_LOOKUP_˘æ
((
x
),
X509_L_ADD_DIR
,(
«me
),()(
ty≥
),
NULL
)

	)

287 
	#X509_V_OK
 0

	)

290 
	#X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT
 2

	)

291 
	#X509_V_ERR_UNABLE_TO_GET_CRL
 3

	)

292 
	#X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE
 4

	)

293 
	#X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE
 5

	)

294 
	#X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY
 6

	)

295 
	#X509_V_ERR_CERT_SIGNATURE_FAILURE
 7

	)

296 
	#X509_V_ERR_CRL_SIGNATURE_FAILURE
 8

	)

297 
	#X509_V_ERR_CERT_NOT_YET_VALID
 9

	)

298 
	#X509_V_ERR_CERT_HAS_EXPIRED
 10

	)

299 
	#X509_V_ERR_CRL_NOT_YET_VALID
 11

	)

300 
	#X509_V_ERR_CRL_HAS_EXPIRED
 12

	)

301 
	#X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD
 13

	)

302 
	#X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD
 14

	)

303 
	#X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD
 15

	)

304 
	#X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD
 16

	)

305 
	#X509_V_ERR_OUT_OF_MEM
 17

	)

306 
	#X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT
 18

	)

307 
	#X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN
 19

	)

308 
	#X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY
 20

	)

309 
	#X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE
 21

	)

310 
	#X509_V_ERR_CERT_CHAIN_TOO_LONG
 22

	)

311 
	#X509_V_ERR_CERT_REVOKED
 23

	)

312 
	#X509_V_ERR_INVALID_CA
 24

	)

313 
	#X509_V_ERR_PATH_LENGTH_EXCEEDED
 25

	)

314 
	#X509_V_ERR_INVALID_PURPOSE
 26

	)

315 
	#X509_V_ERR_CERT_UNTRUSTED
 27

	)

316 
	#X509_V_ERR_CERT_REJECTED
 28

	)

318 
	#X509_V_ERR_SUBJECT_ISSUER_MISMATCH
 29

	)

319 
	#X509_V_ERR_AKID_SKID_MISMATCH
 30

	)

320 
	#X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH
 31

	)

321 
	#X509_V_ERR_KEYUSAGE_NO_CERTSIGN
 32

	)

323 
	#X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER
 33

	)

324 
	#X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION
 34

	)

325 
	#X509_V_ERR_KEYUSAGE_NO_CRL_SIGN
 35

	)

326 
	#X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION
 36

	)

327 
	#X509_V_ERR_INVALID_NON_CA
 37

	)

328 
	#X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED
 38

	)

329 
	#X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE
 39

	)

330 
	#X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED
 40

	)

332 
	#X509_V_ERR_INVALID_EXTENSION
 41

	)

333 
	#X509_V_ERR_INVALID_POLICY_EXTENSION
 42

	)

334 
	#X509_V_ERR_NO_EXPLICIT_POLICY
 43

	)

336 
	#X509_V_ERR_UNNESTED_RESOURCE
 44

	)

339 
	#X509_V_ERR_APPLICATION_VERIFICATION
 50

	)

344 
	#X509_V_FLAG_CB_ISSUER_CHECK
 0x1

	)

346 
	#X509_V_FLAG_USE_CHECK_TIME
 0x2

	)

348 
	#X509_V_FLAG_CRL_CHECK
 0x4

	)

350 
	#X509_V_FLAG_CRL_CHECK_ALL
 0x8

	)

352 
	#X509_V_FLAG_IGNORE_CRITICAL
 0x10

	)

354 
	#X509_V_FLAG_X509_STRICT
 0x20

	)

356 
	#X509_V_FLAG_ALLOW_PROXY_CERTS
 0x40

	)

358 
	#X509_V_FLAG_POLICY_CHECK
 0x80

	)

360 
	#X509_V_FLAG_EXPLICIT_POLICY
 0x100

	)

362 
	#X509_V_FLAG_INHIBIT_ANY
 0x200

	)

364 
	#X509_V_FLAG_INHIBIT_MAP
 0x400

	)

366 
	#X509_V_FLAG_NOTIFY_POLICY
 0x800

	)

369 
	#X509_V_FLAG_CHECK_SS_SIGNATURE
 0x4000

	)

371 
	#X509_VP_FLAG_DEFAULT
 0x1

	)

372 
	#X509_VP_FLAG_OVERWRITE
 0x2

	)

373 
	#X509_VP_FLAG_RESET_FLAGS
 0x4

	)

374 
	#X509_VP_FLAG_LOCKED
 0x8

	)

375 
	#X509_VP_FLAG_ONCE
 0x10

	)

378 
	#X509_V_FLAG_POLICY_MASK
 (
X509_V_FLAG_POLICY_CHECK
 \

379 | 
X509_V_FLAG_EXPLICIT_POLICY
 \

380 | 
X509_V_FLAG_INHIBIT_ANY
 \

381 | 
X509_V_FLAG_INHIBIT_MAP
)

	)

383 
X509_OBJECT_idx_by_subje˘
(
STACK_OF
(
X509_OBJECT
Ë*
h
, 
ty≥
,

384 
X509_NAME
 *
«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

385 
X509_OBJECT
 *
X509_OBJECT_ªåõve_by_subje˘
(
STACK_OF
(X509_OBJECTË*
h
,
ty≥
,
X509_NAME
 *
«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

386 
X509_OBJECT
 *
X509_OBJECT_ªåõve_m©ch
(
STACK_OF
(X509_OBJECTË*
h
, X509_OBJECT *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

387 
X509_OBJECT_up_ªf_cou¡
(
X509_OBJECT
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

388 
X509_OBJECT_‰ì_c⁄ã¡s
(
X509_OBJECT
 *
a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

389 
X509_STORE
 *
X509_STORE_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

390 
X509_STORE_‰ì
(
X509_STORE
 *
v
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

392 
X509_STORE_£t_Êags
(
X509_STORE
 *
˘x
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

393 
X509_STORE_£t_puΩo£
(
X509_STORE
 *
˘x
, 
puΩo£
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

394 
X509_STORE_£t_åu°
(
X509_STORE
 *
˘x
, 
åu°
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

395 
X509_STORE_£t1_∑øm
(
X509_STORE
 *
˘x
, 
X509_VERIFY_PARAM
 *
pm
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

397 
X509_STORE_CTX
 *
X509_STORE_CTX_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

399 
X509_STORE_CTX_gë1_issuî
(
X509
 **
issuî
, 
X509_STORE_CTX
 *
˘x
, X509 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

401 
X509_STORE_CTX_‰ì
(
X509_STORE_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

402 
X509_STORE_CTX_öô
(
X509_STORE_CTX
 *
˘x
, 
X509_STORE
 *
°‹e
,

403 
X509
 *
x509
, 
STACK_OF
(X509Ë*
chaö
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

404 
X509_STORE_CTX_åu°ed_°ack
(
X509_STORE_CTX
 *
˘x
, 
STACK_OF
(
X509
Ë*
sk
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

405 
X509_STORE_CTX_˛ónup
(
X509_STORE_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

407 
X509_LOOKUP
 *
X509_STORE_add_lookup
(
X509_STORE
 *
v
, 
X509_LOOKUP_METHOD
 *
m
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

409 
X509_LOOKUP_METHOD
 *
X509_LOOKUP_hash_dú
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

410 
X509_LOOKUP_METHOD
 *
X509_LOOKUP_fûe
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

412 
X509_STORE_add_˚π
(
X509_STORE
 *
˘x
, 
X509
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

413 
X509_STORE_add_¸l
(
X509_STORE
 *
˘x
, 
X509_CRL
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

415 
X509_STORE_gë_by_subje˘
(
X509_STORE_CTX
 *
vs
,
ty≥
,
X509_NAME
 *
«me
,

416 
X509_OBJECT
 *
ªt
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

418 
X509_LOOKUP_˘æ
(
X509_LOOKUP
 *
˘x
, 
cmd
, c⁄° *
¨gc
,

419 
¨gl
, **
ªt
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

421 #i‚de‡
OPENSSL_NO_STDIO


422 
X509_lﬂd_˚π_fûe
(
X509_LOOKUP
 *
˘x
, c⁄° *
fûe
, 
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

423 
X509_lﬂd_¸l_fûe
(
X509_LOOKUP
 *
˘x
, c⁄° *
fûe
, 
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

424 
X509_lﬂd_˚π_¸l_fûe
(
X509_LOOKUP
 *
˘x
, c⁄° *
fûe
, 
ty≥
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

428 
X509_LOOKUP
 *
X509_LOOKUP_√w
(
X509_LOOKUP_METHOD
 *
mëhod
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

429 
X509_LOOKUP_‰ì
(
X509_LOOKUP
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

430 
X509_LOOKUP_öô
(
X509_LOOKUP
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

431 
X509_LOOKUP_by_subje˘
(
X509_LOOKUP
 *
˘x
, 
ty≥
, 
X509_NAME
 *
«me
,

432 
X509_OBJECT
 *
ªt
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

433 
X509_LOOKUP_by_issuî_£rül
(
X509_LOOKUP
 *
˘x
, 
ty≥
, 
X509_NAME
 *
«me
,

434 
ASN1_INTEGER
 *
£rül
, 
X509_OBJECT
 *
ªt
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

435 
X509_LOOKUP_by_fögî¥öt
(
X509_LOOKUP
 *
˘x
, 
ty≥
,

436 *
byãs
, 
Àn
, 
X509_OBJECT
 *
ªt
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

437 
X509_LOOKUP_by_Æüs
(
X509_LOOKUP
 *
˘x
, 
ty≥
, *
°r
,

438 
Àn
, 
X509_OBJECT
 *
ªt
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

439 
X509_LOOKUP_shutdown
(
X509_LOOKUP
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

441 #i‚de‡
OPENSSL_NO_STDIO


442 
X509_STORE_lﬂd_loˇti⁄s
 (
X509_STORE
 *
˘x
,

443 c⁄° *
fûe
, c⁄° *
dú
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

444 
X509_STORE_£t_deÁu…_∑ths
(
X509_STORE
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

447 
X509_STORE_CTX_gë_ex_√w_ödex
(
¨gl
, *
¨gp
, 
CRYPTO_EX_√w
 *
√w_func
,

448 
CRYPTO_EX_dup
 *
dup_func
, 
CRYPTO_EX_‰ì
 *
‰ì_func
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

449 
X509_STORE_CTX_£t_ex_d©a
(
X509_STORE_CTX
 *
˘x
,
idx
,*
d©a
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

450 * 
X509_STORE_CTX_gë_ex_d©a
(
X509_STORE_CTX
 *
˘x
,
idx
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

451 
X509_STORE_CTX_gë_îr‹
(
X509_STORE_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

452 
X509_STORE_CTX_£t_îr‹
(
X509_STORE_CTX
 *
˘x
,
s
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

453 
X509_STORE_CTX_gë_îr‹_dïth
(
X509_STORE_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

454 
X509
 * 
X509_STORE_CTX_gë_cuºít_˚π
(
X509_STORE_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

455 
STACK_OF
(
X509
Ë*
X509_STORE_CTX_gë_chaö
(
X509_STORE_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

456 
STACK_OF
(
X509
Ë*
X509_STORE_CTX_gë1_chaö
(
X509_STORE_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

457 
X509_STORE_CTX_£t_˚π
(
X509_STORE_CTX
 *
c
,
X509
 *
x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

458 
X509_STORE_CTX_£t_chaö
(
X509_STORE_CTX
 *
c
,
STACK_OF
(
X509
Ë*
sk
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

459 
X509_STORE_CTX_£t0_¸ls
(
X509_STORE_CTX
 *
c
,
STACK_OF
(
X509_CRL
Ë*
sk
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

460 
X509_STORE_CTX_£t_puΩo£
(
X509_STORE_CTX
 *
˘x
, 
puΩo£
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

461 
X509_STORE_CTX_£t_åu°
(
X509_STORE_CTX
 *
˘x
, 
åu°
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

462 
X509_STORE_CTX_puΩo£_öhîô
(
X509_STORE_CTX
 *
˘x
, 
def_puΩo£
,

463 
puΩo£
, 
åu°
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

464 
X509_STORE_CTX_£t_Êags
(
X509_STORE_CTX
 *
˘x
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

465 
X509_STORE_CTX_£t_time
(
X509_STORE_CTX
 *
˘x
, 
Êags
,

466 
time_t
 
t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

467 
X509_STORE_CTX_£t_vîify_cb
(
X509_STORE_CTX
 *
˘x
,

468 (*
vîify_cb
)(, 
X509_STORE_CTX
 *)Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

470 
X509_POLICY_TREE
 *
X509_STORE_CTX_gë0_pﬁicy_åì
(
X509_STORE_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

471 
X509_STORE_CTX_gë_ex∂icô_pﬁicy
(
X509_STORE_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

473 
X509_VERIFY_PARAM
 *
X509_STORE_CTX_gë0_∑øm
(
X509_STORE_CTX
 *
˘x
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

474 
X509_STORE_CTX_£t0_∑øm
(
X509_STORE_CTX
 *
˘x
, 
X509_VERIFY_PARAM
 *
∑øm
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

475 
X509_STORE_CTX_£t_deÁu…
(
X509_STORE_CTX
 *
˘x
, c⁄° *
«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

479 
X509_VERIFY_PARAM
 *
X509_VERIFY_PARAM_√w
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

480 
X509_VERIFY_PARAM_‰ì
(
X509_VERIFY_PARAM
 *
∑øm
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

481 
X509_VERIFY_PARAM_öhîô
(
X509_VERIFY_PARAM
 *
to
,

482 c⁄° 
X509_VERIFY_PARAM
 *
‰om
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

483 
X509_VERIFY_PARAM_£t1
(
X509_VERIFY_PARAM
 *
to
,

484 c⁄° 
X509_VERIFY_PARAM
 *
‰om
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

485 
X509_VERIFY_PARAM_£t1_«me
(
X509_VERIFY_PARAM
 *
∑øm
, c⁄° *
«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

486 
X509_VERIFY_PARAM_£t_Êags
(
X509_VERIFY_PARAM
 *
∑øm
, 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

487 
X509_VERIFY_PARAM_˛ór_Êags
(
X509_VERIFY_PARAM
 *
∑øm
,

488 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

489 
X509_VERIFY_PARAM_gë_Êags
(
X509_VERIFY_PARAM
 *
∑øm
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

490 
X509_VERIFY_PARAM_£t_puΩo£
(
X509_VERIFY_PARAM
 *
∑øm
, 
puΩo£
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

491 
X509_VERIFY_PARAM_£t_åu°
(
X509_VERIFY_PARAM
 *
∑øm
, 
åu°
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

492 
X509_VERIFY_PARAM_£t_dïth
(
X509_VERIFY_PARAM
 *
∑øm
, 
dïth
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

493 
X509_VERIFY_PARAM_£t_time
(
X509_VERIFY_PARAM
 *
∑øm
, 
time_t
 
t
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

494 
X509_VERIFY_PARAM_add0_pﬁicy
(
X509_VERIFY_PARAM
 *
∑øm
,

495 
ASN1_OBJECT
 *
pﬁicy
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

496 
X509_VERIFY_PARAM_£t1_pﬁicõs
(
X509_VERIFY_PARAM
 *
∑øm
,

497 
STACK_OF
(
ASN1_OBJECT
Ë*
pﬁicõs
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

498 
X509_VERIFY_PARAM_gë_dïth
(c⁄° 
X509_VERIFY_PARAM
 *
∑øm
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

500 
X509_VERIFY_PARAM_add0_èbÀ
(
X509_VERIFY_PARAM
 *
∑øm
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

501 c⁄° 
X509_VERIFY_PARAM
 *
X509_VERIFY_PARAM_lookup
(c⁄° *
«me
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

502 
X509_VERIFY_PARAM_èbÀ_˛ónup
(Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

504 
X509_pﬁicy_check
(
X509_POLICY_TREE
 **
±ªe
, *
≥x∂icô_pﬁicy
,

505 
STACK_OF
(
X509
Ë*
˚πs
,

506 
STACK_OF
(
ASN1_OBJECT
Ë*
pﬁicy_oids
,

507 
Êags
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

509 
X509_pﬁicy_åì_‰ì
(
X509_POLICY_TREE
 *
åì
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

511 
X509_pﬁicy_åì_Àvñ_cou¡
(c⁄° 
X509_POLICY_TREE
 *
åì
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

512 
X509_POLICY_LEVEL
 *

513 
X509_pﬁicy_åì_gë0_Àvñ
(c⁄° 
X509_POLICY_TREE
 *
åì
, 
i
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

515 
STACK_OF
(
X509_POLICY_NODE
) *

516 
X509_pﬁicy_åì_gë0_pﬁicõs
(c⁄° 
X509_POLICY_TREE
 *
åì
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

518 
STACK_OF
(
X509_POLICY_NODE
) *

519 
X509_pﬁicy_åì_gë0_u£r_pﬁicõs
(c⁄° 
X509_POLICY_TREE
 *
åì
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

521 
X509_pﬁicy_Àvñ_node_cou¡
(
X509_POLICY_LEVEL
 *
Àvñ
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

523 
X509_POLICY_NODE
 *
X509_pﬁicy_Àvñ_gë0_node
(
X509_POLICY_LEVEL
 *
Àvñ
, 
i
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

525 c⁄° 
ASN1_OBJECT
 *
X509_pﬁicy_node_gë0_pﬁicy
(c⁄° 
X509_POLICY_NODE
 *
node
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

527 
STACK_OF
(
POLICYQUALINFO
) *

528 
X509_pﬁicy_node_gë0_quÆifõrs
(c⁄° 
X509_POLICY_NODE
 *
node
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

529 c⁄° 
X509_POLICY_NODE
 *

530 
X509_pﬁicy_node_gë0_∑ª¡
(c⁄° 
X509_POLICY_NODE
 *
node
Ë
DEPRECATED_IN_MAC_OS_X_VERSION_10_7_AND_LATER
;

532 #ifde‡ 
__˝lu•lus


	@/usr/include/secure/_common.h

24 #i‚de‡
_SECURE__COMMON_H_


25 
	#_SECURE__COMMON_H_


	)

27 #unde‡
_USE_FORTIFY_LEVEL


28 #i‡
deföed
(
_FORTIFY_SOURCE
) && _FORTIFY_SOURCE > 0

29 #i‡
_FORTIFY_SOURCE
 > 1

30 
	#_USE_FORTIFY_LEVEL
 2

	)

32 
	#_USE_FORTIFY_LEVEL
 1

	)

35 
	#_USE_FORTIFY_LEVEL
 0

	)

38 
	#__d¨wö_obsz0
(
obje˘
Ë
	`__buûtö_obje˘_size
 (obje˘, 0)

	)

39 
	#__d¨wö_obsz
(
obje˘
Ë
	`__buûtö_obje˘_size
 (obje˘, 
_USE_FORTIFY_LEVEL
 > 1 ? 1 : 0)

	)

	@/usr/include/sys/_posix_availability.h

28 #i‚de‡
_CDEFS_H_


32 #i‡!
deföed
(
_DARWIN_C_SOURCE
Ë&& deföed(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE >= 198808L

33 
	#___POSIX_C_DEPRECATED_STARTING_198808L
 
__dïªˇãd


	)

35 
	#___POSIX_C_DEPRECATED_STARTING_198808L


	)

38 #i‡!
deföed
(
_DARWIN_C_SOURCE
Ë&& deföed(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE >= 199009L

39 
	#___POSIX_C_DEPRECATED_STARTING_199009L
 
__dïªˇãd


	)

41 
	#___POSIX_C_DEPRECATED_STARTING_199009L


	)

44 #i‡!
deföed
(
_DARWIN_C_SOURCE
Ë&& deföed(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE >= 199209L

45 
	#___POSIX_C_DEPRECATED_STARTING_199209L
 
__dïªˇãd


	)

47 
	#___POSIX_C_DEPRECATED_STARTING_199209L


	)

50 #i‡!
deföed
(
_DARWIN_C_SOURCE
Ë&& deföed(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE >= 199309L

51 
	#___POSIX_C_DEPRECATED_STARTING_199309L
 
__dïªˇãd


	)

53 
	#___POSIX_C_DEPRECATED_STARTING_199309L


	)

56 #i‡!
deföed
(
_DARWIN_C_SOURCE
Ë&& deföed(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE >= 199506L

57 
	#___POSIX_C_DEPRECATED_STARTING_199506L
 
__dïªˇãd


	)

59 
	#___POSIX_C_DEPRECATED_STARTING_199506L


	)

62 #i‡!
deföed
(
_DARWIN_C_SOURCE
Ë&& deföed(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE >= 200112L

63 
	#___POSIX_C_DEPRECATED_STARTING_200112L
 
__dïªˇãd


	)

65 
	#___POSIX_C_DEPRECATED_STARTING_200112L


	)

68 #i‡!
deföed
(
_DARWIN_C_SOURCE
Ë&& deföed(
_POSIX_C_SOURCE
) && _POSIX_C_SOURCE >= 200809L

69 
	#___POSIX_C_DEPRECATED_STARTING_200809L
 
__dïªˇãd


	)

71 
	#___POSIX_C_DEPRECATED_STARTING_200809L


	)

	@/usr/include/sys/_structs.h

29 
	~<sys/cdefs.h
>

30 
	~<sys/_ty≥s.h
>

32 #ifde‡
__√ed_uc⁄ãxt_t


33 #i‚de‡
__√ed_°ru˘_uc⁄ãxt


34 
	#__√ed_°ru˘_uc⁄ãxt


	)

38 #ifde‡
__√ed_uc⁄ãxt64_t


39 #i‚de‡
__√ed_°ru˘_uc⁄ãxt64


40 
	#__√ed_°ru˘_uc⁄ãxt64


	)

44 #ifde‡
__√ed_°ru˘_uc⁄ãxt


45 #i‚de‡
__√ed_°ru˘_mc⁄ãxt


46 
	#__√ed_°ru˘_mc⁄ãxt


	)

50 #ifde‡
__√ed_°ru˘_uc⁄ãxt64


51 #i‚de‡
__√ed_°ru˘_mc⁄ãxt64


52 
	#__√ed_°ru˘_mc⁄ãxt64


	)

56 #i‡
deföed
(
__√ed_°ru˘_mc⁄ãxt
Ë|| deföed(
__√ed_°ru˘_mc⁄ãxt64
)

57 
	~<machöe/_°ru˘s.h
>

60 #i‡
deföed
(
__√ed_°ack_t
Ë|| deföed(
__√ed_°ru˘_uc⁄ãxt
Ë|| deföed(
__√ed_°ru˘_uc⁄ãxt64
)

61 #i‚de‡
__√ed_°ru˘_sigÆt°ack


62 
	#__√ed_°ru˘_sigÆt°ack


	)

66 #ifde‡
__√ed_°ru˘_sigÆt°ack


67 #unde‡
__√ed_°ru˘_sigÆt°ack


68 
	~<sys/_ty≥s/_sigÆt°ack.h
>

71 #ifde‡
__√ed_°ru˘_time•ec


72 #unde‡
__√ed_°ru˘_time•ec


73 
	~<sys/_ty≥s/_time•ec.h
>

76 #ifde‡
__√ed_°ru˘_timevÆ


77 #unde‡
__√ed_°ru˘_timevÆ


78 
	~<sys/_ty≥s/_timevÆ.h
>

81 #ifde‡
__√ed_°ru˘_timevÆ32


82 #unde‡
__√ed_°ru˘_timevÆ32


83 
	~<sys/_ty≥s/_timevÆ32.h
>

86 #ifde‡
__√ed_°ru˘_uc⁄ãxt


87 #unde‡
__√ed_°ru˘_uc⁄ãxt


88 
	~<sys/_ty≥s/_uc⁄ãxt.h
>

91 #ifde‡
__√ed_°ru˘_uc⁄ãxt64


92 #unde‡
__√ed_°ru˘_uc⁄ãxt64


93 
	~<sys/_ty≥s/_uc⁄ãxt64.h
>

97 #ifde‡
__√ed_fd_£t


98 #unde‡
__√ed_fd_£t


99 
	~<sys/_ty≥s/_fd_def.h
>

102 #ifde‡
__√ed_°ack_t


103 #unde‡
__√ed_°ack_t


106 #ifde‡
__√ed_uc⁄ãxt_t


107 #unde‡
__√ed_uc⁄ãxt_t


110 #ifde‡
__√ed_uc⁄ãxt64_t


111 #unde‡
__√ed_uc⁄ãxt64_t


	@/usr/include/sys/_symbol_aliasing.h

28 #i‚de‡
_CDEFS_H_


32 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 20000

33 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_0
(
x
Ë
	)
x

35 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_0
(
x
)

	)

38 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 20100

39 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_1
(
x
Ë
	)
x

41 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_1
(
x
)

	)

44 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 20200

45 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_2
(
x
Ë
	)
x

47 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_2
(
x
)

	)

50 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 30000

51 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_0
(
x
Ë
	)
x

53 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_0
(
x
)

	)

56 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 30100

57 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_1
(
x
Ë
	)
x

59 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_1
(
x
)

	)

62 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 30200

63 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_2
(
x
Ë
	)
x

65 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_2
(
x
)

	)

68 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 40000

69 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_0
(
x
Ë
	)
x

71 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_0
(
x
)

	)

74 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 40100

75 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_1
(
x
Ë
	)
x

77 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_1
(
x
)

	)

80 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 40200

81 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_2
(
x
Ë
	)
x

83 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_2
(
x
)

	)

86 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 40300

87 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_3
(
x
Ë
	)
x

89 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_3
(
x
)

	)

92 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 50000

93 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_0
(
x
Ë
	)
x

95 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_0
(
x
)

	)

98 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 50100

99 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_1
(
x
Ë
	)
x

101 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_1
(
x
)

	)

104 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 60000

105 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_0
(
x
Ë
	)
x

107 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_0
(
x
)

	)

110 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 60100

111 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_1
(
x
Ë
	)
x

113 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_1
(
x
)

	)

116 #i‡
deföed
(
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ >= 70000

117 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_0
(
x
Ë
	)
x

119 
	#__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_0
(
x
)

	)

122 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1000

123 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_0
(
x
Ë
	)
x

125 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_0
(
x
)

	)

128 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1010

129 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_1
(
x
Ë
	)
x

131 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_1
(
x
)

	)

134 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1020

135 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_2
(
x
Ë
	)
x

137 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_2
(
x
)

	)

140 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1030

141 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_3
(
x
Ë
	)
x

143 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_3
(
x
)

	)

146 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1040

147 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_4
(
x
Ë
	)
x

149 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_4
(
x
)

	)

152 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1050

153 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_5
(
x
Ë
	)
x

155 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_5
(
x
)

	)

158 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1060

159 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_6
(
x
Ë
	)
x

161 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_6
(
x
)

	)

164 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1070

165 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_7
(
x
Ë
	)
x

167 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_7
(
x
)

	)

170 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1080

171 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_8
(
x
Ë
	)
x

173 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_8
(
x
)

	)

176 #i‡
deföed
(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1090

177 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_9
(
x
Ë
	)
x

179 
	#__DARWIN_ALIAS_STARTING_MAC___MAC_10_9
(
x
)

	)

	@/usr/include/sys/_types/_o_dsync.h

28 #i‚de‡
O_DSYNC


29 
	#O_DSYNC
 0x400000

	)

	@/usr/include/sys/_types/_o_sync.h

28 #i‚de‡
O_SYNC


29 
	#O_SYNC
 0x0080

	)

	@/usr/include/sys/_types/_posix_vdisable.h

28 #i‚de‡
_POSIX_VDISABLE


29 
	#_POSIX_VDISABLE
 (()'\377')

	)

	@/usr/include/sys/_types/_seek_set.h

30 #i‚de‡
SEEK_SET


31 
	#SEEK_SET
 0

	)

32 
	#SEEK_CUR
 1

	)

33 
	#SEEK_END
 2

	)

	@/usr/include/sys/_types/_sigaltstack.h

30 #i‚de‡
_STRUCT_SIGALTSTACK


31 #i‡
__DARWIN_UNIX03


32 
	#_STRUCT_SIGALTSTACK
 
__d¨wö_sigÆt°ack


	)

34 
	#_STRUCT_SIGALTSTACK
 
sigÆt°ack


	)

36 
	g_STRUCT_SIGALTSTACK


38 *
	gss_•
;

39 
__d¨wö_size_t
 
	gss_size
;

40 
	gss_Êags
;

42 
_STRUCT_SIGALTSTACK
 
	t°ack_t
;

	@/usr/include/sys/_types/_ucontext.h

28 #i‚de‡
_STRUCT_UCONTEXT


29 #i‡
__DARWIN_UNIX03


30 
	#_STRUCT_UCONTEXT
 
__d¨wö_uc⁄ãxt


	)

32 
	#_STRUCT_UCONTEXT
 
uc⁄ãxt


	)

34 
	g_STRUCT_UCONTEXT


36 
	guc_⁄°ack
;

37 
__d¨wö_sig£t_t
 
	guc_sigmask
;

38 
_STRUCT_SIGALTSTACK
 
	guc_°ack
;

39 
_STRUCT_UCONTEXT
 *
	guc_lök
;

40 
__d¨wö_size_t
 
	guc_mcsize
;

41 
_STRUCT_MCONTEXT
 *
	guc_mc⁄ãxt
;

42 #ifde‡
_XOPEN_SOURCE


43 
_STRUCT_MCONTEXT
 
	g__mc⁄ãxt_d©a
;

48 
_STRUCT_UCONTEXT
 
	tuc⁄ãxt_t
;

	@/usr/include/i386/_mcontext.h

29 #i‚de‡
__I386_MCONTEXT_H_


30 
	#__I386_MCONTEXT_H_


	)

32 
	~<sys/≠∂ópi›ts.h
>

33 
	~<mach/i386/_°ru˘s.h
>

35 #i‚de‡
_STRUCT_MCONTEXT32


36 #i‡
__DARWIN_UNIX03


37 
	#_STRUCT_MCONTEXT32
 
__d¨wö_mc⁄ãxt32


	)

38 
	g_STRUCT_MCONTEXT32


40 
_STRUCT_X86_EXCEPTION_STATE32
 
	g__es
;

41 
_STRUCT_X86_THREAD_STATE32
 
	g__ss
;

42 
_STRUCT_X86_FLOAT_STATE32
 
	g__fs
;

45 
	#_STRUCT_MCONTEXT_AVX32
 
__d¨wö_mc⁄ãxt_avx32


	)

46 
	g_STRUCT_MCONTEXT_AVX32


48 
_STRUCT_X86_EXCEPTION_STATE32
 
	g__es
;

49 
_STRUCT_X86_THREAD_STATE32
 
	g__ss
;

50 
_STRUCT_X86_AVX_STATE32
 
	g__fs
;

54 
	#_STRUCT_MCONTEXT32
 
mc⁄ãxt32


	)

55 
	g_STRUCT_MCONTEXT32


57 
_STRUCT_X86_EXCEPTION_STATE32
 
	ges
;

58 
_STRUCT_X86_THREAD_STATE32
 
	gss
;

59 
_STRUCT_X86_FLOAT_STATE32
 
	gfs
;

62 
	#_STRUCT_MCONTEXT_AVX32
 
mc⁄ãxt_avx32


	)

63 
	g_STRUCT_MCONTEXT_AVX32


65 
_STRUCT_X86_EXCEPTION_STATE32
 
	ges
;

66 
_STRUCT_X86_THREAD_STATE32
 
	gss
;

67 
_STRUCT_X86_AVX_STATE32
 
	gfs
;

73 #i‚de‡
_STRUCT_MCONTEXT64


74 #i‡
__DARWIN_UNIX03


75 
	#_STRUCT_MCONTEXT64
 
__d¨wö_mc⁄ãxt64


	)

76 
	g_STRUCT_MCONTEXT64


78 
_STRUCT_X86_EXCEPTION_STATE64
 
	g__es
;

79 
_STRUCT_X86_THREAD_STATE64
 
	g__ss
;

80 
_STRUCT_X86_FLOAT_STATE64
 
	g__fs
;

83 
	#_STRUCT_MCONTEXT_AVX64
 
__d¨wö_mc⁄ãxt_avx64


	)

84 
	g_STRUCT_MCONTEXT_AVX64


86 
_STRUCT_X86_EXCEPTION_STATE64
 
	g__es
;

87 
_STRUCT_X86_THREAD_STATE64
 
	g__ss
;

88 
_STRUCT_X86_AVX_STATE64
 
	g__fs
;

92 
	#_STRUCT_MCONTEXT64
 
mc⁄ãxt64


	)

93 
	g_STRUCT_MCONTEXT64


95 
_STRUCT_X86_EXCEPTION_STATE64
 
	ges
;

96 
_STRUCT_X86_THREAD_STATE64
 
	gss
;

97 
_STRUCT_X86_FLOAT_STATE64
 
	gfs
;

100 
	#_STRUCT_MCONTEXT_AVX64
 
mc⁄ãxt_avx64


	)

101 
	g_STRUCT_MCONTEXT_AVX64


103 
_STRUCT_X86_EXCEPTION_STATE64
 
	ges
;

104 
_STRUCT_X86_THREAD_STATE64
 
	gss
;

105 
_STRUCT_X86_AVX_STATE64
 
	gfs
;

112 #i‚de‡
_MCONTEXT_T


113 
	#_MCONTEXT_T


	)

114 #i‡
deföed
(
__LP64__
)

115 
_STRUCT_MCONTEXT64
 *
	tmc⁄ãxt_t
;

116 
	#_STRUCT_MCONTEXT
 
_STRUCT_MCONTEXT64


	)

118 
_STRUCT_MCONTEXT32
 *
	tmc⁄ãxt_t
;

119 
	#_STRUCT_MCONTEXT
 
_STRUCT_MCONTEXT32


	)

124 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

125 #i‚de‡
I386_MCONTEXT_SIZE


126 
	#I386_MCONTEXT_SIZE
 (
mc⁄ãxt
)

	)

	@/usr/include/i386/_types.h

28 #i‚def 
_BSD_I386__TYPES_H_


29 
	#_BSD_I386__TYPES_H_


	)

36 #ifde‡
__GNUC__


37 
__sig√d
 
	t__öt8_t
;

39 
	t__öt8_t
;

41 
	t__uöt8_t
;

42 
	t__öt16_t
;

43 
	t__uöt16_t
;

44 
	t__öt32_t
;

45 
	t__uöt32_t
;

46 
	t__öt64_t
;

47 
	t__uöt64_t
;

49 
	t__d¨wö_öçå_t
;

50 
	t__d¨wö_«tuøl_t
;

70 
	t__d¨wö_˘_ru√_t
;

77 
	m__mb°©e8
[128];

78 
	m_mb°©eL
;

79 } 
	t__mb°©e_t
;

81 
__mb°©e_t
 
	t__d¨wö_mb°©e_t
;

83 #i‡
deföed
(
__PTRDIFF_TYPE__
)

84 
__PTRDIFF_TYPE__
 
	t__d¨wö_±rdiff_t
;

85 #ñi‡
deföed
(
__LP64__
)

86 
	t__d¨wö_±rdiff_t
;

88 
	t__d¨wö_±rdiff_t
;

91 #i‡
deföed
(
__SIZE_TYPE__
)

92 
__SIZE_TYPE__
 
	t__d¨wö_size_t
;

94 
	t__d¨wö_size_t
;

97 #i‡(
__GNUC__
 > 2)

98 
__buûtö_va_li°
 
	t__d¨wö_va_li°
;

100 * 
	t__d¨wö_va_li°
;

103 #i‡
deföed
(
__WCHAR_TYPE__
)

104 
__WCHAR_TYPE__
 
	t__d¨wö_wch¨_t
;

106 
__d¨wö_˘_ru√_t
 
	t__d¨wö_wch¨_t
;

109 
__d¨wö_wch¨_t
 
	t__d¨wö_ru√_t
;

111 #i‡
deföed
(
__WINT_TYPE__
)

112 
__WINT_TYPE__
 
	t__d¨wö_wöt_t
;

114 
__d¨wö_˘_ru√_t
 
	t__d¨wö_wöt_t
;

117 
	t__d¨wö_˛ock_t
;

118 
__uöt32_t
 
	t__d¨wö_sockÀn_t
;

119 
	t__d¨wö_ssize_t
;

120 
	t__d¨wö_time_t
;

	@/usr/include/i386/signal.h

33 #i‚def 
_I386_SIGNAL_H_


34 
	#_I386_SIGNAL_H_
 1

	)

36 
	~<sys/cdefs.h
>

38 #i‚de‡
_ANSI_SOURCE


39 
	tsig_©omic_t
;

	@/usr/include/libkern/i386/_OSByteOrder.h

29 #i‚de‡
_OS__OSBYTEORDERI386_H


30 
	#_OS__OSBYTEORDERI386_H


	)

32 #i‡!
deföed
(
__DARWIN_OS_INLINE
)

33 #i‡
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

34 
	#__DARWIN_OS_INLINE
 
ölöe


	)

35 #ñi‡
deföed
(
__MWERKS__
Ë|| deföed(
__˝lu•lus
)

36 
	#__DARWIN_OS_INLINE
 
ölöe


	)

38 
	#__DARWIN_OS_INLINE
 
__ölöe__


	)

44 
__DARWIN_OS_INLINE


45 
__uöt16_t


46 
	$_OSSw≠I¡16
(

47 
__uöt16_t
 
_d©a


50  ((
__uöt16_t
)((
_d©a
 << 8) | (_data >> 8)));

51 
	}
}

53 
__DARWIN_OS_INLINE


54 
__uöt32_t


55 
	$_OSSw≠I¡32
(

56 
__uöt32_t
 
_d©a


59 #i‡
	`deföed
(
__Œvm__
)

60  
	`__buûtö_bsw≠32
(
_d©a
);

62 
	`__asm__
 ("bsw≠ %0" : "+r" (
_d©a
));

63  
_d©a
;

65 
	}
}

67 #i‡
deföed
(
__Œvm__
)

68 
__DARWIN_OS_INLINE


69 
__uöt64_t


70 
	$_OSSw≠I¡64
(

71 
__uöt64_t
 
_d©a


74  
	`__buûtö_bsw≠64
(
_d©a
);

75 
	}
}

77 #ñi‡
deföed
(
__i386__
)

78 
__DARWIN_OS_INLINE


79 
__uöt64_t


80 
	$_OSSw≠I¡64
(

81 
__uöt64_t
 
_d©a


84 
	`__asm__
 ("bswap %%eax\n\t"

87 : "+A" (
_d©a
));

88  
_d©a
;

89 
	}
}

90 #ñi‡
deföed
(
__x86_64__
)

91 
__DARWIN_OS_INLINE


92 
__uöt64_t


93 
	$_OSSw≠I¡64
(

94 
__uöt64_t
 
_d©a


97 
	`__asm__
 ("bsw≠ %0" : "+r" (
_d©a
));

98  
_d©a
;

99 
	}
}

101 #îr‹ 
Unknown
 
¨chôe˘uª


	@/usr/include/machine/_structs.h

28 #i‡
deföed
 (
__i386__
Ë|| deföed (
__x86_64__
)

29 
	~"i386/_°ru˘s.h
"

31 #îr‹ 
¨chôe˘uª
 
nŸ
 
suµ‹ãd


	@/usr/include/openssl/obj_mac.h

65 
	#SN_undef
 "UNDEF"

	)

66 
	#LN_undef
 "undeföed"

	)

67 
	#NID_undef
 0

	)

68 
	#OBJ_undef
 0L

	)

70 
	#SN_ôu_t
 "ITU-T"

	)

71 
	#LN_ôu_t
 "ôu-t"

	)

72 
	#NID_ôu_t
 645

	)

73 
	#OBJ_ôu_t
 0L

	)

75 
	#NID_ccôt
 404

	)

76 
	#OBJ_ccôt
 
OBJ_ôu_t


	)

78 
	#SN_iso
 "ISO"

	)

79 
	#LN_iso
 "iso"

	)

80 
	#NID_iso
 181

	)

81 
	#OBJ_iso
 1L

	)

83 
	#SN_joöt_iso_ôu_t
 "JOINT-ISO-ITU-T"

	)

84 
	#LN_joöt_iso_ôu_t
 "joöt-iso-ôu-t"

	)

85 
	#NID_joöt_iso_ôu_t
 646

	)

86 
	#OBJ_joöt_iso_ôu_t
 2L

	)

88 
	#NID_joöt_iso_ccôt
 393

	)

89 
	#OBJ_joöt_iso_ccôt
 
OBJ_joöt_iso_ôu_t


	)

91 
	#SN_membî_body
 "membî-body"

	)

92 
	#LN_membî_body
 "ISO Membî Body"

	)

93 
	#NID_membî_body
 182

	)

94 
	#OBJ_membî_body
 
OBJ_iso
,2L

	)

96 
	#SN_idítifõd_‹g™iz©i⁄
 "idítifõd-‹g™iz©i⁄"

	)

97 
	#NID_idítifõd_‹g™iz©i⁄
 676

	)

98 
	#OBJ_idítifõd_‹g™iz©i⁄
 
OBJ_iso
,3L

	)

100 
	#SN_hmac_md5
 "HMAC-MD5"

	)

101 
	#LN_hmac_md5
 "hmac-md5"

	)

102 
	#NID_hmac_md5
 780

	)

103 
	#OBJ_hmac_md5
 
OBJ_idítifõd_‹g™iz©i⁄
,6L,1L,5L,5L,8L,1L,1L

	)

105 
	#SN_hmac_sha1
 "HMAC-SHA1"

	)

106 
	#LN_hmac_sha1
 "hmac-sha1"

	)

107 
	#NID_hmac_sha1
 781

	)

108 
	#OBJ_hmac_sha1
 
OBJ_idítifõd_‹g™iz©i⁄
,6L,1L,5L,5L,8L,1L,2L

	)

110 
	#SN_˚πicom_¨c
 "˚πicom-¨c"

	)

111 
	#NID_˚πicom_¨c
 677

	)

112 
	#OBJ_˚πicom_¨c
 
OBJ_idítifõd_‹g™iz©i⁄
,132L

	)

114 
	#SN_öã∫©i⁄Æ_‹g™iz©i⁄s
 "öã∫©i⁄Æ-‹g™iz©i⁄s"

	)

115 
	#LN_öã∫©i⁄Æ_‹g™iz©i⁄s
 "I¡î«ti⁄Æ Org™iz©i⁄s"

	)

116 
	#NID_öã∫©i⁄Æ_‹g™iz©i⁄s
 647

	)

117 
	#OBJ_öã∫©i⁄Æ_‹g™iz©i⁄s
 
OBJ_joöt_iso_ôu_t
,23L

	)

119 
	#SN_w≠
 "w≠"

	)

120 
	#NID_w≠
 678

	)

121 
	#OBJ_w≠
 
OBJ_öã∫©i⁄Æ_‹g™iz©i⁄s
,43L

	)

123 
	#SN_w≠_wsg
 "w≠-wsg"

	)

124 
	#NID_w≠_wsg
 679

	)

125 
	#OBJ_w≠_wsg
 
OBJ_w≠
,1L

	)

127 
	#SN_£À˘ed_©åibuã_ty≥s
 "£À˘ed-©åibuã-ty≥s"

	)

128 
	#LN_£À˘ed_©åibuã_ty≥s
 "Sñe˘ed Aâribuã Ty≥s"

	)

129 
	#NID_£À˘ed_©åibuã_ty≥s
 394

	)

130 
	#OBJ_£À˘ed_©åibuã_ty≥s
 
OBJ_joöt_iso_ôu_t
,5L,1L,5L

	)

132 
	#SN_˛óøn˚
 "˛óøn˚"

	)

133 
	#NID_˛óøn˚
 395

	)

134 
	#OBJ_˛óøn˚
 
OBJ_£À˘ed_©åibuã_ty≥s
,55L

	)

136 
	#SN_ISO_US
 "ISO-US"

	)

137 
	#LN_ISO_US
 "ISO US Membî Body"

	)

138 
	#NID_ISO_US
 183

	)

139 
	#OBJ_ISO_US
 
OBJ_membî_body
,840L

	)

141 
	#SN_X9_57
 "X9-57"

	)

142 
	#LN_X9_57
 "X9.57"

	)

143 
	#NID_X9_57
 184

	)

144 
	#OBJ_X9_57
 
OBJ_ISO_US
,10040L

	)

146 
	#SN_X9cm
 "X9cm"

	)

147 
	#LN_X9cm
 "X9.57 CM ?"

	)

148 
	#NID_X9cm
 185

	)

149 
	#OBJ_X9cm
 
OBJ_X9_57
,4L

	)

151 
	#SN_dß
 "DSA"

	)

152 
	#LN_dß
 "dßEn¸y±i⁄"

	)

153 
	#NID_dß
 116

	)

154 
	#OBJ_dß
 
OBJ_X9cm
,1L

	)

156 
	#SN_dßWôhSHA1
 "DSA-SHA1"

	)

157 
	#LN_dßWôhSHA1
 "dßWôhSHA1"

	)

158 
	#NID_dßWôhSHA1
 113

	)

159 
	#OBJ_dßWôhSHA1
 
OBJ_X9cm
,3L

	)

161 
	#SN_™si_X9_62
 "™si-X9-62"

	)

162 
	#LN_™si_X9_62
 "ANSI X9.62"

	)

163 
	#NID_™si_X9_62
 405

	)

164 
	#OBJ_™si_X9_62
 
OBJ_ISO_US
,10045L

	)

166 
	#OBJ_X9_62_id_fõldTy≥
 
OBJ_™si_X9_62
,1L

	)

168 
	#SN_X9_62_¥ime_fõld
 "¥ime-fõld"

	)

169 
	#NID_X9_62_¥ime_fõld
 406

	)

170 
	#OBJ_X9_62_¥ime_fõld
 
OBJ_X9_62_id_fõldTy≥
,1L

	)

172 
	#SN_X9_62_ch¨a˘îi°ic_two_fõld
 "ch¨a˘îi°ic-two-fõld"

	)

173 
	#NID_X9_62_ch¨a˘îi°ic_two_fõld
 407

	)

174 
	#OBJ_X9_62_ch¨a˘îi°ic_two_fõld
 
OBJ_X9_62_id_fõldTy≥
,2L

	)

176 
	#SN_X9_62_id_ch¨a˘îi°ic_two_basis
 "id-ch¨a˘îi°ic-two-basis"

	)

177 
	#NID_X9_62_id_ch¨a˘îi°ic_two_basis
 680

	)

178 
	#OBJ_X9_62_id_ch¨a˘îi°ic_two_basis
 
OBJ_X9_62_ch¨a˘îi°ic_two_fõld
,3L

	)

180 
	#SN_X9_62_⁄Basis
 "⁄Basis"

	)

181 
	#NID_X9_62_⁄Basis
 681

	)

182 
	#OBJ_X9_62_⁄Basis
 
OBJ_X9_62_id_ch¨a˘îi°ic_two_basis
,1L

	)

184 
	#SN_X9_62_çBasis
 "çBasis"

	)

185 
	#NID_X9_62_çBasis
 682

	)

186 
	#OBJ_X9_62_çBasis
 
OBJ_X9_62_id_ch¨a˘îi°ic_two_basis
,2L

	)

188 
	#SN_X9_62_µBasis
 "µBasis"

	)

189 
	#NID_X9_62_µBasis
 683

	)

190 
	#OBJ_X9_62_µBasis
 
OBJ_X9_62_id_ch¨a˘îi°ic_two_basis
,3L

	)

192 
	#OBJ_X9_62_id_publicKeyTy≥
 
OBJ_™si_X9_62
,2L

	)

194 
	#SN_X9_62_id_ecPublicKey
 "id-ecPublicKey"

	)

195 
	#NID_X9_62_id_ecPublicKey
 408

	)

196 
	#OBJ_X9_62_id_ecPublicKey
 
OBJ_X9_62_id_publicKeyTy≥
,1L

	)

198 
	#OBJ_X9_62_ñlùticCurve
 
OBJ_™si_X9_62
,3L

	)

200 
	#OBJ_X9_62_c_TwoCurve
 
OBJ_X9_62_ñlùticCurve
,0L

	)

202 
	#SN_X9_62_c2≤b163v1
 "c2≤b163v1"

	)

203 
	#NID_X9_62_c2≤b163v1
 684

	)

204 
	#OBJ_X9_62_c2≤b163v1
 
OBJ_X9_62_c_TwoCurve
,1L

	)

206 
	#SN_X9_62_c2≤b163v2
 "c2≤b163v2"

	)

207 
	#NID_X9_62_c2≤b163v2
 685

	)

208 
	#OBJ_X9_62_c2≤b163v2
 
OBJ_X9_62_c_TwoCurve
,2L

	)

210 
	#SN_X9_62_c2≤b163v3
 "c2≤b163v3"

	)

211 
	#NID_X9_62_c2≤b163v3
 686

	)

212 
	#OBJ_X9_62_c2≤b163v3
 
OBJ_X9_62_c_TwoCurve
,3L

	)

214 
	#SN_X9_62_c2≤b176v1
 "c2≤b176v1"

	)

215 
	#NID_X9_62_c2≤b176v1
 687

	)

216 
	#OBJ_X9_62_c2≤b176v1
 
OBJ_X9_62_c_TwoCurve
,4L

	)

218 
	#SN_X9_62_c2äb191v1
 "c2äb191v1"

	)

219 
	#NID_X9_62_c2äb191v1
 688

	)

220 
	#OBJ_X9_62_c2äb191v1
 
OBJ_X9_62_c_TwoCurve
,5L

	)

222 
	#SN_X9_62_c2äb191v2
 "c2äb191v2"

	)

223 
	#NID_X9_62_c2äb191v2
 689

	)

224 
	#OBJ_X9_62_c2äb191v2
 
OBJ_X9_62_c_TwoCurve
,6L

	)

226 
	#SN_X9_62_c2äb191v3
 "c2äb191v3"

	)

227 
	#NID_X9_62_c2äb191v3
 690

	)

228 
	#OBJ_X9_62_c2äb191v3
 
OBJ_X9_62_c_TwoCurve
,7L

	)

230 
	#SN_X9_62_c2⁄b191v4
 "c2⁄b191v4"

	)

231 
	#NID_X9_62_c2⁄b191v4
 691

	)

232 
	#OBJ_X9_62_c2⁄b191v4
 
OBJ_X9_62_c_TwoCurve
,8L

	)

234 
	#SN_X9_62_c2⁄b191v5
 "c2⁄b191v5"

	)

235 
	#NID_X9_62_c2⁄b191v5
 692

	)

236 
	#OBJ_X9_62_c2⁄b191v5
 
OBJ_X9_62_c_TwoCurve
,9L

	)

238 
	#SN_X9_62_c2≤b208w1
 "c2≤b208w1"

	)

239 
	#NID_X9_62_c2≤b208w1
 693

	)

240 
	#OBJ_X9_62_c2≤b208w1
 
OBJ_X9_62_c_TwoCurve
,10L

	)

242 
	#SN_X9_62_c2äb239v1
 "c2äb239v1"

	)

243 
	#NID_X9_62_c2äb239v1
 694

	)

244 
	#OBJ_X9_62_c2äb239v1
 
OBJ_X9_62_c_TwoCurve
,11L

	)

246 
	#SN_X9_62_c2äb239v2
 "c2äb239v2"

	)

247 
	#NID_X9_62_c2äb239v2
 695

	)

248 
	#OBJ_X9_62_c2äb239v2
 
OBJ_X9_62_c_TwoCurve
,12L

	)

250 
	#SN_X9_62_c2äb239v3
 "c2äb239v3"

	)

251 
	#NID_X9_62_c2äb239v3
 696

	)

252 
	#OBJ_X9_62_c2äb239v3
 
OBJ_X9_62_c_TwoCurve
,13L

	)

254 
	#SN_X9_62_c2⁄b239v4
 "c2⁄b239v4"

	)

255 
	#NID_X9_62_c2⁄b239v4
 697

	)

256 
	#OBJ_X9_62_c2⁄b239v4
 
OBJ_X9_62_c_TwoCurve
,14L

	)

258 
	#SN_X9_62_c2⁄b239v5
 "c2⁄b239v5"

	)

259 
	#NID_X9_62_c2⁄b239v5
 698

	)

260 
	#OBJ_X9_62_c2⁄b239v5
 
OBJ_X9_62_c_TwoCurve
,15L

	)

262 
	#SN_X9_62_c2≤b272w1
 "c2≤b272w1"

	)

263 
	#NID_X9_62_c2≤b272w1
 699

	)

264 
	#OBJ_X9_62_c2≤b272w1
 
OBJ_X9_62_c_TwoCurve
,16L

	)

266 
	#SN_X9_62_c2≤b304w1
 "c2≤b304w1"

	)

267 
	#NID_X9_62_c2≤b304w1
 700

	)

268 
	#OBJ_X9_62_c2≤b304w1
 
OBJ_X9_62_c_TwoCurve
,17L

	)

270 
	#SN_X9_62_c2äb359v1
 "c2äb359v1"

	)

271 
	#NID_X9_62_c2äb359v1
 701

	)

272 
	#OBJ_X9_62_c2äb359v1
 
OBJ_X9_62_c_TwoCurve
,18L

	)

274 
	#SN_X9_62_c2≤b368w1
 "c2≤b368w1"

	)

275 
	#NID_X9_62_c2≤b368w1
 702

	)

276 
	#OBJ_X9_62_c2≤b368w1
 
OBJ_X9_62_c_TwoCurve
,19L

	)

278 
	#SN_X9_62_c2äb431r1
 "c2äb431r1"

	)

279 
	#NID_X9_62_c2äb431r1
 703

	)

280 
	#OBJ_X9_62_c2äb431r1
 
OBJ_X9_62_c_TwoCurve
,20L

	)

282 
	#OBJ_X9_62_¥imeCurve
 
OBJ_X9_62_ñlùticCurve
,1L

	)

284 
	#SN_X9_62_¥ime192v1
 "¥ime192v1"

	)

285 
	#NID_X9_62_¥ime192v1
 409

	)

286 
	#OBJ_X9_62_¥ime192v1
 
OBJ_X9_62_¥imeCurve
,1L

	)

288 
	#SN_X9_62_¥ime192v2
 "¥ime192v2"

	)

289 
	#NID_X9_62_¥ime192v2
 410

	)

290 
	#OBJ_X9_62_¥ime192v2
 
OBJ_X9_62_¥imeCurve
,2L

	)

292 
	#SN_X9_62_¥ime192v3
 "¥ime192v3"

	)

293 
	#NID_X9_62_¥ime192v3
 411

	)

294 
	#OBJ_X9_62_¥ime192v3
 
OBJ_X9_62_¥imeCurve
,3L

	)

296 
	#SN_X9_62_¥ime239v1
 "¥ime239v1"

	)

297 
	#NID_X9_62_¥ime239v1
 412

	)

298 
	#OBJ_X9_62_¥ime239v1
 
OBJ_X9_62_¥imeCurve
,4L

	)

300 
	#SN_X9_62_¥ime239v2
 "¥ime239v2"

	)

301 
	#NID_X9_62_¥ime239v2
 413

	)

302 
	#OBJ_X9_62_¥ime239v2
 
OBJ_X9_62_¥imeCurve
,5L

	)

304 
	#SN_X9_62_¥ime239v3
 "¥ime239v3"

	)

305 
	#NID_X9_62_¥ime239v3
 414

	)

306 
	#OBJ_X9_62_¥ime239v3
 
OBJ_X9_62_¥imeCurve
,6L

	)

308 
	#SN_X9_62_¥ime256v1
 "¥ime256v1"

	)

309 
	#NID_X9_62_¥ime256v1
 415

	)

310 
	#OBJ_X9_62_¥ime256v1
 
OBJ_X9_62_¥imeCurve
,7L

	)

312 
	#OBJ_X9_62_id_ecSigTy≥
 
OBJ_™si_X9_62
,4L

	)

314 
	#SN_ecdß_wôh_SHA1
 "ecdß-wôh-SHA1"

	)

315 
	#NID_ecdß_wôh_SHA1
 416

	)

316 
	#OBJ_ecdß_wôh_SHA1
 
OBJ_X9_62_id_ecSigTy≥
,1L

	)

318 
	#SN_ecdß_wôh_Recommíded
 "ecdß-wôh-Recommíded"

	)

319 
	#NID_ecdß_wôh_Recommíded
 791

	)

320 
	#OBJ_ecdß_wôh_Recommíded
 
OBJ_X9_62_id_ecSigTy≥
,2L

	)

322 
	#SN_ecdß_wôh_S≥cifõd
 "ecdß-wôh-S≥cifõd"

	)

323 
	#NID_ecdß_wôh_S≥cifõd
 792

	)

324 
	#OBJ_ecdß_wôh_S≥cifõd
 
OBJ_X9_62_id_ecSigTy≥
,3L

	)

326 
	#SN_ecdß_wôh_SHA224
 "ecdß-wôh-SHA224"

	)

327 
	#NID_ecdß_wôh_SHA224
 793

	)

328 
	#OBJ_ecdß_wôh_SHA224
 
OBJ_ecdß_wôh_S≥cifõd
,1L

	)

330 
	#SN_ecdß_wôh_SHA256
 "ecdß-wôh-SHA256"

	)

331 
	#NID_ecdß_wôh_SHA256
 794

	)

332 
	#OBJ_ecdß_wôh_SHA256
 
OBJ_ecdß_wôh_S≥cifõd
,2L

	)

334 
	#SN_ecdß_wôh_SHA384
 "ecdß-wôh-SHA384"

	)

335 
	#NID_ecdß_wôh_SHA384
 795

	)

336 
	#OBJ_ecdß_wôh_SHA384
 
OBJ_ecdß_wôh_S≥cifõd
,3L

	)

338 
	#SN_ecdß_wôh_SHA512
 "ecdß-wôh-SHA512"

	)

339 
	#NID_ecdß_wôh_SHA512
 796

	)

340 
	#OBJ_ecdß_wôh_SHA512
 
OBJ_ecdß_wôh_S≥cifõd
,4L

	)

342 
	#OBJ_£cg_ñlùticCurve
 
OBJ_˚πicom_¨c
,0L

	)

344 
	#SN_£˝112r1
 "£˝112r1"

	)

345 
	#NID_£˝112r1
 704

	)

346 
	#OBJ_£˝112r1
 
OBJ_£cg_ñlùticCurve
,6L

	)

348 
	#SN_£˝112r2
 "£˝112r2"

	)

349 
	#NID_£˝112r2
 705

	)

350 
	#OBJ_£˝112r2
 
OBJ_£cg_ñlùticCurve
,7L

	)

352 
	#SN_£˝128r1
 "£˝128r1"

	)

353 
	#NID_£˝128r1
 706

	)

354 
	#OBJ_£˝128r1
 
OBJ_£cg_ñlùticCurve
,28L

	)

356 
	#SN_£˝128r2
 "£˝128r2"

	)

357 
	#NID_£˝128r2
 707

	)

358 
	#OBJ_£˝128r2
 
OBJ_£cg_ñlùticCurve
,29L

	)

360 
	#SN_£˝160k1
 "£˝160k1"

	)

361 
	#NID_£˝160k1
 708

	)

362 
	#OBJ_£˝160k1
 
OBJ_£cg_ñlùticCurve
,9L

	)

364 
	#SN_£˝160r1
 "£˝160r1"

	)

365 
	#NID_£˝160r1
 709

	)

366 
	#OBJ_£˝160r1
 
OBJ_£cg_ñlùticCurve
,8L

	)

368 
	#SN_£˝160r2
 "£˝160r2"

	)

369 
	#NID_£˝160r2
 710

	)

370 
	#OBJ_£˝160r2
 
OBJ_£cg_ñlùticCurve
,30L

	)

372 
	#SN_£˝192k1
 "£˝192k1"

	)

373 
	#NID_£˝192k1
 711

	)

374 
	#OBJ_£˝192k1
 
OBJ_£cg_ñlùticCurve
,31L

	)

376 
	#SN_£˝224k1
 "£˝224k1"

	)

377 
	#NID_£˝224k1
 712

	)

378 
	#OBJ_£˝224k1
 
OBJ_£cg_ñlùticCurve
,32L

	)

380 
	#SN_£˝224r1
 "£˝224r1"

	)

381 
	#NID_£˝224r1
 713

	)

382 
	#OBJ_£˝224r1
 
OBJ_£cg_ñlùticCurve
,33L

	)

384 
	#SN_£˝256k1
 "£˝256k1"

	)

385 
	#NID_£˝256k1
 714

	)

386 
	#OBJ_£˝256k1
 
OBJ_£cg_ñlùticCurve
,10L

	)

388 
	#SN_£˝384r1
 "£˝384r1"

	)

389 
	#NID_£˝384r1
 715

	)

390 
	#OBJ_£˝384r1
 
OBJ_£cg_ñlùticCurve
,34L

	)

392 
	#SN_£˝521r1
 "£˝521r1"

	)

393 
	#NID_£˝521r1
 716

	)

394 
	#OBJ_£˝521r1
 
OBJ_£cg_ñlùticCurve
,35L

	)

396 
	#SN_£˘113r1
 "£˘113r1"

	)

397 
	#NID_£˘113r1
 717

	)

398 
	#OBJ_£˘113r1
 
OBJ_£cg_ñlùticCurve
,4L

	)

400 
	#SN_£˘113r2
 "£˘113r2"

	)

401 
	#NID_£˘113r2
 718

	)

402 
	#OBJ_£˘113r2
 
OBJ_£cg_ñlùticCurve
,5L

	)

404 
	#SN_£˘131r1
 "£˘131r1"

	)

405 
	#NID_£˘131r1
 719

	)

406 
	#OBJ_£˘131r1
 
OBJ_£cg_ñlùticCurve
,22L

	)

408 
	#SN_£˘131r2
 "£˘131r2"

	)

409 
	#NID_£˘131r2
 720

	)

410 
	#OBJ_£˘131r2
 
OBJ_£cg_ñlùticCurve
,23L

	)

412 
	#SN_£˘163k1
 "£˘163k1"

	)

413 
	#NID_£˘163k1
 721

	)

414 
	#OBJ_£˘163k1
 
OBJ_£cg_ñlùticCurve
,1L

	)

416 
	#SN_£˘163r1
 "£˘163r1"

	)

417 
	#NID_£˘163r1
 722

	)

418 
	#OBJ_£˘163r1
 
OBJ_£cg_ñlùticCurve
,2L

	)

420 
	#SN_£˘163r2
 "£˘163r2"

	)

421 
	#NID_£˘163r2
 723

	)

422 
	#OBJ_£˘163r2
 
OBJ_£cg_ñlùticCurve
,15L

	)

424 
	#SN_£˘193r1
 "£˘193r1"

	)

425 
	#NID_£˘193r1
 724

	)

426 
	#OBJ_£˘193r1
 
OBJ_£cg_ñlùticCurve
,24L

	)

428 
	#SN_£˘193r2
 "£˘193r2"

	)

429 
	#NID_£˘193r2
 725

	)

430 
	#OBJ_£˘193r2
 
OBJ_£cg_ñlùticCurve
,25L

	)

432 
	#SN_£˘233k1
 "£˘233k1"

	)

433 
	#NID_£˘233k1
 726

	)

434 
	#OBJ_£˘233k1
 
OBJ_£cg_ñlùticCurve
,26L

	)

436 
	#SN_£˘233r1
 "£˘233r1"

	)

437 
	#NID_£˘233r1
 727

	)

438 
	#OBJ_£˘233r1
 
OBJ_£cg_ñlùticCurve
,27L

	)

440 
	#SN_£˘239k1
 "£˘239k1"

	)

441 
	#NID_£˘239k1
 728

	)

442 
	#OBJ_£˘239k1
 
OBJ_£cg_ñlùticCurve
,3L

	)

444 
	#SN_£˘283k1
 "£˘283k1"

	)

445 
	#NID_£˘283k1
 729

	)

446 
	#OBJ_£˘283k1
 
OBJ_£cg_ñlùticCurve
,16L

	)

448 
	#SN_£˘283r1
 "£˘283r1"

	)

449 
	#NID_£˘283r1
 730

	)

450 
	#OBJ_£˘283r1
 
OBJ_£cg_ñlùticCurve
,17L

	)

452 
	#SN_£˘409k1
 "£˘409k1"

	)

453 
	#NID_£˘409k1
 731

	)

454 
	#OBJ_£˘409k1
 
OBJ_£cg_ñlùticCurve
,36L

	)

456 
	#SN_£˘409r1
 "£˘409r1"

	)

457 
	#NID_£˘409r1
 732

	)

458 
	#OBJ_£˘409r1
 
OBJ_£cg_ñlùticCurve
,37L

	)

460 
	#SN_£˘571k1
 "£˘571k1"

	)

461 
	#NID_£˘571k1
 733

	)

462 
	#OBJ_£˘571k1
 
OBJ_£cg_ñlùticCurve
,38L

	)

464 
	#SN_£˘571r1
 "£˘571r1"

	)

465 
	#NID_£˘571r1
 734

	)

466 
	#OBJ_£˘571r1
 
OBJ_£cg_ñlùticCurve
,39L

	)

468 
	#OBJ_w≠_wsg_idm_ecid
 
OBJ_w≠_wsg
,4L

	)

470 
	#SN_w≠_wsg_idm_ecid_wés1
 "w≠-wsg-idm-ecid-wés1"

	)

471 
	#NID_w≠_wsg_idm_ecid_wés1
 735

	)

472 
	#OBJ_w≠_wsg_idm_ecid_wés1
 
OBJ_w≠_wsg_idm_ecid
,1L

	)

474 
	#SN_w≠_wsg_idm_ecid_wés3
 "w≠-wsg-idm-ecid-wés3"

	)

475 
	#NID_w≠_wsg_idm_ecid_wés3
 736

	)

476 
	#OBJ_w≠_wsg_idm_ecid_wés3
 
OBJ_w≠_wsg_idm_ecid
,3L

	)

478 
	#SN_w≠_wsg_idm_ecid_wés4
 "w≠-wsg-idm-ecid-wés4"

	)

479 
	#NID_w≠_wsg_idm_ecid_wés4
 737

	)

480 
	#OBJ_w≠_wsg_idm_ecid_wés4
 
OBJ_w≠_wsg_idm_ecid
,4L

	)

482 
	#SN_w≠_wsg_idm_ecid_wés5
 "w≠-wsg-idm-ecid-wés5"

	)

483 
	#NID_w≠_wsg_idm_ecid_wés5
 738

	)

484 
	#OBJ_w≠_wsg_idm_ecid_wés5
 
OBJ_w≠_wsg_idm_ecid
,5L

	)

486 
	#SN_w≠_wsg_idm_ecid_wés6
 "w≠-wsg-idm-ecid-wés6"

	)

487 
	#NID_w≠_wsg_idm_ecid_wés6
 739

	)

488 
	#OBJ_w≠_wsg_idm_ecid_wés6
 
OBJ_w≠_wsg_idm_ecid
,6L

	)

490 
	#SN_w≠_wsg_idm_ecid_wés7
 "w≠-wsg-idm-ecid-wés7"

	)

491 
	#NID_w≠_wsg_idm_ecid_wés7
 740

	)

492 
	#OBJ_w≠_wsg_idm_ecid_wés7
 
OBJ_w≠_wsg_idm_ecid
,7L

	)

494 
	#SN_w≠_wsg_idm_ecid_wés8
 "w≠-wsg-idm-ecid-wés8"

	)

495 
	#NID_w≠_wsg_idm_ecid_wés8
 741

	)

496 
	#OBJ_w≠_wsg_idm_ecid_wés8
 
OBJ_w≠_wsg_idm_ecid
,8L

	)

498 
	#SN_w≠_wsg_idm_ecid_wés9
 "w≠-wsg-idm-ecid-wés9"

	)

499 
	#NID_w≠_wsg_idm_ecid_wés9
 742

	)

500 
	#OBJ_w≠_wsg_idm_ecid_wés9
 
OBJ_w≠_wsg_idm_ecid
,9L

	)

502 
	#SN_w≠_wsg_idm_ecid_wés10
 "w≠-wsg-idm-ecid-wés10"

	)

503 
	#NID_w≠_wsg_idm_ecid_wés10
 743

	)

504 
	#OBJ_w≠_wsg_idm_ecid_wés10
 
OBJ_w≠_wsg_idm_ecid
,10L

	)

506 
	#SN_w≠_wsg_idm_ecid_wés11
 "w≠-wsg-idm-ecid-wés11"

	)

507 
	#NID_w≠_wsg_idm_ecid_wés11
 744

	)

508 
	#OBJ_w≠_wsg_idm_ecid_wés11
 
OBJ_w≠_wsg_idm_ecid
,11L

	)

510 
	#SN_w≠_wsg_idm_ecid_wés12
 "w≠-wsg-idm-ecid-wés12"

	)

511 
	#NID_w≠_wsg_idm_ecid_wés12
 745

	)

512 
	#OBJ_w≠_wsg_idm_ecid_wés12
 
OBJ_w≠_wsg_idm_ecid
,12L

	)

514 
	#SN_ˇ°5_cbc
 "CAST5-CBC"

	)

515 
	#LN_ˇ°5_cbc
 "ˇ°5-cbc"

	)

516 
	#NID_ˇ°5_cbc
 108

	)

517 
	#OBJ_ˇ°5_cbc
 
OBJ_ISO_US
,113533L,7L,66L,10L

	)

519 
	#SN_ˇ°5_ecb
 "CAST5-ECB"

	)

520 
	#LN_ˇ°5_ecb
 "ˇ°5-ecb"

	)

521 
	#NID_ˇ°5_ecb
 109

	)

523 
	#SN_ˇ°5_cfb64
 "CAST5-CFB"

	)

524 
	#LN_ˇ°5_cfb64
 "ˇ°5-cfb"

	)

525 
	#NID_ˇ°5_cfb64
 110

	)

527 
	#SN_ˇ°5_ofb64
 "CAST5-OFB"

	)

528 
	#LN_ˇ°5_ofb64
 "ˇ°5-ofb"

	)

529 
	#NID_ˇ°5_ofb64
 111

	)

531 
	#LN_pbeWôhMD5AndCa°5_CBC
 "pbeWôhMD5AndCa°5CBC"

	)

532 
	#NID_pbeWôhMD5AndCa°5_CBC
 112

	)

533 
	#OBJ_pbeWôhMD5AndCa°5_CBC
 
OBJ_ISO_US
,113533L,7L,66L,12L

	)

535 
	#SN_id_Passw‹dBa£dMAC
 "id-Passw‹dBa£dMAC"

	)

536 
	#LN_id_Passw‹dBa£dMAC
 "∑ssw‹d ba£d MAC"

	)

537 
	#NID_id_Passw‹dBa£dMAC
 782

	)

538 
	#OBJ_id_Passw‹dBa£dMAC
 
OBJ_ISO_US
,113533L,7L,66L,13L

	)

540 
	#SN_id_DHBa£dMac
 "id-DHBa£dMac"

	)

541 
	#LN_id_DHBa£dMac
 "Diffõ-Hñlm™ ba£d MAC"

	)

542 
	#NID_id_DHBa£dMac
 783

	)

543 
	#OBJ_id_DHBa£dMac
 
OBJ_ISO_US
,113533L,7L,66L,30L

	)

545 
	#SN_rßdsi
 "rßdsi"

	)

546 
	#LN_rßdsi
 "RSA D©®Securôy, Inc."

	)

547 
	#NID_rßdsi
 1

	)

548 
	#OBJ_rßdsi
 
OBJ_ISO_US
,113549L

	)

550 
	#SN_pkcs
 "pkcs"

	)

551 
	#LN_pkcs
 "RSA D©®Securôy, Inc. PKCS"

	)

552 
	#NID_pkcs
 2

	)

553 
	#OBJ_pkcs
 
OBJ_rßdsi
,1L

	)

555 
	#SN_pkcs1
 "pkcs1"

	)

556 
	#NID_pkcs1
 186

	)

557 
	#OBJ_pkcs1
 
OBJ_pkcs
,1L

	)

559 
	#LN_rßEn¸y±i⁄
 "rßEn¸y±i⁄"

	)

560 
	#NID_rßEn¸y±i⁄
 6

	)

561 
	#OBJ_rßEn¸y±i⁄
 
OBJ_pkcs1
,1L

	)

563 
	#SN_md2WôhRSAEn¸y±i⁄
 "RSA-MD2"

	)

564 
	#LN_md2WôhRSAEn¸y±i⁄
 "md2WôhRSAEn¸y±i⁄"

	)

565 
	#NID_md2WôhRSAEn¸y±i⁄
 7

	)

566 
	#OBJ_md2WôhRSAEn¸y±i⁄
 
OBJ_pkcs1
,2L

	)

568 
	#SN_md4WôhRSAEn¸y±i⁄
 "RSA-MD4"

	)

569 
	#LN_md4WôhRSAEn¸y±i⁄
 "md4WôhRSAEn¸y±i⁄"

	)

570 
	#NID_md4WôhRSAEn¸y±i⁄
 396

	)

571 
	#OBJ_md4WôhRSAEn¸y±i⁄
 
OBJ_pkcs1
,3L

	)

573 
	#SN_md5WôhRSAEn¸y±i⁄
 "RSA-MD5"

	)

574 
	#LN_md5WôhRSAEn¸y±i⁄
 "md5WôhRSAEn¸y±i⁄"

	)

575 
	#NID_md5WôhRSAEn¸y±i⁄
 8

	)

576 
	#OBJ_md5WôhRSAEn¸y±i⁄
 
OBJ_pkcs1
,4L

	)

578 
	#SN_sha1WôhRSAEn¸y±i⁄
 "RSA-SHA1"

	)

579 
	#LN_sha1WôhRSAEn¸y±i⁄
 "sha1WôhRSAEn¸y±i⁄"

	)

580 
	#NID_sha1WôhRSAEn¸y±i⁄
 65

	)

581 
	#OBJ_sha1WôhRSAEn¸y±i⁄
 
OBJ_pkcs1
,5L

	)

583 
	#SN_sha256WôhRSAEn¸y±i⁄
 "RSA-SHA256"

	)

584 
	#LN_sha256WôhRSAEn¸y±i⁄
 "sha256WôhRSAEn¸y±i⁄"

	)

585 
	#NID_sha256WôhRSAEn¸y±i⁄
 668

	)

586 
	#OBJ_sha256WôhRSAEn¸y±i⁄
 
OBJ_pkcs1
,11L

	)

588 
	#SN_sha384WôhRSAEn¸y±i⁄
 "RSA-SHA384"

	)

589 
	#LN_sha384WôhRSAEn¸y±i⁄
 "sha384WôhRSAEn¸y±i⁄"

	)

590 
	#NID_sha384WôhRSAEn¸y±i⁄
 669

	)

591 
	#OBJ_sha384WôhRSAEn¸y±i⁄
 
OBJ_pkcs1
,12L

	)

593 
	#SN_sha512WôhRSAEn¸y±i⁄
 "RSA-SHA512"

	)

594 
	#LN_sha512WôhRSAEn¸y±i⁄
 "sha512WôhRSAEn¸y±i⁄"

	)

595 
	#NID_sha512WôhRSAEn¸y±i⁄
 670

	)

596 
	#OBJ_sha512WôhRSAEn¸y±i⁄
 
OBJ_pkcs1
,13L

	)

598 
	#SN_sha224WôhRSAEn¸y±i⁄
 "RSA-SHA224"

	)

599 
	#LN_sha224WôhRSAEn¸y±i⁄
 "sha224WôhRSAEn¸y±i⁄"

	)

600 
	#NID_sha224WôhRSAEn¸y±i⁄
 671

	)

601 
	#OBJ_sha224WôhRSAEn¸y±i⁄
 
OBJ_pkcs1
,14L

	)

603 
	#SN_pkcs3
 "pkcs3"

	)

604 
	#NID_pkcs3
 27

	)

605 
	#OBJ_pkcs3
 
OBJ_pkcs
,3L

	)

607 
	#LN_dhKeyAgªemít
 "dhKeyAgªemít"

	)

608 
	#NID_dhKeyAgªemít
 28

	)

609 
	#OBJ_dhKeyAgªemít
 
OBJ_pkcs3
,1L

	)

611 
	#SN_pkcs5
 "pkcs5"

	)

612 
	#NID_pkcs5
 187

	)

613 
	#OBJ_pkcs5
 
OBJ_pkcs
,5L

	)

615 
	#SN_pbeWôhMD2AndDES_CBC
 "PBE-MD2-DES"

	)

616 
	#LN_pbeWôhMD2AndDES_CBC
 "pbeWôhMD2AndDES-CBC"

	)

617 
	#NID_pbeWôhMD2AndDES_CBC
 9

	)

618 
	#OBJ_pbeWôhMD2AndDES_CBC
 
OBJ_pkcs5
,1L

	)

620 
	#SN_pbeWôhMD5AndDES_CBC
 "PBE-MD5-DES"

	)

621 
	#LN_pbeWôhMD5AndDES_CBC
 "pbeWôhMD5AndDES-CBC"

	)

622 
	#NID_pbeWôhMD5AndDES_CBC
 10

	)

623 
	#OBJ_pbeWôhMD5AndDES_CBC
 
OBJ_pkcs5
,3L

	)

625 
	#SN_pbeWôhMD2AndRC2_CBC
 "PBE-MD2-RC2-64"

	)

626 
	#LN_pbeWôhMD2AndRC2_CBC
 "pbeWôhMD2AndRC2-CBC"

	)

627 
	#NID_pbeWôhMD2AndRC2_CBC
 168

	)

628 
	#OBJ_pbeWôhMD2AndRC2_CBC
 
OBJ_pkcs5
,4L

	)

630 
	#SN_pbeWôhMD5AndRC2_CBC
 "PBE-MD5-RC2-64"

	)

631 
	#LN_pbeWôhMD5AndRC2_CBC
 "pbeWôhMD5AndRC2-CBC"

	)

632 
	#NID_pbeWôhMD5AndRC2_CBC
 169

	)

633 
	#OBJ_pbeWôhMD5AndRC2_CBC
 
OBJ_pkcs5
,6L

	)

635 
	#SN_pbeWôhSHA1AndDES_CBC
 "PBE-SHA1-DES"

	)

636 
	#LN_pbeWôhSHA1AndDES_CBC
 "pbeWôhSHA1AndDES-CBC"

	)

637 
	#NID_pbeWôhSHA1AndDES_CBC
 170

	)

638 
	#OBJ_pbeWôhSHA1AndDES_CBC
 
OBJ_pkcs5
,10L

	)

640 
	#SN_pbeWôhSHA1AndRC2_CBC
 "PBE-SHA1-RC2-64"

	)

641 
	#LN_pbeWôhSHA1AndRC2_CBC
 "pbeWôhSHA1AndRC2-CBC"

	)

642 
	#NID_pbeWôhSHA1AndRC2_CBC
 68

	)

643 
	#OBJ_pbeWôhSHA1AndRC2_CBC
 
OBJ_pkcs5
,11L

	)

645 
	#LN_id_pbkdf2
 "PBKDF2"

	)

646 
	#NID_id_pbkdf2
 69

	)

647 
	#OBJ_id_pbkdf2
 
OBJ_pkcs5
,12L

	)

649 
	#LN_pbes2
 "PBES2"

	)

650 
	#NID_pbes2
 161

	)

651 
	#OBJ_pbes2
 
OBJ_pkcs5
,13L

	)

653 
	#LN_pbmac1
 "PBMAC1"

	)

654 
	#NID_pbmac1
 162

	)

655 
	#OBJ_pbmac1
 
OBJ_pkcs5
,14L

	)

657 
	#SN_pkcs7
 "pkcs7"

	)

658 
	#NID_pkcs7
 20

	)

659 
	#OBJ_pkcs7
 
OBJ_pkcs
,7L

	)

661 
	#LN_pkcs7_d©a
 "pkcs7-d©a"

	)

662 
	#NID_pkcs7_d©a
 21

	)

663 
	#OBJ_pkcs7_d©a
 
OBJ_pkcs7
,1L

	)

665 
	#LN_pkcs7_sig√d
 "pkcs7-sig√dD©a"

	)

666 
	#NID_pkcs7_sig√d
 22

	)

667 
	#OBJ_pkcs7_sig√d
 
OBJ_pkcs7
,2L

	)

669 
	#LN_pkcs7_ívñ›ed
 "pkcs7-ívñ›edD©a"

	)

670 
	#NID_pkcs7_ívñ›ed
 23

	)

671 
	#OBJ_pkcs7_ívñ›ed
 
OBJ_pkcs7
,3L

	)

673 
	#LN_pkcs7_sig√dAndEnvñ›ed
 "pkcs7-sig√dAndEnvñ›edD©a"

	)

674 
	#NID_pkcs7_sig√dAndEnvñ›ed
 24

	)

675 
	#OBJ_pkcs7_sig√dAndEnvñ›ed
 
OBJ_pkcs7
,4L

	)

677 
	#LN_pkcs7_dige°
 "pkcs7-dige°D©a"

	)

678 
	#NID_pkcs7_dige°
 25

	)

679 
	#OBJ_pkcs7_dige°
 
OBJ_pkcs7
,5L

	)

681 
	#LN_pkcs7_í¸y±ed
 "pkcs7-í¸y±edD©a"

	)

682 
	#NID_pkcs7_í¸y±ed
 26

	)

683 
	#OBJ_pkcs7_í¸y±ed
 
OBJ_pkcs7
,6L

	)

685 
	#SN_pkcs9
 "pkcs9"

	)

686 
	#NID_pkcs9
 47

	)

687 
	#OBJ_pkcs9
 
OBJ_pkcs
,9L

	)

689 
	#LN_pkcs9_emaûAddªss
 "emaûAddªss"

	)

690 
	#NID_pkcs9_emaûAddªss
 48

	)

691 
	#OBJ_pkcs9_emaûAddªss
 
OBJ_pkcs9
,1L

	)

693 
	#LN_pkcs9_un°ru˘uªdName
 "un°ru˘uªdName"

	)

694 
	#NID_pkcs9_un°ru˘uªdName
 49

	)

695 
	#OBJ_pkcs9_un°ru˘uªdName
 
OBJ_pkcs9
,2L

	)

697 
	#LN_pkcs9_c⁄ã¡Ty≥
 "c⁄ã¡Ty≥"

	)

698 
	#NID_pkcs9_c⁄ã¡Ty≥
 50

	)

699 
	#OBJ_pkcs9_c⁄ã¡Ty≥
 
OBJ_pkcs9
,3L

	)

701 
	#LN_pkcs9_mesßgeDige°
 "mesßgeDige°"

	)

702 
	#NID_pkcs9_mesßgeDige°
 51

	)

703 
	#OBJ_pkcs9_mesßgeDige°
 
OBJ_pkcs9
,4L

	)

705 
	#LN_pkcs9_signögTime
 "signögTime"

	)

706 
	#NID_pkcs9_signögTime
 52

	)

707 
	#OBJ_pkcs9_signögTime
 
OBJ_pkcs9
,5L

	)

709 
	#LN_pkcs9_cou¡îsig«tuª
 "cou¡îsig«tuª"

	)

710 
	#NID_pkcs9_cou¡îsig«tuª
 53

	)

711 
	#OBJ_pkcs9_cou¡îsig«tuª
 
OBJ_pkcs9
,6L

	)

713 
	#LN_pkcs9_chÆÀngePassw‹d
 "chÆÀngePassw‹d"

	)

714 
	#NID_pkcs9_chÆÀngePassw‹d
 54

	)

715 
	#OBJ_pkcs9_chÆÀngePassw‹d
 
OBJ_pkcs9
,7L

	)

717 
	#LN_pkcs9_un°ru˘uªdAddªss
 "un°ru˘uªdAddªss"

	)

718 
	#NID_pkcs9_un°ru˘uªdAddªss
 55

	)

719 
	#OBJ_pkcs9_un°ru˘uªdAddªss
 
OBJ_pkcs9
,8L

	)

721 
	#LN_pkcs9_extCîtAâribuãs
 "exãndedCîtifiˇãAâribuãs"

	)

722 
	#NID_pkcs9_extCîtAâribuãs
 56

	)

723 
	#OBJ_pkcs9_extCîtAâribuãs
 
OBJ_pkcs9
,9L

	)

725 
	#SN_ext_ªq
 "extReq"

	)

726 
	#LN_ext_ªq
 "Exãnsi⁄ Reque°"

	)

727 
	#NID_ext_ªq
 172

	)

728 
	#OBJ_ext_ªq
 
OBJ_pkcs9
,14L

	)

730 
	#SN_SMIMEC≠abûôõs
 "SMIME-CAPS"

	)

731 
	#LN_SMIMEC≠abûôõs
 "S/MIME C≠abûôõs"

	)

732 
	#NID_SMIMEC≠abûôõs
 167

	)

733 
	#OBJ_SMIMEC≠abûôõs
 
OBJ_pkcs9
,15L

	)

735 
	#SN_SMIME
 "SMIME"

	)

736 
	#LN_SMIME
 "S/MIME"

	)

737 
	#NID_SMIME
 188

	)

738 
	#OBJ_SMIME
 
OBJ_pkcs9
,16L

	)

740 
	#SN_id_smime_mod
 "id-smime-mod"

	)

741 
	#NID_id_smime_mod
 189

	)

742 
	#OBJ_id_smime_mod
 
OBJ_SMIME
,0L

	)

744 
	#SN_id_smime_˘
 "id-smime-˘"

	)

745 
	#NID_id_smime_˘
 190

	)

746 
	#OBJ_id_smime_˘
 
OBJ_SMIME
,1L

	)

748 
	#SN_id_smime_Ø
 "id-smime-Ø"

	)

749 
	#NID_id_smime_Ø
 191

	)

750 
	#OBJ_id_smime_Ø
 
OBJ_SMIME
,2L

	)

752 
	#SN_id_smime_Æg
 "id-smime-Æg"

	)

753 
	#NID_id_smime_Æg
 192

	)

754 
	#OBJ_id_smime_Æg
 
OBJ_SMIME
,3L

	)

756 
	#SN_id_smime_cd
 "id-smime-cd"

	)

757 
	#NID_id_smime_cd
 193

	)

758 
	#OBJ_id_smime_cd
 
OBJ_SMIME
,4L

	)

760 
	#SN_id_smime_•q
 "id-smime-•q"

	)

761 
	#NID_id_smime_•q
 194

	)

762 
	#OBJ_id_smime_•q
 
OBJ_SMIME
,5L

	)

764 
	#SN_id_smime_˘i
 "id-smime-˘i"

	)

765 
	#NID_id_smime_˘i
 195

	)

766 
	#OBJ_id_smime_˘i
 
OBJ_SMIME
,6L

	)

768 
	#SN_id_smime_mod_cms
 "id-smime-mod-cms"

	)

769 
	#NID_id_smime_mod_cms
 196

	)

770 
	#OBJ_id_smime_mod_cms
 
OBJ_id_smime_mod
,1L

	)

772 
	#SN_id_smime_mod_ess
 "id-smime-mod-ess"

	)

773 
	#NID_id_smime_mod_ess
 197

	)

774 
	#OBJ_id_smime_mod_ess
 
OBJ_id_smime_mod
,2L

	)

776 
	#SN_id_smime_mod_oid
 "id-smime-mod-oid"

	)

777 
	#NID_id_smime_mod_oid
 198

	)

778 
	#OBJ_id_smime_mod_oid
 
OBJ_id_smime_mod
,3L

	)

780 
	#SN_id_smime_mod_msg_v3
 "id-smime-mod-msg-v3"

	)

781 
	#NID_id_smime_mod_msg_v3
 199

	)

782 
	#OBJ_id_smime_mod_msg_v3
 
OBJ_id_smime_mod
,4L

	)

784 
	#SN_id_smime_mod_ës_eSig«tuª_88
 "id-smime-mod-ës-eSig«tuª-88"

	)

785 
	#NID_id_smime_mod_ës_eSig«tuª_88
 200

	)

786 
	#OBJ_id_smime_mod_ës_eSig«tuª_88
 
OBJ_id_smime_mod
,5L

	)

788 
	#SN_id_smime_mod_ës_eSig«tuª_97
 "id-smime-mod-ës-eSig«tuª-97"

	)

789 
	#NID_id_smime_mod_ës_eSig«tuª_97
 201

	)

790 
	#OBJ_id_smime_mod_ës_eSig«tuª_97
 
OBJ_id_smime_mod
,6L

	)

792 
	#SN_id_smime_mod_ës_eSigPﬁicy_88
 "id-smime-mod-ës-eSigPﬁicy-88"

	)

793 
	#NID_id_smime_mod_ës_eSigPﬁicy_88
 202

	)

794 
	#OBJ_id_smime_mod_ës_eSigPﬁicy_88
 
OBJ_id_smime_mod
,7L

	)

796 
	#SN_id_smime_mod_ës_eSigPﬁicy_97
 "id-smime-mod-ës-eSigPﬁicy-97"

	)

797 
	#NID_id_smime_mod_ës_eSigPﬁicy_97
 203

	)

798 
	#OBJ_id_smime_mod_ës_eSigPﬁicy_97
 
OBJ_id_smime_mod
,8L

	)

800 
	#SN_id_smime_˘_ª˚ùt
 "id-smime-˘-ª˚ùt"

	)

801 
	#NID_id_smime_˘_ª˚ùt
 204

	)

802 
	#OBJ_id_smime_˘_ª˚ùt
 
OBJ_id_smime_˘
,1L

	)

804 
	#SN_id_smime_˘_authD©a
 "id-smime-˘-authD©a"

	)

805 
	#NID_id_smime_˘_authD©a
 205

	)

806 
	#OBJ_id_smime_˘_authD©a
 
OBJ_id_smime_˘
,2L

	)

808 
	#SN_id_smime_˘_publishCît
 "id-smime-˘-publishCît"

	)

809 
	#NID_id_smime_˘_publishCît
 206

	)

810 
	#OBJ_id_smime_˘_publishCît
 
OBJ_id_smime_˘
,3L

	)

812 
	#SN_id_smime_˘_TSTInfo
 "id-smime-˘-TSTInfo"

	)

813 
	#NID_id_smime_˘_TSTInfo
 207

	)

814 
	#OBJ_id_smime_˘_TSTInfo
 
OBJ_id_smime_˘
,4L

	)

816 
	#SN_id_smime_˘_TDTInfo
 "id-smime-˘-TDTInfo"

	)

817 
	#NID_id_smime_˘_TDTInfo
 208

	)

818 
	#OBJ_id_smime_˘_TDTInfo
 
OBJ_id_smime_˘
,5L

	)

820 
	#SN_id_smime_˘_c⁄ã¡Info
 "id-smime-˘-c⁄ã¡Info"

	)

821 
	#NID_id_smime_˘_c⁄ã¡Info
 209

	)

822 
	#OBJ_id_smime_˘_c⁄ã¡Info
 
OBJ_id_smime_˘
,6L

	)

824 
	#SN_id_smime_˘_DVCSReque°D©a
 "id-smime-˘-DVCSReque°D©a"

	)

825 
	#NID_id_smime_˘_DVCSReque°D©a
 210

	)

826 
	#OBJ_id_smime_˘_DVCSReque°D©a
 
OBJ_id_smime_˘
,7L

	)

828 
	#SN_id_smime_˘_DVCSRe•⁄£D©a
 "id-smime-˘-DVCSRe•⁄£D©a"

	)

829 
	#NID_id_smime_˘_DVCSRe•⁄£D©a
 211

	)

830 
	#OBJ_id_smime_˘_DVCSRe•⁄£D©a
 
OBJ_id_smime_˘
,8L

	)

832 
	#SN_id_smime_˘_com¥es£dD©a
 "id-smime-˘-com¥es£dD©a"

	)

833 
	#NID_id_smime_˘_com¥es£dD©a
 786

	)

834 
	#OBJ_id_smime_˘_com¥es£dD©a
 
OBJ_id_smime_˘
,9L

	)

836 
	#SN_id_˘_asciiTextWôhCRLF
 "id-˘-asciiTextWôhCRLF"

	)

837 
	#NID_id_˘_asciiTextWôhCRLF
 787

	)

838 
	#OBJ_id_˘_asciiTextWôhCRLF
 
OBJ_id_smime_˘
,27L

	)

840 
	#SN_id_smime_Ø_ª˚ùtReque°
 "id-smime-Ø-ª˚ùtReque°"

	)

841 
	#NID_id_smime_Ø_ª˚ùtReque°
 212

	)

842 
	#OBJ_id_smime_Ø_ª˚ùtReque°
 
OBJ_id_smime_Ø
,1L

	)

844 
	#SN_id_smime_Ø_£curôyLabñ
 "id-smime-Ø-£curôyLabñ"

	)

845 
	#NID_id_smime_Ø_£curôyLabñ
 213

	)

846 
	#OBJ_id_smime_Ø_£curôyLabñ
 
OBJ_id_smime_Ø
,2L

	)

848 
	#SN_id_smime_Ø_mlEx∑ndHi°‹y
 "id-smime-Ø-mlEx∑ndHi°‹y"

	)

849 
	#NID_id_smime_Ø_mlEx∑ndHi°‹y
 214

	)

850 
	#OBJ_id_smime_Ø_mlEx∑ndHi°‹y
 
OBJ_id_smime_Ø
,3L

	)

852 
	#SN_id_smime_Ø_c⁄ã¡Höt
 "id-smime-Ø-c⁄ã¡Höt"

	)

853 
	#NID_id_smime_Ø_c⁄ã¡Höt
 215

	)

854 
	#OBJ_id_smime_Ø_c⁄ã¡Höt
 
OBJ_id_smime_Ø
,4L

	)

856 
	#SN_id_smime_Ø_msgSigDige°
 "id-smime-Ø-msgSigDige°"

	)

857 
	#NID_id_smime_Ø_msgSigDige°
 216

	)

858 
	#OBJ_id_smime_Ø_msgSigDige°
 
OBJ_id_smime_Ø
,5L

	)

860 
	#SN_id_smime_Ø_íˇpC⁄ã¡Ty≥
 "id-smime-Ø-íˇpC⁄ã¡Ty≥"

	)

861 
	#NID_id_smime_Ø_íˇpC⁄ã¡Ty≥
 217

	)

862 
	#OBJ_id_smime_Ø_íˇpC⁄ã¡Ty≥
 
OBJ_id_smime_Ø
,6L

	)

864 
	#SN_id_smime_Ø_c⁄ã¡Idítifõr
 "id-smime-Ø-c⁄ã¡Idítifõr"

	)

865 
	#NID_id_smime_Ø_c⁄ã¡Idítifõr
 218

	)

866 
	#OBJ_id_smime_Ø_c⁄ã¡Idítifõr
 
OBJ_id_smime_Ø
,7L

	)

868 
	#SN_id_smime_Ø_macVÆue
 "id-smime-Ø-macVÆue"

	)

869 
	#NID_id_smime_Ø_macVÆue
 219

	)

870 
	#OBJ_id_smime_Ø_macVÆue
 
OBJ_id_smime_Ø
,8L

	)

872 
	#SN_id_smime_Ø_equivÆítLabñs
 "id-smime-Ø-equivÆítLabñs"

	)

873 
	#NID_id_smime_Ø_equivÆítLabñs
 220

	)

874 
	#OBJ_id_smime_Ø_equivÆítLabñs
 
OBJ_id_smime_Ø
,9L

	)

876 
	#SN_id_smime_Ø_c⁄ã¡Re„ªn˚
 "id-smime-Ø-c⁄ã¡Re„ªn˚"

	)

877 
	#NID_id_smime_Ø_c⁄ã¡Re„ªn˚
 221

	)

878 
	#OBJ_id_smime_Ø_c⁄ã¡Re„ªn˚
 
OBJ_id_smime_Ø
,10L

	)

880 
	#SN_id_smime_Ø_í¸ypKeyPªf
 "id-smime-Ø-í¸ypKeyPªf"

	)

881 
	#NID_id_smime_Ø_í¸ypKeyPªf
 222

	)

882 
	#OBJ_id_smime_Ø_í¸ypKeyPªf
 
OBJ_id_smime_Ø
,11L

	)

884 
	#SN_id_smime_Ø_signögCîtifiˇã
 "id-smime-Ø-signögCîtifiˇã"

	)

885 
	#NID_id_smime_Ø_signögCîtifiˇã
 223

	)

886 
	#OBJ_id_smime_Ø_signögCîtifiˇã
 
OBJ_id_smime_Ø
,12L

	)

888 
	#SN_id_smime_Ø_smimeEn¸y±Cîts
 "id-smime-Ø-smimeEn¸y±Cîts"

	)

889 
	#NID_id_smime_Ø_smimeEn¸y±Cîts
 224

	)

890 
	#OBJ_id_smime_Ø_smimeEn¸y±Cîts
 
OBJ_id_smime_Ø
,13L

	)

892 
	#SN_id_smime_Ø_timeSèmpTokí
 "id-smime-Ø-timeSèmpTokí"

	)

893 
	#NID_id_smime_Ø_timeSèmpTokí
 225

	)

894 
	#OBJ_id_smime_Ø_timeSèmpTokí
 
OBJ_id_smime_Ø
,14L

	)

896 
	#SN_id_smime_Ø_ës_sigPﬁicyId
 "id-smime-Ø-ës-sigPﬁicyId"

	)

897 
	#NID_id_smime_Ø_ës_sigPﬁicyId
 226

	)

898 
	#OBJ_id_smime_Ø_ës_sigPﬁicyId
 
OBJ_id_smime_Ø
,15L

	)

900 
	#SN_id_smime_Ø_ës_commômítTy≥
 "id-smime-Ø-ës-commômítTy≥"

	)

901 
	#NID_id_smime_Ø_ës_commômítTy≥
 227

	)

902 
	#OBJ_id_smime_Ø_ës_commômítTy≥
 
OBJ_id_smime_Ø
,16L

	)

904 
	#SN_id_smime_Ø_ës_sig√rLoˇti⁄
 "id-smime-Ø-ës-sig√rLoˇti⁄"

	)

905 
	#NID_id_smime_Ø_ës_sig√rLoˇti⁄
 228

	)

906 
	#OBJ_id_smime_Ø_ës_sig√rLoˇti⁄
 
OBJ_id_smime_Ø
,17L

	)

908 
	#SN_id_smime_Ø_ës_sig√rAâr
 "id-smime-Ø-ës-sig√rAâr"

	)

909 
	#NID_id_smime_Ø_ës_sig√rAâr
 229

	)

910 
	#OBJ_id_smime_Ø_ës_sig√rAâr
 
OBJ_id_smime_Ø
,18L

	)

912 
	#SN_id_smime_Ø_ës_ŸhîSigCît
 "id-smime-Ø-ës-ŸhîSigCît"

	)

913 
	#NID_id_smime_Ø_ës_ŸhîSigCît
 230

	)

914 
	#OBJ_id_smime_Ø_ës_ŸhîSigCît
 
OBJ_id_smime_Ø
,19L

	)

916 
	#SN_id_smime_Ø_ës_c⁄ã¡Time°amp
 "id-smime-Ø-ës-c⁄ã¡Time°amp"

	)

917 
	#NID_id_smime_Ø_ës_c⁄ã¡Time°amp
 231

	)

918 
	#OBJ_id_smime_Ø_ës_c⁄ã¡Time°amp
 
OBJ_id_smime_Ø
,20L

	)

920 
	#SN_id_smime_Ø_ës_CîtifiˇãRefs
 "id-smime-Ø-ës-CîtifiˇãRefs"

	)

921 
	#NID_id_smime_Ø_ës_CîtifiˇãRefs
 232

	)

922 
	#OBJ_id_smime_Ø_ës_CîtifiˇãRefs
 
OBJ_id_smime_Ø
,21L

	)

924 
	#SN_id_smime_Ø_ës_Revoˇti⁄Refs
 "id-smime-Ø-ës-Revoˇti⁄Refs"

	)

925 
	#NID_id_smime_Ø_ës_Revoˇti⁄Refs
 233

	)

926 
	#OBJ_id_smime_Ø_ës_Revoˇti⁄Refs
 
OBJ_id_smime_Ø
,22L

	)

928 
	#SN_id_smime_Ø_ës_˚πVÆues
 "id-smime-Ø-ës-˚πVÆues"

	)

929 
	#NID_id_smime_Ø_ës_˚πVÆues
 234

	)

930 
	#OBJ_id_smime_Ø_ës_˚πVÆues
 
OBJ_id_smime_Ø
,23L

	)

932 
	#SN_id_smime_Ø_ës_ªvoˇti⁄VÆues
 "id-smime-Ø-ës-ªvoˇti⁄VÆues"

	)

933 
	#NID_id_smime_Ø_ës_ªvoˇti⁄VÆues
 235

	)

934 
	#OBJ_id_smime_Ø_ës_ªvoˇti⁄VÆues
 
OBJ_id_smime_Ø
,24L

	)

936 
	#SN_id_smime_Ø_ës_escTimeSèmp
 "id-smime-Ø-ës-escTimeSèmp"

	)

937 
	#NID_id_smime_Ø_ës_escTimeSèmp
 236

	)

938 
	#OBJ_id_smime_Ø_ës_escTimeSèmp
 
OBJ_id_smime_Ø
,25L

	)

940 
	#SN_id_smime_Ø_ës_˚πCRLTime°amp
 "id-smime-Ø-ës-˚πCRLTime°amp"

	)

941 
	#NID_id_smime_Ø_ës_˚πCRLTime°amp
 237

	)

942 
	#OBJ_id_smime_Ø_ës_˚πCRLTime°amp
 
OBJ_id_smime_Ø
,26L

	)

944 
	#SN_id_smime_Ø_ës_¨chiveTimeSèmp
 "id-smime-Ø-ës-¨chiveTimeSèmp"

	)

945 
	#NID_id_smime_Ø_ës_¨chiveTimeSèmp
 238

	)

946 
	#OBJ_id_smime_Ø_ës_¨chiveTimeSèmp
 
OBJ_id_smime_Ø
,27L

	)

948 
	#SN_id_smime_Ø_sig«tuªTy≥
 "id-smime-Ø-sig«tuªTy≥"

	)

949 
	#NID_id_smime_Ø_sig«tuªTy≥
 239

	)

950 
	#OBJ_id_smime_Ø_sig«tuªTy≥
 
OBJ_id_smime_Ø
,28L

	)

952 
	#SN_id_smime_Ø_dvcs_dvc
 "id-smime-Ø-dvcs-dvc"

	)

953 
	#NID_id_smime_Ø_dvcs_dvc
 240

	)

954 
	#OBJ_id_smime_Ø_dvcs_dvc
 
OBJ_id_smime_Ø
,29L

	)

956 
	#SN_id_smime_Æg_ESDHwôh3DES
 "id-smime-Æg-ESDHwôh3DES"

	)

957 
	#NID_id_smime_Æg_ESDHwôh3DES
 241

	)

958 
	#OBJ_id_smime_Æg_ESDHwôh3DES
 
OBJ_id_smime_Æg
,1L

	)

960 
	#SN_id_smime_Æg_ESDHwôhRC2
 "id-smime-Æg-ESDHwôhRC2"

	)

961 
	#NID_id_smime_Æg_ESDHwôhRC2
 242

	)

962 
	#OBJ_id_smime_Æg_ESDHwôhRC2
 
OBJ_id_smime_Æg
,2L

	)

964 
	#SN_id_smime_Æg_3DESwøp
 "id-smime-Æg-3DESwøp"

	)

965 
	#NID_id_smime_Æg_3DESwøp
 243

	)

966 
	#OBJ_id_smime_Æg_3DESwøp
 
OBJ_id_smime_Æg
,3L

	)

968 
	#SN_id_smime_Æg_RC2wøp
 "id-smime-Æg-RC2wøp"

	)

969 
	#NID_id_smime_Æg_RC2wøp
 244

	)

970 
	#OBJ_id_smime_Æg_RC2wøp
 
OBJ_id_smime_Æg
,4L

	)

972 
	#SN_id_smime_Æg_ESDH
 "id-smime-Æg-ESDH"

	)

973 
	#NID_id_smime_Æg_ESDH
 245

	)

974 
	#OBJ_id_smime_Æg_ESDH
 
OBJ_id_smime_Æg
,5L

	)

976 
	#SN_id_smime_Æg_CMS3DESwøp
 "id-smime-Æg-CMS3DESwøp"

	)

977 
	#NID_id_smime_Æg_CMS3DESwøp
 246

	)

978 
	#OBJ_id_smime_Æg_CMS3DESwøp
 
OBJ_id_smime_Æg
,6L

	)

980 
	#SN_id_smime_Æg_CMSRC2wøp
 "id-smime-Æg-CMSRC2wøp"

	)

981 
	#NID_id_smime_Æg_CMSRC2wøp
 247

	)

982 
	#OBJ_id_smime_Æg_CMSRC2wøp
 
OBJ_id_smime_Æg
,7L

	)

984 
	#SN_id_smime_cd_ld≠
 "id-smime-cd-ld≠"

	)

985 
	#NID_id_smime_cd_ld≠
 248

	)

986 
	#OBJ_id_smime_cd_ld≠
 
OBJ_id_smime_cd
,1L

	)

988 
	#SN_id_smime_•q_ës_sqt_uri
 "id-smime-•q-ës-sqt-uri"

	)

989 
	#NID_id_smime_•q_ës_sqt_uri
 249

	)

990 
	#OBJ_id_smime_•q_ës_sqt_uri
 
OBJ_id_smime_•q
,1L

	)

992 
	#SN_id_smime_•q_ës_sqt_unŸi˚
 "id-smime-•q-ës-sqt-unŸi˚"

	)

993 
	#NID_id_smime_•q_ës_sqt_unŸi˚
 250

	)

994 
	#OBJ_id_smime_•q_ës_sqt_unŸi˚
 
OBJ_id_smime_•q
,2L

	)

996 
	#SN_id_smime_˘i_ës_¥oofOfOrigö
 "id-smime-˘i-ës-¥oofOfOrigö"

	)

997 
	#NID_id_smime_˘i_ës_¥oofOfOrigö
 251

	)

998 
	#OBJ_id_smime_˘i_ës_¥oofOfOrigö
 
OBJ_id_smime_˘i
,1L

	)

1000 
	#SN_id_smime_˘i_ës_¥oofOfRe˚ùt
 "id-smime-˘i-ës-¥oofOfRe˚ùt"

	)

1001 
	#NID_id_smime_˘i_ës_¥oofOfRe˚ùt
 252

	)

1002 
	#OBJ_id_smime_˘i_ës_¥oofOfRe˚ùt
 
OBJ_id_smime_˘i
,2L

	)

1004 
	#SN_id_smime_˘i_ës_¥oofOfDñivîy
 "id-smime-˘i-ës-¥oofOfDñivîy"

	)

1005 
	#NID_id_smime_˘i_ës_¥oofOfDñivîy
 253

	)

1006 
	#OBJ_id_smime_˘i_ës_¥oofOfDñivîy
 
OBJ_id_smime_˘i
,3L

	)

1008 
	#SN_id_smime_˘i_ës_¥oofOfSídî
 "id-smime-˘i-ës-¥oofOfSídî"

	)

1009 
	#NID_id_smime_˘i_ës_¥oofOfSídî
 254

	)

1010 
	#OBJ_id_smime_˘i_ës_¥oofOfSídî
 
OBJ_id_smime_˘i
,4L

	)

1012 
	#SN_id_smime_˘i_ës_¥oofOfAµrovÆ
 "id-smime-˘i-ës-¥oofOfAµrovÆ"

	)

1013 
	#NID_id_smime_˘i_ës_¥oofOfAµrovÆ
 255

	)

1014 
	#OBJ_id_smime_˘i_ës_¥oofOfAµrovÆ
 
OBJ_id_smime_˘i
,5L

	)

1016 
	#SN_id_smime_˘i_ës_¥oofOfCª©i⁄
 "id-smime-˘i-ës-¥oofOfCª©i⁄"

	)

1017 
	#NID_id_smime_˘i_ës_¥oofOfCª©i⁄
 256

	)

1018 
	#OBJ_id_smime_˘i_ës_¥oofOfCª©i⁄
 
OBJ_id_smime_˘i
,6L

	)

1020 
	#LN_‰õndlyName
 "‰õndlyName"

	)

1021 
	#NID_‰õndlyName
 156

	)

1022 
	#OBJ_‰õndlyName
 
OBJ_pkcs9
,20L

	)

1024 
	#LN_loˇlKeyID
 "loˇlKeyID"

	)

1025 
	#NID_loˇlKeyID
 157

	)

1026 
	#OBJ_loˇlKeyID
 
OBJ_pkcs9
,21L

	)

1028 
	#SN_ms_c•_«me
 "CSPName"

	)

1029 
	#LN_ms_c•_«me
 "Mi¸oso· CSP Name"

	)

1030 
	#NID_ms_c•_«me
 417

	)

1031 
	#OBJ_ms_c•_«me
 1L,3L,6L,1L,4L,1L,311L,17L,1L

	)

1033 
	#SN_LoˇlKeySë
 "LoˇlKeySë"

	)

1034 
	#LN_LoˇlKeySë
 "Mi¸oso· Loˇ»Key së"

	)

1035 
	#NID_LoˇlKeySë
 856

	)

1036 
	#OBJ_LoˇlKeySë
 1L,3L,6L,1L,4L,1L,311L,17L,2L

	)

1038 
	#OBJ_˚πTy≥s
 
OBJ_pkcs9
,22L

	)

1040 
	#LN_x509Cîtifiˇã
 "x509Cîtifiˇã"

	)

1041 
	#NID_x509Cîtifiˇã
 158

	)

1042 
	#OBJ_x509Cîtifiˇã
 
OBJ_˚πTy≥s
,1L

	)

1044 
	#LN_sdsiCîtifiˇã
 "sdsiCîtifiˇã"

	)

1045 
	#NID_sdsiCîtifiˇã
 159

	)

1046 
	#OBJ_sdsiCîtifiˇã
 
OBJ_˚πTy≥s
,2L

	)

1048 
	#OBJ_¸lTy≥s
 
OBJ_pkcs9
,23L

	)

1050 
	#LN_x509Cæ
 "x509Cæ"

	)

1051 
	#NID_x509Cæ
 160

	)

1052 
	#OBJ_x509Cæ
 
OBJ_¸lTy≥s
,1L

	)

1054 
	#OBJ_pkcs12
 
OBJ_pkcs
,12L

	)

1056 
	#OBJ_pkcs12_pbeids
 
OBJ_pkcs12
,1L

	)

1058 
	#SN_pbe_WôhSHA1And128BôRC4
 "PBE-SHA1-RC4-128"

	)

1059 
	#LN_pbe_WôhSHA1And128BôRC4
 "pbeWôhSHA1And128BôRC4"

	)

1060 
	#NID_pbe_WôhSHA1And128BôRC4
 144

	)

1061 
	#OBJ_pbe_WôhSHA1And128BôRC4
 
OBJ_pkcs12_pbeids
,1L

	)

1063 
	#SN_pbe_WôhSHA1And40BôRC4
 "PBE-SHA1-RC4-40"

	)

1064 
	#LN_pbe_WôhSHA1And40BôRC4
 "pbeWôhSHA1And40BôRC4"

	)

1065 
	#NID_pbe_WôhSHA1And40BôRC4
 145

	)

1066 
	#OBJ_pbe_WôhSHA1And40BôRC4
 
OBJ_pkcs12_pbeids
,2L

	)

1068 
	#SN_pbe_WôhSHA1And3_Key_TrùÀDES_CBC
 "PBE-SHA1-3DES"

	)

1069 
	#LN_pbe_WôhSHA1And3_Key_TrùÀDES_CBC
 "pbeWôhSHA1And3-KeyTrùÀDES-CBC"

	)

1070 
	#NID_pbe_WôhSHA1And3_Key_TrùÀDES_CBC
 146

	)

1071 
	#OBJ_pbe_WôhSHA1And3_Key_TrùÀDES_CBC
 
OBJ_pkcs12_pbeids
,3L

	)

1073 
	#SN_pbe_WôhSHA1And2_Key_TrùÀDES_CBC
 "PBE-SHA1-2DES"

	)

1074 
	#LN_pbe_WôhSHA1And2_Key_TrùÀDES_CBC
 "pbeWôhSHA1And2-KeyTrùÀDES-CBC"

	)

1075 
	#NID_pbe_WôhSHA1And2_Key_TrùÀDES_CBC
 147

	)

1076 
	#OBJ_pbe_WôhSHA1And2_Key_TrùÀDES_CBC
 
OBJ_pkcs12_pbeids
,4L

	)

1078 
	#SN_pbe_WôhSHA1And128BôRC2_CBC
 "PBE-SHA1-RC2-128"

	)

1079 
	#LN_pbe_WôhSHA1And128BôRC2_CBC
 "pbeWôhSHA1And128BôRC2-CBC"

	)

1080 
	#NID_pbe_WôhSHA1And128BôRC2_CBC
 148

	)

1081 
	#OBJ_pbe_WôhSHA1And128BôRC2_CBC
 
OBJ_pkcs12_pbeids
,5L

	)

1083 
	#SN_pbe_WôhSHA1And40BôRC2_CBC
 "PBE-SHA1-RC2-40"

	)

1084 
	#LN_pbe_WôhSHA1And40BôRC2_CBC
 "pbeWôhSHA1And40BôRC2-CBC"

	)

1085 
	#NID_pbe_WôhSHA1And40BôRC2_CBC
 149

	)

1086 
	#OBJ_pbe_WôhSHA1And40BôRC2_CBC
 
OBJ_pkcs12_pbeids
,6L

	)

1088 
	#OBJ_pkcs12_Vîsi⁄1
 
OBJ_pkcs12
,10L

	)

1090 
	#OBJ_pkcs12_BagIds
 
OBJ_pkcs12_Vîsi⁄1
,1L

	)

1092 
	#LN_keyBag
 "keyBag"

	)

1093 
	#NID_keyBag
 150

	)

1094 
	#OBJ_keyBag
 
OBJ_pkcs12_BagIds
,1L

	)

1096 
	#LN_pkcs8ShroudedKeyBag
 "pkcs8ShroudedKeyBag"

	)

1097 
	#NID_pkcs8ShroudedKeyBag
 151

	)

1098 
	#OBJ_pkcs8ShroudedKeyBag
 
OBJ_pkcs12_BagIds
,2L

	)

1100 
	#LN_˚πBag
 "˚πBag"

	)

1101 
	#NID_˚πBag
 152

	)

1102 
	#OBJ_˚πBag
 
OBJ_pkcs12_BagIds
,3L

	)

1104 
	#LN_¸lBag
 "¸lBag"

	)

1105 
	#NID_¸lBag
 153

	)

1106 
	#OBJ_¸lBag
 
OBJ_pkcs12_BagIds
,4L

	)

1108 
	#LN_£¸ëBag
 "£¸ëBag"

	)

1109 
	#NID_£¸ëBag
 154

	)

1110 
	#OBJ_£¸ëBag
 
OBJ_pkcs12_BagIds
,5L

	)

1112 
	#LN_ß„C⁄ã¡sBag
 "ß„C⁄ã¡sBag"

	)

1113 
	#NID_ß„C⁄ã¡sBag
 155

	)

1114 
	#OBJ_ß„C⁄ã¡sBag
 
OBJ_pkcs12_BagIds
,6L

	)

1116 
	#SN_md2
 "MD2"

	)

1117 
	#LN_md2
 "md2"

	)

1118 
	#NID_md2
 3

	)

1119 
	#OBJ_md2
 
OBJ_rßdsi
,2L,2L

	)

1121 
	#SN_md4
 "MD4"

	)

1122 
	#LN_md4
 "md4"

	)

1123 
	#NID_md4
 257

	)

1124 
	#OBJ_md4
 
OBJ_rßdsi
,2L,4L

	)

1126 
	#SN_md5
 "MD5"

	)

1127 
	#LN_md5
 "md5"

	)

1128 
	#NID_md5
 4

	)

1129 
	#OBJ_md5
 
OBJ_rßdsi
,2L,5L

	)

1131 
	#SN_md5_sha1
 "MD5-SHA1"

	)

1132 
	#LN_md5_sha1
 "md5-sha1"

	)

1133 
	#NID_md5_sha1
 114

	)

1135 
	#LN_hmacWôhMD5
 "hmacWôhMD5"

	)

1136 
	#NID_hmacWôhMD5
 797

	)

1137 
	#OBJ_hmacWôhMD5
 
OBJ_rßdsi
,2L,6L

	)

1139 
	#LN_hmacWôhSHA1
 "hmacWôhSHA1"

	)

1140 
	#NID_hmacWôhSHA1
 163

	)

1141 
	#OBJ_hmacWôhSHA1
 
OBJ_rßdsi
,2L,7L

	)

1143 
	#LN_hmacWôhSHA224
 "hmacWôhSHA224"

	)

1144 
	#NID_hmacWôhSHA224
 798

	)

1145 
	#OBJ_hmacWôhSHA224
 
OBJ_rßdsi
,2L,8L

	)

1147 
	#LN_hmacWôhSHA256
 "hmacWôhSHA256"

	)

1148 
	#NID_hmacWôhSHA256
 799

	)

1149 
	#OBJ_hmacWôhSHA256
 
OBJ_rßdsi
,2L,9L

	)

1151 
	#LN_hmacWôhSHA384
 "hmacWôhSHA384"

	)

1152 
	#NID_hmacWôhSHA384
 800

	)

1153 
	#OBJ_hmacWôhSHA384
 
OBJ_rßdsi
,2L,10L

	)

1155 
	#LN_hmacWôhSHA512
 "hmacWôhSHA512"

	)

1156 
	#NID_hmacWôhSHA512
 801

	)

1157 
	#OBJ_hmacWôhSHA512
 
OBJ_rßdsi
,2L,11L

	)

1159 
	#SN_rc2_cbc
 "RC2-CBC"

	)

1160 
	#LN_rc2_cbc
 "rc2-cbc"

	)

1161 
	#NID_rc2_cbc
 37

	)

1162 
	#OBJ_rc2_cbc
 
OBJ_rßdsi
,3L,2L

	)

1164 
	#SN_rc2_ecb
 "RC2-ECB"

	)

1165 
	#LN_rc2_ecb
 "rc2-ecb"

	)

1166 
	#NID_rc2_ecb
 38

	)

1168 
	#SN_rc2_cfb64
 "RC2-CFB"

	)

1169 
	#LN_rc2_cfb64
 "rc2-cfb"

	)

1170 
	#NID_rc2_cfb64
 39

	)

1172 
	#SN_rc2_ofb64
 "RC2-OFB"

	)

1173 
	#LN_rc2_ofb64
 "rc2-ofb"

	)

1174 
	#NID_rc2_ofb64
 40

	)

1176 
	#SN_rc2_40_cbc
 "RC2-40-CBC"

	)

1177 
	#LN_rc2_40_cbc
 "rc2-40-cbc"

	)

1178 
	#NID_rc2_40_cbc
 98

	)

1180 
	#SN_rc2_64_cbc
 "RC2-64-CBC"

	)

1181 
	#LN_rc2_64_cbc
 "rc2-64-cbc"

	)

1182 
	#NID_rc2_64_cbc
 166

	)

1184 
	#SN_rc4
 "RC4"

	)

1185 
	#LN_rc4
 "rc4"

	)

1186 
	#NID_rc4
 5

	)

1187 
	#OBJ_rc4
 
OBJ_rßdsi
,3L,4L

	)

1189 
	#SN_rc4_40
 "RC4-40"

	)

1190 
	#LN_rc4_40
 "rc4-40"

	)

1191 
	#NID_rc4_40
 97

	)

1193 
	#SN_des_ede3_cbc
 "DES-EDE3-CBC"

	)

1194 
	#LN_des_ede3_cbc
 "des-ede3-cbc"

	)

1195 
	#NID_des_ede3_cbc
 44

	)

1196 
	#OBJ_des_ede3_cbc
 
OBJ_rßdsi
,3L,7L

	)

1198 
	#SN_rc5_cbc
 "RC5-CBC"

	)

1199 
	#LN_rc5_cbc
 "rc5-cbc"

	)

1200 
	#NID_rc5_cbc
 120

	)

1201 
	#OBJ_rc5_cbc
 
OBJ_rßdsi
,3L,8L

	)

1203 
	#SN_rc5_ecb
 "RC5-ECB"

	)

1204 
	#LN_rc5_ecb
 "rc5-ecb"

	)

1205 
	#NID_rc5_ecb
 121

	)

1207 
	#SN_rc5_cfb64
 "RC5-CFB"

	)

1208 
	#LN_rc5_cfb64
 "rc5-cfb"

	)

1209 
	#NID_rc5_cfb64
 122

	)

1211 
	#SN_rc5_ofb64
 "RC5-OFB"

	)

1212 
	#LN_rc5_ofb64
 "rc5-ofb"

	)

1213 
	#NID_rc5_ofb64
 123

	)

1215 
	#SN_ms_ext_ªq
 "msExtReq"

	)

1216 
	#LN_ms_ext_ªq
 "Mi¸oso· Exãnsi⁄ Reque°"

	)

1217 
	#NID_ms_ext_ªq
 171

	)

1218 
	#OBJ_ms_ext_ªq
 1L,3L,6L,1L,4L,1L,311L,2L,1L,14L

	)

1220 
	#SN_ms_code_öd
 "msCodeInd"

	)

1221 
	#LN_ms_code_öd
 "Mi¸oso· IndividuÆ CodêSignög"

	)

1222 
	#NID_ms_code_öd
 134

	)

1223 
	#OBJ_ms_code_öd
 1L,3L,6L,1L,4L,1L,311L,2L,1L,21L

	)

1225 
	#SN_ms_code_com
 "msCodeCom"

	)

1226 
	#LN_ms_code_com
 "Mi¸oso· Commîcü»CodêSignög"

	)

1227 
	#NID_ms_code_com
 135

	)

1228 
	#OBJ_ms_code_com
 1L,3L,6L,1L,4L,1L,311L,2L,1L,22L

	)

1230 
	#SN_ms_˘l_sign
 "msCTLSign"

	)

1231 
	#LN_ms_˘l_sign
 "Mi¸oso· Tru° Li° Signög"

	)

1232 
	#NID_ms_˘l_sign
 136

	)

1233 
	#OBJ_ms_˘l_sign
 1L,3L,6L,1L,4L,1L,311L,10L,3L,1L

	)

1235 
	#SN_ms_sgc
 "msSGC"

	)

1236 
	#LN_ms_sgc
 "Mi¸oso· Sîvî G©ed Cry±o"

	)

1237 
	#NID_ms_sgc
 137

	)

1238 
	#OBJ_ms_sgc
 1L,3L,6L,1L,4L,1L,311L,10L,3L,3L

	)

1240 
	#SN_ms_efs
 "msEFS"

	)

1241 
	#LN_ms_efs
 "Mi¸oso· En¸y±ed FûêSy°em"

	)

1242 
	#NID_ms_efs
 138

	)

1243 
	#OBJ_ms_efs
 1L,3L,6L,1L,4L,1L,311L,10L,3L,4L

	)

1245 
	#SN_ms_sm¨tˇrd_logö
 "msSm¨tˇrdLogö"

	)

1246 
	#LN_ms_sm¨tˇrd_logö
 "Mi¸oso· Sm¨tˇrdlogö"

	)

1247 
	#NID_ms_sm¨tˇrd_logö
 648

	)

1248 
	#OBJ_ms_sm¨tˇrd_logö
 1L,3L,6L,1L,4L,1L,311L,20L,2L,2L

	)

1250 
	#SN_ms_u≤
 "msUPN"

	)

1251 
	#LN_ms_u≤
 "Mi¸oso· Univîß»PröcùÆ Name"

	)

1252 
	#NID_ms_u≤
 649

	)

1253 
	#OBJ_ms_u≤
 1L,3L,6L,1L,4L,1L,311L,20L,2L,3L

	)

1255 
	#SN_idó_cbc
 "IDEA-CBC"

	)

1256 
	#LN_idó_cbc
 "idó-cbc"

	)

1257 
	#NID_idó_cbc
 34

	)

1258 
	#OBJ_idó_cbc
 1L,3L,6L,1L,4L,1L,188L,7L,1L,1L,2L

	)

1260 
	#SN_idó_ecb
 "IDEA-ECB"

	)

1261 
	#LN_idó_ecb
 "idó-ecb"

	)

1262 
	#NID_idó_ecb
 36

	)

1264 
	#SN_idó_cfb64
 "IDEA-CFB"

	)

1265 
	#LN_idó_cfb64
 "idó-cfb"

	)

1266 
	#NID_idó_cfb64
 35

	)

1268 
	#SN_idó_ofb64
 "IDEA-OFB"

	)

1269 
	#LN_idó_ofb64
 "idó-ofb"

	)

1270 
	#NID_idó_ofb64
 46

	)

1272 
	#SN_bf_cbc
 "BF-CBC"

	)

1273 
	#LN_bf_cbc
 "bf-cbc"

	)

1274 
	#NID_bf_cbc
 91

	)

1275 
	#OBJ_bf_cbc
 1L,3L,6L,1L,4L,1L,3029L,1L,2L

	)

1277 
	#SN_bf_ecb
 "BF-ECB"

	)

1278 
	#LN_bf_ecb
 "bf-ecb"

	)

1279 
	#NID_bf_ecb
 92

	)

1281 
	#SN_bf_cfb64
 "BF-CFB"

	)

1282 
	#LN_bf_cfb64
 "bf-cfb"

	)

1283 
	#NID_bf_cfb64
 93

	)

1285 
	#SN_bf_ofb64
 "BF-OFB"

	)

1286 
	#LN_bf_ofb64
 "bf-ofb"

	)

1287 
	#NID_bf_ofb64
 94

	)

1289 
	#SN_id_pkix
 "PKIX"

	)

1290 
	#NID_id_pkix
 127

	)

1291 
	#OBJ_id_pkix
 1L,3L,6L,1L,5L,5L,7L

	)

1293 
	#SN_id_pkix_mod
 "id-pkix-mod"

	)

1294 
	#NID_id_pkix_mod
 258

	)

1295 
	#OBJ_id_pkix_mod
 
OBJ_id_pkix
,0L

	)

1297 
	#SN_id_≥
 "id-≥"

	)

1298 
	#NID_id_≥
 175

	)

1299 
	#OBJ_id_≥
 
OBJ_id_pkix
,1L

	)

1301 
	#SN_id_qt
 "id-qt"

	)

1302 
	#NID_id_qt
 259

	)

1303 
	#OBJ_id_qt
 
OBJ_id_pkix
,2L

	)

1305 
	#SN_id_kp
 "id-kp"

	)

1306 
	#NID_id_kp
 128

	)

1307 
	#OBJ_id_kp
 
OBJ_id_pkix
,3L

	)

1309 
	#SN_id_ô
 "id-ô"

	)

1310 
	#NID_id_ô
 260

	)

1311 
	#OBJ_id_ô
 
OBJ_id_pkix
,4L

	)

1313 
	#SN_id_pkù
 "id-pkù"

	)

1314 
	#NID_id_pkù
 261

	)

1315 
	#OBJ_id_pkù
 
OBJ_id_pkix
,5L

	)

1317 
	#SN_id_Æg
 "id-Æg"

	)

1318 
	#NID_id_Æg
 262

	)

1319 
	#OBJ_id_Æg
 
OBJ_id_pkix
,6L

	)

1321 
	#SN_id_cmc
 "id-cmc"

	)

1322 
	#NID_id_cmc
 263

	)

1323 
	#OBJ_id_cmc
 
OBJ_id_pkix
,7L

	)

1325 
	#SN_id_⁄
 "id-⁄"

	)

1326 
	#NID_id_⁄
 264

	)

1327 
	#OBJ_id_⁄
 
OBJ_id_pkix
,8L

	)

1329 
	#SN_id_pda
 "id-pda"

	)

1330 
	#NID_id_pda
 265

	)

1331 
	#OBJ_id_pda
 
OBJ_id_pkix
,9L

	)

1333 
	#SN_id_aˇ
 "id-aˇ"

	)

1334 
	#NID_id_aˇ
 266

	)

1335 
	#OBJ_id_aˇ
 
OBJ_id_pkix
,10L

	)

1337 
	#SN_id_qcs
 "id-qcs"

	)

1338 
	#NID_id_qcs
 267

	)

1339 
	#OBJ_id_qcs
 
OBJ_id_pkix
,11L

	)

1341 
	#SN_id_c˘
 "id-c˘"

	)

1342 
	#NID_id_c˘
 268

	)

1343 
	#OBJ_id_c˘
 
OBJ_id_pkix
,12L

	)

1345 
	#SN_id_µl
 "id-µl"

	)

1346 
	#NID_id_µl
 662

	)

1347 
	#OBJ_id_µl
 
OBJ_id_pkix
,21L

	)

1349 
	#SN_id_ad
 "id-ad"

	)

1350 
	#NID_id_ad
 176

	)

1351 
	#OBJ_id_ad
 
OBJ_id_pkix
,48L

	)

1353 
	#SN_id_pkix1_ex∂icô_88
 "id-pkix1-ex∂icô-88"

	)

1354 
	#NID_id_pkix1_ex∂icô_88
 269

	)

1355 
	#OBJ_id_pkix1_ex∂icô_88
 
OBJ_id_pkix_mod
,1L

	)

1357 
	#SN_id_pkix1_im∂icô_88
 "id-pkix1-im∂icô-88"

	)

1358 
	#NID_id_pkix1_im∂icô_88
 270

	)

1359 
	#OBJ_id_pkix1_im∂icô_88
 
OBJ_id_pkix_mod
,2L

	)

1361 
	#SN_id_pkix1_ex∂icô_93
 "id-pkix1-ex∂icô-93"

	)

1362 
	#NID_id_pkix1_ex∂icô_93
 271

	)

1363 
	#OBJ_id_pkix1_ex∂icô_93
 
OBJ_id_pkix_mod
,3L

	)

1365 
	#SN_id_pkix1_im∂icô_93
 "id-pkix1-im∂icô-93"

	)

1366 
	#NID_id_pkix1_im∂icô_93
 272

	)

1367 
	#OBJ_id_pkix1_im∂icô_93
 
OBJ_id_pkix_mod
,4L

	)

1369 
	#SN_id_mod_¸mf
 "id-mod-¸mf"

	)

1370 
	#NID_id_mod_¸mf
 273

	)

1371 
	#OBJ_id_mod_¸mf
 
OBJ_id_pkix_mod
,5L

	)

1373 
	#SN_id_mod_cmc
 "id-mod-cmc"

	)

1374 
	#NID_id_mod_cmc
 274

	)

1375 
	#OBJ_id_mod_cmc
 
OBJ_id_pkix_mod
,6L

	)

1377 
	#SN_id_mod_kó_¥ofûe_88
 "id-mod-kó-¥ofûe-88"

	)

1378 
	#NID_id_mod_kó_¥ofûe_88
 275

	)

1379 
	#OBJ_id_mod_kó_¥ofûe_88
 
OBJ_id_pkix_mod
,7L

	)

1381 
	#SN_id_mod_kó_¥ofûe_93
 "id-mod-kó-¥ofûe-93"

	)

1382 
	#NID_id_mod_kó_¥ofûe_93
 276

	)

1383 
	#OBJ_id_mod_kó_¥ofûe_93
 
OBJ_id_pkix_mod
,8L

	)

1385 
	#SN_id_mod_cmp
 "id-mod-cmp"

	)

1386 
	#NID_id_mod_cmp
 277

	)

1387 
	#OBJ_id_mod_cmp
 
OBJ_id_pkix_mod
,9L

	)

1389 
	#SN_id_mod_quÆifõd_˚π_88
 "id-mod-quÆifõd-˚π-88"

	)

1390 
	#NID_id_mod_quÆifõd_˚π_88
 278

	)

1391 
	#OBJ_id_mod_quÆifõd_˚π_88
 
OBJ_id_pkix_mod
,10L

	)

1393 
	#SN_id_mod_quÆifõd_˚π_93
 "id-mod-quÆifõd-˚π-93"

	)

1394 
	#NID_id_mod_quÆifõd_˚π_93
 279

	)

1395 
	#OBJ_id_mod_quÆifõd_˚π_93
 
OBJ_id_pkix_mod
,11L

	)

1397 
	#SN_id_mod_©åibuã_˚π
 "id-mod-©åibuã-˚π"

	)

1398 
	#NID_id_mod_©åibuã_˚π
 280

	)

1399 
	#OBJ_id_mod_©åibuã_˚π
 
OBJ_id_pkix_mod
,12L

	)

1401 
	#SN_id_mod_time°amp_¥Ÿocﬁ
 "id-mod-time°amp-¥Ÿocﬁ"

	)

1402 
	#NID_id_mod_time°amp_¥Ÿocﬁ
 281

	)

1403 
	#OBJ_id_mod_time°amp_¥Ÿocﬁ
 
OBJ_id_pkix_mod
,13L

	)

1405 
	#SN_id_mod_oc•
 "id-mod-oc•"

	)

1406 
	#NID_id_mod_oc•
 282

	)

1407 
	#OBJ_id_mod_oc•
 
OBJ_id_pkix_mod
,14L

	)

1409 
	#SN_id_mod_dvcs
 "id-mod-dvcs"

	)

1410 
	#NID_id_mod_dvcs
 283

	)

1411 
	#OBJ_id_mod_dvcs
 
OBJ_id_pkix_mod
,15L

	)

1413 
	#SN_id_mod_cmp2000
 "id-mod-cmp2000"

	)

1414 
	#NID_id_mod_cmp2000
 284

	)

1415 
	#OBJ_id_mod_cmp2000
 
OBJ_id_pkix_mod
,16L

	)

1417 
	#SN_öfo_ac˚ss
 "auth‹ôyInfoAc˚ss"

	)

1418 
	#LN_öfo_ac˚ss
 "Auth‹ôy Inf‹m©i⁄ Ac˚ss"

	)

1419 
	#NID_öfo_ac˚ss
 177

	)

1420 
	#OBJ_öfo_ac˚ss
 
OBJ_id_≥
,1L

	)

1422 
	#SN_biomëricInfo
 "biomëricInfo"

	)

1423 
	#LN_biomëricInfo
 "Biomëri¯Info"

	)

1424 
	#NID_biomëricInfo
 285

	)

1425 
	#OBJ_biomëricInfo
 
OBJ_id_≥
,2L

	)

1427 
	#SN_qcSèãmíts
 "qcSèãmíts"

	)

1428 
	#NID_qcSèãmíts
 286

	)

1429 
	#OBJ_qcSèãmíts
 
OBJ_id_≥
,3L

	)

1431 
	#SN_ac_audôE¡ôy
 "ac-audôE¡ôy"

	)

1432 
	#NID_ac_audôE¡ôy
 287

	)

1433 
	#OBJ_ac_audôE¡ôy
 
OBJ_id_≥
,4L

	)

1435 
	#SN_ac_èrgëög
 "ac-èrgëög"

	)

1436 
	#NID_ac_èrgëög
 288

	)

1437 
	#OBJ_ac_èrgëög
 
OBJ_id_≥
,5L

	)

1439 
	#SN_ØC⁄åﬁs
 "ØC⁄åﬁs"

	)

1440 
	#NID_ØC⁄åﬁs
 289

	)

1441 
	#OBJ_ØC⁄åﬁs
 
OBJ_id_≥
,6L

	)

1443 
	#SN_sbgp_ùAddrBlock
 "sbgp-ùAddrBlock"

	)

1444 
	#NID_sbgp_ùAddrBlock
 290

	)

1445 
	#OBJ_sbgp_ùAddrBlock
 
OBJ_id_≥
,7L

	)

1447 
	#SN_sbgp_aut⁄omousSysNum
 "sbgp-aut⁄omousSysNum"

	)

1448 
	#NID_sbgp_aut⁄omousSysNum
 291

	)

1449 
	#OBJ_sbgp_aut⁄omousSysNum
 
OBJ_id_≥
,8L

	)

1451 
	#SN_sbgp_rouãrIdítifõr
 "sbgp-rouãrIdítifõr"

	)

1452 
	#NID_sbgp_rouãrIdítifõr
 292

	)

1453 
	#OBJ_sbgp_rouãrIdítifõr
 
OBJ_id_≥
,9L

	)

1455 
	#SN_ac_¥oxyög
 "ac-¥oxyög"

	)

1456 
	#NID_ac_¥oxyög
 397

	)

1457 
	#OBJ_ac_¥oxyög
 
OBJ_id_≥
,10L

	)

1459 
	#SN_söfo_ac˚ss
 "subje˘InfoAc˚ss"

	)

1460 
	#LN_söfo_ac˚ss
 "Subje˘ Inf‹m©i⁄ Ac˚ss"

	)

1461 
	#NID_söfo_ac˚ss
 398

	)

1462 
	#OBJ_söfo_ac˚ss
 
OBJ_id_≥
,11L

	)

1464 
	#SN_¥oxyCîtInfo
 "¥oxyCîtInfo"

	)

1465 
	#LN_¥oxyCîtInfo
 "Proxy Cîtifiˇã Inf‹m©i⁄"

	)

1466 
	#NID_¥oxyCîtInfo
 663

	)

1467 
	#OBJ_¥oxyCîtInfo
 
OBJ_id_≥
,14L

	)

1469 
	#SN_id_qt_˝s
 "id-qt-˝s"

	)

1470 
	#LN_id_qt_˝s
 "Pﬁicy QuÆifõ∏CPS"

	)

1471 
	#NID_id_qt_˝s
 164

	)

1472 
	#OBJ_id_qt_˝s
 
OBJ_id_qt
,1L

	)

1474 
	#SN_id_qt_unŸi˚
 "id-qt-unŸi˚"

	)

1475 
	#LN_id_qt_unŸi˚
 "Pﬁicy QuÆifõ∏U£∏NŸi˚"

	)

1476 
	#NID_id_qt_unŸi˚
 165

	)

1477 
	#OBJ_id_qt_unŸi˚
 
OBJ_id_qt
,2L

	)

1479 
	#SN_ãxtNŸi˚
 "ãxtNŸi˚"

	)

1480 
	#NID_ãxtNŸi˚
 293

	)

1481 
	#OBJ_ãxtNŸi˚
 
OBJ_id_qt
,3L

	)

1483 
	#SN_£rvî_auth
 "£rvîAuth"

	)

1484 
	#LN_£rvî_auth
 "TLS Web Sîvî Authítiˇti⁄"

	)

1485 
	#NID_£rvî_auth
 129

	)

1486 
	#OBJ_£rvî_auth
 
OBJ_id_kp
,1L

	)

1488 
	#SN_˛õ¡_auth
 "˛õ¡Auth"

	)

1489 
	#LN_˛õ¡_auth
 "TLS Web Clõ¡ Authítiˇti⁄"

	)

1490 
	#NID_˛õ¡_auth
 130

	)

1491 
	#OBJ_˛õ¡_auth
 
OBJ_id_kp
,2L

	)

1493 
	#SN_code_sign
 "codeSignög"

	)

1494 
	#LN_code_sign
 "CodêSignög"

	)

1495 
	#NID_code_sign
 131

	)

1496 
	#OBJ_code_sign
 
OBJ_id_kp
,3L

	)

1498 
	#SN_emaû_¥Ÿe˘
 "emaûPrŸe˘i⁄"

	)

1499 
	#LN_emaû_¥Ÿe˘
 "E-maû PrŸe˘i⁄"

	)

1500 
	#NID_emaû_¥Ÿe˘
 132

	)

1501 
	#OBJ_emaû_¥Ÿe˘
 
OBJ_id_kp
,4L

	)

1503 
	#SN_ù£cEndSy°em
 "ù£cEndSy°em"

	)

1504 
	#LN_ù£cEndSy°em
 "IPSe¯End Sy°em"

	)

1505 
	#NID_ù£cEndSy°em
 294

	)

1506 
	#OBJ_ù£cEndSy°em
 
OBJ_id_kp
,5L

	)

1508 
	#SN_ù£cTu¬ñ
 "ù£cTu¬ñ"

	)

1509 
	#LN_ù£cTu¬ñ
 "IPSe¯Tu¬ñ"

	)

1510 
	#NID_ù£cTu¬ñ
 295

	)

1511 
	#OBJ_ù£cTu¬ñ
 
OBJ_id_kp
,6L

	)

1513 
	#SN_ù£cU£r
 "ù£cU£r"

	)

1514 
	#LN_ù£cU£r
 "IPSe¯U£r"

	)

1515 
	#NID_ù£cU£r
 296

	)

1516 
	#OBJ_ù£cU£r
 
OBJ_id_kp
,7L

	)

1518 
	#SN_time_°amp
 "timeSèmpög"

	)

1519 
	#LN_time_°amp
 "TimêSèmpög"

	)

1520 
	#NID_time_°amp
 133

	)

1521 
	#OBJ_time_°amp
 
OBJ_id_kp
,8L

	)

1523 
	#SN_OCSP_sign
 "OCSPSignög"

	)

1524 
	#LN_OCSP_sign
 "OCSP Signög"

	)

1525 
	#NID_OCSP_sign
 180

	)

1526 
	#OBJ_OCSP_sign
 
OBJ_id_kp
,9L

	)

1528 
	#SN_dvcs
 "DVCS"

	)

1529 
	#LN_dvcs
 "dvcs"

	)

1530 
	#NID_dvcs
 297

	)

1531 
	#OBJ_dvcs
 
OBJ_id_kp
,10L

	)

1533 
	#SN_id_ô_ˇPrŸEncCît
 "id-ô-ˇPrŸEncCît"

	)

1534 
	#NID_id_ô_ˇPrŸEncCît
 298

	)

1535 
	#OBJ_id_ô_ˇPrŸEncCît
 
OBJ_id_ô
,1L

	)

1537 
	#SN_id_ô_signKeyPaúTy≥s
 "id-ô-signKeyPaúTy≥s"

	)

1538 
	#NID_id_ô_signKeyPaúTy≥s
 299

	)

1539 
	#OBJ_id_ô_signKeyPaúTy≥s
 
OBJ_id_ô
,2L

	)

1541 
	#SN_id_ô_ícKeyPaúTy≥s
 "id-ô-ícKeyPaúTy≥s"

	)

1542 
	#NID_id_ô_ícKeyPaúTy≥s
 300

	)

1543 
	#OBJ_id_ô_ícKeyPaúTy≥s
 
OBJ_id_ô
,3L

	)

1545 
	#SN_id_ô_¥e„ºedSymmAlg
 "id-ô-¥e„ºedSymmAlg"

	)

1546 
	#NID_id_ô_¥e„ºedSymmAlg
 301

	)

1547 
	#OBJ_id_ô_¥e„ºedSymmAlg
 
OBJ_id_ô
,4L

	)

1549 
	#SN_id_ô_ˇKeyUpd©eInfo
 "id-ô-ˇKeyUpd©eInfo"

	)

1550 
	#NID_id_ô_ˇKeyUpd©eInfo
 302

	)

1551 
	#OBJ_id_ô_ˇKeyUpd©eInfo
 
OBJ_id_ô
,5L

	)

1553 
	#SN_id_ô_cuºítCRL
 "id-ô-cuºítCRL"

	)

1554 
	#NID_id_ô_cuºítCRL
 303

	)

1555 
	#OBJ_id_ô_cuºítCRL
 
OBJ_id_ô
,6L

	)

1557 
	#SN_id_ô_unsuµ‹ãdOIDs
 "id-ô-unsuµ‹ãdOIDs"

	)

1558 
	#NID_id_ô_unsuµ‹ãdOIDs
 304

	)

1559 
	#OBJ_id_ô_unsuµ‹ãdOIDs
 
OBJ_id_ô
,7L

	)

1561 
	#SN_id_ô_subs¸ùti⁄Reque°
 "id-ô-subs¸ùti⁄Reque°"

	)

1562 
	#NID_id_ô_subs¸ùti⁄Reque°
 305

	)

1563 
	#OBJ_id_ô_subs¸ùti⁄Reque°
 
OBJ_id_ô
,8L

	)

1565 
	#SN_id_ô_subs¸ùti⁄Re•⁄£
 "id-ô-subs¸ùti⁄Re•⁄£"

	)

1566 
	#NID_id_ô_subs¸ùti⁄Re•⁄£
 306

	)

1567 
	#OBJ_id_ô_subs¸ùti⁄Re•⁄£
 
OBJ_id_ô
,9L

	)

1569 
	#SN_id_ô_keyPaúP¨amReq
 "id-ô-keyPaúP¨amReq"

	)

1570 
	#NID_id_ô_keyPaúP¨amReq
 307

	)

1571 
	#OBJ_id_ô_keyPaúP¨amReq
 
OBJ_id_ô
,10L

	)

1573 
	#SN_id_ô_keyPaúP¨amRï
 "id-ô-keyPaúP¨amRï"

	)

1574 
	#NID_id_ô_keyPaúP¨amRï
 308

	)

1575 
	#OBJ_id_ô_keyPaúP¨amRï
 
OBJ_id_ô
,11L

	)

1577 
	#SN_id_ô_ªvPas•hø£
 "id-ô-ªvPas•hø£"

	)

1578 
	#NID_id_ô_ªvPas•hø£
 309

	)

1579 
	#OBJ_id_ô_ªvPas•hø£
 
OBJ_id_ô
,12L

	)

1581 
	#SN_id_ô_im∂icôC⁄fúm
 "id-ô-im∂icôC⁄fúm"

	)

1582 
	#NID_id_ô_im∂icôC⁄fúm
 310

	)

1583 
	#OBJ_id_ô_im∂icôC⁄fúm
 
OBJ_id_ô
,13L

	)

1585 
	#SN_id_ô_c⁄fúmWaôTime
 "id-ô-c⁄fúmWaôTime"

	)

1586 
	#NID_id_ô_c⁄fúmWaôTime
 311

	)

1587 
	#OBJ_id_ô_c⁄fúmWaôTime
 
OBJ_id_ô
,14L

	)

1589 
	#SN_id_ô_‹igPKIMesßge
 "id-ô-‹igPKIMesßge"

	)

1590 
	#NID_id_ô_‹igPKIMesßge
 312

	)

1591 
	#OBJ_id_ô_‹igPKIMesßge
 
OBJ_id_ô
,15L

	)

1593 
	#SN_id_ô_suµL™gTags
 "id-ô-suµL™gTags"

	)

1594 
	#NID_id_ô_suµL™gTags
 784

	)

1595 
	#OBJ_id_ô_suµL™gTags
 
OBJ_id_ô
,16L

	)

1597 
	#SN_id_ªgCål
 "id-ªgCål"

	)

1598 
	#NID_id_ªgCål
 313

	)

1599 
	#OBJ_id_ªgCål
 
OBJ_id_pkù
,1L

	)

1601 
	#SN_id_ªgInfo
 "id-ªgInfo"

	)

1602 
	#NID_id_ªgInfo
 314

	)

1603 
	#OBJ_id_ªgInfo
 
OBJ_id_pkù
,2L

	)

1605 
	#SN_id_ªgCål_ªgTokí
 "id-ªgCål-ªgTokí"

	)

1606 
	#NID_id_ªgCål_ªgTokí
 315

	)

1607 
	#OBJ_id_ªgCål_ªgTokí
 
OBJ_id_ªgCål
,1L

	)

1609 
	#SN_id_ªgCål_authítiˇt‹
 "id-ªgCål-authítiˇt‹"

	)

1610 
	#NID_id_ªgCål_authítiˇt‹
 316

	)

1611 
	#OBJ_id_ªgCål_authítiˇt‹
 
OBJ_id_ªgCål
,2L

	)

1613 
	#SN_id_ªgCål_pkiPubliˇti⁄Info
 "id-ªgCål-pkiPubliˇti⁄Info"

	)

1614 
	#NID_id_ªgCål_pkiPubliˇti⁄Info
 317

	)

1615 
	#OBJ_id_ªgCål_pkiPubliˇti⁄Info
 
OBJ_id_ªgCål
,3L

	)

1617 
	#SN_id_ªgCål_pkiArchiveO±i⁄s
 "id-ªgCål-pkiArchiveO±i⁄s"

	)

1618 
	#NID_id_ªgCål_pkiArchiveO±i⁄s
 318

	)

1619 
	#OBJ_id_ªgCål_pkiArchiveO±i⁄s
 
OBJ_id_ªgCål
,4L

	)

1621 
	#SN_id_ªgCål_ﬁdCîtID
 "id-ªgCål-ﬁdCîtID"

	)

1622 
	#NID_id_ªgCål_ﬁdCîtID
 319

	)

1623 
	#OBJ_id_ªgCål_ﬁdCîtID
 
OBJ_id_ªgCål
,5L

	)

1625 
	#SN_id_ªgCål_¥ŸocﬁEn¸Key
 "id-ªgCål-¥ŸocﬁEn¸Key"

	)

1626 
	#NID_id_ªgCål_¥ŸocﬁEn¸Key
 320

	)

1627 
	#OBJ_id_ªgCål_¥ŸocﬁEn¸Key
 
OBJ_id_ªgCål
,6L

	)

1629 
	#SN_id_ªgInfo_utf8Paús
 "id-ªgInfo-utf8Paús"

	)

1630 
	#NID_id_ªgInfo_utf8Paús
 321

	)

1631 
	#OBJ_id_ªgInfo_utf8Paús
 
OBJ_id_ªgInfo
,1L

	)

1633 
	#SN_id_ªgInfo_˚πReq
 "id-ªgInfo-˚πReq"

	)

1634 
	#NID_id_ªgInfo_˚πReq
 322

	)

1635 
	#OBJ_id_ªgInfo_˚πReq
 
OBJ_id_ªgInfo
,2L

	)

1637 
	#SN_id_Æg_des40
 "id-Æg-des40"

	)

1638 
	#NID_id_Æg_des40
 323

	)

1639 
	#OBJ_id_Æg_des40
 
OBJ_id_Æg
,1L

	)

1641 
	#SN_id_Æg_noSig«tuª
 "id-Æg-noSig«tuª"

	)

1642 
	#NID_id_Æg_noSig«tuª
 324

	)

1643 
	#OBJ_id_Æg_noSig«tuª
 
OBJ_id_Æg
,2L

	)

1645 
	#SN_id_Æg_dh_sig_hmac_sha1
 "id-Æg-dh-sig-hmac-sha1"

	)

1646 
	#NID_id_Æg_dh_sig_hmac_sha1
 325

	)

1647 
	#OBJ_id_Æg_dh_sig_hmac_sha1
 
OBJ_id_Æg
,3L

	)

1649 
	#SN_id_Æg_dh_p›
 "id-Æg-dh-p›"

	)

1650 
	#NID_id_Æg_dh_p›
 326

	)

1651 
	#OBJ_id_Æg_dh_p›
 
OBJ_id_Æg
,4L

	)

1653 
	#SN_id_cmc_°©usInfo
 "id-cmc-°©usInfo"

	)

1654 
	#NID_id_cmc_°©usInfo
 327

	)

1655 
	#OBJ_id_cmc_°©usInfo
 
OBJ_id_cmc
,1L

	)

1657 
	#SN_id_cmc_idítifiˇti⁄
 "id-cmc-idítifiˇti⁄"

	)

1658 
	#NID_id_cmc_idítifiˇti⁄
 328

	)

1659 
	#OBJ_id_cmc_idítifiˇti⁄
 
OBJ_id_cmc
,2L

	)

1661 
	#SN_id_cmc_idítôyProof
 "id-cmc-idítôyProof"

	)

1662 
	#NID_id_cmc_idítôyProof
 329

	)

1663 
	#OBJ_id_cmc_idítôyProof
 
OBJ_id_cmc
,3L

	)

1665 
	#SN_id_cmc_d©aRëu∫
 "id-cmc-d©aRëu∫"

	)

1666 
	#NID_id_cmc_d©aRëu∫
 330

	)

1667 
	#OBJ_id_cmc_d©aRëu∫
 
OBJ_id_cmc
,4L

	)

1669 
	#SN_id_cmc_å™ß˘i⁄Id
 "id-cmc-å™ß˘i⁄Id"

	)

1670 
	#NID_id_cmc_å™ß˘i⁄Id
 331

	)

1671 
	#OBJ_id_cmc_å™ß˘i⁄Id
 
OBJ_id_cmc
,5L

	)

1673 
	#SN_id_cmc_£ndîN⁄˚
 "id-cmc-£ndîN⁄˚"

	)

1674 
	#NID_id_cmc_£ndîN⁄˚
 332

	)

1675 
	#OBJ_id_cmc_£ndîN⁄˚
 
OBJ_id_cmc
,6L

	)

1677 
	#SN_id_cmc_ªcùõ¡N⁄˚
 "id-cmc-ªcùõ¡N⁄˚"

	)

1678 
	#NID_id_cmc_ªcùõ¡N⁄˚
 333

	)

1679 
	#OBJ_id_cmc_ªcùõ¡N⁄˚
 
OBJ_id_cmc
,7L

	)

1681 
	#SN_id_cmc_addExãnsi⁄s
 "id-cmc-addExãnsi⁄s"

	)

1682 
	#NID_id_cmc_addExãnsi⁄s
 334

	)

1683 
	#OBJ_id_cmc_addExãnsi⁄s
 
OBJ_id_cmc
,8L

	)

1685 
	#SN_id_cmc_í¸y±edPOP
 "id-cmc-í¸y±edPOP"

	)

1686 
	#NID_id_cmc_í¸y±edPOP
 335

	)

1687 
	#OBJ_id_cmc_í¸y±edPOP
 
OBJ_id_cmc
,9L

	)

1689 
	#SN_id_cmc_de¸y±edPOP
 "id-cmc-de¸y±edPOP"

	)

1690 
	#NID_id_cmc_de¸y±edPOP
 336

	)

1691 
	#OBJ_id_cmc_de¸y±edPOP
 
OBJ_id_cmc
,10L

	)

1693 
	#SN_id_cmc_ÃaPOPWô√ss
 "id-cmc-ÃaPOPWô√ss"

	)

1694 
	#NID_id_cmc_ÃaPOPWô√ss
 337

	)

1695 
	#OBJ_id_cmc_ÃaPOPWô√ss
 
OBJ_id_cmc
,11L

	)

1697 
	#SN_id_cmc_gëCît
 "id-cmc-gëCît"

	)

1698 
	#NID_id_cmc_gëCît
 338

	)

1699 
	#OBJ_id_cmc_gëCît
 
OBJ_id_cmc
,15L

	)

1701 
	#SN_id_cmc_gëCRL
 "id-cmc-gëCRL"

	)

1702 
	#NID_id_cmc_gëCRL
 339

	)

1703 
	#OBJ_id_cmc_gëCRL
 
OBJ_id_cmc
,16L

	)

1705 
	#SN_id_cmc_ªvokeReque°
 "id-cmc-ªvokeReque°"

	)

1706 
	#NID_id_cmc_ªvokeReque°
 340

	)

1707 
	#OBJ_id_cmc_ªvokeReque°
 
OBJ_id_cmc
,17L

	)

1709 
	#SN_id_cmc_ªgInfo
 "id-cmc-ªgInfo"

	)

1710 
	#NID_id_cmc_ªgInfo
 341

	)

1711 
	#OBJ_id_cmc_ªgInfo
 
OBJ_id_cmc
,18L

	)

1713 
	#SN_id_cmc_ª•⁄£Info
 "id-cmc-ª•⁄£Info"

	)

1714 
	#NID_id_cmc_ª•⁄£Info
 342

	)

1715 
	#OBJ_id_cmc_ª•⁄£Info
 
OBJ_id_cmc
,19L

	)

1717 
	#SN_id_cmc_quîyPídög
 "id-cmc-quîyPídög"

	)

1718 
	#NID_id_cmc_quîyPídög
 343

	)

1719 
	#OBJ_id_cmc_quîyPídög
 
OBJ_id_cmc
,21L

	)

1721 
	#SN_id_cmc_p›LökR™dom
 "id-cmc-p›LökR™dom"

	)

1722 
	#NID_id_cmc_p›LökR™dom
 344

	)

1723 
	#OBJ_id_cmc_p›LökR™dom
 
OBJ_id_cmc
,22L

	)

1725 
	#SN_id_cmc_p›LökWô√ss
 "id-cmc-p›LökWô√ss"

	)

1726 
	#NID_id_cmc_p›LökWô√ss
 345

	)

1727 
	#OBJ_id_cmc_p›LökWô√ss
 
OBJ_id_cmc
,23L

	)

1729 
	#SN_id_cmc_c⁄fúmCîtAc˚±™˚
 "id-cmc-c⁄fúmCîtAc˚±™˚"

	)

1730 
	#NID_id_cmc_c⁄fúmCîtAc˚±™˚
 346

	)

1731 
	#OBJ_id_cmc_c⁄fúmCîtAc˚±™˚
 
OBJ_id_cmc
,24L

	)

1733 
	#SN_id_⁄_≥rs⁄ÆD©a
 "id-⁄-≥rs⁄ÆD©a"

	)

1734 
	#NID_id_⁄_≥rs⁄ÆD©a
 347

	)

1735 
	#OBJ_id_⁄_≥rs⁄ÆD©a
 
OBJ_id_⁄
,1L

	)

1737 
	#SN_id_⁄_≥rm™ítIdítifõr
 "id-⁄-≥rm™ítIdítifõr"

	)

1738 
	#LN_id_⁄_≥rm™ítIdítifõr
 "Pîm™íàIdítifõr"

	)

1739 
	#NID_id_⁄_≥rm™ítIdítifõr
 858

	)

1740 
	#OBJ_id_⁄_≥rm™ítIdítifõr
 
OBJ_id_⁄
,3L

	)

1742 
	#SN_id_pda_d©eOfBúth
 "id-pda-d©eOfBúth"

	)

1743 
	#NID_id_pda_d©eOfBúth
 348

	)

1744 
	#OBJ_id_pda_d©eOfBúth
 
OBJ_id_pda
,1L

	)

1746 
	#SN_id_pda_∂a˚OfBúth
 "id-pda-∂a˚OfBúth"

	)

1747 
	#NID_id_pda_∂a˚OfBúth
 349

	)

1748 
	#OBJ_id_pda_∂a˚OfBúth
 
OBJ_id_pda
,2L

	)

1750 
	#SN_id_pda_gídî
 "id-pda-gídî"

	)

1751 
	#NID_id_pda_gídî
 351

	)

1752 
	#OBJ_id_pda_gídî
 
OBJ_id_pda
,3L

	)

1754 
	#SN_id_pda_cou¡ryOfCôizíshù
 "id-pda-cou¡ryOfCôizíshù"

	)

1755 
	#NID_id_pda_cou¡ryOfCôizíshù
 352

	)

1756 
	#OBJ_id_pda_cou¡ryOfCôizíshù
 
OBJ_id_pda
,4L

	)

1758 
	#SN_id_pda_cou¡ryOfResidí˚
 "id-pda-cou¡ryOfResidí˚"

	)

1759 
	#NID_id_pda_cou¡ryOfResidí˚
 353

	)

1760 
	#OBJ_id_pda_cou¡ryOfResidí˚
 
OBJ_id_pda
,5L

	)

1762 
	#SN_id_aˇ_authítiˇti⁄Info
 "id-aˇ-authítiˇti⁄Info"

	)

1763 
	#NID_id_aˇ_authítiˇti⁄Info
 354

	)

1764 
	#OBJ_id_aˇ_authítiˇti⁄Info
 
OBJ_id_aˇ
,1L

	)

1766 
	#SN_id_aˇ_ac˚ssIdítôy
 "id-aˇ-ac˚ssIdítôy"

	)

1767 
	#NID_id_aˇ_ac˚ssIdítôy
 355

	)

1768 
	#OBJ_id_aˇ_ac˚ssIdítôy
 
OBJ_id_aˇ
,2L

	)

1770 
	#SN_id_aˇ_ch¨gögIdítôy
 "id-aˇ-ch¨gögIdítôy"

	)

1771 
	#NID_id_aˇ_ch¨gögIdítôy
 356

	)

1772 
	#OBJ_id_aˇ_ch¨gögIdítôy
 
OBJ_id_aˇ
,3L

	)

1774 
	#SN_id_aˇ_group
 "id-aˇ-group"

	)

1775 
	#NID_id_aˇ_group
 357

	)

1776 
	#OBJ_id_aˇ_group
 
OBJ_id_aˇ
,4L

	)

1778 
	#SN_id_aˇ_rﬁe
 "id-aˇ-rﬁe"

	)

1779 
	#NID_id_aˇ_rﬁe
 358

	)

1780 
	#OBJ_id_aˇ_rﬁe
 
OBJ_id_aˇ
,5L

	)

1782 
	#SN_id_aˇ_ícAârs
 "id-aˇ-ícAârs"

	)

1783 
	#NID_id_aˇ_ícAârs
 399

	)

1784 
	#OBJ_id_aˇ_ícAârs
 
OBJ_id_aˇ
,6L

	)

1786 
	#SN_id_qcs_pkixQCSy¡ax_v1
 "id-qcs-pkixQCSy¡ax-v1"

	)

1787 
	#NID_id_qcs_pkixQCSy¡ax_v1
 359

	)

1788 
	#OBJ_id_qcs_pkixQCSy¡ax_v1
 
OBJ_id_qcs
,1L

	)

1790 
	#SN_id_c˘_¸s
 "id-c˘-¸s"

	)

1791 
	#NID_id_c˘_¸s
 360

	)

1792 
	#OBJ_id_c˘_¸s
 
OBJ_id_c˘
,1L

	)

1794 
	#SN_id_c˘_PKID©a
 "id-c˘-PKID©a"

	)

1795 
	#NID_id_c˘_PKID©a
 361

	)

1796 
	#OBJ_id_c˘_PKID©a
 
OBJ_id_c˘
,2L

	)

1798 
	#SN_id_c˘_PKIRe•⁄£
 "id-c˘-PKIRe•⁄£"

	)

1799 
	#NID_id_c˘_PKIRe•⁄£
 362

	)

1800 
	#OBJ_id_c˘_PKIRe•⁄£
 
OBJ_id_c˘
,3L

	)

1802 
	#SN_id_µl_™yL™guage
 "id-µl-™yL™guage"

	)

1803 
	#LN_id_µl_™yL™guage
 "AnyÜ™guage"

	)

1804 
	#NID_id_µl_™yL™guage
 664

	)

1805 
	#OBJ_id_µl_™yL™guage
 
OBJ_id_µl
,0L

	)

1807 
	#SN_id_µl_öhîôAŒ
 "id-µl-öhîôAŒ"

	)

1808 
	#LN_id_µl_öhîôAŒ
 "InhîôáŒ"

	)

1809 
	#NID_id_µl_öhîôAŒ
 665

	)

1810 
	#OBJ_id_µl_öhîôAŒ
 
OBJ_id_µl
,1L

	)

1812 
	#SN_Indïídít
 "id-µl-ödïídít"

	)

1813 
	#LN_Indïídít
 "Indïídít"

	)

1814 
	#NID_Indïídít
 667

	)

1815 
	#OBJ_Indïídít
 
OBJ_id_µl
,2L

	)

1817 
	#SN_ad_OCSP
 "OCSP"

	)

1818 
	#LN_ad_OCSP
 "OCSP"

	)

1819 
	#NID_ad_OCSP
 178

	)

1820 
	#OBJ_ad_OCSP
 
OBJ_id_ad
,1L

	)

1822 
	#SN_ad_ˇ_issuîs
 "ˇIssuîs"

	)

1823 
	#LN_ad_ˇ_issuîs
 "CA Issuîs"

	)

1824 
	#NID_ad_ˇ_issuîs
 179

	)

1825 
	#OBJ_ad_ˇ_issuîs
 
OBJ_id_ad
,2L

	)

1827 
	#SN_ad_timeSèmpög
 "ad_time°ampög"

	)

1828 
	#LN_ad_timeSèmpög
 "AD TimêSèmpög"

	)

1829 
	#NID_ad_timeSèmpög
 363

	)

1830 
	#OBJ_ad_timeSèmpög
 
OBJ_id_ad
,3L

	)

1832 
	#SN_ad_dvcs
 "AD_DVCS"

	)

1833 
	#LN_ad_dvcs
 "ad dvcs"

	)

1834 
	#NID_ad_dvcs
 364

	)

1835 
	#OBJ_ad_dvcs
 
OBJ_id_ad
,4L

	)

1837 
	#SN_ˇRïosô‹y
 "ˇRïosô‹y"

	)

1838 
	#LN_ˇRïosô‹y
 "CA Rïosô‹y"

	)

1839 
	#NID_ˇRïosô‹y
 785

	)

1840 
	#OBJ_ˇRïosô‹y
 
OBJ_id_ad
,5L

	)

1842 
	#OBJ_id_pkix_OCSP
 
OBJ_ad_OCSP


	)

1844 
	#SN_id_pkix_OCSP_basic
 "basicOCSPRe•⁄£"

	)

1845 
	#LN_id_pkix_OCSP_basic
 "Basi¯OCSP Re•⁄£"

	)

1846 
	#NID_id_pkix_OCSP_basic
 365

	)

1847 
	#OBJ_id_pkix_OCSP_basic
 
OBJ_id_pkix_OCSP
,1L

	)

1849 
	#SN_id_pkix_OCSP_N⁄˚
 "N⁄˚"

	)

1850 
	#LN_id_pkix_OCSP_N⁄˚
 "OCSP N⁄˚"

	)

1851 
	#NID_id_pkix_OCSP_N⁄˚
 366

	)

1852 
	#OBJ_id_pkix_OCSP_N⁄˚
 
OBJ_id_pkix_OCSP
,2L

	)

1854 
	#SN_id_pkix_OCSP_CæID
 "CæID"

	)

1855 
	#LN_id_pkix_OCSP_CæID
 "OCSP CRL ID"

	)

1856 
	#NID_id_pkix_OCSP_CæID
 367

	)

1857 
	#OBJ_id_pkix_OCSP_CæID
 
OBJ_id_pkix_OCSP
,3L

	)

1859 
	#SN_id_pkix_OCSP_ac˚±abÀRe•⁄£s
 "ac˚±abÀRe•⁄£s"

	)

1860 
	#LN_id_pkix_OCSP_ac˚±abÀRe•⁄£s
 "Ac˚±abÀ OCSP Re•⁄£s"

	)

1861 
	#NID_id_pkix_OCSP_ac˚±abÀRe•⁄£s
 368

	)

1862 
	#OBJ_id_pkix_OCSP_ac˚±abÀRe•⁄£s
 
OBJ_id_pkix_OCSP
,4L

	)

1864 
	#SN_id_pkix_OCSP_noCheck
 "noCheck"

	)

1865 
	#LN_id_pkix_OCSP_noCheck
 "OCSP NÿCheck"

	)

1866 
	#NID_id_pkix_OCSP_noCheck
 369

	)

1867 
	#OBJ_id_pkix_OCSP_noCheck
 
OBJ_id_pkix_OCSP
,5L

	)

1869 
	#SN_id_pkix_OCSP_¨chiveCutoff
 "¨chiveCutoff"

	)

1870 
	#LN_id_pkix_OCSP_¨chiveCutoff
 "OCSP ArchivêCutoff"

	)

1871 
	#NID_id_pkix_OCSP_¨chiveCutoff
 370

	)

1872 
	#OBJ_id_pkix_OCSP_¨chiveCutoff
 
OBJ_id_pkix_OCSP
,6L

	)

1874 
	#SN_id_pkix_OCSP_£rvi˚Loˇt‹
 "£rvi˚Loˇt‹"

	)

1875 
	#LN_id_pkix_OCSP_£rvi˚Loˇt‹
 "OCSP Sîvi˚ Loˇt‹"

	)

1876 
	#NID_id_pkix_OCSP_£rvi˚Loˇt‹
 371

	)

1877 
	#OBJ_id_pkix_OCSP_£rvi˚Loˇt‹
 
OBJ_id_pkix_OCSP
,7L

	)

1879 
	#SN_id_pkix_OCSP_exãndedSètus
 "exãndedSètus"

	)

1880 
	#LN_id_pkix_OCSP_exãndedSètus
 "Exãnded OCSP Sètus"

	)

1881 
	#NID_id_pkix_OCSP_exãndedSètus
 372

	)

1882 
	#OBJ_id_pkix_OCSP_exãndedSètus
 
OBJ_id_pkix_OCSP
,8L

	)

1884 
	#SN_id_pkix_OCSP_vÆid
 "vÆid"

	)

1885 
	#NID_id_pkix_OCSP_vÆid
 373

	)

1886 
	#OBJ_id_pkix_OCSP_vÆid
 
OBJ_id_pkix_OCSP
,9L

	)

1888 
	#SN_id_pkix_OCSP_∑th
 "∑th"

	)

1889 
	#NID_id_pkix_OCSP_∑th
 374

	)

1890 
	#OBJ_id_pkix_OCSP_∑th
 
OBJ_id_pkix_OCSP
,10L

	)

1892 
	#SN_id_pkix_OCSP_åu°RoŸ
 "åu°RoŸ"

	)

1893 
	#LN_id_pkix_OCSP_åu°RoŸ
 "Tru° RoŸ"

	)

1894 
	#NID_id_pkix_OCSP_åu°RoŸ
 375

	)

1895 
	#OBJ_id_pkix_OCSP_åu°RoŸ
 
OBJ_id_pkix_OCSP
,11L

	)

1897 
	#SN_Æg‹ôhm
 "Æg‹ôhm"

	)

1898 
	#LN_Æg‹ôhm
 "Æg‹ôhm"

	)

1899 
	#NID_Æg‹ôhm
 376

	)

1900 
	#OBJ_Æg‹ôhm
 1L,3L,14L,3L,2L

	)

1902 
	#SN_md5WôhRSA
 "RSA-NP-MD5"

	)

1903 
	#LN_md5WôhRSA
 "md5WôhRSA"

	)

1904 
	#NID_md5WôhRSA
 104

	)

1905 
	#OBJ_md5WôhRSA
 
OBJ_Æg‹ôhm
,3L

	)

1907 
	#SN_des_ecb
 "DES-ECB"

	)

1908 
	#LN_des_ecb
 "des-ecb"

	)

1909 
	#NID_des_ecb
 29

	)

1910 
	#OBJ_des_ecb
 
OBJ_Æg‹ôhm
,6L

	)

1912 
	#SN_des_cbc
 "DES-CBC"

	)

1913 
	#LN_des_cbc
 "des-cbc"

	)

1914 
	#NID_des_cbc
 31

	)

1915 
	#OBJ_des_cbc
 
OBJ_Æg‹ôhm
,7L

	)

1917 
	#SN_des_ofb64
 "DES-OFB"

	)

1918 
	#LN_des_ofb64
 "des-ofb"

	)

1919 
	#NID_des_ofb64
 45

	)

1920 
	#OBJ_des_ofb64
 
OBJ_Æg‹ôhm
,8L

	)

1922 
	#SN_des_cfb64
 "DES-CFB"

	)

1923 
	#LN_des_cfb64
 "des-cfb"

	)

1924 
	#NID_des_cfb64
 30

	)

1925 
	#OBJ_des_cfb64
 
OBJ_Æg‹ôhm
,9L

	)

1927 
	#SN_rßSig«tuª
 "rßSig«tuª"

	)

1928 
	#NID_rßSig«tuª
 377

	)

1929 
	#OBJ_rßSig«tuª
 
OBJ_Æg‹ôhm
,11L

	)

1931 
	#SN_dß_2
 "DSA-ﬁd"

	)

1932 
	#LN_dß_2
 "dßEn¸y±i⁄-ﬁd"

	)

1933 
	#NID_dß_2
 67

	)

1934 
	#OBJ_dß_2
 
OBJ_Æg‹ôhm
,12L

	)

1936 
	#SN_dßWôhSHA
 "DSA-SHA"

	)

1937 
	#LN_dßWôhSHA
 "dßWôhSHA"

	)

1938 
	#NID_dßWôhSHA
 66

	)

1939 
	#OBJ_dßWôhSHA
 
OBJ_Æg‹ôhm
,13L

	)

1941 
	#SN_shaWôhRSAEn¸y±i⁄
 "RSA-SHA"

	)

1942 
	#LN_shaWôhRSAEn¸y±i⁄
 "shaWôhRSAEn¸y±i⁄"

	)

1943 
	#NID_shaWôhRSAEn¸y±i⁄
 42

	)

1944 
	#OBJ_shaWôhRSAEn¸y±i⁄
 
OBJ_Æg‹ôhm
,15L

	)

1946 
	#SN_des_ede_ecb
 "DES-EDE"

	)

1947 
	#LN_des_ede_ecb
 "des-ede"

	)

1948 
	#NID_des_ede_ecb
 32

	)

1949 
	#OBJ_des_ede_ecb
 
OBJ_Æg‹ôhm
,17L

	)

1951 
	#SN_des_ede3_ecb
 "DES-EDE3"

	)

1952 
	#LN_des_ede3_ecb
 "des-ede3"

	)

1953 
	#NID_des_ede3_ecb
 33

	)

1955 
	#SN_des_ede_cbc
 "DES-EDE-CBC"

	)

1956 
	#LN_des_ede_cbc
 "des-ede-cbc"

	)

1957 
	#NID_des_ede_cbc
 43

	)

1959 
	#SN_des_ede_cfb64
 "DES-EDE-CFB"

	)

1960 
	#LN_des_ede_cfb64
 "des-ede-cfb"

	)

1961 
	#NID_des_ede_cfb64
 60

	)

1963 
	#SN_des_ede3_cfb64
 "DES-EDE3-CFB"

	)

1964 
	#LN_des_ede3_cfb64
 "des-ede3-cfb"

	)

1965 
	#NID_des_ede3_cfb64
 61

	)

1967 
	#SN_des_ede_ofb64
 "DES-EDE-OFB"

	)

1968 
	#LN_des_ede_ofb64
 "des-ede-ofb"

	)

1969 
	#NID_des_ede_ofb64
 62

	)

1971 
	#SN_des_ede3_ofb64
 "DES-EDE3-OFB"

	)

1972 
	#LN_des_ede3_ofb64
 "des-ede3-ofb"

	)

1973 
	#NID_des_ede3_ofb64
 63

	)

1975 
	#SN_desx_cbc
 "DESX-CBC"

	)

1976 
	#LN_desx_cbc
 "desx-cbc"

	)

1977 
	#NID_desx_cbc
 80

	)

1979 
	#SN_sha
 "SHA"

	)

1980 
	#LN_sha
 "sha"

	)

1981 
	#NID_sha
 41

	)

1982 
	#OBJ_sha
 
OBJ_Æg‹ôhm
,18L

	)

1984 
	#SN_sha1
 "SHA1"

	)

1985 
	#LN_sha1
 "sha1"

	)

1986 
	#NID_sha1
 64

	)

1987 
	#OBJ_sha1
 
OBJ_Æg‹ôhm
,26L

	)

1989 
	#SN_dßWôhSHA1_2
 "DSA-SHA1-ﬁd"

	)

1990 
	#LN_dßWôhSHA1_2
 "dßWôhSHA1-ﬁd"

	)

1991 
	#NID_dßWôhSHA1_2
 70

	)

1992 
	#OBJ_dßWôhSHA1_2
 
OBJ_Æg‹ôhm
,27L

	)

1994 
	#SN_sha1WôhRSA
 "RSA-SHA1-2"

	)

1995 
	#LN_sha1WôhRSA
 "sha1WôhRSA"

	)

1996 
	#NID_sha1WôhRSA
 115

	)

1997 
	#OBJ_sha1WôhRSA
 
OBJ_Æg‹ôhm
,29L

	)

1999 
	#SN_rùemd160
 "RIPEMD160"

	)

2000 
	#LN_rùemd160
 "rùemd160"

	)

2001 
	#NID_rùemd160
 117

	)

2002 
	#OBJ_rùemd160
 1L,3L,36L,3L,2L,1L

	)

2004 
	#SN_rùemd160WôhRSA
 "RSA-RIPEMD160"

	)

2005 
	#LN_rùemd160WôhRSA
 "rùemd160WôhRSA"

	)

2006 
	#NID_rùemd160WôhRSA
 119

	)

2007 
	#OBJ_rùemd160WôhRSA
 1L,3L,36L,3L,3L,1L,2L

	)

2009 
	#SN_sx√t
 "SXNëID"

	)

2010 
	#LN_sx√t
 "Så⁄g Exå™ë ID"

	)

2011 
	#NID_sx√t
 143

	)

2012 
	#OBJ_sx√t
 1L,3L,101L,1L,4L,1L

	)

2014 
	#SN_X500
 "X500"

	)

2015 
	#LN_X500
 "dúe˘‹y sîvi˚†(X.500)"

	)

2016 
	#NID_X500
 11

	)

2017 
	#OBJ_X500
 2L,5L

	)

2019 
	#SN_X509
 "X509"

	)

2020 
	#NID_X509
 12

	)

2021 
	#OBJ_X509
 
OBJ_X500
,4L

	)

2023 
	#SN_comm⁄Name
 "CN"

	)

2024 
	#LN_comm⁄Name
 "comm⁄Name"

	)

2025 
	#NID_comm⁄Name
 13

	)

2026 
	#OBJ_comm⁄Name
 
OBJ_X509
,3L

	)

2028 
	#SN_su∫ame
 "SN"

	)

2029 
	#LN_su∫ame
 "su∫ame"

	)

2030 
	#NID_su∫ame
 100

	)

2031 
	#OBJ_su∫ame
 
OBJ_X509
,4L

	)

2033 
	#LN_£rülNumbî
 "£rülNumbî"

	)

2034 
	#NID_£rülNumbî
 105

	)

2035 
	#OBJ_£rülNumbî
 
OBJ_X509
,5L

	)

2037 
	#SN_cou¡ryName
 "C"

	)

2038 
	#LN_cou¡ryName
 "cou¡ryName"

	)

2039 
	#NID_cou¡ryName
 14

	)

2040 
	#OBJ_cou¡ryName
 
OBJ_X509
,6L

	)

2042 
	#SN_loˇlôyName
 "L"

	)

2043 
	#LN_loˇlôyName
 "loˇlôyName"

	)

2044 
	#NID_loˇlôyName
 15

	)

2045 
	#OBJ_loˇlôyName
 
OBJ_X509
,7L

	)

2047 
	#SN_°©eOrProvö˚Name
 "ST"

	)

2048 
	#LN_°©eOrProvö˚Name
 "°©eOrProvö˚Name"

	)

2049 
	#NID_°©eOrProvö˚Name
 16

	)

2050 
	#OBJ_°©eOrProvö˚Name
 
OBJ_X509
,8L

	)

2052 
	#SN_°ªëAddªss
 "°ªë"

	)

2053 
	#LN_°ªëAddªss
 "°ªëAddªss"

	)

2054 
	#NID_°ªëAddªss
 660

	)

2055 
	#OBJ_°ªëAddªss
 
OBJ_X509
,9L

	)

2057 
	#SN_‹g™iz©i⁄Name
 "O"

	)

2058 
	#LN_‹g™iz©i⁄Name
 "‹g™iz©i⁄Name"

	)

2059 
	#NID_‹g™iz©i⁄Name
 17

	)

2060 
	#OBJ_‹g™iz©i⁄Name
 
OBJ_X509
,10L

	)

2062 
	#SN_‹g™iz©i⁄ÆUnôName
 "OU"

	)

2063 
	#LN_‹g™iz©i⁄ÆUnôName
 "‹g™iz©i⁄ÆUnôName"

	)

2064 
	#NID_‹g™iz©i⁄ÆUnôName
 18

	)

2065 
	#OBJ_‹g™iz©i⁄ÆUnôName
 
OBJ_X509
,11L

	)

2067 
	#SN_tôÀ
 "tôÀ"

	)

2068 
	#LN_tôÀ
 "tôÀ"

	)

2069 
	#NID_tôÀ
 106

	)

2070 
	#OBJ_tôÀ
 
OBJ_X509
,12L

	)

2072 
	#LN_des¸ùti⁄
 "des¸ùti⁄"

	)

2073 
	#NID_des¸ùti⁄
 107

	)

2074 
	#OBJ_des¸ùti⁄
 
OBJ_X509
,13L

	)

2076 
	#LN_£¨chGuide
 "£¨chGuide"

	)

2077 
	#NID_£¨chGuide
 859

	)

2078 
	#OBJ_£¨chGuide
 
OBJ_X509
,14L

	)

2080 
	#LN_busöessC©eg‹y
 "busöessC©eg‹y"

	)

2081 
	#NID_busöessC©eg‹y
 860

	)

2082 
	#OBJ_busöessC©eg‹y
 
OBJ_X509
,15L

	)

2084 
	#LN_po°ÆAddªss
 "po°ÆAddªss"

	)

2085 
	#NID_po°ÆAddªss
 861

	)

2086 
	#OBJ_po°ÆAddªss
 
OBJ_X509
,16L

	)

2088 
	#LN_po°ÆCode
 "po°ÆCode"

	)

2089 
	#NID_po°ÆCode
 661

	)

2090 
	#OBJ_po°ÆCode
 
OBJ_X509
,17L

	)

2092 
	#LN_po°Offi˚Box
 "po°Offi˚Box"

	)

2093 
	#NID_po°Offi˚Box
 862

	)

2094 
	#OBJ_po°Offi˚Box
 
OBJ_X509
,18L

	)

2096 
	#LN_physiˇlDñivîyOffi˚Name
 "physiˇlDñivîyOffi˚Name"

	)

2097 
	#NID_physiˇlDñivîyOffi˚Name
 863

	)

2098 
	#OBJ_physiˇlDñivîyOffi˚Name
 
OBJ_X509
,19L

	)

2100 
	#LN_ãÀph⁄eNumbî
 "ãÀph⁄eNumbî"

	)

2101 
	#NID_ãÀph⁄eNumbî
 864

	)

2102 
	#OBJ_ãÀph⁄eNumbî
 
OBJ_X509
,20L

	)

2104 
	#LN_ãÀxNumbî
 "ãÀxNumbî"

	)

2105 
	#NID_ãÀxNumbî
 865

	)

2106 
	#OBJ_ãÀxNumbî
 
OBJ_X509
,21L

	)

2108 
	#LN_ãÀãxTîmöÆIdítifõr
 "ãÀãxTîmöÆIdítifõr"

	)

2109 
	#NID_ãÀãxTîmöÆIdítifõr
 866

	)

2110 
	#OBJ_ãÀãxTîmöÆIdítifõr
 
OBJ_X509
,22L

	)

2112 
	#LN_ÁcsimûeTñïh⁄eNumbî
 "ÁcsimûeTñïh⁄eNumbî"

	)

2113 
	#NID_ÁcsimûeTñïh⁄eNumbî
 867

	)

2114 
	#OBJ_ÁcsimûeTñïh⁄eNumbî
 
OBJ_X509
,23L

	)

2116 
	#LN_x121Addªss
 "x121Addªss"

	)

2117 
	#NID_x121Addªss
 868

	)

2118 
	#OBJ_x121Addªss
 
OBJ_X509
,24L

	)

2120 
	#LN_öã∫©i⁄ÆiSDNNumbî
 "öã∫©i⁄ÆiSDNNumbî"

	)

2121 
	#NID_öã∫©i⁄ÆiSDNNumbî
 869

	)

2122 
	#OBJ_öã∫©i⁄ÆiSDNNumbî
 
OBJ_X509
,25L

	)

2124 
	#LN_ªgi°îedAddªss
 "ªgi°îedAddªss"

	)

2125 
	#NID_ªgi°îedAddªss
 870

	)

2126 
	#OBJ_ªgi°îedAddªss
 
OBJ_X509
,26L

	)

2128 
	#LN_de°ö©i⁄Indiˇt‹
 "de°ö©i⁄Indiˇt‹"

	)

2129 
	#NID_de°ö©i⁄Indiˇt‹
 871

	)

2130 
	#OBJ_de°ö©i⁄Indiˇt‹
 
OBJ_X509
,27L

	)

2132 
	#LN_¥e„ºedDñivîyMëhod
 "¥e„ºedDñivîyMëhod"

	)

2133 
	#NID_¥e„ºedDñivîyMëhod
 872

	)

2134 
	#OBJ_¥e„ºedDñivîyMëhod
 
OBJ_X509
,28L

	)

2136 
	#LN_¥e£¡©i⁄Addªss
 "¥e£¡©i⁄Addªss"

	)

2137 
	#NID_¥e£¡©i⁄Addªss
 873

	)

2138 
	#OBJ_¥e£¡©i⁄Addªss
 
OBJ_X509
,29L

	)

2140 
	#LN_suµ‹ãdAµliˇti⁄C⁄ãxt
 "suµ‹ãdAµliˇti⁄C⁄ãxt"

	)

2141 
	#NID_suµ‹ãdAµliˇti⁄C⁄ãxt
 874

	)

2142 
	#OBJ_suµ‹ãdAµliˇti⁄C⁄ãxt
 
OBJ_X509
,30L

	)

2144 
	#SN_membî
 "membî"

	)

2145 
	#NID_membî
 875

	)

2146 
	#OBJ_membî
 
OBJ_X509
,31L

	)

2148 
	#SN_ow√r
 "ow√r"

	)

2149 
	#NID_ow√r
 876

	)

2150 
	#OBJ_ow√r
 
OBJ_X509
,32L

	)

2152 
	#LN_rﬁeOccu∑¡
 "rﬁeOccu∑¡"

	)

2153 
	#NID_rﬁeOccu∑¡
 877

	)

2154 
	#OBJ_rﬁeOccu∑¡
 
OBJ_X509
,33L

	)

2156 
	#SN_£eAlso
 "£eAlso"

	)

2157 
	#NID_£eAlso
 878

	)

2158 
	#OBJ_£eAlso
 
OBJ_X509
,34L

	)

2160 
	#LN_u£rPassw‹d
 "u£rPassw‹d"

	)

2161 
	#NID_u£rPassw‹d
 879

	)

2162 
	#OBJ_u£rPassw‹d
 
OBJ_X509
,35L

	)

2164 
	#LN_u£rCîtifiˇã
 "u£rCîtifiˇã"

	)

2165 
	#NID_u£rCîtifiˇã
 880

	)

2166 
	#OBJ_u£rCîtifiˇã
 
OBJ_X509
,36L

	)

2168 
	#LN_cACîtifiˇã
 "cACîtifiˇã"

	)

2169 
	#NID_cACîtifiˇã
 881

	)

2170 
	#OBJ_cACîtifiˇã
 
OBJ_X509
,37L

	)

2172 
	#LN_auth‹ôyRevoˇti⁄Li°
 "auth‹ôyRevoˇti⁄Li°"

	)

2173 
	#NID_auth‹ôyRevoˇti⁄Li°
 882

	)

2174 
	#OBJ_auth‹ôyRevoˇti⁄Li°
 
OBJ_X509
,38L

	)

2176 
	#LN_˚πifiˇãRevoˇti⁄Li°
 "˚πifiˇãRevoˇti⁄Li°"

	)

2177 
	#NID_˚πifiˇãRevoˇti⁄Li°
 883

	)

2178 
	#OBJ_˚πifiˇãRevoˇti⁄Li°
 
OBJ_X509
,39L

	)

2180 
	#LN_¸ossCîtifiˇãPaú
 "¸ossCîtifiˇãPaú"

	)

2181 
	#NID_¸ossCîtifiˇãPaú
 884

	)

2182 
	#OBJ_¸ossCîtifiˇãPaú
 
OBJ_X509
,40L

	)

2184 
	#SN_«me
 "«me"

	)

2185 
	#LN_«me
 "«me"

	)

2186 
	#NID_«me
 173

	)

2187 
	#OBJ_«me
 
OBJ_X509
,41L

	)

2189 
	#SN_givíName
 "GN"

	)

2190 
	#LN_givíName
 "givíName"

	)

2191 
	#NID_givíName
 99

	)

2192 
	#OBJ_givíName
 
OBJ_X509
,42L

	)

2194 
	#SN_öôüls
 "öôüls"

	)

2195 
	#LN_öôüls
 "öôüls"

	)

2196 
	#NID_öôüls
 101

	)

2197 
	#OBJ_öôüls
 
OBJ_X509
,43L

	)

2199 
	#LN_gíî©i⁄QuÆifõr
 "gíî©i⁄QuÆifõr"

	)

2200 
	#NID_gíî©i⁄QuÆifõr
 509

	)

2201 
	#OBJ_gíî©i⁄QuÆifõr
 
OBJ_X509
,44L

	)

2203 
	#LN_x500UniqueIdítifõr
 "x500UniqueIdítifõr"

	)

2204 
	#NID_x500UniqueIdítifõr
 503

	)

2205 
	#OBJ_x500UniqueIdítifõr
 
OBJ_X509
,45L

	)

2207 
	#SN_dnQuÆifõr
 "dnQuÆifõr"

	)

2208 
	#LN_dnQuÆifõr
 "dnQuÆifõr"

	)

2209 
	#NID_dnQuÆifõr
 174

	)

2210 
	#OBJ_dnQuÆifõr
 
OBJ_X509
,46L

	)

2212 
	#LN_íh™˚dSórchGuide
 "íh™˚dSórchGuide"

	)

2213 
	#NID_íh™˚dSórchGuide
 885

	)

2214 
	#OBJ_íh™˚dSórchGuide
 
OBJ_X509
,47L

	)

2216 
	#LN_¥ŸocﬁInf‹m©i⁄
 "¥ŸocﬁInf‹m©i⁄"

	)

2217 
	#NID_¥ŸocﬁInf‹m©i⁄
 886

	)

2218 
	#OBJ_¥ŸocﬁInf‹m©i⁄
 
OBJ_X509
,48L

	)

2220 
	#LN_di°öguishedName
 "di°öguishedName"

	)

2221 
	#NID_di°öguishedName
 887

	)

2222 
	#OBJ_di°öguishedName
 
OBJ_X509
,49L

	)

2224 
	#LN_uniqueMembî
 "uniqueMembî"

	)

2225 
	#NID_uniqueMembî
 888

	)

2226 
	#OBJ_uniqueMembî
 
OBJ_X509
,50L

	)

2228 
	#LN_hou£Idítifõr
 "hou£Idítifõr"

	)

2229 
	#NID_hou£Idítifõr
 889

	)

2230 
	#OBJ_hou£Idítifõr
 
OBJ_X509
,51L

	)

2232 
	#LN_suµ‹ãdAlg‹ôhms
 "suµ‹ãdAlg‹ôhms"

	)

2233 
	#NID_suµ‹ãdAlg‹ôhms
 890

	)

2234 
	#OBJ_suµ‹ãdAlg‹ôhms
 
OBJ_X509
,52L

	)

2236 
	#LN_dñèRevoˇti⁄Li°
 "dñèRevoˇti⁄Li°"

	)

2237 
	#NID_dñèRevoˇti⁄Li°
 891

	)

2238 
	#OBJ_dñèRevoˇti⁄Li°
 
OBJ_X509
,53L

	)

2240 
	#SN_dmdName
 "dmdName"

	)

2241 
	#NID_dmdName
 892

	)

2242 
	#OBJ_dmdName
 
OBJ_X509
,54L

	)

2244 
	#LN_p£ud⁄ym
 "p£ud⁄ym"

	)

2245 
	#NID_p£ud⁄ym
 510

	)

2246 
	#OBJ_p£ud⁄ym
 
OBJ_X509
,65L

	)

2248 
	#SN_rﬁe
 "rﬁe"

	)

2249 
	#LN_rﬁe
 "rﬁe"

	)

2250 
	#NID_rﬁe
 400

	)

2251 
	#OBJ_rﬁe
 
OBJ_X509
,72L

	)

2253 
	#SN_X500Æg‹ôhms
 "X500Æg‹ôhms"

	)

2254 
	#LN_X500Æg‹ôhms
 "dúe˘‹y sîvi˚†-álg‹ôhms"

	)

2255 
	#NID_X500Æg‹ôhms
 378

	)

2256 
	#OBJ_X500Æg‹ôhms
 
OBJ_X500
,8L

	)

2258 
	#SN_rß
 "RSA"

	)

2259 
	#LN_rß
 "rß"

	)

2260 
	#NID_rß
 19

	)

2261 
	#OBJ_rß
 
OBJ_X500Æg‹ôhms
,1L,1L

	)

2263 
	#SN_mdc2WôhRSA
 "RSA-MDC2"

	)

2264 
	#LN_mdc2WôhRSA
 "mdc2WôhRSA"

	)

2265 
	#NID_mdc2WôhRSA
 96

	)

2266 
	#OBJ_mdc2WôhRSA
 
OBJ_X500Æg‹ôhms
,3L,100L

	)

2268 
	#SN_mdc2
 "MDC2"

	)

2269 
	#LN_mdc2
 "mdc2"

	)

2270 
	#NID_mdc2
 95

	)

2271 
	#OBJ_mdc2
 
OBJ_X500Æg‹ôhms
,3L,101L

	)

2273 
	#SN_id_˚
 "id-˚"

	)

2274 
	#NID_id_˚
 81

	)

2275 
	#OBJ_id_˚
 
OBJ_X500
,29L

	)

2277 
	#SN_subje˘_dúe˘‹y_©åibuãs
 "subje˘Dúe˘‹yAâribuãs"

	)

2278 
	#LN_subje˘_dúe˘‹y_©åibuãs
 "X509v3 Subje˘ Dúe˘‹y Aâribuãs"

	)

2279 
	#NID_subje˘_dúe˘‹y_©åibuãs
 769

	)

2280 
	#OBJ_subje˘_dúe˘‹y_©åibuãs
 
OBJ_id_˚
,9L

	)

2282 
	#SN_subje˘_key_idítifõr
 "subje˘KeyIdítifõr"

	)

2283 
	#LN_subje˘_key_idítifõr
 "X509v3 Subje˘ Key Idítifõr"

	)

2284 
	#NID_subje˘_key_idítifõr
 82

	)

2285 
	#OBJ_subje˘_key_idítifõr
 
OBJ_id_˚
,14L

	)

2287 
	#SN_key_ußge
 "keyUßge"

	)

2288 
	#LN_key_ußge
 "X509v3 Key Ußge"

	)

2289 
	#NID_key_ußge
 83

	)

2290 
	#OBJ_key_ußge
 
OBJ_id_˚
,15L

	)

2292 
	#SN_¥iv©e_key_ußge_≥riod
 "¥iv©eKeyUßgePîiod"

	)

2293 
	#LN_¥iv©e_key_ußge_≥riod
 "X509v3 Priv©êKey UßgêPîiod"

	)

2294 
	#NID_¥iv©e_key_ußge_≥riod
 84

	)

2295 
	#OBJ_¥iv©e_key_ußge_≥riod
 
OBJ_id_˚
,16L

	)

2297 
	#SN_subje˘_Æt_«me
 "subje˘A…Name"

	)

2298 
	#LN_subje˘_Æt_«me
 "X509v3 Subje˘ A…î«tivêName"

	)

2299 
	#NID_subje˘_Æt_«me
 85

	)

2300 
	#OBJ_subje˘_Æt_«me
 
OBJ_id_˚
,17L

	)

2302 
	#SN_issuî_Æt_«me
 "issuîA…Name"

	)

2303 
	#LN_issuî_Æt_«me
 "X509v3 Issuî A…î«tivêName"

	)

2304 
	#NID_issuî_Æt_«me
 86

	)

2305 
	#OBJ_issuî_Æt_«me
 
OBJ_id_˚
,18L

	)

2307 
	#SN_basic_c⁄°øöts
 "basicC⁄°øöts"

	)

2308 
	#LN_basic_c⁄°øöts
 "X509v3 Basi¯C⁄°øöts"

	)

2309 
	#NID_basic_c⁄°øöts
 87

	)

2310 
	#OBJ_basic_c⁄°øöts
 
OBJ_id_˚
,19L

	)

2312 
	#SN_¸l_numbî
 "¸lNumbî"

	)

2313 
	#LN_¸l_numbî
 "X509v3 CRL Numbî"

	)

2314 
	#NID_¸l_numbî
 88

	)

2315 
	#OBJ_¸l_numbî
 
OBJ_id_˚
,20L

	)

2317 
	#SN_¸l_ªas⁄
 "CRLRós⁄"

	)

2318 
	#LN_¸l_ªas⁄
 "X509v3 CRL Rós⁄ Code"

	)

2319 
	#NID_¸l_ªas⁄
 141

	)

2320 
	#OBJ_¸l_ªas⁄
 
OBJ_id_˚
,21L

	)

2322 
	#SN_övÆidôy_d©e
 "övÆidôyD©e"

	)

2323 
	#LN_övÆidôy_d©e
 "InvÆidôy D©e"

	)

2324 
	#NID_övÆidôy_d©e
 142

	)

2325 
	#OBJ_övÆidôy_d©e
 
OBJ_id_˚
,24L

	)

2327 
	#SN_dñè_¸l
 "dñèCRL"

	)

2328 
	#LN_dñè_¸l
 "X509v3 Dñè CRL Indiˇt‹"

	)

2329 
	#NID_dñè_¸l
 140

	)

2330 
	#OBJ_dñè_¸l
 
OBJ_id_˚
,27L

	)

2332 
	#SN_issuög_di°ributi⁄_poöt
 "issuögDi°ributi⁄Poöt"

	)

2333 
	#LN_issuög_di°ributi⁄_poöt
 "X509v3 Issuög Di°rubuti⁄ Poöt"

	)

2334 
	#NID_issuög_di°ributi⁄_poöt
 770

	)

2335 
	#OBJ_issuög_di°ributi⁄_poöt
 
OBJ_id_˚
,28L

	)

2337 
	#SN_˚πifiˇã_issuî
 "˚πifiˇãIssuî"

	)

2338 
	#LN_˚πifiˇã_issuî
 "X509v3 Cîtifiˇã Issuî"

	)

2339 
	#NID_˚πifiˇã_issuî
 771

	)

2340 
	#OBJ_˚πifiˇã_issuî
 
OBJ_id_˚
,29L

	)

2342 
	#SN_«me_c⁄°øöts
 "«meC⁄°øöts"

	)

2343 
	#LN_«me_c⁄°øöts
 "X509v3 NamêC⁄°øöts"

	)

2344 
	#NID_«me_c⁄°øöts
 666

	)

2345 
	#OBJ_«me_c⁄°øöts
 
OBJ_id_˚
,30L

	)

2347 
	#SN_¸l_di°ributi⁄_poöts
 "¸lDi°ributi⁄Poöts"

	)

2348 
	#LN_¸l_di°ributi⁄_poöts
 "X509v3 CRL Di°ributi⁄ Poöts"

	)

2349 
	#NID_¸l_di°ributi⁄_poöts
 103

	)

2350 
	#OBJ_¸l_di°ributi⁄_poöts
 
OBJ_id_˚
,31L

	)

2352 
	#SN_˚πifiˇã_pﬁicõs
 "˚πifiˇãPﬁicõs"

	)

2353 
	#LN_˚πifiˇã_pﬁicõs
 "X509v3 Cîtifiˇã Pﬁicõs"

	)

2354 
	#NID_˚πifiˇã_pﬁicõs
 89

	)

2355 
	#OBJ_˚πifiˇã_pﬁicõs
 
OBJ_id_˚
,32L

	)

2357 
	#SN_™y_pﬁicy
 "™yPﬁicy"

	)

2358 
	#LN_™y_pﬁicy
 "X509v3 Any Pﬁicy"

	)

2359 
	#NID_™y_pﬁicy
 746

	)

2360 
	#OBJ_™y_pﬁicy
 
OBJ_˚πifiˇã_pﬁicõs
,0L

	)

2362 
	#SN_pﬁicy_m≠pögs
 "pﬁicyM≠pögs"

	)

2363 
	#LN_pﬁicy_m≠pögs
 "X509v3 Pﬁicy M≠pögs"

	)

2364 
	#NID_pﬁicy_m≠pögs
 747

	)

2365 
	#OBJ_pﬁicy_m≠pögs
 
OBJ_id_˚
,33L

	)

2367 
	#SN_auth‹ôy_key_idítifõr
 "auth‹ôyKeyIdítifõr"

	)

2368 
	#LN_auth‹ôy_key_idítifõr
 "X509v3 Auth‹ôy Key Idítifõr"

	)

2369 
	#NID_auth‹ôy_key_idítifõr
 90

	)

2370 
	#OBJ_auth‹ôy_key_idítifõr
 
OBJ_id_˚
,35L

	)

2372 
	#SN_pﬁicy_c⁄°øöts
 "pﬁicyC⁄°øöts"

	)

2373 
	#LN_pﬁicy_c⁄°øöts
 "X509v3 Pﬁicy C⁄°øöts"

	)

2374 
	#NID_pﬁicy_c⁄°øöts
 401

	)

2375 
	#OBJ_pﬁicy_c⁄°øöts
 
OBJ_id_˚
,36L

	)

2377 
	#SN_ext_key_ußge
 "exãndedKeyUßge"

	)

2378 
	#LN_ext_key_ußge
 "X509v3 Exãnded Key Ußge"

	)

2379 
	#NID_ext_key_ußge
 126

	)

2380 
	#OBJ_ext_key_ußge
 
OBJ_id_˚
,37L

	)

2382 
	#SN_‰eshe°_¸l
 "‰eshe°CRL"

	)

2383 
	#LN_‰eshe°_¸l
 "X509v3 Fªshe° CRL"

	)

2384 
	#NID_‰eshe°_¸l
 857

	)

2385 
	#OBJ_‰eshe°_¸l
 
OBJ_id_˚
,46L

	)

2387 
	#SN_öhibô_™y_pﬁicy
 "öhibôAnyPﬁicy"

	)

2388 
	#LN_öhibô_™y_pﬁicy
 "X509v3 Inhibô Any Pﬁicy"

	)

2389 
	#NID_öhibô_™y_pﬁicy
 748

	)

2390 
	#OBJ_öhibô_™y_pﬁicy
 
OBJ_id_˚
,54L

	)

2392 
	#SN_èrgë_öf‹m©i⁄
 "èrgëInf‹m©i⁄"

	)

2393 
	#LN_èrgë_öf‹m©i⁄
 "X509v3 AC T¨gëög"

	)

2394 
	#NID_èrgë_öf‹m©i⁄
 402

	)

2395 
	#OBJ_èrgë_öf‹m©i⁄
 
OBJ_id_˚
,55L

	)

2397 
	#SN_no_ªv_avaû
 "noRevAvaû"

	)

2398 
	#LN_no_ªv_avaû
 "X509v3 NÿRevoˇti⁄ AvaûabÀ"

	)

2399 
	#NID_no_ªv_avaû
 403

	)

2400 
	#OBJ_no_ªv_avaû
 
OBJ_id_˚
,56L

	)

2402 
	#SN_√tsˇ≥
 "Nësˇ≥"

	)

2403 
	#LN_√tsˇ≥
 "Nësˇ≥ Communiˇti⁄†C‹p."

	)

2404 
	#NID_√tsˇ≥
 57

	)

2405 
	#OBJ_√tsˇ≥
 2L,16L,840L,1L,113730L

	)

2407 
	#SN_√tsˇ≥_˚π_exãnsi⁄
 "nsCîtExt"

	)

2408 
	#LN_√tsˇ≥_˚π_exãnsi⁄
 "Nësˇ≥ Cîtifiˇã Exãnsi⁄"

	)

2409 
	#NID_√tsˇ≥_˚π_exãnsi⁄
 58

	)

2410 
	#OBJ_√tsˇ≥_˚π_exãnsi⁄
 
OBJ_√tsˇ≥
,1L

	)

2412 
	#SN_√tsˇ≥_d©a_ty≥
 "nsD©aTy≥"

	)

2413 
	#LN_√tsˇ≥_d©a_ty≥
 "Nësˇ≥ D©®Ty≥"

	)

2414 
	#NID_√tsˇ≥_d©a_ty≥
 59

	)

2415 
	#OBJ_√tsˇ≥_d©a_ty≥
 
OBJ_√tsˇ≥
,2L

	)

2417 
	#SN_√tsˇ≥_˚π_ty≥
 "nsCîtTy≥"

	)

2418 
	#LN_√tsˇ≥_˚π_ty≥
 "Nësˇ≥ CîàTy≥"

	)

2419 
	#NID_√tsˇ≥_˚π_ty≥
 71

	)

2420 
	#OBJ_√tsˇ≥_˚π_ty≥
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,1L

	)

2422 
	#SN_√tsˇ≥_ba£_uæ
 "nsBa£Uæ"

	)

2423 
	#LN_√tsˇ≥_ba£_uæ
 "Nësˇ≥ Ba£ Uæ"

	)

2424 
	#NID_√tsˇ≥_ba£_uæ
 72

	)

2425 
	#OBJ_√tsˇ≥_ba£_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,2L

	)

2427 
	#SN_√tsˇ≥_ªvoˇti⁄_uæ
 "nsRevoˇti⁄Uæ"

	)

2428 
	#LN_√tsˇ≥_ªvoˇti⁄_uæ
 "Nësˇ≥ Revoˇti⁄ Uæ"

	)

2429 
	#NID_√tsˇ≥_ªvoˇti⁄_uæ
 73

	)

2430 
	#OBJ_√tsˇ≥_ªvoˇti⁄_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,3L

	)

2432 
	#SN_√tsˇ≥_ˇ_ªvoˇti⁄_uæ
 "nsCaRevoˇti⁄Uæ"

	)

2433 
	#LN_√tsˇ≥_ˇ_ªvoˇti⁄_uæ
 "Nësˇ≥ CA Revoˇti⁄ Uæ"

	)

2434 
	#NID_√tsˇ≥_ˇ_ªvoˇti⁄_uæ
 74

	)

2435 
	#OBJ_√tsˇ≥_ˇ_ªvoˇti⁄_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,4L

	)

2437 
	#SN_√tsˇ≥_ª√wÆ_uæ
 "nsRíewÆUæ"

	)

2438 
	#LN_√tsˇ≥_ª√wÆ_uæ
 "Nësˇ≥ RíewÆ Uæ"

	)

2439 
	#NID_√tsˇ≥_ª√wÆ_uæ
 75

	)

2440 
	#OBJ_√tsˇ≥_ª√wÆ_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,7L

	)

2442 
	#SN_√tsˇ≥_ˇ_pﬁicy_uæ
 "nsCaPﬁicyUæ"

	)

2443 
	#LN_√tsˇ≥_ˇ_pﬁicy_uæ
 "Nësˇ≥ CA Pﬁicy Uæ"

	)

2444 
	#NID_√tsˇ≥_ˇ_pﬁicy_uæ
 76

	)

2445 
	#OBJ_√tsˇ≥_ˇ_pﬁicy_uæ
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,8L

	)

2447 
	#SN_√tsˇ≥_s¶_£rvî_«me
 "nsS¶SîvîName"

	)

2448 
	#LN_√tsˇ≥_s¶_£rvî_«me
 "Nësˇ≥ SSL Sîvî Name"

	)

2449 
	#NID_√tsˇ≥_s¶_£rvî_«me
 77

	)

2450 
	#OBJ_√tsˇ≥_s¶_£rvî_«me
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,12L

	)

2452 
	#SN_√tsˇ≥_commít
 "nsCommít"

	)

2453 
	#LN_√tsˇ≥_commít
 "Nësˇ≥ Commít"

	)

2454 
	#NID_√tsˇ≥_commít
 78

	)

2455 
	#OBJ_√tsˇ≥_commít
 
OBJ_√tsˇ≥_˚π_exãnsi⁄
,13L

	)

2457 
	#SN_√tsˇ≥_˚π_£quí˚
 "nsCîtSequí˚"

	)

2458 
	#LN_√tsˇ≥_˚π_£quí˚
 "Nësˇ≥ Cîtifiˇã Sequí˚"

	)

2459 
	#NID_√tsˇ≥_˚π_£quí˚
 79

	)

2460 
	#OBJ_√tsˇ≥_˚π_£quí˚
 
OBJ_√tsˇ≥_d©a_ty≥
,5L

	)

2462 
	#SN_ns_sgc
 "nsSGC"

	)

2463 
	#LN_ns_sgc
 "Nësˇ≥ Sîvî G©ed Cry±o"

	)

2464 
	#NID_ns_sgc
 139

	)

2465 
	#OBJ_ns_sgc
 
OBJ_√tsˇ≥
,4L,1L

	)

2467 
	#SN_‹g
 "ORG"

	)

2468 
	#LN_‹g
 "‹g"

	)

2469 
	#NID_‹g
 379

	)

2470 
	#OBJ_‹g
 
OBJ_iso
,3L

	)

2472 
	#SN_dod
 "DOD"

	)

2473 
	#LN_dod
 "dod"

	)

2474 
	#NID_dod
 380

	)

2475 
	#OBJ_dod
 
OBJ_‹g
,6L

	)

2477 
	#SN_ü«
 "IANA"

	)

2478 
	#LN_ü«
 "ü«"

	)

2479 
	#NID_ü«
 381

	)

2480 
	#OBJ_ü«
 
OBJ_dod
,1L

	)

2482 
	#OBJ_öã∫ë
 
OBJ_ü«


	)

2484 
	#SN_Dúe˘‹y
 "dúe˘‹y"

	)

2485 
	#LN_Dúe˘‹y
 "Dúe˘‹y"

	)

2486 
	#NID_Dúe˘‹y
 382

	)

2487 
	#OBJ_Dúe˘‹y
 
OBJ_öã∫ë
,1L

	)

2489 
	#SN_M™agemít
 "mgmt"

	)

2490 
	#LN_M™agemít
 "M™agemít"

	)

2491 
	#NID_M™agemít
 383

	)

2492 
	#OBJ_M™agemít
 
OBJ_öã∫ë
,2L

	)

2494 
	#SN_Ex≥rimíèl
 "ex≥rimíèl"

	)

2495 
	#LN_Ex≥rimíèl
 "Ex≥rimíèl"

	)

2496 
	#NID_Ex≥rimíèl
 384

	)

2497 
	#OBJ_Ex≥rimíèl
 
OBJ_öã∫ë
,3L

	)

2499 
	#SN_Priv©e
 "¥iv©e"

	)

2500 
	#LN_Priv©e
 "Priv©e"

	)

2501 
	#NID_Priv©e
 385

	)

2502 
	#OBJ_Priv©e
 
OBJ_öã∫ë
,4L

	)

2504 
	#SN_Securôy
 "£curôy"

	)

2505 
	#LN_Securôy
 "Securôy"

	)

2506 
	#NID_Securôy
 386

	)

2507 
	#OBJ_Securôy
 
OBJ_öã∫ë
,5L

	)

2509 
	#SN_SNMPv2
 "¢mpv2"

	)

2510 
	#LN_SNMPv2
 "SNMPv2"

	)

2511 
	#NID_SNMPv2
 387

	)

2512 
	#OBJ_SNMPv2
 
OBJ_öã∫ë
,6L

	)

2514 
	#LN_Maû
 "Maû"

	)

2515 
	#NID_Maû
 388

	)

2516 
	#OBJ_Maû
 
OBJ_öã∫ë
,7L

	)

2518 
	#SN_E¡î¥i£s
 "íãΩri£s"

	)

2519 
	#LN_E¡î¥i£s
 "E¡î¥i£s"

	)

2520 
	#NID_E¡î¥i£s
 389

	)

2521 
	#OBJ_E¡î¥i£s
 
OBJ_Priv©e
,1L

	)

2523 
	#SN_dcObje˘
 "dcobje˘"

	)

2524 
	#LN_dcObje˘
 "dcObje˘"

	)

2525 
	#NID_dcObje˘
 390

	)

2526 
	#OBJ_dcObje˘
 
OBJ_E¡î¥i£s
,1466L,344L

	)

2528 
	#SN_mime_mhs
 "mime-mhs"

	)

2529 
	#LN_mime_mhs
 "MIME MHS"

	)

2530 
	#NID_mime_mhs
 504

	)

2531 
	#OBJ_mime_mhs
 
OBJ_Maû
,1L

	)

2533 
	#SN_mime_mhs_hódögs
 "mime-mhs-hódögs"

	)

2534 
	#LN_mime_mhs_hódögs
 "mime-mhs-hódögs"

	)

2535 
	#NID_mime_mhs_hódögs
 505

	)

2536 
	#OBJ_mime_mhs_hódögs
 
OBJ_mime_mhs
,1L

	)

2538 
	#SN_mime_mhs_bodõs
 "mime-mhs-bodõs"

	)

2539 
	#LN_mime_mhs_bodõs
 "mime-mhs-bodõs"

	)

2540 
	#NID_mime_mhs_bodõs
 506

	)

2541 
	#OBJ_mime_mhs_bodõs
 
OBJ_mime_mhs
,2L

	)

2543 
	#SN_id_hex_∑πül_mesßge
 "id-hex-∑πül-mesßge"

	)

2544 
	#LN_id_hex_∑πül_mesßge
 "id-hex-∑πül-mesßge"

	)

2545 
	#NID_id_hex_∑πül_mesßge
 507

	)

2546 
	#OBJ_id_hex_∑πül_mesßge
 
OBJ_mime_mhs_hódögs
,1L

	)

2548 
	#SN_id_hex_mu…ù¨t_mesßge
 "id-hex-mu…ù¨t-mesßge"

	)

2549 
	#LN_id_hex_mu…ù¨t_mesßge
 "id-hex-mu…ù¨t-mesßge"

	)

2550 
	#NID_id_hex_mu…ù¨t_mesßge
 508

	)

2551 
	#OBJ_id_hex_mu…ù¨t_mesßge
 
OBJ_mime_mhs_hódögs
,2L

	)

2553 
	#SN_æe_com¥essi⁄
 "RLE"

	)

2554 
	#LN_æe_com¥essi⁄
 "ru¿Àngth com¥essi⁄"

	)

2555 
	#NID_æe_com¥essi⁄
 124

	)

2556 
	#OBJ_æe_com¥essi⁄
 1L,1L,1L,1L,666L,1L

	)

2558 
	#SN_zlib_com¥essi⁄
 "ZLIB"

	)

2559 
	#LN_zlib_com¥essi⁄
 "zlib com¥essi⁄"

	)

2560 
	#NID_zlib_com¥essi⁄
 125

	)

2561 
	#OBJ_zlib_com¥essi⁄
 
OBJ_id_smime_Æg
,8L

	)

2563 
	#OBJ_cs‹
 2L,16L,840L,1L,101L,3L

	)

2565 
	#OBJ_ni°Alg‹ôhms
 
OBJ_cs‹
,4L

	)

2567 
	#OBJ_´s
 
OBJ_ni°Alg‹ôhms
,1L

	)

2569 
	#SN_´s_128_ecb
 "AES-128-ECB"

	)

2570 
	#LN_´s_128_ecb
 "´s-128-ecb"

	)

2571 
	#NID_´s_128_ecb
 418

	)

2572 
	#OBJ_´s_128_ecb
 
OBJ_´s
,1L

	)

2574 
	#SN_´s_128_cbc
 "AES-128-CBC"

	)

2575 
	#LN_´s_128_cbc
 "´s-128-cbc"

	)

2576 
	#NID_´s_128_cbc
 419

	)

2577 
	#OBJ_´s_128_cbc
 
OBJ_´s
,2L

	)

2579 
	#SN_´s_128_ofb128
 "AES-128-OFB"

	)

2580 
	#LN_´s_128_ofb128
 "´s-128-ofb"

	)

2581 
	#NID_´s_128_ofb128
 420

	)

2582 
	#OBJ_´s_128_ofb128
 
OBJ_´s
,3L

	)

2584 
	#SN_´s_128_cfb128
 "AES-128-CFB"

	)

2585 
	#LN_´s_128_cfb128
 "´s-128-cfb"

	)

2586 
	#NID_´s_128_cfb128
 421

	)

2587 
	#OBJ_´s_128_cfb128
 
OBJ_´s
,4L

	)

2589 
	#SN_´s_192_ecb
 "AES-192-ECB"

	)

2590 
	#LN_´s_192_ecb
 "´s-192-ecb"

	)

2591 
	#NID_´s_192_ecb
 422

	)

2592 
	#OBJ_´s_192_ecb
 
OBJ_´s
,21L

	)

2594 
	#SN_´s_192_cbc
 "AES-192-CBC"

	)

2595 
	#LN_´s_192_cbc
 "´s-192-cbc"

	)

2596 
	#NID_´s_192_cbc
 423

	)

2597 
	#OBJ_´s_192_cbc
 
OBJ_´s
,22L

	)

2599 
	#SN_´s_192_ofb128
 "AES-192-OFB"

	)

2600 
	#LN_´s_192_ofb128
 "´s-192-ofb"

	)

2601 
	#NID_´s_192_ofb128
 424

	)

2602 
	#OBJ_´s_192_ofb128
 
OBJ_´s
,23L

	)

2604 
	#SN_´s_192_cfb128
 "AES-192-CFB"

	)

2605 
	#LN_´s_192_cfb128
 "´s-192-cfb"

	)

2606 
	#NID_´s_192_cfb128
 425

	)

2607 
	#OBJ_´s_192_cfb128
 
OBJ_´s
,24L

	)

2609 
	#SN_´s_256_ecb
 "AES-256-ECB"

	)

2610 
	#LN_´s_256_ecb
 "´s-256-ecb"

	)

2611 
	#NID_´s_256_ecb
 426

	)

2612 
	#OBJ_´s_256_ecb
 
OBJ_´s
,41L

	)

2614 
	#SN_´s_256_cbc
 "AES-256-CBC"

	)

2615 
	#LN_´s_256_cbc
 "´s-256-cbc"

	)

2616 
	#NID_´s_256_cbc
 427

	)

2617 
	#OBJ_´s_256_cbc
 
OBJ_´s
,42L

	)

2619 
	#SN_´s_256_ofb128
 "AES-256-OFB"

	)

2620 
	#LN_´s_256_ofb128
 "´s-256-ofb"

	)

2621 
	#NID_´s_256_ofb128
 428

	)

2622 
	#OBJ_´s_256_ofb128
 
OBJ_´s
,43L

	)

2624 
	#SN_´s_256_cfb128
 "AES-256-CFB"

	)

2625 
	#LN_´s_256_cfb128
 "´s-256-cfb"

	)

2626 
	#NID_´s_256_cfb128
 429

	)

2627 
	#OBJ_´s_256_cfb128
 
OBJ_´s
,44L

	)

2629 
	#SN_´s_128_cfb1
 "AES-128-CFB1"

	)

2630 
	#LN_´s_128_cfb1
 "´s-128-cfb1"

	)

2631 
	#NID_´s_128_cfb1
 650

	)

2633 
	#SN_´s_192_cfb1
 "AES-192-CFB1"

	)

2634 
	#LN_´s_192_cfb1
 "´s-192-cfb1"

	)

2635 
	#NID_´s_192_cfb1
 651

	)

2637 
	#SN_´s_256_cfb1
 "AES-256-CFB1"

	)

2638 
	#LN_´s_256_cfb1
 "´s-256-cfb1"

	)

2639 
	#NID_´s_256_cfb1
 652

	)

2641 
	#SN_´s_128_cfb8
 "AES-128-CFB8"

	)

2642 
	#LN_´s_128_cfb8
 "´s-128-cfb8"

	)

2643 
	#NID_´s_128_cfb8
 653

	)

2645 
	#SN_´s_192_cfb8
 "AES-192-CFB8"

	)

2646 
	#LN_´s_192_cfb8
 "´s-192-cfb8"

	)

2647 
	#NID_´s_192_cfb8
 654

	)

2649 
	#SN_´s_256_cfb8
 "AES-256-CFB8"

	)

2650 
	#LN_´s_256_cfb8
 "´s-256-cfb8"

	)

2651 
	#NID_´s_256_cfb8
 655

	)

2653 
	#SN_des_cfb1
 "DES-CFB1"

	)

2654 
	#LN_des_cfb1
 "des-cfb1"

	)

2655 
	#NID_des_cfb1
 656

	)

2657 
	#SN_des_cfb8
 "DES-CFB8"

	)

2658 
	#LN_des_cfb8
 "des-cfb8"

	)

2659 
	#NID_des_cfb8
 657

	)

2661 
	#SN_des_ede3_cfb1
 "DES-EDE3-CFB1"

	)

2662 
	#LN_des_ede3_cfb1
 "des-ede3-cfb1"

	)

2663 
	#NID_des_ede3_cfb1
 658

	)

2665 
	#SN_des_ede3_cfb8
 "DES-EDE3-CFB8"

	)

2666 
	#LN_des_ede3_cfb8
 "des-ede3-cfb8"

	)

2667 
	#NID_des_ede3_cfb8
 659

	)

2669 
	#SN_id_´s128_wøp
 "id-´s128-wøp"

	)

2670 
	#NID_id_´s128_wøp
 788

	)

2671 
	#OBJ_id_´s128_wøp
 
OBJ_´s
,5L

	)

2673 
	#SN_id_´s192_wøp
 "id-´s192-wøp"

	)

2674 
	#NID_id_´s192_wøp
 789

	)

2675 
	#OBJ_id_´s192_wøp
 
OBJ_´s
,25L

	)

2677 
	#SN_id_´s256_wøp
 "id-´s256-wøp"

	)

2678 
	#NID_id_´s256_wøp
 790

	)

2679 
	#OBJ_id_´s256_wøp
 
OBJ_´s
,45L

	)

2681 
	#OBJ_ni°_hashÆgs
 
OBJ_ni°Alg‹ôhms
,2L

	)

2683 
	#SN_sha256
 "SHA256"

	)

2684 
	#LN_sha256
 "sha256"

	)

2685 
	#NID_sha256
 672

	)

2686 
	#OBJ_sha256
 
OBJ_ni°_hashÆgs
,1L

	)

2688 
	#SN_sha384
 "SHA384"

	)

2689 
	#LN_sha384
 "sha384"

	)

2690 
	#NID_sha384
 673

	)

2691 
	#OBJ_sha384
 
OBJ_ni°_hashÆgs
,2L

	)

2693 
	#SN_sha512
 "SHA512"

	)

2694 
	#LN_sha512
 "sha512"

	)

2695 
	#NID_sha512
 674

	)

2696 
	#OBJ_sha512
 
OBJ_ni°_hashÆgs
,3L

	)

2698 
	#SN_sha224
 "SHA224"

	)

2699 
	#LN_sha224
 "sha224"

	)

2700 
	#NID_sha224
 675

	)

2701 
	#OBJ_sha224
 
OBJ_ni°_hashÆgs
,4L

	)

2703 
	#OBJ_dß_wôh_sha2
 
OBJ_ni°Alg‹ôhms
,3L

	)

2705 
	#SN_dß_wôh_SHA224
 "dß_wôh_SHA224"

	)

2706 
	#NID_dß_wôh_SHA224
 802

	)

2707 
	#OBJ_dß_wôh_SHA224
 
OBJ_dß_wôh_sha2
,1L

	)

2709 
	#SN_dß_wôh_SHA256
 "dß_wôh_SHA256"

	)

2710 
	#NID_dß_wôh_SHA256
 803

	)

2711 
	#OBJ_dß_wôh_SHA256
 
OBJ_dß_wôh_sha2
,2L

	)

2713 
	#SN_hﬁd_ö°ru˘i⁄_code
 "hﬁdIn°ru˘i⁄Code"

	)

2714 
	#LN_hﬁd_ö°ru˘i⁄_code
 "Hﬁd In°ru˘i⁄ Code"

	)

2715 
	#NID_hﬁd_ö°ru˘i⁄_code
 430

	)

2716 
	#OBJ_hﬁd_ö°ru˘i⁄_code
 
OBJ_id_˚
,23L

	)

2718 
	#OBJ_hﬁdIn°ru˘i⁄
 
OBJ_X9_57
,2L

	)

2720 
	#SN_hﬁd_ö°ru˘i⁄_n⁄e
 "hﬁdIn°ru˘i⁄N⁄e"

	)

2721 
	#LN_hﬁd_ö°ru˘i⁄_n⁄e
 "Hﬁd In°ru˘i⁄ N⁄e"

	)

2722 
	#NID_hﬁd_ö°ru˘i⁄_n⁄e
 431

	)

2723 
	#OBJ_hﬁd_ö°ru˘i⁄_n⁄e
 
OBJ_hﬁdIn°ru˘i⁄
,1L

	)

2725 
	#SN_hﬁd_ö°ru˘i⁄_ˇŒ_issuî
 "hﬁdIn°ru˘i⁄CÆlIssuî"

	)

2726 
	#LN_hﬁd_ö°ru˘i⁄_ˇŒ_issuî
 "Hﬁd In°ru˘i⁄ CÆ»Issuî"

	)

2727 
	#NID_hﬁd_ö°ru˘i⁄_ˇŒ_issuî
 432

	)

2728 
	#OBJ_hﬁd_ö°ru˘i⁄_ˇŒ_issuî
 
OBJ_hﬁdIn°ru˘i⁄
,2L

	)

2730 
	#SN_hﬁd_ö°ru˘i⁄_ªje˘
 "hﬁdIn°ru˘i⁄Reje˘"

	)

2731 
	#LN_hﬁd_ö°ru˘i⁄_ªje˘
 "Hﬁd In°ru˘i⁄ Reje˘"

	)

2732 
	#NID_hﬁd_ö°ru˘i⁄_ªje˘
 433

	)

2733 
	#OBJ_hﬁd_ö°ru˘i⁄_ªje˘
 
OBJ_hﬁdIn°ru˘i⁄
,3L

	)

2735 
	#SN_d©a
 "d©a"

	)

2736 
	#NID_d©a
 434

	)

2737 
	#OBJ_d©a
 
OBJ_ôu_t
,9L

	)

2739 
	#SN_pss
 "pss"

	)

2740 
	#NID_pss
 435

	)

2741 
	#OBJ_pss
 
OBJ_d©a
,2342L

	)

2743 
	#SN_u˛
 "u˛"

	)

2744 
	#NID_u˛
 436

	)

2745 
	#OBJ_u˛
 
OBJ_pss
,19200300L

	)

2747 
	#SN_pûŸ
 "pûŸ"

	)

2748 
	#NID_pûŸ
 437

	)

2749 
	#OBJ_pûŸ
 
OBJ_u˛
,100L

	)

2751 
	#LN_pûŸAâribuãTy≥
 "pûŸAâribuãTy≥"

	)

2752 
	#NID_pûŸAâribuãTy≥
 438

	)

2753 
	#OBJ_pûŸAâribuãTy≥
 
OBJ_pûŸ
,1L

	)

2755 
	#LN_pûŸAâribuãSy¡ax
 "pûŸAâribuãSy¡ax"

	)

2756 
	#NID_pûŸAâribuãSy¡ax
 439

	)

2757 
	#OBJ_pûŸAâribuãSy¡ax
 
OBJ_pûŸ
,3L

	)

2759 
	#LN_pûŸObje˘Cœss
 "pûŸObje˘Cœss"

	)

2760 
	#NID_pûŸObje˘Cœss
 440

	)

2761 
	#OBJ_pûŸObje˘Cœss
 
OBJ_pûŸ
,4L

	)

2763 
	#LN_pûŸGroups
 "pûŸGroups"

	)

2764 
	#NID_pûŸGroups
 441

	)

2765 
	#OBJ_pûŸGroups
 
OBJ_pûŸ
,10L

	)

2767 
	#LN_iA5SåögSy¡ax
 "iA5SåögSy¡ax"

	)

2768 
	#NID_iA5SåögSy¡ax
 442

	)

2769 
	#OBJ_iA5SåögSy¡ax
 
OBJ_pûŸAâribuãSy¡ax
,4L

	)

2771 
	#LN_ˇ£Ign‹eIA5SåögSy¡ax
 "ˇ£Ign‹eIA5SåögSy¡ax"

	)

2772 
	#NID_ˇ£Ign‹eIA5SåögSy¡ax
 443

	)

2773 
	#OBJ_ˇ£Ign‹eIA5SåögSy¡ax
 
OBJ_pûŸAâribuãSy¡ax
,5L

	)

2775 
	#LN_pûŸObje˘
 "pûŸObje˘"

	)

2776 
	#NID_pûŸObje˘
 444

	)

2777 
	#OBJ_pûŸObje˘
 
OBJ_pûŸObje˘Cœss
,3L

	)

2779 
	#LN_pûŸPîs⁄
 "pûŸPîs⁄"

	)

2780 
	#NID_pûŸPîs⁄
 445

	)

2781 
	#OBJ_pûŸPîs⁄
 
OBJ_pûŸObje˘Cœss
,4L

	)

2783 
	#SN_accou¡
 "accou¡"

	)

2784 
	#NID_accou¡
 446

	)

2785 
	#OBJ_accou¡
 
OBJ_pûŸObje˘Cœss
,5L

	)

2787 
	#SN_documít
 "documít"

	)

2788 
	#NID_documít
 447

	)

2789 
	#OBJ_documít
 
OBJ_pûŸObje˘Cœss
,6L

	)

2791 
	#SN_room
 "room"

	)

2792 
	#NID_room
 448

	)

2793 
	#OBJ_room
 
OBJ_pûŸObje˘Cœss
,7L

	)

2795 
	#LN_documítSîõs
 "documítSîõs"

	)

2796 
	#NID_documítSîõs
 449

	)

2797 
	#OBJ_documítSîõs
 
OBJ_pûŸObje˘Cœss
,9L

	)

2799 
	#SN_Domaö
 "domaö"

	)

2800 
	#LN_Domaö
 "Domaö"

	)

2801 
	#NID_Domaö
 392

	)

2802 
	#OBJ_Domaö
 
OBJ_pûŸObje˘Cœss
,13L

	)

2804 
	#LN_rFC822loˇlP¨t
 "rFC822loˇlP¨t"

	)

2805 
	#NID_rFC822loˇlP¨t
 450

	)

2806 
	#OBJ_rFC822loˇlP¨t
 
OBJ_pûŸObje˘Cœss
,14L

	)

2808 
	#LN_dNSDomaö
 "dNSDomaö"

	)

2809 
	#NID_dNSDomaö
 451

	)

2810 
	#OBJ_dNSDomaö
 
OBJ_pûŸObje˘Cœss
,15L

	)

2812 
	#LN_domaöRñ©edObje˘
 "domaöRñ©edObje˘"

	)

2813 
	#NID_domaöRñ©edObje˘
 452

	)

2814 
	#OBJ_domaöRñ©edObje˘
 
OBJ_pûŸObje˘Cœss
,17L

	)

2816 
	#LN_‰õndlyCou¡ry
 "‰õndlyCou¡ry"

	)

2817 
	#NID_‰õndlyCou¡ry
 453

	)

2818 
	#OBJ_‰õndlyCou¡ry
 
OBJ_pûŸObje˘Cœss
,18L

	)

2820 
	#LN_sim∂eSecurôyObje˘
 "sim∂eSecurôyObje˘"

	)

2821 
	#NID_sim∂eSecurôyObje˘
 454

	)

2822 
	#OBJ_sim∂eSecurôyObje˘
 
OBJ_pûŸObje˘Cœss
,19L

	)

2824 
	#LN_pûŸOrg™iz©i⁄
 "pûŸOrg™iz©i⁄"

	)

2825 
	#NID_pûŸOrg™iz©i⁄
 455

	)

2826 
	#OBJ_pûŸOrg™iz©i⁄
 
OBJ_pûŸObje˘Cœss
,20L

	)

2828 
	#LN_pûŸDSA
 "pûŸDSA"

	)

2829 
	#NID_pûŸDSA
 456

	)

2830 
	#OBJ_pûŸDSA
 
OBJ_pûŸObje˘Cœss
,21L

	)

2832 
	#LN_quÆôyLabñÀdD©a
 "quÆôyLabñÀdD©a"

	)

2833 
	#NID_quÆôyLabñÀdD©a
 457

	)

2834 
	#OBJ_quÆôyLabñÀdD©a
 
OBJ_pûŸObje˘Cœss
,22L

	)

2836 
	#SN_u£rId
 "UID"

	)

2837 
	#LN_u£rId
 "u£rId"

	)

2838 
	#NID_u£rId
 458

	)

2839 
	#OBJ_u£rId
 
OBJ_pûŸAâribuãTy≥
,1L

	)

2841 
	#LN_ãxtEncodedORAddªss
 "ãxtEncodedORAddªss"

	)

2842 
	#NID_ãxtEncodedORAddªss
 459

	)

2843 
	#OBJ_ãxtEncodedORAddªss
 
OBJ_pûŸAâribuãTy≥
,2L

	)

2845 
	#SN_rfc822Maûbox
 "maû"

	)

2846 
	#LN_rfc822Maûbox
 "rfc822Maûbox"

	)

2847 
	#NID_rfc822Maûbox
 460

	)

2848 
	#OBJ_rfc822Maûbox
 
OBJ_pûŸAâribuãTy≥
,3L

	)

2850 
	#SN_öfo
 "öfo"

	)

2851 
	#NID_öfo
 461

	)

2852 
	#OBJ_öfo
 
OBJ_pûŸAâribuãTy≥
,4L

	)

2854 
	#LN_ÁvourôeDrök
 "ÁvourôeDrök"

	)

2855 
	#NID_ÁvourôeDrök
 462

	)

2856 
	#OBJ_ÁvourôeDrök
 
OBJ_pûŸAâribuãTy≥
,5L

	)

2858 
	#LN_roomNumbî
 "roomNumbî"

	)

2859 
	#NID_roomNumbî
 463

	)

2860 
	#OBJ_roomNumbî
 
OBJ_pûŸAâribuãTy≥
,6L

	)

2862 
	#SN_phŸo
 "phŸo"

	)

2863 
	#NID_phŸo
 464

	)

2864 
	#OBJ_phŸo
 
OBJ_pûŸAâribuãTy≥
,7L

	)

2866 
	#LN_u£rCœss
 "u£rCœss"

	)

2867 
	#NID_u£rCœss
 465

	)

2868 
	#OBJ_u£rCœss
 
OBJ_pûŸAâribuãTy≥
,8L

	)

2870 
	#SN_ho°
 "ho°"

	)

2871 
	#NID_ho°
 466

	)

2872 
	#OBJ_ho°
 
OBJ_pûŸAâribuãTy≥
,9L

	)

2874 
	#SN_m™agî
 "m™agî"

	)

2875 
	#NID_m™agî
 467

	)

2876 
	#OBJ_m™agî
 
OBJ_pûŸAâribuãTy≥
,10L

	)

2878 
	#LN_documítIdítifõr
 "documítIdítifõr"

	)

2879 
	#NID_documítIdítifõr
 468

	)

2880 
	#OBJ_documítIdítifõr
 
OBJ_pûŸAâribuãTy≥
,11L

	)

2882 
	#LN_documítTôÀ
 "documítTôÀ"

	)

2883 
	#NID_documítTôÀ
 469

	)

2884 
	#OBJ_documítTôÀ
 
OBJ_pûŸAâribuãTy≥
,12L

	)

2886 
	#LN_documítVîsi⁄
 "documítVîsi⁄"

	)

2887 
	#NID_documítVîsi⁄
 470

	)

2888 
	#OBJ_documítVîsi⁄
 
OBJ_pûŸAâribuãTy≥
,13L

	)

2890 
	#LN_documítAuth‹
 "documítAuth‹"

	)

2891 
	#NID_documítAuth‹
 471

	)

2892 
	#OBJ_documítAuth‹
 
OBJ_pûŸAâribuãTy≥
,14L

	)

2894 
	#LN_documítLoˇti⁄
 "documítLoˇti⁄"

	)

2895 
	#NID_documítLoˇti⁄
 472

	)

2896 
	#OBJ_documítLoˇti⁄
 
OBJ_pûŸAâribuãTy≥
,15L

	)

2898 
	#LN_homeTñïh⁄eNumbî
 "homeTñïh⁄eNumbî"

	)

2899 
	#NID_homeTñïh⁄eNumbî
 473

	)

2900 
	#OBJ_homeTñïh⁄eNumbî
 
OBJ_pûŸAâribuãTy≥
,20L

	)

2902 
	#SN_£¸ë¨y
 "£¸ë¨y"

	)

2903 
	#NID_£¸ë¨y
 474

	)

2904 
	#OBJ_£¸ë¨y
 
OBJ_pûŸAâribuãTy≥
,21L

	)

2906 
	#LN_ŸhîMaûbox
 "ŸhîMaûbox"

	)

2907 
	#NID_ŸhîMaûbox
 475

	)

2908 
	#OBJ_ŸhîMaûbox
 
OBJ_pûŸAâribuãTy≥
,22L

	)

2910 
	#LN_œ°ModifõdTime
 "œ°ModifõdTime"

	)

2911 
	#NID_œ°ModifõdTime
 476

	)

2912 
	#OBJ_œ°ModifõdTime
 
OBJ_pûŸAâribuãTy≥
,23L

	)

2914 
	#LN_œ°ModifõdBy
 "œ°ModifõdBy"

	)

2915 
	#NID_œ°ModifõdBy
 477

	)

2916 
	#OBJ_œ°ModifõdBy
 
OBJ_pûŸAâribuãTy≥
,24L

	)

2918 
	#SN_domaöComp⁄ít
 "DC"

	)

2919 
	#LN_domaöComp⁄ít
 "domaöComp⁄ít"

	)

2920 
	#NID_domaöComp⁄ít
 391

	)

2921 
	#OBJ_domaöComp⁄ít
 
OBJ_pûŸAâribuãTy≥
,25L

	)

2923 
	#LN_aRec‹d
 "aRec‹d"

	)

2924 
	#NID_aRec‹d
 478

	)

2925 
	#OBJ_aRec‹d
 
OBJ_pûŸAâribuãTy≥
,26L

	)

2927 
	#LN_pûŸAâribuãTy≥27
 "pûŸAâribuãTy≥27"

	)

2928 
	#NID_pûŸAâribuãTy≥27
 479

	)

2929 
	#OBJ_pûŸAâribuãTy≥27
 
OBJ_pûŸAâribuãTy≥
,27L

	)

2931 
	#LN_mXRec‹d
 "mXRec‹d"

	)

2932 
	#NID_mXRec‹d
 480

	)

2933 
	#OBJ_mXRec‹d
 
OBJ_pûŸAâribuãTy≥
,28L

	)

2935 
	#LN_nSRec‹d
 "nSRec‹d"

	)

2936 
	#NID_nSRec‹d
 481

	)

2937 
	#OBJ_nSRec‹d
 
OBJ_pûŸAâribuãTy≥
,29L

	)

2939 
	#LN_sOARec‹d
 "sOARec‹d"

	)

2940 
	#NID_sOARec‹d
 482

	)

2941 
	#OBJ_sOARec‹d
 
OBJ_pûŸAâribuãTy≥
,30L

	)

2943 
	#LN_cNAMERec‹d
 "cNAMERec‹d"

	)

2944 
	#NID_cNAMERec‹d
 483

	)

2945 
	#OBJ_cNAMERec‹d
 
OBJ_pûŸAâribuãTy≥
,31L

	)

2947 
	#LN_assocüãdDomaö
 "assocüãdDomaö"

	)

2948 
	#NID_assocüãdDomaö
 484

	)

2949 
	#OBJ_assocüãdDomaö
 
OBJ_pûŸAâribuãTy≥
,37L

	)

2951 
	#LN_assocüãdName
 "assocüãdName"

	)

2952 
	#NID_assocüãdName
 485

	)

2953 
	#OBJ_assocüãdName
 
OBJ_pûŸAâribuãTy≥
,38L

	)

2955 
	#LN_homePo°ÆAddªss
 "homePo°ÆAddªss"

	)

2956 
	#NID_homePo°ÆAddªss
 486

	)

2957 
	#OBJ_homePo°ÆAddªss
 
OBJ_pûŸAâribuãTy≥
,39L

	)

2959 
	#LN_≥rs⁄ÆTôÀ
 "≥rs⁄ÆTôÀ"

	)

2960 
	#NID_≥rs⁄ÆTôÀ
 487

	)

2961 
	#OBJ_≥rs⁄ÆTôÀ
 
OBJ_pûŸAâribuãTy≥
,40L

	)

2963 
	#LN_mobûeTñïh⁄eNumbî
 "mobûeTñïh⁄eNumbî"

	)

2964 
	#NID_mobûeTñïh⁄eNumbî
 488

	)

2965 
	#OBJ_mobûeTñïh⁄eNumbî
 
OBJ_pûŸAâribuãTy≥
,41L

	)

2967 
	#LN_∑gîTñïh⁄eNumbî
 "∑gîTñïh⁄eNumbî"

	)

2968 
	#NID_∑gîTñïh⁄eNumbî
 489

	)

2969 
	#OBJ_∑gîTñïh⁄eNumbî
 
OBJ_pûŸAâribuãTy≥
,42L

	)

2971 
	#LN_‰õndlyCou¡ryName
 "‰õndlyCou¡ryName"

	)

2972 
	#NID_‰õndlyCou¡ryName
 490

	)

2973 
	#OBJ_‰õndlyCou¡ryName
 
OBJ_pûŸAâribuãTy≥
,43L

	)

2975 
	#LN_‹g™iz©i⁄ÆSètus
 "‹g™iz©i⁄ÆSètus"

	)

2976 
	#NID_‹g™iz©i⁄ÆSètus
 491

	)

2977 
	#OBJ_‹g™iz©i⁄ÆSètus
 
OBJ_pûŸAâribuãTy≥
,45L

	)

2979 
	#LN_j™ëMaûbox
 "j™ëMaûbox"

	)

2980 
	#NID_j™ëMaûbox
 492

	)

2981 
	#OBJ_j™ëMaûbox
 
OBJ_pûŸAâribuãTy≥
,46L

	)

2983 
	#LN_maûPª„ªn˚O±i⁄
 "maûPª„ªn˚O±i⁄"

	)

2984 
	#NID_maûPª„ªn˚O±i⁄
 493

	)

2985 
	#OBJ_maûPª„ªn˚O±i⁄
 
OBJ_pûŸAâribuãTy≥
,47L

	)

2987 
	#LN_buûdögName
 "buûdögName"

	)

2988 
	#NID_buûdögName
 494

	)

2989 
	#OBJ_buûdögName
 
OBJ_pûŸAâribuãTy≥
,48L

	)

2991 
	#LN_dSAQuÆôy
 "dSAQuÆôy"

	)

2992 
	#NID_dSAQuÆôy
 495

	)

2993 
	#OBJ_dSAQuÆôy
 
OBJ_pûŸAâribuãTy≥
,49L

	)

2995 
	#LN_sögÀLevñQuÆôy
 "sögÀLevñQuÆôy"

	)

2996 
	#NID_sögÀLevñQuÆôy
 496

	)

2997 
	#OBJ_sögÀLevñQuÆôy
 
OBJ_pûŸAâribuãTy≥
,50L

	)

2999 
	#LN_subåìMöimumQuÆôy
 "subåìMöimumQuÆôy"

	)

3000 
	#NID_subåìMöimumQuÆôy
 497

	)

3001 
	#OBJ_subåìMöimumQuÆôy
 
OBJ_pûŸAâribuãTy≥
,51L

	)

3003 
	#LN_subåìMaximumQuÆôy
 "subåìMaximumQuÆôy"

	)

3004 
	#NID_subåìMaximumQuÆôy
 498

	)

3005 
	#OBJ_subåìMaximumQuÆôy
 
OBJ_pûŸAâribuãTy≥
,52L

	)

3007 
	#LN_≥rs⁄ÆSig«tuª
 "≥rs⁄ÆSig«tuª"

	)

3008 
	#NID_≥rs⁄ÆSig«tuª
 499

	)

3009 
	#OBJ_≥rs⁄ÆSig«tuª
 
OBJ_pûŸAâribuãTy≥
,53L

	)

3011 
	#LN_dITRedúe˘
 "dITRedúe˘"

	)

3012 
	#NID_dITRedúe˘
 500

	)

3013 
	#OBJ_dITRedúe˘
 
OBJ_pûŸAâribuãTy≥
,54L

	)

3015 
	#SN_audio
 "audio"

	)

3016 
	#NID_audio
 501

	)

3017 
	#OBJ_audio
 
OBJ_pûŸAâribuãTy≥
,55L

	)

3019 
	#LN_documítPublishî
 "documítPublishî"

	)

3020 
	#NID_documítPublishî
 502

	)

3021 
	#OBJ_documítPublishî
 
OBJ_pûŸAâribuãTy≥
,56L

	)

3023 
	#SN_id_£t
 "id-£t"

	)

3024 
	#LN_id_£t
 "Secuª EÀ˘r⁄i¯Tønß˘i⁄s"

	)

3025 
	#NID_id_£t
 512

	)

3026 
	#OBJ_id_£t
 
OBJ_öã∫©i⁄Æ_‹g™iz©i⁄s
,42L

	)

3028 
	#SN_£t_˘y≥
 "£t-˘y≥"

	)

3029 
	#LN_£t_˘y≥
 "c⁄ã¡Åy≥s"

	)

3030 
	#NID_£t_˘y≥
 513

	)

3031 
	#OBJ_£t_˘y≥
 
OBJ_id_£t
,0L

	)

3033 
	#SN_£t_msgExt
 "£t-msgExt"

	)

3034 
	#LN_£t_msgExt
 "mesßgêexãnsi⁄s"

	)

3035 
	#NID_£t_msgExt
 514

	)

3036 
	#OBJ_£t_msgExt
 
OBJ_id_£t
,1L

	)

3038 
	#SN_£t_©å
 "£t-©å"

	)

3039 
	#NID_£t_©å
 515

	)

3040 
	#OBJ_£t_©å
 
OBJ_id_£t
,3L

	)

3042 
	#SN_£t_pﬁicy
 "£t-pﬁicy"

	)

3043 
	#NID_£t_pﬁicy
 516

	)

3044 
	#OBJ_£t_pﬁicy
 
OBJ_id_£t
,5L

	)

3046 
	#SN_£t_˚πExt
 "£t-˚πExt"

	)

3047 
	#LN_£t_˚πExt
 "˚πifiˇãÉxãnsi⁄s"

	)

3048 
	#NID_£t_˚πExt
 517

	)

3049 
	#OBJ_£t_˚πExt
 
OBJ_id_£t
,7L

	)

3051 
	#SN_£t_bønd
 "£t-bønd"

	)

3052 
	#NID_£t_bønd
 518

	)

3053 
	#OBJ_£t_bønd
 
OBJ_id_£t
,8L

	)

3055 
	#SN_£t˘_PAND©a
 "£t˘-PAND©a"

	)

3056 
	#NID_£t˘_PAND©a
 519

	)

3057 
	#OBJ_£t˘_PAND©a
 
OBJ_£t_˘y≥
,0L

	)

3059 
	#SN_£t˘_PANTokí
 "£t˘-PANTokí"

	)

3060 
	#NID_£t˘_PANTokí
 520

	)

3061 
	#OBJ_£t˘_PANTokí
 
OBJ_£t_˘y≥
,1L

	)

3063 
	#SN_£t˘_PANO∆y
 "£t˘-PANO∆y"

	)

3064 
	#NID_£t˘_PANO∆y
 521

	)

3065 
	#OBJ_£t˘_PANO∆y
 
OBJ_£t_˘y≥
,2L

	)

3067 
	#SN_£t˘_OID©a
 "£t˘-OID©a"

	)

3068 
	#NID_£t˘_OID©a
 522

	)

3069 
	#OBJ_£t˘_OID©a
 
OBJ_£t_˘y≥
,3L

	)

3071 
	#SN_£t˘_PI
 "£t˘-PI"

	)

3072 
	#NID_£t˘_PI
 523

	)

3073 
	#OBJ_£t˘_PI
 
OBJ_£t_˘y≥
,4L

	)

3075 
	#SN_£t˘_PID©a
 "£t˘-PID©a"

	)

3076 
	#NID_£t˘_PID©a
 524

	)

3077 
	#OBJ_£t˘_PID©a
 
OBJ_£t_˘y≥
,5L

	)

3079 
	#SN_£t˘_PID©aUnsig√d
 "£t˘-PID©aUnsig√d"

	)

3080 
	#NID_£t˘_PID©aUnsig√d
 525

	)

3081 
	#OBJ_£t˘_PID©aUnsig√d
 
OBJ_£t_˘y≥
,6L

	)

3083 
	#SN_£t˘_HODI≈ut
 "£t˘-HODI≈ut"

	)

3084 
	#NID_£t˘_HODI≈ut
 526

	)

3085 
	#OBJ_£t˘_HODI≈ut
 
OBJ_£t_˘y≥
,7L

	)

3087 
	#SN_£t˘_AuthResBaggage
 "£t˘-AuthResBaggage"

	)

3088 
	#NID_£t˘_AuthResBaggage
 527

	)

3089 
	#OBJ_£t˘_AuthResBaggage
 
OBJ_£t_˘y≥
,8L

	)

3091 
	#SN_£t˘_AuthRevReqBaggage
 "£t˘-AuthRevReqBaggage"

	)

3092 
	#NID_£t˘_AuthRevReqBaggage
 528

	)

3093 
	#OBJ_£t˘_AuthRevReqBaggage
 
OBJ_£t_˘y≥
,9L

	)

3095 
	#SN_£t˘_AuthRevResBaggage
 "£t˘-AuthRevResBaggage"

	)

3096 
	#NID_£t˘_AuthRevResBaggage
 529

	)

3097 
	#OBJ_£t˘_AuthRevResBaggage
 
OBJ_£t_˘y≥
,10L

	)

3099 
	#SN_£t˘_C≠TokíSeq
 "£t˘-C≠TokíSeq"

	)

3100 
	#NID_£t˘_C≠TokíSeq
 530

	)

3101 
	#OBJ_£t˘_C≠TokíSeq
 
OBJ_£t_˘y≥
,11L

	)

3103 
	#SN_£t˘_PInôResD©a
 "£t˘-PInôResD©a"

	)

3104 
	#NID_£t˘_PInôResD©a
 531

	)

3105 
	#OBJ_£t˘_PInôResD©a
 
OBJ_£t_˘y≥
,12L

	)

3107 
	#SN_£t˘_PI_TBS
 "£t˘-PI-TBS"

	)

3108 
	#NID_£t˘_PI_TBS
 532

	)

3109 
	#OBJ_£t˘_PI_TBS
 
OBJ_£t_˘y≥
,13L

	)

3111 
	#SN_£t˘_PResD©a
 "£t˘-PResD©a"

	)

3112 
	#NID_£t˘_PResD©a
 533

	)

3113 
	#OBJ_£t˘_PResD©a
 
OBJ_£t_˘y≥
,14L

	)

3115 
	#SN_£t˘_AuthReqTBS
 "£t˘-AuthReqTBS"

	)

3116 
	#NID_£t˘_AuthReqTBS
 534

	)

3117 
	#OBJ_£t˘_AuthReqTBS
 
OBJ_£t_˘y≥
,16L

	)

3119 
	#SN_£t˘_AuthResTBS
 "£t˘-AuthResTBS"

	)

3120 
	#NID_£t˘_AuthResTBS
 535

	)

3121 
	#OBJ_£t˘_AuthResTBS
 
OBJ_£t_˘y≥
,17L

	)

3123 
	#SN_£t˘_AuthResTBSX
 "£t˘-AuthResTBSX"

	)

3124 
	#NID_£t˘_AuthResTBSX
 536

	)

3125 
	#OBJ_£t˘_AuthResTBSX
 
OBJ_£t_˘y≥
,18L

	)

3127 
	#SN_£t˘_AuthTokíTBS
 "£t˘-AuthTokíTBS"

	)

3128 
	#NID_£t˘_AuthTokíTBS
 537

	)

3129 
	#OBJ_£t˘_AuthTokíTBS
 
OBJ_£t_˘y≥
,19L

	)

3131 
	#SN_£t˘_C≠TokíD©a
 "£t˘-C≠TokíD©a"

	)

3132 
	#NID_£t˘_C≠TokíD©a
 538

	)

3133 
	#OBJ_£t˘_C≠TokíD©a
 
OBJ_£t_˘y≥
,20L

	)

3135 
	#SN_£t˘_C≠TokíTBS
 "£t˘-C≠TokíTBS"

	)

3136 
	#NID_£t˘_C≠TokíTBS
 539

	)

3137 
	#OBJ_£t˘_C≠TokíTBS
 
OBJ_£t_˘y≥
,21L

	)

3139 
	#SN_£t˘_AcqC¨dCodeMsg
 "£t˘-AcqC¨dCodeMsg"

	)

3140 
	#NID_£t˘_AcqC¨dCodeMsg
 540

	)

3141 
	#OBJ_£t˘_AcqC¨dCodeMsg
 
OBJ_£t_˘y≥
,22L

	)

3143 
	#SN_£t˘_AuthRevReqTBS
 "£t˘-AuthRevReqTBS"

	)

3144 
	#NID_£t˘_AuthRevReqTBS
 541

	)

3145 
	#OBJ_£t˘_AuthRevReqTBS
 
OBJ_£t_˘y≥
,23L

	)

3147 
	#SN_£t˘_AuthRevResD©a
 "£t˘-AuthRevResD©a"

	)

3148 
	#NID_£t˘_AuthRevResD©a
 542

	)

3149 
	#OBJ_£t˘_AuthRevResD©a
 
OBJ_£t_˘y≥
,24L

	)

3151 
	#SN_£t˘_AuthRevResTBS
 "£t˘-AuthRevResTBS"

	)

3152 
	#NID_£t˘_AuthRevResTBS
 543

	)

3153 
	#OBJ_£t˘_AuthRevResTBS
 
OBJ_£t_˘y≥
,25L

	)

3155 
	#SN_£t˘_C≠ReqTBS
 "£t˘-C≠ReqTBS"

	)

3156 
	#NID_£t˘_C≠ReqTBS
 544

	)

3157 
	#OBJ_£t˘_C≠ReqTBS
 
OBJ_£t_˘y≥
,26L

	)

3159 
	#SN_£t˘_C≠ReqTBSX
 "£t˘-C≠ReqTBSX"

	)

3160 
	#NID_£t˘_C≠ReqTBSX
 545

	)

3161 
	#OBJ_£t˘_C≠ReqTBSX
 
OBJ_£t_˘y≥
,27L

	)

3163 
	#SN_£t˘_C≠ResD©a
 "£t˘-C≠ResD©a"

	)

3164 
	#NID_£t˘_C≠ResD©a
 546

	)

3165 
	#OBJ_£t˘_C≠ResD©a
 
OBJ_£t_˘y≥
,28L

	)

3167 
	#SN_£t˘_C≠RevReqTBS
 "£t˘-C≠RevReqTBS"

	)

3168 
	#NID_£t˘_C≠RevReqTBS
 547

	)

3169 
	#OBJ_£t˘_C≠RevReqTBS
 
OBJ_£t_˘y≥
,29L

	)

3171 
	#SN_£t˘_C≠RevReqTBSX
 "£t˘-C≠RevReqTBSX"

	)

3172 
	#NID_£t˘_C≠RevReqTBSX
 548

	)

3173 
	#OBJ_£t˘_C≠RevReqTBSX
 
OBJ_£t_˘y≥
,30L

	)

3175 
	#SN_£t˘_C≠RevResD©a
 "£t˘-C≠RevResD©a"

	)

3176 
	#NID_£t˘_C≠RevResD©a
 549

	)

3177 
	#OBJ_£t˘_C≠RevResD©a
 
OBJ_£t_˘y≥
,31L

	)

3179 
	#SN_£t˘_CªdReqTBS
 "£t˘-CªdReqTBS"

	)

3180 
	#NID_£t˘_CªdReqTBS
 550

	)

3181 
	#OBJ_£t˘_CªdReqTBS
 
OBJ_£t_˘y≥
,32L

	)

3183 
	#SN_£t˘_CªdReqTBSX
 "£t˘-CªdReqTBSX"

	)

3184 
	#NID_£t˘_CªdReqTBSX
 551

	)

3185 
	#OBJ_£t˘_CªdReqTBSX
 
OBJ_£t_˘y≥
,33L

	)

3187 
	#SN_£t˘_CªdResD©a
 "£t˘-CªdResD©a"

	)

3188 
	#NID_£t˘_CªdResD©a
 552

	)

3189 
	#OBJ_£t˘_CªdResD©a
 
OBJ_£t_˘y≥
,34L

	)

3191 
	#SN_£t˘_CªdRevReqTBS
 "£t˘-CªdRevReqTBS"

	)

3192 
	#NID_£t˘_CªdRevReqTBS
 553

	)

3193 
	#OBJ_£t˘_CªdRevReqTBS
 
OBJ_£t_˘y≥
,35L

	)

3195 
	#SN_£t˘_CªdRevReqTBSX
 "£t˘-CªdRevReqTBSX"

	)

3196 
	#NID_£t˘_CªdRevReqTBSX
 554

	)

3197 
	#OBJ_£t˘_CªdRevReqTBSX
 
OBJ_£t_˘y≥
,36L

	)

3199 
	#SN_£t˘_CªdRevResD©a
 "£t˘-CªdRevResD©a"

	)

3200 
	#NID_£t˘_CªdRevResD©a
 555

	)

3201 
	#OBJ_£t˘_CªdRevResD©a
 
OBJ_£t_˘y≥
,37L

	)

3203 
	#SN_£t˘_PCîtReqD©a
 "£t˘-PCîtReqD©a"

	)

3204 
	#NID_£t˘_PCîtReqD©a
 556

	)

3205 
	#OBJ_£t˘_PCîtReqD©a
 
OBJ_£t_˘y≥
,38L

	)

3207 
	#SN_£t˘_PCîtResTBS
 "£t˘-PCîtResTBS"

	)

3208 
	#NID_£t˘_PCîtResTBS
 557

	)

3209 
	#OBJ_£t˘_PCîtResTBS
 
OBJ_£t_˘y≥
,39L

	)

3211 
	#SN_£t˘_B©chAdmöReqD©a
 "£t˘-B©chAdmöReqD©a"

	)

3212 
	#NID_£t˘_B©chAdmöReqD©a
 558

	)

3213 
	#OBJ_£t˘_B©chAdmöReqD©a
 
OBJ_£t_˘y≥
,40L

	)

3215 
	#SN_£t˘_B©chAdmöResD©a
 "£t˘-B©chAdmöResD©a"

	)

3216 
	#NID_£t˘_B©chAdmöResD©a
 559

	)

3217 
	#OBJ_£t˘_B©chAdmöResD©a
 
OBJ_£t_˘y≥
,41L

	)

3219 
	#SN_£t˘_C¨dCInôResTBS
 "£t˘-C¨dCInôResTBS"

	)

3220 
	#NID_£t˘_C¨dCInôResTBS
 560

	)

3221 
	#OBJ_£t˘_C¨dCInôResTBS
 
OBJ_£t_˘y≥
,42L

	)

3223 
	#SN_£t˘_MeAqCInôResTBS
 "£t˘-MeAqCInôResTBS"

	)

3224 
	#NID_£t˘_MeAqCInôResTBS
 561

	)

3225 
	#OBJ_£t˘_MeAqCInôResTBS
 
OBJ_£t_˘y≥
,43L

	)

3227 
	#SN_£t˘_RegF‹mResTBS
 "£t˘-RegF‹mResTBS"

	)

3228 
	#NID_£t˘_RegF‹mResTBS
 562

	)

3229 
	#OBJ_£t˘_RegF‹mResTBS
 
OBJ_£t_˘y≥
,44L

	)

3231 
	#SN_£t˘_CîtReqD©a
 "£t˘-CîtReqD©a"

	)

3232 
	#NID_£t˘_CîtReqD©a
 563

	)

3233 
	#OBJ_£t˘_CîtReqD©a
 
OBJ_£t_˘y≥
,45L

	)

3235 
	#SN_£t˘_CîtReqTBS
 "£t˘-CîtReqTBS"

	)

3236 
	#NID_£t˘_CîtReqTBS
 564

	)

3237 
	#OBJ_£t˘_CîtReqTBS
 
OBJ_£t_˘y≥
,46L

	)

3239 
	#SN_£t˘_CîtResD©a
 "£t˘-CîtResD©a"

	)

3240 
	#NID_£t˘_CîtResD©a
 565

	)

3241 
	#OBJ_£t˘_CîtResD©a
 
OBJ_£t_˘y≥
,47L

	)

3243 
	#SN_£t˘_CîtInqReqTBS
 "£t˘-CîtInqReqTBS"

	)

3244 
	#NID_£t˘_CîtInqReqTBS
 566

	)

3245 
	#OBJ_£t˘_CîtInqReqTBS
 
OBJ_£t_˘y≥
,48L

	)

3247 
	#SN_£t˘_Eº‹TBS
 "£t˘-Eº‹TBS"

	)

3248 
	#NID_£t˘_Eº‹TBS
 567

	)

3249 
	#OBJ_£t˘_Eº‹TBS
 
OBJ_£t_˘y≥
,49L

	)

3251 
	#SN_£t˘_PIDuÆSig√dTBE
 "£t˘-PIDuÆSig√dTBE"

	)

3252 
	#NID_£t˘_PIDuÆSig√dTBE
 568

	)

3253 
	#OBJ_£t˘_PIDuÆSig√dTBE
 
OBJ_£t_˘y≥
,50L

	)

3255 
	#SN_£t˘_PIUnsig√dTBE
 "£t˘-PIUnsig√dTBE"

	)

3256 
	#NID_£t˘_PIUnsig√dTBE
 569

	)

3257 
	#OBJ_£t˘_PIUnsig√dTBE
 
OBJ_£t_˘y≥
,51L

	)

3259 
	#SN_£t˘_AuthReqTBE
 "£t˘-AuthReqTBE"

	)

3260 
	#NID_£t˘_AuthReqTBE
 570

	)

3261 
	#OBJ_£t˘_AuthReqTBE
 
OBJ_£t_˘y≥
,52L

	)

3263 
	#SN_£t˘_AuthResTBE
 "£t˘-AuthResTBE"

	)

3264 
	#NID_£t˘_AuthResTBE
 571

	)

3265 
	#OBJ_£t˘_AuthResTBE
 
OBJ_£t_˘y≥
,53L

	)

3267 
	#SN_£t˘_AuthResTBEX
 "£t˘-AuthResTBEX"

	)

3268 
	#NID_£t˘_AuthResTBEX
 572

	)

3269 
	#OBJ_£t˘_AuthResTBEX
 
OBJ_£t_˘y≥
,54L

	)

3271 
	#SN_£t˘_AuthTokíTBE
 "£t˘-AuthTokíTBE"

	)

3272 
	#NID_£t˘_AuthTokíTBE
 573

	)

3273 
	#OBJ_£t˘_AuthTokíTBE
 
OBJ_£t_˘y≥
,55L

	)

3275 
	#SN_£t˘_C≠TokíTBE
 "£t˘-C≠TokíTBE"

	)

3276 
	#NID_£t˘_C≠TokíTBE
 574

	)

3277 
	#OBJ_£t˘_C≠TokíTBE
 
OBJ_£t_˘y≥
,56L

	)

3279 
	#SN_£t˘_C≠TokíTBEX
 "£t˘-C≠TokíTBEX"

	)

3280 
	#NID_£t˘_C≠TokíTBEX
 575

	)

3281 
	#OBJ_£t˘_C≠TokíTBEX
 
OBJ_£t_˘y≥
,57L

	)

3283 
	#SN_£t˘_AcqC¨dCodeMsgTBE
 "£t˘-AcqC¨dCodeMsgTBE"

	)

3284 
	#NID_£t˘_AcqC¨dCodeMsgTBE
 576

	)

3285 
	#OBJ_£t˘_AcqC¨dCodeMsgTBE
 
OBJ_£t_˘y≥
,58L

	)

3287 
	#SN_£t˘_AuthRevReqTBE
 "£t˘-AuthRevReqTBE"

	)

3288 
	#NID_£t˘_AuthRevReqTBE
 577

	)

3289 
	#OBJ_£t˘_AuthRevReqTBE
 
OBJ_£t_˘y≥
,59L

	)

3291 
	#SN_£t˘_AuthRevResTBE
 "£t˘-AuthRevResTBE"

	)

3292 
	#NID_£t˘_AuthRevResTBE
 578

	)

3293 
	#OBJ_£t˘_AuthRevResTBE
 
OBJ_£t_˘y≥
,60L

	)

3295 
	#SN_£t˘_AuthRevResTBEB
 "£t˘-AuthRevResTBEB"

	)

3296 
	#NID_£t˘_AuthRevResTBEB
 579

	)

3297 
	#OBJ_£t˘_AuthRevResTBEB
 
OBJ_£t_˘y≥
,61L

	)

3299 
	#SN_£t˘_C≠ReqTBE
 "£t˘-C≠ReqTBE"

	)

3300 
	#NID_£t˘_C≠ReqTBE
 580

	)

3301 
	#OBJ_£t˘_C≠ReqTBE
 
OBJ_£t_˘y≥
,62L

	)

3303 
	#SN_£t˘_C≠ReqTBEX
 "£t˘-C≠ReqTBEX"

	)

3304 
	#NID_£t˘_C≠ReqTBEX
 581

	)

3305 
	#OBJ_£t˘_C≠ReqTBEX
 
OBJ_£t_˘y≥
,63L

	)

3307 
	#SN_£t˘_C≠ResTBE
 "£t˘-C≠ResTBE"

	)

3308 
	#NID_£t˘_C≠ResTBE
 582

	)

3309 
	#OBJ_£t˘_C≠ResTBE
 
OBJ_£t_˘y≥
,64L

	)

3311 
	#SN_£t˘_C≠RevReqTBE
 "£t˘-C≠RevReqTBE"

	)

3312 
	#NID_£t˘_C≠RevReqTBE
 583

	)

3313 
	#OBJ_£t˘_C≠RevReqTBE
 
OBJ_£t_˘y≥
,65L

	)

3315 
	#SN_£t˘_C≠RevReqTBEX
 "£t˘-C≠RevReqTBEX"

	)

3316 
	#NID_£t˘_C≠RevReqTBEX
 584

	)

3317 
	#OBJ_£t˘_C≠RevReqTBEX
 
OBJ_£t_˘y≥
,66L

	)

3319 
	#SN_£t˘_C≠RevResTBE
 "£t˘-C≠RevResTBE"

	)

3320 
	#NID_£t˘_C≠RevResTBE
 585

	)

3321 
	#OBJ_£t˘_C≠RevResTBE
 
OBJ_£t_˘y≥
,67L

	)

3323 
	#SN_£t˘_CªdReqTBE
 "£t˘-CªdReqTBE"

	)

3324 
	#NID_£t˘_CªdReqTBE
 586

	)

3325 
	#OBJ_£t˘_CªdReqTBE
 
OBJ_£t_˘y≥
,68L

	)

3327 
	#SN_£t˘_CªdReqTBEX
 "£t˘-CªdReqTBEX"

	)

3328 
	#NID_£t˘_CªdReqTBEX
 587

	)

3329 
	#OBJ_£t˘_CªdReqTBEX
 
OBJ_£t_˘y≥
,69L

	)

3331 
	#SN_£t˘_CªdResTBE
 "£t˘-CªdResTBE"

	)

3332 
	#NID_£t˘_CªdResTBE
 588

	)

3333 
	#OBJ_£t˘_CªdResTBE
 
OBJ_£t_˘y≥
,70L

	)

3335 
	#SN_£t˘_CªdRevReqTBE
 "£t˘-CªdRevReqTBE"

	)

3336 
	#NID_£t˘_CªdRevReqTBE
 589

	)

3337 
	#OBJ_£t˘_CªdRevReqTBE
 
OBJ_£t_˘y≥
,71L

	)

3339 
	#SN_£t˘_CªdRevReqTBEX
 "£t˘-CªdRevReqTBEX"

	)

3340 
	#NID_£t˘_CªdRevReqTBEX
 590

	)

3341 
	#OBJ_£t˘_CªdRevReqTBEX
 
OBJ_£t_˘y≥
,72L

	)

3343 
	#SN_£t˘_CªdRevResTBE
 "£t˘-CªdRevResTBE"

	)

3344 
	#NID_£t˘_CªdRevResTBE
 591

	)

3345 
	#OBJ_£t˘_CªdRevResTBE
 
OBJ_£t_˘y≥
,73L

	)

3347 
	#SN_£t˘_B©chAdmöReqTBE
 "£t˘-B©chAdmöReqTBE"

	)

3348 
	#NID_£t˘_B©chAdmöReqTBE
 592

	)

3349 
	#OBJ_£t˘_B©chAdmöReqTBE
 
OBJ_£t_˘y≥
,74L

	)

3351 
	#SN_£t˘_B©chAdmöResTBE
 "£t˘-B©chAdmöResTBE"

	)

3352 
	#NID_£t˘_B©chAdmöResTBE
 593

	)

3353 
	#OBJ_£t˘_B©chAdmöResTBE
 
OBJ_£t_˘y≥
,75L

	)

3355 
	#SN_£t˘_RegF‹mReqTBE
 "£t˘-RegF‹mReqTBE"

	)

3356 
	#NID_£t˘_RegF‹mReqTBE
 594

	)

3357 
	#OBJ_£t˘_RegF‹mReqTBE
 
OBJ_£t_˘y≥
,76L

	)

3359 
	#SN_£t˘_CîtReqTBE
 "£t˘-CîtReqTBE"

	)

3360 
	#NID_£t˘_CîtReqTBE
 595

	)

3361 
	#OBJ_£t˘_CîtReqTBE
 
OBJ_£t_˘y≥
,77L

	)

3363 
	#SN_£t˘_CîtReqTBEX
 "£t˘-CîtReqTBEX"

	)

3364 
	#NID_£t˘_CîtReqTBEX
 596

	)

3365 
	#OBJ_£t˘_CîtReqTBEX
 
OBJ_£t_˘y≥
,78L

	)

3367 
	#SN_£t˘_CîtResTBE
 "£t˘-CîtResTBE"

	)

3368 
	#NID_£t˘_CîtResTBE
 597

	)

3369 
	#OBJ_£t˘_CîtResTBE
 
OBJ_£t_˘y≥
,79L

	)

3371 
	#SN_£t˘_CRLNŸifiˇti⁄TBS
 "£t˘-CRLNŸifiˇti⁄TBS"

	)

3372 
	#NID_£t˘_CRLNŸifiˇti⁄TBS
 598

	)

3373 
	#OBJ_£t˘_CRLNŸifiˇti⁄TBS
 
OBJ_£t_˘y≥
,80L

	)

3375 
	#SN_£t˘_CRLNŸifiˇti⁄ResTBS
 "£t˘-CRLNŸifiˇti⁄ResTBS"

	)

3376 
	#NID_£t˘_CRLNŸifiˇti⁄ResTBS
 599

	)

3377 
	#OBJ_£t˘_CRLNŸifiˇti⁄ResTBS
 
OBJ_£t_˘y≥
,81L

	)

3379 
	#SN_£t˘_BCIDi°ributi⁄TBS
 "£t˘-BCIDi°ributi⁄TBS"

	)

3380 
	#NID_£t˘_BCIDi°ributi⁄TBS
 600

	)

3381 
	#OBJ_£t˘_BCIDi°ributi⁄TBS
 
OBJ_£t_˘y≥
,82L

	)

3383 
	#SN_£ãxt_gíCry±
 "£ãxt-gíCry±"

	)

3384 
	#LN_£ãxt_gíCry±
 "gíîi¯¸y±ogøm"

	)

3385 
	#NID_£ãxt_gíCry±
 601

	)

3386 
	#OBJ_£ãxt_gíCry±
 
OBJ_£t_msgExt
,1L

	)

3388 
	#SN_£ãxt_miAuth
 "£ãxt-miAuth"

	)

3389 
	#LN_£ãxt_miAuth
 "mîch™àöôüãdáuth"

	)

3390 
	#NID_£ãxt_miAuth
 602

	)

3391 
	#OBJ_£ãxt_miAuth
 
OBJ_£t_msgExt
,3L

	)

3393 
	#SN_£ãxt_pöSecuª
 "£ãxt-pöSecuª"

	)

3394 
	#NID_£ãxt_pöSecuª
 603

	)

3395 
	#OBJ_£ãxt_pöSecuª
 
OBJ_£t_msgExt
,4L

	)

3397 
	#SN_£ãxt_pöAny
 "£ãxt-pöAny"

	)

3398 
	#NID_£ãxt_pöAny
 604

	)

3399 
	#OBJ_£ãxt_pöAny
 
OBJ_£t_msgExt
,5L

	)

3401 
	#SN_£ãxt_åack2
 "£ãxt-åack2"

	)

3402 
	#NID_£ãxt_åack2
 605

	)

3403 
	#OBJ_£ãxt_åack2
 
OBJ_£t_msgExt
,7L

	)

3405 
	#SN_£ãxt_cv
 "£ãxt-cv"

	)

3406 
	#LN_£ãxt_cv
 "addôi⁄Æ vîifiˇti⁄"

	)

3407 
	#NID_£ãxt_cv
 606

	)

3408 
	#OBJ_£ãxt_cv
 
OBJ_£t_msgExt
,8L

	)

3410 
	#SN_£t_pﬁicy_roŸ
 "£t-pﬁicy-roŸ"

	)

3411 
	#NID_£t_pﬁicy_roŸ
 607

	)

3412 
	#OBJ_£t_pﬁicy_roŸ
 
OBJ_£t_pﬁicy
,0L

	)

3414 
	#SN_£tCext_hashedRoŸ
 "£tCext-hashedRoŸ"

	)

3415 
	#NID_£tCext_hashedRoŸ
 608

	)

3416 
	#OBJ_£tCext_hashedRoŸ
 
OBJ_£t_˚πExt
,0L

	)

3418 
	#SN_£tCext_˚πTy≥
 "£tCext-˚πTy≥"

	)

3419 
	#NID_£tCext_˚πTy≥
 609

	)

3420 
	#OBJ_£tCext_˚πTy≥
 
OBJ_£t_˚πExt
,1L

	)

3422 
	#SN_£tCext_mîchD©a
 "£tCext-mîchD©a"

	)

3423 
	#NID_£tCext_mîchD©a
 610

	)

3424 
	#OBJ_£tCext_mîchD©a
 
OBJ_£t_˚πExt
,2L

	)

3426 
	#SN_£tCext_cCîtRequúed
 "£tCext-cCîtRequúed"

	)

3427 
	#NID_£tCext_cCîtRequúed
 611

	)

3428 
	#OBJ_£tCext_cCîtRequúed
 
OBJ_£t_˚πExt
,3L

	)

3430 
	#SN_£tCext_tu¬ñög
 "£tCext-tu¬ñög"

	)

3431 
	#NID_£tCext_tu¬ñög
 612

	)

3432 
	#OBJ_£tCext_tu¬ñög
 
OBJ_£t_˚πExt
,4L

	)

3434 
	#SN_£tCext_£tExt
 "£tCext-£tExt"

	)

3435 
	#NID_£tCext_£tExt
 613

	)

3436 
	#OBJ_£tCext_£tExt
 
OBJ_£t_˚πExt
,5L

	)

3438 
	#SN_£tCext_£tQuÆf
 "£tCext-£tQuÆf"

	)

3439 
	#NID_£tCext_£tQuÆf
 614

	)

3440 
	#OBJ_£tCext_£tQuÆf
 
OBJ_£t_˚πExt
,6L

	)

3442 
	#SN_£tCext_PGWYˇ∑bûôõs
 "£tCext-PGWYˇ∑bûôõs"

	)

3443 
	#NID_£tCext_PGWYˇ∑bûôõs
 615

	)

3444 
	#OBJ_£tCext_PGWYˇ∑bûôõs
 
OBJ_£t_˚πExt
,7L

	)

3446 
	#SN_£tCext_TokíIdítifõr
 "£tCext-TokíIdítifõr"

	)

3447 
	#NID_£tCext_TokíIdítifõr
 616

	)

3448 
	#OBJ_£tCext_TokíIdítifõr
 
OBJ_£t_˚πExt
,8L

	)

3450 
	#SN_£tCext_Tøck2D©a
 "£tCext-Tøck2D©a"

	)

3451 
	#NID_£tCext_Tøck2D©a
 617

	)

3452 
	#OBJ_£tCext_Tøck2D©a
 
OBJ_£t_˚πExt
,9L

	)

3454 
	#SN_£tCext_TokíTy≥
 "£tCext-TokíTy≥"

	)

3455 
	#NID_£tCext_TokíTy≥
 618

	)

3456 
	#OBJ_£tCext_TokíTy≥
 
OBJ_£t_˚πExt
,10L

	)

3458 
	#SN_£tCext_IssuîC≠abûôõs
 "£tCext-IssuîC≠abûôõs"

	)

3459 
	#NID_£tCext_IssuîC≠abûôõs
 619

	)

3460 
	#OBJ_£tCext_IssuîC≠abûôõs
 
OBJ_£t_˚πExt
,11L

	)

3462 
	#SN_£tAâr_Cît
 "£tAâr-Cît"

	)

3463 
	#NID_£tAâr_Cît
 620

	)

3464 
	#OBJ_£tAâr_Cît
 
OBJ_£t_©å
,0L

	)

3466 
	#SN_£tAâr_PGWYˇp
 "£tAâr-PGWYˇp"

	)

3467 
	#LN_£tAâr_PGWYˇp
 "∑ymíàg©eway c≠abûôõs"

	)

3468 
	#NID_£tAâr_PGWYˇp
 621

	)

3469 
	#OBJ_£tAâr_PGWYˇp
 
OBJ_£t_©å
,1L

	)

3471 
	#SN_£tAâr_TokíTy≥
 "£tAâr-TokíTy≥"

	)

3472 
	#NID_£tAâr_TokíTy≥
 622

	)

3473 
	#OBJ_£tAâr_TokíTy≥
 
OBJ_£t_©å
,2L

	)

3475 
	#SN_£tAâr_IssC≠
 "£tAâr-IssC≠"

	)

3476 
	#LN_£tAâr_IssC≠
 "issuî c≠abûôõs"

	)

3477 
	#NID_£tAâr_IssC≠
 623

	)

3478 
	#OBJ_£tAâr_IssC≠
 
OBJ_£t_©å
,3L

	)

3480 
	#SN_£t_roŸKeyThumb
 "£t-roŸKeyThumb"

	)

3481 
	#NID_£t_roŸKeyThumb
 624

	)

3482 
	#OBJ_£t_roŸKeyThumb
 
OBJ_£tAâr_Cît
,0L

	)

3484 
	#SN_£t_addPﬁicy
 "£t-addPﬁicy"

	)

3485 
	#NID_£t_addPﬁicy
 625

	)

3486 
	#OBJ_£t_addPﬁicy
 
OBJ_£tAâr_Cît
,1L

	)

3488 
	#SN_£tAâr_Tokí_EMV
 "£tAâr-Tokí-EMV"

	)

3489 
	#NID_£tAâr_Tokí_EMV
 626

	)

3490 
	#OBJ_£tAâr_Tokí_EMV
 
OBJ_£tAâr_TokíTy≥
,1L

	)

3492 
	#SN_£tAâr_Tokí_B0Prime
 "£tAâr-Tokí-B0Prime"

	)

3493 
	#NID_£tAâr_Tokí_B0Prime
 627

	)

3494 
	#OBJ_£tAâr_Tokí_B0Prime
 
OBJ_£tAâr_TokíTy≥
,2L

	)

3496 
	#SN_£tAâr_IssC≠_CVM
 "£tAâr-IssC≠-CVM"

	)

3497 
	#NID_£tAâr_IssC≠_CVM
 628

	)

3498 
	#OBJ_£tAâr_IssC≠_CVM
 
OBJ_£tAâr_IssC≠
,3L

	)

3500 
	#SN_£tAâr_IssC≠_T2
 "£tAâr-IssC≠-T2"

	)

3501 
	#NID_£tAâr_IssC≠_T2
 629

	)

3502 
	#OBJ_£tAâr_IssC≠_T2
 
OBJ_£tAâr_IssC≠
,4L

	)

3504 
	#SN_£tAâr_IssC≠_Sig
 "£tAâr-IssC≠-Sig"

	)

3505 
	#NID_£tAâr_IssC≠_Sig
 630

	)

3506 
	#OBJ_£tAâr_IssC≠_Sig
 
OBJ_£tAâr_IssC≠
,5L

	)

3508 
	#SN_£tAâr_GíCry±grm
 "£tAâr-GíCry±grm"

	)

3509 
	#LN_£tAâr_GíCry±grm
 "gíî©ê¸y±ogøm"

	)

3510 
	#NID_£tAâr_GíCry±grm
 631

	)

3511 
	#OBJ_£tAâr_GíCry±grm
 
OBJ_£tAâr_IssC≠_CVM
,1L

	)

3513 
	#SN_£tAâr_T2Enc
 "£tAâr-T2Enc"

	)

3514 
	#LN_£tAâr_T2Enc
 "í¸y±edÅøck 2"

	)

3515 
	#NID_£tAâr_T2Enc
 632

	)

3516 
	#OBJ_£tAâr_T2Enc
 
OBJ_£tAâr_IssC≠_T2
,1L

	)

3518 
	#SN_£tAâr_T2˛óπxt
 "£tAâr-T2˛óπxt"

	)

3519 
	#LN_£tAâr_T2˛óπxt
 "˛óπexàåack 2"

	)

3520 
	#NID_£tAâr_T2˛óπxt
 633

	)

3521 
	#OBJ_£tAâr_T2˛óπxt
 
OBJ_£tAâr_IssC≠_T2
,2L

	)

3523 
	#SN_£tAâr_TokICCsig
 "£tAâr-TokICCsig"

	)

3524 
	#LN_£tAâr_TokICCsig
 "ICC o∏tokí sig«tuª"

	)

3525 
	#NID_£tAâr_TokICCsig
 634

	)

3526 
	#OBJ_£tAâr_TokICCsig
 
OBJ_£tAâr_IssC≠_Sig
,1L

	)

3528 
	#SN_£tAâr_SecDevSig
 "£tAâr-SecDevSig"

	)

3529 
	#LN_£tAâr_SecDevSig
 "£cuª devi˚ sig«tuª"

	)

3530 
	#NID_£tAâr_SecDevSig
 635

	)

3531 
	#OBJ_£tAâr_SecDevSig
 
OBJ_£tAâr_IssC≠_Sig
,2L

	)

3533 
	#SN_£t_bønd_IATA_ATA
 "£t-bønd-IATA-ATA"

	)

3534 
	#NID_£t_bønd_IATA_ATA
 636

	)

3535 
	#OBJ_£t_bønd_IATA_ATA
 
OBJ_£t_bønd
,1L

	)

3537 
	#SN_£t_bønd_Döîs
 "£t-bønd-Döîs"

	)

3538 
	#NID_£t_bønd_Döîs
 637

	)

3539 
	#OBJ_£t_bønd_Döîs
 
OBJ_£t_bønd
,30L

	)

3541 
	#SN_£t_bønd_AmîiˇnEx¥ess
 "£t-bønd-AmîiˇnEx¥ess"

	)

3542 
	#NID_£t_bønd_AmîiˇnEx¥ess
 638

	)

3543 
	#OBJ_£t_bønd_AmîiˇnEx¥ess
 
OBJ_£t_bønd
,34L

	)

3545 
	#SN_£t_bønd_JCB
 "£t-bønd-JCB"

	)

3546 
	#NID_£t_bønd_JCB
 639

	)

3547 
	#OBJ_£t_bønd_JCB
 
OBJ_£t_bønd
,35L

	)

3549 
	#SN_£t_bønd_Viß
 "£t-bønd-Viß"

	)

3550 
	#NID_£t_bønd_Viß
 640

	)

3551 
	#OBJ_£t_bønd_Viß
 
OBJ_£t_bønd
,4L

	)

3553 
	#SN_£t_bønd_Ma°îC¨d
 "£t-bønd-Ma°îC¨d"

	)

3554 
	#NID_£t_bønd_Ma°îC¨d
 641

	)

3555 
	#OBJ_£t_bønd_Ma°îC¨d
 
OBJ_£t_bønd
,5L

	)

3557 
	#SN_£t_bønd_Novus
 "£t-bønd-Novus"

	)

3558 
	#NID_£t_bønd_Novus
 642

	)

3559 
	#OBJ_£t_bønd_Novus
 
OBJ_£t_bønd
,6011L

	)

3561 
	#SN_des_cdmf
 "DES-CDMF"

	)

3562 
	#LN_des_cdmf
 "des-cdmf"

	)

3563 
	#NID_des_cdmf
 643

	)

3564 
	#OBJ_des_cdmf
 
OBJ_rßdsi
,3L,10L

	)

3566 
	#SN_rßOAEPEn¸y±i⁄SET
 "rßOAEPEn¸y±i⁄SET"

	)

3567 
	#NID_rßOAEPEn¸y±i⁄SET
 644

	)

3568 
	#OBJ_rßOAEPEn¸y±i⁄SET
 
OBJ_rßdsi
,1L,1L,6L

	)

3570 
	#SN_ù£c3
 "OakÀy-EC2N-3"

	)

3571 
	#LN_ù£c3
 "ù£c3"

	)

3572 
	#NID_ù£c3
 749

	)

3574 
	#SN_ù£c4
 "OakÀy-EC2N-4"

	)

3575 
	#LN_ù£c4
 "ù£c4"

	)

3576 
	#NID_ù£c4
 750

	)

3578 
	#SN_whúÕoﬁ
 "whúÕoﬁ"

	)

3579 
	#NID_whúÕoﬁ
 804

	)

3580 
	#OBJ_whúÕoﬁ
 
OBJ_iso
,0L,10118L,3L,0L,55L

	)

3582 
	#SN_¸y±›ro
 "¸y±›ro"

	)

3583 
	#NID_¸y±›ro
 805

	)

3584 
	#OBJ_¸y±›ro
 
OBJ_membî_body
,643L,2L,2L

	)

3586 
	#SN_¸y±ocom
 "¸y±ocom"

	)

3587 
	#NID_¸y±ocom
 806

	)

3588 
	#OBJ_¸y±ocom
 
OBJ_membî_body
,643L,2L,9L

	)

3590 
	#SN_id_Go°R3411_94_wôh_Go°R3410_2001
 "id-Go°R3411-94-wôh-Go°R3410-2001"

	)

3591 
	#LN_id_Go°R3411_94_wôh_Go°R3410_2001
 "GOST R 34.11-94 wôh GOST R 34.10-2001"

	)

3592 
	#NID_id_Go°R3411_94_wôh_Go°R3410_2001
 807

	)

3593 
	#OBJ_id_Go°R3411_94_wôh_Go°R3410_2001
 
OBJ_¸y±›ro
,3L

	)

3595 
	#SN_id_Go°R3411_94_wôh_Go°R3410_94
 "id-Go°R3411-94-wôh-Go°R3410-94"

	)

3596 
	#LN_id_Go°R3411_94_wôh_Go°R3410_94
 "GOST R 34.11-94 wôh GOST R 34.10-94"

	)

3597 
	#NID_id_Go°R3411_94_wôh_Go°R3410_94
 808

	)

3598 
	#OBJ_id_Go°R3411_94_wôh_Go°R3410_94
 
OBJ_¸y±›ro
,4L

	)

3600 
	#SN_id_Go°R3411_94
 "md_go°94"

	)

3601 
	#LN_id_Go°R3411_94
 "GOST R 34.11-94"

	)

3602 
	#NID_id_Go°R3411_94
 809

	)

3603 
	#OBJ_id_Go°R3411_94
 
OBJ_¸y±›ro
,9L

	)

3605 
	#SN_id_HMACGo°R3411_94
 "id-HMACGo°R3411-94"

	)

3606 
	#LN_id_HMACGo°R3411_94
 "HMAC GOST 34.11-94"

	)

3607 
	#NID_id_HMACGo°R3411_94
 810

	)

3608 
	#OBJ_id_HMACGo°R3411_94
 
OBJ_¸y±›ro
,10L

	)

3610 
	#SN_id_Go°R3410_2001
 "go°2001"

	)

3611 
	#LN_id_Go°R3410_2001
 "GOST R 34.10-2001"

	)

3612 
	#NID_id_Go°R3410_2001
 811

	)

3613 
	#OBJ_id_Go°R3410_2001
 
OBJ_¸y±›ro
,19L

	)

3615 
	#SN_id_Go°R3410_94
 "go°94"

	)

3616 
	#LN_id_Go°R3410_94
 "GOST R 34.10-94"

	)

3617 
	#NID_id_Go°R3410_94
 812

	)

3618 
	#OBJ_id_Go°R3410_94
 
OBJ_¸y±›ro
,20L

	)

3620 
	#SN_id_Go°28147_89
 "go°89"

	)

3621 
	#LN_id_Go°28147_89
 "GOST 28147-89"

	)

3622 
	#NID_id_Go°28147_89
 813

	)

3623 
	#OBJ_id_Go°28147_89
 
OBJ_¸y±›ro
,21L

	)

3625 
	#SN_go°89_˙t
 "go°89-˙t"

	)

3626 
	#NID_go°89_˙t
 814

	)

3628 
	#SN_id_Go°28147_89_MAC
 "go°-mac"

	)

3629 
	#LN_id_Go°28147_89_MAC
 "GOST 28147-89 MAC"

	)

3630 
	#NID_id_Go°28147_89_MAC
 815

	)

3631 
	#OBJ_id_Go°28147_89_MAC
 
OBJ_¸y±›ro
,22L

	)

3633 
	#SN_id_Go°R3411_94_¥f
 "¥f-go°r3411-94"

	)

3634 
	#LN_id_Go°R3411_94_¥f
 "GOST R 34.11-94 PRF"

	)

3635 
	#NID_id_Go°R3411_94_¥f
 816

	)

3636 
	#OBJ_id_Go°R3411_94_¥f
 
OBJ_¸y±›ro
,23L

	)

3638 
	#SN_id_Go°R3410_2001DH
 "id-Go°R3410-2001DH"

	)

3639 
	#LN_id_Go°R3410_2001DH
 "GOST R 34.10-2001 DH"

	)

3640 
	#NID_id_Go°R3410_2001DH
 817

	)

3641 
	#OBJ_id_Go°R3410_2001DH
 
OBJ_¸y±›ro
,98L

	)

3643 
	#SN_id_Go°R3410_94DH
 "id-Go°R3410-94DH"

	)

3644 
	#LN_id_Go°R3410_94DH
 "GOST R 34.10-94 DH"

	)

3645 
	#NID_id_Go°R3410_94DH
 818

	)

3646 
	#OBJ_id_Go°R3410_94DH
 
OBJ_¸y±›ro
,99L

	)

3648 
	#SN_id_Go°28147_89_Cry±oPro_KeyMeshög
 "id-Go°28147-89-Cry±oPro-KeyMeshög"

	)

3649 
	#NID_id_Go°28147_89_Cry±oPro_KeyMeshög
 819

	)

3650 
	#OBJ_id_Go°28147_89_Cry±oPro_KeyMeshög
 
OBJ_¸y±›ro
,14L,1L

	)

3652 
	#SN_id_Go°28147_89_N⁄e_KeyMeshög
 "id-Go°28147-89-N⁄e-KeyMeshög"

	)

3653 
	#NID_id_Go°28147_89_N⁄e_KeyMeshög
 820

	)

3654 
	#OBJ_id_Go°28147_89_N⁄e_KeyMeshög
 
OBJ_¸y±›ro
,14L,0L

	)

3656 
	#SN_id_Go°R3411_94_Te°P¨amSë
 "id-Go°R3411-94-Te°P¨amSë"

	)

3657 
	#NID_id_Go°R3411_94_Te°P¨amSë
 821

	)

3658 
	#OBJ_id_Go°R3411_94_Te°P¨amSë
 
OBJ_¸y±›ro
,30L,0L

	)

3660 
	#SN_id_Go°R3411_94_Cry±oProP¨amSë
 "id-Go°R3411-94-Cry±oProP¨amSë"

	)

3661 
	#NID_id_Go°R3411_94_Cry±oProP¨amSë
 822

	)

3662 
	#OBJ_id_Go°R3411_94_Cry±oProP¨amSë
 
OBJ_¸y±›ro
,30L,1L

	)

3664 
	#SN_id_Go°28147_89_Te°P¨amSë
 "id-Go°28147-89-Te°P¨amSë"

	)

3665 
	#NID_id_Go°28147_89_Te°P¨amSë
 823

	)

3666 
	#OBJ_id_Go°28147_89_Te°P¨amSë
 
OBJ_¸y±›ro
,31L,0L

	)

3668 
	#SN_id_Go°28147_89_Cry±oPro_A_P¨amSë
 "id-Go°28147-89-Cry±oPro-A-P¨amSë"

	)

3669 
	#NID_id_Go°28147_89_Cry±oPro_A_P¨amSë
 824

	)

3670 
	#OBJ_id_Go°28147_89_Cry±oPro_A_P¨amSë
 
OBJ_¸y±›ro
,31L,1L

	)

3672 
	#SN_id_Go°28147_89_Cry±oPro_B_P¨amSë
 "id-Go°28147-89-Cry±oPro-B-P¨amSë"

	)

3673 
	#NID_id_Go°28147_89_Cry±oPro_B_P¨amSë
 825

	)

3674 
	#OBJ_id_Go°28147_89_Cry±oPro_B_P¨amSë
 
OBJ_¸y±›ro
,31L,2L

	)

3676 
	#SN_id_Go°28147_89_Cry±oPro_C_P¨amSë
 "id-Go°28147-89-Cry±oPro-C-P¨amSë"

	)

3677 
	#NID_id_Go°28147_89_Cry±oPro_C_P¨amSë
 826

	)

3678 
	#OBJ_id_Go°28147_89_Cry±oPro_C_P¨amSë
 
OBJ_¸y±›ro
,31L,3L

	)

3680 
	#SN_id_Go°28147_89_Cry±oPro_D_P¨amSë
 "id-Go°28147-89-Cry±oPro-D-P¨amSë"

	)

3681 
	#NID_id_Go°28147_89_Cry±oPro_D_P¨amSë
 827

	)

3682 
	#OBJ_id_Go°28147_89_Cry±oPro_D_P¨amSë
 
OBJ_¸y±›ro
,31L,4L

	)

3684 
	#SN_id_Go°28147_89_Cry±oPro_Osˇr_1_1_P¨amSë
 "id-Go°28147-89-Cry±oPro-Osˇr-1-1-P¨amSë"

	)

3685 
	#NID_id_Go°28147_89_Cry±oPro_Osˇr_1_1_P¨amSë
 828

	)

3686 
	#OBJ_id_Go°28147_89_Cry±oPro_Osˇr_1_1_P¨amSë
 
OBJ_¸y±›ro
,31L,5L

	)

3688 
	#SN_id_Go°28147_89_Cry±oPro_Osˇr_1_0_P¨amSë
 "id-Go°28147-89-Cry±oPro-Osˇr-1-0-P¨amSë"

	)

3689 
	#NID_id_Go°28147_89_Cry±oPro_Osˇr_1_0_P¨amSë
 829

	)

3690 
	#OBJ_id_Go°28147_89_Cry±oPro_Osˇr_1_0_P¨amSë
 
OBJ_¸y±›ro
,31L,6L

	)

3692 
	#SN_id_Go°28147_89_Cry±oPro_RIC_1_P¨amSë
 "id-Go°28147-89-Cry±oPro-RIC-1-P¨amSë"

	)

3693 
	#NID_id_Go°28147_89_Cry±oPro_RIC_1_P¨amSë
 830

	)

3694 
	#OBJ_id_Go°28147_89_Cry±oPro_RIC_1_P¨amSë
 
OBJ_¸y±›ro
,31L,7L

	)

3696 
	#SN_id_Go°R3410_94_Te°P¨amSë
 "id-Go°R3410-94-Te°P¨amSë"

	)

3697 
	#NID_id_Go°R3410_94_Te°P¨amSë
 831

	)

3698 
	#OBJ_id_Go°R3410_94_Te°P¨amSë
 
OBJ_¸y±›ro
,32L,0L

	)

3700 
	#SN_id_Go°R3410_94_Cry±oPro_A_P¨amSë
 "id-Go°R3410-94-Cry±oPro-A-P¨amSë"

	)

3701 
	#NID_id_Go°R3410_94_Cry±oPro_A_P¨amSë
 832

	)

3702 
	#OBJ_id_Go°R3410_94_Cry±oPro_A_P¨amSë
 
OBJ_¸y±›ro
,32L,2L

	)

3704 
	#SN_id_Go°R3410_94_Cry±oPro_B_P¨amSë
 "id-Go°R3410-94-Cry±oPro-B-P¨amSë"

	)

3705 
	#NID_id_Go°R3410_94_Cry±oPro_B_P¨amSë
 833

	)

3706 
	#OBJ_id_Go°R3410_94_Cry±oPro_B_P¨amSë
 
OBJ_¸y±›ro
,32L,3L

	)

3708 
	#SN_id_Go°R3410_94_Cry±oPro_C_P¨amSë
 "id-Go°R3410-94-Cry±oPro-C-P¨amSë"

	)

3709 
	#NID_id_Go°R3410_94_Cry±oPro_C_P¨amSë
 834

	)

3710 
	#OBJ_id_Go°R3410_94_Cry±oPro_C_P¨amSë
 
OBJ_¸y±›ro
,32L,4L

	)

3712 
	#SN_id_Go°R3410_94_Cry±oPro_D_P¨amSë
 "id-Go°R3410-94-Cry±oPro-D-P¨amSë"

	)

3713 
	#NID_id_Go°R3410_94_Cry±oPro_D_P¨amSë
 835

	)

3714 
	#OBJ_id_Go°R3410_94_Cry±oPro_D_P¨amSë
 
OBJ_¸y±›ro
,32L,5L

	)

3716 
	#SN_id_Go°R3410_94_Cry±oPro_XchA_P¨amSë
 "id-Go°R3410-94-Cry±oPro-XchA-P¨amSë"

	)

3717 
	#NID_id_Go°R3410_94_Cry±oPro_XchA_P¨amSë
 836

	)

3718 
	#OBJ_id_Go°R3410_94_Cry±oPro_XchA_P¨amSë
 
OBJ_¸y±›ro
,33L,1L

	)

3720 
	#SN_id_Go°R3410_94_Cry±oPro_XchB_P¨amSë
 "id-Go°R3410-94-Cry±oPro-XchB-P¨amSë"

	)

3721 
	#NID_id_Go°R3410_94_Cry±oPro_XchB_P¨amSë
 837

	)

3722 
	#OBJ_id_Go°R3410_94_Cry±oPro_XchB_P¨amSë
 
OBJ_¸y±›ro
,33L,2L

	)

3724 
	#SN_id_Go°R3410_94_Cry±oPro_XchC_P¨amSë
 "id-Go°R3410-94-Cry±oPro-XchC-P¨amSë"

	)

3725 
	#NID_id_Go°R3410_94_Cry±oPro_XchC_P¨amSë
 838

	)

3726 
	#OBJ_id_Go°R3410_94_Cry±oPro_XchC_P¨amSë
 
OBJ_¸y±›ro
,33L,3L

	)

3728 
	#SN_id_Go°R3410_2001_Te°P¨amSë
 "id-Go°R3410-2001-Te°P¨amSë"

	)

3729 
	#NID_id_Go°R3410_2001_Te°P¨amSë
 839

	)

3730 
	#OBJ_id_Go°R3410_2001_Te°P¨amSë
 
OBJ_¸y±›ro
,35L,0L

	)

3732 
	#SN_id_Go°R3410_2001_Cry±oPro_A_P¨amSë
 "id-Go°R3410-2001-Cry±oPro-A-P¨amSë"

	)

3733 
	#NID_id_Go°R3410_2001_Cry±oPro_A_P¨amSë
 840

	)

3734 
	#OBJ_id_Go°R3410_2001_Cry±oPro_A_P¨amSë
 
OBJ_¸y±›ro
,35L,1L

	)

3736 
	#SN_id_Go°R3410_2001_Cry±oPro_B_P¨amSë
 "id-Go°R3410-2001-Cry±oPro-B-P¨amSë"

	)

3737 
	#NID_id_Go°R3410_2001_Cry±oPro_B_P¨amSë
 841

	)

3738 
	#OBJ_id_Go°R3410_2001_Cry±oPro_B_P¨amSë
 
OBJ_¸y±›ro
,35L,2L

	)

3740 
	#SN_id_Go°R3410_2001_Cry±oPro_C_P¨amSë
 "id-Go°R3410-2001-Cry±oPro-C-P¨amSë"

	)

3741 
	#NID_id_Go°R3410_2001_Cry±oPro_C_P¨amSë
 842

	)

3742 
	#OBJ_id_Go°R3410_2001_Cry±oPro_C_P¨amSë
 
OBJ_¸y±›ro
,35L,3L

	)

3744 
	#SN_id_Go°R3410_2001_Cry±oPro_XchA_P¨amSë
 "id-Go°R3410-2001-Cry±oPro-XchA-P¨amSë"

	)

3745 
	#NID_id_Go°R3410_2001_Cry±oPro_XchA_P¨amSë
 843

	)

3746 
	#OBJ_id_Go°R3410_2001_Cry±oPro_XchA_P¨amSë
 
OBJ_¸y±›ro
,36L,0L

	)

3748 
	#SN_id_Go°R3410_2001_Cry±oPro_XchB_P¨amSë
 "id-Go°R3410-2001-Cry±oPro-XchB-P¨amSë"

	)

3749 
	#NID_id_Go°R3410_2001_Cry±oPro_XchB_P¨amSë
 844

	)

3750 
	#OBJ_id_Go°R3410_2001_Cry±oPro_XchB_P¨amSë
 
OBJ_¸y±›ro
,36L,1L

	)

3752 
	#SN_id_Go°R3410_94_a
 "id-Go°R3410-94-a"

	)

3753 
	#NID_id_Go°R3410_94_a
 845

	)

3754 
	#OBJ_id_Go°R3410_94_a
 
OBJ_id_Go°R3410_94
,1L

	)

3756 
	#SN_id_Go°R3410_94_aBis
 "id-Go°R3410-94-aBis"

	)

3757 
	#NID_id_Go°R3410_94_aBis
 846

	)

3758 
	#OBJ_id_Go°R3410_94_aBis
 
OBJ_id_Go°R3410_94
,2L

	)

3760 
	#SN_id_Go°R3410_94_b
 "id-Go°R3410-94-b"

	)

3761 
	#NID_id_Go°R3410_94_b
 847

	)

3762 
	#OBJ_id_Go°R3410_94_b
 
OBJ_id_Go°R3410_94
,3L

	)

3764 
	#SN_id_Go°R3410_94_bBis
 "id-Go°R3410-94-bBis"

	)

3765 
	#NID_id_Go°R3410_94_bBis
 848

	)

3766 
	#OBJ_id_Go°R3410_94_bBis
 
OBJ_id_Go°R3410_94
,4L

	)

3768 
	#SN_id_Go°28147_89_cc
 "id-Go°28147-89-cc"

	)

3769 
	#LN_id_Go°28147_89_cc
 "GOST 28147-89 Cry±ocom P¨amSë"

	)

3770 
	#NID_id_Go°28147_89_cc
 849

	)

3771 
	#OBJ_id_Go°28147_89_cc
 
OBJ_¸y±ocom
,1L,6L,1L

	)

3773 
	#SN_id_Go°R3410_94_cc
 "go°94cc"

	)

3774 
	#LN_id_Go°R3410_94_cc
 "GOST 34.10-94 Cry±ocom"

	)

3775 
	#NID_id_Go°R3410_94_cc
 850

	)

3776 
	#OBJ_id_Go°R3410_94_cc
 
OBJ_¸y±ocom
,1L,5L,3L

	)

3778 
	#SN_id_Go°R3410_2001_cc
 "go°2001cc"

	)

3779 
	#LN_id_Go°R3410_2001_cc
 "GOST 34.10-2001 Cry±ocom"

	)

3780 
	#NID_id_Go°R3410_2001_cc
 851

	)

3781 
	#OBJ_id_Go°R3410_2001_cc
 
OBJ_¸y±ocom
,1L,5L,4L

	)

3783 
	#SN_id_Go°R3411_94_wôh_Go°R3410_94_cc
 "id-Go°R3411-94-wôh-Go°R3410-94-cc"

	)

3784 
	#LN_id_Go°R3411_94_wôh_Go°R3410_94_cc
 "GOST R 34.11-94 wôh GOST R 34.10-94 Cry±ocom"

	)

3785 
	#NID_id_Go°R3411_94_wôh_Go°R3410_94_cc
 852

	)

3786 
	#OBJ_id_Go°R3411_94_wôh_Go°R3410_94_cc
 
OBJ_¸y±ocom
,1L,3L,3L

	)

3788 
	#SN_id_Go°R3411_94_wôh_Go°R3410_2001_cc
 "id-Go°R3411-94-wôh-Go°R3410-2001-cc"

	)

3789 
	#LN_id_Go°R3411_94_wôh_Go°R3410_2001_cc
 "GOST R 34.11-94 wôh GOST R 34.10-2001 Cry±ocom"

	)

3790 
	#NID_id_Go°R3411_94_wôh_Go°R3410_2001_cc
 853

	)

3791 
	#OBJ_id_Go°R3411_94_wôh_Go°R3410_2001_cc
 
OBJ_¸y±ocom
,1L,3L,4L

	)

3793 
	#SN_id_Go°R3410_2001_P¨amSë_cc
 "id-Go°R3410-2001-P¨amSë-cc"

	)

3794 
	#LN_id_Go°R3410_2001_P¨amSë_cc
 "GOST R 3410-2001 P¨amëî Së Cry±ocom"

	)

3795 
	#NID_id_Go°R3410_2001_P¨amSë_cc
 854

	)

3796 
	#OBJ_id_Go°R3410_2001_P¨amSë_cc
 
OBJ_¸y±ocom
,1L,8L,1L

	)

3798 
	#SN_ˇmñlü_128_cbc
 "CAMELLIA-128-CBC"

	)

3799 
	#LN_ˇmñlü_128_cbc
 "ˇmñlü-128-cbc"

	)

3800 
	#NID_ˇmñlü_128_cbc
 751

	)

3801 
	#OBJ_ˇmñlü_128_cbc
 1L,2L,392L,200011L,61L,1L,1L,1L,2L

	)

3803 
	#SN_ˇmñlü_192_cbc
 "CAMELLIA-192-CBC"

	)

3804 
	#LN_ˇmñlü_192_cbc
 "ˇmñlü-192-cbc"

	)

3805 
	#NID_ˇmñlü_192_cbc
 752

	)

3806 
	#OBJ_ˇmñlü_192_cbc
 1L,2L,392L,200011L,61L,1L,1L,1L,3L

	)

3808 
	#SN_ˇmñlü_256_cbc
 "CAMELLIA-256-CBC"

	)

3809 
	#LN_ˇmñlü_256_cbc
 "ˇmñlü-256-cbc"

	)

3810 
	#NID_ˇmñlü_256_cbc
 753

	)

3811 
	#OBJ_ˇmñlü_256_cbc
 1L,2L,392L,200011L,61L,1L,1L,1L,4L

	)

3813 
	#OBJ_¡t_ds
 0L,3L,4401L,5L

	)

3815 
	#OBJ_ˇmñlü
 
OBJ_¡t_ds
,3L,1L,9L

	)

3817 
	#SN_ˇmñlü_128_ecb
 "CAMELLIA-128-ECB"

	)

3818 
	#LN_ˇmñlü_128_ecb
 "ˇmñlü-128-ecb"

	)

3819 
	#NID_ˇmñlü_128_ecb
 754

	)

3820 
	#OBJ_ˇmñlü_128_ecb
 
OBJ_ˇmñlü
,1L

	)

3822 
	#SN_ˇmñlü_128_ofb128
 "CAMELLIA-128-OFB"

	)

3823 
	#LN_ˇmñlü_128_ofb128
 "ˇmñlü-128-ofb"

	)

3824 
	#NID_ˇmñlü_128_ofb128
 766

	)

3825 
	#OBJ_ˇmñlü_128_ofb128
 
OBJ_ˇmñlü
,3L

	)

3827 
	#SN_ˇmñlü_128_cfb128
 "CAMELLIA-128-CFB"

	)

3828 
	#LN_ˇmñlü_128_cfb128
 "ˇmñlü-128-cfb"

	)

3829 
	#NID_ˇmñlü_128_cfb128
 757

	)

3830 
	#OBJ_ˇmñlü_128_cfb128
 
OBJ_ˇmñlü
,4L

	)

3832 
	#SN_ˇmñlü_192_ecb
 "CAMELLIA-192-ECB"

	)

3833 
	#LN_ˇmñlü_192_ecb
 "ˇmñlü-192-ecb"

	)

3834 
	#NID_ˇmñlü_192_ecb
 755

	)

3835 
	#OBJ_ˇmñlü_192_ecb
 
OBJ_ˇmñlü
,21L

	)

3837 
	#SN_ˇmñlü_192_ofb128
 "CAMELLIA-192-OFB"

	)

3838 
	#LN_ˇmñlü_192_ofb128
 "ˇmñlü-192-ofb"

	)

3839 
	#NID_ˇmñlü_192_ofb128
 767

	)

3840 
	#OBJ_ˇmñlü_192_ofb128
 
OBJ_ˇmñlü
,23L

	)

3842 
	#SN_ˇmñlü_192_cfb128
 "CAMELLIA-192-CFB"

	)

3843 
	#LN_ˇmñlü_192_cfb128
 "ˇmñlü-192-cfb"

	)

3844 
	#NID_ˇmñlü_192_cfb128
 758

	)

3845 
	#OBJ_ˇmñlü_192_cfb128
 
OBJ_ˇmñlü
,24L

	)

3847 
	#SN_ˇmñlü_256_ecb
 "CAMELLIA-256-ECB"

	)

3848 
	#LN_ˇmñlü_256_ecb
 "ˇmñlü-256-ecb"

	)

3849 
	#NID_ˇmñlü_256_ecb
 756

	)

3850 
	#OBJ_ˇmñlü_256_ecb
 
OBJ_ˇmñlü
,41L

	)

3852 
	#SN_ˇmñlü_256_ofb128
 "CAMELLIA-256-OFB"

	)

3853 
	#LN_ˇmñlü_256_ofb128
 "ˇmñlü-256-ofb"

	)

3854 
	#NID_ˇmñlü_256_ofb128
 768

	)

3855 
	#OBJ_ˇmñlü_256_ofb128
 
OBJ_ˇmñlü
,43L

	)

3857 
	#SN_ˇmñlü_256_cfb128
 "CAMELLIA-256-CFB"

	)

3858 
	#LN_ˇmñlü_256_cfb128
 "ˇmñlü-256-cfb"

	)

3859 
	#NID_ˇmñlü_256_cfb128
 759

	)

3860 
	#OBJ_ˇmñlü_256_cfb128
 
OBJ_ˇmñlü
,44L

	)

3862 
	#SN_ˇmñlü_128_cfb1
 "CAMELLIA-128-CFB1"

	)

3863 
	#LN_ˇmñlü_128_cfb1
 "ˇmñlü-128-cfb1"

	)

3864 
	#NID_ˇmñlü_128_cfb1
 760

	)

3866 
	#SN_ˇmñlü_192_cfb1
 "CAMELLIA-192-CFB1"

	)

3867 
	#LN_ˇmñlü_192_cfb1
 "ˇmñlü-192-cfb1"

	)

3868 
	#NID_ˇmñlü_192_cfb1
 761

	)

3870 
	#SN_ˇmñlü_256_cfb1
 "CAMELLIA-256-CFB1"

	)

3871 
	#LN_ˇmñlü_256_cfb1
 "ˇmñlü-256-cfb1"

	)

3872 
	#NID_ˇmñlü_256_cfb1
 762

	)

3874 
	#SN_ˇmñlü_128_cfb8
 "CAMELLIA-128-CFB8"

	)

3875 
	#LN_ˇmñlü_128_cfb8
 "ˇmñlü-128-cfb8"

	)

3876 
	#NID_ˇmñlü_128_cfb8
 763

	)

3878 
	#SN_ˇmñlü_192_cfb8
 "CAMELLIA-192-CFB8"

	)

3879 
	#LN_ˇmñlü_192_cfb8
 "ˇmñlü-192-cfb8"

	)

3880 
	#NID_ˇmñlü_192_cfb8
 764

	)

3882 
	#SN_ˇmñlü_256_cfb8
 "CAMELLIA-256-CFB8"

	)

3883 
	#LN_ˇmñlü_256_cfb8
 "ˇmñlü-256-cfb8"

	)

3884 
	#NID_ˇmñlü_256_cfb8
 765

	)

3886 
	#SN_kiß
 "KISA"

	)

3887 
	#LN_kiß
 "kiß"

	)

3888 
	#NID_kiß
 773

	)

3889 
	#OBJ_kiß
 
OBJ_membî_body
,410L,200004L

	)

3891 
	#SN_£ed_ecb
 "SEED-ECB"

	)

3892 
	#LN_£ed_ecb
 "£ed-ecb"

	)

3893 
	#NID_£ed_ecb
 776

	)

3894 
	#OBJ_£ed_ecb
 
OBJ_kiß
,1L,3L

	)

3896 
	#SN_£ed_cbc
 "SEED-CBC"

	)

3897 
	#LN_£ed_cbc
 "£ed-cbc"

	)

3898 
	#NID_£ed_cbc
 777

	)

3899 
	#OBJ_£ed_cbc
 
OBJ_kiß
,1L,4L

	)

3901 
	#SN_£ed_cfb128
 "SEED-CFB"

	)

3902 
	#LN_£ed_cfb128
 "£ed-cfb"

	)

3903 
	#NID_£ed_cfb128
 779

	)

3904 
	#OBJ_£ed_cfb128
 
OBJ_kiß
,1L,5L

	)

3906 
	#SN_£ed_ofb128
 "SEED-OFB"

	)

3907 
	#LN_£ed_ofb128
 "£ed-ofb"

	)

3908 
	#NID_£ed_ofb128
 778

	)

3909 
	#OBJ_£ed_ofb128
 
OBJ_kiß
,1L,6L

	)

3911 
	#SN_hmac
 "HMAC"

	)

3912 
	#LN_hmac
 "hmac"

	)

3913 
	#NID_hmac
 855

	)

	@/usr/include/sys/_types/___offsetof.h

28 #i‚de‡
__off£tof


29 
	#__off£tof
(
ty≥
, 
fõld
Ë((
size_t
)(&(—y≥ *)0)->fõld))

	)

	@/usr/include/sys/_types/_timeval32.h

28 #i‚de‡
_STRUCT_TIMEVAL32


29 
	#_STRUCT_TIMEVAL32
 
timevÆ32


	)

30 
	g_STRUCT_TIMEVAL32


32 
__öt32_t
 
	gtv_£c
;

33 
__öt32_t
 
	gtv_u£c
;

	@/usr/include/sys/_types/_ucontext64.h

28 #i‚de‡
_STRUCT_UCONTEXT64


29 #i‡
__DARWIN_UNIX03


30 
	#_STRUCT_UCONTEXT64
 
__d¨wö_uc⁄ãxt64


	)

32 
	#_STRUCT_UCONTEXT64
 
uc⁄ãxt64


	)

34 
	g_STRUCT_UCONTEXT64


36 
	guc_⁄°ack
;

37 
__d¨wö_sig£t_t
 
	guc_sigmask
;

38 
_STRUCT_SIGALTSTACK
 
	guc_°ack
;

39 
_STRUCT_UCONTEXT64
 *
	guc_lök
;

40 
__d¨wö_size_t
 
	guc_mcsize
;

41 
_STRUCT_MCONTEXT64
 *
	guc_mc⁄ãxt64
;

43 
_STRUCT_UCONTEXT64
 
	tuc⁄ãxt64_t
;

	@/usr/include/i386/_structs.h

29 
	~<i386/_mc⁄ãxt.h
>

	@/usr/include/mach/i386/_structs.h

32 #i‚def 
_MACH_I386__STRUCTS_H_


33 
	#_MACH_I386__STRUCTS_H_


	)

41 #i‡
__DARWIN_UNIX03


42 
	#_STRUCT_X86_THREAD_STATE32
 
__d¨wö_i386_thªad_°©e


	)

43 
	g_STRUCT_X86_THREAD_STATE32


45 
	g__óx
;

46 
	g__ebx
;

47 
	g__ecx
;

48 
	g__edx
;

49 
	g__edi
;

50 
	g__esi
;

51 
	g__ebp
;

52 
	g__e•
;

53 
	g__ss
;

54 
	g__eÊags
;

55 
	g__eù
;

56 
	g__cs
;

57 
	g__ds
;

58 
	g__es
;

59 
	g__fs
;

60 
	g__gs
;

63 
	#_STRUCT_X86_THREAD_STATE32
 
i386_thªad_°©e


	)

64 
	g_STRUCT_X86_THREAD_STATE32


66 
	góx
;

67 
	gebx
;

68 
	gecx
;

69 
	gedx
;

70 
	gedi
;

71 
	gesi
;

72 
	gebp
;

73 
	ge•
;

74 
	gss
;

75 
	geÊags
;

76 
	geù
;

77 
	gcs
;

78 
	gds
;

79 
	ges
;

80 
	gfs
;

81 
	ggs
;

87 #i‡
__DARWIN_UNIX03


88 
	#_STRUCT_FP_CONTROL
 
__d¨wö_Â_c⁄åﬁ


	)

89 
	g_STRUCT_FP_CONTROL


91 
	g__övÆid
 :1,

92 
	g__dí‹m
 :1,

93 
	g__zdiv
 :1,

94 
	g__ovrÊ
 :1,

95 
	g__undÊ
 :1,

96 
	g__¥ecis
 :1,

98 
	g__pc
 :2,

99 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

100 
	#FP_PREC_24B
 0

	)

101 
	#FP_PREC_53B
 2

	)

102 
	#FP_PREC_64B
 3

	)

104 
	g__rc
 :2,

105 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

106 
	#FP_RND_NEAR
 0

	)

107 
	#FP_RND_DOWN
 1

	)

108 
	#FP_RND_UP
 2

	)

109 
	#FP_CHOP
 3

	)

114 
_STRUCT_FP_CONTROL
 
	t__d¨wö_Â_c⁄åﬁ_t
;

116 
	#_STRUCT_FP_CONTROL
 
Â_c⁄åﬁ


	)

117 
	g_STRUCT_FP_CONTROL


119 
	gövÆid
 :1,

120 
	gdí‹m
 :1,

121 
	gzdiv
 :1,

122 
	govrÊ
 :1,

123 
	gundÊ
 :1,

124 
	g¥ecis
 :1,

126 
	gpc
 :2,

127 
	#FP_PREC_24B
 0

	)

128 
	#FP_PREC_53B
 2

	)

129 
	#FP_PREC_64B
 3

	)

130 
	grc
 :2,

131 
	#FP_RND_NEAR
 0

	)

132 
	#FP_RND_DOWN
 1

	)

133 
	#FP_RND_UP
 2

	)

134 
	#FP_CHOP
 3

	)

138 
_STRUCT_FP_CONTROL
 
	tÂ_c⁄åﬁ_t
;

145 #i‡
__DARWIN_UNIX03


146 
	#_STRUCT_FP_STATUS
 
__d¨wö_Â_°©us


	)

147 
	g_STRUCT_FP_STATUS


149 
	g__övÆid
 :1,

150 
	g__dí‹m
 :1,

151 
	g__zdiv
 :1,

152 
	g__ovrÊ
 :1,

153 
	g__undÊ
 :1,

154 
	g__¥ecis
 :1,

155 
	g__°kÊt
 :1,

156 
	g__îrsumm
 :1,

157 
	g__c0
 :1,

158 
	g__c1
 :1,

159 
	g__c2
 :1,

160 
	g__tos
 :3,

161 
	g__c3
 :1,

162 
	g__busy
 :1;

164 
_STRUCT_FP_STATUS
 
	t__d¨wö_Â_°©us_t
;

166 
	#_STRUCT_FP_STATUS
 
Â_°©us


	)

167 
	g_STRUCT_FP_STATUS


169 
	gövÆid
 :1,

170 
	gdí‹m
 :1,

171 
	gzdiv
 :1,

172 
	govrÊ
 :1,

173 
	gundÊ
 :1,

174 
	g¥ecis
 :1,

175 
	g°kÊt
 :1,

176 
	gîrsumm
 :1,

177 
	gc0
 :1,

178 
	gc1
 :1,

179 
	gc2
 :1,

180 
	gtos
 :3,

181 
	gc3
 :1,

182 
	gbusy
 :1;

184 
_STRUCT_FP_STATUS
 
	tÂ_°©us_t
;

189 #i‡
__DARWIN_UNIX03


190 
	#_STRUCT_MMST_REG
 
__d¨wö_mm°_ªg


	)

191 
	g_STRUCT_MMST_REG


193 
	g__mm°_ªg
[10];

194 
	g__mm°_r§v
[6];

197 
	#_STRUCT_MMST_REG
 
mm°_ªg


	)

198 
	g_STRUCT_MMST_REG


200 
	gmm°_ªg
[10];

201 
	gmm°_r§v
[6];

208 #i‡
__DARWIN_UNIX03


209 
	#_STRUCT_XMM_REG
 
__d¨wö_xmm_ªg


	)

210 
	g_STRUCT_XMM_REG


212 
	g__xmm_ªg
[16];

215 
	#_STRUCT_XMM_REG
 
xmm_ªg


	)

216 
	g_STRUCT_XMM_REG


218 
	gxmm_ªg
[16];

226 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë|| deföed(
_DARWIN_C_SOURCE
)

227 
	#FP_STATE_BYTES
 512

	)

230 #i‡
__DARWIN_UNIX03


231 
	#_STRUCT_X86_FLOAT_STATE32
 
__d¨wö_i386_Êﬂt_°©e


	)

232 
	g_STRUCT_X86_FLOAT_STATE32


234 
	g__Âu_ª£rved
[2];

235 
_STRUCT_FP_CONTROL
 
	g__Âu_fcw
;

236 
_STRUCT_FP_STATUS
 
	g__Âu_fsw
;

237 
__uöt8_t
 
	g__Âu_·w
;

238 
__uöt8_t
 
	g__Âu_r§v1
;

239 
__uöt16_t
 
	g__Âu_f›
;

240 
__uöt32_t
 
	g__Âu_ù
;

241 
__uöt16_t
 
	g__Âu_cs
;

242 
__uöt16_t
 
	g__Âu_r§v2
;

243 
__uöt32_t
 
	g__Âu_dp
;

244 
__uöt16_t
 
	g__Âu_ds
;

245 
__uöt16_t
 
	g__Âu_r§v3
;

246 
__uöt32_t
 
	g__Âu_mxc§
;

247 
__uöt32_t
 
	g__Âu_mxc§mask
;

248 
_STRUCT_MMST_REG
 
	g__Âu_°mm0
;

249 
_STRUCT_MMST_REG
 
	g__Âu_°mm1
;

250 
_STRUCT_MMST_REG
 
	g__Âu_°mm2
;

251 
_STRUCT_MMST_REG
 
	g__Âu_°mm3
;

252 
_STRUCT_MMST_REG
 
	g__Âu_°mm4
;

253 
_STRUCT_MMST_REG
 
	g__Âu_°mm5
;

254 
_STRUCT_MMST_REG
 
	g__Âu_°mm6
;

255 
_STRUCT_MMST_REG
 
	g__Âu_°mm7
;

256 
_STRUCT_XMM_REG
 
	g__Âu_xmm0
;

257 
_STRUCT_XMM_REG
 
	g__Âu_xmm1
;

258 
_STRUCT_XMM_REG
 
	g__Âu_xmm2
;

259 
_STRUCT_XMM_REG
 
	g__Âu_xmm3
;

260 
_STRUCT_XMM_REG
 
	g__Âu_xmm4
;

261 
_STRUCT_XMM_REG
 
	g__Âu_xmm5
;

262 
_STRUCT_XMM_REG
 
	g__Âu_xmm6
;

263 
_STRUCT_XMM_REG
 
	g__Âu_xmm7
;

264 
	g__Âu_r§v4
[14*16];

265 
	g__Âu_ª£rved1
;

268 
	#_STRUCT_X86_AVX_STATE32
 
__d¨wö_i386_avx_°©e


	)

269 
	g_STRUCT_X86_AVX_STATE32


271 
	g__Âu_ª£rved
[2];

272 
_STRUCT_FP_CONTROL
 
	g__Âu_fcw
;

273 
_STRUCT_FP_STATUS
 
	g__Âu_fsw
;

274 
__uöt8_t
 
	g__Âu_·w
;

275 
__uöt8_t
 
	g__Âu_r§v1
;

276 
__uöt16_t
 
	g__Âu_f›
;

277 
__uöt32_t
 
	g__Âu_ù
;

278 
__uöt16_t
 
	g__Âu_cs
;

279 
__uöt16_t
 
	g__Âu_r§v2
;

280 
__uöt32_t
 
	g__Âu_dp
;

281 
__uöt16_t
 
	g__Âu_ds
;

282 
__uöt16_t
 
	g__Âu_r§v3
;

283 
__uöt32_t
 
	g__Âu_mxc§
;

284 
__uöt32_t
 
	g__Âu_mxc§mask
;

285 
_STRUCT_MMST_REG
 
	g__Âu_°mm0
;

286 
_STRUCT_MMST_REG
 
	g__Âu_°mm1
;

287 
_STRUCT_MMST_REG
 
	g__Âu_°mm2
;

288 
_STRUCT_MMST_REG
 
	g__Âu_°mm3
;

289 
_STRUCT_MMST_REG
 
	g__Âu_°mm4
;

290 
_STRUCT_MMST_REG
 
	g__Âu_°mm5
;

291 
_STRUCT_MMST_REG
 
	g__Âu_°mm6
;

292 
_STRUCT_MMST_REG
 
	g__Âu_°mm7
;

293 
_STRUCT_XMM_REG
 
	g__Âu_xmm0
;

294 
_STRUCT_XMM_REG
 
	g__Âu_xmm1
;

295 
_STRUCT_XMM_REG
 
	g__Âu_xmm2
;

296 
_STRUCT_XMM_REG
 
	g__Âu_xmm3
;

297 
_STRUCT_XMM_REG
 
	g__Âu_xmm4
;

298 
_STRUCT_XMM_REG
 
	g__Âu_xmm5
;

299 
_STRUCT_XMM_REG
 
	g__Âu_xmm6
;

300 
_STRUCT_XMM_REG
 
	g__Âu_xmm7
;

301 
	g__Âu_r§v4
[14*16];

302 
	g__Âu_ª£rved1
;

303 
	g__avx_ª£rved1
[64];

304 
_STRUCT_XMM_REG
 
	g__Âu_ymmh0
;

305 
_STRUCT_XMM_REG
 
	g__Âu_ymmh1
;

306 
_STRUCT_XMM_REG
 
	g__Âu_ymmh2
;

307 
_STRUCT_XMM_REG
 
	g__Âu_ymmh3
;

308 
_STRUCT_XMM_REG
 
	g__Âu_ymmh4
;

309 
_STRUCT_XMM_REG
 
	g__Âu_ymmh5
;

310 
_STRUCT_XMM_REG
 
	g__Âu_ymmh6
;

311 
_STRUCT_XMM_REG
 
	g__Âu_ymmh7
;

315 
	#_STRUCT_X86_FLOAT_STATE32
 
i386_Êﬂt_°©e


	)

316 
	g_STRUCT_X86_FLOAT_STATE32


318 
	gÂu_ª£rved
[2];

319 
_STRUCT_FP_CONTROL
 
	gÂu_fcw
;

320 
_STRUCT_FP_STATUS
 
	gÂu_fsw
;

321 
__uöt8_t
 
	gÂu_·w
;

322 
__uöt8_t
 
	gÂu_r§v1
;

323 
__uöt16_t
 
	gÂu_f›
;

324 
__uöt32_t
 
	gÂu_ù
;

325 
__uöt16_t
 
	gÂu_cs
;

326 
__uöt16_t
 
	gÂu_r§v2
;

327 
__uöt32_t
 
	gÂu_dp
;

328 
__uöt16_t
 
	gÂu_ds
;

329 
__uöt16_t
 
	gÂu_r§v3
;

330 
__uöt32_t
 
	gÂu_mxc§
;

331 
__uöt32_t
 
	gÂu_mxc§mask
;

332 
_STRUCT_MMST_REG
 
	gÂu_°mm0
;

333 
_STRUCT_MMST_REG
 
	gÂu_°mm1
;

334 
_STRUCT_MMST_REG
 
	gÂu_°mm2
;

335 
_STRUCT_MMST_REG
 
	gÂu_°mm3
;

336 
_STRUCT_MMST_REG
 
	gÂu_°mm4
;

337 
_STRUCT_MMST_REG
 
	gÂu_°mm5
;

338 
_STRUCT_MMST_REG
 
	gÂu_°mm6
;

339 
_STRUCT_MMST_REG
 
	gÂu_°mm7
;

340 
_STRUCT_XMM_REG
 
	gÂu_xmm0
;

341 
_STRUCT_XMM_REG
 
	gÂu_xmm1
;

342 
_STRUCT_XMM_REG
 
	gÂu_xmm2
;

343 
_STRUCT_XMM_REG
 
	gÂu_xmm3
;

344 
_STRUCT_XMM_REG
 
	gÂu_xmm4
;

345 
_STRUCT_XMM_REG
 
	gÂu_xmm5
;

346 
_STRUCT_XMM_REG
 
	gÂu_xmm6
;

347 
_STRUCT_XMM_REG
 
	gÂu_xmm7
;

348 
	gÂu_r§v4
[14*16];

349 
	gÂu_ª£rved1
;

352 
	#_STRUCT_X86_AVX_STATE32
 
i386_avx_°©e


	)

353 
	g_STRUCT_X86_AVX_STATE32


355 
	gÂu_ª£rved
[2];

356 
_STRUCT_FP_CONTROL
 
	gÂu_fcw
;

357 
_STRUCT_FP_STATUS
 
	gÂu_fsw
;

358 
__uöt8_t
 
	gÂu_·w
;

359 
__uöt8_t
 
	gÂu_r§v1
;

360 
__uöt16_t
 
	gÂu_f›
;

361 
__uöt32_t
 
	gÂu_ù
;

362 
__uöt16_t
 
	gÂu_cs
;

363 
__uöt16_t
 
	gÂu_r§v2
;

364 
__uöt32_t
 
	gÂu_dp
;

365 
__uöt16_t
 
	gÂu_ds
;

366 
__uöt16_t
 
	gÂu_r§v3
;

367 
__uöt32_t
 
	gÂu_mxc§
;

368 
__uöt32_t
 
	gÂu_mxc§mask
;

369 
_STRUCT_MMST_REG
 
	gÂu_°mm0
;

370 
_STRUCT_MMST_REG
 
	gÂu_°mm1
;

371 
_STRUCT_MMST_REG
 
	gÂu_°mm2
;

372 
_STRUCT_MMST_REG
 
	gÂu_°mm3
;

373 
_STRUCT_MMST_REG
 
	gÂu_°mm4
;

374 
_STRUCT_MMST_REG
 
	gÂu_°mm5
;

375 
_STRUCT_MMST_REG
 
	gÂu_°mm6
;

376 
_STRUCT_MMST_REG
 
	gÂu_°mm7
;

377 
_STRUCT_XMM_REG
 
	gÂu_xmm0
;

378 
_STRUCT_XMM_REG
 
	gÂu_xmm1
;

379 
_STRUCT_XMM_REG
 
	gÂu_xmm2
;

380 
_STRUCT_XMM_REG
 
	gÂu_xmm3
;

381 
_STRUCT_XMM_REG
 
	gÂu_xmm4
;

382 
_STRUCT_XMM_REG
 
	gÂu_xmm5
;

383 
_STRUCT_XMM_REG
 
	gÂu_xmm6
;

384 
_STRUCT_XMM_REG
 
	gÂu_xmm7
;

385 
	gÂu_r§v4
[14*16];

386 
	gÂu_ª£rved1
;

387 
	g__avx_ª£rved1
[64];

388 
_STRUCT_XMM_REG
 
	g__Âu_ymmh0
;

389 
_STRUCT_XMM_REG
 
	g__Âu_ymmh1
;

390 
_STRUCT_XMM_REG
 
	g__Âu_ymmh2
;

391 
_STRUCT_XMM_REG
 
	g__Âu_ymmh3
;

392 
_STRUCT_XMM_REG
 
	g__Âu_ymmh4
;

393 
_STRUCT_XMM_REG
 
	g__Âu_ymmh5
;

394 
_STRUCT_XMM_REG
 
	g__Âu_ymmh6
;

395 
_STRUCT_XMM_REG
 
	g__Âu_ymmh7
;

400 #i‡
__DARWIN_UNIX03


401 
	#_STRUCT_X86_EXCEPTION_STATE32
 
__d¨wö_i386_ex˚±i⁄_°©e


	)

402 
	g_STRUCT_X86_EXCEPTION_STATE32


404 
__uöt16_t
 
	g__å≠no
;

405 
__uöt16_t
 
	g__˝u
;

406 
__uöt32_t
 
	g__îr
;

407 
__uöt32_t
 
	g__Áu…vaddr
;

410 
	#_STRUCT_X86_EXCEPTION_STATE32
 
i386_ex˚±i⁄_°©e


	)

411 
	g_STRUCT_X86_EXCEPTION_STATE32


413 
__uöt16_t
 
	gå≠no
;

414 
__uöt16_t
 
	g˝u
;

415 
__uöt32_t
 
	gîr
;

416 
__uöt32_t
 
	gÁu…vaddr
;

420 #i‡
__DARWIN_UNIX03


421 
	#_STRUCT_X86_DEBUG_STATE32
 
__d¨wö_x86_debug_°©e32


	)

422 
	g_STRUCT_X86_DEBUG_STATE32


424 
	g__dr0
;

425 
	g__dr1
;

426 
	g__dr2
;

427 
	g__dr3
;

428 
	g__dr4
;

429 
	g__dr5
;

430 
	g__dr6
;

431 
	g__dr7
;

434 
	#_STRUCT_X86_DEBUG_STATE32
 
x86_debug_°©e32


	)

435 
	g_STRUCT_X86_DEBUG_STATE32


437 
	gdr0
;

438 
	gdr1
;

439 
	gdr2
;

440 
	gdr3
;

441 
	gdr4
;

442 
	gdr5
;

443 
	gdr6
;

444 
	gdr7
;

452 #i‡
__DARWIN_UNIX03


453 
	#_STRUCT_X86_THREAD_STATE64
 
__d¨wö_x86_thªad_°©e64


	)

454 
	g_STRUCT_X86_THREAD_STATE64


456 
__uöt64_t
 
	g__øx
;

457 
__uöt64_t
 
	g__rbx
;

458 
__uöt64_t
 
	g__rcx
;

459 
__uöt64_t
 
	g__rdx
;

460 
__uöt64_t
 
	g__rdi
;

461 
__uöt64_t
 
	g__rsi
;

462 
__uöt64_t
 
	g__rbp
;

463 
__uöt64_t
 
	g__r•
;

464 
__uöt64_t
 
	g__r8
;

465 
__uöt64_t
 
	g__r9
;

466 
__uöt64_t
 
	g__r10
;

467 
__uöt64_t
 
	g__r11
;

468 
__uöt64_t
 
	g__r12
;

469 
__uöt64_t
 
	g__r13
;

470 
__uöt64_t
 
	g__r14
;

471 
__uöt64_t
 
	g__r15
;

472 
__uöt64_t
 
	g__rù
;

473 
__uöt64_t
 
	g__rÊags
;

474 
__uöt64_t
 
	g__cs
;

475 
__uöt64_t
 
	g__fs
;

476 
__uöt64_t
 
	g__gs
;

479 
	#_STRUCT_X86_THREAD_STATE64
 
x86_thªad_°©e64


	)

480 
	g_STRUCT_X86_THREAD_STATE64


482 
__uöt64_t
 
	gøx
;

483 
__uöt64_t
 
	grbx
;

484 
__uöt64_t
 
	grcx
;

485 
__uöt64_t
 
	grdx
;

486 
__uöt64_t
 
	grdi
;

487 
__uöt64_t
 
	grsi
;

488 
__uöt64_t
 
	grbp
;

489 
__uöt64_t
 
	gr•
;

490 
__uöt64_t
 
	gr8
;

491 
__uöt64_t
 
	gr9
;

492 
__uöt64_t
 
	gr10
;

493 
__uöt64_t
 
	gr11
;

494 
__uöt64_t
 
	gr12
;

495 
__uöt64_t
 
	gr13
;

496 
__uöt64_t
 
	gr14
;

497 
__uöt64_t
 
	gr15
;

498 
__uöt64_t
 
	grù
;

499 
__uöt64_t
 
	grÊags
;

500 
__uöt64_t
 
	gcs
;

501 
__uöt64_t
 
	gfs
;

502 
__uöt64_t
 
	ggs
;

507 #i‡
__DARWIN_UNIX03


508 
	#_STRUCT_X86_FLOAT_STATE64
 
__d¨wö_x86_Êﬂt_°©e64


	)

509 
	g_STRUCT_X86_FLOAT_STATE64


511 
	g__Âu_ª£rved
[2];

512 
_STRUCT_FP_CONTROL
 
	g__Âu_fcw
;

513 
_STRUCT_FP_STATUS
 
	g__Âu_fsw
;

514 
__uöt8_t
 
	g__Âu_·w
;

515 
__uöt8_t
 
	g__Âu_r§v1
;

516 
__uöt16_t
 
	g__Âu_f›
;

519 
__uöt32_t
 
	g__Âu_ù
;

520 
__uöt16_t
 
	g__Âu_cs
;

522 
__uöt16_t
 
	g__Âu_r§v2
;

525 
__uöt32_t
 
	g__Âu_dp
;

526 
__uöt16_t
 
	g__Âu_ds
;

528 
__uöt16_t
 
	g__Âu_r§v3
;

529 
__uöt32_t
 
	g__Âu_mxc§
;

530 
__uöt32_t
 
	g__Âu_mxc§mask
;

531 
_STRUCT_MMST_REG
 
	g__Âu_°mm0
;

532 
_STRUCT_MMST_REG
 
	g__Âu_°mm1
;

533 
_STRUCT_MMST_REG
 
	g__Âu_°mm2
;

534 
_STRUCT_MMST_REG
 
	g__Âu_°mm3
;

535 
_STRUCT_MMST_REG
 
	g__Âu_°mm4
;

536 
_STRUCT_MMST_REG
 
	g__Âu_°mm5
;

537 
_STRUCT_MMST_REG
 
	g__Âu_°mm6
;

538 
_STRUCT_MMST_REG
 
	g__Âu_°mm7
;

539 
_STRUCT_XMM_REG
 
	g__Âu_xmm0
;

540 
_STRUCT_XMM_REG
 
	g__Âu_xmm1
;

541 
_STRUCT_XMM_REG
 
	g__Âu_xmm2
;

542 
_STRUCT_XMM_REG
 
	g__Âu_xmm3
;

543 
_STRUCT_XMM_REG
 
	g__Âu_xmm4
;

544 
_STRUCT_XMM_REG
 
	g__Âu_xmm5
;

545 
_STRUCT_XMM_REG
 
	g__Âu_xmm6
;

546 
_STRUCT_XMM_REG
 
	g__Âu_xmm7
;

547 
_STRUCT_XMM_REG
 
	g__Âu_xmm8
;

548 
_STRUCT_XMM_REG
 
	g__Âu_xmm9
;

549 
_STRUCT_XMM_REG
 
	g__Âu_xmm10
;

550 
_STRUCT_XMM_REG
 
	g__Âu_xmm11
;

551 
_STRUCT_XMM_REG
 
	g__Âu_xmm12
;

552 
_STRUCT_XMM_REG
 
	g__Âu_xmm13
;

553 
_STRUCT_XMM_REG
 
	g__Âu_xmm14
;

554 
_STRUCT_XMM_REG
 
	g__Âu_xmm15
;

555 
	g__Âu_r§v4
[6*16];

556 
	g__Âu_ª£rved1
;

559 
	#_STRUCT_X86_AVX_STATE64
 
__d¨wö_x86_avx_°©e64


	)

560 
	g_STRUCT_X86_AVX_STATE64


562 
	g__Âu_ª£rved
[2];

563 
_STRUCT_FP_CONTROL
 
	g__Âu_fcw
;

564 
_STRUCT_FP_STATUS
 
	g__Âu_fsw
;

565 
__uöt8_t
 
	g__Âu_·w
;

566 
__uöt8_t
 
	g__Âu_r§v1
;

567 
__uöt16_t
 
	g__Âu_f›
;

570 
__uöt32_t
 
	g__Âu_ù
;

571 
__uöt16_t
 
	g__Âu_cs
;

573 
__uöt16_t
 
	g__Âu_r§v2
;

576 
__uöt32_t
 
	g__Âu_dp
;

577 
__uöt16_t
 
	g__Âu_ds
;

579 
__uöt16_t
 
	g__Âu_r§v3
;

580 
__uöt32_t
 
	g__Âu_mxc§
;

581 
__uöt32_t
 
	g__Âu_mxc§mask
;

582 
_STRUCT_MMST_REG
 
	g__Âu_°mm0
;

583 
_STRUCT_MMST_REG
 
	g__Âu_°mm1
;

584 
_STRUCT_MMST_REG
 
	g__Âu_°mm2
;

585 
_STRUCT_MMST_REG
 
	g__Âu_°mm3
;

586 
_STRUCT_MMST_REG
 
	g__Âu_°mm4
;

587 
_STRUCT_MMST_REG
 
	g__Âu_°mm5
;

588 
_STRUCT_MMST_REG
 
	g__Âu_°mm6
;

589 
_STRUCT_MMST_REG
 
	g__Âu_°mm7
;

590 
_STRUCT_XMM_REG
 
	g__Âu_xmm0
;

591 
_STRUCT_XMM_REG
 
	g__Âu_xmm1
;

592 
_STRUCT_XMM_REG
 
	g__Âu_xmm2
;

593 
_STRUCT_XMM_REG
 
	g__Âu_xmm3
;

594 
_STRUCT_XMM_REG
 
	g__Âu_xmm4
;

595 
_STRUCT_XMM_REG
 
	g__Âu_xmm5
;

596 
_STRUCT_XMM_REG
 
	g__Âu_xmm6
;

597 
_STRUCT_XMM_REG
 
	g__Âu_xmm7
;

598 
_STRUCT_XMM_REG
 
	g__Âu_xmm8
;

599 
_STRUCT_XMM_REG
 
	g__Âu_xmm9
;

600 
_STRUCT_XMM_REG
 
	g__Âu_xmm10
;

601 
_STRUCT_XMM_REG
 
	g__Âu_xmm11
;

602 
_STRUCT_XMM_REG
 
	g__Âu_xmm12
;

603 
_STRUCT_XMM_REG
 
	g__Âu_xmm13
;

604 
_STRUCT_XMM_REG
 
	g__Âu_xmm14
;

605 
_STRUCT_XMM_REG
 
	g__Âu_xmm15
;

606 
	g__Âu_r§v4
[6*16];

607 
	g__Âu_ª£rved1
;

608 
	g__avx_ª£rved1
[64];

609 
_STRUCT_XMM_REG
 
	g__Âu_ymmh0
;

610 
_STRUCT_XMM_REG
 
	g__Âu_ymmh1
;

611 
_STRUCT_XMM_REG
 
	g__Âu_ymmh2
;

612 
_STRUCT_XMM_REG
 
	g__Âu_ymmh3
;

613 
_STRUCT_XMM_REG
 
	g__Âu_ymmh4
;

614 
_STRUCT_XMM_REG
 
	g__Âu_ymmh5
;

615 
_STRUCT_XMM_REG
 
	g__Âu_ymmh6
;

616 
_STRUCT_XMM_REG
 
	g__Âu_ymmh7
;

617 
_STRUCT_XMM_REG
 
	g__Âu_ymmh8
;

618 
_STRUCT_XMM_REG
 
	g__Âu_ymmh9
;

619 
_STRUCT_XMM_REG
 
	g__Âu_ymmh10
;

620 
_STRUCT_XMM_REG
 
	g__Âu_ymmh11
;

621 
_STRUCT_XMM_REG
 
	g__Âu_ymmh12
;

622 
_STRUCT_XMM_REG
 
	g__Âu_ymmh13
;

623 
_STRUCT_XMM_REG
 
	g__Âu_ymmh14
;

624 
_STRUCT_XMM_REG
 
	g__Âu_ymmh15
;

628 
	#_STRUCT_X86_FLOAT_STATE64
 
x86_Êﬂt_°©e64


	)

629 
	g_STRUCT_X86_FLOAT_STATE64


631 
	gÂu_ª£rved
[2];

632 
_STRUCT_FP_CONTROL
 
	gÂu_fcw
;

633 
_STRUCT_FP_STATUS
 
	gÂu_fsw
;

634 
__uöt8_t
 
	gÂu_·w
;

635 
__uöt8_t
 
	gÂu_r§v1
;

636 
__uöt16_t
 
	gÂu_f›
;

639 
__uöt32_t
 
	gÂu_ù
;

640 
__uöt16_t
 
	gÂu_cs
;

642 
__uöt16_t
 
	gÂu_r§v2
;

645 
__uöt32_t
 
	gÂu_dp
;

646 
__uöt16_t
 
	gÂu_ds
;

648 
__uöt16_t
 
	gÂu_r§v3
;

649 
__uöt32_t
 
	gÂu_mxc§
;

650 
__uöt32_t
 
	gÂu_mxc§mask
;

651 
_STRUCT_MMST_REG
 
	gÂu_°mm0
;

652 
_STRUCT_MMST_REG
 
	gÂu_°mm1
;

653 
_STRUCT_MMST_REG
 
	gÂu_°mm2
;

654 
_STRUCT_MMST_REG
 
	gÂu_°mm3
;

655 
_STRUCT_MMST_REG
 
	gÂu_°mm4
;

656 
_STRUCT_MMST_REG
 
	gÂu_°mm5
;

657 
_STRUCT_MMST_REG
 
	gÂu_°mm6
;

658 
_STRUCT_MMST_REG
 
	gÂu_°mm7
;

659 
_STRUCT_XMM_REG
 
	gÂu_xmm0
;

660 
_STRUCT_XMM_REG
 
	gÂu_xmm1
;

661 
_STRUCT_XMM_REG
 
	gÂu_xmm2
;

662 
_STRUCT_XMM_REG
 
	gÂu_xmm3
;

663 
_STRUCT_XMM_REG
 
	gÂu_xmm4
;

664 
_STRUCT_XMM_REG
 
	gÂu_xmm5
;

665 
_STRUCT_XMM_REG
 
	gÂu_xmm6
;

666 
_STRUCT_XMM_REG
 
	gÂu_xmm7
;

667 
_STRUCT_XMM_REG
 
	gÂu_xmm8
;

668 
_STRUCT_XMM_REG
 
	gÂu_xmm9
;

669 
_STRUCT_XMM_REG
 
	gÂu_xmm10
;

670 
_STRUCT_XMM_REG
 
	gÂu_xmm11
;

671 
_STRUCT_XMM_REG
 
	gÂu_xmm12
;

672 
_STRUCT_XMM_REG
 
	gÂu_xmm13
;

673 
_STRUCT_XMM_REG
 
	gÂu_xmm14
;

674 
_STRUCT_XMM_REG
 
	gÂu_xmm15
;

675 
	gÂu_r§v4
[6*16];

676 
	gÂu_ª£rved1
;

679 
	#_STRUCT_X86_AVX_STATE64
 
x86_avx_°©e64


	)

680 
	g_STRUCT_X86_AVX_STATE64


682 
	gÂu_ª£rved
[2];

683 
_STRUCT_FP_CONTROL
 
	gÂu_fcw
;

684 
_STRUCT_FP_STATUS
 
	gÂu_fsw
;

685 
__uöt8_t
 
	gÂu_·w
;

686 
__uöt8_t
 
	gÂu_r§v1
;

687 
__uöt16_t
 
	gÂu_f›
;

690 
__uöt32_t
 
	gÂu_ù
;

691 
__uöt16_t
 
	gÂu_cs
;

693 
__uöt16_t
 
	gÂu_r§v2
;

696 
__uöt32_t
 
	gÂu_dp
;

697 
__uöt16_t
 
	gÂu_ds
;

699 
__uöt16_t
 
	gÂu_r§v3
;

700 
__uöt32_t
 
	gÂu_mxc§
;

701 
__uöt32_t
 
	gÂu_mxc§mask
;

702 
_STRUCT_MMST_REG
 
	gÂu_°mm0
;

703 
_STRUCT_MMST_REG
 
	gÂu_°mm1
;

704 
_STRUCT_MMST_REG
 
	gÂu_°mm2
;

705 
_STRUCT_MMST_REG
 
	gÂu_°mm3
;

706 
_STRUCT_MMST_REG
 
	gÂu_°mm4
;

707 
_STRUCT_MMST_REG
 
	gÂu_°mm5
;

708 
_STRUCT_MMST_REG
 
	gÂu_°mm6
;

709 
_STRUCT_MMST_REG
 
	gÂu_°mm7
;

710 
_STRUCT_XMM_REG
 
	gÂu_xmm0
;

711 
_STRUCT_XMM_REG
 
	gÂu_xmm1
;

712 
_STRUCT_XMM_REG
 
	gÂu_xmm2
;

713 
_STRUCT_XMM_REG
 
	gÂu_xmm3
;

714 
_STRUCT_XMM_REG
 
	gÂu_xmm4
;

715 
_STRUCT_XMM_REG
 
	gÂu_xmm5
;

716 
_STRUCT_XMM_REG
 
	gÂu_xmm6
;

717 
_STRUCT_XMM_REG
 
	gÂu_xmm7
;

718 
_STRUCT_XMM_REG
 
	gÂu_xmm8
;

719 
_STRUCT_XMM_REG
 
	gÂu_xmm9
;

720 
_STRUCT_XMM_REG
 
	gÂu_xmm10
;

721 
_STRUCT_XMM_REG
 
	gÂu_xmm11
;

722 
_STRUCT_XMM_REG
 
	gÂu_xmm12
;

723 
_STRUCT_XMM_REG
 
	gÂu_xmm13
;

724 
_STRUCT_XMM_REG
 
	gÂu_xmm14
;

725 
_STRUCT_XMM_REG
 
	gÂu_xmm15
;

726 
	gÂu_r§v4
[6*16];

727 
	gÂu_ª£rved1
;

728 
	g__avx_ª£rved1
[64];

729 
_STRUCT_XMM_REG
 
	g__Âu_ymmh0
;

730 
_STRUCT_XMM_REG
 
	g__Âu_ymmh1
;

731 
_STRUCT_XMM_REG
 
	g__Âu_ymmh2
;

732 
_STRUCT_XMM_REG
 
	g__Âu_ymmh3
;

733 
_STRUCT_XMM_REG
 
	g__Âu_ymmh4
;

734 
_STRUCT_XMM_REG
 
	g__Âu_ymmh5
;

735 
_STRUCT_XMM_REG
 
	g__Âu_ymmh6
;

736 
_STRUCT_XMM_REG
 
	g__Âu_ymmh7
;

737 
_STRUCT_XMM_REG
 
	g__Âu_ymmh8
;

738 
_STRUCT_XMM_REG
 
	g__Âu_ymmh9
;

739 
_STRUCT_XMM_REG
 
	g__Âu_ymmh10
;

740 
_STRUCT_XMM_REG
 
	g__Âu_ymmh11
;

741 
_STRUCT_XMM_REG
 
	g__Âu_ymmh12
;

742 
_STRUCT_XMM_REG
 
	g__Âu_ymmh13
;

743 
_STRUCT_XMM_REG
 
	g__Âu_ymmh14
;

744 
_STRUCT_XMM_REG
 
	g__Âu_ymmh15
;

749 #i‡
__DARWIN_UNIX03


750 
	#_STRUCT_X86_EXCEPTION_STATE64
 
__d¨wö_x86_ex˚±i⁄_°©e64


	)

751 
	g_STRUCT_X86_EXCEPTION_STATE64


753 
__uöt16_t
 
	g__å≠no
;

754 
__uöt16_t
 
	g__˝u
;

755 
__uöt32_t
 
	g__îr
;

756 
__uöt64_t
 
	g__Áu…vaddr
;

759 
	#_STRUCT_X86_EXCEPTION_STATE64
 
x86_ex˚±i⁄_°©e64


	)

760 
	g_STRUCT_X86_EXCEPTION_STATE64


762 
__uöt16_t
 
	gå≠no
;

763 
__uöt16_t
 
	g˝u
;

764 
__uöt32_t
 
	gîr
;

765 
__uöt64_t
 
	gÁu…vaddr
;

769 #i‡
__DARWIN_UNIX03


770 
	#_STRUCT_X86_DEBUG_STATE64
 
__d¨wö_x86_debug_°©e64


	)

771 
	g_STRUCT_X86_DEBUG_STATE64


773 
__uöt64_t
 
	g__dr0
;

774 
__uöt64_t
 
	g__dr1
;

775 
__uöt64_t
 
	g__dr2
;

776 
__uöt64_t
 
	g__dr3
;

777 
__uöt64_t
 
	g__dr4
;

778 
__uöt64_t
 
	g__dr5
;

779 
__uöt64_t
 
	g__dr6
;

780 
__uöt64_t
 
	g__dr7
;

783 
	#_STRUCT_X86_DEBUG_STATE64
 
x86_debug_°©e64


	)

784 
	g_STRUCT_X86_DEBUG_STATE64


786 
__uöt64_t
 
	gdr0
;

787 
__uöt64_t
 
	gdr1
;

788 
__uöt64_t
 
	gdr2
;

789 
__uöt64_t
 
	gdr3
;

790 
__uöt64_t
 
	gdr4
;

791 
__uöt64_t
 
	gdr5
;

792 
__uöt64_t
 
	gdr6
;

793 
__uöt64_t
 
	gdr7
;

	@
1
.
1
/usr/include
516
14087
adt/darray.c
adt/darray.h
adt/dict.c
adt/dict.h
adt/hash.c
adt/hash.h
adt/list.c
adt/list.h
adt/radixmap.c
adt/radixmap.h
adt/tst.c
adt/tst.h
bsd_specific.c
bsd_specific.h
bstr/bsafe.c
bstr/bsafe.h
bstr/bstraux.c
bstr/bstraux.h
bstr/bstrlib.c
bstr/bstrlib.h
bstring.h
cache.c
cache.h
config/config.c
config/config.h
config/db.c
config/db.h
config/module.c
config/module.h
connection.c
connection.h
control.c
control.h
dbg.c
dbg.h
dir.c
dir.h
events.h
filter.c
filter.h
handler.c
handler.h
handler_parser.c
handler_parser.h
headers.c
headers.h
host.c
host.h
http11/http11_common.h
http11/http11_parser.c
http11/http11_parser.h
http11/httpclient_parser.c
http11/httpclient_parser.h
io.c
io.h
log.c
log.h
logrotate.c
logrotate.h
mem/align.h
mem/halloc.c
mem/halloc.h
mem/hlist.h
mem/macros.h
mime.c
mime.h
mongrel2.c
pattern.c
pattern.h
polarssl/configs/config-ccm-psk-tls1_2.h
polarssl/configs/config-mini-tls1_1.h
polarssl/configs/config-picocoin.h
polarssl/configs/config-psk-rc4-tls1_0.h
polarssl/configs/config-suite-b.h
polarssl/doxygen/input/doc_encdec.h
polarssl/doxygen/input/doc_hashing.h
polarssl/doxygen/input/doc_mainpage.h
polarssl/doxygen/input/doc_rng.h
polarssl/doxygen/input/doc_ssltls.h
polarssl/doxygen/input/doc_tcpip.h
polarssl/doxygen/input/doc_x509.h
polarssl/include/polarssl/aes.h
polarssl/include/polarssl/aesni.h
polarssl/include/polarssl/arc4.h
polarssl/include/polarssl/asn1.h
polarssl/include/polarssl/asn1write.h
polarssl/include/polarssl/base64.h
polarssl/include/polarssl/bignum.h
polarssl/include/polarssl/blowfish.h
polarssl/include/polarssl/bn_mul.h
polarssl/include/polarssl/camellia.h
polarssl/include/polarssl/ccm.h
polarssl/include/polarssl/certs.h
polarssl/include/polarssl/check_config.h
polarssl/include/polarssl/cipher.h
polarssl/include/polarssl/cipher_wrap.h
polarssl/include/polarssl/compat-1.2.h
polarssl/include/polarssl/config.h
polarssl/include/polarssl/ctr_drbg.h
polarssl/include/polarssl/debug.h
polarssl/include/polarssl/des.h
polarssl/include/polarssl/dhm.h
polarssl/include/polarssl/ecdh.h
polarssl/include/polarssl/ecdsa.h
polarssl/include/polarssl/ecp.h
polarssl/include/polarssl/entropy.h
polarssl/include/polarssl/entropy_poll.h
polarssl/include/polarssl/error.h
polarssl/include/polarssl/gcm.h
polarssl/include/polarssl/havege.h
polarssl/include/polarssl/hmac_drbg.h
polarssl/include/polarssl/md.h
polarssl/include/polarssl/md2.h
polarssl/include/polarssl/md4.h
polarssl/include/polarssl/md5.h
polarssl/include/polarssl/md_wrap.h
polarssl/include/polarssl/memory.h
polarssl/include/polarssl/memory_buffer_alloc.h
polarssl/include/polarssl/net.h
polarssl/include/polarssl/oid.h
polarssl/include/polarssl/openssl.h
polarssl/include/polarssl/padlock.h
polarssl/include/polarssl/pbkdf2.h
polarssl/include/polarssl/pem.h
polarssl/include/polarssl/pk.h
polarssl/include/polarssl/pk_wrap.h
polarssl/include/polarssl/pkcs11.h
polarssl/include/polarssl/pkcs12.h
polarssl/include/polarssl/pkcs5.h
polarssl/include/polarssl/platform.h
polarssl/include/polarssl/ripemd160.h
polarssl/include/polarssl/rsa.h
polarssl/include/polarssl/sha1.h
polarssl/include/polarssl/sha256.h
polarssl/include/polarssl/sha512.h
polarssl/include/polarssl/ssl.h
polarssl/include/polarssl/ssl_cache.h
polarssl/include/polarssl/ssl_ciphersuites.h
polarssl/include/polarssl/threading.h
polarssl/include/polarssl/timing.h
polarssl/include/polarssl/version.h
polarssl/include/polarssl/x509.h
polarssl/include/polarssl/x509_crl.h
polarssl/include/polarssl/x509_crt.h
polarssl/include/polarssl/x509_csr.h
polarssl/include/polarssl/xtea.h
polarssl/library/aes.c
polarssl/library/aesni.c
polarssl/library/arc4.c
polarssl/library/asn1parse.c
polarssl/library/asn1write.c
polarssl/library/base64.c
polarssl/library/bignum.c
polarssl/library/blowfish.c
polarssl/library/camellia.c
polarssl/library/ccm.c
polarssl/library/certs.c
polarssl/library/cipher.c
polarssl/library/cipher_wrap.c
polarssl/library/ctr_drbg.c
polarssl/library/debug.c
polarssl/library/des.c
polarssl/library/dhm.c
polarssl/library/ecdh.c
polarssl/library/ecdsa.c
polarssl/library/ecp.c
polarssl/library/ecp_curves.c
polarssl/library/entropy.c
polarssl/library/entropy_poll.c
polarssl/library/error.c
polarssl/library/gcm.c
polarssl/library/havege.c
polarssl/library/hmac_drbg.c
polarssl/library/md.c
polarssl/library/md2.c
polarssl/library/md4.c
polarssl/library/md5.c
polarssl/library/md_wrap.c
polarssl/library/memory_buffer_alloc.c
polarssl/library/net.c
polarssl/library/oid.c
polarssl/library/padlock.c
polarssl/library/pbkdf2.c
polarssl/library/pem.c
polarssl/library/pk.c
polarssl/library/pk_wrap.c
polarssl/library/pkcs11.c
polarssl/library/pkcs12.c
polarssl/library/pkcs5.c
polarssl/library/pkparse.c
polarssl/library/pkwrite.c
polarssl/library/platform.c
polarssl/library/ripemd160.c
polarssl/library/rsa.c
polarssl/library/sha1.c
polarssl/library/sha256.c
polarssl/library/sha512.c
polarssl/library/ssl_cache.c
polarssl/library/ssl_ciphersuites.c
polarssl/library/ssl_cli.c
polarssl/library/ssl_srv.c
polarssl/library/ssl_tls.c
polarssl/library/threading.c
polarssl/library/timing.c
polarssl/library/version.c
polarssl/library/version_features.c
polarssl/library/x509.c
polarssl/library/x509_create.c
polarssl/library/x509_crl.c
polarssl/library/x509_crt.c
polarssl/library/x509_csr.c
polarssl/library/x509write_crt.c
polarssl/library/x509write_csr.c
polarssl/library/xtea.c
polarssl/programs/aes/aescrypt2.c
polarssl/programs/aes/crypt_and_hash.c
polarssl/programs/hash/generic_sum.c
polarssl/programs/hash/hello.c
polarssl/programs/hash/md5sum.c
polarssl/programs/hash/sha1sum.c
polarssl/programs/hash/sha2sum.c
polarssl/programs/pkey/dh_client.c
polarssl/programs/pkey/dh_genprime.c
polarssl/programs/pkey/dh_server.c
polarssl/programs/pkey/ecdsa.c
polarssl/programs/pkey/gen_key.c
polarssl/programs/pkey/key_app.c
polarssl/programs/pkey/key_app_writer.c
polarssl/programs/pkey/mpi_demo.c
polarssl/programs/pkey/pk_decrypt.c
polarssl/programs/pkey/pk_encrypt.c
polarssl/programs/pkey/pk_sign.c
polarssl/programs/pkey/pk_verify.c
polarssl/programs/pkey/rsa_decrypt.c
polarssl/programs/pkey/rsa_encrypt.c
polarssl/programs/pkey/rsa_genkey.c
polarssl/programs/pkey/rsa_sign.c
polarssl/programs/pkey/rsa_sign_pss.c
polarssl/programs/pkey/rsa_verify.c
polarssl/programs/pkey/rsa_verify_pss.c
polarssl/programs/random/gen_entropy.c
polarssl/programs/random/gen_random_ctr_drbg.c
polarssl/programs/random/gen_random_havege.c
polarssl/programs/ssl/ssl_client1.c
polarssl/programs/ssl/ssl_client2.c
polarssl/programs/ssl/ssl_fork_server.c
polarssl/programs/ssl/ssl_mail_client.c
polarssl/programs/ssl/ssl_pthread_server.c
polarssl/programs/ssl/ssl_server.c
polarssl/programs/ssl/ssl_server2.c
polarssl/programs/test/benchmark.c
polarssl/programs/test/o_p_test.c
polarssl/programs/test/selftest.c
polarssl/programs/test/ssl_cert_test.c
polarssl/programs/test/ssl_test.c
polarssl/programs/util/pem2der.c
polarssl/programs/util/strerror.c
polarssl/programs/wince_main.c
polarssl/programs/x509/cert_app.c
polarssl/programs/x509/cert_req.c
polarssl/programs/x509/cert_write.c
polarssl/programs/x509/crl_app.c
polarssl/programs/x509/req_app.c
polarssl_config.h
proxy.c
proxy.h
register.c
register.h
request.c
request.h
response.c
response.h
routing.c
routing.h
server.c
server.h
setting.c
setting.h
state.c
state.h
superpoll.c
superpoll.h
task/386-ucontext.h
task/amd64-ucontext.h
task/context.c
task/fd.c
task/net.c
task/power-ucontext.h
task/qlock.c
task/rendez.c
task/task.c
task/task.h
task/taskimpl.h
tnetstrings.c
tnetstrings.h
tnetstrings_impl.h
unixy.c
unixy.h
upload.c
upload.h
version.h
websocket.c
websocket.h
xrequest.c
xrequest.h
zmq_compat.h
/usr/include/AvailabilityMacros.h
/usr/include/arpa/inet.h
/usr/include/arpa/nameser_compat.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/dlfcn.h
/usr/include/errno.h
/usr/include/execinfo.h
/usr/include/fcntl.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/machine/endian.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/netinet/tcp.h
/usr/include/openssl/bio.h
/usr/include/openssl/engine.h
/usr/include/openssl/pem.h
/usr/include/openssl/rsa.h
/usr/include/pthread.h
/usr/include/sched.h
/usr/include/signal.h
/usr/include/sqlite3.h
/usr/include/stddef.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/poll.h
/usr/include/sys/resource.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/sys/uio.h
/usr/include/sys/utsname.h
/usr/include/sys/wait.h
/usr/include/time.h
/usr/include/ucontext.h
/usr/include/unistd.h
/usr/include/zlib.h
/usr/include/Availability.h
/usr/include/_structs.h
/usr/include/_types.h
/usr/include/_types/_intmax_t.h
/usr/include/_types/_uint16_t.h
/usr/include/_types/_uint32_t.h
/usr/include/_types/_uint64_t.h
/usr/include/_types/_uint8_t.h
/usr/include/_types/_uintmax_t.h
/usr/include/_xlocale.h
/usr/include/alloca.h
/usr/include/gethostuuid.h
/usr/include/i386/endian.h
/usr/include/machine/_limits.h
/usr/include/machine/_param.h
/usr/include/machine/limits.h
/usr/include/machine/types.h
/usr/include/netinet6/in6.h
/usr/include/openssl/asn1.h
/usr/include/openssl/bn.h
/usr/include/openssl/crypto.h
/usr/include/openssl/dh.h
/usr/include/openssl/dsa.h
/usr/include/openssl/e_os2.h
/usr/include/openssl/ecdh.h
/usr/include/openssl/ecdsa.h
/usr/include/openssl/err.h
/usr/include/openssl/evp.h
/usr/include/openssl/opensslconf.h
/usr/include/openssl/ossl_typ.h
/usr/include/openssl/pem2.h
/usr/include/openssl/rand.h
/usr/include/openssl/stack.h
/usr/include/openssl/store.h
/usr/include/openssl/symhacks.h
/usr/include/openssl/ui.h
/usr/include/openssl/x509.h
/usr/include/pthread_impl.h
/usr/include/runetype.h
/usr/include/secure/_stdio.h
/usr/include/secure/_string.h
/usr/include/stdbool.h
/usr/include/strings.h
/usr/include/sys/_endian.h
/usr/include/sys/_select.h
/usr/include/sys/_types.h
/usr/include/sys/_types/_blkcnt_t.h
/usr/include/sys/_types/_blksize_t.h
/usr/include/sys/_types/_clock_t.h
/usr/include/sys/_types/_ct_rune_t.h
/usr/include/sys/_types/_dev_t.h
/usr/include/sys/_types/_errno_t.h
/usr/include/sys/_types/_fd_clr.h
/usr/include/sys/_types/_fd_copy.h
/usr/include/sys/_types/_fd_def.h
/usr/include/sys/_types/_fd_isset.h
/usr/include/sys/_types/_fd_set.h
/usr/include/sys/_types/_fd_setsize.h
/usr/include/sys/_types/_fd_zero.h
/usr/include/sys/_types/_filesec_t.h
/usr/include/sys/_types/_fsblkcnt_t.h
/usr/include/sys/_types/_fsfilcnt_t.h
/usr/include/sys/_types/_gid_t.h
/usr/include/sys/_types/_id_t.h
/usr/include/sys/_types/_in_addr_t.h
/usr/include/sys/_types/_in_port_t.h
/usr/include/sys/_types/_ino64_t.h
/usr/include/sys/_types/_ino_t.h
/usr/include/sys/_types/_int16_t.h
/usr/include/sys/_types/_int32_t.h
/usr/include/sys/_types/_int64_t.h
/usr/include/sys/_types/_int8_t.h
/usr/include/sys/_types/_intptr_t.h
/usr/include/sys/_types/_iovec_t.h
/usr/include/sys/_types/_key_t.h
/usr/include/sys/_types/_mach_port_t.h
/usr/include/sys/_types/_mode_t.h
/usr/include/sys/_types/_nlink_t.h
/usr/include/sys/_types/_null.h
/usr/include/sys/_types/_off_t.h
/usr/include/sys/_types/_pid_t.h
/usr/include/sys/_types/_pthread_attr_t.h
/usr/include/sys/_types/_pthread_cond_t.h
/usr/include/sys/_types/_pthread_condattr_t.h
/usr/include/sys/_types/_pthread_key_t.h
/usr/include/sys/_types/_pthread_mutex_t.h
/usr/include/sys/_types/_pthread_mutexattr_t.h
/usr/include/sys/_types/_pthread_once_t.h
/usr/include/sys/_types/_pthread_rwlock_t.h
/usr/include/sys/_types/_pthread_rwlockattr_t.h
/usr/include/sys/_types/_pthread_t.h
/usr/include/sys/_types/_ptrdiff_t.h
/usr/include/sys/_types/_rsize_t.h
/usr/include/sys/_types/_rune_t.h
/usr/include/sys/_types/_s_ifmt.h
/usr/include/sys/_types/_sa_family_t.h
/usr/include/sys/_types/_sigset_t.h
/usr/include/sys/_types/_size_t.h
/usr/include/sys/_types/_socklen_t.h
/usr/include/sys/_types/_ssize_t.h
/usr/include/sys/_types/_suseconds_t.h
/usr/include/sys/_types/_time_t.h
/usr/include/sys/_types/_timespec.h
/usr/include/sys/_types/_timeval.h
/usr/include/sys/_types/_uid_t.h
/usr/include/sys/_types/_uintptr_t.h
/usr/include/sys/_types/_useconds_t.h
/usr/include/sys/_types/_uuid_t.h
/usr/include/sys/_types/_va_list.h
/usr/include/sys/_types/_wchar_t.h
/usr/include/sys/_types/_wint_t.h
/usr/include/sys/appleapiopts.h
/usr/include/sys/cdefs.h
/usr/include/sys/dirent.h
/usr/include/sys/errno.h
/usr/include/sys/fcntl.h
/usr/include/sys/select.h
/usr/include/sys/signal.h
/usr/include/sys/syslimits.h
/usr/include/sys/ucontext.h
/usr/include/sys/unistd.h
/usr/include/xlocale/_ctype.h
/usr/include/xlocale/_inttypes.h
/usr/include/xlocale/_stdio.h
/usr/include/xlocale/_stdlib.h
/usr/include/xlocale/_string.h
/usr/include/xlocale/_time.h
/usr/include/zconf.h
/usr/include/AvailabilityInternal.h
/usr/include/i386/_limits.h
/usr/include/i386/_param.h
/usr/include/i386/limits.h
/usr/include/i386/types.h
/usr/include/libkern/_OSByteOrder.h
/usr/include/machine/_mcontext.h
/usr/include/machine/_types.h
/usr/include/machine/signal.h
/usr/include/openssl/buffer.h
/usr/include/openssl/ebcdic.h
/usr/include/openssl/ec.h
/usr/include/openssl/lhash.h
/usr/include/openssl/objects.h
/usr/include/openssl/opensslv.h
/usr/include/openssl/pkcs7.h
/usr/include/openssl/safestack.h
/usr/include/openssl/sha.h
/usr/include/openssl/x509_vfy.h
/usr/include/secure/_common.h
/usr/include/sys/_posix_availability.h
/usr/include/sys/_structs.h
/usr/include/sys/_symbol_aliasing.h
/usr/include/sys/_types/_o_dsync.h
/usr/include/sys/_types/_o_sync.h
/usr/include/sys/_types/_posix_vdisable.h
/usr/include/sys/_types/_seek_set.h
/usr/include/sys/_types/_sigaltstack.h
/usr/include/sys/_types/_ucontext.h
/usr/include/i386/_mcontext.h
/usr/include/i386/_types.h
/usr/include/i386/signal.h
/usr/include/libkern/i386/_OSByteOrder.h
/usr/include/machine/_structs.h
/usr/include/openssl/obj_mac.h
/usr/include/sys/_types/___offsetof.h
/usr/include/sys/_types/_timeval32.h
/usr/include/sys/_types/_ucontext64.h
/usr/include/i386/_structs.h
/usr/include/mach/i386/_structs.h
